{"config":{"lang":["ro","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Agen\u021bia de Guvernare Electronic\u0103","text":""},{"location":"#cine-suntem","title":"Cine suntem?","text":"<p>Agen\u021bia de Guvernare Electronic\u0103 (AGE) este institu\u021bia public\u0103 \u00een subordinea Guvernului, creat\u0103 \u00een 2010, care urm\u0103re\u015fte beneficiul public prin aplicarea Tehnologiilor Informa\u0163ionale \u015fi de Comunica\u0163ii \u00een vederea \u00eembun\u0103t\u0103\u021birii calit\u0103\u021bii vie\u021bii cet\u0103\u021benilor, inclusiv prin modernizarea serviciilor publice electronice. AGE este promotorul principal al e-Guvern\u0103rii \u015fi al ini\u0163iativelor de transformare sectorial\u0103, func\u021bion\u00e2nd ca un catalizator al interac\u021biunii dintre Guvern \u0219i cet\u0103\u021beni prin platforme \u0219i tehnologii electronice inteligente. </p>"},{"location":"#ce-facem","title":"Ce facem?","text":"<p>AGE asigur\u0103:</p> <ul> <li>eficientizarea guvern\u0103rii prin tehnologie  </li> <li>coordonarea \u0219i implementarea strategiilor \u0219i politicilor publice   \u00een domeniul transform\u0103rii digitale  </li> <li>modernizarea tehnologic\u0103 a serviciilor publice  </li> <li>transformarea digital\u0103 a administra\u021biei publice  </li> <li>dezvoltarea societ\u0103\u021bii informa\u021bionale</li> </ul>"},{"location":"#care-sunt-obiectivele-noastre","title":"Care sunt obiectivele noastre?","text":"<p>AGE pune \u00een centrul activit\u0103\u021bilor sale cet\u0103\u021beanul \u0219i beneficiile acestuia ca urmare a interac\u021biunii online cu institu\u021biile statului: reducerea birocra\u021biei; minimizarea costurilor; eliminarea h\u00e2rtiei; mai mult\u0103 transparen\u021b\u0103; sporirea performan\u021bei \u0219i calit\u0103\u021bii serviciilor publice; productivitate mai \u00eenalt\u0103 a proceselor; economisirea timpului,accesibilitate pentru toate grupurile de cet\u0103\u021beni, acces la informa\u021bii de la autorit\u0103\u021bi, operarea pl\u0103\u021bilor reciproce; nivel de siguran\u021b\u0103 avansat; mijloace electronice mereu disponibile pentru exprimarea opiniilor, depunerea reclama\u021biilor \u0219i peti\u021biilor \u0219i exercitarea tuturor drepturilor civile \u00een regim online. </p> <p>Principiie de care ne conducem: Centrare pe cet\u0103\u021bean - Simplificare \u0219i standardizare - Utilizarea solu\u021biilor TIC</p> <p>e-Servicii \u00eenseamn\u0103:</p> <p>Servicii oferite cet\u0103\u021benilor de c\u0103tre institu\u021biile statului, prin intermediul tehnologiilor informa\u021bionale. Principalele avantaje pe care le prezint\u0103 accesarea online a serviciilor sunt rapiditatea \u0219i accesibilitatea. Serviciile publice online permit accesarea imediat\u0103 a informa\u021biilor \u0219i disponibilitatea acestora oric\u0103rei persoane care dispune de acces la internet.</p>"},{"location":"#moldova-digitala","title":"Moldova digital\u0103","text":"<p>pe care o edific\u0103 pas cu pas echipa AGE \u00eenseamn\u0103:</p> <ul> <li>reg\u00e2ndirea proceselor</li> <li>simplificarea procedurilor</li> <li>eliminarea documentelor \u0219i serviciilor dep\u0103\u0219ite</li> <li>revizuirea cadrului normativ</li> <li>ra\u021bionalizarea prin consultare \u0219i implicare a cet\u0103\u021benilor</li> <li>automatizarea proceselor</li> <li>integrarea sistemelor</li> <li>schimbul de date</li> <li>multiplicarea canalelor de interac\u021biune</li> <li>crearea platformelor electronice</li> </ul>"},{"location":"architecture/","title":"Principii arhitecturale","text":"<p>Despre elementele arhitecturale utilizate \u00een produsele AGE</p>"},{"location":"architecture/rest/","title":"Standardul REST","text":"<p>Descrierea standardului rest</p>"},{"location":"architecture/soap/","title":"Standardul Soap","text":"<p>Descrierea standardului soap</p>"},{"location":"architecture/devops/","title":"DevOps","text":"<p>Despre elementele DevOps utilizate la AGE</p>"},{"location":"architecture/devops/helm/","title":"Helm","text":"<p>Exemplu Helm</p>"},{"location":"fod/","title":"FOD - FrontOffice Digitization","text":""},{"location":"fod/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>FOD (FrontOffice Digitization) reprezint\u0103 o bibliotec\u0103 comprehensiv\u0103 de componente Blazor dezvoltat\u0103 special pentru serviciile digitale guvernamentale din Republica Moldova. Aceast\u0103 platform\u0103 ofer\u0103 o colec\u021bie standardizat\u0103 de componente UI reutilizabile, asigur\u00e2nd consisten\u021b\u0103 vizual\u0103 \u0219i func\u021bional\u0103 \u00een toate aplica\u021biile guvernamentale digitale.</p>"},{"location":"fod/#obiectiv-principal","title":"Obiectiv Principal","text":"<p>FOD urm\u0103re\u0219te s\u0103 accelereze dezvoltarea serviciilor publice digitale prin: - Standardizarea interfe\u021belor utilizator pentru toate platformele guvernamentale - Reducerea timpului de dezvoltare prin componente pre-construite - Asigurarea conformit\u0103\u021bii cu standardele de accesibilitate - Integrarea nativ\u0103 cu serviciile guvernamentale existente (MPass, MPay, MDelivery)</p>"},{"location":"fod/#arhitectura-si-componente","title":"Arhitectur\u0103 \u0219i Componente","text":""},{"location":"fod/#structura-proiectului","title":"Structura Proiectului","text":"<p>Biblioteca FOD este organizat\u0103 modular:</p> <ul> <li>FOD.Components - Nucleul bibliotecii cu toate componentele Blazor</li> <li>Fod.Integrations - Module de integrare pentru servicii guvernamentale:</li> <li>MPass - Autentificare unificat\u0103</li> <li>MPay - Pl\u0103\u021bi electronice guvernamentale</li> <li>MDelivery - Livrare electronic\u0103 a documentelor</li> <li>MNotify - Sistem de notific\u0103ri</li> <li>MLog - Jurnal electronic unificat</li> <li>FOD.EntityFramework - Suport pentru accesul la date</li> </ul>"},{"location":"fod/#categorii-de-componente","title":"Categorii de Componente","text":""},{"location":"fod/#1-elemente-de-formular-inputs","title":"1. Elemente de Formular (<code>Inputs/</code>)","text":"<ul> <li>FodInput - C\u00e2mpuri de text cu validare integrat\u0103</li> <li>FodSelect - Liste derulante cu suport</li> <li>FodDatePicker - Selector de dat\u0103 cu localizare</li> <li>FodCheckbox - Casete de bifare accesibile</li> <li>FodRadio - Butoane radio grupate</li> <li>FodTextArea - Zone de text expandabile</li> <li>FodFileUpload - \u00cenc\u0103rcare fi\u0219iere cu validare</li> </ul>"},{"location":"fod/#2-layout-si-structura-layout","title":"2. Layout \u0219i Structur\u0103 (<code>Layout/</code>)","text":"<ul> <li>FodContainer - Container responsive pentru con\u021binut</li> <li>FodGrid - Sistem grid flexibil cu 12 coloane</li> <li>FodHeader - Antet standardizat pentru aplica\u021bii</li> <li>FodFooter - Subsol cu informa\u021bii institu\u021bionale</li> <li>FodSidebar - Bar\u0103 lateral\u0103 pentru navigare</li> </ul>"},{"location":"fod/#3-navigare-navigation","title":"3. Navigare (<code>Navigation/</code>)","text":"<ul> <li>FodMenu - Meniu principal cu subnivele</li> <li>FodDrawer - Panou lateral glisant</li> <li>FodTabs - Navigare prin tab-uri</li> <li>FodBreadcrumb - Indicare pozi\u021bie \u00een ierarhie</li> <li>FodPagination - Navigare prin pagini</li> </ul>"},{"location":"fod/#4-afisare-date-datadisplay","title":"4. Afi\u0219are Date (<code>DataDisplay/</code>)","text":"<ul> <li>FodDataTable - Tabel avansat cu sortare \u0219i filtrare</li> <li>FodBadge - Etichete pentru status</li> <li>FodChip - Elemente informative compacte</li> <li>FodCard - Carduri pentru grupare con\u021binut</li> <li>FodList - Liste structurate de informa\u021bii</li> </ul>"},{"location":"fod/#5-feedback-feedback","title":"5. Feedback (<code>Feedback/</code>)","text":"<ul> <li>FodAlert - Mesaje de alert\u0103 contextualizate</li> <li>FodNotification - Notific\u0103ri non-intruzive</li> <li>FodProgress - Bare de progres</li> <li>FodSkeleton - Placeholder-e pentru \u00eenc\u0103rcare</li> <li>FodTooltip - Indicii contextuale</li> </ul>"},{"location":"fod/#caracteristici-tehnice","title":"Caracteristici Tehnice","text":""},{"location":"fod/#stilizare-si-tematizare","title":"Stilizare \u0219i Tematizare","text":"<ul> <li>Arhitectur\u0103 SCSS modular\u0103 \u00een <code>wwwroot/scss/</code></li> <li>Variabile CSS pentru personalizare rapid\u0103</li> <li>Suport pentru teme light/dark</li> <li>Design responsive pentru toate dispozitivele</li> </ul>"},{"location":"fod/#interoperabilitate-javascript","title":"Interoperabilitate JavaScript","text":"<ul> <li>Bibliotec\u0103 JavaScript minimizat\u0103 (<code>FodComponents.min.js</code>)</li> <li>Func\u021bionalit\u0103\u021bi avansate pentru tooltips, popovers, drawer-e</li> <li>API JavaScript pentru integr\u0103ri custom</li> </ul>"},{"location":"fod/#localizare-completa","title":"Localizare Complet\u0103","text":"<p>FOD suport\u0103 trei limbi oficial: - Rom\u00e2n\u0103 - Limba principal\u0103 - Rus\u0103 - Pentru minoritatea vorbitoare de rus\u0103 - Englez\u0103 - Pentru contexte interna\u021bionale</p> <p>Toate componentele \u0219i mesajele sunt traduse automat bazat pe cultura curent\u0103.</p>"},{"location":"fod/#performanta-si-optimizare","title":"Performan\u021b\u0103 \u0219i Optimizare","text":"<ul> <li>Componente lazy-loaded pentru \u00eenc\u0103rcare rapid\u0103</li> <li>Bundle-uri optimizate pentru produc\u021bie</li> <li>Caching inteligent pentru resurse statice</li> </ul>"},{"location":"fod/#integrari-guvernamentale","title":"Integr\u0103ri Guvernamentale","text":""},{"location":"fod/#mpass-autentificare-unificata","title":"MPass - Autentificare Unificat\u0103","text":"<p>Integrare complet\u0103 cu sistemul na\u021bional de autentificare:</p>"},{"location":"fod/#mpay-plati-electronice","title":"MPay - Pl\u0103\u021bi Electronice","text":"<p>Procesare securizat\u0103 a pl\u0103\u021bilor guvernamentale</p>"},{"location":"fod/#mdelivery-livrare-electronica","title":"MDelivery - Livrare Electronic\u0103","text":"<p>Distribu\u021bie digital\u0103 a documentelor oficiale:</p>"},{"location":"fod/#distributie","title":"Distribu\u021bie","text":""},{"location":"fod/#nuget-package","title":"NuGet Package","text":"<p>FOD este disponibil ca pachet NuGet la solicitare: <pre><code>&lt;PackageReference Include=\"FOD.Components\" Version=\"8.2.156\" /&gt;\n</code></pre></p>"},{"location":"fod/#cicd-pipeline","title":"CI/CD Pipeline","text":"<ul> <li>Build automat pe fiecare commit</li> <li>Publicare automat\u0103 pe Azure DevOps Artifacts</li> </ul>"},{"location":"fod/#documentatie-si-resurse","title":"Documenta\u021bie \u0219i Resurse","text":""},{"location":"fod/#site-documentatie","title":"Site Documenta\u021bie","text":"<p>Documenta\u021bia complet\u0103 cu exemple interactive este disponibil\u0103 la: \ud83d\udc49 https://egov-moldova.github.io/fod/site/</p>"},{"location":"fod/#structura-documentatiei","title":"Structura Documenta\u021biei","text":"<p>Fiecare component\u0103 include: - Descriere detaliat\u0103 a func\u021bionalit\u0103\u021bii - Exemple de cod interactive - API reference complet - Ghid de stil \u0219i best practices - Cazuri de utilizare comune</p>"},{"location":"fod/#suport-si-comunitate","title":"Suport \u0219i Comunitate","text":""},{"location":"fod/#canale-de-suport","title":"Canale de Suport","text":"<ul> <li>Email - support@egov.md pentru asisten\u021b\u0103 oficial\u0103</li> </ul>"},{"location":"fod/#versiuni-suportate","title":"Versiuni Suportate","text":"<ul> <li>v8.x - Versiune curent\u0103 cu suport activ</li> </ul>"},{"location":"fod/#roadmap","title":"Roadmap","text":""},{"location":"fod/#planificat-pentru-v100","title":"Planificat pentru v10.0","text":"<ul> <li>Migrare la .NET 10</li> <li>\u00cembun\u0103t\u0103\u021biri performan\u021b\u0103 WebAssembly</li> </ul>"},{"location":"fod/#viziune-pe-termen-lung","title":"Viziune pe Termen Lung","text":"<ul> <li>Generator automat de aplica\u021bii CRUD</li> <li>Integrare cu toate serviciile AGE</li> </ul>"},{"location":"fod/#licenta","title":"Licen\u021b\u0103","text":"<p>FOD este licen\u021biat sub MIT License, permi\u021b\u00e2nd utilizare liber\u0103 \u00een proiecte guvernamentale \u0219i comerciale.</p> <p>FOD - Construind viitorul digital al Moldovei, o component\u0103 la un moment dat.</p>"},{"location":"fod/aplicatia/","title":"Introducere","text":"<p>\u00cen acest compartiment va fi descris procesul de creare a unei aplica\u021bii pentru un serviciu utiliz\u00e2nd componentele FOD.</p> <p>Acest articol poate fi folosit at\u00e2t ca ghid, c\u00e2t \u0219i ca documenta\u021bie pentru unele procese care au loc \u00een procesul de creare a unui serviciu digital.</p> <p>Pentru a \u00eencepe, este important s\u0103 \u00een\u021belegem c\u0103 unele componente FOD sunt construite din mai multe p\u0103r\u021bi logice care urmeaz\u0103 a fi configurate corespunz\u0103tor.</p> <p>Componentele FOD pot fi utilizate at\u00e2t \u00eentr-un proiect deja existent, c\u00e2t \u0219i \u00eentr-un proiect creat de la zero.</p>"},{"location":"fod/aplicatia/#instrumente-necesare","title":"Instrumente necesare","text":"<p>Pentru acest ghid vor fi utilizate urm\u0103toarele instrumente:</p> <ul> <li>.NET SDK x64 Versiunea 8</li> <li>Visual Studio Code</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/","title":"FodInputControl","text":""},{"location":"fod/aplicatia/FodInputControl/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputControl</code> este o component\u0103 wrapper fundamental\u0103 pentru input-uri \u00een FOD, oferind o structur\u0103 consistent\u0103 pentru label, helper text, mesaje de eroare \u0219i counter-uri. Aceast\u0103 component\u0103 standardizeaz\u0103 aspectul \u0219i comportamentul tuturor input-urilor din aplica\u021bie, asigur\u00e2nd o experien\u021b\u0103 uniform\u0103 pentru utilizatori.</p>"},{"location":"fod/aplicatia/FodInputControl/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Layout consistent - Structur\u0103 uniform\u0103 pentru toate input-urile</li> <li>Label floating - Label animat care se ridic\u0103 c\u00e2nd input-ul are valoare</li> <li>Helper text - Text ajut\u0103tor cu op\u021biune de afi\u0219are doar la focus</li> <li>Erori \u0219i validare - Afi\u0219are mesaje de eroare cu stil dedicat</li> <li>Counter text - Afi\u0219are num\u0103r caractere pentru input-uri cu limit\u0103</li> <li>Variante vizuale - Suport pentru Text, Filled \u0219i Outlined</li> <li>Accesibilitate - Atribute ARIA corecte pentru screen readers</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodInputControl Label=\"Nume utilizator\" \n                 HelperText=\"Minim 3 caractere\"\n                 Required=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>InputContent</code> <code>RenderFragment</code> - Con\u021binutul input-ului (c\u00e2mpul propriu-zis) <code>Label</code> <code>string</code> - Eticheta pentru input <code>HelperText</code> <code>string</code> - Text ajut\u0103tor afi\u0219at sub input <code>HelperTextOnFocus</code> <code>bool</code> <code>false</code> Afi\u0219eaz\u0103 helper text doar la focus <code>Error</code> <code>bool</code> <code>false</code> Indic\u0103 stare de eroare <code>ErrorText</code> <code>string</code> - Mesajul de eroare afi\u0219at <code>ErrorId</code> <code>string</code> - ID pentru aria-describedby <code>CounterText</code> <code>string</code> - Text pentru counter (ex: \"10/100\") <code>Required</code> <code>bool</code> <code>false</code> Marcheaz\u0103 c\u00e2mpul ca obligatoriu <code>FullWidth</code> <code>bool</code> <code>false</code> Ocup\u0103 toat\u0103 l\u0103\u021bimea containerului <code>Variant</code> <code>FodVariant</code> <code>Text</code> Stilul vizual (Text, Filled, Outlined) <code>Margin</code> <code>Margin</code> <code>None</code> Spa\u021biere vertical\u0103 <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 input-ul <code>ForId</code> <code>string</code> - ID-ul input-ului pentru label <code>ChildContent</code> <code>RenderFragment</code> - Con\u021binut adi\u021bional <code>Class</code> <code>string</code> - Clase CSS adi\u021bionale <code>Style</code> <code>string</code> - Stiluri inline <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> - Atribute HTML adi\u021bionale"},{"location":"fod/aplicatia/FodInputControl/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/aplicatia/FodInputControl/#input-control-cu-toate-functionalitatile","title":"Input Control cu Toate Func\u021bionalit\u0103\u021bile","text":"<pre><code>&lt;FodInputControl Label=\"Email\" \n                 HelperText=\"Introduce\u021bi adresa de email valid\u0103\"\n                 Error=\"@hasError\"\n                 ErrorText=\"@errorMessage\"\n                 ErrorId=\"email-error\"\n                 CounterText=\"@($\"{email?.Length ?? 0}/50\")\"\n                 Required=\"true\"\n                 FullWidth=\"true\"\n                 Variant=\"FodVariant.Outlined\"\n                 ForId=\"email-input\"&gt;\n    &lt;InputContent&gt;\n        &lt;input id=\"email-input\" \n               type=\"email\" \n               class=\"fod-input\" \n               @bind=\"email\"\n               @oninput=\"ValidateEmail\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string email;\n    private bool hasError;\n    private string errorMessage;\n\n    private void ValidateEmail(ChangeEventArgs e)\n    {\n        email = e.Value?.ToString();\n        if (string.IsNullOrEmpty(email))\n        {\n            hasError = true;\n            errorMessage = \"Email-ul este obligatoriu\";\n        }\n        else if (!email.Contains(\"@\"))\n        {\n            hasError = true;\n            errorMessage = \"Email invalid\";\n        }\n        else\n        {\n            hasError = false;\n            errorMessage = null;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#variante-vizuale","title":"Variante Vizuale","text":"<pre><code>&lt;!-- Variant Text (implicit) --&gt;\n&lt;FodInputControl Label=\"Text Input\" Variant=\"FodVariant.Text\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Variant Filled --&gt;\n&lt;FodInputControl Label=\"Filled Input\" Variant=\"FodVariant.Filled\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Variant Outlined --&gt;\n&lt;FodInputControl Label=\"Outlined Input\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#helper-text-cu-focus","title":"Helper Text cu Focus","text":"<pre><code>&lt;FodInputControl Label=\"Parol\u0103\" \n                 HelperText=\"Minim 8 caractere, o majuscul\u0103 \u0219i o cifr\u0103\"\n                 HelperTextOnFocus=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"password\" \n               class=\"fod-input\" \n               @onfocus=\"ShowHelper\"\n               @onblur=\"HideHelper\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private void ShowHelper() =&gt; StateHasChanged();\n    private void HideHelper() =&gt; StateHasChanged();\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#input-cu-counter","title":"Input cu Counter","text":"<pre><code>&lt;FodInputControl Label=\"Descriere\" \n                 CounterText=\"@($\"{description?.Length ?? 0}/{maxLength}\")\"&gt;\n    &lt;InputContent&gt;\n        &lt;textarea class=\"fod-input\" \n                  @bind=\"description\"\n                  maxlength=\"@maxLength\"&gt;&lt;/textarea&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string description;\n    private int maxLength = 500;\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#input-control-cu-validare-in-editform","title":"Input Control cu Validare \u00een EditForm","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodInputControl Label=\"Nume complet\" \n                     Required=\"true\"\n                     Error=\"@(editContext.GetValidationMessages(() =&gt; model.FullName).Any())\"\n                     ErrorText=\"@(editContext.GetValidationMessages(() =&gt; model.FullName).FirstOrDefault())\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;InputText @bind-Value=\"model.FullName\" \n                      class=\"fod-input\" \n                      id=\"fullname-input\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel model = new();\n    private EditContext editContext;\n\n    protected override void OnInitialized()\n    {\n        editContext = new EditContext(model);\n    }\n\n    public class UserModel\n    {\n        [Required(ErrorMessage = \"Numele este obligatoriu\")]\n        [MinLength(3, ErrorMessage = \"Numele trebuie s\u0103 aib\u0103 minim 3 caractere\")]\n        public string FullName { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#input-control-dezactivat","title":"Input Control Dezactivat","text":"<pre><code>&lt;FodInputControl Label=\"ID Utilizator\" \n                 HelperText=\"Generat automat\"\n                 Disabled=\"true\"\n                 Variant=\"FodVariant.Filled\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" \n               class=\"fod-input\" \n               value=\"USR-12345\" \n               disabled /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#grupare-input-controls","title":"Grupare Input Controls","text":"<pre><code>&lt;div class=\"form-section\"&gt;\n    &lt;h3&gt;Informa\u021bii personale&lt;/h3&gt;\n\n    &lt;FodInputControl Label=\"Prenume\" \n                     Required=\"true\"\n                     Margin=\"Margin.Normal\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"text\" class=\"fod-input\" @bind=\"firstName\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodInputControl Label=\"Nume\" \n                     Required=\"true\"\n                     Margin=\"Margin.Normal\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"text\" class=\"fod-input\" @bind=\"lastName\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodInputControl Label=\"Data na\u0219terii\" \n                     HelperText=\"Format: DD/MM/YYYY\"\n                     Margin=\"Margin.Normal\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"date\" class=\"fod-input\" @bind=\"birthDate\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n&lt;/div&gt;\n\n@code {\n    private string firstName;\n    private string lastName;\n    private DateTime? birthDate;\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#input-control-cu-continut-personalizat","title":"Input Control cu Con\u021binut Personalizat","text":"<pre><code>&lt;FodInputControl Label=\"Selecta\u021bi fi\u0219ier\" \n                 HelperText=\"Maxim 5MB, formate: PDF, DOC, DOCX\"&gt;\n    &lt;InputContent&gt;\n        &lt;div class=\"file-input-wrapper\"&gt;\n            &lt;input type=\"file\" \n                   id=\"file-input\" \n                   class=\"d-none\"\n                   @onchange=\"HandleFileSelected\" /&gt;\n            &lt;FodButton OnClick=\"() =&gt; fileInput.Click()\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Upload\" /&gt;\n                Alege fi\u0219ier\n            &lt;/FodButton&gt;\n            @if (!string.IsNullOrEmpty(fileName))\n            {\n                &lt;span class=\"ms-2\"&gt;@fileName&lt;/span&gt;\n            }\n        &lt;/div&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string fileName;\n    private ElementReference fileInput;\n\n    private void HandleFileSelected(ChangeEventArgs e)\n    {\n        // Logic\u0103 pentru procesare fi\u0219ier\n    }\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#input-control-pentru-componente-fod","title":"Input Control pentru Componente FOD","text":"<pre><code>&lt;!-- Cu FodTextField --&gt;\n&lt;FodInputControl Label=\"Telefon\" \n                 HelperText=\"Format: +373 XX XXX XXX\"\n                 Variant=\"FodVariant.Outlined\"&gt;\n    &lt;InputContent&gt;\n        &lt;FodInput1 @bind-Value=\"phoneNumber\" \n                  Mask=\"@(new PatternMask(\"+373 00 000 000\"))\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Cu FodSelect --&gt;\n&lt;FodInputControl Label=\"\u021aara\" Required=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;FodSelect @bind-Value=\"selectedCountry\"&gt;\n            &lt;FodSelectItem Value=\"MD\"&gt;Moldova&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"RO\"&gt;Rom\u00e2nia&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"UA\"&gt;Ucraina&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#stilizare","title":"Stilizare","text":""},{"location":"fod/aplicatia/FodInputControl/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>/* Container principal */\n.fod-input-control\n.fod-input-control-full-width /* Full width */\n.fod-input-control-margin-none/normal/dense /* Margin */\n.fod-input-required /* C\u00e2mp obligatoriu */\n.fod-input-error /* Stare de eroare */\n\n/* Container input */\n.fod-input-control-input-container\n\n/* Helper container */\n.fod-input-control-helper-container\n.px-1 /* Pentru Filled */\n.px-2 /* Pentru Outlined */\n\n/* Helper text */\n.fod-input-helper-text\n.fod-input-helper-onfocus /* Vizibil doar la focus */\n\n/* Label */\n.fod-input-label-inputcontrol\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#personalizare-css","title":"Personalizare CSS","text":"<pre><code>/* Stil pentru required */\n.fod-input-required .fod-input-label-inputcontrol:after {\n    content: \" *\";\n    color: var(--fod-palette-error-main);\n}\n\n/* Anima\u021bie pentru label */\n.fod-input-control .fod-input-label-inputcontrol {\n    transition: all 0.2s ease-out;\n}\n\n/* Helper text stilizat */\n.fod-input-helper-text {\n    font-size: 0.75rem;\n    margin-top: 3px;\n    color: var(--fod-palette-text-secondary);\n}\n\n/* Error state */\n.fod-input-error .fod-input-helper-text {\n    color: var(--fod-palette-error-main);\n}\n\n/* Counter aliniere */\n.fod-input-control-helper-container .ms-auto {\n    font-size: 0.75rem;\n    color: var(--fod-palette-text-disabled);\n}\n</code></pre>"},{"location":"fod/aplicatia/FodInputControl/#integrare-cu-componente-fod","title":"Integrare cu Componente FOD","text":"<p>FodInputControl este folosit intern de majoritatea componentelor de input FOD: - FodTextField - FodSelect - FodDatePicker - FodAutocomplete - \u0218i altele</p>"},{"location":"fod/aplicatia/FodInputControl/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi Label descriptiv - Ajut\u0103 utilizatorii \u0219i screen readers</li> <li>HelperText util - Oferi\u021bi indicii clare despre format sau cerin\u021be</li> <li>Erori specifice - Mesaje clare despre ce este gre\u0219it</li> <li>ForId pentru accesibilitate - Asocia\u021bi label cu input</li> <li>Variant consistent - Men\u021bine\u021bi acela\u0219i stil \u00een aplica\u021bie</li> <li>Required vizual - Indica\u021bi clar c\u00e2mpurile obligatorii</li> </ol>"},{"location":"fod/aplicatia/FodInputControl/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Label asociat corect cu input prin <code>for</code> \u0219i <code>id</code></li> <li>Mesaje de eroare anun\u021bate prin <code>aria-describedby</code></li> <li>Stare dezactivat\u0103 comunicat\u0103 corect</li> <li>Suport complet pentru navigare cu tastatura</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/aplicatia/FodInputControl/#label-ul-nu-se-ridica","title":"Label-ul nu se ridic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 input-ul are clasele CSS corecte</li> <li>Verifica\u021bi c\u0103 Variant este setat corect</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/#helper-text-nu-apare-la-focus","title":"Helper text nu apare la focus","text":"<ul> <li>Seta\u021bi <code>HelperTextOnFocus=\"true\"</code></li> <li>Verifica\u021bi evenimentele focus/blur pe input</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/#counter-nu-se-actualizeaza","title":"Counter nu se actualizeaz\u0103","text":"<ul> <li>Actualiza\u021bi manual CounterText \u00een evenimentele input</li> <li>Folosi\u021bi binding two-way pentru valoare</li> </ul>"},{"location":"fod/aplicatia/FodInputControl/#concluzie","title":"Concluzie","text":"<p>FodInputControl este funda\u021bia sistemului de input-uri \u00een FOD, oferind o structur\u0103 consistent\u0103 \u0219i func\u021bionalit\u0103\u021bi complete pentru toate tipurile de c\u00e2mpuri. Folosirea sa asigur\u0103 o experien\u021b\u0103 uniform\u0103 \u0219i profesional\u0103 \u00een \u00eentreaga aplica\u021bie.</p>"},{"location":"fod/aplicatia/achitare/","title":"Pasul de achitare a serviciului","text":"<p>Acest pas intervine dup\u0103 confirmarea datelor \u0219i este activ doar dac\u0103 serviciul necesit\u0103 achitare. Exist\u0103 situa\u021bii \u00een care anumite servicii sunt oferite gratuit, caz \u00een care acest pas este omis automat.</p>"},{"location":"fod/aplicatia/achitare/#redirectionarea-catre-mpay","title":"Redirec\u021bionarea c\u0103tre MPay","text":"<p>Dac\u0103 serviciul necesit\u0103 plat\u0103, utilizatorul este redirec\u021bionat c\u0103tre portalul MPay pentru a efectua achitarea. MPay este platforma guvernamental\u0103 unificat\u0103 pentru pl\u0103\u021bi online.</p> <p>\ud83d\udd04 Redirec\u021bionarea este automat\u0103 \u0219i face parte din procesul standard integrat de FOD pentru pl\u0103\u021bi.</p>"},{"location":"fod/aplicatia/achitare/#situatii-particulare","title":"Situa\u021bii particulare","text":"<ul> <li> <p>Prestatorii cu integrare proprie \u00een MPay:</p> </li> <li> <p>Dac\u0103 solicitarea este procesat\u0103 \u00eentr-un backoffice extern, Frontoffice-ul NU trebuie s\u0103 fie integrat cu MPay;</p> </li> <li> <p>\u00cen acest caz, dezvoltatorul trebuie s\u0103 se asigure c\u0103 redirec\u021bionarea c\u0103tre MPay include toate numerele comenzilor relevante (ex: solicitare de baz\u0103, apostilare, livrare) pentru ca MPay s\u0103 genereze o singur\u0103 not\u0103 de plat\u0103.</p> </li> <li> <p>Procesarea pl\u0103\u021bii de c\u0103tre Frontoffice:</p> </li> <li> <p>\u00cen acest caz, c\u0103tre MPay se va transmite num\u0103rul solicit\u0103rii FOD;</p> </li> <li> <p>Procesarea pl\u0103\u021bii de c\u0103tre sistemul prestatorului:</p> </li> <li> <p>Se va transmite c\u0103tre MPay num\u0103rul de \u00eenregistrare al solicit\u0103rii \u00een sistemul prestatorului de servicii.</p> </li> </ul>"},{"location":"fod/aplicatia/achitare/#responsabilitatea-dezvoltatorului","title":"Responsabilitatea dezvoltatorului","text":"<ul> <li>Asigurarea unei redirec\u021bion\u0103ri corecte c\u0103tre MPay cu toate datele necesare;</li> <li>Verificarea c\u0103 se utilizeaz\u0103 corect identificatorii \u00een func\u021bie de cine gestioneaz\u0103 plata (FOD vs. sistemul prestatorului);</li> <li>Gestionarea corect\u0103 a \u00eentoarcerii utilizatorului \u00een aplica\u021bie dup\u0103 finalizarea pl\u0103\u021bii.</li> </ul> <p>\ud83d\udcb3 Acest pas este esen\u021bial pentru finalizarea cu succes a serviciilor contra cost \u0219i trebuie s\u0103 asigure o experien\u021b\u0103 coerent\u0103 \u0219i sigur\u0103 pentru utilizator.</p> <p>Pasul de achitare centralizeaz\u0103 toate taxele \u00eentr-o singur\u0103 tranzac\u021bie \u0219i permite integrarea flexibil\u0103 cu sistemele de plat\u0103 guvernamentale existente.</p>"},{"location":"fod/aplicatia/apostilare/","title":"Apostilarea documentelor generate","text":"<p>\u00cen cazul \u00een care, \u00een urma prest\u0103rii unui serviciu, este generat un document ce poate fi apostilat, platforma FOD ofer\u0103 posibilitatea solicitantului de a ini\u021bia o solicitare de apostilare, direct din cadrul procesului de depunere a cererii.</p>"},{"location":"fod/aplicatia/apostilare/#descrierea-pasului","title":"Descrierea pasului","text":"<p>Acest pas are loc dup\u0103 completarea datelor necesare pentru prestarea serviciului \u0219i imediat \u00eenainte de confirmarea final\u0103 a solicit\u0103rii.</p>"},{"location":"fod/aplicatia/apostilare/#ce-se-intampla-in-acest-pas","title":"Ce se \u00eent\u00e2mpl\u0103 \u00een acest pas:","text":"<ul> <li>Solicitantului i se afi\u0219eaz\u0103 lista documentelor ce urmeaz\u0103 a fi eliberate \u00een urma prest\u0103rii serviciului;</li> <li>Utilizatorul este \u00eentrebat dac\u0103 dore\u0219te apostilarea unuia sau mai multor documente;</li> <li> <p>\u00cen cazul unui r\u0103spuns afirmativ, utilizatorul va trebui s\u0103:</p> </li> <li> <p>Selecteze \u021bara pentru care este necesar\u0103 apostilarea;</p> </li> <li>Aleag\u0103 termenul de execu\u021bie (standard sau urgent, dac\u0103 este cazul);</li> <li>Confirme achitarea taxei aferente apostil\u0103rii.</li> </ul> <p>\ud83d\udca1 Integrarea acestui pas este op\u021bional\u0103 \u0219i se aplic\u0103 doar \u00een cazul serviciilor care genereaz\u0103 documente eligibile pentru apostilare conform legisla\u021biei \u00een vigoare.</p>"},{"location":"fod/aplicatia/apostilare/#responsabilitatea-dezvoltatorului","title":"Responsabilitatea dezvoltatorului","text":"<ul> <li>Acest pas faciliteaz\u0103 doar colectarea preferin\u021belor utilizatorului privind apostilarea.</li> <li>Depunerea efectiv\u0103 a solicit\u0103rii de apostilare c\u0103tre sistemul relevant revine dezvoltatorului, care trebuie s\u0103 utilizeze serviciile disponibile \u00een cadrul FOD.</li> <li>La ini\u021bializarea unei cereri noi, dezvoltatorul trebuie s\u0103 se asigure c\u0103 sunt \u00eenc\u0103rcate op\u021biunile disponibile de apostilare, astfel \u00eenc\u00e2t utilizatorul s\u0103 le poat\u0103 selecta.</li> <li>\u00cen momentul gener\u0103rii documentului de r\u0103spuns sau al \u00eenc\u0103rc\u0103rii acestuia, dezvoltatorul trebuie s\u0103 expedieze documentul c\u0103tre sistemul de apostilare folosind metodele puse la dispozi\u021bie prin interfa\u021ba <code>IApostilaClient</code>.</li> </ul>"},{"location":"fod/aplicatia/apostilare/#beneficii","title":"Beneficii","text":"<ul> <li>Simplific\u0103 procesul pentru cet\u0103\u021bean, evit\u00e2nd o solicitare separat\u0103 pentru apostilare;</li> <li>Asigur\u0103 un flux complet digital, de la solicitare p\u00e2n\u0103 la ob\u021binerea documentului final apostilat.</li> </ul> <p>Aceast\u0103 func\u021bionalitate \u00eembun\u0103t\u0103\u021be\u0219te experien\u021ba utilizatorului \u0219i contribuie la reducerea birocra\u021biei \u00een procesul de legalizare a documentelor emise electronic.</p>"},{"location":"fod/aplicatia/cerinte/","title":"Cerin\u021be pentru utilizarea libr\u0103riilor FOD","text":"<p>Platforma FOD pune la dispozi\u021bie o colec\u021bie de libr\u0103rii dezvoltate pentru a facilita implementarea func\u021bionalit\u0103\u021bilor specifice proceselor de depunere \u0219i gestionare a solicit\u0103rilor. Aceste libr\u0103rii sunt distribuite sub form\u0103 de pachete NuGet \u0219i pot fi utilizate \u00een orice tip de proiect compatibil cu .NET.</p>"},{"location":"fod/aplicatia/cerinte/#tipuri-de-librarii","title":"Tipuri de libr\u0103rii","text":"<p>Libr\u0103riile sunt \u00eemp\u0103r\u021bite \u00een dou\u0103 categorii:</p> <ul> <li>Independente \u2013 pot fi utilizate individual, f\u0103r\u0103 a necesita alte componente ale ecosistemului FOD.</li> <li>Dependente \u2013 necesit\u0103 integrarea cu una sau mai multe libr\u0103rii complementare pentru a func\u021biona corect.</li> </ul> <p>Aceast\u0103 modularitate permite dezvoltatorilor s\u0103 adopte doar componentele de care au nevoie, f\u0103r\u0103 a fi nevoi\u021bi s\u0103 includ\u0103 \u00eentreaga suit\u0103 FOD.</p>"},{"location":"fod/aplicatia/cerinte/#compatibilitate-cu-proiecte-net","title":"Compatibilitate cu proiecte .NET","text":"<p>De\u0219i platforma .NET permite instalarea \u0219i utilizarea pachetelor \u00een orice tip de proiect (inclusiv console, desktop, API, etc.), utilizarea recomandat\u0103 este urm\u0103toarea:</p> <ul> <li> <p>Proiecte Blazor WebAssembly   Acesta este mediul recomandat pentru utilizarea libr\u0103riilor FOD, \u00eentruc\u00e2t ele au fost proiectate \u0219i testate \u00een principal \u00een acest context. Integrarea este direct\u0103 \u0219i presupune un efort minim de configurare.</p> </li> <li> <p>Proiecte Blazor Server   De\u0219i nu este mediul implicit, este posibil\u0103 utilizarea libr\u0103riilor FOD \u0219i \u00een aplica\u021bii Blazor Server. Totu\u0219i, acest lucru necesit\u0103 anumite adapt\u0103ri \u0219i configur\u0103ri suplimentare, \u00een special \u00een ceea ce prive\u0219te gestionarea st\u0103rii \u0219i interac\u021biunile client-server.</p> </li> </ul> <p>\u26a0\ufe0f Not\u0103: \u00cen cazul \u00een care dore\u0219ti s\u0103 integrezi libr\u0103riile FOD \u00eentr-un alt tip de aplica\u021bie dec\u00e2t Blazor WebAssembly, se recomand\u0103 consultarea documenta\u021biei pentru fiecare pachet \u00een parte, precum \u0219i exemplele de integrare disponibile.</p>"},{"location":"fod/aplicatia/cerinte/#cerinte-minime","title":"Cerin\u021be minime","text":"<ul> <li>.NET 8 sau mai nou \u2013 Majoritatea libr\u0103riilor FOD sunt compilate folosind .NET 8+.</li> <li>Acces la feed-ul privat de NuGet al Agen\u021biei pentru Guvernare Electronic\u0103 (AGE), dac\u0103 pachetele nu sunt publice.</li> <li>Configurarea corect\u0103 a serviciilor \u00een <code>Program.cs</code>, \u00een special pentru injec\u021bia de dependen\u021be, localizare, validare \u0219i serializare specific\u0103.</li> </ul>"},{"location":"fod/aplicatia/cerinte/#recomandari-generale","title":"Recomand\u0103ri generale","text":"<ul> <li>Se recomand\u0103 ini\u021bializarea unui proiect folosind \u0219abloanele disponibile \u00een cadrul ecosistemului FOD (dac\u0103 exist\u0103).</li> <li>Integrarea cu alte servicii guvernamentale precum MPass, MSign, sau MNotify poate necesita \u0219i alte configur\u0103ri suplimentare (certificate, token-uri de acces etc.).</li> <li>Se recomand\u0103 consultarea periodic\u0103 a documenta\u021biei oficiale, deoarece libr\u0103riile pot suferi modific\u0103ri semnificative \u00eentre versiuni.</li> </ul> <p>Pentru \u00eentreb\u0103ri suplimentare sau exemple de integrare, contacteaz\u0103 echipa tehnic\u0103 FOD sau consult\u0103 documenta\u021bia individual\u0103 a fiec\u0103rui pachet NuGet.</p>"},{"location":"fod/aplicatia/confirmarea%20datelor/","title":"Pasul de confirmare a datelor introduse","text":"<p>\u00cen aceast\u0103 etap\u0103, solicitantul este invitat s\u0103 revizuiasc\u0103 \u0219i s\u0103 confirme toate datele introduse \u00een pa\u0219ii anteriori ai procesului de solicitare.</p>"},{"location":"fod/aplicatia/confirmarea%20datelor/#functionalitate","title":"Func\u021bionalitate","text":"<ul> <li>Toate datele completate anterior sunt afi\u0219ate \u00eentr-o form\u0103 rezumativ\u0103;</li> <li>Solicitantul poate verifica dac\u0103 informa\u021biile introduse sunt corecte;</li> <li> <p>Dac\u0103 exist\u0103 neconcordan\u021be sau gre\u0219eli, utilizatorul trebuie s\u0103 aib\u0103 posibilitatea de a:</p> </li> <li> <p>Naviga \u00eenapoi c\u0103tre pasul relevant;</p> </li> <li>Modifica datele corespunz\u0103toare;</li> <li>Revenind apoi la pasul de confirmare pentru a finaliza procesul.</li> </ul>"},{"location":"fod/aplicatia/confirmarea%20datelor/#integrarea-cu-solicitarea-de-apostilare","title":"Integrarea cu solicitarea de apostilare","text":"<p>Dup\u0103 confirmarea datelor:</p> <ul> <li>Se creeaz\u0103 \u00een mod automat \u0219i solicitarea de apostilare \u00een Backoffice-ul sistemului de apostilare;</li> <li>Aceast\u0103 solicitare de apostilare este inclus\u0103 \u00een acela\u0219i flux de plat\u0103, astfel \u00eenc\u00e2t toate taxele aferente (serviciu + apostilare) s\u0103 fie acoperite \u00eentr-o singur\u0103 not\u0103 de plat\u0103.</li> </ul> <p>\ud83d\udca1 Acest comportament automatizat optimizeaz\u0103 experien\u021ba utilizatorului \u0219i reduce num\u0103rul de pa\u0219i manuali necesari pentru servicii suplimentare precum apostilarea.</p> <p>Pasul de confirmare reprezint\u0103 punctul final de verificare \u00eenainte de trimiterea oficial\u0103 a cererii c\u0103tre procesul de analiz\u0103 \u0219i, dac\u0103 este cazul, de ini\u021biere a fluxurilor auxiliare (ex: plat\u0103, apostilare). Este esen\u021bial ca interfa\u021ba s\u0103 fie clar\u0103, rezumatul informa\u021biilor s\u0103 fie u\u0219or de \u00een\u021beles, iar navigarea \u00eenapoi s\u0103 fie facil\u0103.</p>"},{"location":"fod/aplicatia/creare%20proiect%20frontoffice/","title":"Creare proiect FrontOffice","text":""},{"location":"fod/aplicatia/creare%20proiect%20frontoffice/#crearea-proiectului-pentru-frontoffice","title":"Crearea proiectului pentru FrontOffice","text":"<p>\u00cen mapa creat\u0103 pentru solu\u021bie, vom crea un folder numit <code>src</code>, unde vom depozita codul surs\u0103 al proiectului. \u00cen interiorul acestuia, vom crea folderul <code>Frontoffice</code> \u0219i vom rula urm\u0103toarea comand\u0103:</p> <pre><code>dotnet new blazorwasm -ho\n</code></pre> <p>Aceasta va crea o solu\u021bie nou\u0103 format\u0103 din trei proiecte separate:</p> <ul> <li>Client</li> <li>Shared</li> <li>Server</li> </ul> <p>Deoarece am folosit flagul <code>-ho</code>, comanda va genera o solu\u021bie hosted, ceea ce \u00eenseamn\u0103 c\u0103 aplica\u021bia Front-End va fi servit\u0103 de c\u0103tre proiectul <code>Server</code>. Acesta trebuie s\u0103 fie proiectul pornit pentru a rula aplica\u021bia.</p>"},{"location":"fod/aplicatia/creare%20proiect%20frontoffice/#pornirea-aplicatiei","title":"Pornirea aplica\u021biei","text":"<p>Pentru a porni aplica\u021bia, acceseaz\u0103 folderul <code>Server</code> folosind terminalul \u0219i ruleaz\u0103 comanda:</p> <pre><code>dotnet run\n</code></pre> <p>Aplica\u021bia va rula pe un port aleatoriu stabilit automat la momentul gener\u0103rii proiectului. Navig\u00e2nd \u00een browser la acel port, se va deschide interfa\u021ba aplica\u021biei FrontOffice.</p>"},{"location":"fod/aplicatia/cunostinte/","title":"Condi\u021bii prealabile \u0219i cuno\u0219tin\u021be necesare","text":"<p>\u021ain\u00e2nd cont de complexitatea prest\u0103rii anumitor servicii \u0219i de multitudinea de detalii specifice fiec\u0103rui proces, platforma FOD nu trebuie perceput\u0103 ca o solu\u021bie tehnic\u0103 universal\u0103 care r\u0103spunde la toate \u00eentreb\u0103rile. Mai degrab\u0103, FOD trebuie v\u0103zut\u0103 ca un instrument de sprijin, menit s\u0103 accelereze digitalizarea acolo unde aceasta nu este posibil\u0103 din motive precum:</p> <ul> <li>Lipsa de personal tehnic;</li> <li>Lipsa resurselor financiare;</li> <li>Lipsa unui cadru digital coerent.</li> </ul> <p>Unul dintre obiectivele principale ale platformei este crearea unui ecosistem unitar \u00een prestarea serviciilor publice, at\u00e2t pentru solicitan\u021bi, c\u00e2t \u0219i pentru prestatori. Aceasta implic\u0103 existen\u021ba unor fluxuri de lucru predefinite, restric\u021bii \u0219i reguli ce trebuie respectate de c\u0103tre dezvoltatorii de servicii.</p>"},{"location":"fod/aplicatia/cunostinte/#cunostinte-necesare","title":"Cuno\u0219tin\u021be necesare","text":"<p>Dezvoltarea unui serviciu FOD nu presupune doar abilit\u0103\u021bi tehnice, ci \u0219i o \u00een\u021belegere a proceselor de business \u0219i a contextului institu\u021bional. De asemenea, integrarea cu alte servicii guvernamentale implic\u0103 o minim\u0103 familiarizare cu infrastructura guvernamental\u0103 de dezvoltare \u0219i publicare.</p>"},{"location":"fod/aplicatia/cunostinte/#cunostinte-si-experienta-recomandata","title":"Cuno\u0219tin\u021be \u0219i experien\u021b\u0103 recomandat\u0103:","text":"<ul> <li>Tehnologii .NET</li> <li>C#, ASP.NET, Razor Pages, Blazor;</li> <li>Containerizare \u0219i orchestrare</li> <li>Docker;</li> <li>Kubernetes;</li> <li>Helm Charts;</li> <li>Frontend</li> <li>Angular (experien\u021ba cu Angular poate ajuta la \u00een\u021belegerea mai rapid\u0103 a Blazor, o tehnologie \u00eenc\u0103 emergent\u0103).</li> </ul> <p>\u26a0\ufe0f Nu este necesar ca to\u021bi membrii echipei s\u0103 cunoasc\u0103 toate tehnologiile, \u00eens\u0103 este esen\u021bial ca fiecare membru s\u0103 aib\u0103 expertiz\u0103 \u00eentr-un domeniu tehnic relevant.</p>"},{"location":"fod/aplicatia/cunostinte/#cerinte-tehnice-minime","title":"Cerin\u021be tehnice minime","text":"<p>Pentru a putea dezvolta un serviciu utiliz\u00e2nd componentele \u0219i libr\u0103riile FOD, sunt necesare urm\u0103toarele:</p> <ul> <li>Sistem de operare:  </li> <li>Windows sau Linux.  </li> <li> <p>\u26a0\ufe0f Pe macOS pot ap\u0103rea probleme legate de criptografie, motiv pentru care nu se recomand\u0103 utilizarea acestui OS \u00een dezvoltarea serviciilor FOD.</p> </li> <li> <p>Platform\u0103 de dezvoltare:  </p> </li> <li> <p>Ultima versiune stabil\u0103 .NET (ex. .NET 8.0 la momentul scrierii acestui ghid).</p> </li> <li> <p>Editor de cod:</p> </li> <li> <p>VS Code, Rider, Visual Studio \u2013 orice editor familiar echipei de dezvoltare.</p> </li> <li> <p>Interfa\u021b\u0103 grafic\u0103 pentru Kubernetes (op\u021bional, dar recomandat):</p> </li> <li>Lens Kubernetes IDE</li> <li>Rancher UI (dac\u0103 exist\u0103 acces).</li> </ul>"},{"location":"fod/aplicatia/cunostinte/#flexibilitate-si-adaptabilitate","title":"Flexibilitate \u0219i adaptabilitate","text":"<p>Utilizarea libr\u0103riilor FOD nu limiteaz\u0103 dezvoltatorul \u00een utilizarea propriilor instrumente \u0219i tehnologii familiare. De asemenea:</p> <ul> <li>Componentele pot fi rescrise par\u021bial sau complet \u00een func\u021bie de necesit\u0103\u021bile proiectului;</li> <li>Este permis\u0103 ad\u0103ugarea de logic\u0103 suplimentar\u0103 specific\u0103;</li> <li>Platforma este deschis\u0103 extinderii \u0219i adapt\u0103rii, \u00een limitele arhitecturii propuse.</li> </ul> <p>\ud83d\udee0\ufe0f FOD ofer\u0103 o funda\u021bie solid\u0103 pentru digitalizarea serviciilor, \u00eens\u0103 succesul implement\u0103rii depinde \u00een mare m\u0103sur\u0103 de \u00een\u021belegerea proceselor, colaborarea cu institu\u021biile publice \u0219i adaptarea flexibil\u0103 la cerin\u021bele concrete ale fiec\u0103rui serviciu.</p> <p>Pentru mai multe detalii privind integrarea sau dezvoltarea serviciilor, se recomand\u0103 consultarea documenta\u021biei tehnice detaliate \u0219i comunicarea direct\u0103 cu echipa tehnic\u0103 FOD.</p>"},{"location":"fod/aplicatia/depunere/","title":"Depunerea unei solicit\u0103ri","text":"<p>Depunerea unei solicit\u0103ri este cea mai utilizat\u0103 func\u021bionalitate a Frontoffice-ului \u0219i const\u0103 \u00een colectarea datelor de la solicitant necesare prest\u0103rii unui anumit serviciu.</p> <p>\u26a0\ufe0f Este esen\u021bial ca datele colectate s\u0103 fie doar cele strict necesare. Nu se recomand\u0103 colectarea de informa\u021bii ce pot fi ob\u021binute din alte surse oficiale (ex: datele cu caracter personal disponibile dezvoltatorului prin autentificare sau integrare cu registre na\u021bionale).</p> <p>Pe baza experien\u021bei acumulate \u00een dezvoltarea mai multor servicii, au fost identificate mai multe etape prin care trebuie s\u0103 treac\u0103 solicitantul \u00een cadrul procesului de depunere. Pentru fiecare etap\u0103, au fost dezvoltate componente specializate, grupate \u00een cadrul unui comportament de tip Wizard (asistent pas-cu-pas).</p> <p>Aceast\u0103 structurare are impact at\u00e2t la nivel func\u021bional, c\u00e2t \u0219i tehnic, deoarece impune:</p> <ul> <li>Un flux clar de colectare a datelor;</li> <li>Un mecanism de validare progresiv\u0103;</li> <li>Afi\u0219area clar\u0103 a fiec\u0103rei etape pentru utilizator.</li> </ul>"},{"location":"fod/aplicatia/depunere/#exemple-de-etape-posibile-in-procesul-de-depunere","title":"Exemple de etape posibile \u00een procesul de depunere:","text":"<ul> <li>Identificarea solicitantului (op\u021bional, dac\u0103 este necesar\u0103 autentificarea);</li> <li>Alegerea serviciului sau sub-tipului de solicitare;</li> <li>Completarea formularului de date;</li> <li>\u00cenc\u0103rcarea documentelor justificative;</li> <li>Confirmarea \u0219i transmiterea solicit\u0103rii.</li> </ul> <p>Fiecare pas este reprezentat printr-o sec\u021biune distinct\u0103 \u00een cadrul componentei Wizard, ceea ce ofer\u0103 o experien\u021b\u0103 structurat\u0103 \u0219i u\u0219or de urm\u0103rit pentru utilizator.</p> <p>\ud83d\udca1 \u00cen cadrul serviciilor deja implementate, aceast\u0103 func\u021bionalitate este una dintre cele mai critice \u0219i vizibile, iar adaptarea fluxului la nevoile reale ale serviciului este esen\u021bial\u0103 pentru succesul implement\u0103rii.</p>"},{"location":"fod/aplicatia/detalii%20serviciu/","title":"Pasul Detaliilor Serviciului","text":"<p>Pasul dedicat detaliilor serviciului const\u0103 \u00een colectarea informa\u021biilor esen\u021biale pentru prestarea efectiv\u0103 a serviciului solicitat.</p>"},{"location":"fod/aplicatia/detalii%20serviciu/#descriere-generala","title":"Descriere general\u0103","text":"<p>\u00cen mod implicit, platforma permite ca un solicitant s\u0103 poat\u0103 solicita mai multe servicii \u00eentr-o singur\u0103 cerere. Cu toate acestea, \u00een majoritatea serviciilor deja implementate, se restric\u021bioneaz\u0103 depunerea la un singur serviciu per solicitare.</p> <p>Aceast\u0103 decizie apar\u021bine dezvoltatorilor, care trebuie s\u0103 decid\u0103:</p> <ul> <li>Cum ofer\u0103 posibilitatea de selec\u021bie a serviciului solicitat;</li> <li>Cum structureaz\u0103 \u0219i afi\u0219eaz\u0103 interfa\u021ba pentru completarea datelor aferente fiec\u0103rui serviciu.</li> </ul>"},{"location":"fod/aplicatia/detalii%20serviciu/#elemente-obligatorii","title":"Elemente obligatorii","text":"<p>\u00cen aceast\u0103 etap\u0103, solicitantul trebuie s\u0103 completeze urm\u0103toarele informa\u021bii:</p> <ul> <li>Selectarea serviciului dorit \u2013 doar dac\u0103 exist\u0103 mai multe servicii posibile;</li> <li>Selectarea termenului de prestare a serviciului \u2013 dac\u0103 serviciul permite termene alternative (ex: termen standard vs. termen urgent);</li> </ul>"},{"location":"fod/aplicatia/detalii%20serviciu/#date-specifice-suplimentare","title":"Date specifice suplimentare","text":"<p>\u00cen func\u021bie de serviciul ales, este posibil ca prestatorul s\u0103 solicite informa\u021bii adi\u021bionale relevante pentru procesul de analiz\u0103. Aceste c\u00e2mpuri suplimentare:</p> <ul> <li>Vor fi implementate la discre\u021bia dezvoltatorului;</li> <li>Trebuie s\u0103 fie definite clar de c\u0103tre prestatorul de servicii;</li> <li>Pot include at\u00e2t c\u00e2mpuri obligatorii c\u00e2t \u0219i op\u021bionale, \u00een func\u021bie de fluxul stabilit.</li> </ul> <p>\u26a0\ufe0f Este responsabilitatea dezvoltatorului s\u0103 respecte cerin\u021bele prestatorului \u0219i s\u0103 adapteze formularul \u00een mod corespunz\u0103tor.</p> <p>Aceast\u0103 etap\u0103 este critic\u0103 pentru a defini obiectul solicit\u0103rii \u0219i a oferi prestatorului toate datele necesare pentru a ini\u021bia procesul de analiz\u0103.</p>"},{"location":"fod/aplicatia/detalii%20solicitant/","title":"Pasul Datelor Solicitantului","text":"<p>Pasul dedicat colect\u0103rii datelor despre solicitantul de facto este una dintre cele mai importante etape din cadrul procesului de depunere a unei solicit\u0103ri.</p>"},{"location":"fod/aplicatia/detalii%20solicitant/#descriere-generala","title":"Descriere general\u0103","text":"<p>\u00cen aceast\u0103 etap\u0103 sunt colectate informa\u021biile care identific\u0103 persoana care ini\u021biaz\u0103 solicitarea.</p> <ul> <li>Dac\u0103 solicitantul este autentificat, majoritatea datelor se vor completa automat, prin integrarea cu sistemul MPass;</li> <li>Dac\u0103 este necesar\u0103 completarea cu date suplimentare despre solicitant, acestea pot fi ob\u021binute prin integrarea cu MConnect.</li> </ul>"},{"location":"fod/aplicatia/detalii%20solicitant/#exemple-de-date-colectate-automat","title":"Exemple de date colectate automat:","text":"<ul> <li>Tipul solicitantului (persoan\u0103 fizic\u0103 / juridic\u0103);</li> <li>IDNP / IDNO;</li> <li>Nume \u0219i prenume;</li> <li>Date de contact (email, telefon etc.).</li> </ul>"},{"location":"fod/aplicatia/detalii%20solicitant/#cazuri-speciale","title":"Cazuri speciale","text":"<p>\u00cen func\u021bie de natura serviciului, este posibil ca solicitantul de facto s\u0103 ac\u021bioneze \u00een numele unei alte entit\u0103\u021bi (persoan\u0103 fizic\u0103 sau juridic\u0103). \u00cen acest caz, este necesar\u0103 colectarea \u0219i validarea datelor pentru solicitantul de jure (entitatea reprezentat\u0103):</p> <ul> <li>Acest scenariu este valabil mai ales \u00een cazul \u00een care se utilizeaz\u0103 MPower, pentru semnalarea unei procuri sau \u00eemputerniciri;</li> <li>Datele aferente solicitantului de jure pot fi colectate automat, odat\u0103 cu validarea mandatului.</li> </ul> <p>\ud83d\udd10 Securitate \u0219i conformitate: Este important ca aceste date s\u0103 fie tratate \u00een conformitate cu regulamentele privind protec\u021bia datelor cu caracter personal (ex: GDPR), iar utilizatorul s\u0103 fie informat \u00een mod clar despre prelucrarea datelor sale.</p>"},{"location":"fod/aplicatia/detalii%20solicitant/#exemplu-vizual","title":"Exemplu vizual","text":"<p>Pentru un exemplu vizual al acestei etape, vezi imaginea de mai jos:</p> <p></p> <p>Aceast\u0103 etap\u0103 ofer\u0103 contextul juridic \u0219i factual necesar pentru procesarea corect\u0103 a solicit\u0103rii \u0219i st\u0103 la baza valid\u0103rii identit\u0103\u021bii solicitantului \u0219i/sau a reprezent\u0103rii legale.</p>"},{"location":"fod/aplicatia/finalizare/","title":"Pasul de finalizare a solicit\u0103rii","text":"<p>Acesta este ultimul pas din fluxul de depunere \u0219i reprezint\u0103 \u00eencheierea formal\u0103 a procesului de solicitare. Dup\u0103 acest pas, solicitantul nu mai are posibilitatea de a reveni la pa\u0219ii anteriori.</p>"},{"location":"fod/aplicatia/finalizare/#ce-se-afiseaza-in-acest-pas","title":"Ce se afi\u0219eaz\u0103 \u00een acest pas","text":"<ul> <li>Datele finale ale solicit\u0103rii \u2013 \u00eentr-un format rezumativ, similar cu pasul de confirmare;</li> <li>Confirmarea recep\u021bion\u0103rii solicit\u0103rii de c\u0103tre sistem;</li> <li>Confirmarea achit\u0103rii serviciului, dac\u0103 plata a fost efectuat\u0103 cu succes.</li> </ul>"},{"location":"fod/aplicatia/finalizare/#functionalitati-suplimentare","title":"Func\u021bionalit\u0103\u021bi suplimentare","text":"<ul> <li>Se ofer\u0103 posibilitatea de desc\u0103rcare a unei recipise (fi\u0219ier PDF cu rezumatul solicit\u0103rii);</li> <li>Utilizatorul poate opta \u0219i pentru printarea recipisei ca dovad\u0103 a \u00eenregistr\u0103rii solicit\u0103rii.</li> </ul> <p>\ud83d\udda8\ufe0f Recipisa este util\u0103 pentru p\u0103strarea unei dovezi formale \u0219i poate include ID-ul solicit\u0103rii, data, serviciul solicitat \u0219i alte informa\u021bii relevante.</p>"},{"location":"fod/aplicatia/finalizare/#restrictii","title":"Restric\u021bii","text":"<ul> <li>Acest pas nu permite modific\u0103ri sau \u00eentoarcerea c\u0103tre pa\u0219ii anteriori;</li> <li>Orice corec\u021bie necesar\u0103 dup\u0103 finalizare trebuie gestionat\u0103 printr-un nou flux sau prin contactarea prestatorului.</li> </ul> <p>Pasul de finalizare consolideaz\u0103 \u00eencheierea cu succes a procesului digital de solicitare, oferind utilizatorului siguran\u021b\u0103 c\u0103 cererea a fost \u00eenregistrat\u0103 \u0219i poate fi urm\u0103rit\u0103 \u00een continuare prin canalele oficiale disponibile (ex: MCabinet).</p>"},{"location":"fod/aplicatia/frontoffice/","title":"Frontoffice","text":"<p>Frontoffice-ul reprezint\u0103 aplica\u021bia sau portalul public prin care solicitantul acceseaz\u0103 serviciul pentru a depune o solicitare. Acesta este principalul punct de contact \u00eentre cet\u0103\u021bean (sau persoan\u0103 juridic\u0103) \u0219i prestatorul de servicii.</p>"},{"location":"fod/aplicatia/frontoffice/#functionalitati-principale","title":"Func\u021bionalit\u0103\u021bi principale","text":"<p>Frontoffice-ul trebuie s\u0103 ofere o experien\u021b\u0103 clar\u0103 \u0219i simplificat\u0103 pentru utilizatorul final. Printre func\u021bionalit\u0103\u021bile esen\u021biale se reg\u0103sesc:</p> <ul> <li>Depunerea solicit\u0103rilor \u2013 formularul prin care utilizatorul introduce datele necesare pentru ini\u021bierea serviciului;</li> <li>Verificarea statutului solicit\u0103rii \u2013 urm\u0103rirea stadiului \u00een care se afl\u0103 cererea (ex: \u201e\u00een analiz\u0103\u201d, \u201efinalizat\u0103\u201d, \u201erespinse\u201d etc.);</li> <li>Verificarea documentului eliberat \u2013 \u00een cazul \u00een care serviciul genereaz\u0103 un document oficial, utilizatorul poate verifica validitatea acestuia (ex: certificat digital, autoriza\u021bie etc.);</li> <li>Accesarea termenilor \u0219i condi\u021biilor \u2013 informarea solicitantului cu privire la condi\u021biile de utilizare a serviciului.</li> </ul>"},{"location":"fod/aplicatia/frontoffice/#considerente-suplimentare","title":"Considerente suplimentare","text":"<ul> <li>Dac\u0103 serviciul impune autentificare (ex: prin MPass), aplica\u021bia Frontoffice trebuie s\u0103 integreze mecanismele de autentificare relevante;</li> <li>Dac\u0103 serviciul permite mai multe tipuri de solicit\u0103ri, poate fi util\u0103 o pagin\u0103 de start care s\u0103 ghideze utilizatorul \u00een alegerea formularului potrivit;</li> <li>\u00cen cazul \u00een care se dore\u0219te integrarea \u00eentr-un portal existent (ex: Portalul Serviciilor Publice), este posibil ca Frontoffice-ul s\u0103 se rezume doar la implementarea func\u021bionalit\u0103\u021bii de preluare \u0219i procesare a solicit\u0103rilor, \u00een timp ce descrierea serviciului este afi\u0219at\u0103 direct \u00een portalul public.</li> </ul>"},{"location":"fod/aplicatia/frontoffice/#exemplu-de-arhitectura","title":"Exemplu de arhitectur\u0103","text":"<pre><code>Utilizator final\n     \u2193\n[ Frontoffice ]\n     \u2193\n[ Backoffice / Sistem de procesare ]\n</code></pre> <p>\u2139\ufe0f Not\u0103: De\u0219i \u00een unele diagrame apare [ API intermediar (Clients API) ] \u00eentre Frontoffice \u0219i Backoffice, acest API nu este utilizat direct de c\u0103tre Frontoffice, ci este destinat pentru integrarea cu sisteme externe care au nevoie s\u0103 consume serviciul f\u0103r\u0103 interfa\u021ba grafic\u0103 Frontoffice.</p> <p>\ud83d\udee0\ufe0f Not\u0103: Frontoffice-ul trebuie g\u00e2ndit din perspectiva utilizatorului final. Accesibilitatea, claritatea formularelor \u0219i simplificarea interac\u021biunilor sunt esen\u021biale pentru cre\u0219terea gradului de utilizare a serviciului.</p> <p>Frontoffice-ul este doar unul dintre componentele unei solu\u021bii FOD, dar joac\u0103 un rol esen\u021bial \u00een succesul adopt\u0103rii digitale a serviciilor publice.</p>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/","title":"Ghid pentru Crearea Func\u021bionalului de Depunere a unei Solicit\u0103ri","text":"<p>Func\u021bionalul de depunere a unei solicit\u0103ri se bazeaz\u0103 \u00een mare parte pe comunicarea dintre aplica\u021bia din proiectul Client \u0219i proiectul Server, prin modelele \u0219i interfe\u021bele prezente \u00een libr\u0103ria <code>Fod.Components.Shared</code>.</p>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#principii-generale","title":"Principii Generale","text":"<p>Majoritatea componentelor FOD: - Au un model ata\u0219at sau pot fi ata\u0219ate unei propriet\u0103\u021bi a unui model. - Pe l\u00e2ng\u0103 atributele proprii, comportamentul acestora poate fi influen\u021bat de atributele modelului sau ale propriet\u0103\u021bilor sale.</p> <p>Pentru colectarea datelor generice aferente unei solicit\u0103ri, exist\u0103 deja componente \u0219i modele preconfigurate. Pentru datele specifice fiec\u0103rui serviciu: - Se pot crea modele \u0219i procese separate. - Sau se pot mo\u0219teni modele existente \u0219i extinde func\u021bionalitatea.</p>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#fluxul-de-depunere-a-unei-solicitari","title":"Fluxul de Depunere a unei Solicit\u0103ri","text":"<ol> <li>Crearea unui obiect nou dup\u0103 modelul solicit\u0103rii.</li> <li>Ad\u0103ugarea sau actualizarea datelor \u00een baza de date.</li> <li>Extragerea datelor din baza de date.</li> <li>Verificarea \u0219i confirmarea datelor.</li> <li>Validarea datelor.</li> <li>Semnarea datelor.</li> <li>Generarea / desc\u0103rcarea / printarea recipisei.</li> </ol>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#procese-intermediare-optionale","title":"Procese Intermediare Op\u021bionale","text":"<ul> <li>Calcularea costului.</li> <li>Calcularea termenului estimativ de perfectare.</li> </ul>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#modelul-fodrequestmodel","title":"Modelul FodRequestModel","text":"<p>\u00cen libr\u0103ria <code>Fod.Components.Shared</code>, exist\u0103 modelul <code>FodRequestModel</code>, care poate fi utilizat pentru definirea structurii unei solicit\u0103ri concrete.</p> <p>Tot acolo exist\u0103 interfa\u021ba <code>IRequestService&lt;T&gt;</code>, unde <code>T</code> este o clas\u0103 care mo\u0219tene\u0219te <code>FodRequestModel</code>. Aceast\u0103 interfa\u021b\u0103 permite crearea ciclului complet de via\u021b\u0103 al unei solicit\u0103ri, de la ini\u021biere p\u00e2n\u0103 la confirmare \u0219i/sau achitare.</p>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#exemplu-practic-crearea-unei-solicitari-ghid","title":"Exemplu Practic: Crearea unei Solicit\u0103ri Ghid","text":""},{"location":"fod/aplicatia/ghid-depunere-solicitare/#1-crearea-modelului-de-date","title":"1. Crearea Modelului de Date","text":"<p>\u00cen proiectul <code>Shared</code>, \u00een mapa <code>Models</code>, ad\u0103ug\u0103m clasa:</p> <pre><code>public class GhidRequestModel : FodRequestModel\n{\n}\n</code></pre>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#2-implementarea-serviciului-irequestservice","title":"2. Implementarea Serviciului IRequestService","text":"<p>\u00cen proiectul <code>Server</code>, ad\u0103ug\u0103m \u00een mapa <code>Services</code> clasa:</p> <pre><code>public class GhidRequestService : IRequestService&lt;GhidRequestModel&gt;\n{\n    public async Task&lt;GhidRequestModel&gt; New(string requestTypeCode)\n    {\n        return new GhidRequestModel();\n    }\n\n    // Alte metode pot fi ad\u0103ugate ulterior\n}\n</code></pre>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#3-inregistrarea-serviciului-si-endpoint-ului","title":"3. \u00cenregistrarea Serviciului \u0219i Endpoint-ului","text":"<p>\u00cen <code>Program.cs</code>:</p> <pre><code>// \u00cenregistrare \u00een containerul de DI\nbuilder.Services.AddRequestService&lt;GhidRequestModel, GhidRequestService&gt;();\n\n// \u00cenregistrare endpoint pentru identificarea solicit\u0103rii\napp.MapRequestType&lt;GhidRequestModel&gt;(\"ghid\");\n</code></pre> <p><code>ghid</code> este codul identificator al tipului de solicitare.</p>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#consideratii-suplimentare","title":"Considera\u021bii Suplimentare","text":"<ul> <li>De cele mai multe ori, o aplica\u021bie gestioneaz\u0103 un singur tip de solicitare \u0219i un singur serviciu.</li> <li>Totu\u0219i, pot exista scenarii \u00een care:</li> <li>Un tip de solicitare are mai multe servicii.</li> <li>Aplica\u021bia gestioneaz\u0103 mai multe tipuri de solicit\u0103ri.</li> <li>\u00cen acest caz, se \u00eenregistreaz\u0103 mai multe implement\u0103ri de <code>IRequestService&lt;&gt;</code>, fiecare av\u00e2nd propriul cod identificator.</li> </ul>"},{"location":"fod/aplicatia/ghid-depunere-solicitare/#concluzie","title":"Concluzie","text":"<p>Procesul de depunere a unei solicit\u0103ri const\u0103 \u00een:</p> <ul> <li>Definirea modelului.</li> <li>Ata\u0219area modelului la componente.</li> <li>Colectarea \u0219i validarea datelor.</li> <li>Persistarea \u0219i procesarea ulterioar\u0103 \u00een backend.</li> </ul> <p>Platforma FOD ofer\u0103 un cadru flexibil \u0219i extensibil pentru gestionarea acestui proces \u00een mod standardizat.</p>"},{"location":"fod/aplicatia/inregistrarea%20serviciilor%20client/","title":"\u00cenregistrarea serviciilor client","text":""},{"location":"fod/aplicatia/inregistrarea%20serviciilor%20client/#servicii-fod-in-blazor-client","title":"Servicii FOD \u00een Blazor Client","text":"<p>Func\u021bionarea corect\u0103 a componentelor FOD \u00een aplica\u021bia <code>Client</code> depinde de implement\u0103rile serviciilor utilizate de aceste componente. Pentru a asigura acest lucru, este necesar\u0103 injectarea serviciilor prin ad\u0103ugarea urm\u0103torului r\u00e2nd de cod \u00een fi\u0219ierul <code>Program.cs</code> din proiectul <code>Client</code>:</p> <pre><code>builder.Services.AddFodComponents();\n</code></pre> <p>Aceast\u0103 metod\u0103 face parte din namespace-ul <code>Fod.Components</code>, motiv pentru care este necesar\u0103 \u0219i ad\u0103ugarea acestuia \u00een fi\u0219ierul <code>_Imports.razor</code>:</p> <pre><code>@using Fod.Components\n</code></pre> <p>Ad\u0103ugarea namespace-ului \u00een <code>_Imports.razor</code> permite utilizarea componentelor FOD \u00een orice fi\u0219ier <code>.razor</code> din proiect, f\u0103r\u0103 a mai fi nevoie de importuri suplimentare.</p>"},{"location":"fod/aplicatia/instalare%20librarii%20fod/","title":"Instalarea libr\u0103riilor FOD","text":"<p>\u00cen structura unui proiect Blazor WebAssembly, au fost create mai multe libr\u0103rii FOD care trebuie utilizate \u00een proiectele corespunz\u0103toare:</p> <ul> <li> <p>Fod.Components   Con\u021bine toate componentele UI, stiluri \u0219i serviciile utilizate de c\u0103tre componente pentru dezvoltarea unui serviciu. Aceasta trebuie ad\u0103ugat\u0103 \u00een proiectul <code>Client</code>.</p> </li> <li> <p>Fod.Components.Shared   Con\u021bine modele \u0219i servicii comune care sunt utilizate at\u00e2t de aplica\u021bia <code>Client</code>, c\u00e2t \u0219i de aplica\u021bia <code>Server</code>. Aceasta trebuie ad\u0103ugat\u0103 \u00een proiectul <code>Shared</code>.</p> </li> <li> <p>Fod.Components.Server   Con\u021bine logica componentelor care trebuie rulat\u0103 pe partea de server. Aceasta trebuie ad\u0103ugat\u0103 \u00een proiectul <code>Server</code>.</p> </li> </ul>"},{"location":"fod/aplicatia/instalare%20librarii%20fod/#acces-la-librarii","title":"Acces la libr\u0103rii","text":"<p>Pentru a ad\u0103uga aceste libr\u0103rii, este necesar accesul la repository-ul de libr\u0103rii al Agen\u021biei de Guvernare Electronic\u0103:</p> <p>\ud83d\udd17 FOD Feed Repository</p>"},{"location":"fod/aplicatia/instalare%20librarii%20fod/#referinte-de-adaugat","title":"Referin\u021be de ad\u0103ugat","text":"<p>Adaug\u0103 urm\u0103toarele referin\u021be \u00een fi\u0219ierele <code>.csproj</code> corespunz\u0103toare:</p> <ul> <li><code>Fod.Components</code> \u00een <code>Client.csproj</code></li> <li><code>Fod.Components.Shared</code> \u00een <code>Shared.csproj</code></li> <li><code>Fod.Components.Server</code> \u00een <code>Server.csproj</code></li> </ul>"},{"location":"fod/aplicatia/mod%20receptionare/","title":"Pasul modului de recep\u021bionare","text":"<p>\u00cen acest pas, solicitantul specific\u0103 modul \u00een care dore\u0219te s\u0103 primeasc\u0103 r\u0103spunsul la solicitarea depus\u0103.</p>"},{"location":"fod/aplicatia/mod%20receptionare/#receptionarea-electronica","title":"Recep\u021bionarea electronic\u0103","text":"<p>\u00cen majoritatea serviciilor deja dezvoltate, procesarea unei solicit\u0103ri presupune generarea unui document electronic. Pentru a sus\u021bine digitalizarea serviciilor publice, platforma FOD ofer\u0103 implicit posibilitatea de:</p> <ul> <li> <p>Recep\u021bionare electronic\u0103 prin MCabinet: documentul generat poate fi consultat \u0219i desc\u0103rcat direct de utilizator din portalul cet\u0103\u021beanului MCabinet.</p> </li> <li> <p>Aceast\u0103 op\u021biune este activat\u0103 automat \u0219i nu poate fi deselectat\u0103;</p> </li> <li>\u00cen cazul \u00een care serviciul nu genereaz\u0103 un document electronic, aceast\u0103 op\u021biune poate fi ascuns\u0103 de c\u0103tre dezvoltator.</li> </ul>"},{"location":"fod/aplicatia/mod%20receptionare/#receptionarea-pe-suport-de-hartie","title":"Recep\u021bionarea pe suport de h\u00e2rtie","text":"<p>\u00cen plus, solicitantul poate opta pentru livrarea fizic\u0103 a documentului, aleg\u00e2nd una dintre urm\u0103toarele op\u021biuni:</p> <ul> <li>Livrare la u\u0219\u0103 \u2013 utiliz\u00e2nd serviciul guvernamental MDelivery;</li> <li>Ridicare personal\u0103 \u2013 de la un oficiu fizic al prestatorului de servicii.</li> </ul>"},{"location":"fod/aplicatia/mod%20receptionare/#consideratii-tehnice","title":"Considera\u021bii tehnice","text":"<ul> <li>Pentru livrarea prin MDelivery, poate fi utilizat\u0103 implementarea generic\u0103 oferit\u0103 de FOD;</li> <li>Lista punctelor de ridicare trebuie s\u0103 fie gestionat\u0103 individual de c\u0103tre dezvoltator, conform specificului fiec\u0103rui prestator de serviciu.</li> </ul>"},{"location":"fod/aplicatia/mod%20receptionare/#redirectionarea-utilizatorului","title":"Redirec\u021bionarea utilizatorului","text":"<p>Dac\u0103 solicitantul alege livrarea documentului:</p> <ul> <li>La trecerea la pasul urm\u0103tor, utilizatorul este redirec\u021bionat c\u0103tre portalul MDelivery pentru completarea datelor necesare livr\u0103rii;</li> <li>Dup\u0103 completarea formularului, utilizatorul este redirec\u021bionat \u00eenapoi \u00een Frontoffice pentru continuarea solicit\u0103rii.</li> </ul>"},{"location":"fod/aplicatia/mod%20receptionare/#responsabilitatea-dezvoltatorului","title":"Responsabilitatea dezvoltatorului","text":"<ul> <li> <p>Dezvoltatorul trebuie s\u0103 gestioneze logica de redirec\u021bionare \u00een func\u021bie de starea cererii:</p> </li> <li> <p>Dac\u0103 datele de livrare sunt deja ata\u0219ate solicit\u0103rii, utilizatorul poate fi redirec\u021bionat direct c\u0103tre pasul de confirmare;</p> </li> <li>\u00cen caz contrar, utilizatorul trebuie trimis la pasul de recep\u021bionare pentru completarea informa\u021biilor necesare.</li> </ul> <p>\ud83d\udee0\ufe0f Este esen\u021bial ca integrarea cu MDelivery s\u0103 fie testat\u0103 \u0219i conform\u0103 cu cerin\u021bele prestatorului, iar experien\u021ba utilizatorului s\u0103 fie c\u00e2t mai fluid\u0103.</p> <p>Acest pas sprijin\u0103 diversificarea modalit\u0103\u021bilor de livrare \u0219i contribuie la adaptarea serviciilor digitale la nevoile concrete ale cet\u0103\u021benilor.</p>"},{"location":"fod/aplicatia/semnare/","title":"Pasul de semnare a solicit\u0103rii","text":"<p>Acest pas este dedicat semn\u0103rii electronice a solicit\u0103rii, \u00een func\u021bie de cerin\u021bele prestatorului de servicii sau de natura serviciului solicitat.</p>"},{"location":"fod/aplicatia/semnare/#cand-este-necesara-semnarea","title":"C\u00e2nd este necesar\u0103 semnarea","text":"<p>Semnarea solicit\u0103rii devine obligatorie \u00een urm\u0103toarele situa\u021bii:</p> <ul> <li>Serviciul presupune emiterea documentului exclusiv \u00een format electronic;</li> <li>Este necesar ca solicitantul s\u0103 dovedeasc\u0103 de\u021binerea unei semn\u0103turi electronice calificate;</li> <li>Este necesar\u0103 autentificarea complet\u0103 \u00een MCabinet (portalul cet\u0103\u021beanului sau antreprenorului).</li> </ul> <p>Aceast\u0103 m\u0103sur\u0103 garanteaz\u0103:</p> <ul> <li>Validitatea juridic\u0103 a solicit\u0103rii;</li> <li>Identificarea unic\u0103 a persoanei care ini\u021biaz\u0103 solicitarea;</li> <li>Accesul ulterior la documentele emise \u00een format digital.</li> </ul>"},{"location":"fod/aplicatia/semnare/#exceptii","title":"Excep\u021bii","text":"<p>\u00cen cazul \u00een care solicitantul:</p> <ul> <li>Solicit\u0103 livrarea documentelor \u00een format fizic;</li> <li>Este necesar s\u0103 semneze documentul fizic, la ghi\u0219eu;</li> </ul> <p>... atunci pasul de semnare electronic\u0103 poate fi omis sau considerat op\u021bional, \u00een func\u021bie de politica prestatorului.</p>"},{"location":"fod/aplicatia/semnare/#responsabilitatea-dezvoltatorului","title":"Responsabilitatea dezvoltatorului","text":"<ul> <li>Integrarea semn\u0103turii se face utiliz\u00e2nd serviciile FOD (ex: integrare cu MSign);</li> <li>Interfa\u021ba trebuie s\u0103 permit\u0103 declan\u0219area procesului de semnare \u0219i validarea rezultatului semn\u0103turii;</li> <li>\u00cen cazul \u00een care semn\u0103tura este necesar\u0103, utilizatorul nu trebuie s\u0103 poat\u0103 continua procesul f\u0103r\u0103 a o finaliza.</li> </ul> <p>\ud83d\udee1\ufe0f Asigurarea semn\u0103turii electronice reprezint\u0103 o m\u0103sur\u0103 critic\u0103 de securitate \u0219i conformitate legal\u0103 pentru serviciile publice digitalizate.</p> <p>Pasul de semnare asigur\u0103 c\u0103 solicit\u0103rile sunt asumate legal de c\u0103tre utilizator \u0219i ofer\u0103 garan\u021bii suplimentare privind integritatea \u0219i validitatea datelor furnizate.</p>"},{"location":"fod/aplicatia/solution%20create/","title":"Crearea solu\u021biei","text":"<p>Pentru a avea cea mai mare compatibilitate cu componentele FOD, este recomandat s\u0103 se creeze o solu\u021bie nou\u0103.</p> <p>Pentru a crea o solu\u021bie nou\u0103, urmeaz\u0103 ace\u0219ti pa\u0219i:</p> <ul> <li>Creeaz\u0103 o map\u0103 nou\u0103.</li> <li>Deschide aceast\u0103 map\u0103 \u00een Visual Studio Code.</li> <li>Folose\u0219te consola integrat\u0103 pentru a crea solu\u021bia \u0219i proiectele necesare.</li> </ul> <p>\u2139\ufe0f Dezvoltatorul este liber s\u0103 utilizeze uneltele preferate pentru a parcurge ace\u0219ti pa\u0219i.</p>"},{"location":"fod/aplicatia/structura%20solutiei/","title":"Structura solu\u021biei unui serviciu dezvoltat utiliz\u00e2nd FOD","text":"<p>Pe baza experien\u021bei acumulate \u00een dezvoltarea mai multor servicii utiliz\u00e2nd componentele FOD, s-a conturat o arhitectur\u0103 recomandat\u0103 pentru organizarea unui serviciu digital. Aceast\u0103 arhitectur\u0103 este compus\u0103 din mai multe proiecte, fiecare cu un rol clar definit \u00een cadrul ecosistemului.</p>"},{"location":"fod/aplicatia/structura%20solutiei/#componentele-solutiei","title":"Componentele solu\u021biei","text":"<p>O solu\u021bie complet\u0103 dezvoltat\u0103 cu FOD este alc\u0103tuit\u0103, de regul\u0103, din urm\u0103toarele proiecte:</p> <ul> <li>Frontoffice \u2013 interfa\u021ba utilizatorului final (solicitantul serviciului);</li> <li>Backoffice \u2013 interfa\u021ba intern\u0103 a prestatorului de servicii;</li> <li>Clients API \u2013 serviciu intermediar care faciliteaz\u0103 comunicarea dintre aplica\u021bii (Frontoffice, Backoffice) \u0219i baza de date;</li> <li>Migrator \u2013 component\u0103 responsabil\u0103 de ini\u021bializarea \u0219i actualizarea bazei de date (migr\u0103ri);</li> <li>Cronjob \u2013 proces automat programat, responsabil de sarcini repetitive sau de fundal (ex: notific\u0103ri, actualiz\u0103ri periodice);</li> <li>Baz\u0103 de date \u2013 sistemul de stocare a datelor colectate, procesate \u0219i livrate \u00een cadrul ciclului de via\u021b\u0103 al solicit\u0103rilor.</li> </ul>"},{"location":"fod/aplicatia/structura%20solutiei/#responsabilitatile-serviciului","title":"Responsabilit\u0103\u021bile serviciului","text":"<p>Un serviciu construit cu FOD trebuie s\u0103 acopere cele trei etape principale din procesul de prestare a serviciilor publice:</p> <ol> <li> <p>Colectarea informa\u021biilor de la solicitant    Platforma trebuie s\u0103 asigure o interfa\u021b\u0103 intuitiv\u0103 \u0219i clar\u0103 pentru completarea formularului de solicitare \u0219i transmiterea documentelor necesare.</p> </li> <li> <p>Monitorizarea procesului de procesare    Solicitantul trebuie s\u0103 poat\u0103 urm\u0103ri stadiul cererii sale, iar prestatorul trebuie s\u0103 poat\u0103 gestiona fluxul de procesare, de la \u00eenregistrare p\u00e2n\u0103 la generarea r\u0103spunsului final.</p> </li> <li> <p>Comunicarea rezultatului c\u0103tre solicitant    Platforma trebuie s\u0103 faciliteze transmiterea r\u0103spunsului generat \u00een urma proces\u0103rii cererii, inclusiv notific\u0103ri \u0219i documente asociate.</p> </li> </ol> <p></p> <p>\ud83d\udee0\ufe0f \u00cen situa\u021biile \u00een care prestatorul de servicii nu are infrastructura necesar\u0103 pentru procesarea solicit\u0103rilor, \u00eentreaga logic\u0103 de procesare poate fi dezvoltat\u0103 \u00een cadrul aceleia\u0219i solu\u021bii. Astfel, serviciul devine complet autonom, acoperind toate etapele de la depunere la livrare.</p> <p>Aceast\u0103 structur\u0103 modular\u0103 permite dezvoltarea rapid\u0103, scalabil\u0103 \u0219i u\u0219or de \u00eentre\u021binut a serviciilor publice digitale, oferind un cadru coerent pentru integrarea \u00een platforma FOD.</p>"},{"location":"fod/aplicatia/utilizarea%20stilurilor%20fod/","title":"Utilizarea stilurilor FOD","text":""},{"location":"fod/aplicatia/utilizarea%20stilurilor%20fod/#utilizarea-stilurilor-fod","title":"Utilizarea stilurilor FOD","text":"<p>Pentru a utiliza stilurile vizuale furnizate de FOD, este necesar s\u0103 adaugi urm\u0103toarele linii \u00een fi\u0219ierul <code>index.html</code> al aplica\u021biei <code>Client</code>:</p> <pre><code>&lt;link href=\"_content/FOD.Components/css/bootstrap.min.css\" rel=\"stylesheet\" /&gt;\n&lt;link href=\"_content/FOD.Components/FodComponents.min.css\" rel=\"stylesheet\" /&gt;\n&lt;link href=\"_content/FOD.Components/css/font-awesome-icons.min.css\" rel=\"stylesheet\" /&gt;\n</code></pre> <p>De asemenea, pentru func\u021bionalit\u0103\u021bile JavaScript ale componentelor, trebuie s\u0103 adaugi urm\u0103toarea linie:</p> <pre><code>&lt;script src=\"_content/FOD.Components/FodComponents.min.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"fod/aplicatia/verificare/","title":"Verificarea st\u0103rii unei solicit\u0103ri","text":"<p>Pentru a asigura transparen\u021ba \u0219i accesul continuu al utilizatorului la informa\u021biile despre cererea depus\u0103, Frontoffice-ul trebuie s\u0103 includ\u0103 o func\u021bionalitate de verificare a st\u0103rii unei solicit\u0103ri.</p>"},{"location":"fod/aplicatia/verificare/#functionalitate","title":"Func\u021bionalitate","text":"<p>Aceast\u0103 func\u021bionalitate permite solicitantului s\u0103:</p> <ul> <li>Vizualizeze stadiul actual al solicit\u0103rii (ex: \u00een analiz\u0103, acceptat\u0103, respins\u0103, \u00een curs de livrare etc.);</li> <li>Acceseze eventuale documente emise sau notific\u0103ri generate pe parcursul proces\u0103rii;</li> <li>Urm\u0103reasc\u0103 eventuale ac\u021biuni suplimentare necesare (ex: completarea unor informa\u021bii, achitarea unei taxe etc.).</li> </ul>"},{"location":"fod/aplicatia/verificare/#implementare","title":"Implementare","text":"<ul> <li>O component\u0103 reutilizabil\u0103 pentru aceast\u0103 func\u021bionalitate este deja disponibil\u0103 \u00een cadrul platformei FOD;</li> <li> <p>Este responsabilitatea dezvoltatorului s\u0103:</p> </li> <li> <p>Creeze o pagin\u0103 dedicat\u0103 \u00een aplica\u021bia Frontoffice;</p> </li> <li>Integreze componenta disponibil\u0103 pentru afi\u0219area st\u0103rii solicit\u0103rii;</li> <li>Configureze sursele de date necesare (ex: ID-ul solicit\u0103rii, token-ul de acces etc.).</li> </ul>"},{"location":"fod/aplicatia/verificare/#exemplu-vizual","title":"Exemplu vizual","text":"<p>Mai jos este un exemplu vizual al componentei de verificare:</p> <p></p> <p>\ud83d\udee0\ufe0f Integrarea acestei func\u021bionalit\u0103\u021bi este recomandat\u0103 pentru toate serviciile care presupun un proces de procesare \u00een timp, oferind o experien\u021b\u0103 complet\u0103 \u0219i transparent\u0103 utilizatorului.</p> <p>Verificarea st\u0103rii solicit\u0103rii este un element esen\u021bial \u00een digitalizarea rela\u021biei dintre cet\u0103\u021bean \u0219i administra\u021bie, contribuind la cre\u0219terea \u00eencrederii \u0219i eficien\u021bei proceselor publice.</p>"},{"location":"fod/arhitectura/","title":"Arhitectur\u0103 \u0219i Design - FOD.Components","text":""},{"location":"fod/arhitectura/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>FOD.Components este construit pe o arhitectur\u0103 modular\u0103 \u0219i scalabil\u0103, special conceput\u0103 pentru cerin\u021bele aplica\u021biilor guvernamentale. Platforma folose\u0219te cele mai bune practici din industrie, combin\u00e2nd flexibilitatea Blazor cu robuste\u021bea .NET pentru a oferi o solu\u021bie complet\u0103 de dezvoltare.</p>"},{"location":"fod/arhitectura/#principii-arhitecturale","title":"Principii Arhitecturale","text":""},{"location":"fod/arhitectura/#1-separarea-responsabilitatilor-soc","title":"1. Separarea Responsabilit\u0103\u021bilor (SoC)","text":"<ul> <li>Componente UI independente \u0219i reutilizabile</li> <li>Logica de business separat\u0103 de prezentare</li> <li>Servicii dedicate pentru fiecare domeniu func\u021bional</li> </ul>"},{"location":"fod/arhitectura/#2-dont-repeat-yourself-dry","title":"2. Don't Repeat Yourself (DRY)","text":"<ul> <li>Componente generice parametrizabile</li> <li>Servicii partajate \u00eentre module</li> <li>Stiluri CSS centralizate \u0219i variabile</li> </ul>"},{"location":"fod/arhitectura/#3-solid-principles","title":"3. SOLID Principles","text":"<ul> <li>Single Responsibility: Fiecare component\u0103 are un singur scop</li> <li>Open/Closed: Extensibil prin mo\u0219tenire \u0219i compozi\u021bie</li> <li>Liskov Substitution: Interfe\u021be consistente</li> <li>Interface Segregation: Interfe\u021be specifice \u0219i focusate</li> <li>Dependency Inversion: Dependen\u021be prin abstrac\u021bii</li> </ul>"},{"location":"fod/arhitectura/#4-security-by-design","title":"4. Security by Design","text":"<ul> <li>Validare input la toate nivelurile</li> <li>Autentificare \u0219i autorizare integrate</li> <li>Criptare date sensibile</li> <li>Audit trail complet</li> </ul>"},{"location":"fod/arhitectura/#arhitectura-sistemului","title":"Arhitectura Sistemului","text":""},{"location":"fod/arhitectura/#diagrama-de-nivel-inalt","title":"Diagrama de Nivel \u00cenalt","text":"<pre><code>graph TB\n    subgraph \"Frontend Layer\"\n        A[Blazor Components]\n        B[JavaScript Interop]\n        C[CSS/SCSS]\n    end\n\n    subgraph \"Application Layer\"\n        D[Component Services]\n        E[Business Logic]\n        F[State Management]\n    end\n\n    subgraph \"Integration Layer\"\n        G[MPass Auth]\n        H[MPay Payments]\n        I[MDelivery]\n        J[Other Gov Services]\n    end\n\n    subgraph \"Data Layer\"\n        K[Entity Framework]\n        L[Repositories]\n        M[Database]\n    end\n\n    A --&gt; D\n    B --&gt; D\n    D --&gt; E\n    E --&gt; F\n    D --&gt; G\n    D --&gt; H\n    D --&gt; I\n    D --&gt; J\n    E --&gt; L\n    L --&gt; K\n    K --&gt; M\n</code></pre>"},{"location":"fod/arhitectura/#structura-modulelor","title":"Structura Modulelor","text":"<pre><code>FOD.Components/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 FOD.Components/              # Componente UI principale\n\u2502   \u251c\u2500\u2500 FOD.Components.Server/       # Servicii server-side\n\u2502   \u251c\u2500\u2500 Fod.Components.Shared/       # Modele \u0219i interfe\u021be partajate\n\u2502   \u251c\u2500\u2500 FOD.EntityFramework/         # Data access layer\n\u2502   \u251c\u2500\u2500 Fod.Integrations.*/          # Module de integrare\n\u2502   \u2514\u2500\u2500 Fod.Components.Services/     # Servicii business\n\u251c\u2500\u2500 test/\n\u2502   \u2514\u2500\u2500 *.Tests/                     # Proiecte de teste\n\u2514\u2500\u2500 docs/\n    \u2514\u2500\u2500 FOD.Docs/                    # Aplica\u021bie documenta\u021bie\n</code></pre>"},{"location":"fod/arhitectura/#arhitectura-componentelor","title":"Arhitectura Componentelor","text":""},{"location":"fod/arhitectura/#ierarhia-componentelor","title":"Ierarhia Componentelor","text":"<pre><code>graph TD\n    A[BaseComponent] --&gt; B[FodComponentBase]\n    B --&gt; C[Form Components]\n    B --&gt; D[Layout Components]\n    B --&gt; E[Display Components]\n    B --&gt; F[Business Components]\n\n    C --&gt; G[FodInput]\n    C --&gt; H[FodSelect]\n    C --&gt; I[FodDatePicker]\n\n    D --&gt; J[FodContainer]\n    D --&gt; K[FodGrid]\n    D --&gt; L[FodCard]\n\n    E --&gt; M[FodTable]\n    E --&gt; N[FodList]\n    E --&gt; O[FodChart]\n\n    F --&gt; P[FodRequestor]\n    F --&gt; Q[FodApostila]\n    F --&gt; R[FodPayment]\n</code></pre>"},{"location":"fod/arhitectura/#lifecycle-componente","title":"Lifecycle Componente","text":"<pre><code>public abstract class FodComponentBase : ComponentBase\n{\n    // 1. Initialization\n    protected override void OnInitialized() { }\n    protected override async Task OnInitializedAsync() { }\n\n    // 2. Parameter Setting\n    protected override void OnParametersSet() { }\n    protected override async Task OnParametersSetAsync() { }\n\n    // 3. After Render\n    protected override void OnAfterRender(bool firstRender) { }\n    protected override async Task OnAfterRenderAsync(bool firstRender) { }\n\n    // 4. Disposal\n    public virtual void Dispose() { }\n}\n</code></pre>"},{"location":"fod/arhitectura/#straturile-aplicatiei","title":"Straturile Aplica\u021biei","text":""},{"location":"fod/arhitectura/#1-presentation-layer-ui","title":"1. Presentation Layer (UI)","text":"<p>Responsabilit\u0103\u021bi: - Randare componente Blazor - Gestionare evenimente utilizator - Binding date - Validare client-side</p> <p>Tehnologii: - Blazor WebAssembly/Server - HTML/CSS/SCSS - JavaScript Interop</p>"},{"location":"fod/arhitectura/#2-application-layer","title":"2. Application Layer","text":"<p>Responsabilit\u0103\u021bi: - Orchestrare procese business - Transformare date (DTO \u2194 Entity) - Validare business rules - Cache management</p> <p>Componente: - Application Services - DTOs (Data Transfer Objects) - Mappers - Validators</p>"},{"location":"fod/arhitectura/#3-domain-layer","title":"3. Domain Layer","text":"<p>Responsabilit\u0103\u021bi: - Entit\u0103\u021bi business - Logic\u0103 de domeniu - Reguli business - Domain events</p> <p>Componente: - Domain Entities - Value Objects - Domain Services - Specifications</p>"},{"location":"fod/arhitectura/#4-infrastructure-layer","title":"4. Infrastructure Layer","text":"<p>Responsabilit\u0103\u021bi: - Acces la date - Integr\u0103ri externe - Logging - Caching</p> <p>Componente: - DbContext - Repositories - External Service Clients - Infrastructure Services</p>"},{"location":"fod/arhitectura/#design-patterns-utilizate","title":"Design Patterns Utilizate","text":""},{"location":"fod/arhitectura/#1-repository-pattern","title":"1. Repository Pattern","text":"<pre><code>public interface IRepository&lt;T&gt; where T : BaseEntity\n{\n    Task&lt;T&gt; GetByIdAsync(int id);\n    Task&lt;IEnumerable&lt;T&gt;&gt; GetAllAsync();\n    Task&lt;T&gt; AddAsync(T entity);\n    void Update(T entity);\n    void Delete(T entity);\n}\n\npublic class Repository&lt;T&gt; : IRepository&lt;T&gt; where T : BaseEntity\n{\n    protected readonly DbContext _context;\n    protected readonly DbSet&lt;T&gt; _dbSet;\n\n    public Repository(DbContext context)\n    {\n        _context = context;\n        _dbSet = context.Set&lt;T&gt;();\n    }\n\n    // Implementare metode...\n}\n</code></pre>"},{"location":"fod/arhitectura/#2-unit-of-work-pattern","title":"2. Unit of Work Pattern","text":"<pre><code>public interface IUnitOfWork : IDisposable\n{\n    IRepository&lt;T&gt; Repository&lt;T&gt;() where T : BaseEntity;\n    Task&lt;int&gt; SaveChangesAsync();\n    Task BeginTransactionAsync();\n    Task CommitTransactionAsync();\n    Task RollbackTransactionAsync();\n}\n</code></pre>"},{"location":"fod/arhitectura/#3-factory-pattern","title":"3. Factory Pattern","text":"<pre><code>public interface IComponentFactory&lt;TComponent&gt; where TComponent : IComponent\n{\n    TComponent Create(ComponentParameters parameters);\n}\n\npublic class FodInputFactory : IComponentFactory&lt;FodInput&gt;\n{\n    public FodInput Create(ComponentParameters parameters)\n    {\n        return parameters.Type switch\n        {\n            \"text\" =&gt; new FodInputText(parameters),\n            \"number\" =&gt; new FodInputNumber(parameters),\n            \"date\" =&gt; new FodDatePicker(parameters),\n            _ =&gt; new FodInput(parameters)\n        };\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#4-observer-pattern","title":"4. Observer Pattern","text":"<pre><code>public interface INotificationService\n{\n    event EventHandler&lt;NotificationEventArgs&gt; OnNotification;\n    void Subscribe(Action&lt;NotificationEventArgs&gt; handler);\n    void Unsubscribe(Action&lt;NotificationEventArgs&gt; handler);\n    Task NotifyAsync(string message, NotificationType type);\n}\n</code></pre>"},{"location":"fod/arhitectura/#5-strategy-pattern","title":"5. Strategy Pattern","text":"<pre><code>public interface IValidationStrategy\n{\n    ValidationResult Validate(object value);\n}\n\npublic class EmailValidationStrategy : IValidationStrategy\n{\n    public ValidationResult Validate(object value)\n    {\n        var email = value?.ToString();\n        if (string.IsNullOrEmpty(email) || !email.Contains(\"@\"))\n        {\n            return ValidationResult.Error(\"Email invalid\");\n        }\n        return ValidationResult.Success();\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#dependency-injection","title":"Dependency Injection","text":""},{"location":"fod/arhitectura/#configurare-servicii","title":"Configurare Servicii","text":"<pre><code>public static class ServiceCollectionExtensions\n{\n    public static IServiceCollection AddFodComponents(\n        this IServiceCollection services,\n        Action&lt;FodComponentsOptions&gt; configure = null)\n    {\n        // Configurare op\u021biuni\n        var options = new FodComponentsOptions();\n        configure?.Invoke(options);\n        services.AddSingleton(options);\n\n        // \u00cenregistrare servicii componente\n        services.AddScoped&lt;IAuthenticationService, AuthenticationService&gt;();\n        services.AddScoped&lt;IUserService, UserService&gt;();\n        services.AddScoped&lt;INotificationService, NotificationService&gt;();\n\n        // \u00cenregistrare factories\n        services.AddTransient&lt;IComponentFactory&lt;FodInput&gt;, FodInputFactory&gt;();\n\n        // \u00cenregistrare repositories\n        services.AddScoped(typeof(IRepository&lt;&gt;), typeof(Repository&lt;&gt;));\n        services.AddScoped&lt;IUnitOfWork, UnitOfWork&gt;();\n\n        return services;\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#lifecycle-management","title":"Lifecycle Management","text":"<pre><code>// Singleton - o singur\u0103 instan\u021b\u0103 pentru toat\u0103 aplica\u021bia\nservices.AddSingleton&lt;IConfigurationService, ConfigurationService&gt;();\n\n// Scoped - o instan\u021b\u0103 per request/connection\nservices.AddScoped&lt;IUserContextService, UserContextService&gt;();\n\n// Transient - o instan\u021b\u0103 nou\u0103 de fiecare dat\u0103\nservices.AddTransient&lt;IEmailService, EmailService&gt;();\n</code></pre>"},{"location":"fod/arhitectura/#state-management","title":"State Management","text":""},{"location":"fod/arhitectura/#1-component-state","title":"1. Component State","text":"<pre><code>public class FodDataTable&lt;TItem&gt; : FodComponentBase\n{\n    // Local state\n    private List&lt;TItem&gt; _items = new();\n    private int _currentPage = 1;\n    private string _searchTerm = string.Empty;\n\n    // Parameters\n    [Parameter] public IEnumerable&lt;TItem&gt; Items { get; set; }\n    [Parameter] public int PageSize { get; set; } = 10;\n\n    // Computed properties\n    private IEnumerable&lt;TItem&gt; FilteredItems =&gt; \n        _items.Where(item =&gt; MatchesSearch(item, _searchTerm));\n\n    private IEnumerable&lt;TItem&gt; PagedItems =&gt; \n        FilteredItems\n            .Skip((_currentPage - 1) * PageSize)\n            .Take(PageSize);\n}\n</code></pre>"},{"location":"fod/arhitectura/#2-application-state","title":"2. Application State","text":"<pre><code>public interface IStateManager\n{\n    T GetState&lt;T&gt;(string key) where T : class;\n    void SetState&lt;T&gt;(string key, T value) where T : class;\n    void RemoveState(string key);\n    event EventHandler&lt;StateChangedEventArgs&gt; StateChanged;\n}\n\npublic class StateManager : IStateManager\n{\n    private readonly Dictionary&lt;string, object&gt; _state = new();\n    public event EventHandler&lt;StateChangedEventArgs&gt; StateChanged;\n\n    public T GetState&lt;T&gt;(string key) where T : class\n    {\n        return _state.TryGetValue(key, out var value) ? value as T : null;\n    }\n\n    public void SetState&lt;T&gt;(string key, T value) where T : class\n    {\n        _state[key] = value;\n        StateChanged?.Invoke(this, new StateChangedEventArgs(key));\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#3-cascading-state","title":"3. Cascading State","text":"<pre><code>&lt;CascadingValue Value=\"@UserContext\"&gt;\n    &lt;CascadingValue Value=\"@ThemeSettings\"&gt;\n        &lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n            &lt;Found Context=\"routeData\"&gt;\n                &lt;RouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(MainLayout)\" /&gt;\n            &lt;/Found&gt;\n        &lt;/Router&gt;\n    &lt;/CascadingValue&gt;\n&lt;/CascadingValue&gt;\n\n@code {\n    private UserContext UserContext { get; set; }\n    private ThemeSettings ThemeSettings { get; set; }\n}\n</code></pre>"},{"location":"fod/arhitectura/#event-handling-si-communication","title":"Event Handling \u0219i Communication","text":""},{"location":"fod/arhitectura/#1-component-events","title":"1. Component Events","text":"<pre><code>public class FodButton : FodComponentBase\n{\n    [Parameter] public EventCallback&lt;MouseEventArgs&gt; OnClick { get; set; }\n    [Parameter] public EventCallback&lt;FocusEventArgs&gt; OnFocus { get; set; }\n    [Parameter] public EventCallback&lt;FocusEventArgs&gt; OnBlur { get; set; }\n\n    private async Task HandleClick(MouseEventArgs e)\n    {\n        if (!Disabled)\n        {\n            await OnClick.InvokeAsync(e);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#2-event-aggregator","title":"2. Event Aggregator","text":"<pre><code>public interface IEventAggregator\n{\n    void Subscribe&lt;TEvent&gt;(Action&lt;TEvent&gt; handler);\n    void Unsubscribe&lt;TEvent&gt;(Action&lt;TEvent&gt; handler);\n    Task PublishAsync&lt;TEvent&gt;(TEvent eventData);\n}\n\npublic class EventAggregator : IEventAggregator\n{\n    private readonly Dictionary&lt;Type, List&lt;Delegate&gt;&gt; _handlers = new();\n\n    public void Subscribe&lt;TEvent&gt;(Action&lt;TEvent&gt; handler)\n    {\n        var eventType = typeof(TEvent);\n        if (!_handlers.ContainsKey(eventType))\n        {\n            _handlers[eventType] = new List&lt;Delegate&gt;();\n        }\n        _handlers[eventType].Add(handler);\n    }\n\n    public async Task PublishAsync&lt;TEvent&gt;(TEvent eventData)\n    {\n        var eventType = typeof(TEvent);\n        if (_handlers.TryGetValue(eventType, out var handlers))\n        {\n            foreach (Action&lt;TEvent&gt; handler in handlers)\n            {\n                await Task.Run(() =&gt; handler(eventData));\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#securitate-arhitecturala","title":"Securitate Arhitectural\u0103","text":""},{"location":"fod/arhitectura/#1-authentication-flow","title":"1. Authentication Flow","text":"<pre><code>sequenceDiagram\n    participant U as User\n    participant B as Browser\n    participant A as App\n    participant M as MPass\n    participant S as Server\n\n    U-&gt;&gt;B: Access Protected Page\n    B-&gt;&gt;A: Request Page\n    A-&gt;&gt;A: Check Authentication\n    A-&gt;&gt;B: Redirect to Login\n    B-&gt;&gt;M: MPass Login\n    M-&gt;&gt;B: Return Token\n    B-&gt;&gt;A: Send Token\n    A-&gt;&gt;S: Validate Token\n    S-&gt;&gt;A: User Claims\n    A-&gt;&gt;B: Render Page\n</code></pre>"},{"location":"fod/arhitectura/#2-authorization-layers","title":"2. Authorization Layers","text":"<pre><code>// Component level\n[Authorize(Roles = \"Admin,Manager\")]\npublic class AdminDashboard : FodComponentBase { }\n\n// Method level\n[Authorize(Policy = \"CanEditRequests\")]\npublic async Task UpdateRequest(RequestDto request) { }\n\n// Code level\n@if (AuthorizationService.AuthorizeAsync(User, \"CanDelete\").Result.Succeeded)\n{\n    &lt;FodButton OnClick=\"Delete\"&gt;\u0218terge&lt;/FodButton&gt;\n}\n</code></pre>"},{"location":"fod/arhitectura/#3-data-protection","title":"3. Data Protection","text":"<pre><code>public class EncryptionService : IEncryptionService\n{\n    private readonly IDataProtector _protector;\n\n    public EncryptionService(IDataProtectionProvider provider)\n    {\n        _protector = provider.CreateProtector(\"FOD.Components.Encryption\");\n    }\n\n    public string Encrypt(string plainText)\n    {\n        return _protector.Protect(plainText);\n    }\n\n    public string Decrypt(string cipherText)\n    {\n        return _protector.Unprotect(cipherText);\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#performance-optimization","title":"Performance Optimization","text":""},{"location":"fod/arhitectura/#1-lazy-loading","title":"1. Lazy Loading","text":"<pre><code>public class FodVirtualize&lt;TItem&gt; : FodComponentBase\n{\n    [Parameter] public ItemsProviderDelegate&lt;TItem&gt; ItemsProvider { get; set; }\n    [Parameter] public RenderFragment&lt;TItem&gt; ItemTemplate { get; set; }\n    [Parameter] public float ItemSize { get; set; } = 50f;\n\n    private async ValueTask&lt;ItemsProviderResult&lt;TItem&gt;&gt; LoadItems(\n        ItemsProviderRequest request)\n    {\n        var items = await ItemsProvider(request);\n        return items;\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#2-caching-strategy","title":"2. Caching Strategy","text":"<pre><code>public class CacheService : ICacheService\n{\n    private readonly IMemoryCache _memoryCache;\n    private readonly IDistributedCache _distributedCache;\n\n    public async Task&lt;T&gt; GetOrCreateAsync&lt;T&gt;(\n        string key, \n        Func&lt;Task&lt;T&gt;&gt; factory,\n        CacheOptions options = null)\n    {\n        // L1 Cache - Memory\n        if (_memoryCache.TryGetValue(key, out T cachedValue))\n        {\n            return cachedValue;\n        }\n\n        // L2 Cache - Distributed\n        var distributedValue = await _distributedCache.GetAsync(key);\n        if (distributedValue != null)\n        {\n            var value = JsonSerializer.Deserialize&lt;T&gt;(distributedValue);\n            _memoryCache.Set(key, value, options?.MemoryExpiration);\n            return value;\n        }\n\n        // Generate value\n        var newValue = await factory();\n\n        // Store in both caches\n        await SetAsync(key, newValue, options);\n\n        return newValue;\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#3-component-optimization","title":"3. Component Optimization","text":"<pre><code>public class OptimizedComponent : FodComponentBase, IDisposable\n{\n    private readonly CancellationTokenSource _cts = new();\n    private Timer _debounceTimer;\n\n    // Prevent unnecessary renders\n    protected override bool ShouldRender()\n    {\n        return HasStateChanged();\n    }\n\n    // Debounce expensive operations\n    private void OnSearchInput(ChangeEventArgs e)\n    {\n        _debounceTimer?.Dispose();\n        _debounceTimer = new Timer(async _ =&gt;\n        {\n            await InvokeAsync(async () =&gt;\n            {\n                await PerformSearch(e.Value.ToString());\n                StateHasChanged();\n            });\n        }, null, 300, Timeout.Infinite);\n    }\n\n    public void Dispose()\n    {\n        _cts?.Cancel();\n        _cts?.Dispose();\n        _debounceTimer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#scalability-considerations","title":"Scalability Considerations","text":""},{"location":"fod/arhitectura/#1-microservices-ready","title":"1. Microservices Ready","text":"<pre><code>graph LR\n    A[API Gateway] --&gt; B[Auth Service]\n    A --&gt; C[Request Service]\n    A --&gt; D[Payment Service]\n    A --&gt; E[Document Service]\n\n    B --&gt; F[(Auth DB)]\n    C --&gt; G[(Request DB)]\n    D --&gt; H[(Payment DB)]\n    E --&gt; I[(Document Store)]\n</code></pre>"},{"location":"fod/arhitectura/#2-message-queue-integration","title":"2. Message Queue Integration","text":"<pre><code>public interface IMessageBus\n{\n    Task PublishAsync&lt;T&gt;(T message, string topic = null);\n    Task SubscribeAsync&lt;T&gt;(string topic, Func&lt;T, Task&gt; handler);\n}\n\npublic class ServiceBusMessageBus : IMessageBus\n{\n    private readonly ServiceBusClient _client;\n\n    public async Task PublishAsync&lt;T&gt;(T message, string topic = null)\n    {\n        var sender = _client.CreateSender(topic ?? typeof(T).Name);\n        var json = JsonSerializer.Serialize(message);\n        await sender.SendMessageAsync(new ServiceBusMessage(json));\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#3-load-balancing","title":"3. Load Balancing","text":"<pre><code>public class LoadBalancedHttpClient\n{\n    private readonly List&lt;string&gt; _endpoints;\n    private int _currentIndex = 0;\n\n    public async Task&lt;T&gt; GetAsync&lt;T&gt;(string path)\n    {\n        var endpoint = GetNextEndpoint();\n        using var client = new HttpClient { BaseAddress = new Uri(endpoint) };\n\n        var response = await client.GetAsync(path);\n        response.EnsureSuccessStatusCode();\n\n        var json = await response.Content.ReadAsStringAsync();\n        return JsonSerializer.Deserialize&lt;T&gt;(json);\n    }\n\n    private string GetNextEndpoint()\n    {\n        var endpoint = _endpoints[_currentIndex];\n        _currentIndex = (_currentIndex + 1) % _endpoints.Count;\n        return endpoint;\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"fod/arhitectura/#1-container-support","title":"1. Container Support","text":"<pre><code># Dockerfile\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY [\"FOD.Components.sln\", \".\"]\nCOPY [\"src/FOD.Components/FOD.Components.csproj\", \"src/FOD.Components/\"]\nRUN dotnet restore\n\nCOPY . .\nWORKDIR \"/src/src/FOD.Components\"\nRUN dotnet build -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish -c Release -o /app/publish\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"FOD.Components.dll\"]\n</code></pre>"},{"location":"fod/arhitectura/#2-kubernetes-deployment","title":"2. Kubernetes Deployment","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: fod-components\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: fod-components\n  template:\n    metadata:\n      labels:\n        app: fod-components\n    spec:\n      containers:\n      - name: fod-components\n        image: fodregistry.azurecr.io/fod-components:latest\n        ports:\n        - containerPort: 80\n        env:\n        - name: ASPNETCORE_ENVIRONMENT\n          value: \"Production\"\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n</code></pre>"},{"location":"fod/arhitectura/#monitoring-si-observability","title":"Monitoring \u0219i Observability","text":""},{"location":"fod/arhitectura/#1-structured-logging","title":"1. Structured Logging","text":"<pre><code>public class LoggingService : ILoggingService\n{\n    private readonly ILogger&lt;LoggingService&gt; _logger;\n\n    public void LogOperation(string operation, object parameters, TimeSpan duration)\n    {\n        using (_logger.BeginScope(new Dictionary&lt;string, object&gt;\n        {\n            [\"Operation\"] = operation,\n            [\"Duration\"] = duration.TotalMilliseconds,\n            [\"Timestamp\"] = DateTime.UtcNow\n        }))\n        {\n            _logger.LogInformation(\n                \"Operation {Operation} completed in {Duration}ms\",\n                operation,\n                duration.TotalMilliseconds);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#2-health-checks","title":"2. Health Checks","text":"<pre><code>public class FodHealthCheck : IHealthCheck\n{\n    private readonly IDbContext _dbContext;\n    private readonly IEnumerable&lt;IExternalService&gt; _externalServices;\n\n    public async Task&lt;HealthCheckResult&gt; CheckHealthAsync(\n        HealthCheckContext context,\n        CancellationToken cancellationToken = default)\n    {\n        try\n        {\n            // Check database\n            await _dbContext.Database.CanConnectAsync(cancellationToken);\n\n            // Check external services\n            foreach (var service in _externalServices)\n            {\n                await service.CheckHealthAsync(cancellationToken);\n            }\n\n            return HealthCheckResult.Healthy(\"All systems operational\");\n        }\n        catch (Exception ex)\n        {\n            return HealthCheckResult.Unhealthy(\"System check failed\", ex);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/arhitectura/#concluzie","title":"Concluzie","text":"<p>Arhitectura FOD.Components este conceput\u0103 pentru a oferi maximum de flexibilitate \u0219i scalabilitate, respect\u00e2nd \u00een acela\u0219i timp cerin\u021bele stricte de securitate \u0219i performan\u021b\u0103 ale aplica\u021biilor guvernamentale. Prin utilizarea pattern-urilor moderne \u0219i a celor mai bune practici, platforma asigur\u0103 dezvoltarea rapid\u0103 a aplica\u021biilor robuste \u0219i u\u0219or de \u00eentre\u021binut.</p>"},{"location":"fod/arhitectura/deployment/","title":"Deployment","text":"<p>Aceast\u0103 pagin\u0103 descrie procesul de deployment.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/arhitectura/deployment/#medii-de-deployment","title":"Medii de deployment","text":""},{"location":"fod/arhitectura/deployment/#cicd","title":"CI/CD","text":""},{"location":"fod/arhitectura/deployment/#configurare","title":"Configurare","text":""},{"location":"fod/arhitectura/patterns/","title":"Design Patterns","text":"<p>Aceast\u0103 pagin\u0103 descrie pattern-urile arhitecturale utilizate.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/arhitectura/patterns/#pattern-uri-utilizate","title":"Pattern-uri utilizate","text":""},{"location":"fod/arhitectura/patterns/#best-practices","title":"Best practices","text":""},{"location":"fod/arhitectura/patterns/#antipattern-uri","title":"Antipattern-uri","text":""},{"location":"fod/arhitectura/performance/","title":"Performan\u021b\u0103","text":"<p>Aceast\u0103 pagin\u0103 descrie optimiz\u0103rile de performan\u021b\u0103.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/arhitectura/performance/#optimizari","title":"Optimiz\u0103ri","text":""},{"location":"fod/arhitectura/performance/#caching","title":"Caching","text":""},{"location":"fod/arhitectura/performance/#monitorizare","title":"Monitorizare","text":""},{"location":"fod/arhitectura/securitate/","title":"Securitate","text":"<p>Aceast\u0103 pagin\u0103 descrie aspectele de securitate.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/arhitectura/securitate/#principii-de-securitate","title":"Principii de securitate","text":""},{"location":"fod/arhitectura/securitate/#autentificare-si-autorizare","title":"Autentificare \u0219i autorizare","text":""},{"location":"fod/arhitectura/securitate/#protectia-datelor","title":"Protec\u021bia datelor","text":""},{"location":"fod/arhitectura/structura/","title":"Structura Proiectului","text":"<p>Aceast\u0103 pagin\u0103 descrie structura arhitectural\u0103 a FOD.Components.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/arhitectura/structura/#organizare-proiect","title":"Organizare proiect","text":""},{"location":"fod/arhitectura/structura/#module-principale","title":"Module principale","text":""},{"location":"fod/arhitectura/structura/#dependente","title":"Dependen\u021be","text":""},{"location":"fod/componente/CultureSelector/","title":"CultureSelector","text":""},{"location":"fod/componente/CultureSelector/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>CultureSelector</code> este o versiune alternativ\u0103 \u0219i mai simpl\u0103 a selector-ului de limb\u0103, implementat\u0103 ca un element <code>&lt;select&gt;</code> standard. De\u0219i este momentan comentat\u0103 \u00een codul surs\u0103, ofer\u0103 aceea\u0219i func\u021bionalitate de baz\u0103 ca LanguageSelector, dar cu o interfa\u021b\u0103 mai simpl\u0103 \u0219i mai accesibil\u0103.</p>"},{"location":"fod/componente/CultureSelector/#status","title":"Status","text":"<p>\u26a0\ufe0f Component\u0103 dezactivat\u0103 - Aceast\u0103 component\u0103 este \u00een prezent comentat\u0103 \u00een codul surs\u0103. Documenta\u021bia este furnizat\u0103 pentru referin\u021b\u0103 \u0219i posibil\u0103 reactivare viitoare.</p>"},{"location":"fod/componente/CultureSelector/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/CultureSelector/#exemplu-de-baza-cand-va-fi-activata","title":"Exemplu de baz\u0103 (c\u00e2nd va fi activat\u0103)","text":"<pre><code>&lt;CultureSelector /&gt;\n</code></pre>"},{"location":"fod/componente/CultureSelector/#in-formular-de-setari","title":"\u00cen formular de set\u0103ri","text":"<pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;label&gt;Limba preferat\u0103:&lt;/label&gt;\n    &lt;CultureSelector /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/CultureSelector/#in-toolbar","title":"\u00cen toolbar","text":"<pre><code>&lt;div class=\"toolbar\"&gt;\n    &lt;div class=\"toolbar-section\"&gt;\n        &lt;span&gt;Limb\u0103:&lt;/span&gt;\n        &lt;CultureSelector /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/CultureSelector/#atribute-disponibile","title":"Atribute disponibile","text":"<p>Componenta nu expune parametri publici \u00een implementarea actual\u0103.</p>"},{"location":"fod/componente/CultureSelector/#limbi-suportate","title":"Limbi suportate","text":"<p>Acelea\u0219i ca \u00een LanguageSelector:</p> Cod cultur\u0103 Limba DisplayName ro-MD Rom\u00e2n\u0103 Rom\u00e2n\u0103 (Republica Moldova) en-US Englez\u0103 English (United States) ru-RU Rus\u0103 \u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u0420\u043e\u0441\u0441\u0438\u044f)"},{"location":"fod/componente/CultureSelector/#evenimente","title":"Evenimente","text":"<p>Schimbarea selec\u021biei declan\u0219eaz\u0103 actualizarea culturii \u0219i re\u00eenc\u0103rcarea paginii.</p>"},{"location":"fod/componente/CultureSelector/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/CultureSelector/#componente-asociate","title":"Componente asociate","text":"<ul> <li>IJSRuntime pentru JavaScript interop</li> <li>NavigationManager pentru re\u00eenc\u0103rcare pagin\u0103</li> </ul>"},{"location":"fod/componente/CultureSelector/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/CultureSelector/#structura-html","title":"Structura HTML","text":"<pre><code>&lt;label&gt;\n    &lt;select&gt;\n        &lt;option value=\"ro-MD\"&gt;Rom\u00e2n\u0103 (Republica Moldova)&lt;/option&gt;\n        &lt;option value=\"en-US\"&gt;English (United States)&lt;/option&gt;\n        &lt;option value=\"ru-RU\"&gt;\u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u0420\u043e\u0441\u0441\u0438\u044f)&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/label&gt;\n</code></pre>"},{"location":"fod/componente/CultureSelector/#personalizare","title":"Personalizare","text":"<pre><code>/* Select box styling */\n.culture-selector select {\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    background-color: white;\n    cursor: pointer;\n    min-width: 200px;\n}\n\n/* Focus state */\n.culture-selector select:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2);\n}\n\n/* Option styling (limited browser support) */\n.culture-selector option {\n    padding: 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/CultureSelector/#diferente-fata-de-languageselector","title":"Diferen\u021be fa\u021b\u0103 de LanguageSelector","text":"Aspect CultureSelector LanguageSelector UI Element <code>&lt;select&gt;</code> nativ Dropdown custom Complexitate Simpl\u0103 Moderat\u0103 Accesibilitate Excelent\u0103 (nativ\u0103) Necesit\u0103 ARIA Stilizare Limitat\u0103 Flexibil\u0103 Mobile UX Nativ\u0103 OS Custom Dimensiune cod Minim\u0103 Moderat\u0103"},{"location":"fod/componente/CultureSelector/#avantaje","title":"Avantaje","text":"<ol> <li>Accesibilitate nativ\u0103 - Suport complet pentru keyboard \u0219i screen readers</li> <li>Mobile friendly - Folose\u0219te picker-ul nativ al OS-ului</li> <li>Simplitate - Cod minimal, u\u0219or de \u00een\u021beles</li> <li>No JavaScript - Pentru afi\u0219are (doar pentru schimbare)</li> <li>Performance - F\u0103r\u0103 componente custom sau CSS complex</li> </ol>"},{"location":"fod/componente/CultureSelector/#dezavantaje","title":"Dezavantaje","text":"<ol> <li>Stilizare limitat\u0103 - Dificil de personalizat vizual</li> <li>Inconsisten\u021b\u0103 vizual\u0103 - Arat\u0103 diferit pe fiecare OS/browser</li> <li>F\u0103r\u0103 iconi\u021be - Nu suport\u0103 iconi\u021be \u00een op\u021biuni</li> <li>Layout fix - Nu poate fi integrat \u00een meniuri complexe</li> </ol>"},{"location":"fod/componente/CultureSelector/#recomandari-de-utilizare","title":"Recomand\u0103ri de utilizare","text":"<p>Folosi\u021bi CultureSelector c\u00e2nd: - Accesibilitatea este prioritar\u0103 - Designul permite elemente native - Aplica\u021bia este orientat\u0103 spre mobile - Simplicitatea este important\u0103</p> <p>Folosi\u021bi LanguageSelector c\u00e2nd: - Ave\u021bi cerin\u021be stricte de design - Trebuie integrat\u0103 \u00een header/navbar - Dori\u021bi iconi\u021be \u0219i formatare complex\u0103 - Consisten\u021ba vizual\u0103 este critic\u0103</p>"},{"location":"fod/componente/CultureSelector/#implementare-recomandata","title":"Implementare recomandat\u0103","text":"<pre><code>@using System.Globalization\n@using Microsoft.JSInterop\n@inject IJSRuntime JSRuntime\n@inject NavigationManager NavigationManager\n\n&lt;div class=\"culture-selector\"&gt;\n    &lt;label&gt;\n        &lt;span class=\"sr-only\"&gt;Selecta\u021bi limba&lt;/span&gt;\n        &lt;select @onchange=\"OnCultureChanged\" value=\"@CultureInfo.CurrentCulture.Name\"&gt;\n            @foreach (var culture in supportedCultures)\n            {\n                &lt;option value=\"@culture.Name\"&gt;@culture.DisplayName&lt;/option&gt;\n            }\n        &lt;/select&gt;\n    &lt;/label&gt;\n&lt;/div&gt;\n\n@code {\n    private CultureInfo[] supportedCultures = new[]\n    {\n        new CultureInfo(\"ro-MD\"),\n        new CultureInfo(\"en-US\"), \n        new CultureInfo(\"ru-RU\"),\n    };\n\n    private async Task OnCultureChanged(ChangeEventArgs e)\n    {\n        var cultureName = e.Value?.ToString();\n        if (!string.IsNullOrEmpty(cultureName))\n        {\n            await JSRuntime.InvokeVoidAsync(\"blazorCulture.set\", cultureName);\n            NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/CultureSelector/#concluzie","title":"Concluzie","text":"<p>CultureSelector ofer\u0103 o alternativ\u0103 simpl\u0103 \u0219i accesibil\u0103 pentru selec\u021bia limbii. De\u0219i comentat\u0103 \u00een prezent, merit\u0103 considerat\u0103 pentru aplica\u021bii unde simplitatea \u0219i accesibilitatea sunt mai importante dec\u00e2t personalizarea vizual\u0103 avansat\u0103.</p>"},{"location":"fod/componente/FODInputNumber/","title":"Input Number","text":""},{"location":"fod/componente/FODInputNumber/#documentatie-pentru-componenta-fodinputnumber","title":"Documenta\u021bie pentru componenta FODInputNumber","text":""},{"location":"fod/componente/FODInputNumber/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FODInputNumber</code> este o component\u0103 de formular special conceput\u0103 pentru introducerea valorilor numerice. Se integreaz\u0103 perfect cu sistemul de formulare \u0219i validare Blazor, oferind o experien\u021b\u0103 consistent\u0103 pentru introducerea numerelor zecimale.</p> <p>Componenta suport\u0103: - Validare numeric\u0103 integrat\u0103 - Suport pentru numere zecimale (tip <code>decimal</code>) - Placeholder \u0219i label personalizabile - Mod readonly pentru afi\u0219are - Validare cu Range \u0219i Required - Integrare complet\u0103 cu EditForm \u0219i ValidationMessage</p>"},{"location":"fod/componente/FODInputNumber/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FODInputNumber/#input-numeric-de-baza","title":"Input numeric de baz\u0103","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;FODInputNumber Label=\"Cantitate\" @bind-Value=\"model.Amount\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n\n    public class FormModel\n    {\n        public decimal Amount { get; set; } = 100;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#input-cu-placeholder-si-descriere","title":"Input cu placeholder \u0219i descriere","text":"<pre><code>&lt;FODInputNumber \n    Label=\"Pre\u021b (MDL)\" \n    @bind-Value=\"model.Price\" \n    Placeholder=\"0.00\"\n    Description=\"Introduce\u021bi pre\u021bul \u00een lei moldovene\u0219ti\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#input-cu-validare","title":"Input cu validare","text":"<pre><code>&lt;EditForm Model=\"validationModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"V\u00e2rst\u0103\" \n            @bind-Value=\"validationModel.Age\" \n            Required=\"true\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Salariu minim\" \n            @bind-Value=\"validationModel.MinSalary\" \n            Placeholder=\"Introduce\u021bi suma minim\u0103\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ValidationModel validationModel = new();\n\n    public class ValidationModel\n    {\n        [Required(ErrorMessage = \"V\u00e2rsta este obligatorie\")]\n        [Range(18, 120, ErrorMessage = \"V\u00e2rsta trebuie s\u0103 fie \u00eentre 18 \u0219i 120\")]\n        public decimal Age { get; set; }\n\n        [Required(ErrorMessage = \"Salariul minim este obligatoriu\")]\n        [Range(1000, 100000, ErrorMessage = \"Salariul trebuie s\u0103 fie \u00eentre 1,000 \u0219i 100,000 MDL\")]\n        public decimal MinSalary { get; set; }\n    }\n\n    private void HandleSubmit()\n    {\n        // Procesare formular\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#input-readonly-pentru-calcule","title":"Input readonly pentru calcule","text":"<pre><code>&lt;EditForm Model=\"calculationModel\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Pre\u021b unitar\" \n            @bind-Value=\"calculationModel.UnitPrice\" \n            OnValueChanged=\"CalculateTotal\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Cantitate\" \n            @bind-Value=\"calculationModel.Quantity\" \n            OnValueChanged=\"CalculateTotal\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Total\" \n            @bind-Value=\"calculationModel.Total\" \n            Readonly=\"true\"\n            Description=\"Calculat automat\" /&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private CalculationModel calculationModel = new() \n    { \n        UnitPrice = 100, \n        Quantity = 1 \n    };\n\n    protected override void OnInitialized()\n    {\n        CalculateTotal(0);\n    }\n\n    private void CalculateTotal(decimal value)\n    {\n        calculationModel.Total = calculationModel.UnitPrice * calculationModel.Quantity;\n    }\n\n    public class CalculationModel\n    {\n        public decimal UnitPrice { get; set; }\n        public decimal Quantity { get; set; }\n        public decimal Total { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#formular-de-comanda-cu-validare-complexa","title":"Formular de comand\u0103 cu validare complex\u0103","text":"<pre><code>&lt;EditForm Model=\"orderForm\" OnValidSubmit=\"SubmitOrder\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n    &lt;ValidationSummary /&gt;\n\n    &lt;FodGrid&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputNumber \n                Label=\"Num\u0103r produse\" \n                @bind-Value=\"orderForm.ProductCount\" \n                Description=\"Maxim 100 produse per comand\u0103\" /&gt;\n        &lt;/FodItem&gt;\n\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputNumber \n                Label=\"Pre\u021b per unitate\" \n                @bind-Value=\"orderForm.UnitPrice\" \n                Placeholder=\"0.00\"\n                RequiredLabel=\"true\" /&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;div class=\"mt-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Discount (%)\" \n            @bind-Value=\"orderForm.DiscountPercent\" \n            Placeholder=\"0-50\"\n            Description=\"Discount aplicabil \u00eentre 0% \u0219i 50%\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mt-3\"&gt;\n        &lt;FODInputNumber \n            Label=\"Taxa de livrare\" \n            @bind-Value=\"orderForm.DeliveryFee\" \n            Readonly=\"true\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Plaseaz\u0103 comanda\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderForm orderForm = new();\n\n    public class OrderForm\n    {\n        [Required(ErrorMessage = \"Num\u0103rul de produse este obligatoriu\")]\n        [Range(1, 100, ErrorMessage = \"Pute\u021bi comanda \u00eentre 1 \u0219i 100 de produse\")]\n        public decimal ProductCount { get; set; } = 1;\n\n        [Required(ErrorMessage = \"Pre\u021bul este obligatoriu\")]\n        [Range(0.01, 10000, ErrorMessage = \"Pre\u021bul trebuie s\u0103 fie \u00eentre 0.01 \u0219i 10,000 MDL\")]\n        public decimal UnitPrice { get; set; }\n\n        [Range(0, 50, ErrorMessage = \"Discount-ul trebuie s\u0103 fie \u00eentre 0% \u0219i 50%\")]\n        public decimal DiscountPercent { get; set; } = 0;\n\n        public decimal DeliveryFee { get; set; } = 50;\n    }\n\n    private void SubmitOrder()\n    {\n        // Procesare comand\u0103\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#input-cu-formatare-pentru-costuri","title":"Input cu formatare pentru costuri","text":"<pre><code>&lt;FodPaper Class=\"pa-4\"&gt;\n    &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Calculator Costuri Serviciu&lt;/FodText&gt;\n\n    &lt;FODInputNumber \n        Label=\"TAXA DE BAZ\u0102\" \n        @bind-Value=\"costs.BaseFee\"\n        LabelUpperCase=\"true\"\n        Description=\"Taxa standard pentru procesare\" /&gt;\n\n    &lt;FODInputNumber \n        Label=\"Procesare Expres\u0103 (op\u021bional)\" \n        @bind-Value=\"costs.ExpressFee\"\n        Placeholder=\"Taxa adi\u021bional\u0103\"\n        RequiredLabel=\"false\" /&gt;\n\n    &lt;FODInputNumber \n        Label=\"Num\u0103r de documente\" \n        @bind-Value=\"costs.DocumentCount\"\n        Name=\"doc-count\"\n        OnValueChanged=\"UpdateTotal\" /&gt;\n\n    &lt;hr class=\"my-3\" /&gt;\n\n    &lt;FODInputNumber \n        Label=\"Cost Total\" \n        @bind-Value=\"costs.TotalCost\"\n        Readonly=\"true\"\n        Class=\"fw-bold\" /&gt;\n&lt;/FodPaper&gt;\n\n@code {\n    private CostCalculation costs = new() \n    { \n        BaseFee = 150, \n        ExpressFee = 0, \n        DocumentCount = 1 \n    };\n\n    protected override void OnInitialized()\n    {\n        UpdateTotal(costs.DocumentCount);\n    }\n\n    private void UpdateTotal(decimal count)\n    {\n        costs.TotalCost = (costs.BaseFee + costs.ExpressFee) * count;\n    }\n\n    public class CostCalculation\n    {\n        public decimal BaseFee { get; set; }\n        public decimal ExpressFee { get; set; }\n        public decimal DocumentCount { get; set; }\n        public decimal TotalCost { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>decimal</code> Valoarea curent\u0103 a input-ului (two-way binding) <code>0</code> <code>Label</code> <code>string</code> Eticheta afi\u0219at\u0103 deasupra input-ului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder afi\u0219at c\u00e2nd input-ul este gol <code>null</code> <code>Name</code> <code>string</code> Atributul name pentru input <code>null</code> <code>Required</code> <code>bool?</code> Marcheaz\u0103 c\u00e2mpul ca obligatoriu <code>null</code> <code>RequiredLabel</code> <code>bool</code> Afi\u0219eaz\u0103 indicatorul de c\u00e2mp obligatoriu (*) <code>true</code> <code>Readonly</code> <code>bool</code> Face input-ul readonly <code>false</code> <code>Description</code> <code>string</code> Text descriptiv afi\u0219at sub input <code>null</code> <code>IsLoading</code> <code>bool</code> Afi\u0219eaz\u0103 indicator de \u00eenc\u0103rcare <code>false</code> <code>LabelUpperCase</code> <code>bool</code> Transform\u0103 label-ul \u00een majuscule <code>false</code> <code>OnValueChanged</code> <code>EventCallback&lt;decimal&gt;</code> Eveniment declan\u0219at la schimbarea valorii - <code>CssClass</code> <code>string</code> Clase CSS adi\u021bionale pentru input <code>null</code>"},{"location":"fod/componente/FODInputNumber/#3-functionalitati-speciale","title":"3. Func\u021bionalit\u0103\u021bi speciale","text":""},{"location":"fod/componente/FODInputNumber/#tip-de-date-decimal","title":"Tip de date decimal","text":"<p>Componenta folose\u0219te tipul <code>decimal</code> pentru precizie maxim\u0103 \u00een calculele financiare \u0219i evitarea erorilor de rotunjire specifice tipului <code>float</code> sau <code>double</code>.</p>"},{"location":"fod/componente/FODInputNumber/#input-html5-number","title":"Input HTML5 number","text":"<p>Componenta genereaz\u0103 un <code>&lt;input type=\"number\"&gt;</code> care ofer\u0103: - Controale de incrementare/decrementare native - Validare numeric\u0103 \u00een browser - Suport pentru tastatur\u0103 numeric\u0103 pe dispozitive mobile</p>"},{"location":"fod/componente/FODInputNumber/#integrare-cu-fodinputwrapper","title":"Integrare cu FODInputWrapper","text":"<p>Similar cu FODInputText, componenta folose\u0219te <code>FODInputWrapper</code> pentru: - Layout consistent - Afi\u0219are label \u0219i descriere - Integrare cu ValidationMessage</p>"},{"location":"fod/componente/FODInputNumber/#4-validare","title":"4. Validare","text":""},{"location":"fod/componente/FODInputNumber/#validare-standard","title":"Validare standard","text":"<pre><code>public class NumericModel\n{\n    [Required(ErrorMessage = \"Valoarea este obligatorie\")]\n    public decimal RequiredValue { get; set; }\n\n    [Range(0, 100, ErrorMessage = \"Valoarea trebuie s\u0103 fie \u00eentre 0 \u0219i 100\")]\n    public decimal Percentage { get; set; }\n\n    [Range(0.01, double.MaxValue, ErrorMessage = \"Valoarea trebuie s\u0103 fie pozitiv\u0103\")]\n    public decimal PositiveValue { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#validare-personalizata","title":"Validare personalizat\u0103","text":"<pre><code>public class CustomValidationModel : IValidatableObject\n{\n    public decimal MinValue { get; set; }\n    public decimal MaxValue { get; set; }\n\n    public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n    {\n        if (MinValue &gt; MaxValue)\n        {\n            yield return new ValidationResult(\n                \"Valoarea minim\u0103 nu poate fi mai mare dec\u00e2t valoarea maxim\u0103\",\n                new[] { nameof(MinValue), nameof(MaxValue) }\n            );\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#5-formate-si-localizare","title":"5. Formate \u0219i localizare","text":""},{"location":"fod/componente/FODInputNumber/#formatare-valuta","title":"Formatare valut\u0103","text":"<pre><code>&lt;FODInputNumber \n    Label=\"Pre\u021b (MDL)\" \n    @bind-Value=\"model.Price\" \n    Placeholder=\"0.00\" /&gt;\n\n&lt;div class=\"mt-2\"&gt;\n    Pre\u021b formatat: @model.Price.ToString(\"C\", new CultureInfo(\"ro-MD\"))\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#6-note-si-observatii","title":"6. Note \u0219i observa\u021bii","text":"<ul> <li>Componenta mo\u0219tene\u0219te de la <code>FODFormComponent&lt;decimal&gt;</code></li> <li>Tipul <code>decimal</code> este recomandat pentru valori monetare \u0219i calcule financiare</li> <li>Browser-ul poate aplica propriile restric\u021bii pentru input-uri numerice</li> <li>Pe dispozitive mobile, se afi\u0219eaz\u0103 tastatura numeric\u0103</li> <li>Validarea se face at\u00e2t pe client c\u00e2t \u0219i pe server</li> </ul>"},{"location":"fod/componente/FODInputNumber/#7-bune-practici","title":"7. Bune practici","text":"<ol> <li>Folosi\u021bi decimal pentru bani - Evita\u021bi float/double pentru valori monetare</li> <li>Specifica\u021bi Range adecvat - Limita\u021bi valorile la intervale realiste</li> <li>Ad\u0103uga\u021bi placeholder-uri sugestive - Ajut\u0103 utilizatorii s\u0103 \u00een\u021beleag\u0103 formatul</li> <li>Valida\u021bi pe server - Nu v\u0103 baza\u021bi doar pe validarea client-side</li> <li>Folosi\u021bi Description - Pentru a clarifica unit\u0103\u021bile de m\u0103sur\u0103 sau limite</li> <li>Formata\u021bi afi\u0219area - Folosi\u021bi formatare adecvat\u0103 pentru afi\u0219area valorilor</li> </ol>"},{"location":"fod/componente/FODInputNumber/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":"<pre><code>&lt;EditForm Model=\"invoice\"&gt;\n    &lt;FodGrid&gt;\n        &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n            &lt;FODInputNumber Label=\"Cantitate\" @bind-Value=\"invoice.Quantity\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n            &lt;FODInputNumber Label=\"Pre\u021b unitar\" @bind-Value=\"invoice.UnitPrice\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n            &lt;FODInputNumber Label=\"Total\" Value=\"@(invoice.Quantity * invoice.UnitPrice)\" Readonly=\"true\" /&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodGrid&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FODInputNumber/#9-concluzie","title":"9. Concluzie","text":"<p><code>FODInputNumber</code> este componenta esen\u021bial\u0103 pentru introducerea valorilor numerice \u00een aplica\u021biile Blazor, oferind validare robust\u0103, formatare flexibil\u0103 \u0219i o experien\u021b\u0103 de utilizare optimizat\u0103 pentru diferite dispozitive \u0219i cazuri de utilizare.</p>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/","title":"FODInputOnBehalfOfRadioGroup","text":""},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODInputOnBehalfOfRadioGroup&lt;T&gt;</code> este o component\u0103 specializat\u0103 pentru selectarea modului de ac\u021biune: personal sau \u00een numele altcuiva (prin MPower Authorization). Extinde <code>FODSelectableFormComponent&lt;T&gt;</code> \u0219i folose\u0219te intern dou\u0103 componente <code>FODInputRadioOnBehalfOf</code> pentru a oferi o selec\u021bie binar\u0103 specific\u0103 pentru opera\u021biuni guvernamentale.</p>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Selector standard pentru \"\u00een numele cui\" --&gt;\n&lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"onBehalfMode\" \n                               Label=\"Depune\u021bi cererea\"\n                               OnBehalfOfFirstOptionText=\"Pentru mine personal\"\n                               OnBehalfOfSecondOptionText=\"\u00cen numele altcuiva (MPower)\" /&gt;\n\n&lt;!-- Selector dezactivat --&gt;\n&lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"fixedMode\" \n                               Label=\"Mod depunere\"\n                               Disable=\"true\"\n                               OnBehalfOfFirstOptionText=\"Personal\"\n                               OnBehalfOfSecondOptionText=\"Prin \u00eemputernicire\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#enum-onbehalfonenum","title":"Enum OnBehalfOnEnum","text":"<pre><code>public enum OnBehalfOnEnum\n{\n    Personal,              // Ac\u021biune personal\u0103\n    MPowerAuthorization   // Ac\u021biune prin \u00eemputernicire MPower\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Type FodRadioType Radio Tipul afi\u0219\u0103rii (Radio/Button) Disable bool false Dezactiveaz\u0103 ambele op\u021biuni ShowOnBehalfOf bool false Controleaz\u0103 afi\u0219area (nefolosit \u00een template) OnBehalfOfFirstOptionText string null Text pentru op\u021biunea Personal OnBehalfOfSecondOptionText string null Text pentru op\u021biunea MPower Label string null Eticheta grupului"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#formular-de-depunere-cerere","title":"Formular de Depunere Cerere","text":"<pre><code>&lt;EditForm Model=\"@application\" OnValidSubmit=\"@SubmitApplication\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"application.OnBehalfMode\" \n                                   Label=\"Depun aceast\u0103 cerere\"\n                                   OnBehalfOfFirstOptionText=\"Pentru mine personal\"\n                                   OnBehalfOfSecondOptionText=\"\u00cen numele unei alte persoane (prin MPower)\"\n                                   @bind-Value:after=\"OnModeChanged\" /&gt;\n\n    @if (application.OnBehalfMode == OnBehalfOnEnum.MPowerAuthorization)\n    {\n        &lt;div class=\"mpower-info alert alert-info mt-3\"&gt;\n            &lt;h5&gt;Informa\u021bii despre MPower&lt;/h5&gt;\n            &lt;p&gt;Pentru a depune \u00een numele altcuiva, ave\u021bi nevoie de o \u00eemputernicire valid\u0103 \u00een sistemul MPower.&lt;/p&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" @onclick=\"OpenMPowerSelector\"&gt;\n                Selecta\u021bi \u00eemputernicirea\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n\n        @if (selectedAuthorization != null)\n        {\n            &lt;div class=\"selected-authorization mt-3\"&gt;\n                &lt;h6&gt;\u00cemputernicire selectat\u0103:&lt;/h6&gt;\n                &lt;p&gt;&lt;strong&gt;Beneficiar:&lt;/strong&gt; @selectedAuthorization.BeneficiaryName&lt;/p&gt;\n                &lt;p&gt;&lt;strong&gt;Valabil\u0103 p\u00e2n\u0103 la:&lt;/strong&gt; @selectedAuthorization.ValidUntil.ToString(\"dd.MM.yyyy\")&lt;/p&gt;\n            &lt;/div&gt;\n        }\n    }\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Continu\u0103&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ApplicationModel application = new();\n    private MPowerAuthorization selectedAuthorization;\n\n    public class ApplicationModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi modul de depunere\")]\n        public OnBehalfOnEnum? OnBehalfMode { get; set; }\n\n        public string AuthorizationId { get; set; }\n    }\n\n    private async Task OnModeChanged()\n    {\n        if (application.OnBehalfMode == OnBehalfOnEnum.Personal)\n        {\n            selectedAuthorization = null;\n            application.AuthorizationId = null;\n        }\n    }\n\n    private async Task OpenMPowerSelector()\n    {\n        // Deschide selector pentru \u00eemputerniciri MPower\n        selectedAuthorization = await MPowerService.SelectAuthorization();\n        if (selectedAuthorization != null)\n        {\n            application.AuthorizationId = selectedAuthorization.Id;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#verificare-permisiuni","title":"Verificare Permisiuni","text":"<pre><code>&lt;div class=\"service-request-form\"&gt;\n    &lt;h3&gt;@serviceName&lt;/h3&gt;\n\n    @if (serviceRequiresMPower)\n    {\n        &lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"requestMode\" \n                                       Label=\"Acest serviciu poate fi solicitat\"\n                                       OnBehalfOfFirstOptionText=\"\u274c Personal (indisponibil)\"\n                                       OnBehalfOfSecondOptionText=\"\u2713 Doar prin \u00eemputernicire MPower\"\n                                       Disable=\"@disablePersonalOption\" /&gt;\n    }\n    else\n    {\n        &lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"requestMode\" \n                                       Label=\"Solicita\u021bi serviciul\"\n                                       OnBehalfOfFirstOptionText=\"Pentru dumneavoastr\u0103\"\n                                       OnBehalfOfSecondOptionText=\"Pentru alt\u0103 persoan\u0103 (MPower)\" /&gt;\n    }\n\n    &lt;div class=\"request-info mt-3\"&gt;\n        @switch (requestMode)\n        {\n            case OnBehalfOnEnum.Personal:\n                &lt;p&gt;Ve\u021bi completa cererea cu datele dumneavoastr\u0103 personale.&lt;/p&gt;\n                break;\n            case OnBehalfOnEnum.MPowerAuthorization:\n                &lt;p&gt;Ve\u021bi completa cererea pentru persoana \u00eemputernicit\u0103.&lt;/p&gt;\n                break;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string serviceName = \"Eliberare certificat\";\n    private bool serviceRequiresMPower = false;\n    private bool disablePersonalOption =&gt; serviceRequiresMPower;\n    private OnBehalfOnEnum requestMode = OnBehalfOnEnum.Personal;\n\n    protected override void OnInitialized()\n    {\n        if (serviceRequiresMPower)\n        {\n            requestMode = OnBehalfOnEnum.MPowerAuthorization;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#workflow-cu-pasi","title":"Workflow cu Pa\u0219i","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Title=\"Mod depunere\"&gt;\n        &lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"wizardData.Mode\" \n                                       Label=\"Cum dori\u021bi s\u0103 proceda\u021bi?\"\n                                       OnBehalfOfFirstOptionText=\"Depun pentru mine\"\n                                       OnBehalfOfSecondOptionText=\"Depun pentru altcineva\"\n                                       @bind-Value:after=\"ConfigureNextSteps\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    @if (wizardData.Mode == OnBehalfOnEnum.MPowerAuthorization)\n    {\n        &lt;FodWizardStep Title=\"Selectare \u00eemputernicire\"&gt;\n            &lt;h4&gt;Selecta\u021bi \u00eemputernicirea MPower&lt;/h4&gt;\n            &lt;MPowerAuthorizationSelector @bind-Value=\"wizardData.AuthorizationId\" /&gt;\n        &lt;/FodWizardStep&gt;\n    }\n\n    &lt;FodWizardStep Title=\"Date solicitant\"&gt;\n        @if (wizardData.Mode == OnBehalfOnEnum.Personal)\n        {\n            &lt;PersonalDataForm @bind-Value=\"wizardData.PersonalData\" /&gt;\n        }\n        else\n        {\n            &lt;BeneficiaryDataDisplay AuthorizationId=\"@wizardData.AuthorizationId\" /&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Confirmare\"&gt;\n        &lt;h4&gt;Verifica\u021bi datele&lt;/h4&gt;\n        &lt;p&gt;&lt;strong&gt;Mod depunere:&lt;/strong&gt; \n            @(wizardData.Mode == OnBehalfOnEnum.Personal ? \"Personal\" : \"Prin \u00eemputernicire\")\n        &lt;/p&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private WizardData wizardData = new();\n\n    public class WizardData\n    {\n        public OnBehalfOnEnum Mode { get; set; } = OnBehalfOnEnum.Personal;\n        public string AuthorizationId { get; set; }\n        public PersonalData PersonalData { get; set; }\n    }\n\n    private void ConfigureNextSteps()\n    {\n        // Configureaz\u0103 pa\u0219ii urm\u0103tori bazat pe selec\u021bie\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#validare-conditionata","title":"Validare Condi\u021bionat\u0103","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"model.Mode\" \n                                   Label=\"Tip cerere\"\n                                   OnBehalfOfFirstOptionText=\"Cerere personal\u0103\"\n                                   OnBehalfOfSecondOptionText=\"Cerere prin reprezentant\" /&gt;\n\n    @if (model.Mode == OnBehalfOnEnum.MPowerAuthorization)\n    {\n        &lt;div class=\"authorization-fields mt-3\"&gt;\n            &lt;FODInputText @bind-Value=\"model.AuthorizationNumber\" \n                          Label=\"Num\u0103r \u00eemputernicire\"\n                          Required=\"true\" /&gt;\n\n            &lt;FodDatePicker @bind-Value=\"model.AuthorizationDate\" \n                           Label=\"Data \u00eemputernicirii\"\n                           Required=\"true\" /&gt;\n\n            &lt;FODInputText @bind-Value=\"model.BeneficiaryIdnp\" \n                          Label=\"IDNP beneficiar\"\n                          Required=\"true\" /&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\"&gt;Trimite&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private RequestModel model = new();\n\n    public class RequestModel : IValidatableObject\n    {\n        public OnBehalfOnEnum Mode { get; set; }\n        public string AuthorizationNumber { get; set; }\n        public DateTime? AuthorizationDate { get; set; }\n        public string BeneficiaryIdnp { get; set; }\n\n        public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n        {\n            if (Mode == OnBehalfOnEnum.MPowerAuthorization)\n            {\n                if (string.IsNullOrEmpty(AuthorizationNumber))\n                    yield return new ValidationResult(\"Num\u0103rul \u00eemputernicirii este obligatoriu\",\n                        new[] { nameof(AuthorizationNumber) });\n\n                if (!AuthorizationDate.HasValue)\n                    yield return new ValidationResult(\"Data \u00eemputernicirii este obligatorie\",\n                        new[] { nameof(AuthorizationDate) });\n\n                if (string.IsNullOrEmpty(BeneficiaryIdnp))\n                    yield return new ValidationResult(\"IDNP-ul beneficiarului este obligatoriu\",\n                        new[] { nameof(BeneficiaryIdnp) });\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#integrare-cu-fodinputradioonbehalfof","title":"Integrare cu FODInputRadioOnBehalfOf","text":"<p>Componenta folose\u0219te intern dou\u0103 instan\u021be de <code>FODInputRadioOnBehalfOf</code>:</p> <pre><code>&lt;FODInputRadioOnBehalfOf Disable=\"@Disable\" \n                         Label=\"@OnBehalfOfFirstOptionText\" \n                         Item=\"@(new SelectableItem&lt;OnBehalfOnEnum&gt;(OnBehalfOnEnum.Personal))\" \n                         T=\"OnBehalfOnEnum\" /&gt;\n\n&lt;FODInputRadioOnBehalfOf Disable=\"@Disable\" \n                         Label=\"@OnBehalfOfSecondOptionText\" \n                         Item=\"@(new SelectableItem&lt;OnBehalfOnEnum&gt;(OnBehalfOnEnum.MPowerAuthorization))\" \n                         T=\"OnBehalfOnEnum\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#stiluri-standard","title":"Stiluri Standard","text":"<pre><code>/* Grup radio pentru on behalf of */\n.fod-onbehalf-group {\n    border: 1px solid #dee2e6;\n    border-radius: 8px;\n    padding: 1rem;\n    background-color: #f8f9fa;\n}\n\n/* Highlight pentru MPower */\n.form-check:has(input[value=\"MPowerAuthorization\"]) {\n    background-color: #e7f3ff;\n    padding: 0.5rem;\n    border-radius: 4px;\n    margin-top: 0.5rem;\n}\n\n/* Icon pentru MPower */\n.form-check-label:contains(\"MPower\")::before {\n    content: \"\ud83d\udd10 \";\n    margin-right: 4px;\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#teme-pentru-contexte-diferite","title":"Teme pentru Contexte Diferite","text":"<pre><code>/* Tem\u0103 pentru servicii guvernamentale */\n.gov-theme .fod-onbehalf-group {\n    background: linear-gradient(to right, #f0f4f8, #e6ecf1);\n    border-color: #0056b3;\n}\n\n/* Eviden\u021biere op\u021biune recomandat\u0103 */\n.recommended-option {\n    position: relative;\n}\n\n.recommended-option::after {\n    content: \"Recomandat\";\n    position: absolute;\n    top: -10px;\n    right: 0;\n    background: #28a745;\n    color: white;\n    padding: 2px 8px;\n    border-radius: 12px;\n    font-size: 0.75rem;\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#best-practices","title":"Best Practices","text":"<ol> <li>Etichete clare - Explica\u021bi diferen\u021ba \u00eentre personal \u0219i MPower</li> <li>Validare MPower - Verifica\u021bi \u00eemputernicirea \u00eenainte de submit</li> <li>Feedback vizual - Ar\u0103ta\u021bi clar modul selectat</li> <li>Ghidare utilizator - Oferi\u021bi informa\u021bii despre MPower c\u00e2nd e selectat</li> <li>Fallback - Gestiona\u021bi cazul c\u00e2nd MPower nu e disponibil</li> </ol>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Label-uri descriptive pentru fiecare op\u021biune</li> <li>Suport complet pentru keyboard navigation</li> <li>ARIA labels pentru screen readers</li> <li>Focus vizibil pentru navigare</li> </ul>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#integrare-cu-mpower","title":"Integrare cu MPower","text":"<pre><code>// Service pentru verificare \u00eemputerniciri\npublic interface IMPowerService\n{\n    Task&lt;List&lt;MPowerAuthorization&gt;&gt; GetUserAuthorizations();\n    Task&lt;bool&gt; ValidateAuthorization(string authorizationId);\n    Task&lt;BeneficiaryInfo&gt; GetBeneficiaryInfo(string authorizationId);\n}\n\n// Utilizare \u00een component\u0103\n@inject IMPowerService MPowerService\n\nprivate async Task ValidateMPowerSelection()\n{\n    if (selectedMode == OnBehalfOnEnum.MPowerAuthorization)\n    {\n        var isValid = await MPowerService.ValidateAuthorization(authorizationId);\n        if (!isValid)\n        {\n            // Handle invalid authorization\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Suport\u0103 doar dou\u0103 op\u021biuni (Personal/MPower)</li> <li>Nu permite customizare complet\u0103 a op\u021biunilor</li> <li>Dependent de enum OnBehalfOnEnum</li> </ul>"},{"location":"fod/componente/FODInputOnBehalfOfRadioGroup/#concluzie","title":"Concluzie","text":"<p>FODInputOnBehalfOfRadioGroup este o component\u0103 esen\u021bial\u0103 pentru aplica\u021biile guvernamentale care necesit\u0103 distinc\u021bia \u00eentre ac\u021biuni personale \u0219i cele efectuate \u00een numele altcuiva prin sistemul MPower. Ofer\u0103 o interfa\u021b\u0103 clar\u0103 \u0219i consistent\u0103 pentru aceast\u0103 selec\u021bie important\u0103.</p>"},{"location":"fod/componente/FODInputRadio/","title":"FODInputRadio","text":""},{"location":"fod/componente/FODInputRadio/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODInputRadio</code> \u0219i <code>FODInputRadioGroup</code> formeaz\u0103 sistemul de butoane radio pentru FOD.Components. Sistemul ofer\u0103 dou\u0103 moduri de afi\u0219are (radio clasic \u0219i butoane), suport pentru binding bidirec\u021bional, validare integrat\u0103 cu EditForm \u0219i localizare automat\u0103 pentru enum-uri.</p>"},{"location":"fod/componente/FODInputRadio/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Radio group simplu --&gt;\n&lt;FODInputRadioGroup @bind-Value=\"selectedOption\" \n                    Options=\"@options\"\n                    Label=\"Selecta\u021bi o op\u021biune\" /&gt;\n\n&lt;!-- Radio group cu enum --&gt;\n&lt;FODInputRadioGroup @bind-Value=\"status\" \n                    Label=\"Status\"\n                    Options=\"@GetEnumOptions&lt;OrderStatus&gt;()\" /&gt;\n\n&lt;!-- Radio buttons stil butoane --&gt;\n&lt;FODInputRadioGroup @bind-Value=\"size\"\n                    Type=\"FodRadioType.Button\"\n                    Label=\"Dimensiune\"\n                    Options=\"@sizeOptions\" /&gt;\n\n@code {\n    private string selectedOption;\n    private OrderStatus status;\n    private string size = \"M\";\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; options = new()\n    {\n        new(\"opt1\", \"Op\u021biunea 1\"),\n        new(\"opt2\", \"Op\u021biunea 2\"),\n        new(\"opt3\", \"Op\u021biunea 3\")\n    };\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; sizeOptions = new()\n    {\n        new(\"S\", \"Small\"),\n        new(\"M\", \"Medium\"),\n        new(\"L\", \"Large\"),\n        new(\"XL\", \"Extra Large\")\n    };\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadio/#atribute-disponibile","title":"Atribute Disponibile","text":""},{"location":"fod/componente/FODInputRadio/#fodinputradiogroup","title":"FODInputRadioGroup","text":"Atribut Tip Default Descriere Value T - Valoarea selectat\u0103 Options IEnumerable&gt; - Lista de op\u021biuni Label string - Eticheta grupului Type FodRadioType Radio Tipul afi\u0219\u0103rii (Radio/Button) Disable bool false Dezactiveaz\u0103 toate op\u021biunile Required bool false C\u00e2mp obligatoriu BoldText bool false Text \u00eengro\u0219at pentru label LabelFontSize int 0 Dimensiune font label InputFontSize int 0 Dimensiune font input ValueExpression Expression&gt; - Expresie pentru validare ValueChanged EventCallback - Eveniment la schimbare For Expression&gt; - Expresie pentru EditForm"},{"location":"fod/componente/FODInputRadio/#fodinputradio-folosit-intern","title":"FODInputRadio (folosit intern)","text":"Atribut Tip Default Descriere Item SelectableItem - Elementul reprezentat Disable bool false Dezactiveaz\u0103 op\u021biunea Label string - Label personalizat LabelFontSize int 0 Dimensiune font label InputFontSize int 0 Dimensiune font input"},{"location":"fod/componente/FODInputRadio/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere ValueChanged EventCallback Declan\u0219at la selectare op\u021biune OnClick EventCallback Click pe radio button"},{"location":"fod/componente/FODInputRadio/#metode-publice","title":"Metode Publice","text":"Metod\u0103 Returneaz\u0103 Descriere GetName() string Returneaz\u0103 numele grupului SetSelectedValue(T) Task Seteaz\u0103 valoarea selectat\u0103 TryGetValue() string Ob\u021bine valoarea curent\u0103 ca string"},{"location":"fod/componente/FODInputRadio/#tipuri-si-enum-uri","title":"Tipuri \u0219i Enum-uri","text":""},{"location":"fod/componente/FODInputRadio/#fodradiotype","title":"FodRadioType","text":"<pre><code>public enum FodRadioType\n{\n    Radio,    // Butoane radio clasice\n    Button    // Afi\u0219are ca grup de butoane\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadio/#selectableitem","title":"SelectableItem <pre><code>public class SelectableItem&lt;T&gt;\n{\n    public string Value { get; set; }    // Valoarea intern\u0103\n    public string Text { get; set; }     // Textul afi\u0219at\n    public T Data { get; set; }          // Obiectul asociat\n\n    public SelectableItem(T data, string text)\n    {\n        Data = data;\n        Value = data?.ToString();\n        Text = text;\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FODInputRadio/#radio-group-cu-enum-localizat","title":"Radio Group cu Enum Localizat <pre><code>&lt;FODInputRadioGroup @bind-Value=\"priority\"\n                    Label=\"Prioritate\"\n                    Options=\"@GetLocalizedEnumOptions&lt;Priority&gt;()\"\n                    Required=\"true\" /&gt;\n\n@code {\n    private Priority priority = Priority.Normal;\n\n    public enum Priority\n    {\n        [Display(Name = \"Priority_Low\", ResourceType = typeof(Resources.Enums))]\n        Low,\n\n        [Display(Name = \"Priority_Normal\", ResourceType = typeof(Resources.Enums))]\n        Normal,\n\n        [Display(Name = \"Priority_High\", ResourceType = typeof(Resources.Enums))]\n        High,\n\n        [Display(Name = \"Priority_Urgent\", ResourceType = typeof(Resources.Enums))]\n        Urgent\n    }\n\n    private List&lt;SelectableItem&lt;Priority&gt;&gt; GetLocalizedEnumOptions&lt;TEnum&gt;() \n        where TEnum : Enum\n    {\n        return Enum.GetValues&lt;TEnum&gt;()\n            .Select(e =&gt; new SelectableItem&lt;TEnum&gt;((TEnum)(object)e, GetEnumDisplayName(e)))\n            .ToList();\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#radio-buttons-cu-stilizare","title":"Radio Buttons cu Stilizare <pre><code>&lt;style&gt;\n    .custom-radio-group .fod-radio-button-group {\n        gap: 10px;\n    }\n\n    .custom-radio-group .btn-check:checked + .btn {\n        background-color: var(--fod-primary);\n        color: white;\n        border-color: var(--fod-primary);\n    }\n\n    .custom-radio-group .btn {\n        min-width: 100px;\n        padding: 10px 20px;\n        border-radius: 25px;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"custom-radio-group\"&gt;\n    &lt;FODInputRadioGroup @bind-Value=\"selectedPlan\"\n                        Type=\"FodRadioType.Button\"\n                        Label=\"Selecta\u021bi planul\"\n                        Options=\"@planOptions\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private string selectedPlan = \"standard\";\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; planOptions = new()\n    {\n        new(\"basic\", \"Basic - 10 MDL\"),\n        new(\"standard\", \"Standard - 25 MDL\"),\n        new(\"premium\", \"Premium - 50 MDL\")\n    };\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#radio-group-cu-validare-personalizata","title":"Radio Group cu Validare Personalizat\u0103 <pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputRadioGroup @bind-Value=\"model.DeliveryMethod\"\n                        For=\"@(() =&gt; model.DeliveryMethod)\"\n                        Label=\"Metoda de livrare\"\n                        Options=\"@deliveryOptions\"\n                        Required=\"true\" /&gt;\n\n    @if (model.DeliveryMethod == \"courier\")\n    {\n        &lt;FodInput @bind-Value=\"model.Address\"\n                  Label=\"Adresa de livrare\"\n                  Required=\"true\" /&gt;\n    }\n\n    &lt;ValidationSummary /&gt;\n    &lt;FodButton Type=\"submit\"&gt;Continu\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderModel model = new();\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; deliveryOptions = new()\n    {\n        new(\"pickup\", \"Ridicare personal\u0103\"),\n        new(\"courier\", \"Livrare prin curier\"),\n        new(\"post\", \"Po\u0219ta Moldovei\")\n    };\n\n    private class OrderModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi metoda de livrare\")]\n        public string DeliveryMethod { get; set; }\n\n        public string Address { get; set; }\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#radio-group-cu-descrieri-si-tooltip","title":"Radio Group cu Descrieri \u0219i Tooltip <pre><code>&lt;FODInputRadioGroup @bind-Value=\"selectedService\"\n                    Label=\"Tip serviciu\"\n                    Options=\"@serviceOptions\"&gt;\n    &lt;ChildContent&gt;\n        @foreach (var service in services)\n        {\n            &lt;FODInputRadio Item=\"@GetServiceItem(service)\" T=\"string\"&gt;\n                &lt;span&gt;@service.Name&lt;/span&gt;\n                @if (!string.IsNullOrEmpty(service.Description))\n                {\n                    &lt;Tooltip Text=\"@service.Description\"&gt;\n                        &lt;FodIcon Icon=\"info\" Size=\"FodSize.Small\" /&gt;\n                    &lt;/Tooltip&gt;\n                }\n                &lt;br/&gt;\n                &lt;small class=\"text-muted\"&gt;@service.Price.ToString(\"C\")&lt;/small&gt;\n            &lt;/FODInputRadio&gt;\n        }\n    &lt;/ChildContent&gt;\n&lt;/FODInputRadioGroup&gt;\n\n@code {\n    private string selectedService;\n    private List&lt;Service&gt; services = new()\n    {\n        new() { Id = \"express\", Name = \"Express\", Price = 50, Description = \"Livrare \u00een 24h\" },\n        new() { Id = \"standard\", Name = \"Standard\", Price = 25, Description = \"Livrare \u00een 3-5 zile\" },\n        new() { Id = \"economy\", Name = \"Economic\", Price = 10, Description = \"Livrare \u00een 7-10 zile\" }\n    };\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#radio-group-dinamic","title":"Radio Group Dinamic <pre><code>&lt;FODInputRadioGroup @bind-Value=\"selectedCategory\"\n                    Label=\"Categorie\"\n                    Options=\"@categoryOptions\"\n                    ValueChanged=\"@OnCategoryChanged\" /&gt;\n\n@if (subcategoryOptions?.Any() == true)\n{\n    &lt;FODInputRadioGroup @bind-Value=\"selectedSubcategory\"\n                        Label=\"Subcategorie\"\n                        Options=\"@subcategoryOptions\" /&gt;\n}\n\n@code {\n    private string selectedCategory;\n    private string selectedSubcategory;\n    private List&lt;SelectableItem&lt;string&gt;&gt; categoryOptions;\n    private List&lt;SelectableItem&lt;string&gt;&gt; subcategoryOptions;\n\n    protected override async Task OnInitializedAsync()\n    {\n        categoryOptions = await LoadCategories();\n    }\n\n    private async Task OnCategoryChanged(string newCategory)\n    {\n        selectedSubcategory = null;\n        subcategoryOptions = await LoadSubcategories(newCategory);\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#integrare-cu-on-behalf-of","title":"Integrare cu On Behalf Of <pre><code>&lt;FODInputRadioOnBehalfOf @bind-Value=\"model.RequestType\"\n                         Label=\"Depun cererea\"\n                         ShowOnBehalfOfOption=\"true\"\n                         OnBehalfOfLabel=\"\u00cen numele altei persoane\"\n                         PersonalLabel=\"Pentru mine\" /&gt;\n\n@if (model.RequestType == RequestType.OnBehalfOf)\n{\n    &lt;FodInput @bind-Value=\"model.PersonName\"\n              Label=\"Numele persoanei\"\n              Required=\"true\" /&gt;\n\n    &lt;FodInput @bind-Value=\"model.PersonIDNP\"\n              Label=\"IDNP\"\n              Required=\"true\"\n              Pattern=\"[0-9]{13}\" /&gt;\n}\n\n@code {\n    private RequestModel model = new();\n\n    public enum RequestType\n    {\n        Personal,\n        OnBehalfOf\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#componente-asociate","title":"Componente Asociate","text":"<ul> <li><code>FODInputWrapper</code> - Container pentru elemente de formular</li> <li><code>FODSelectableFormComponent&lt;T&gt;</code> - Clas\u0103 de baz\u0103 pentru componente cu selec\u021bie</li> <li><code>ValidationMessage</code> - Afi\u0219are mesaje de validare</li> </ul>"},{"location":"fod/componente/FODInputRadio/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FODInputRadio/#clase-css","title":"Clase CSS <pre><code>.form-check\n.form-check-input\n.form-check-label\n.btn-check\n.btn\n.fod-radio-button-group\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#personalizare-aspect","title":"Personalizare Aspect <pre><code>/* Radio buttons personalizate */\n.form-check-input[type=\"radio\"] {\n    width: 20px;\n    height: 20px;\n    border: 2px solid var(--fod-primary);\n}\n\n.form-check-input[type=\"radio\"]:checked {\n    background-color: var(--fod-primary);\n    border-color: var(--fod-primary);\n}\n\n/* Button group personalizat */\n.fod-radio-button-group .btn {\n    border-radius: 20px;\n    padding: 8px 24px;\n    margin: 0 5px;\n}\n\n.fod-radio-button-group .btn-check:checked + .btn {\n    background-color: var(--fod-primary);\n    color: white;\n    transform: scale(1.05);\n}\n</code></pre>","text":""},{"location":"fod/componente/FODInputRadio/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>Generic Type - Suport\u0103 orice tip T care poate fi convertit \u00een string</li> <li>Enum Support - Suport automat pentru Display attributes</li> <li>Localization - Integrare cu IStringLocalizer pentru traduceri</li> <li>Validation - Func\u021bioneaz\u0103 cu DataAnnotations \u0219i EditForm</li> <li>Accessibility - Genereaz\u0103 ID-uri unice pentru label association</li> </ol>"},{"location":"fod/componente/FODInputRadio/#bune-practici","title":"Bune Practici","text":"<ol> <li>Folosi\u021bi <code>For</code> pentru integrare corect\u0103 cu EditForm</li> <li>Defini\u021bi <code>Display</code> attributes pentru enum-uri localizate</li> <li>Limita\u021bi num\u0103rul de op\u021biuni la 5-7 pentru usability</li> <li>Folosi\u021bi tipul Button pentru op\u021biuni pu\u021bine \u0219i clare</li> <li>Ad\u0103uga\u021bi descrieri pentru op\u021biuni complexe</li> <li>Grupa\u021bi op\u021biunile logic c\u00e2nd sunt multe</li> <li>Seta\u021bi o valoare implicit\u0103 c\u00e2nd e posibil</li> </ol>"},{"location":"fod/componente/FODInputRadio/#concluzie","title":"Concluzie","text":"<p>FODInputRadio ofer\u0103 o implementare flexibil\u0103 \u0219i puternic\u0103 pentru selec\u021bia unei singure op\u021biuni din mai multe. Cu suport pentru dou\u0103 moduri de afi\u0219are, localizare automat\u0103 \u0219i integrare complet\u0103 cu sistemul de validare Blazor, componenta acoper\u0103 majoritatea scenariilor de selec\u021bie unic\u0103 \u00een formulare.</p>"},{"location":"fod/componente/FODInputRadioGroup/","title":"FODInputRadioGroup","text":""},{"location":"fod/componente/FODInputRadioGroup/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODInputRadioGroup&lt;T&gt;</code> este o component\u0103 generic\u0103 pentru grupuri de butoane radio care permite selec\u021bia unei singure op\u021biuni dintr-o list\u0103. Extinde <code>FODSelectableFormComponent&lt;T&gt;</code> \u0219i suport\u0103 dou\u0103 moduri de afi\u0219are: radio buttons tradi\u021bionale sau butoane tip toggle. Componenta se integreaz\u0103 perfect cu sistemul de formulare Blazor \u0219i suport\u0103 validare.</p>"},{"location":"fod/componente/FODInputRadioGroup/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Radio group simplu --&gt;\n&lt;FODInputRadioGroup @bind-Value=\"selectedOption\" \n                    Options=\"@options\" \n                    Label=\"Selecta\u021bi o op\u021biune\" /&gt;\n\n&lt;!-- Radio group tip butoane --&gt;\n&lt;FODInputRadioGroup @bind-Value=\"selectedSize\" \n                    Options=\"@sizes\"\n                    Type=\"FodRadioType.Button\"\n                    Label=\"M\u0103rime\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#configurare-optiuni","title":"Configurare Op\u021biuni","text":""},{"location":"fod/componente/FODInputRadioGroup/#cu-lista-de-string-uri","title":"Cu List\u0103 de String-uri","text":"<pre><code>&lt;FODInputRadioGroup @bind-Value=\"selectedGender\" \n                    Options=\"@genderOptions\"\n                    Label=\"Gen\" /&gt;\n\n@code {\n    private string selectedGender;\n    private List&lt;SelectableItem&gt; genderOptions = new()\n    {\n        new SelectableItem { Value = \"M\", Text = \"Masculin\" },\n        new SelectableItem { Value = \"F\", Text = \"Feminin\" },\n        new SelectableItem { Value = \"N\", Text = \"Nespecificat\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#cu-enum","title":"Cu Enum","text":"<pre><code>&lt;FODInputRadioGroup @bind-Value=\"selectedPriority\" \n                    EnumType=\"@typeof(Priority)\"\n                    Label=\"Prioritate\" /&gt;\n\n@code {\n    private Priority selectedPriority = Priority.Normal;\n\n    public enum Priority\n    {\n        [Display(Name = \"Sc\u0103zut\u0103\")]\n        Low,\n        [Display(Name = \"Normal\u0103\")]\n        Normal,\n        [Display(Name = \"Ridicat\u0103\")]\n        High,\n        [Display(Name = \"Urgent\u0103\")]\n        Urgent\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Type FodRadioType Radio Tipul afi\u0219\u0103rii (Radio/Button) Options List null Lista de op\u021biuni EnumType Type null Tipul enum pentru generare automat\u0103 Disable bool false Dezactiveaz\u0103 toate op\u021biunile BoldText bool false Text \u00eengro\u0219at pentru etichete LabelFontSize int - Dimensiune font etichet\u0103 InputFontSize int - Dimensiune font input Label string null Eticheta grupului"},{"location":"fod/componente/FODInputRadioGroup/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FODInputRadioGroup/#formular-de-inregistrare","title":"Formular de \u00cenregistrare","text":"<pre><code>&lt;EditForm Model=\"@registration\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputRadioGroup @bind-Value=\"registration.AccountType\" \n                        Options=\"@accountTypes\"\n                        Label=\"Tip cont\" /&gt;\n\n    &lt;FODInputRadioGroup @bind-Value=\"registration.ExperienceLevel\" \n                        EnumType=\"@typeof(ExperienceLevel)\"\n                        Label=\"Nivel experien\u021b\u0103\" /&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\"&gt;\u00cenregistrare&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private RegistrationModel registration = new();\n\n    private List&lt;SelectableItem&gt; accountTypes = new()\n    {\n        new() { Value = \"personal\", Text = \"Cont Personal\" },\n        new() { Value = \"business\", Text = \"Cont Business\" },\n        new() { Value = \"developer\", Text = \"Cont Developer\" }\n    };\n\n    public class RegistrationModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi tipul contului\")]\n        public string AccountType { get; set; }\n\n        [Required(ErrorMessage = \"Selecta\u021bi nivelul de experien\u021b\u0103\")]\n        public ExperienceLevel ExperienceLevel { get; set; }\n    }\n\n    public enum ExperienceLevel\n    {\n        [Display(Name = \"\u00cencep\u0103tor\")]\n        Beginner,\n        [Display(Name = \"Intermediar\")]\n        Intermediate,\n        [Display(Name = \"Avansat\")]\n        Advanced,\n        [Display(Name = \"Expert\")]\n        Expert\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#selector-de-limba-cu-butoane","title":"Selector de Limb\u0103 cu Butoane","text":"<pre><code>&lt;div class=\"language-selector\"&gt;\n    &lt;FODInputRadioGroup @bind-Value=\"selectedLanguage\" \n                        Options=\"@languages\"\n                        Type=\"FodRadioType.Button\"\n                        Label=\"Limba interfa\u021b\u0103\"\n                        @bind-Value:after=\"ChangeLanguage\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private string selectedLanguage = \"ro\";\n\n    private List&lt;SelectableItem&gt; languages = new()\n    {\n        new() { Value = \"ro\", Text = \"\ud83c\uddf2\ud83c\udde9 Rom\u00e2n\u0103\" },\n        new() { Value = \"ru\", Text = \"\ud83c\uddf7\ud83c\uddfa \u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new() { Value = \"en\", Text = \"\ud83c\uddec\ud83c\udde7 English\" }\n    };\n\n    private async Task ChangeLanguage()\n    {\n        await CultureService.SetCultureAsync(selectedLanguage);\n        NavigationManager.NavigateTo(NavigationManager.Uri, true);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#configurator-produs","title":"Configurator Produs","text":"<pre><code>&lt;div class=\"product-configurator\"&gt;\n    &lt;h3&gt;Configurare Laptop&lt;/h3&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"config.Processor\" \n                            Options=\"@processors\"\n                            Label=\"Procesor\"\n                            LabelFontSize=\"16\"\n                            @bind-Value:after=\"UpdatePrice\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"config.Memory\" \n                            Options=\"@memoryOptions\"\n                            Label=\"Memorie RAM\"\n                            Type=\"FodRadioType.Button\"\n                            @bind-Value:after=\"UpdatePrice\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"config.Storage\" \n                            Options=\"@storageOptions\"\n                            Label=\"Stocare\"\n                            Type=\"FodRadioType.Button\"\n                            @bind-Value:after=\"UpdatePrice\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"price-display\"&gt;\n        &lt;h4&gt;Pre\u021b total: @totalPrice.ToString(\"C\")&lt;/h4&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private LaptopConfig config = new();\n    private decimal totalPrice = 15000;\n\n    private List&lt;SelectableItem&gt; processors = new()\n    {\n        new() { Value = \"i5\", Text = \"Intel Core i5 (+0 MDL)\" },\n        new() { Value = \"i7\", Text = \"Intel Core i7 (+3000 MDL)\" },\n        new() { Value = \"i9\", Text = \"Intel Core i9 (+6000 MDL)\" }\n    };\n\n    private List&lt;SelectableItem&gt; memoryOptions = new()\n    {\n        new() { Value = \"8\", Text = \"8GB\" },\n        new() { Value = \"16\", Text = \"16GB\" },\n        new() { Value = \"32\", Text = \"32GB\" }\n    };\n\n    private List&lt;SelectableItem&gt; storageOptions = new()\n    {\n        new() { Value = \"256\", Text = \"256GB\" },\n        new() { Value = \"512\", Text = \"512GB\" },\n        new() { Value = \"1024\", Text = \"1TB\" }\n    };\n\n    private void UpdatePrice()\n    {\n        totalPrice = 15000; // Pre\u021b de baz\u0103\n\n        // Adaug\u0103 cost procesor\n        totalPrice += config.Processor switch\n        {\n            \"i7\" =&gt; 3000,\n            \"i9\" =&gt; 6000,\n            _ =&gt; 0\n        };\n\n        // Adaug\u0103 cost memorie\n        totalPrice += config.Memory switch\n        {\n            \"16\" =&gt; 1500,\n            \"32\" =&gt; 4000,\n            _ =&gt; 0\n        };\n\n        // Adaug\u0103 cost stocare\n        totalPrice += config.Storage switch\n        {\n            \"512\" =&gt; 2000,\n            \"1024\" =&gt; 5000,\n            _ =&gt; 0\n        };\n    }\n\n    public class LaptopConfig\n    {\n        public string Processor { get; set; } = \"i5\";\n        public string Memory { get; set; } = \"8\";\n        public string Storage { get; set; } = \"256\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#chestionar-cu-validare","title":"Chestionar cu Validare","text":"<pre><code>&lt;EditForm Model=\"@survey\" OnValidSubmit=\"@SubmitSurvey\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"survey-question\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"survey.Satisfaction\" \n                            EnumType=\"@typeof(SatisfactionLevel)\"\n                            Label=\"C\u00e2t de mul\u021bumit sunte\u021bi de serviciile noastre?\"\n                            BoldText=\"true\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"survey-question\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"survey.Recommendation\" \n                            Options=\"@recommendationOptions\"\n                            Label=\"Ne-a\u021bi recomanda prietenilor?\"\n                            Type=\"FodRadioType.Button\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"survey-question\"&gt;\n        &lt;FODInputRadioGroup @bind-Value=\"survey.ReturnLikelihood\" \n                            Options=\"@likelihoodOptions\"\n                            Label=\"Ve\u021bi folosi serviciile noastre din nou?\" /&gt;\n    &lt;/div&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Trimite feedback&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private SurveyModel survey = new();\n\n    private List&lt;SelectableItem&gt; recommendationOptions = new()\n    {\n        new() { Value = \"yes\", Text = \"Da, cu siguran\u021b\u0103\" },\n        new() { Value = \"maybe\", Text = \"Poate\" },\n        new() { Value = \"no\", Text = \"Nu\" }\n    };\n\n    private List&lt;SelectableItem&gt; likelihoodOptions = new()\n    {\n        new() { Value = \"5\", Text = \"Foarte probabil\" },\n        new() { Value = \"4\", Text = \"Probabil\" },\n        new() { Value = \"3\", Text = \"Neutru\" },\n        new() { Value = \"2\", Text = \"Pu\u021bin probabil\" },\n        new() { Value = \"1\", Text = \"Foarte pu\u021bin probabil\" }\n    };\n\n    public class SurveyModel\n    {\n        [Required(ErrorMessage = \"V\u0103 rug\u0103m evalua\u021bi satisfac\u021bia\")]\n        public SatisfactionLevel? Satisfaction { get; set; }\n\n        [Required(ErrorMessage = \"V\u0103 rug\u0103m r\u0103spunde\u021bi la \u00eentrebare\")]\n        public string Recommendation { get; set; }\n\n        [Required(ErrorMessage = \"V\u0103 rug\u0103m selecta\u021bi o op\u021biune\")]\n        public string ReturnLikelihood { get; set; }\n    }\n\n    public enum SatisfactionLevel\n    {\n        [Display(Name = \"Foarte nemul\u021bumit\")]\n        VeryDissatisfied,\n        [Display(Name = \"Nemul\u021bumit\")]\n        Dissatisfied,\n        [Display(Name = \"Neutru\")]\n        Neutral,\n        [Display(Name = \"Mul\u021bumit\")]\n        Satisfied,\n        [Display(Name = \"Foarte mul\u021bumit\")]\n        VerySatisfied\n    }\n\n    private async Task SubmitSurvey()\n    {\n        // Procesare rezultate chestionar\n        await Task.CompletedTask;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#radio-group-conditionat","title":"Radio Group Condi\u021bionat","text":"<pre><code>&lt;div class=\"conditional-form\"&gt;\n    &lt;FODInputRadioGroup @bind-Value=\"hasVehicle\" \n                        Options=\"@yesNoOptions\"\n                        Label=\"Ave\u021bi vehicul personal?\"\n                        Type=\"FodRadioType.Button\"\n                        @bind-Value:after=\"() =&gt; { if (hasVehicle == \\\"no\\\") vehicleType = null; }\" /&gt;\n\n    @if (hasVehicle == \"yes\")\n    {\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FODInputRadioGroup @bind-Value=\"vehicleType\" \n                                Options=\"@vehicleTypes\"\n                                Label=\"Tip vehicul\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string hasVehicle = \"no\";\n    private string vehicleType;\n\n    private List&lt;SelectableItem&gt; yesNoOptions = new()\n    {\n        new() { Value = \"yes\", Text = \"Da\" },\n        new() { Value = \"no\", Text = \"Nu\" }\n    };\n\n    private List&lt;SelectableItem&gt; vehicleTypes = new()\n    {\n        new() { Value = \"car\", Text = \"Automobil\" },\n        new() { Value = \"motorcycle\", Text = \"Motociclet\u0103\" },\n        new() { Value = \"bicycle\", Text = \"Biciclet\u0103\" },\n        new() { Value = \"other\", Text = \"Altul\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FODInputRadioGroup/#stil-pentru-radio-buttons","title":"Stil pentru Radio Buttons","text":"<pre><code>/* Radio buttons tradi\u021bionale */\n.fod-radio-group .form-check {\n    margin-bottom: 0.5rem;\n}\n\n.fod-radio-group .form-check-input {\n    margin-top: 0.3rem;\n}\n\n.fod-radio-group .form-check-label {\n    margin-left: 0.5rem;\n    cursor: pointer;\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#stil-pentru-button-group","title":"Stil pentru Button Group","text":"<pre><code>/* Butoane radio */\n.fod-radio-button-group {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n}\n\n.fod-radio-button-group .btn {\n    border: 2px solid #dee2e6;\n}\n\n.fod-radio-button-group .btn.active {\n    background-color: var(--fod-primary);\n    border-color: var(--fod-primary);\n    color: white;\n}\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#teme-personalizate","title":"Teme Personalizate","text":"<pre><code>&lt;style&gt;\n    /* Tem\u0103 cards pentru radio */\n    .card-radio-group .form-check {\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        padding: 1rem;\n        margin-bottom: 0.75rem;\n        transition: all 0.3s;\n    }\n\n    .card-radio-group .form-check:hover {\n        border-color: #007bff;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .card-radio-group .form-check-input:checked + .form-check-label {\n        color: #007bff;\n        font-weight: bold;\n    }\n\n    /* Tem\u0103 pills pentru butoane */\n    .pills-radio-group .btn {\n        border-radius: 50px;\n        padding: 0.5rem 1.5rem;\n        border: none;\n        background-color: #f0f0f0;\n        color: #333;\n        transition: all 0.3s;\n    }\n\n    .pills-radio-group .btn.active {\n        background-color: #007bff;\n        color: white;\n        transform: scale(1.05);\n    }\n&lt;/style&gt;\n\n&lt;div class=\"card-radio-group\"&gt;\n    &lt;FODInputRadioGroup @bind-Value=\"cardValue\" Options=\"@options\" /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"pills-radio-group\"&gt;\n    &lt;FODInputRadioGroup @bind-Value=\"pillValue\" \n                        Options=\"@options\" \n                        Type=\"FodRadioType.Button\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#integrare-cu-fodinputradio","title":"Integrare cu FODInputRadio","text":"<p>FODInputRadioGroup folose\u0219te intern componenta <code>FODInputRadio</code> pentru fiecare op\u021biune:</p> <pre><code>&lt;FODInputRadio Item=\"@item\" \n               T=\"T\" \n               Disable=\"@Disable\" \n               LabelFontSize=\"LabelFontSize\" \n               InputFontSize=\"InputFontSize\" \n               Label=\"@GetItemLabel(item)\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputRadioGroup/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Folose\u0219te atribute ARIA corecte pentru radio groups</li> <li>Suport\u0103 navigare cu tastatura (s\u0103ge\u021bi)</li> <li>Label-uri asociate corect cu inputs</li> <li>Focus vizibil pentru navigare</li> </ul>"},{"location":"fod/componente/FODInputRadioGroup/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi etichete clare - Fiecare op\u021biune trebuie s\u0103 fie u\u0219or de \u00een\u021beles</li> <li>Limita\u021bi op\u021biunile - Pentru mai mult de 5-7 op\u021biuni, considera\u021bi un dropdown</li> <li>Ordonare logic\u0103 - Aranja\u021bi op\u021biunile \u00eentr-o ordine intuitiv\u0103</li> <li>Validare adecvat\u0103 - Pentru c\u00e2mpuri obligatorii, ad\u0103uga\u021bi validare</li> <li>Feedback vizual - Indica\u021bi clar op\u021biunea selectat\u0103</li> </ol>"},{"location":"fod/componente/FODInputRadioGroup/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Re-rendereaz\u0103 doar c\u00e2nd se schimb\u0103 selec\u021bia</li> <li>Pentru liste mari de op\u021biuni, considera\u021bi virtualizare</li> <li>Enum-urile sunt convertite o singur\u0103 dat\u0103 la ini\u021bializare</li> </ul>"},{"location":"fod/componente/FODInputRadioGroup/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Suport\u0103 doar selec\u021bie unic\u0103 (pentru selec\u021bie multipl\u0103 folosi\u021bi checkbox)</li> <li>Nu suport\u0103 grupare de op\u021biuni</li> <li>Nu are suport pentru imagini \u00een op\u021biuni</li> </ul>"},{"location":"fod/componente/FODInputRadioGroup/#concluzie","title":"Concluzie","text":"<p>FODInputRadioGroup ofer\u0103 o solu\u021bie flexibil\u0103 pentru selec\u021bia unei singure op\u021biuni, cu suport pentru dou\u0103 moduri de afi\u0219are \u0219i integrare complet\u0103 cu sistemul de formulare Blazor. Este ideal\u0103 pentru chestionare, configuratoare \u0219i orice situa\u021bie unde utilizatorul trebuie s\u0103 aleag\u0103 \u00eentre op\u021biuni mutual exclusive.</p>"},{"location":"fod/componente/FODInputSelect/","title":"FODInputSelect","text":""},{"location":"fod/componente/FODInputSelect/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODInputSelect</code> este componenta dropdown select pentru FOD.Components. Ofer\u0103 suport pentru binding bidirec\u021bional, validare integrat\u0103 cu EditForm, localizare automat\u0103 pentru enum-uri \u0219i op\u021biune default configurabil\u0103. Componenta mo\u0219tene\u0219te din <code>FODSelectableFormComponent&lt;T&gt;</code> \u0219i suport\u0103 tipuri generice.</p>"},{"location":"fod/componente/FODInputSelect/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Select simplu --&gt;\n&lt;FODInputSelect @bind-Value=\"selectedCountry\" \n                Options=\"@countries\"\n                Label=\"\u021aar\u0103\" /&gt;\n\n&lt;!-- Select cu enum --&gt;\n&lt;FODInputSelect @bind-Value=\"status\"\n                Label=\"Status Comand\u0103\"\n                Options=\"@GetEnumOptions&lt;OrderStatus&gt;()\" /&gt;\n\n&lt;!-- Select cu op\u021biune default personalizat\u0103 --&gt;\n&lt;FODInputSelect @bind-Value=\"selectedCity\"\n                Options=\"@cities\"\n                Label=\"Ora\u0219\"\n                DefaultOptionText=\"-- Alege\u021bi ora\u0219ul --\" /&gt;\n\n@code {\n    private string selectedCountry;\n    private OrderStatus status;\n    private string selectedCity;\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; countries = new()\n    {\n        new(\"MD\", \"Moldova\"),\n        new(\"RO\", \"Rom\u00e2nia\"),\n        new(\"UA\", \"Ucraina\")\n    };\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; cities = new()\n    {\n        new(\"chisinau\", \"Chi\u0219in\u0103u\"),\n        new(\"balti\", \"B\u0103l\u021bi\"),\n        new(\"tiraspol\", \"Tiraspol\")\n    };\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#atribute-disponibile","title":"Atribute Disponibile","text":"Atribut Tip Default Descriere Value T - Valoarea selectat\u0103 Options IEnumerable&gt; - Lista de op\u021biuni Label string - Eticheta select-ului DefaultOption bool false Selecteaz\u0103 prima op\u021biune automat DefaultOptionText string \"Select...\" Text pentru op\u021biunea default Required bool false C\u00e2mp obligatoriu Readonly bool false Doar citire CssClass string - Clase CSS adi\u021bionale isInvalid bool false Stare de invalidare Id string Guid ID unic pentru element Name string - Numele c\u00e2mpului ValueExpression Expression&gt; - Expresie pentru validare OnValueChanged EventCallback - Eveniment la schimbare For Expression&gt; - Expresie pentru EditForm"},{"location":"fod/componente/FODInputSelect/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere OnValueChanged EventCallback Declan\u0219at la schimbarea selec\u021biei OnChange ChangeEventArgs Handler intern pentru schimbare"},{"location":"fod/componente/FODInputSelect/#metode-publice","title":"Metode Publice","text":"Metod\u0103 Returneaz\u0103 Descriere GetName() string Returneaz\u0103 numele c\u00e2mpului GetDescription(SelectableItem) string Ob\u021bine descrierea localizat\u0103 GetLocalizedString(Type, string) string Ob\u021bine string localizat"},{"location":"fod/componente/FODInputSelect/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FODInputSelect/#select-cu-enum-localizat","title":"Select cu Enum Localizat","text":"<pre><code>&lt;FODInputSelect @bind-Value=\"model.UserRole\"\n                For=\"@(() =&gt; model.UserRole)\"\n                Label=\"Rol Utilizator\"\n                Options=\"@GetLocalizedRoleOptions()\"\n                Required=\"true\" /&gt;\n\n@code {\n    private UserModel model = new();\n\n    public enum UserRole\n    {\n        [Display(Name = \"Role_Admin\", ResourceType = typeof(Resources.Roles))]\n        Administrator,\n\n        [Display(Name = \"Role_Operator\", ResourceType = typeof(Resources.Roles))]\n        Operator,\n\n        [Display(Name = \"Role_Guest\", ResourceType = typeof(Resources.Roles))]\n        Guest\n    }\n\n    private List&lt;SelectableItem&lt;UserRole&gt;&gt; GetLocalizedRoleOptions()\n    {\n        return Enum.GetValues&lt;UserRole&gt;()\n            .Select(role =&gt; new SelectableItem&lt;UserRole&gt;(role, GetRoleDisplayName(role)))\n            .ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cu-validare","title":"Select cu Validare","text":"<pre><code>&lt;EditForm Model=\"@order\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputSelect @bind-Value=\"order.PaymentMethod\"\n                    For=\"@(() =&gt; order.PaymentMethod)\"\n                    Label=\"Metoda de plat\u0103\"\n                    Options=\"@paymentMethods\"\n                    Required=\"true\"\n                    isInvalid=\"@(validationErrors.ContainsKey(\"PaymentMethod\"))\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; order.PaymentMethod)\" /&gt;\n\n    &lt;FODInputSelect @bind-Value=\"order.DeliveryAddress\"\n                    For=\"@(() =&gt; order.DeliveryAddress)\"\n                    Label=\"Adresa de livrare\"\n                    Options=\"@addresses\"\n                    DefaultOptionText=\"-- Selecta\u021bi adresa --\" /&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Plaseaz\u0103 Comanda&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderModel order = new();\n    private Dictionary&lt;string, string&gt; validationErrors = new();\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; paymentMethods = new()\n    {\n        new(\"card\", \"Card Bancar\"),\n        new(\"cash\", \"Numerar la livrare\"),\n        new(\"transfer\", \"Transfer Bancar\")\n    };\n\n    public class OrderModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi metoda de plat\u0103\")]\n        public string PaymentMethod { get; set; }\n\n        public string DeliveryAddress { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cascada","title":"Select Cascad\u0103","text":"<pre><code>&lt;FODInputSelect @bind-Value=\"selectedCountry\"\n                Label=\"\u021aar\u0103\"\n                Options=\"@countries\"\n                OnValueChanged=\"@OnCountryChanged\" /&gt;\n\n@if (regions?.Any() == true)\n{\n    &lt;FODInputSelect @bind-Value=\"selectedRegion\"\n                    Label=\"Regiune\"\n                    Options=\"@regions\"\n                    OnValueChanged=\"@OnRegionChanged\" /&gt;\n}\n\n@if (cities?.Any() == true)\n{\n    &lt;FODInputSelect @bind-Value=\"selectedCity\"\n                    Label=\"Ora\u0219\"\n                    Options=\"@cities\" /&gt;\n}\n\n@code {\n    private string selectedCountry;\n    private string selectedRegion;\n    private string selectedCity;\n\n    private List&lt;SelectableItem&lt;string&gt;&gt; countries;\n    private List&lt;SelectableItem&lt;string&gt;&gt; regions;\n    private List&lt;SelectableItem&lt;string&gt;&gt; cities;\n\n    protected override async Task OnInitializedAsync()\n    {\n        countries = await LoadCountries();\n    }\n\n    private async Task OnCountryChanged(string country)\n    {\n        selectedRegion = null;\n        selectedCity = null;\n        regions = await LoadRegions(country);\n        cities = null;\n    }\n\n    private async Task OnRegionChanged(string region)\n    {\n        selectedCity = null;\n        cities = await LoadCities(selectedCountry, region);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cu-obiecte-complexe","title":"Select cu Obiecte Complexe","text":"<pre><code>&lt;FODInputSelect @bind-Value=\"selectedEmployee\"\n                Label=\"Responsabil\"\n                Options=\"@employeeOptions\"\n                DefaultOptionText=\"-- F\u0103r\u0103 responsabil --\" /&gt;\n\n@if (selectedEmployee != null)\n{\n    &lt;div class=\"selected-info mt-3\"&gt;\n        &lt;strong&gt;Selectat:&lt;/strong&gt; @selectedEmployee.Name&lt;br/&gt;\n        &lt;strong&gt;Departament:&lt;/strong&gt; @selectedEmployee.Department&lt;br/&gt;\n        &lt;strong&gt;Email:&lt;/strong&gt; @selectedEmployee.Email\n    &lt;/div&gt;\n}\n\n@code {\n    private Employee selectedEmployee;\n    private List&lt;SelectableItem&lt;Employee&gt;&gt; employeeOptions;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var employees = await EmployeeService.GetActiveEmployees();\n\n        employeeOptions = employees\n            .Select(e =&gt; new SelectableItem&lt;Employee&gt;(\n                e, \n                $\"{e.Name} - {e.Department}\"\n            ))\n            .ToList();\n    }\n\n    public class Employee\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string Department { get; set; }\n        public string Email { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cu-grupare-vizuala","title":"Select cu Grupare Vizual\u0103","text":"<pre><code>&lt;FODInputSelect @bind-Value=\"selectedProduct\"\n                Label=\"Produs\"\n                Options=\"@productOptions\"\n                CssClass=\"grouped-select\"&gt;\n    &lt;ChildContent&gt;\n        &lt;option value=\"\"&gt;-- Selecta\u021bi produsul --&lt;/option&gt;\n        @foreach (var category in groupedProducts)\n        {\n            &lt;optgroup label=\"@category.Key\"&gt;\n                @foreach (var product in category.Value)\n                {\n                    &lt;option value=\"@product.Id\"&gt;@product.Name - @product.Price.ToString(\"C\")&lt;/option&gt;\n                }\n            &lt;/optgroup&gt;\n        }\n    &lt;/ChildContent&gt;\n&lt;/FODInputSelect&gt;\n\n@code {\n    private string selectedProduct;\n    private Dictionary&lt;string, List&lt;Product&gt;&gt; groupedProducts;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var products = await ProductService.GetAll();\n        groupedProducts = products.GroupBy(p =&gt; p.Category)\n                                 .ToDictionary(g =&gt; g.Key, g =&gt; g.ToList());\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cu-stil-personalizat","title":"Select cu Stil Personalizat","text":"<pre><code>&lt;style&gt;\n    .custom-select-wrapper .fod-select select {\n        border-radius: 20px;\n        padding: 10px 20px;\n        border: 2px solid #e0e0e0;\n        transition: all 0.3s ease;\n    }\n\n    .custom-select-wrapper .fod-select select:focus {\n        border-color: var(--fod-primary);\n        box-shadow: 0 0 0 0.2rem rgba(var(--fod-primary-rgb), 0.25);\n    }\n\n    .custom-select-wrapper .fod-select select.invalid {\n        border-color: var(--fod-error);\n        background-color: rgba(var(--fod-error-rgb), 0.05);\n    }\n&lt;/style&gt;\n\n&lt;div class=\"custom-select-wrapper\"&gt;\n    &lt;FODInputSelect @bind-Value=\"selectedOption\"\n                    Label=\"Op\u021biune Stilizat\u0103\"\n                    Options=\"@options\"\n                    CssClass=\"custom-styled\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#select-cu-pre-selectare-conditionata","title":"Select cu Pre-selectare Condi\u021bionat\u0103","text":"<pre><code>&lt;FODInputSelect @bind-Value=\"model.PreferredLanguage\"\n                Label=\"Limba preferat\u0103\"\n                Options=\"@languages\"\n                DefaultOption=\"true\" /&gt;\n\n@code {\n    private UserPreferences model = new();\n    private List&lt;SelectableItem&lt;string&gt;&gt; languages;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 limbile disponibile\n        languages = new List&lt;SelectableItem&lt;string&gt;&gt;\n        {\n            new(\"ro\", \"Rom\u00e2n\u0103\"),\n            new(\"en\", \"English\"),\n            new(\"ru\", \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\")\n        };\n\n        // Seteaz\u0103 limba bazat\u0103 pe browser sau preferin\u021be salvate\n        model.PreferredLanguage = await GetUserPreferredLanguage() ?? \"ro\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#componente-asociate","title":"Componente Asociate","text":"<ul> <li><code>FODInputWrapper</code> - Container pentru elementele de formular</li> <li><code>FODSelectableFormComponent&lt;T&gt;</code> - Clas\u0103 de baz\u0103 pentru componente cu selec\u021bie</li> <li><code>ValidationMessage</code> - Afi\u0219are mesaje de validare</li> <li><code>SelectableItem&lt;T&gt;</code> - Model pentru op\u021biuni</li> </ul>"},{"location":"fod/componente/FODInputSelect/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FODInputSelect/#clase-css","title":"Clase CSS","text":"<pre><code>.fod-select\n.custom-select\n.form-control\n.invalid\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#personalizare-aspect","title":"Personalizare Aspect","text":"<pre><code>/* Select personalizat */\n.fod-select select {\n    appearance: none;\n    background-image: url(\"data:image/svg+xml,...\"); /* Arrow custom */\n    background-repeat: no-repeat;\n    background-position: right 0.75rem center;\n    background-size: 16px 12px;\n    padding-right: 2.5rem;\n}\n\n/* Focus state */\n.fod-select select:focus {\n    border-color: var(--fod-primary);\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(var(--fod-primary-rgb), 0.25);\n}\n\n/* Invalid state */\n.fod-select select.invalid {\n    border-color: var(--fod-error);\n    background-image: url(\"data:image/svg+xml,...\"); /* Error icon */\n}\n\n/* Disabled state */\n.fod-select select:disabled {\n    background-color: #e9ecef;\n    opacity: 0.65;\n}\n</code></pre>"},{"location":"fod/componente/FODInputSelect/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>Generic Type - Suport\u0103 orice tip T care poate fi serializat</li> <li>Enum Support - Suport automat pentru Display attributes</li> <li>Null Handling - Prima op\u021biune poate fi null/empty</li> <li>Validation - Integrare complet\u0103 cu EditForm</li> <li>Accessibility - ID-uri unice generate automat</li> </ol>"},{"location":"fod/componente/FODInputSelect/#bune-practici","title":"Bune Practici","text":"<ol> <li>Folosi\u021bi <code>For</code> pentru integrare corect\u0103 cu validarea</li> <li>Seta\u021bi <code>DefaultOptionText</code> descriptiv</li> <li>Limita\u021bi num\u0103rul de op\u021biuni (folosi\u021bi filtrat pentru liste mari)</li> <li>Grupa\u021bi op\u021biunile logic c\u00e2nd sunt multe</li> <li>Ad\u0103uga\u021bi tooltips pentru op\u021biuni complexe</li> <li>Valida\u021bi pe server selec\u021biile critice</li> <li>Folosi\u021bi <code>DefaultOption</code> doar c\u00e2nd are sens logic</li> </ol>"},{"location":"fod/componente/FODInputSelect/#concluzie","title":"Concluzie","text":"<p>FODInputSelect ofer\u0103 o implementare robust\u0103 pentru dropdown-uri \u00een aplica\u021bii Blazor. Cu suport pentru tipuri generice, localizare automat\u0103 \u0219i integrare complet\u0103 cu sistemul de validare, componenta acoper\u0103 majoritatea necesit\u0103\u021bilor pentru selec\u021bie din liste \u00een formulare.</p>"},{"location":"fod/componente/FODInputText/","title":"Input Text","text":""},{"location":"fod/componente/FODInputText/#documentatie-pentru-componenta-fodinputtext","title":"Documenta\u021bie pentru componenta FODInputText","text":""},{"location":"fod/componente/FODInputText/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FODInputText</code> este o component\u0103 de formular pentru introducerea valorilor text care se integreaz\u0103 cu sistemul de formulare \u0219i validare Blazor. Suport\u0103 diverse func\u021bionalit\u0103\u021bi precum validare, st\u0103ri de \u00eenc\u0103rcare \u0219i gestionare automat\u0103 a numerelor de identificare moldovene\u0219ti (IDNP, IDNO, IDNV).</p> <p>Componenta suport\u0103: - Validare integrat\u0103 cu Data Annotations - Placeholder \u0219i label personalizabile - Stare de \u00eenc\u0103rcare cu indicator vizual - Mod readonly pentru afi\u0219are - Suport automat pentru IDNP/IDNO/IDNV cu limitare la 13 caractere - Integrare cu EditForm \u0219i ValidationMessage</p>"},{"location":"fod/componente/FODInputText/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FODInputText/#input-text-de-baza","title":"Input text de baz\u0103","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;FODInputText Label=\"Nume complet\" @bind-Value=\"model.FullName\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n\n    public class FormModel\n    {\n        public string FullName { get; set; } = \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-cu-placeholder-si-descriere","title":"Input cu placeholder \u0219i descriere","text":"<pre><code>&lt;FODInputText \n    Label=\"Adresa de email\" \n    @bind-Value=\"model.Email\" \n    Placeholder=\"exemplu@domeniu.md\"\n    Description=\"Introduce\u021bi o adres\u0103 de email valid\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-cu-validare","title":"Input cu validare","text":"<pre><code>&lt;EditForm Model=\"validationModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputText \n        Label=\"Nume utilizator\" \n        @bind-Value=\"validationModel.Username\" \n        Required=\"true\" /&gt;\n\n    &lt;FODInputText \n        Label=\"Email\" \n        @bind-Value=\"validationModel.Email\" \n        Placeholder=\"Introduce\u021bi adresa de email\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ValidationModel validationModel = new();\n\n    public class ValidationModel\n    {\n        [Required(ErrorMessage = \"Numele de utilizator este obligatoriu\")]\n        [StringLength(20, MinimumLength = 3, ErrorMessage = \"Numele trebuie s\u0103 aib\u0103 \u00eentre 3 \u0219i 20 caractere\")]\n        public string Username { get; set; } = \"\";\n\n        [Required(ErrorMessage = \"Email-ul este obligatoriu\")]\n        [EmailAddress(ErrorMessage = \"Format email invalid\")]\n        public string Email { get; set; } = \"\";\n    }\n\n    private void HandleSubmit()\n    {\n        // Procesare formular\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-cu-stare-de-incarcare","title":"Input cu stare de \u00eenc\u0103rcare","text":"<pre><code>&lt;FODInputText \n    Label=\"Caut\u0103 utilizator\" \n    @bind-Value=\"searchQuery\" \n    IsLoading=\"isSearching\"\n    OnValueChanged=\"OnSearchChanged\"\n    Placeholder=\"\u00cencepe\u021bi s\u0103 tasta\u021bi pentru a c\u0103uta...\" /&gt;\n\n@code {\n    private string searchQuery = \"\";\n    private bool isSearching = false;\n\n    private async Task OnSearchChanged(string value)\n    {\n        isSearching = true;\n        StateHasChanged();\n\n        // Simulare apel API\n        await Task.Delay(1000);\n\n        isSearching = false;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-readonly","title":"Input readonly","text":"<pre><code>&lt;FODInputText \n    Label=\"ID Utilizator\" \n    @bind-Value=\"model.UserId\" \n    Readonly=\"true\"\n    Description=\"Acest c\u00e2mp este generat automat\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-pentru-idnp","title":"Input pentru IDNP","text":"<pre><code>&lt;EditForm Model=\"idnpModel\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputText \n        Label=\"IDNP (Cod personal)\" \n        @bind-Value=\"idnpModel.Idnp\" \n        Placeholder=\"13 cifre\"\n        Description=\"Num\u0103rul de identificare personal\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private IdnpModel idnpModel = new();\n\n    public class IdnpModel\n    {\n        [Required(ErrorMessage = \"IDNP este obligatoriu\")]\n        [IDNP(ErrorMessage = \"Format IDNP invalid\")]\n        public string Idnp { get; set; } = \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#input-cu-formatare-speciala","title":"Input cu formatare special\u0103","text":"<pre><code>&lt;FODInputText \n    Label=\"DENUMIREA ORGANIZA\u021aIEI\" \n    @bind-Value=\"model.OrganizationName\"\n    LabelUpperCase=\"true\"\n    Name=\"org-name\"\n    Placeholder=\"Introduce\u021bi denumirea complet\u0103\"\n    Description=\"Denumirea legal\u0103 conform certificatului de \u00eenregistrare\" /&gt;\n</code></pre>"},{"location":"fod/componente/FODInputText/#formular-complet-cu-validare","title":"Formular complet cu validare","text":"<pre><code>&lt;EditForm Model=\"formData\" OnValidSubmit=\"SubmitForm\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n    &lt;ValidationSummary /&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputText \n            Label=\"Nume \u0219i prenume\" \n            @bind-Value=\"formData.FullName\" \n            Required=\"true\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputText \n            Label=\"Telefon\" \n            @bind-Value=\"formData.Phone\" \n            Placeholder=\"+373 XX XXX XXX\"\n            Description=\"Format: +373 XX XXX XXX\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FODInputText \n            Label=\"Comentarii\" \n            @bind-Value=\"formData.Comments\" \n            Placeholder=\"Op\u021bional (max 200 caractere)\"\n            RequiredLabel=\"false\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormData formData = new();\n\n    public class FormData\n    {\n        [Required(ErrorMessage = \"Numele este obligatoriu\")]\n        public string FullName { get; set; } = \"\";\n\n        [Required(ErrorMessage = \"Telefonul este obligatoriu\")]\n        [Phone(ErrorMessage = \"Format telefon invalid\")]\n        public string Phone { get; set; } = \"\";\n\n        [MaxLength(200, ErrorMessage = \"Comentariile nu pot dep\u0103\u0219i 200 de caractere\")]\n        public string Comments { get; set; } = \"\";\n    }\n\n    private void SubmitForm()\n    {\n        // Procesare date formular\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>string</code> Valoarea curent\u0103 a input-ului (two-way binding) <code>null</code> <code>Label</code> <code>string</code> Eticheta afi\u0219at\u0103 deasupra input-ului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder afi\u0219at c\u00e2nd input-ul este gol <code>null</code> <code>Name</code> <code>string</code> Atributul name pentru input <code>null</code> <code>Required</code> <code>bool?</code> Marcheaz\u0103 c\u00e2mpul ca obligatoriu <code>null</code> <code>RequiredLabel</code> <code>bool</code> Afi\u0219eaz\u0103 indicatorul de c\u00e2mp obligatoriu (*) <code>true</code> <code>Readonly</code> <code>bool</code> Face input-ul readonly <code>false</code> <code>Description</code> <code>string</code> Text descriptiv afi\u0219at sub input <code>null</code> <code>IsLoading</code> <code>bool</code> Afi\u0219eaz\u0103 indicator de \u00eenc\u0103rcare <code>false</code> <code>LabelUpperCase</code> <code>bool</code> Transform\u0103 label-ul \u00een majuscule <code>false</code> <code>OnValueChanged</code> <code>EventCallback&lt;string&gt;</code> Eveniment declan\u0219at la schimbarea valorii - <code>CssClass</code> <code>string</code> Clase CSS adi\u021bionale pentru input <code>null</code>"},{"location":"fod/componente/FODInputText/#3-functionalitati-speciale","title":"3. Func\u021bionalit\u0103\u021bi speciale","text":""},{"location":"fod/componente/FODInputText/#suport-pentru-atribute-de-validare","title":"Suport pentru atribute de validare","text":"<p>Componenta detecteaz\u0103 automat atributele de validare \u0219i le aplic\u0103: - <code>[Required]</code> - seteaz\u0103 automat mesajul de eroare localizat - <code>[MaxLength]</code> - aplic\u0103 atributul maxlength pe input - <code>[IDNP]</code>, <code>[IDNO]</code>, <code>[IDNV]</code> - limiteaz\u0103 automat la 13 caractere</p>"},{"location":"fod/componente/FODInputText/#integrare-cu-fodinputwrapper","title":"Integrare cu FODInputWrapper","text":"<p>Componenta folose\u0219te <code>FODInputWrapper</code> care ofer\u0103: - Layout consistent pentru toate input-urile - Afi\u0219are label cu indicator de obligatoriu - Afi\u0219are descriere - Integrare cu ValidationMessage</p>"},{"location":"fod/componente/FODInputText/#stare-de-incarcare","title":"Stare de \u00eenc\u0103rcare","text":"<p>C\u00e2nd <code>IsLoading=\"true\"</code>: - Input-ul devine disabled - Se afi\u0219eaz\u0103 un indicator de \u00eenc\u0103rcare liniar sub input</p>"},{"location":"fod/componente/FODInputText/#4-validare","title":"4. Validare","text":""},{"location":"fod/componente/FODInputText/#validare-standard","title":"Validare standard","text":"<pre><code>public class Model\n{\n    [Required]\n    [StringLength(50, MinimumLength = 3)]\n    public string Name { get; set; }\n\n    [EmailAddress]\n    public string Email { get; set; }\n\n    [Phone]\n    public string Phone { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#validare-pentru-idnpidno","title":"Validare pentru IDNP/IDNO","text":"<pre><code>public class BusinessModel\n{\n    [IDNP]\n    public string PersonalId { get; set; }\n\n    [IDNO]\n    public string OrganizationId { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FODInputText/#5-styling-si-personalizare","title":"5. Styling \u0219i personalizare","text":""},{"location":"fod/componente/FODInputText/#clase-css-personalizate","title":"Clase CSS personalizate","text":"<pre><code>&lt;FODInputText \n    Label=\"C\u00e2mp personalizat\" \n    @bind-Value=\"model.CustomField\" \n    CssClass=\"my-custom-input\" /&gt;\n\n&lt;style&gt;\n    .my-custom-input {\n        border-color: #4caf50;\n        border-width: 2px;\n    }\n\n    .my-custom-input:focus {\n        border-color: #2196f3;\n        box-shadow: 0 0 0 0.2rem rgba(33, 150, 243, 0.25);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FODInputText/#6-note-si-observatii","title":"6. Note \u0219i observa\u021bii","text":"<ul> <li>Componenta mo\u0219tene\u0219te de la <code>FODFormComponent&lt;string&gt;</code> care extinde <code>InputBase&lt;string&gt;</code></li> <li>Validarea se face automat prin integrarea cu Blazor Forms</li> <li>Pentru IDNP/IDNO/IDNV, limita de 13 caractere este aplicat\u0103 automat</li> <li>Mesajele de eroare pentru <code>[Required]</code> sunt localizate automat</li> <li>Componenta suport\u0103 toate atributele HTML standard prin <code>UserAttributes</code></li> </ul>"},{"location":"fod/componente/FODInputText/#7-bune-practici","title":"7. Bune practici","text":"<ol> <li>Folosi\u021bi \u00eentotdeauna cu EditForm pentru validare complet\u0103</li> <li>Ad\u0103uga\u021bi DataAnnotationsValidator \u00een EditForm</li> <li>Specifica\u021bi placeholder-uri utile pentru a ghida utilizatorii</li> <li>Folosi\u021bi Description pentru instruc\u021biuni suplimentare</li> <li>Aplica\u021bi valid\u0103ri adecvate \u00een modelul de date</li> <li>Gestiona\u021bi st\u0103rile de \u00eenc\u0103rcare pentru opera\u021bii asincrone</li> </ol>"},{"location":"fod/componente/FODInputText/#8-concluzie","title":"8. Concluzie","text":"<p><code>FODInputText</code> este componenta fundamental\u0103 pentru introducerea textului \u00een formulare Blazor, oferind toate func\u021bionalit\u0103\u021bile necesare pentru o experien\u021b\u0103 de utilizare profesional\u0103, inclusiv validare, feedback vizual \u0219i suport pentru formate specifice moldovene\u0219ti.</p>"},{"location":"fod/componente/FODInputWrapper/","title":"FODInputWrapper","text":""},{"location":"fod/componente/FODInputWrapper/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODInputWrapper</code> este o component\u0103 container care ofer\u0103 un layout consistent pentru toate componentele de formular din biblioteca FOD. Gestioneaz\u0103 afi\u0219area etichetelor, indicatorilor de c\u00e2mp obligatoriu, tooltip-urilor cu descrieri \u0219i stilizarea uniform\u0103 a formularelor.</p>"},{"location":"fod/componente/FODInputWrapper/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Wrapper pentru un input custom --&gt;\n&lt;FODInputWrapper FormComponent=\"@this\"&gt;\n    &lt;input type=\"text\" class=\"form-control\" /&gt;\n&lt;/FODInputWrapper&gt;\n\n&lt;!-- Wrapper cu toate op\u021biunile --&gt;\n&lt;FODInputWrapper FormComponent=\"@myComponent\"\n                 LabelUpperCase=\"true\"\n                 BoldText=\"true\"\n                 RequiredLabel=\"true\"&gt;\n    &lt;MyCustomInput /&gt;\n&lt;/FODInputWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#structura-html-generata","title":"Structura HTML Generat\u0103","text":"<pre><code>&lt;div class=\"form-group position-relative\"&gt;\n    &lt;!-- Sec\u021biunea label (dac\u0103 RequiredLabel=true) --&gt;\n    &lt;div class=\"d-flex align-items-center mt-2 gap-2\"&gt;\n        &lt;label for=\"inputName\" class=\"col-form-label mb-0\"&gt;\n            Label Text\n            &lt;span class=\"text-danger\"&gt;*&lt;/span&gt; &lt;!-- Dac\u0103 e required --&gt;\n        &lt;/label&gt;\n        &lt;!-- Tooltip dac\u0103 exist\u0103 descriere --&gt;\n        &lt;Tooltip Text=\"Descriere c\u00e2mp\" /&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Con\u021binutul propriu-zis --&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col\"&gt;\n            &lt;!-- ChildContent --&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere FormComponent IFODFormComponent - Componenta de formular asociat\u0103 (obligatoriu) ChildContent RenderFragment - Con\u021binutul care va fi wrapped LabelUpperCase bool false Transform\u0103 label-ul \u00een majuscule BoldText bool false Face textul label-ului bold RequiredLabel bool true Afi\u0219eaz\u0103 sau ascunde label-ul"},{"location":"fod/componente/FODInputWrapper/#interfata-ifodformcomponent","title":"Interfa\u021ba IFODFormComponent","text":"<p>Pentru ca o component\u0103 s\u0103 func\u021bioneze cu FODInputWrapper, trebuie s\u0103 implementeze:</p> <pre><code>public interface IFODFormComponent\n{\n    string GetName();        // Numele/ID-ul c\u00e2mpului\n    string GetLabel();       // Textul pentru label\n    string GetDescription(); // Descrierea pentru tooltip\n    bool IsRequired();       // Dac\u0103 e c\u00e2mp obligatoriu\n}\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FODInputWrapper/#componenta-custom-cu-wrapper","title":"Component\u0103 Custom cu Wrapper","text":"<pre><code>@implements IFODFormComponent\n\n&lt;FODInputWrapper FormComponent=\"@this\"&gt;\n    &lt;div class=\"custom-input-container\"&gt;\n        &lt;input type=\"text\" \n               id=\"@GetName()\" \n               class=\"form-control\"\n               @bind=\"Value\" /&gt;\n        @if (ShowCharCount)\n        {\n            &lt;small class=\"text-muted\"&gt;@Value.Length / @MaxLength&lt;/small&gt;\n        }\n    &lt;/div&gt;\n&lt;/FODInputWrapper&gt;\n\n@code {\n    [Parameter] public string Value { get; set; } = \"\";\n    [Parameter] public string Label { get; set; } = \"Custom Input\";\n    [Parameter] public string Description { get; set; }\n    [Parameter] public bool Required { get; set; }\n    [Parameter] public bool ShowCharCount { get; set; } = true;\n    [Parameter] public int MaxLength { get; set; } = 100;\n\n    // Implementare IFODFormComponent\n    public string GetName() =&gt; $\"custom-input-{GetHashCode()}\";\n    public string GetLabel() =&gt; Label;\n    public string GetDescription() =&gt; Description;\n    public bool IsRequired() =&gt; Required;\n}\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#utilizare-in-componente-fod","title":"Utilizare \u00een Componente FOD","text":"<pre><code>&lt;!-- \u00cen FODInputText.razor --&gt;\n&lt;FODInputWrapper LabelUpperCase=\"@LabelUpperCase\" FormComponent=\"@this\"&gt;\n    &lt;input class=\"form-control @CssClass\" \n           value=\"@CurrentValueAsString\" \n           name=\"@GetName()\" \n           @onchange=\"OnChange\" \n           disabled=\"@Readonly\" \n           placeholder=\"@GetPlaceholder()\" \n           type=\"text\" /&gt;\n\n    @if (IsLoading)\n    {\n        &lt;FodLoadingLinear FodColor=\"FodColor.Primary\" Indeterminate=\"true\" /&gt;\n    }\n    &lt;ValidationMessage For=\"ValueExpression\"/&gt;\n&lt;/FODInputWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#formular-complex-cu-multiple-wrappers","title":"Formular Complex cu Multiple Wrappers","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;!-- Input text cu label uppercase --&gt;\n    &lt;FODInputWrapper FormComponent=\"@nameComponent\" LabelUpperCase=\"true\"&gt;\n        &lt;input @bind=\"model.Name\" class=\"form-control\" /&gt;\n    &lt;/FODInputWrapper&gt;\n\n    &lt;!-- Select cu label bold --&gt;\n    &lt;FODInputWrapper FormComponent=\"@categoryComponent\" BoldText=\"true\"&gt;\n        &lt;select @bind=\"model.Category\" class=\"form-select\"&gt;\n            &lt;option value=\"\"&gt;Selecta\u021bi categoria&lt;/option&gt;\n            &lt;option value=\"1\"&gt;Categoria 1&lt;/option&gt;\n            &lt;option value=\"2\"&gt;Categoria 2&lt;/option&gt;\n        &lt;/select&gt;\n    &lt;/FODInputWrapper&gt;\n\n    &lt;!-- Textarea f\u0103r\u0103 label --&gt;\n    &lt;FODInputWrapper FormComponent=\"@descriptionComponent\" RequiredLabel=\"false\"&gt;\n        &lt;textarea @bind=\"model.Description\" class=\"form-control\" rows=\"4\"&gt;&lt;/textarea&gt;\n    &lt;/FODInputWrapper&gt;\n\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Salveaz\u0103&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n\n    // Componente care implementeaz\u0103 IFODFormComponent\n    private IFODFormComponent nameComponent;\n    private IFODFormComponent categoryComponent;\n    private IFODFormComponent descriptionComponent;\n}\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#wrapper-cu-stilizare-customizata","title":"Wrapper cu Stilizare Customizat\u0103","text":"<pre><code>&lt;style&gt;\n    .custom-wrapper .form-group {\n        background: #f8f9fa;\n        padding: 1rem;\n        border-radius: 8px;\n        margin-bottom: 1.5rem;\n    }\n\n    .custom-wrapper label {\n        color: #495057;\n        font-weight: 600;\n        margin-bottom: 0.5rem;\n    }\n\n    .custom-wrapper .text-danger {\n        font-size: 1.2em;\n        vertical-align: super;\n    }\n\n    .gradient-label label {\n        background: linear-gradient(45deg, #007bff, #6610f2);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        font-weight: bold;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"custom-wrapper\"&gt;\n    &lt;FODInputWrapper FormComponent=\"@component1\"&gt;\n        &lt;input type=\"text\" class=\"form-control\" /&gt;\n    &lt;/FODInputWrapper&gt;\n&lt;/div&gt;\n\n&lt;div class=\"gradient-label\"&gt;\n    &lt;FODInputWrapper FormComponent=\"@component2\" BoldText=\"true\"&gt;\n        &lt;input type=\"email\" class=\"form-control\" /&gt;\n    &lt;/FODInputWrapper&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#integrare-cu-tooltip","title":"Integrare cu Tooltip","text":"<p>C\u00e2nd componenta formular ofer\u0103 o descriere, wrapper-ul afi\u0219eaz\u0103 automat un tooltip:</p> <pre><code>@code {\n    public string GetDescription() =&gt; \"Acest c\u00e2mp accept\u0103 doar litere \u0219i cifre\";\n}\n\n&lt;!-- Rezultat HTML --&gt;\n&lt;div class=\"d-flex align-items-center mt-2 gap-2\"&gt;\n    &lt;label&gt;Nume utilizator &lt;span class=\"text-danger\"&gt;*&lt;/span&gt;&lt;/label&gt;\n    &lt;Tooltip Text=\"Acest c\u00e2mp accept\u0103 doar litere \u0219i cifre\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#responsive-design","title":"Responsive Design","text":"<pre><code>@media (max-width: 950px) {\n    .row {\n        margin: 0;\n    }\n\n    .col {\n        margin-right: 10px;\n        align-self: baseline;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#stiluri-css","title":"Stiluri CSS","text":""},{"location":"fod/componente/FODInputWrapper/#clase-generate","title":"Clase Generate","text":"<ul> <li><code>.form-group</code> - Container principal</li> <li><code>.position-relative</code> - Pentru pozi\u021bionare tooltip</li> <li><code>.label-upper-case</code> - Aplicat c\u00e2nd LabelUpperCase=true</li> <li><code>.fw-bold</code> - Aplicat c\u00e2nd BoldText=true</li> <li><code>.col-form-label</code> - Stilizare label</li> <li><code>.text-danger</code> - Pentru asteriscul de required</li> </ul>"},{"location":"fod/componente/FODInputWrapper/#personalizare-globala","title":"Personalizare Global\u0103","text":"<pre><code>/* Stilizare global\u0103 pentru toate wrapper-ele */\n.form-group {\n    margin-bottom: 1rem;\n}\n\n.form-group label {\n    font-size: 0.875rem;\n    color: #6c757d;\n    margin-bottom: 0.25rem;\n}\n\n.form-group .text-danger {\n    margin-left: 2px;\n}\n\n/* Dark theme */\n[data-theme=\"dark\"] .form-group label {\n    color: #adb5bd;\n}\n</code></pre>"},{"location":"fod/componente/FODInputWrapper/#accesibilitate","title":"Accesibilitate","text":"<ol> <li>Label-uri asociate - Folose\u0219te atributul <code>for</code> cu ID-ul corect</li> <li>Indicatori vizuali - Asteriscul ro\u0219u pentru c\u00e2mpuri obligatorii</li> <li>Descrieri accesibile - Prin tooltip-uri</li> <li>Structur\u0103 semantic\u0103 - Folose\u0219te elemente HTML corecte</li> </ol>"},{"location":"fod/componente/FODInputWrapper/#best-practices","title":"Best Practices","text":"<ol> <li>Implementa\u021bi IFODFormComponent corect - Toate metodele trebuie implementate</li> <li>Folosi\u021bi descrieri utile - Pentru a ajuta utilizatorii</li> <li>Consisten\u021b\u0103 - Folosi\u021bi wrapper-ul pentru toate c\u00e2mpurile</li> <li>Nu duplica\u021bi label-uri - Wrapper-ul le gestioneaz\u0103 automat</li> <li>Validare - Include\u021bi ValidationMessage \u00een ChildContent</li> </ol>"},{"location":"fod/componente/FODInputWrapper/#integrare-cu-componente-existente","title":"Integrare cu Componente Existente","text":"<p>Majoritatea componentelor FOD folosesc deja FODInputWrapper: - FODInputText - FODInputNumber - FODInputSelect - FODInputRadioGroup - FODInputFile - \u0218i altele...</p>"},{"location":"fod/componente/FODInputWrapper/#avantaje","title":"Avantaje","text":"<ol> <li>Consisten\u021b\u0103 vizual\u0103 - Toate formularele arat\u0103 la fel</li> <li>Cod DRY - Nu repeta\u021bi logica de afi\u0219are</li> <li>Maintenance u\u0219or - Schimb\u0103ri \u00eentr-un singur loc</li> <li>Accesibilitate - Gestionat\u0103 centralizat</li> <li>Flexibilitate - Suport\u0103 orice tip de input</li> </ol>"},{"location":"fod/componente/FODInputWrapper/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Necesit\u0103 implementarea IFODFormComponent</li> <li>Layout-ul este relativ fix</li> <li>Nu suport\u0103 label-uri inline</li> <li>Nu are suport pentru label-uri complexe (cu HTML)</li> </ul>"},{"location":"fod/componente/FODInputWrapper/#concluzie","title":"Concluzie","text":"<p>FODInputWrapper este componenta fundamental\u0103 pentru crearea unui sistem uniform de formulare \u00een aplica\u021biile FOD. Prin centralizarea logicii de afi\u0219are \u0219i stilizare, asigur\u0103 consisten\u021b\u0103 \u0219i reduce duplicarea codului, fiind esen\u021bial\u0103 pentru orice component\u0103 de formular personalizat\u0103.</p>"},{"location":"fod/componente/FODLogin/","title":"FODLogin","text":""},{"location":"fod/componente/FODLogin/#documentatie-pentru-componenta-fodlogin","title":"Documenta\u021bie pentru componenta FODLogin","text":""},{"location":"fod/componente/FODLogin/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FODLogin</code> este o component\u0103 de baz\u0103 pentru autentificare care ofer\u0103 un formular simplu de login cu c\u00e2mpuri pentru email \u0219i parol\u0103. Componenta folose\u0219te stiluri Bootstrap \u0219i ofer\u0103 o interfa\u021b\u0103 standard pentru autentificare.</p> <p>Not\u0103: Aceasta pare a fi o component\u0103 de baz\u0103/demo. Pentru produc\u021bie, se recomand\u0103 integrarea cu servicii de autentificare precum MPass.</p> <p>Caracteristici principale: - Formular de login cu email \u0219i parol\u0103 - Checkbox \"Remember password\" - Design card cu umbr\u0103 - Autocompletare dezactivat\u0103 pentru securitate - Stilizare Bootstrap - Text helper pentru c\u00e2mpuri</p>"},{"location":"fod/componente/FODLogin/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FODLogin/#login-simplu","title":"Login simplu","text":"<pre><code>&lt;FODLogin /&gt;\n</code></pre>"},{"location":"fod/componente/FODLogin/#integrare-in-pagina-de-autentificare","title":"Integrare \u00een pagin\u0103 de autentificare","text":"<pre><code>@page \"/login\"\n@layout EmptyLayout\n\n&lt;div class=\"login-container d-flex align-items-center justify-content-center min-vh-100\"&gt;\n    &lt;div class=\"login-wrapper\" style=\"max-width: 400px; width: 100%;\"&gt;\n        &lt;FodText Typo=\"Typo.h4\" Align=\"FodAlign.Center\" GutterBottom=\"true\"&gt;\n            Autentificare\n        &lt;/FodText&gt;\n\n        &lt;FODLogin /&gt;\n\n        &lt;div class=\"mt-3 text-center\"&gt;\n            &lt;FodLink Href=\"/forgot-password\"&gt;A\u021bi uitat parola?&lt;/FodLink&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODLogin/#3-limitari-actuale","title":"3. Limit\u0103ri Actuale","text":"<p>Componenta actual\u0103 este o implementare de baz\u0103 f\u0103r\u0103: - Event handlers pentru submit - Binding pentru c\u00e2mpuri - Validare - Integrare cu servicii de autentificare</p>"},{"location":"fod/componente/FODLogin/#4-exemple-de-extindere","title":"4. Exemple de Extindere","text":""},{"location":"fod/componente/FODLogin/#componenta-login-functionala","title":"Component\u0103 login func\u021bional\u0103","text":"<pre><code>@inherits FODLogin\n\n&lt;div class=\"card shadow\"&gt;\n    &lt;div class=\"card-body\"&gt;\n        &lt;EditForm Model=\"@loginModel\" OnValidSubmit=\"HandleLogin\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;div class=\"form-group\"&gt;\n                &lt;label&gt;Email&lt;/label&gt;\n                &lt;InputText @bind-Value=\"loginModel.Email\" \n                           class=\"form-control\" \n                           placeholder=\"Introduce\u021bi email-ul\" /&gt;\n                &lt;ValidationMessage For=\"@(() =&gt; loginModel.Email)\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"form-group\"&gt;\n                &lt;label&gt;Parol\u0103&lt;/label&gt;\n                &lt;InputText @bind-Value=\"loginModel.Password\" \n                           type=\"password\"\n                           class=\"form-control\" \n                           placeholder=\"Introduce\u021bi parola\" /&gt;\n                &lt;ValidationMessage For=\"@(() =&gt; loginModel.Password)\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"form-group\"&gt;\n                &lt;InputCheckbox @bind-Value=\"loginModel.RememberMe\" \n                               class=\"form-check-input\" \n                               id=\"rememberMe\" /&gt;\n                &lt;label class=\"form-check-label\" for=\"rememberMe\"&gt;\n                    P\u0103streaz\u0103-m\u0103 autentificat\n                &lt;/label&gt;\n            &lt;/div&gt;\n\n            &lt;button type=\"submit\" class=\"btn btn-primary ml-auto\" \n                    disabled=\"@isLoading\"&gt;\n                @if (isLoading)\n                {\n                    &lt;span class=\"spinner-border spinner-border-sm mr-2\"&gt;&lt;/span&gt;\n                }\n                Autentificare\n            &lt;/button&gt;\n\n            @if (!string.IsNullOrEmpty(errorMessage))\n            {\n                &lt;FodAlert Severity=\"FodSeverity.Error\" Class=\"mt-3\"&gt;\n                    @errorMessage\n                &lt;/FodAlert&gt;\n            }\n        &lt;/EditForm&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private LoginModel loginModel = new();\n    private bool isLoading;\n    private string errorMessage;\n\n    [Inject] private IAuthenticationService AuthService { get; set; }\n    [Inject] private NavigationManager Navigation { get; set; }\n\n    private async Task HandleLogin()\n    {\n        isLoading = true;\n        errorMessage = null;\n\n        try\n        {\n            var result = await AuthService.Login(loginModel);\n            if (result.Success)\n            {\n                Navigation.NavigateTo(\"/\", true);\n            }\n            else\n            {\n                errorMessage = result.ErrorMessage;\n            }\n        }\n        catch (Exception ex)\n        {\n            errorMessage = \"Eroare la autentificare. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\";\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    public class LoginModel\n    {\n        [Required(ErrorMessage = \"Email-ul este obligatoriu\")]\n        [EmailAddress(ErrorMessage = \"Format email invalid\")]\n        public string Email { get; set; }\n\n        [Required(ErrorMessage = \"Parola este obligatorie\")]\n        [MinLength(6, ErrorMessage = \"Parola trebuie s\u0103 aib\u0103 minim 6 caractere\")]\n        public string Password { get; set; }\n\n        public bool RememberMe { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODLogin/#login-cu-mpass","title":"Login cu MPass","text":"<pre><code>@page \"/login\"\n@inject NavigationManager Navigation\n\n&lt;div class=\"login-options\"&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n                Alege\u021bi metoda de autentificare\n            &lt;/FodText&gt;\n\n            &lt;div class=\"d-grid gap-2\"&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" \n                           Size=\"FodSize.Large\"\n                           StartIcon=\"@FodIcons.Material.Filled.Key\"\n                           OnClick=\"LoginWithMPass\"&gt;\n                    Autentificare cu MPass\n                &lt;/FodButton&gt;\n\n                &lt;FodButton Color=\"FodColor.Secondary\" \n                           Variant=\"FodVariant.Outlined\"\n                           Size=\"FodSize.Large\"\n                           OnClick=\"ShowClassicLogin\"&gt;\n                    Autentificare clasic\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    @if (showClassicLogin)\n    {\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FODLogin /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private bool showClassicLogin;\n\n    private void LoginWithMPass()\n    {\n        Navigation.NavigateTo(\"/auth/mpass\", true);\n    }\n\n    private void ShowClassicLogin()\n    {\n        showClassicLogin = true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODLogin/#5-stilizare-moderna","title":"5. Stilizare Modern\u0103","text":"<pre><code>&lt;style&gt;\n    /* Modern login styling */\n    .modern-login .card {\n        border: none;\n        border-radius: 12px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    }\n\n    .modern-login .card-body {\n        padding: 2rem;\n    }\n\n    .modern-login .form-group {\n        margin-bottom: 1.5rem;\n    }\n\n    .modern-login label {\n        font-weight: 600;\n        color: var(--fod-palette-text-secondary);\n        margin-bottom: 0.5rem;\n    }\n\n    .modern-login .form-control {\n        border-radius: 8px;\n        padding: 0.75rem 1rem;\n        border: 2px solid var(--fod-palette-divider);\n        transition: border-color 0.3s;\n    }\n\n    .modern-login .form-control:focus {\n        border-color: var(--fod-palette-primary-main);\n        box-shadow: 0 0 0 0.2rem rgba(var(--fod-palette-primary-rgb), 0.25);\n    }\n\n    .modern-login .btn-primary {\n        width: 100%;\n        padding: 0.75rem;\n        font-weight: 600;\n        border-radius: 8px;\n        background: var(--fod-palette-primary-main);\n        border: none;\n        transition: all 0.3s;\n    }\n\n    .modern-login .btn-primary:hover {\n        background: var(--fod-palette-primary-dark);\n        transform: translateY(-2px);\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    }\n&lt;/style&gt;\n\n&lt;div class=\"modern-login\"&gt;\n    &lt;FODLogin /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FODLogin/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/FODLogin/#login-cu-rate-limiting","title":"Login cu rate limiting","text":"<pre><code>&lt;ExtendedLogin MaxAttempts=\"3\" \n               LockoutDuration=\"300\"\n               OnLoginSuccess=\"HandleLoginSuccess\"\n               OnLoginFailed=\"HandleLoginFailed\" /&gt;\n\n@code {\n    private void HandleLoginSuccess(LoginResult result)\n    {\n        Navigation.NavigateTo(result.RedirectUrl ?? \"/dashboard\");\n    }\n\n    private void HandleLoginFailed(LoginError error)\n    {\n        if (error.IsLockedOut)\n        {\n            ShowNotification($\"Cont blocat pentru {error.RemainingLockoutTime} secunde\");\n        }\n        else\n        {\n            ShowNotification($\"Autentificare e\u0219uat\u0103. Mai ave\u021bi {error.RemainingAttempts} \u00eencerc\u0103ri.\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODLogin/#7-scenarii-de-utilizare","title":"7. Scenarii de Utilizare","text":""},{"location":"fod/componente/FODLogin/#login-cu-2fa","title":"Login cu 2FA","text":"<pre><code>&lt;TwoFactorLogin&gt;\n    &lt;FirstStep&gt;\n        &lt;FODLogin /&gt;\n    &lt;/FirstStep&gt;\n    &lt;SecondStep&gt;\n        &lt;div class=\"card shadow\"&gt;\n            &lt;div class=\"card-body\"&gt;\n                &lt;h5&gt;Verificare \u00een doi pa\u0219i&lt;/h5&gt;\n                &lt;p&gt;Introduce\u021bi codul primit pe telefon&lt;/p&gt;\n                &lt;FodInput @bind-Value=\"twoFactorCode\" \n                          Mask=\"000-000\"\n                          Placeholder=\"XXX-XXX\" /&gt;\n                &lt;FodButton Color=\"FodColor.Primary\"&gt;\n                    Verific\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/SecondStep&gt;\n&lt;/TwoFactorLogin&gt;\n</code></pre>"},{"location":"fod/componente/FODLogin/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Securitate:</li> <li>Folosi\u021bi HTTPS \u00eentotdeauna</li> <li>Implementa\u021bi rate limiting</li> <li>Nu stoca\u021bi parole \u00een plain text</li> <li> <p>Folosi\u021bi token-uri sicure</p> </li> <li> <p>UX:</p> </li> <li>Afi\u0219a\u021bi feedback pentru erori</li> <li>Indica\u021bi starea de \u00eenc\u0103rcare</li> <li>Oferi\u021bi op\u021biuni de recuperare parol\u0103</li> <li> <p>Validare \u00een timp real</p> </li> <li> <p>Accesibilitate:</p> </li> <li>Labels pentru toate c\u00e2mpurile</li> <li>Mesaje de eroare descriptive</li> <li>Suport pentru navigare cu tastatura</li> <li>ARIA attributes</li> </ol>"},{"location":"fod/componente/FODLogin/#9-migrare-catre-solutii-moderne","title":"9. Migrare c\u0103tre Solu\u021bii Moderne","text":"<p>Pentru produc\u021bie, considera\u021bi: 1. MPass Integration - Pentru cet\u0103\u021beni 2. Azure AD B2C - Pentru aplica\u021bii enterprise 3. IdentityServer - Pentru SSO 4. JWT Authentication - Pentru API-uri</p>"},{"location":"fod/componente/FODLogin/#10-troubleshooting","title":"10. Troubleshooting","text":""},{"location":"fod/componente/FODLogin/#formularul-nu-trimite-date","title":"Formularul nu trimite date","text":"<ul> <li>Componenta actual\u0103 nu are binding</li> <li>Implementa\u021bi o versiune extins\u0103 cu EditForm</li> </ul>"},{"location":"fod/componente/FODLogin/#stiluri-bootstrap-lipsesc","title":"Stiluri Bootstrap lipsesc","text":"<ul> <li>Asigura\u021bi-v\u0103 c\u0103 Bootstrap este inclus</li> <li>Verifica\u021bi ordinea CSS imports</li> </ul>"},{"location":"fod/componente/FODLogin/#11-alternative-recomandate","title":"11. Alternative Recomandate","text":"<p>Pentru produc\u021bie, folosi\u021bi: <pre><code>&lt;!-- MPass Login --&gt;\n&lt;FodMPassLogin ClientId=\"@clientId\" \n               RedirectUri=\"@redirectUri\"\n               Scope=\"@scope\" /&gt;\n\n&lt;!-- Sau component\u0103 custom complet\u0103 --&gt;\n&lt;FodAuthenticationForm Provider=\"MPass|Classic|AzureAD\"\n                       ShowRememberMe=\"true\"\n                       ShowForgotPassword=\"true\"\n                       ShowRegisterLink=\"true\" /&gt;\n</code></pre></p>"},{"location":"fod/componente/FODLogin/#12-concluzie","title":"12. Concluzie","text":"<p><code>FODLogin</code> ofer\u0103 o structur\u0103 de baz\u0103 pentru formulare de autentificare, dar necesit\u0103 extindere pentru utilizare \u00een produc\u021bie. Pentru aplica\u021bii reale, integra\u021bi cu servicii de autentificare robuste \u0219i ad\u0103uga\u021bi func\u021bionalit\u0103\u021bi precum validare, error handling \u0219i securitate avansat\u0103.</p>"},{"location":"fod/componente/FODTable/","title":"FODTable","text":""},{"location":"fod/componente/FODTable/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FODTable</code> este componenta principal\u0103 pentru afi\u0219area datelor tabulare \u00een FOD.Components. Ofer\u0103 func\u021bionalit\u0103\u021bi avansate precum sortare, paginare, c\u0103utare, editare inline \u0219i expandare detalii. Componenta suport\u0103 at\u00e2t date locale c\u00e2t \u0219i server-side cu \u00eenc\u0103rcare asincron\u0103.</p>"},{"location":"fod/componente/FODTable/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Tabel simplu cu date locale --&gt;\n&lt;FODTable Source=\"@users\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"Name\" Title=\"Nume\" /&gt;\n        &lt;FODTableColumn Name=\"Email\" Title=\"Email\" /&gt;\n        &lt;FODTableColumn Name=\"Role\" Title=\"Rol\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n&lt;!-- Tabel cu server data --&gt;\n&lt;FODTable ServerData=\"@LoadServerData\" PageSize=\"10\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"Id\" Title=\"ID\" Sortable=\"true\" /&gt;\n        &lt;FODTableColumn Name=\"Title\" Title=\"Titlu\" Searchable=\"true\" /&gt;\n        &lt;FODTableColumn Name=\"Status\" Title=\"Status\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private List&lt;User&gt; users = new();\n\n    private async Task&lt;DataResponse&lt;Product&gt;&gt; LoadServerData(DataRequest request)\n    {\n        // \u00cenc\u0103rcare date de pe server\n        return await ProductService.GetPaginatedData(request);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#atribute-disponibile","title":"Atribute Disponibile","text":""},{"location":"fod/componente/FODTable/#proprietati-principale","title":"Propriet\u0103\u021bi Principale","text":"Atribut Tip Default Descriere Source IEnumerable null Date locale pentru tabel ServerData Func&gt;&gt; null Func\u021bie pentru \u00eenc\u0103rcare server-side Columns RenderFragment - Definirea coloanelor DetailsColumns RenderFragment null Coloane pentru zona expandat\u0103 UpdateRow Func null Func\u021bie pentru actualizare r\u00e2nd"},{"location":"fod/componente/FODTable/#paginare-si-cautare","title":"Paginare \u0219i C\u0103utare","text":"Atribut Tip Default Descriere HidePagination bool false Ascunde paginarea PageSize int 10 Num\u0103r elemente per pagin\u0103 PagerPosition PagerPosition Bottom Pozi\u021bie paginator ShowSearchBar bool false Afi\u0219eaz\u0103 bara de c\u0103utare SearchFields string[] null C\u00e2mpuri adi\u021b. pentru c\u0103utare"},{"location":"fod/componente/FODTable/#aspect-si-stil","title":"Aspect \u0219i Stil","text":"Atribut Tip Default Descriere TableClass string - Clase CSS pentru tabel HeaderCssClass string - Clase CSS pentru header ShowDetails bool false Permite expandare r\u00e2nduri RowMarkers RenderFragment null Marcaje custom pentru r\u00e2nduri"},{"location":"fod/componente/FODTable/#evenimente","title":"Evenimente","text":"Eveniment Descriere ReloadData() Re\u00eencarc\u0103 datele tabelului UpdateData(object) Actualizeaz\u0103 un r\u00e2nd specific"},{"location":"fod/componente/FODTable/#componente-asociate","title":"Componente Asociate","text":""},{"location":"fod/componente/FODTable/#fodtablecolumn","title":"FODTableColumn","text":"<p>Define\u0219te o coloan\u0103 \u00een tabel.</p> <pre><code>&lt;FODTableColumn Name=\"@nameof(User.Name)\" \n                Title=\"Nume Complet\"\n                Sortable=\"true\"\n                Searchable=\"true\"\n                Format=\"@((value) =&gt; value?.ToString().ToUpper())\"\n                Style=\"width: 200px\" /&gt;\n</code></pre> <p>Atribute FODTableColumn:</p> Atribut Tip Default Descriere Name string - Numele propriet\u0103\u021bii Title string - Titlul coloanei Sortable bool false Permite sortare Searchable bool false Include \u00een c\u0103utare Editable bool false Permite editare inline Format Func null Func\u021bie formatare BackgroundColorFunc Func null Culoare fundal dinamic Hidden bool false Ascunde coloana IsMultiple bool false Pentru colec\u021bii Style string - Stil CSS CellContentStyle string - Stil pentru celul\u0103 CellTitle string null Tooltip celul\u0103"},{"location":"fod/componente/FODTable/#fodtablerow","title":"FODTableRow","text":"<p>Reprezint\u0103 un r\u00e2nd \u00een tabel. Generat automat de FODTable.</p>"},{"location":"fod/componente/FODTable/#fodtablepager","title":"FODTablePager","text":"<p>Componenta de paginare. Generat\u0103 automat c\u00e2nd paginarea e activ\u0103.</p>"},{"location":"fod/componente/FODTable/#fodtablesearch","title":"FODTableSearch","text":"<p>Bara de c\u0103utare. Afi\u0219at\u0103 c\u00e2nd ShowSearchBar=\"true\".</p>"},{"location":"fod/componente/FODTable/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FODTable/#tabel-cu-sortare-si-cautare","title":"Tabel cu Sortare \u0219i C\u0103utare","text":"<pre><code>&lt;FODTable @ref=\"tableRef\" \n          Source=\"@products\" \n          ShowSearchBar=\"true\"\n          PageSize=\"20\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"@nameof(Product.Code)\" \n                        Title=\"Cod\" \n                        Sortable=\"true\" /&gt;\n\n        &lt;FODTableColumn Name=\"@nameof(Product.Name)\" \n                        Title=\"Denumire\" \n                        Sortable=\"true\" \n                        Searchable=\"true\" /&gt;\n\n        &lt;FODTableColumn Name=\"@nameof(Product.Price)\" \n                        Title=\"Pre\u021b\" \n                        Sortable=\"true\"\n                        Format=\"@(v =&gt; $\"{v:C2}\")\" /&gt;\n\n        &lt;FODTableColumn Name=\"@nameof(Product.Stock)\" \n                        Title=\"Stoc\"\n                        BackgroundColorFunc=\"@GetStockColor\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private FODTable&lt;Product&gt; tableRef;\n    private List&lt;Product&gt; products = new();\n\n    private string GetStockColor(object value)\n    {\n        if (value is int stock)\n        {\n            if (stock &lt;= 0) return \"#ffebee\"; // Ro\u0219u deschis\n            if (stock &lt; 10) return \"#fff3e0\"; // Portocaliu deschis\n            return \"\"; // Default\n        }\n        return \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#tabel-cu-server-side-data","title":"Tabel cu Server-Side Data","text":"<pre><code>&lt;FODTable ServerData=\"@LoadData\" \n          PageSize=\"25\"\n          ShowSearchBar=\"true\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"OrderNumber\" \n                        Title=\"Nr. Comand\u0103\" \n                        Sortable=\"true\" /&gt;\n\n        &lt;FODTableColumn Name=\"CustomerName\" \n                        Title=\"Client\" \n                        Searchable=\"true\" /&gt;\n\n        &lt;FODTableColumn Name=\"OrderDate\" \n                        Title=\"Data\"\n                        Format=\"@(v =&gt; ((DateTime)v).ToString(\"dd.MM.yyyy\"))\" /&gt;\n\n        &lt;FODTableColumn Name=\"Status\" \n                        Title=\"Status\"&gt;\n            &lt;Markers&gt;\n                &lt;FodChip Color=\"@GetStatusColor(context)\"\n                         Size=\"FodSize.Small\"&gt;\n                    @context\n                &lt;/FodChip&gt;\n            &lt;/Markers&gt;\n        &lt;/FODTableColumn&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private async Task&lt;DataResponse&lt;Order&gt;&gt; LoadData(DataRequest request)\n    {\n        // Construie\u0219te query bazat pe request\n        var query = DbContext.Orders.AsQueryable();\n\n        // Aplicare c\u0103utare\n        if (!string.IsNullOrEmpty(request.Keyword))\n        {\n            query = query.Where(o =&gt; \n                o.CustomerName.Contains(request.Keyword) ||\n                o.OrderNumber.Contains(request.Keyword));\n        }\n\n        // Aplicare sortare\n        if (!string.IsNullOrEmpty(request.Sort))\n        {\n            query = request.SortDirection == SortDirection.Ascending\n                ? query.OrderBy(request.Sort)\n                : query.OrderByDescending(request.Sort);\n        }\n\n        // Total \u00eenainte de paginare\n        var total = await query.CountAsync();\n\n        // Aplicare paginare\n        var items = await query\n            .Skip((request.Page - 1) * request.PageSize)\n            .Take(request.PageSize)\n            .ToListAsync();\n\n        return new DataResponse&lt;Order&gt;\n        {\n            Items = items,\n            Total = total\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#tabel-cu-editare-inline","title":"Tabel cu Editare Inline","text":"<pre><code>&lt;FODTable Source=\"@settings\" UpdateRow=\"@UpdateSetting\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"Key\" Title=\"Parametru\" /&gt;\n\n        &lt;FODTableColumn Name=\"Value\" \n                        Title=\"Valoare\"\n                        Editable=\"true\"\n                        EditableItems=\"@GetEditableValues\" /&gt;\n\n        &lt;FODTableColumn Name=\"Description\" Title=\"Descriere\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private List&lt;Setting&gt; settings = new();\n\n    private async Task UpdateSetting(Setting setting)\n    {\n        await SettingsService.UpdateAsync(setting);\n        // Re\u00eencarc\u0103 datele\n        await LoadSettings();\n    }\n\n    private IEnumerable&lt;SelectableItem&gt; GetEditableValues(object row)\n    {\n        if (row is Setting setting)\n        {\n            switch (setting.Key)\n            {\n                case \"Theme\":\n                    return new[] \n                    { \n                        new SelectableItem(\"light\", \"Light\"),\n                        new SelectableItem(\"dark\", \"Dark\") \n                    };\n                case \"Language\":\n                    return new[] \n                    { \n                        new SelectableItem(\"ro\", \"Rom\u00e2n\u0103\"),\n                        new SelectableItem(\"en\", \"English\") \n                    };\n            }\n        }\n        return Enumerable.Empty&lt;SelectableItem&gt;();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#tabel-cu-randuri-expandabile","title":"Tabel cu R\u00e2nduri Expandabile","text":"<pre><code>&lt;FODTable Source=\"@orders\" ShowDetails=\"true\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"OrderNumber\" Title=\"Comand\u0103\" /&gt;\n        &lt;FODTableColumn Name=\"Date\" Title=\"Data\" /&gt;\n        &lt;FODTableColumn Name=\"Total\" Title=\"Total\" Format=\"@(v =&gt; $\"{v:C2}\")\" /&gt;\n    &lt;/Columns&gt;\n\n    &lt;DetailsColumns&gt;\n        @{\n            var order = context as Order;\n        }\n        &lt;div class=\"order-details p-3\"&gt;\n            &lt;h6&gt;Produse comandate:&lt;/h6&gt;\n            &lt;table class=\"table table-sm\"&gt;\n                @foreach (var item in order.Items)\n                {\n                    &lt;tr&gt;\n                        &lt;td&gt;@item.ProductName&lt;/td&gt;\n                        &lt;td&gt;@item.Quantity&lt;/td&gt;\n                        &lt;td&gt;@item.Price.ToString(\"C2\")&lt;/td&gt;\n                    &lt;/tr&gt;\n                }\n            &lt;/table&gt;\n\n            &lt;div class=\"mt-3\"&gt;\n                &lt;strong&gt;Adres\u0103 livrare:&lt;/strong&gt; @order.ShippingAddress\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/DetailsColumns&gt;\n&lt;/FODTable&gt;\n</code></pre>"},{"location":"fod/componente/FODTable/#tabel-cu-marcaje-randuri","title":"Tabel cu Marcaje R\u00e2nduri","text":"<pre><code>&lt;FODTable Source=\"@tasks\"&gt;\n    &lt;RowMarkers&gt;\n        &lt;FODTableRowMarker Color=\"@GetRowColor()\" /&gt;\n    &lt;/RowMarkers&gt;\n\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"Title\" Title=\"Task\" /&gt;\n        &lt;FODTableColumn Name=\"Assignee\" Title=\"Responsabil\" /&gt;\n        &lt;FODTableColumn Name=\"DueDate\" Title=\"Termen\" /&gt;\n        &lt;FODTableColumn Name=\"Status\" Title=\"Status\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private string GetRowColor()\n    {\n        // Logic\u0103 pentru culoare bazat\u0103 pe context\n        return \"red\"; // sau \"green\", \"yellow\", etc.\n    }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#tabel-cu-template-uri-custom","title":"Tabel cu Template-uri Custom","text":"<pre><code>&lt;FODTable Source=\"@employees\"&gt;\n    &lt;Columns&gt;\n        &lt;FODTableColumn Name=\"Photo\" Title=\"\"&gt;\n            &lt;Markers&gt;\n                &lt;FodAvatar Image=\"@GetPhotoUrl(context)\" Size=\"FodSize.Small\" /&gt;\n            &lt;/Markers&gt;\n        &lt;/FODTableColumn&gt;\n\n        &lt;FODTableColumn Name=\"Name\" Title=\"Angajat\"&gt;\n            &lt;Markers&gt;\n                &lt;div&gt;\n                    &lt;strong&gt;@(context as Employee).Name&lt;/strong&gt;&lt;br/&gt;\n                    &lt;small class=\"text-muted\"&gt;@(context as Employee).Department&lt;/small&gt;\n                &lt;/div&gt;\n            &lt;/Markers&gt;\n        &lt;/FODTableColumn&gt;\n\n        &lt;FODTableColumn Name=\"Actions\" Title=\"\"&gt;\n            &lt;Markers&gt;\n                &lt;FodIconButton Icon=\"edit\" Size=\"FodSize.Small\" \n                              OnClick=\"@(() =&gt; EditEmployee(context as Employee))\" /&gt;\n                &lt;FodIconButton Icon=\"delete\" Size=\"FodSize.Small\" Color=\"FodColor.Error\"\n                              OnClick=\"@(() =&gt; DeleteEmployee(context as Employee))\" /&gt;\n            &lt;/Markers&gt;\n        &lt;/FODTableColumn&gt;\n    &lt;/Columns&gt;\n&lt;/FODTable&gt;\n</code></pre>"},{"location":"fod/componente/FODTable/#modele-de-date","title":"Modele de Date","text":""},{"location":"fod/componente/FODTable/#datarequest","title":"DataRequest","text":"<pre><code>public class DataRequest\n{\n    public int Page { get; set; } = 1;\n    public int PageSize { get; set; } = 10;\n    public string Sort { get; set; }\n    public SortDirection SortDirection { get; set; }\n    public string Keyword { get; set; }\n    public List&lt;string&gt; SearchableColumns { get; set; }\n    public object Filter { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FODTable/#dataresponse","title":"DataResponse <pre><code>public class DataResponse&lt;T&gt;\n{\n    public IEnumerable&lt;T&gt; Items { get; set; }\n    public int Total { get; set; }\n}\n</code></pre>","text":""},{"location":"fod/componente/FODTable/#tablecontext","title":"TableContext <p>Context partajat \u00eentre componentele tabelului.</p> <pre><code>public class TableContext&lt;T&gt;\n{\n    public FODTable&lt;T&gt; Table { get; set; }\n    public DataState DataState { get; set; } = new();\n}\n</code></pre>","text":""},{"location":"fod/componente/FODTable/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FODTable/#clase-css","title":"Clase CSS <pre><code>.table\n.sortable\n.fod-table-search\n.fod-table-pager\n.fod-table-row\n.fod-table-row-expanded\n</code></pre>","text":""},{"location":"fod/componente/FODTable/#personalizare-aspect","title":"Personalizare Aspect <pre><code>&lt;FODTable TableClass=\"table table-striped table-hover\"\n          HeaderCssClass=\"table-dark\"&gt;\n    &lt;!-- Coloane --&gt;\n&lt;/FODTable&gt;\n</code></pre>","text":""},{"location":"fod/componente/FODTable/#servicii-asociate","title":"Servicii Asociate","text":""},{"location":"fod/componente/FODTable/#idatarequesthandlerservice","title":"IDataRequestHandlerService <p>Service pentru procesarea datelor locale (sortare, filtrare, paginare).</p> <pre><code>public interface IDataRequestHandlerService&lt;T&gt;\n{\n    DataResponse&lt;T&gt; HandleRequest(IEnumerable&lt;T&gt; source, DataRequest request);\n}\n</code></pre>","text":""},{"location":"fod/componente/FODTable/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>Generic Type - FODTable necesit\u0103 specificarea tipului r\u00e2ndului <li>Performance - Pentru date mari, folosi\u021bi ServerData \u00een loc de Source</li> <li>C\u0103utare - C\u0103utarea func\u021bioneaz\u0103 doar pe coloane marcate ca Searchable</li> <li>Sortare - Sortarea local\u0103 folose\u0219te reflection pentru acces propriet\u0103\u021bi</li> <li>Editare - Editarea inline necesit\u0103 implementarea UpdateRow</li>"},{"location":"fod/componente/FODTable/#bune-practici","title":"Bune Practici","text":"<ol> <li>Folosi\u021bi ServerData pentru seturi mari de date</li> <li>Limita\u021bi num\u0103rul de coloane searchable pentru performan\u021b\u0103</li> <li>Implementa\u021bi paginare pentru mai mult de 50 r\u00e2nduri</li> <li>Folosi\u021bi Format pentru afi\u0219are consistent\u0103</li> <li>Ad\u0103uga\u021bi loading state pentru opera\u021bii asincrone</li> <li>Valida\u021bi datele \u00eenainte de salvare \u00een UpdateRow</li> <li>Folosi\u021bi DetailsColumns pentru informa\u021bii secundare</li> </ol>"},{"location":"fod/componente/FODTable/#concluzie","title":"Concluzie","text":"<p>FODTable ofer\u0103 o solu\u021bie complet\u0103 pentru afi\u0219area \u0219i manipularea datelor tabulare \u00een aplica\u021bii Blazor. Cu suport pentru sortare, c\u0103utare, paginare \u0219i editare, componenta acoper\u0103 majoritatea necesit\u0103\u021bilor pentru lucrul cu date structurate.</p>"},{"location":"fod/componente/FileList/","title":"FileList","text":""},{"location":"fod/componente/FileList/#documentatie-pentru-componenta-filelist","title":"Documenta\u021bie pentru componenta FileList","text":""},{"location":"fod/componente/FileList/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FileList</code> este o component\u0103 pentru afi\u0219area \u0219i gestionarea unei liste de fi\u0219iere \u00eenc\u0103rcate. Ofer\u0103 func\u021bionalit\u0103\u021bi de vizualizare, \u0219tergere \u0219i preview pentru fi\u0219iere, integrat cu serviciul de upload \u0219i componenta FodFileView.</p> <p>Caracteristici principale: - Afi\u0219are list\u0103 fi\u0219iere cu detalii - Buton preview pentru vizualizare fi\u0219ier - Buton \u0219tergere cu confirmare - Integrare cu IFileUploadService - Loading state pentru opera\u021biuni - Integrare automat\u0103 cu FodFileView - Suport pentru callback-uri personalizate</p>"},{"location":"fod/componente/FileList/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FileList/#lista-simpla-de-fisiere","title":"List\u0103 simpl\u0103 de fi\u0219iere","text":"<pre><code>&lt;FileList Model=\"@uploadedFiles\" /&gt;\n\n@code {\n    private IEnumerable&lt;FileUploadResponseModel&gt; uploadedFiles = new List&lt;FileUploadResponseModel&gt;();\n}\n</code></pre>"},{"location":"fod/componente/FileList/#lista-cu-butoane-personalizate","title":"List\u0103 cu butoane personalizate","text":"<pre><code>&lt;FileList Model=\"@files\"\n          ColorDelete=\"FodColor.Error\"\n          ColorPreviewButton=\"FodColor.Primary\"\n          DeleteText=\"\u0218terge\"\n          OnClickDelete=\"HandleFileDeleted\" /&gt;\n\n@code {\n    private async Task HandleFileDeleted(Guid? fileId)\n    {\n        // Logic\u0103 dup\u0103 \u0219tergere\n        await NotificationService.ShowSuccess(\"Fi\u0219ier \u0219ters cu succes!\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>Model</code> <code>IEnumerable&lt;FileUploadResponseModel&gt;</code> Lista de fi\u0219iere - <code>ColorDownload</code> <code>FodColor</code> Culoarea butonului de desc\u0103rcare - <code>ColorDelete</code> <code>FodColor</code> Culoarea butonului de \u0219tergere - <code>OnClickDownload</code> <code>EventCallback</code> Eveniment la desc\u0103rcare - <code>OnClickDelete</code> <code>EventCallback&lt;Guid?&gt;</code> Eveniment dup\u0103 \u0219tergere - <code>OnStartDelete</code> <code>EventCallback</code> Eveniment \u00eenainte de \u0219tergere - <code>DownloadText</code> <code>string</code> Text buton desc\u0103rcare - <code>DeleteText</code> <code>string</code> Text buton \u0219tergere - <code>ColorPreviewButton</code> <code>FodColor?</code> Culoarea butonului preview <code>Primary</code>"},{"location":"fod/componente/FileList/#4-model-fileuploadresponsemodel","title":"4. Model FileUploadResponseModel","text":"<pre><code>public class FileUploadResponseModel\n{\n    public Guid Id { get; set; }\n    public string FileName { get; set; }\n    public string FileType { get; set; }\n    public long FileSize { get; set; }\n    public DateTime UploadDate { get; set; }\n    // alte propriet\u0103\u021bi\n}\n</code></pre>"},{"location":"fod/componente/FileList/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FileList/#gestiune-completa-fisiere-cu-validare","title":"Gestiune complet\u0103 fi\u0219iere cu validare","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Documente \u00eenc\u0103rcate&lt;/FodText&gt;\n\n        @if (files.Any())\n        {\n            &lt;FileList Model=\"@files\"\n                      ColorDelete=\"FodColor.Error\"\n                      ColorPreviewButton=\"FodColor.Info\"\n                      DeleteText=\"Elimin\u0103\"\n                      OnStartDelete=\"OnBeforeDelete\"\n                      OnClickDelete=\"OnAfterDelete\" /&gt;\n\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.TextSecondary\"&gt;\n                Total: @files.Count() fi\u0219iere (@FormatFileSize(totalSize))\n            &lt;/FodText&gt;\n        }\n        else\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n                Nu exist\u0103 fi\u0219iere \u00eenc\u0103rcate.\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;FileUploadResponseModel&gt; files = new();\n    private long totalSize =&gt; files.Sum(f =&gt; f.FileSize);\n\n    private async Task OnBeforeDelete()\n    {\n        // Verific\u0103ri \u00eenainte de \u0219tergere\n        if (files.Count == 1)\n        {\n            var confirm = await DialogService.ShowConfirm(\n                \"Ultimul fi\u0219ier\", \n                \"Aceasta este ultimul fi\u0219ier. Sigur dori\u021bi s\u0103-l \u0219terge\u021bi?\");\n\n            if (!confirm) \n                throw new OperationCanceledException();\n        }\n    }\n\n    private async Task OnAfterDelete(Guid? fileId)\n    {\n        // Actualizare list\u0103 local\u0103\n        files = files.Where(f =&gt; f.Id != fileId).ToList();\n\n        // Notificare\n        await NotificationService.ShowInfo($\"Fi\u0219ier \u0219ters. Mai r\u0103m\u00e2n {files.Count} fi\u0219iere.\");\n\n        // Verificare cerin\u021be minime\n        await ValidateFileRequirements();\n    }\n\n    private string FormatFileSize(long bytes)\n    {\n        string[] sizes = { \"B\", \"KB\", \"MB\", \"GB\" };\n        int order = 0;\n        double size = bytes;\n\n        while (size &gt;= 1024 &amp;&amp; order &lt; sizes.Length - 1)\n        {\n            order++;\n            size /= 1024;\n        }\n\n        return $\"{size:0.##} {sizes[order]}\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#integrare-cu-upload-component","title":"Integrare cu upload component","text":"<pre><code>&lt;div class=\"file-upload-section\"&gt;\n    &lt;FodInputFile OnChange=\"HandleFileUpload\"\n                  Accept=\".pdf,.doc,.docx\"\n                  Multiple=\"true\"&gt;\n        &lt;ButtonContent&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Upload\" /&gt;\n                \u00cencarc\u0103 documente\n            &lt;/FodButton&gt;\n        &lt;/ButtonContent&gt;\n    &lt;/FodInputFile&gt;\n\n    @if (isUploading)\n    {\n        &lt;FodLoadingLinear /&gt;\n    }\n\n    &lt;FodDivider Class=\"my-3\" /&gt;\n\n    &lt;FileList Model=\"@uploadedFiles\"\n              ColorDelete=\"FodColor.Error\"\n              ColorPreviewButton=\"FodColor.Secondary\"\n              DeleteText=\"\"\n              OnClickDelete=\"RefreshFileList\" /&gt;\n&lt;/div&gt;\n\n@code {\n    [Inject] private IFileUploadService FileService { get; set; }\n\n    private List&lt;FileUploadResponseModel&gt; uploadedFiles = new();\n    private bool isUploading;\n\n    private async Task HandleFileUpload(InputFileChangeEventArgs e)\n    {\n        isUploading = true;\n\n        try\n        {\n            foreach (var file in e.GetMultipleFiles())\n            {\n                var response = await FileService.UploadFile(file);\n                uploadedFiles.Add(response);\n            }\n        }\n        catch (Exception ex)\n        {\n            await NotificationService.ShowError($\"Eroare upload: {ex.Message}\");\n        }\n        finally\n        {\n            isUploading = false;\n        }\n    }\n\n    private async Task RefreshFileList(Guid? deletedFileId)\n    {\n        // Re-fetch lista actualizat\u0103\n        uploadedFiles = (await FileService.GetUserFiles()).ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#categorizare-fisiere-dupa-tip","title":"Categorizare fi\u0219iere dup\u0103 tip","text":"<pre><code>@foreach (var category in fileCategories)\n{\n    &lt;FodExpansionPanel Title=\"@category.Key\" \n                       BadgeContent=\"@category.Value.Count.ToString()\"&gt;\n        &lt;FileList Model=\"@category.Value\"\n                  ColorPreviewButton=\"@GetColorForType(category.Key)\"\n                  DeleteText=\"\u0218terge\"\n                  OnClickDelete=\"@(id =&gt; HandleDeleteByCategory(id, category.Key))\" /&gt;\n    &lt;/FodExpansionPanel&gt;\n}\n\n@code {\n    private Dictionary&lt;string, List&lt;FileUploadResponseModel&gt;&gt; fileCategories;\n\n    protected override void OnInitialized()\n    {\n        fileCategories = allFiles\n            .GroupBy(f =&gt; GetFileCategory(f.FileType))\n            .ToDictionary(g =&gt; g.Key, g =&gt; g.ToList());\n    }\n\n    private string GetFileCategory(string fileType) =&gt; fileType switch\n    {\n        \".pdf\" =&gt; \"Documente PDF\",\n        \".doc\" or \".docx\" =&gt; \"Documente Word\",\n        \".jpg\" or \".jpeg\" or \".png\" =&gt; \"Imagini\",\n        _ =&gt; \"Altele\"\n    };\n\n    private FodColor GetColorForType(string category) =&gt; category switch\n    {\n        \"Documente PDF\" =&gt; FodColor.Error,\n        \"Documente Word\" =&gt; FodColor.Info,\n        \"Imagini\" =&gt; FodColor.Success,\n        _ =&gt; FodColor.Default\n    };\n\n    private async Task HandleDeleteByCategory(Guid? fileId, string category)\n    {\n        fileCategories[category].RemoveAll(f =&gt; f.Id == fileId);\n\n        if (!fileCategories[category].Any())\n        {\n            fileCategories.Remove(category);\n        }\n\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#6-stilizare-css","title":"6. Stilizare CSS","text":"<pre><code>/* Lista de fi\u0219iere */\n.file-list ul {\n    padding-left: 0;\n    margin: 0;\n}\n\n.file-list li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.75rem;\n    border-bottom: 1px solid var(--fod-palette-divider);\n    transition: background-color 0.2s;\n}\n\n.file-list li:hover {\n    background-color: var(--fod-palette-action-hover);\n}\n\n.file-list li:last-child {\n    border-bottom: none;\n}\n\n/* Butoane ac\u021biuni */\n.file-list .ps-2 {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n}\n\n/* Responsive */\n@media (max-width: 576px) {\n    .file-list li {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 0.5rem;\n    }\n\n    .file-list .ps-2 {\n        margin-left: 0;\n        margin-top: 0.5rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#7-integrare-cu-servicii","title":"7. Integrare cu Servicii","text":""},{"location":"fod/componente/FileList/#extensie-pentru-functionalitati-avansate","title":"Extensie pentru func\u021bionalit\u0103\u021bi avansate","text":"<pre><code>public interface IFileListService\n{\n    Task&lt;bool&gt; ValidateFiles(IEnumerable&lt;FileUploadResponseModel&gt; files);\n    Task&lt;Dictionary&lt;string, int&gt;&gt; GetFileStatistics(IEnumerable&lt;Guid&gt; fileIds);\n    Task&lt;bool&gt; ArchiveFiles(IEnumerable&lt;Guid&gt; fileIds);\n}\n\n// \u00cen componenta Blazor\n@inject IFileListService FileListService\n\nprivate async Task ValidateAndDisplay()\n{\n    var isValid = await FileListService.ValidateFiles(uploadedFiles);\n\n    if (!isValid)\n    {\n        await NotificationService.ShowWarning(\"Unele fi\u0219iere necesit\u0103 aten\u021bie!\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FileList/#manager-documente-cu-versioning","title":"Manager documente cu versioning","text":"<pre><code>&lt;FodTabs&gt;\n    &lt;FodTabPanel Title=\"Versiune curent\u0103\"&gt;\n        &lt;FileList Model=\"@currentVersionFiles\"\n                  ColorPreviewButton=\"FodColor.Primary\"\n                  OnClickDelete=\"HandleDeleteCurrent\" /&gt;\n    &lt;/FodTabPanel&gt;\n\n    &lt;FodTabPanel Title=\"Versiuni anterioare\"&gt;\n        @foreach (var version in fileVersions.OrderByDescending(v =&gt; v.Key))\n        {\n            &lt;FodText Typo=\"Typo.subtitle2\"&gt;Versiunea @version.Key&lt;/FodText&gt;\n            &lt;FileList Model=\"@version.Value\"\n                      ColorPreviewButton=\"FodColor.Secondary\"\n                      ColorDelete=\"FodColor.Default\"\n                      DeleteText=\"Arhiveaz\u0103\" /&gt;\n        }\n    &lt;/FodTabPanel&gt;\n&lt;/FodTabs&gt;\n</code></pre>"},{"location":"fod/componente/FileList/#workflow-aprobare-documente","title":"Workflow aprobare documente","text":"<pre><code>&lt;FileList Model=\"@documentsForApproval\"&gt;\n    &lt;AdditionalActions&gt;\n        &lt;FodButton Color=\"FodColor.Success\" \n                   Size=\"FodSize.Small\"\n                   OnClick=\"() =&gt; ApproveDocument(context.Id)\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" /&gt;\n        &lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Error\" \n                   Size=\"FodSize.Small\"\n                   OnClick=\"() =&gt; RejectDocument(context.Id)\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Close\" /&gt;\n        &lt;/FodButton&gt;\n    &lt;/AdditionalActions&gt;\n&lt;/FileList&gt;\n</code></pre>"},{"location":"fod/componente/FileList/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Confirmare \u0219tergere - \u00centotdeauna confirma\u021bi \u0219tergerea</li> <li>Loading states - Afi\u0219a\u021bi feedback \u00een timpul opera\u021biilor</li> <li>Error handling - Trata\u021bi erorile de re\u021bea</li> <li>Batch operations - Pentru multe fi\u0219iere, oferi\u021bi opera\u021bii batch</li> <li>File validation - Valida\u021bi tipul \u0219i dimensiunea fi\u0219ierelor</li> <li>Accessibility - Ad\u0103uga\u021bi descrieri pentru screen readers</li> </ol>"},{"location":"fod/componente/FileList/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Lazy loading pentru liste mari</li> <li>Paginare pentru mai mult de 20 fi\u0219iere</li> <li>Cache preview-uri generate</li> <li>Debounce pentru opera\u021bii rapide</li> </ul>"},{"location":"fod/componente/FileList/#11-securitate","title":"11. Securitate","text":"<ul> <li>Valida\u021bi permisiunile pentru fiecare opera\u021bie</li> <li>Sanitiza\u021bi numele fi\u0219ierelor afi\u0219ate</li> <li>Verifica\u021bi tipul MIME real al fi\u0219ierelor</li> <li>Implementa\u021bi rate limiting pentru desc\u0103rc\u0103ri</li> </ul>"},{"location":"fod/componente/FileList/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FileList/#fisierele-nu-se-afiseaza","title":"Fi\u0219ierele nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Model con\u021bine date valide</li> <li>Verifica\u021bi c\u0103 IFileUploadService este \u00eenregistrat</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FileList/#preview-nu-functioneaza","title":"Preview nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FodFileView este disponibil</li> <li>Verifica\u021bi suportul browser pentru tipul de fi\u0219ier</li> <li>Verifica\u021bi dimensiunea maxim\u0103 pentru preview</li> </ul>"},{"location":"fod/componente/FileList/#13-extensibilitate","title":"13. Extensibilitate","text":"<pre><code>@* FileListExtended.razor - Component\u0103 extins\u0103 *@\n@inherits FileList\n\n&lt;div class=\"file-list-extended\"&gt;\n    @base.BuildRenderTree(__builder)\n\n    @if (ShowStatistics)\n    {\n        &lt;div class=\"file-statistics\"&gt;\n            &lt;FodText&gt;Total: @Model.Count() fi\u0219iere&lt;/FodText&gt;\n            &lt;FodText&gt;Dimensiune: @FormatTotalSize()&lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    [Parameter] public bool ShowStatistics { get; set; }\n\n    private string FormatTotalSize()\n    {\n        var totalBytes = Model.Sum(f =&gt; f.FileSize);\n        // Format logic\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileList/#14-concluzie","title":"14. Concluzie","text":"<p><code>FileList</code> ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea listelor de fi\u0219iere \u00een aplica\u021bii Blazor. Cu func\u021bionalit\u0103\u021bi de preview, \u0219tergere \u0219i integrare str\u00e2ns\u0103 cu serviciile de fi\u0219iere, componenta simplific\u0103 dezvoltarea interfe\u021belor de management al documentelor.</p>"},{"location":"fod/componente/FileViewer/","title":"FileViewer","text":""},{"location":"fod/componente/FileViewer/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FileViewer</code> ofer\u0103 o interfa\u021b\u0103 simpl\u0103 pentru afi\u0219area \u0219i previzualizarea fi\u0219ierelor \u00eenc\u0103rcate. Afi\u0219eaz\u0103 numele fi\u0219ierului \u00eempreun\u0103 cu un buton de previzualizare care deschide fi\u0219ierul \u00eentr-o component\u0103 <code>FodFileView</code> pentru vizualizare detaliat\u0103.</p>"},{"location":"fod/componente/FileViewer/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FileViewer/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FileViewer Model=\"@uploadedFile\" /&gt;\n\n@code {\n    private FodUploadedFileModel uploadedFile = new()\n    {\n        Id = Guid.NewGuid(),\n        FileName = \"document.pdf\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#mod-doar-vizualizare","title":"Mod doar vizualizare","text":"<pre><code>&lt;FileViewer Model=\"@fileModel\" ViewOnly=\"true\" /&gt;\n\n@code {\n    private FodUploadedFileModel fileModel = new()\n    {\n        Id = Guid.Parse(\"123e4567-e89b-12d3-a456-426614174000\"),\n        FileName = \"raport-anual-2024.xlsx\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#in-lista-de-fisiere","title":"\u00cen list\u0103 de fi\u0219iere","text":"<pre><code>@foreach (var file in uploadedFiles)\n{\n    &lt;div class=\"file-item mb-2\"&gt;\n        &lt;FileViewer Model=\"@file\" /&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private List&lt;FodUploadedFileModel&gt; uploadedFiles = new();\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#cu-stilizare-personalizata","title":"Cu stilizare personalizat\u0103","text":"<pre><code>&lt;div class=\"custom-file-viewer\"&gt;\n    &lt;FileViewer Model=\"@document\" /&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n    .custom-file-viewer {\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        padding: 1rem;\n        background-color: #f9f9f9;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FileViewer/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model FodUploadedFileModel - Modelul cu informa\u021biile fi\u0219ierului (obligatoriu) ViewOnly bool false Activeaz\u0103 modul doar pentru vizualizare"},{"location":"fod/componente/FileViewer/#proprietati-foduploadedfilemodel","title":"Propriet\u0103\u021bi FodUploadedFileModel","text":"Proprietate Tip Descriere Id Guid? Identificatorul unic al fi\u0219ierului FileName string Numele fi\u0219ierului pentru afi\u0219are"},{"location":"fod/componente/FileViewer/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice.</p>"},{"location":"fod/componente/FileViewer/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice direct, dar gestioneaz\u0103 intern deschiderea previzualiz\u0103rii.</p>"},{"location":"fod/componente/FileViewer/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodFileView - Componenta pentru afi\u0219area efectiv\u0103 a con\u021binutului fi\u0219ierului</li> <li>FodButton - Butonul pentru declan\u0219area previzualiz\u0103rii</li> <li>FodUploadedFileModel - Modelul de date pentru fi\u0219ier</li> </ul>"},{"location":"fod/componente/FileViewer/#stilizare","title":"Stilizare","text":"<p>Componenta folose\u0219te clase Bootstrap pentru layout: - <code>.d-flex</code> - Container flexbox - <code>.mr-auto</code> - Margin dreapta auto pentru numele fi\u0219ierului - <code>.p-2</code> - Padding pentru elemente</p>"},{"location":"fod/componente/FileViewer/#structura-vizuala","title":"Structura vizual\u0103","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 document.pdf              [\ud83d\udc41\ufe0f]      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FileViewer/#personalizare","title":"Personalizare","text":"<pre><code>/* Container principal */\n.file-viewer-container {\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 0.5rem 1rem;\n    transition: background-color 0.3s;\n}\n\n.file-viewer-container:hover {\n    background-color: #f5f5f5;\n}\n\n/* Nume fi\u0219ier */\n.file-viewer-container label {\n    margin: 0;\n    font-weight: 500;\n    color: #333;\n}\n\n/* Buton preview */\n.file-viewer-container .fod-button {\n    padding: 0.25rem 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>FodFileView referin\u021b\u0103 - Componenta p\u0103streaz\u0103 o referin\u021b\u0103 intern\u0103 la FodFileView</li> <li>ID obligatoriu - Fi\u0219ierul trebuie s\u0103 aib\u0103 un ID valid pentru previzualizare</li> <li>ViewOnly neimplementat - Parametrul ViewOnly este definit dar nu afecteaz\u0103 comportamentul</li> <li>Bootstrap dependency - Folose\u0219te clase Bootstrap pentru layout</li> </ol>"},{"location":"fod/componente/FileViewer/#bune-practici","title":"Bune practici","text":"<ol> <li>Validare model - Verifica\u021bi c\u0103 Model \u0219i Model.Id nu sunt null</li> <li>Nume descriptive - Asigura\u021bi-v\u0103 c\u0103 FileName este descriptiv \u0219i include extensia</li> <li>Gestionare erori - Implementa\u021bi tratarea erorilor pentru fi\u0219iere lips\u0103</li> <li>Loading state - Considera\u021bi afi\u0219area unui indicator de \u00eenc\u0103rcare</li> <li>Tipuri suportate - Verifica\u021bi c\u0103 tipul fi\u0219ierului poate fi previzualizat</li> </ol>"},{"location":"fod/componente/FileViewer/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/FileViewer/#cu-validare-si-erori","title":"Cu validare \u0219i erori","text":"<pre><code>@if (file?.Id != null)\n{\n    &lt;FileViewer Model=\"@file\" /&gt;\n}\nelse\n{\n    &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n        Fi\u0219ierul nu poate fi previzualizat\n    &lt;/FodAlert&gt;\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#in-formular-cu-multiple-fisiere","title":"\u00cen formular cu multiple fi\u0219iere","text":"<pre><code>&lt;div class=\"uploaded-files-section\"&gt;\n    &lt;h5&gt;Documente \u00eenc\u0103rcate&lt;/h5&gt;\n\n    @if (!uploadedFiles.Any())\n    {\n        &lt;p class=\"text-muted\"&gt;Nu exist\u0103 documente \u00eenc\u0103rcate&lt;/p&gt;\n    }\n    else\n    {\n        @foreach (var file in uploadedFiles)\n        {\n            &lt;div class=\"file-row d-flex align-items-center mb-2\"&gt;\n                &lt;div class=\"flex-grow-1\"&gt;\n                    &lt;FileViewer Model=\"@file\" /&gt;\n                &lt;/div&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n                               Color=\"FodColor.Error\"\n                               OnClick=\"@(() =&gt; RemoveFile(file.Id))\" /&gt;\n            &lt;/div&gt;\n        }\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;FodUploadedFileModel&gt; uploadedFiles = new();\n\n    private void RemoveFile(Guid? fileId)\n    {\n        uploadedFiles.RemoveAll(f =&gt; f.Id == fileId);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#cu-informatii-aditionale","title":"Cu informa\u021bii adi\u021bionale","text":"<pre><code>&lt;div class=\"enhanced-file-viewer\"&gt;\n    &lt;div class=\"file-info\"&gt;\n        &lt;FileViewer Model=\"@fileWithMetadata\" /&gt;\n        &lt;small class=\"text-muted\"&gt;\n            \u00cenc\u0103rcat: @fileUploadDate.ToString(\"dd.MM.yyyy HH:mm\")\n            | Dimensiune: @FormatFileSize(fileSize)\n        &lt;/small&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string FormatFileSize(long bytes)\n    {\n        string[] sizes = { \"B\", \"KB\", \"MB\", \"GB\" };\n        int order = 0;\n        double size = bytes;\n\n        while (size &gt;= 1024 &amp;&amp; order &lt; sizes.Length - 1)\n        {\n            order++;\n            size /= 1024;\n        }\n\n        return $\"{size:0.##} {sizes[order]}\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FileViewer/#concluzie","title":"Concluzie","text":"<p>FileViewer ofer\u0103 o modalitate simpl\u0103 \u0219i eficient\u0103 de a afi\u0219a fi\u0219iere \u00eenc\u0103rcate cu op\u021biune de previzualizare. De\u0219i minimalist\u0103 \u00een design, componenta se integreaz\u0103 perfect cu FodFileView pentru a oferi func\u021bionalitate complet\u0103 de vizualizare a documentelor \u00een aplica\u021bii.</p>"},{"location":"fod/componente/FodAlert/","title":"Alert","text":""},{"location":"fod/componente/FodAlert/#documentatie-pentru-componenta-fodalert","title":"Documenta\u021bie pentru componenta FodAlert","text":""},{"location":"fod/componente/FodAlert/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodAlert</code> este o component\u0103 folosit\u0103 pentru afi\u0219area mesajelor importante c\u0103tre utilizatori. Poate fi utilizat\u0103 pentru a comunica informa\u021bii, avertismente, erori sau mesaje de succes \u00eentr-un mod vizual distinct \u0219i accesibil.</p> <p>Componenta suport\u0103: - Multiple severit\u0103\u021bi (Error, Warning, Info, Success) - Variante de stil (Filled, Outlined, Text) - Pictograme personalizabile - Op\u021biune de \u00eenchidere - Con\u021binut personalizabil prin RenderFragment - Stiluri Dense \u0219i Square</p>"},{"location":"fod/componente/FodAlert/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodAlert/#alert-de-baza","title":"Alert de baz\u0103","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n    Acesta este un mesaj informativ pentru utilizator.\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alerte-cu-diferite-severitati","title":"Alerte cu diferite severit\u0103\u021bi","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n    Eroare: V\u0103 rug\u0103m s\u0103 verifica\u021bi datele introduse.\n&lt;/FodAlert&gt;\n\n&lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n    Aten\u021bie: Aceast\u0103 ac\u021biune nu poate fi anulat\u0103.\n&lt;/FodAlert&gt;\n\n&lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n    Informa\u021bie: Sistemul va fi \u00een mentenan\u021b\u0103 \u00eentre orele 22:00-24:00.\n&lt;/FodAlert&gt;\n\n&lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n    Succes: Datele au fost salvate cu succes!\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alerte-cu-diferite-variante","title":"Alerte cu diferite variante","text":"<pre><code>&lt;!-- Filled (implicit) --&gt;\n&lt;FodAlert Severity=\"FodSeverity.Error\" Variant=\"FodVariant.Filled\"&gt;\n    Alert cu fundal colorat\n&lt;/FodAlert&gt;\n\n&lt;!-- Outlined --&gt;\n&lt;FodAlert Severity=\"FodSeverity.Warning\" Variant=\"FodVariant.Outlined\"&gt;\n    Alert cu chenar colorat\n&lt;/FodAlert&gt;\n\n&lt;!-- Text --&gt;\n&lt;FodAlert Severity=\"FodSeverity.Info\" Variant=\"FodVariant.Text\"&gt;\n    Alert doar cu text colorat\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-care-poate-fi-inchis","title":"Alert care poate fi \u00eenchis","text":"<pre><code>@if (showAlert)\n{\n    &lt;FodAlert Severity=\"FodSeverity.Success\" OnClose=\"@(() =&gt; showAlert = false)\"&gt;\n        Mesaj de succes care poate fi \u00eenchis\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private bool showAlert = true;\n}\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-cu-pictograma-personalizata","title":"Alert cu pictogram\u0103 personalizat\u0103","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Info\" Icon=\"@FodIcons.Material.Filled.Notifications\"&gt;\n    Notificare: Ave\u021bi 5 mesaje necitite\n&lt;/FodAlert&gt;\n\n&lt;FodAlert Severity=\"FodSeverity.Warning\" Icon=\"@FodIcons.Material.Filled.Schedule\"&gt;\n    Termen limit\u0103: 24 ore r\u0103mase\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-fara-pictograma","title":"Alert f\u0103r\u0103 pictogram\u0103","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Info\" NoIcon=\"true\"&gt;\n    Alert simplu f\u0103r\u0103 pictogram\u0103\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-cu-stil-dens","title":"Alert cu stil dens","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Info\" Dense=\"true\"&gt;\n    Alert compact cu padding redus\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-cu-colturi-drepte","title":"Alert cu col\u021buri drepte","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Warning\" Square=\"true\"&gt;\n    Alert cu col\u021buri drepte (f\u0103r\u0103 border-radius)\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-cu-continut-complex","title":"Alert cu con\u021binut complex","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Error\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;AlertIcon&gt;&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" /&gt;&lt;/AlertIcon&gt;\n    &lt;FodText&gt;\n        &lt;strong&gt;Erori de validare:&lt;/strong&gt;\n        &lt;ul class=\"mb-0 mt-2\"&gt;\n            &lt;li&gt;C\u00e2mpul \"Nume\" este obligatoriu&lt;/li&gt;\n            &lt;li&gt;Adresa de email nu este valid\u0103&lt;/li&gt;\n            &lt;li&gt;Parola trebuie s\u0103 con\u021bin\u0103 minimum 8 caractere&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/FodText&gt;\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#alert-in-context-de-formular","title":"Alert \u00een context de formular","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    @if (!string.IsNullOrEmpty(errorMessage))\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Error\" Class=\"mb-3\" OnClose=\"@(() =&gt; errorMessage = null)\"&gt;\n            @errorMessage\n        &lt;/FodAlert&gt;\n    }\n\n    @if (submitSuccess)\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Success\" Class=\"mb-3\"&gt;\n            Formularul a fost trimis cu succes!\n        &lt;/FodAlert&gt;\n    }\n\n    &lt;!-- C\u00e2mpuri formular --&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private Model model = new();\n    private string? errorMessage;\n    private bool submitSuccess = false;\n\n    private async Task HandleSubmit()\n    {\n        try\n        {\n            // Procesare formular\n            submitSuccess = true;\n        }\n        catch (Exception ex)\n        {\n            errorMessage = ex.Message;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodAlert/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Severity</code> <code>FodSeverity</code> Severitatea alertei (Error, Warning, Info, Success) <code>FodSeverity.Info</code> <code>Variant</code> <code>FodVariant</code> Stilul alertei (Filled, Outlined, Text) <code>FodVariant.Filled</code> <code>Dense</code> <code>bool</code> Reduce padding-ul pentru o variant\u0103 mai compact\u0103 <code>false</code> <code>Square</code> <code>bool</code> Elimin\u0103 border-radius pentru col\u021buri drepte <code>false</code> <code>NoIcon</code> <code>bool</code> Ascunde pictograma implicit\u0103 <code>false</code> <code>Icon</code> <code>string</code> Pictogram\u0103 personalizat\u0103 Bazat\u0103 pe severitate <code>ShowCloseIcon</code> <code>bool</code> Afi\u0219eaz\u0103 pictograma de \u00eenchidere c\u00e2nd OnClose este setat <code>true</code> <code>CloseIcon</code> <code>string</code> Pictogram\u0103 personalizat\u0103 pentru \u00eenchidere Icon implicit <code>OnClose</code> <code>EventCallback&lt;FodAlert&gt;</code> Eveniment declan\u0219at la \u00eenchiderea alertei - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul alertei - <code>AlertIcon</code> <code>RenderFragment</code> Con\u021binut personalizat pentru zona pictogramei - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri CSS inline <code>null</code>"},{"location":"fod/componente/FodAlert/#3-pictograme-implicite-per-severitate","title":"3. Pictograme implicite per severitate","text":"Severitate Pictogram\u0103 implicit\u0103 Error FodIcons.Material.Filled.ErrorOutline Warning FodIcons.Material.Outlined.ReportProblemOutlined Info FodIcons.Material.Outlined.InfoOutlined Success FodIcons.Material.Outlined.CheckCircleOutline"},{"location":"fod/componente/FodAlert/#4-culori-per-severitate","title":"4. Culori per severitate","text":"<p>Culorile sunt determinate automat \u00een func\u021bie de severitate: - Error: Ro\u0219u - Warning: Portocaliu - Info: Albastru - Success: Verde</p>"},{"location":"fod/componente/FodAlert/#5-cazuri-de-utilizare","title":"5. Cazuri de utilizare","text":""},{"location":"fod/componente/FodAlert/#feedback-dupa-actiuni","title":"Feedback dup\u0103 ac\u021biuni","text":"<pre><code>@if (actionCompleted)\n{\n    &lt;FodAlert Severity=\"FodSeverity.Success\" OnClose=\"@(() =&gt; actionCompleted = false)\"&gt;\n        Ac\u021biunea a fost completat\u0103 cu succes!\n    &lt;/FodAlert&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodAlert/#mesaje-de-sistem","title":"Mesaje de sistem","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Warning\" Icon=\"@FodIcons.Material.Filled.Update\"&gt;\n    Sistemul va fi actualizat \u00een cur\u00e2nd. V\u0103 rug\u0103m s\u0103 salva\u021bi lucrul \u00een curs.\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodAlert/#validare-formular","title":"Validare formular","text":"<pre><code>@if (validationErrors.Any())\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n        &lt;FodText&gt;\n            V\u0103 rug\u0103m s\u0103 corecta\u021bi urm\u0103toarele erori:\n            @foreach (var error in validationErrors)\n            {\n                &lt;br /&gt;\u2022 @error\n            }\n        &lt;/FodText&gt;\n    &lt;/FodAlert&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodAlert/#6-integrare-cu-notificari-temporare","title":"6. Integrare cu notific\u0103ri temporare","text":"<pre><code>@if (notifications.Any())\n{\n    &lt;div class=\"notifications-container\"&gt;\n        @foreach (var notification in notifications)\n        {\n            &lt;FodAlert \n                Severity=\"@notification.Severity\" \n                Class=\"mb-2\"\n                OnClose=\"@(() =&gt; RemoveNotification(notification))\"&gt;\n                @notification.Message\n            &lt;/FodAlert&gt;\n        }\n    &lt;/div&gt;\n}\n\n@code {\n    private List&lt;Notification&gt; notifications = new();\n\n    public class Notification\n    {\n        public string Message { get; set; }\n        public FodSeverity Severity { get; set; }\n        public DateTime CreatedAt { get; set; }\n    }\n\n    private void AddNotification(string message, FodSeverity severity)\n    {\n        var notification = new Notification \n        { \n            Message = message, \n            Severity = severity,\n            CreatedAt = DateTime.Now\n        };\n\n        notifications.Add(notification);\n\n        // Auto-remove dup\u0103 5 secunde\n        Task.Delay(5000).ContinueWith(_ =&gt; \n        {\n            InvokeAsync(() =&gt; \n            {\n                RemoveNotification(notification);\n                StateHasChanged();\n            });\n        });\n    }\n\n    private void RemoveNotification(Notification notification)\n    {\n        notifications.Remove(notification);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodAlert/#7-note-si-observatii","title":"7. Note \u0219i observa\u021bii","text":"<ul> <li>Alertele sunt elemente statice, pentru notific\u0103ri temporare considera\u021bi folosirea FodNotificationProvider</li> <li>Pictograma de \u00eenchidere apare automat c\u00e2nd OnClose este setat</li> <li>Pentru accesibilitate, alertele folosesc atribute ARIA corespunz\u0103toare</li> <li>Stilul Dense este util \u00een spa\u021bii limitate sau pentru liste de alerte</li> </ul>"},{"location":"fod/componente/FodAlert/#8-bune-practici","title":"8. Bune practici","text":"<ol> <li>Folosi\u021bi severitatea corect\u0103 pentru context</li> <li>P\u0103stra\u021bi mesajele concise \u0219i clare</li> <li>Oferi\u021bi op\u021biunea de \u00eenchidere pentru alerte non-critice</li> <li>Pozi\u021biona\u021bi alertele vizibil la \u00eenceputul formularelor sau sec\u021biunilor</li> <li>Folosi\u021bi pictograme relevante pentru context suplimentar</li> <li>Evita\u021bi supra\u00eenc\u0103rcarea cu prea multe alerte simultane</li> </ol>"},{"location":"fod/componente/FodAlert/#9-concluzie","title":"9. Concluzie","text":"<p><code>FodAlert</code> este o component\u0103 esen\u021bial\u0103 pentru comunicarea cu utilizatorii, oferind flexibilitate \u00een prezentarea diferitelor tipuri de mesaje \u00eentr-un mod consistent \u0219i accesibil \u00een aplica\u021biile Blazor.</p>"},{"location":"fod/componente/FodApostila/","title":"FodApostila","text":""},{"location":"fod/componente/FodApostila/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodApostila</code> permite utilizatorilor s\u0103 solicite apostilarea documentelor emise de autorit\u0103\u021bile publice din Republica Moldova. Apostila este o certificare special\u0103 care valideaz\u0103 autenticitatea documentelor publice pentru utilizare interna\u021bional\u0103, conform Conven\u021biei de la Haga din 1961.</p> <p>Componenta ofer\u0103 o interfa\u021b\u0103 complet\u0103 pentru: - Selectarea \u021b\u0103rii de destina\u021bie - Alegerea termenului de execu\u021bie - Calcularea automat\u0103 a datei estimate de finalizare - Integrare cu servicii de solicitare documente</p>"},{"location":"fod/componente/FodApostila/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodApostila/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodApostila Model=\"@apostilaModel\" \n             Options=\"@apostilaOptions\"\n             ServiceRequests=\"@serviceRequests\" /&gt;\n\n@code {\n    private FodApostilaModel apostilaModel = new();\n    private FodApostilaOptionsModel apostilaOptions;\n    private List&lt;FodServiceRequestModel&gt; serviceRequests = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cenc\u0103rcarea op\u021biunilor disponibile\n        apostilaOptions = await LoadApostilaOptions();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApostila/#integrare-cu-wizard","title":"Integrare cu wizard","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Title=\"Apostilare\"&gt;\n        &lt;FodApostila Model=\"@apostilaModel\" \n                     Options=\"@apostilaOptions\"\n                     ServiceRequests=\"@serviceRequests\"\n                     RequestorType=\"PersonType.Physical\"\n                     MainServiceRequestsEstimatedResolveDate=\"@mainRequestDate\"\n                     OnExecutionTermChanged=\"@HandleExecutionTermChange\" /&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private DateTime? mainRequestDate = DateTime.Now.AddDays(5);\n\n    private void HandleExecutionTermChange()\n    {\n        // Actualizare costuri sau alte ac\u021biuni\n        Console.WriteLine(\"Termen de execu\u021bie modificat\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApostila/#exemplu-cu-cascading-values","title":"Exemplu cu cascading values","text":"<pre><code>&lt;CascadingValue Value=\"@apostilaOptions\"&gt;\n    &lt;CascadingValue Value=\"PersonType.Legal\"&gt;\n        &lt;FodApostila Model=\"@apostilaModel\" \n                     ServiceRequests=\"@serviceRequests\" /&gt;\n    &lt;/CascadingValue&gt;\n&lt;/CascadingValue&gt;\n</code></pre>"},{"location":"fod/componente/FodApostila/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model FodApostilaModel - Modelul de date pentru solicitarea de apostilare (obligatoriu) Options FodApostilaOptionsModel - Op\u021biunile disponibile (\u021b\u0103ri, termene) - poate fi \u0219i CascadingParameter ServiceRequests IEnumerable - Lista documentelor care pot fi apostilate RequestorType PersonType - Tipul solicitantului (Fizic/Juridic) - poate fi \u0219i CascadingParameter WizardStep FodWizardStep - Referin\u021b\u0103 la pasul de wizard pentru validare (CascadingParameter) MainServiceRequestsEstimatedResolveDate DateTime? DateTime.Now Data estimat\u0103 pentru finalizarea serviciilor principale"},{"location":"fod/componente/FodApostila/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere OnExecutionTermChanged EventCallback Declan\u0219at c\u00e2nd se modific\u0103 termenul de execu\u021bie"},{"location":"fod/componente/FodApostila/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodApostila/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodApostilaDisplay - Pentru afi\u0219area detaliilor unei solicit\u0103ri de apostilare existente</li> <li>FodCheckBox2 - Pentru selectarea op\u021biunii de apostilare</li> <li>FODInputSelect - Pentru selectarea \u021b\u0103rii \u0219i termenului</li> <li>FodAlert - Pentru afi\u0219area mesajelor de eroare/avertizare</li> <li>FodList/FodListItem - Pentru afi\u0219area listei de documente</li> </ul>"},{"location":"fod/componente/FodApostila/#stilizare","title":"Stilizare","text":"<p>Componenta folose\u0219te stilurile Bootstrap standard pentru layout (row, col-md-12) \u0219i stilurile componentelor FOD \u00eencapsulate.</p>"},{"location":"fod/componente/FodApostila/#personalizare","title":"Personalizare","text":"<pre><code>/* Ajustarea spa\u021bierii pentru checkbox */\n.fod-apostila .fod-checkbox {\n    margin-left: 5px;\n}\n\n/* Stilizare pentru lista de documente */\n.fod-apostila .fod-list {\n    margin-top: 1rem;\n}\n</code></pre>"},{"location":"fod/componente/FodApostila/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Serviciu obligatoriu - Necesit\u0103 injectarea <code>IApostilaComponentService</code> pentru calculul datelor</li> <li>Validare automat\u0103 - Se integreaz\u0103 cu EditContext pentru validare \u00een wizard</li> <li>Calcul asincron - Calculul datei estimate se face asincron cu indicator de \u00eenc\u0103rcare</li> <li>Disponibilitate condi\u021bionat\u0103 - Afi\u0219eaz\u0103 mesaj de eroare dac\u0103 apostilarea nu este disponibil\u0103</li> <li>Actualizare dinamic\u0103 - Termenele de execu\u021bie se filtreaz\u0103 dup\u0103 tipul solicitantului</li> </ol>"},{"location":"fod/componente/FodApostila/#bune-practici","title":"Bune practici","text":"<ol> <li>\u00cenc\u0103rcare op\u021biuni - \u00cenc\u0103rca\u021bi <code>FodApostilaOptionsModel</code> \u00eenainte de randarea componentei</li> <li>Gestionare erori - Trata\u021bi cazurile c\u00e2nd Options sau Model sunt null</li> <li>Tip solicitant - Specifica\u021bi <code>RequestorType</code> pentru filtrare corect\u0103 a termenelor</li> <li>Date estimate - Furniza\u021bi <code>MainServiceRequestsEstimatedResolveDate</code> pentru calcul precis</li> <li>Validare - Integra\u021bi cu FodWizardStep pentru validare automat\u0103 \u00een flow-uri complexe</li> </ol>"},{"location":"fod/componente/FodApostila/#concluzie","title":"Concluzie","text":"<p>Componenta FodApostila ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea solicit\u0103rilor de apostilare \u00een aplica\u021biile guvernamentale. Cu suport pentru calcul automat al termenelor, integrare cu wizard-uri \u0219i validare automat\u0103, faciliteaz\u0103 procesul de apostilare pentru utilizatori.</p>"},{"location":"fod/componente/FodApostilaDisplay/","title":"FodApostilaDisplay","text":""},{"location":"fod/componente/FodApostilaDisplay/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodApostilaDisplay</code> este utilizat\u0103 pentru afi\u0219area detaliilor unei solicit\u0103ri de apostilare existente. Spre deosebire de <code>FodApostila</code> care permite crearea/editarea unei solicit\u0103ri, aceast\u0103 component\u0103 este optimizat\u0103 pentru vizualizarea informa\u021biilor \u00eentr-un format read-only, elegant \u0219i structurat.</p> <p>Componenta afi\u0219eaz\u0103 toate detaliile relevante despre apostilare \u00eentr-un card formatat, incluz\u00e2nd \u021bara de destina\u021bie, termenul de execu\u021bie \u0219i data estimat\u0103 de finalizare.</p>"},{"location":"fod/componente/FodApostilaDisplay/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodApostilaDisplay/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodApostilaDisplay Model=\"@apostilaModel\" /&gt;\n\n@code {\n    private FodApostilaModel apostilaModel = new()\n    {\n        RequiresApostilation = true,\n        Country = new FodApostilaCountryModel { Name = \"Germania\" },\n        ExecutionTerm = new FodApostilaExecutionTermModel { Text = \"Standard (5 zile)\" },\n        EstimateResolveDate = DateTime.Now.AddDays(5)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#afisare-conditionata","title":"Afi\u0219are condi\u021bionat\u0103","text":"<pre><code>@if (requestDetails?.ApostilaInfo != null)\n{\n    &lt;FodApostilaDisplay Model=\"@requestDetails.ApostilaInfo\" /&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#integrare-in-pagina-de-detalii","title":"Integrare \u00een pagin\u0103 de detalii","text":"<pre><code>&lt;div class=\"request-details\"&gt;\n    &lt;h3&gt;Detalii solicitare&lt;/h3&gt;\n\n    &lt;!-- Alte informa\u021bii despre solicitare --&gt;\n    &lt;FodRequestorDisplay Model=\"@requestor\" /&gt;\n\n    &lt;!-- Informa\u021bii apostilare --&gt;\n    @if (hasApostilation)\n    {\n        &lt;FodApostilaDisplay Model=\"@apostilaInfo\" /&gt;\n    }\n\n    &lt;!-- Status solicitare --&gt;\n    &lt;FodRequestStatus Status=\"@requestStatus\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#exemplu-fara-apostilare","title":"Exemplu f\u0103r\u0103 apostilare","text":"<pre><code>&lt;FodApostilaDisplay Model=\"@noApostilaModel\" /&gt;\n\n@code {\n    private FodApostilaModel noApostilaModel = new()\n    {\n        RequiresApostilation = false\n    };\n    // Va afi\u0219a doar \"Necesit\u0103 apostilare: Nu\"\n}\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model FodApostilaModel - Modelul cu datele de apostilare de afi\u0219at (obligatoriu)"},{"location":"fod/componente/FodApostilaDisplay/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente.</p>"},{"location":"fod/componente/FodApostilaDisplay/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodApostilaDisplay/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodCardWrapper - Wrapper pentru afi\u0219area \u00eentr-un card cu titlu \u0219i iconi\u021b\u0103</li> <li>FodDisplay - Component generic pentru afi\u0219area c\u00e2mpurilor</li> <li>FodAlert - Pentru afi\u0219area notei despre actualizarea termenelor</li> </ul>"},{"location":"fod/componente/FodApostilaDisplay/#stilizare","title":"Stilizare","text":"<p>Componenta folose\u0219te stilurile standard ale componentelor FOD \u0219i Bootstrap pentru layout.</p>"},{"location":"fod/componente/FodApostilaDisplay/#structura-vizuala","title":"Structura vizual\u0103","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\udccb Solicitare apostilare           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Necesit\u0103 apostilare: Da            \u2502\n\u2502 \u021aara: Germania                      \u2502\n\u2502 Termen execu\u021bie: Standard (5 zile)  \u2502\n\u2502 Data estimat\u0103: 15.01.2024           \u2502\n\u2502                                     \u2502\n\u2502 \u26a0\ufe0f Not\u0103 despre termene...          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#personalizare","title":"Personalizare","text":"<pre><code>/* Modificarea aspectului cardului */\n.fod-card-wrapper {\n    margin-bottom: 1.5rem;\n}\n\n/* Stilizare pentru definition list */\n.fod-apostila-display dl.row {\n    margin-bottom: 0.5rem;\n}\n\n/* Ajustarea alertei de avertizare */\n.fod-apostila-display .fod-alert-warning {\n    margin-top: 1rem;\n    font-size: 0.9rem;\n}\n</code></pre>"},{"location":"fod/componente/FodApostilaDisplay/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Read-only - Componenta este doar pentru vizualizare, nu permite editare</li> <li>Afi\u0219are condi\u021bionat\u0103 - Afi\u0219eaz\u0103 doar c\u00e2mpurile relevante c\u00e2nd apostilarea este activ\u0103</li> <li>Localizare - Toate textele sunt localizate prin <code>IStringLocalizer&lt;FodSharedResources&gt;</code></li> <li>Card wrapper - Include automat titlu \u0219i iconi\u021b\u0103 specific\u0103</li> <li>Avertizare dinamic\u0103 - Nota despre termene apare doar c\u00e2nd apostilarea este activ\u0103</li> </ol>"},{"location":"fod/componente/FodApostilaDisplay/#bune-practici","title":"Bune practici","text":"<ol> <li>Verificare model - Verifica\u021bi c\u0103 Model nu este null \u00eenainte de utilizare</li> <li>Date complete - Asigura\u021bi-v\u0103 c\u0103 modelul con\u021bine toate informa\u021biile necesare</li> <li>Context vizual - Folosi\u021bi \u00een combina\u021bie cu alte componente Display pentru context complet</li> <li>Spa\u021biere - L\u0103sa\u021bi spa\u021biu adecvat \u00eentre componente pentru claritate vizual\u0103</li> </ol>"},{"location":"fod/componente/FodApostilaDisplay/#concluzie","title":"Concluzie","text":"<p>FodApostilaDisplay ofer\u0103 o modalitate elegant\u0103 \u0219i consistent\u0103 de a afi\u0219a informa\u021biile despre apostilare. Cu formatare automat\u0103, localizare complet\u0103 \u0219i design responsive, componenta se integreaz\u0103 perfect \u00een paginile de detalii ale solicit\u0103rilor.</p>"},{"location":"fod/componente/FodApplicationModelLoader/","title":"FodApplicationModelLoader","text":""},{"location":"fod/componente/FodApplicationModelLoader/#documentatie-pentru-componenta-fodapplicationmodelloader","title":"Documenta\u021bie pentru componenta FodApplicationModelLoader","text":""},{"location":"fod/componente/FodApplicationModelLoader/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodApplicationModelLoader</code> este o component\u0103 wrapper care \u00eencarc\u0103 modelul aplica\u021biei \u0219i seteaz\u0103 cultura/localizarea \u00eenainte de a randa con\u021binutul aplica\u021biei. Componenta asigur\u0103 c\u0103 toate datele necesare aplica\u021biei sunt disponibile \u0219i c\u0103 localizarea este configurat\u0103 corect.</p> <p>Caracteristici principale: - \u00cenc\u0103rcare asincron\u0103 a modelului aplica\u021biei - Configurare automat\u0103 a culturii/limbii - Afi\u0219are loading \u00een timpul \u00eenc\u0103rc\u0103rii - Propagare model prin CascadingValue - Verificare \u0219i fallback pentru localizare - Suport pentru multiple limbi - Integrare cu ICultureService</p>"},{"location":"fod/componente/FodApplicationModelLoader/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodApplicationModelLoader/#incarcare-simpla-a-aplicatiei","title":"\u00cenc\u0103rcare simpl\u0103 a aplica\u021biei","text":"<pre><code>&lt;FodApplicationModelLoader&gt;\n    &lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n        &lt;Found Context=\"routeData\"&gt;\n            &lt;RouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(MainLayout)\" /&gt;\n        &lt;/Found&gt;\n        &lt;NotFound&gt;\n            &lt;PageTitle&gt;Not found&lt;/PageTitle&gt;\n            &lt;LayoutView Layout=\"@typeof(MainLayout)\"&gt;\n                &lt;p role=\"alert\"&gt;Pagina nu a fost g\u0103sit\u0103.&lt;/p&gt;\n            &lt;/LayoutView&gt;\n        &lt;/NotFound&gt;\n    &lt;/Router&gt;\n&lt;/FodApplicationModelLoader&gt;\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#utilizare-in-apprazor","title":"Utilizare \u00een App.razor","text":"<pre><code>@* App.razor *@\n&lt;FodApplicationModelLoader&gt;\n    &lt;CascadingAuthenticationState&gt;\n        &lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n            &lt;Found Context=\"routeData\"&gt;\n                &lt;AuthorizeRouteView RouteData=\"@routeData\" \n                                    DefaultLayout=\"@typeof(MainLayout)\"&gt;\n                    &lt;NotAuthorized&gt;\n                        &lt;RedirectToLogin /&gt;\n                    &lt;/NotAuthorized&gt;\n                &lt;/AuthorizeRouteView&gt;\n            &lt;/Found&gt;\n            &lt;NotFound&gt;\n                &lt;LayoutView Layout=\"@typeof(MainLayout)\"&gt;\n                    &lt;FodNotFound /&gt;\n                &lt;/LayoutView&gt;\n            &lt;/NotFound&gt;\n        &lt;/Router&gt;\n    &lt;/CascadingAuthenticationState&gt;\n&lt;/FodApplicationModelLoader&gt;\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul aplica\u021biei de randat dup\u0103 \u00eenc\u0103rcare -"},{"location":"fod/componente/FodApplicationModelLoader/#4-proprietati-interne","title":"4. Propriet\u0103\u021bi Interne","text":"Proprietate Tip Descriere <code>ApplicationModel</code> <code>ApplicationModel</code> Modelul aplica\u021biei \u00eenc\u0103rcat <code>IsLoading</code> <code>bool</code> Indic\u0103 dac\u0103 \u00eenc\u0103rcarea este \u00een progres <code>LoadingText</code> <code>string</code> Textul afi\u0219at \u00een timpul \u00eenc\u0103rc\u0103rii"},{"location":"fod/componente/FodApplicationModelLoader/#5-applicationmodel","title":"5. ApplicationModel","text":"<p>Modelul aplica\u021biei con\u021bine: <pre><code>public class ApplicationModel\n{\n    public string Name { get; set; }\n    public string OrganizationLogo { get; set; }\n    public List&lt;LanguageModel&gt; Languages { get; set; }\n    public List&lt;UserContext&gt; UserContexts { get; set; }\n}\n</code></pre></p>"},{"location":"fod/componente/FodApplicationModelLoader/#6-exemple-avansate","title":"6. Exemple Avansate","text":""},{"location":"fod/componente/FodApplicationModelLoader/#configurare-cu-servicii-personalizate","title":"Configurare cu servicii personalizate","text":"<pre><code>@* Program.cs *@\nbuilder.Services.AddScoped&lt;IApplicationModelLoader, CustomApplicationLoader&gt;();\nbuilder.Services.AddScoped&lt;ICultureService, CultureService&gt;();\n\n@* CustomApplicationLoader.cs *@\npublic class CustomApplicationLoader : IApplicationModelLoader\n{\n    private readonly HttpClient _httpClient;\n\n    public CustomApplicationLoader(HttpClient httpClient)\n    {\n        _httpClient = httpClient;\n    }\n\n    public async Task&lt;ApplicationModel&gt; Load()\n    {\n        // \u00cencarc\u0103 configura\u021bia aplica\u021biei din API\n        var config = await _httpClient.GetFromJsonAsync&lt;ApplicationConfig&gt;(\"/api/config\");\n\n        return new ApplicationModel\n        {\n            Name = config.ApplicationName,\n            OrganizationLogo = config.LogoUrl,\n            Languages = config.SupportedLanguages.Select(l =&gt; new LanguageModel\n            {\n                Iso2 = l.Code,\n                Name = l.Name,\n                IsDefault = l.IsDefault\n            }).ToList(),\n            UserContexts = await LoadUserContexts()\n        };\n    }\n\n    private async Task&lt;List&lt;UserContext&gt;&gt; LoadUserContexts()\n    {\n        // \u00cencarc\u0103 contextele utilizatorului\n        return await _httpClient.GetFromJsonAsync&lt;List&lt;UserContext&gt;&gt;(\"/api/user/contexts\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#accesare-applicationmodel-in-componente","title":"Accesare ApplicationModel \u00een componente","text":"<pre><code>@* \u00cen orice component\u0103 copil *@\n\n&lt;h3&gt;Aplica\u021bie: @AppModel?.Name&lt;/h3&gt;\n\n@if (AppModel?.OrganizationLogo != null)\n{\n    &lt;img src=\"@AppModel.OrganizationLogo\" alt=\"Logo organiza\u021bie\" /&gt;\n}\n\n&lt;FodSelect @bind-Value=\"selectedLanguage\" Label=\"Limb\u0103\"&gt;\n    @foreach (var lang in AppModel?.Languages ?? new())\n    {\n        &lt;FodSelectItem Value=\"@lang.Iso2\"&gt;@lang.Name&lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    [CascadingParameter(Name = \"ApplicationModel\")]\n    public ApplicationModel AppModel { get; set; }\n\n    private string selectedLanguage = \"ro\";\n\n    protected override void OnInitialized()\n    {\n        // Seteaz\u0103 limba implicit\u0103\n        selectedLanguage = AppModel?.Languages?\n            .FirstOrDefault(l =&gt; l.IsDefault)?.Iso2 ?? \"ro\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#loader-personalizat-cu-tratare-erori","title":"Loader personalizat cu tratare erori","text":"<pre><code>@* ExtendedApplicationLoader.razor *@\n@inherits FodApplicationModelLoader\n\n&lt;FodApplicationModelLoader&gt;\n    @if (HasError)\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n            &lt;FodAlertTitle&gt;Eroare la \u00eenc\u0103rcarea aplica\u021biei&lt;/FodAlertTitle&gt;\n            @ErrorMessage\n            &lt;FodButton OnClick=\"RetryLoad\" Class=\"mt-2\"&gt;\n                Re\u00eencearc\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodAlert&gt;\n    }\n    else\n    {\n        @ChildContent\n    }\n&lt;/FodApplicationModelLoader&gt;\n\n@code {\n    private bool HasError { get; set; }\n    private string ErrorMessage { get; set; }\n\n    protected override async Task OnInitializedAsync()\n    {\n        try\n        {\n            await base.OnInitializedAsync();\n        }\n        catch (Exception ex)\n        {\n            HasError = true;\n            ErrorMessage = $\"Nu s-a putut \u00eenc\u0103rca configura\u021bia: {ex.Message}\";\n            StateHasChanged();\n        }\n    }\n\n    private async Task RetryLoad()\n    {\n        HasError = false;\n        await OnInitializedAsync();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#7-flux-de-incarcare","title":"7. Flux de \u00cenc\u0103rcare","text":"<ol> <li>Ini\u021bializare - Componenta porne\u0219te cu <code>IsLoading = true</code></li> <li>Afi\u0219are loading - Se afi\u0219eaz\u0103 <code>FodLoading</code> cu text localizat</li> <li>\u00cenc\u0103rcare model - Se apeleaz\u0103 <code>IApplicationModelLoader.Load()</code></li> <li>Verificare localizare - Se verific\u0103 \u0219i seteaz\u0103 cultura</li> <li>Randare con\u021binut - Se randeaz\u0103 <code>ChildContent</code> cu model disponibil</li> </ol>"},{"location":"fod/componente/FodApplicationModelLoader/#8-verificare-localizare","title":"8. Verificare Localizare","text":"<p>Logica de verificare a localiz\u0103rii: <pre><code>private void VerifyLocalization(ApplicationModel model)\n{\n    // 1. Verific\u0103 dac\u0103 exist\u0103 limbi definite\n    if (model?.Languages == null || !model.Languages.Any())\n    {\n        // Seteaz\u0103 implicit rom\u00e2n\u0103\n        _cultureService.SetCulture(new CultureInfo(\"ro\"));\n        return;\n    }\n\n    // 2. Ob\u021bine cultura curent\u0103\n    var currentCulture = CultureInfo.CurrentCulture;\n    var currentParentCulture = currentCulture.Parent.TwoLetterISOLanguageName.ToLower();\n    var currentTwoLetterIso = currentCulture.TwoLetterISOLanguageName.ToLower();\n\n    // 3. Verific\u0103 dac\u0103 cultura curent\u0103 este suportat\u0103\n    if (!model.Languages.Any(x =&gt; \n        x.Iso2.Equals(currentParentCulture, StringComparison.OrdinalIgnoreCase) ||\n        x.Iso2.Equals(currentTwoLetterIso, StringComparison.OrdinalIgnoreCase)))\n    {\n        // 4. Seteaz\u0103 prima limb\u0103 disponibil\u0103 sau rom\u00e2n\u0103 ca fallback\n        var languageCode = model.Languages.FirstOrDefault()?.Iso2 ?? \"ro\";\n        _cultureService.SetCulture(new CultureInfo(languageCode));\n    }\n}\n</code></pre></p>"},{"location":"fod/componente/FodApplicationModelLoader/#9-integrare-cu-servicii","title":"9. Integrare cu Servicii","text":""},{"location":"fod/componente/FodApplicationModelLoader/#iapplicationmodelloader-interface","title":"IApplicationModelLoader Interface","text":"<pre><code>public interface IApplicationModelLoader\n{\n    Task&lt;ApplicationModel&gt; Load();\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#implementare-server-side","title":"Implementare Server-Side","text":"<pre><code>public class ServerApplicationModelLoader : IApplicationModelLoader\n{\n    private readonly IConfiguration _configuration;\n    private readonly IDbContext _dbContext;\n\n    public async Task&lt;ApplicationModel&gt; Load()\n    {\n        var model = new ApplicationModel\n        {\n            Name = _configuration[\"Application:Name\"],\n            OrganizationLogo = _configuration[\"Application:LogoUrl\"]\n        };\n\n        // \u00cencarc\u0103 limbi din baza de date\n        model.Languages = await _dbContext.Languages\n            .Where(l =&gt; l.IsActive)\n            .Select(l =&gt; new LanguageModel\n            {\n                Iso2 = l.Code,\n                Name = l.Name,\n                IsDefault = l.IsDefault\n            })\n            .ToListAsync();\n\n        return model;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Pozi\u021bionare - Plasa\u021bi \u00een App.razor ca wrapper principal</li> <li>Caching - Cache-ui\u021bi ApplicationModel pentru performan\u021b\u0103</li> <li>Error handling - Implementa\u021bi tratare erori robust\u0103</li> <li>Fallback - Asigura\u021bi valori implicite pentru toate set\u0103rile</li> <li>Loading UX - Oferi\u021bi feedback clar \u00een timpul \u00eenc\u0103rc\u0103rii</li> <li>Culture persistence - Salva\u021bi preferin\u021ba de limb\u0103 a utilizatorului</li> </ol>"},{"location":"fod/componente/FodApplicationModelLoader/#11-scenarii-comune","title":"11. Scenarii Comune","text":""},{"location":"fod/componente/FodApplicationModelLoader/#multi-tenant-cu-configurare-diferita","title":"Multi-tenant cu configurare diferit\u0103","text":"<pre><code>public class TenantApplicationLoader : IApplicationModelLoader\n{\n    private readonly ITenantService _tenantService;\n\n    public async Task&lt;ApplicationModel&gt; Load()\n    {\n        var tenant = await _tenantService.GetCurrentTenant();\n\n        return new ApplicationModel\n        {\n            Name = tenant.ApplicationName,\n            OrganizationLogo = tenant.LogoUrl,\n            Languages = tenant.SupportedLanguages,\n            UserContexts = await LoadTenantContexts(tenant.Id)\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#loading-cu-progres-detaliat","title":"Loading cu progres detaliat","text":"<pre><code>&lt;FodApplicationModelLoader&gt;\n    &lt;LoadingContent&gt;\n        &lt;div class=\"loading-container\"&gt;\n            &lt;FodLoadingCircular /&gt;\n            &lt;FodText&gt;@LoadingStep&lt;/FodText&gt;\n            &lt;FodLoadingLinear Value=\"@LoadingProgress\" /&gt;\n        &lt;/div&gt;\n    &lt;/LoadingContent&gt;\n    &lt;ChildContent&gt;\n        @ChildContent\n    &lt;/ChildContent&gt;\n&lt;/FodApplicationModelLoader&gt;\n</code></pre>"},{"location":"fod/componente/FodApplicationModelLoader/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodApplicationModelLoader/#aplicatia-nu-se-incarca","title":"Aplica\u021bia nu se \u00eencarc\u0103","text":"<ul> <li>Verifica\u021bi serviciul IApplicationModelLoader</li> <li>Verifica\u021bi conexiunea la API/baz\u0103 de date</li> <li>Verifica\u021bi logurile pentru erori</li> </ul>"},{"location":"fod/componente/FodApplicationModelLoader/#cultura-nu-se-seteaza-corect","title":"Cultura nu se seteaz\u0103 corect","text":"<ul> <li>Verifica\u021bi lista de limbi \u00een ApplicationModel</li> <li>Verifica\u021bi implementarea ICultureService</li> <li>Verifica\u021bi suportul pentru cultura \u00een aplica\u021bie</li> </ul>"},{"location":"fod/componente/FodApplicationModelLoader/#loading-infinit","title":"Loading infinit","text":"<ul> <li>Verifica\u021bi c\u0103 Load() returneaz\u0103 un rezultat</li> <li>Verifica\u021bi c\u0103 IsLoading se seteaz\u0103 pe false</li> <li>Ad\u0103uga\u021bi timeout pentru \u00eenc\u0103rcare</li> </ul>"},{"location":"fod/componente/FodApplicationModelLoader/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodApplicationModelLoader</code> este componenta fundamental\u0103 pentru ini\u021bializarea aplica\u021biilor FOD, asigur\u00e2nd c\u0103 toate configur\u0103rile \u0219i datele necesare sunt disponibile \u00eenainte de randarea con\u021binutului. Cu suport pentru localizare automat\u0103 \u0219i propagare prin cascad\u0103, componenta simplific\u0103 semnificativ procesul de bootstrap al aplica\u021biei.</p>"},{"location":"fod/componente/FodBadge/","title":"Badge","text":""},{"location":"fod/componente/FodBadge/#documentatie-fodbadge","title":"Documenta\u021bie FodBadge","text":""},{"location":"fod/componente/FodBadge/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Componenta <code>FodBadge</code> este un element UI versatil utilizat pentru a suprapune sau a \u00eencadra un buton de ac\u021biune, o pictogram\u0103 sau alte elemente cu un badge de notificare simplu. Acesta este deosebit de util pentru a indica num\u0103rul de notific\u0103ri necitite, alerte sau al\u021bi indicatori importan\u021bi.</p>"},{"location":"fod/componente/FodBadge/#caracteristici","title":"Caracteristici","text":"<ul> <li>Suport\u0103 con\u021binut numeric \u0219i bazat pe text.</li> <li>Aspect configurabil cu teme de culoare \u0219i niveluri de eleva\u021bie.</li> <li>Poate afi\u0219a o pictogram\u0103 \u00een interiorul badge-ului.</li> <li>Suport\u0103 modul punct pentru notific\u0103ri minimaliste.</li> <li>Permite suprapunerea badge-urilor peste elementele copil.</li> <li>Stiluri op\u021bionale de bordur\u0103.</li> <li>Gestionarea evenimentelor de clic.</li> </ul>"},{"location":"fod/componente/FodBadge/#exemplu-de-utilizare","title":"Exemplu de Utilizare","text":"<pre><code>&lt;div Class=\"d-flex justify-space-around flex-wrap mt-4\"&gt;\n    &lt;FodBadge Content=\"3\" Overlap=\"true\" Class=\"mx-5 my-4\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Email\" Color=\"FodColor.Default\" /&gt;\n    &lt;/FodBadge&gt;\n    &lt;FodBadge Content=\"100\" Color=\"FodColor.Primary\" Overlap=\"true\" Class=\"mx-5 my-4\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Email\" Color=\"FodColor.Default\" /&gt;\n    &lt;/FodBadge&gt;\n    &lt;FodBadge Icon=\"@FodIcons.Material.Filled.Lock\" Color=\"FodColor.Error\" Overlap=\"true\" Bordered=\"true\" Class=\"mx-5 my-4\"&gt;\n        &lt;FodButton Color=\"FodColor.Error\" Variant=\"FodVariant.Filled\" DisableElevation=\"true\"&gt;Probleme de Securitate&lt;/FodButton&gt;\n    &lt;/FodBadge&gt;\n    &lt;FodBadge Dot=\"true\" Color=\"FodColor.Info\" Class=\"mx-5 my-4\"&gt;\n        &lt;FodText&gt;Raport\u0103ri de Bug-uri&lt;/FodText&gt;\n    &lt;/FodBadge&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodBadge/#parametri","title":"Parametri","text":"Parametru Tip Implicit Descriere <code>Origin</code> <code>Origin</code> <code>TopRight</code> Pozi\u021bia badge-ului. <code>Elevation</code> <code>int</code> <code>0</code> Specific\u0103 ad\u00e2ncimea umbrei pentru accent vizual. <code>Visible</code> <code>bool</code> <code>true</code> Determin\u0103 dac\u0103 badge-ul este afi\u0219at. <code>Color</code> <code>FodColor</code> <code>Default</code> Definirea culorii badge-ului. <code>Dot</code> <code>bool</code> <code>false</code> Dac\u0103 este activat, badge-ul \u00ee\u0219i reduce dimensiunea \u0219i ascunde con\u021binutul. <code>Overlap</code> <code>bool</code> <code>false</code> Dac\u0103 este activat, badge-ul se suprapune peste con\u021binutul copil. <code>Bordered</code> <code>bool</code> <code>false</code> Dac\u0103 este activat, aplic\u0103 o bordur\u0103 \u00een jurul badge-ului. <code>Icon</code> <code>string</code> <code>null</code> Afi\u0219eaz\u0103 o pictogram\u0103 \u00een interiorul badge-ului. <code>Max</code> <code>int</code> <code>99</code> Definirea valorii maxime afi\u0219abile c\u00e2nd con\u021binutul este un num\u0103r \u00eentreg. <code>Content</code> <code>object</code> <code>null</code> Con\u021binutul din interiorul badge-ului (string sau num\u0103r \u00eentreg). <code>BadgeClass</code> <code>string</code> <code>null</code> Clase CSS adi\u021bionale pentru personalizare. <code>ChildContent</code> <code>RenderFragment</code> <code>null</code> Con\u021binutul pe care badge-ul \u00eel \u00eencadreaz\u0103. <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> <code>null</code> Eveniment declan\u0219at la clic pe badge."},{"location":"fod/componente/FodBadge/#stilizare","title":"Stilizare","text":"<p>Componenta <code>FodBadge</code> utilizeaz\u0103 <code>CssBuilder</code> pentru a genera dinamic numele claselor CSS pe baza parametrilor furniza\u021bi. Mai jos sunt c\u00e2teva structuri de clas\u0103 cheie:</p> <ul> <li><code>.fod-badge-root</code> \u2013 Clasa de baz\u0103 pentru componenta badge.</li> <li><code>.fod-badge-wrapper</code> \u2013 Clasa de \u00eencadrare pentru pozi\u021bionarea badge-ului.</li> <li><code>.fod-badge</code> \u2013 Stilul principal al badge-ului.</li> <li><code>.fod-badge-dot</code> \u2013 Aplic\u0103 aspectul de punct.</li> <li><code>.fod-badge-bordered</code> \u2013 Activeaz\u0103 bordura \u00een jurul badge-ului.</li> <li><code>.fod-badge-icon</code> \u2013 Utilizat c\u00e2nd badge-ul con\u021bine o pictogram\u0103.</li> <li><code>.fod-elevation-{level}</code> \u2013 Aplic\u0103 efectul de eleva\u021bie (umbrire).</li> <li><code>.fod-theme-{color}</code> \u2013 Atribuie o tem\u0103 de culoare badge-ului.</li> <li><code>.fod-badge-overlap</code> \u2013 Aplic\u0103 stilul de suprapunere.</li> </ul>"},{"location":"fod/componente/FodBadge/#gestionarea-evenimentelor-de-clic","title":"Gestionarea Evenimentelor de Clic","text":"<p>Pentru a gestiona evenimentele de clic pe badge, utiliza\u021bi parametrul <code>OnClick</code>:</p> <pre><code>&lt;FodBadge Content=\"5\" OnClick=\"HandleBadgeClick\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Notifications\" /&gt;\n&lt;/FodBadge&gt;\n\n@code {\n    private void HandleBadgeClick(MouseEventArgs e)\n    {\n        Console.WriteLine(\"Badge ap\u0103sat!\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodBadge/#rezumat","title":"Rezumat","text":"<p>Componenta <code>FodBadge</code> este o modalitate flexibil\u0103 \u0219i atr\u0103g\u0103toare de a afi\u0219a notific\u0103ri, num\u0103r\u0103tori \u0219i alerte \u00een aplica\u021bia dvs. Suport\u0103 diverse op\u021biuni de personalizare, f\u0103c\u00e2nd-o adaptabil\u0103 pentru diferite modele UI \u0219i nevoi ale utilizatorilor.</p>"},{"location":"fod/componente/FodButton/","title":"Button","text":""},{"location":"fod/componente/FodButton/#documentatie-pentru-componenta-fodbutton","title":"Documenta\u021bie pentru componenta FodButton","text":""},{"location":"fod/componente/FodButton/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodButton</code> este o component\u0103 Blazor utilizat\u0103 pentru a crea butoane stilizate, care suport\u0103 diferite variante, culori, dimensiuni \u0219i comportamente interactive. Aceasta extinde componenta de baz\u0103 <code>FodBaseButton</code>, permi\u021b\u00e2nd personaliz\u0103ri suplimentare.</p> <p>Componenta suport\u0103: - Pictograme la \u00eenceput \u0219i la sf\u00e2r\u0219it - Culori \u0219i dimensiuni personalizabile - Op\u021biunea de a ocupa \u00eentreaga l\u0103\u021bime - Efect ripple (poate fi dezactivat) - Control asupra ridic\u0103rii (elevation)</p>"},{"location":"fod/componente/FodButton/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodButton/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<pre><code>&lt;FodButton Color=\"FodColor.Primary\" Size=\"FodSize.Large\" FullWidth=\"true\"&gt;\n    Click Me\n&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#filled-buttons","title":"Filled Buttons","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\"&gt;Default&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;Primary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Secondary\"&gt;Secondary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" Disabled=\"true\"&gt;Disabled&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#eliminarea-ridicarii-elevation","title":"Eliminarea ridic\u0103rii (Elevation)","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\" DisableElevation=\"true\" Color=\"FodColor.Primary\"&gt;F\u0103r\u0103 ridicare&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#text-buttons","title":"Text Buttons","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Text\"&gt;Default&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Text\" Color=\"FodColor.Primary\"&gt;Primary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Text\" Color=\"FodColor.Secondary\"&gt;Secondary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Text\" Disabled=\"true\"&gt;Disabled&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#outlined-buttons","title":"Outlined Buttons","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Outlined\"&gt;Default&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Outlined\" Color=\"FodColor.Primary\"&gt;Primary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Outlined\" Color=\"FodColor.Secondary\"&gt;Secondary&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Outlined\" Disabled=\"true\"&gt;Disabled&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#fullwidth","title":"FullWidth","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" FullWidth=\"true\"&gt;Full Width Button&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#icons-si-etichete","title":"Icons \u0219i etichete","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\" StartIcon=\"@FodIcons.Material.Filled.Delete\" Color=\"FodColor.Error\"&gt;Delete&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" EndIcon=\"@FodIcons.Material.Filled.Send\" Color=\"FodColor.Primary\"&gt;Send&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" StartIcon=\"@FodIcons.Custom.Uncategorized.Radioactive\" Color=\"FodColor.Warning\"&gt;Warning&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" StartIcon=\"@FodIcons.Material.Filled.Mic\" Disabled=\"true\"&gt;Talk&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" StartIcon=\"@FodIcons.Material.Filled.Save\" Color=\"FodColor.Info\"  Size=\"FodSize.Small\"&gt;Save&lt;/FodButton&gt;\n&lt;FodButton Variant=\"FodVariant.Filled\" StartIcon=\"@FodIcons.Material.Filled.Save\" IconColor=\"FodColor.Secondary\" Size=\"FodSize.Large\"&gt;Save&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#customized-buttons","title":"Customized Buttons","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\" EndIcon=\"@FodIcons.Material.Filled.ArrowDownward\" Style=\"background-color: yellowgreen; color: white; width: 200px; height: 60px;\"&gt;\n    Download Now\n&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#link-button","title":"Link Button","text":"<pre><code>&lt;FodButton Href=\"https://fod.live.egov.md\"\n           Target=\"_blank\"\n           Variant=\"FodVariant.Filled\"\n           EndIcon=\"@FodIcons.Custom.Brands.GitHub\"\n           Color=\"FodColor.Primary\"\n           Disabled=@disabled&gt;\n    Fod Home Page\n&lt;/FodButton&gt;\n\n&lt;FodButton Href=\"https://fod.live.egov.md\"\n           Target=\"_blank\"\n           Variant=\"FodVariant.Text\"\n           EndIcon=\"@FodIcons.Custom.Brands.GitHub\"\n           Color=\"FodColor.Secondary\"\n           Style=\"text-transform:none\"\n           Disabled=@disabled&gt;\n    Fod Home Page\n&lt;/FodButton&gt;\n\n&lt;FodButton Href=\"https://fod.live.egov.md\"\n           Target=\"_blank\"\n           Variant=\"FodVariant.Outlined\"\n           EndIcon=\"@FodIcons.Custom.Brands.GitHub\"\n           Color=\"FodColor.Tertiary\"\n           Disabled=@disabled&gt;\n    Fod Home Page\n&lt;/FodButton&gt;\n\n&lt;FodCheckBox2 Color=\"FodColor.Primary\" @bind-Checked=@(disabled) Label=\"Disable\" /&gt;\n\n@code{\n    bool disabled = false;\n}\n</code></pre>"},{"location":"fod/componente/FodButton/#custom-rel-content","title":"Custom Rel Content","text":"<pre><code>&lt;FodButton Href=\"https://fod.live.egov.md\"\n           Rel=\"nofollow\"\n           Variant=\"FodVariant.Filled\"\n           EndIcon=\"@FodIcons.Custom.Brands.GitHub\"\n           Color=\"FodColor.Primary\"&gt;\n    Fod Home Page\n&lt;/FodButton&gt;\n\n&lt;FodButton Href=\"https://fod.live.egov.md\"\n           Target=\"_blank\"\n           Rel=\"nofollow noopener\"\n           Variant=\"FodVariant.Outlined\"\n           EndIcon=\"@FodIcons.Custom.Brands.GitHub\"\n           Color=\"FodColor.Tertiary\"&gt;\n   Fod Home Page\n&lt;/FodButton&gt;\n</code></pre>"},{"location":"fod/componente/FodButton/#loading-button","title":"Loading Button","text":"<pre><code>&lt;FodButton Disabled=\"@_processing\" OnClick=\"ProcessSomething\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n    @if (_processing)\n    {\n        &lt;FodLoadingCircular Class=\"ms-n1\" Size=\"Size.Small\" Indeterminate=\"true\"/&gt;\n        &lt;FodText Class=\"ms-2\"&gt;Processing&lt;/FodText&gt;\n    }\n    else\n    {\n        &lt;FodText&gt;Click me&lt;/FodText&gt;\n    }\n&lt;/FodButton&gt;\n\n@code {\n    private bool _processing = false;\n\n    async Task ProcessSomething()\n    {\n        _processing = true;\n        await Task.Delay(2000);\n        _processing = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodButton/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere <code>StartIcon</code> <code>string</code> Pictogram\u0103 afi\u0219at\u0103 \u00eenaintea textului. <code>EndIcon</code> <code>string</code> Pictogram\u0103 afi\u0219at\u0103 dup\u0103 text. <code>IconColor</code> <code>FodColor</code> Culoarea pictogramei. <code>IconClass</code> <code>string</code> Clasa CSS pentru pictogram\u0103. <code>Color</code> <code>FodColor</code> Culoarea butonului. <code>Size</code> <code>FodSize</code> Dimensiunea butonului. <code>Variant</code> <code>FodVariant</code> Varianta butonului. <code>FullWidth</code> <code>bool</code> Dac\u0103 este <code>true</code>, butonul ocup\u0103 \u00eentreaga l\u0103\u021bime. <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul afi\u0219at \u00een buton."},{"location":"fod/componente/FodButton/#3-metode-publice-si-protejate","title":"3. Metode Publice \u0219i Protejate","text":"<ul> <li><code>OnClickHandler(MouseEventArgs ev)</code> (Protejat\u0103) \u2013 Gestioneaz\u0103 evenimentul de click al butonului \u0219i execut\u0103 comanda asociat\u0103, dac\u0103 este definit\u0103.</li> <li><code>FocusAsync()</code> (Public\u0103) \u2013 Permite focalizarea programatic\u0103 a butonului (returneaz\u0103 <code>ValueTask</code>).</li> <li><code>OnInitialized()</code> (Protejat\u0103) \u2013 Este apelat\u0103 la ini\u021bializarea componentei \u0219i seteaz\u0103 valorile implicite.</li> <li><code>OnParametersSet()</code> (Protejat\u0103) \u2013 Este apelat\u0103 c\u00e2nd parametrii componentei sunt actualiza\u021bi.</li> <li><code>SetDefaultValues()</code> (Privat\u0103) \u2013 Seteaz\u0103 valorile implicite pentru <code>HtmlTag</code>, <code>Link</code>, \u0219i <code>Target</code>.</li> </ul>"},{"location":"fod/componente/FodButton/#4-concluzie","title":"4. Concluzie","text":"<p><code>FodButton</code> este o solu\u021bie flexibil\u0103 \u0219i reutilizabil\u0103 pentru crearea butoanelor \u00een Blazor, oferind multiple op\u021biuni de personalizare pentru culori, dimensiuni \u0219i comportamente.</p>"},{"location":"fod/componente/FodButtonGroup/","title":"Button Group","text":""},{"location":"fod/componente/FodButtonGroup/#documentatie-pentru-componenta-fodbuttongroup","title":"Documenta\u021bie pentru componenta FodButtonGroup","text":""},{"location":"fod/componente/FodButtonGroup/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodButtonGroup</code> este o component\u0103 Blazor utilizat\u0103 pentru a grupa mai multe butoane \u00eentr-o singur\u0103 unitate vizual\u0103 coerent\u0103. Aceasta permite organizarea butoanelor fie pe orizontal\u0103, fie pe vertical\u0103, oferind \u00een acela\u0219i timp suport pentru stiluri personalizate \u0219i variante de afi\u0219are.</p> <p>Componenta suport\u0103: - Aliniere vertical\u0103 sau orizontal\u0103 - Suprimarea efectului de ridicare (elevation) - Personalizare prin culori \u0219i dimensiuni - Suport pentru RTL (Right-to-Left) - Posibilitatea de a suprascrie stilurile butoanelor individuale</p>"},{"location":"fod/componente/FodButtonGroup/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodButtonGroup/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Filled\"&gt;\n    &lt;FodButton&gt;Button 1&lt;/FodButton&gt;\n    &lt;FodButton&gt;Button 2&lt;/FodButton&gt;\n    &lt;FodButton&gt;Button 3&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#basic-button-group","title":"Basic button group","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;FodButton&gt;One&lt;/FodButton&gt;\n    &lt;FodButton&gt;Two&lt;/FodButton&gt;\n    &lt;FodButton&gt;Three&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#sizes-and-colors","title":"Sizes and colors","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Secondary\" Size=\"FodSize.Medium\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;FodButton&gt;One&lt;/FodButton&gt;\n    &lt;FodButton&gt;Two&lt;/FodButton&gt;\n    &lt;FodButton&gt;Three&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#vertical-button-group","title":"Vertical button group","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\" VerticalAlign=\"true\"&gt;\n    &lt;FodButton&gt;One&lt;/FodButton&gt;\n    &lt;FodButton&gt;Two&lt;/FodButton&gt;\n    &lt;FodButton&gt;Three&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#icon-buttons","title":"Icon buttons","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.AccessAlarm\"&gt;&lt;/FodIconButton&gt;\n    &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.AlarmAdd\" IconColor=\"FodColor.Warning\"&gt;Add alarm&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#disable-elevation","title":"Disable elevation","text":"<pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Filled\" DisableElevation=\"@_disableElevation\"&gt;\n    &lt;FodButton&gt;One&lt;/FodButton&gt;\n    &lt;FodButton&gt;Two&lt;/FodButton&gt;\n    &lt;FodButton&gt;Three&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n\n&lt;FodCheckBox2 @bind-Checked=\"@_disableElevation\" Label=\"Disable elevation\" Color=\"FodColor.Primary\" /&gt;\n\n@code {\n    private bool _disableElevation = true;\n}\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#custom-styles","title":"Custom styles","text":"<p>Utiliz\u00e2nd proprietatea <code>OverrideStyles=\"false\"</code>, <code>FodButtonGroup</code> nu va rescrie stilurile fiec\u0103rui buton \u00een parte.</p> <pre><code>&lt;FodButtonGroup Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\" OverrideStyles=\"_overrideStyles\"&gt;\n    &lt;FodButton Color=\"FodColor.Primary\" Variant=\"FodVariant.Outlined\"&gt;One&lt;/FodButton&gt;\n    &lt;FodButton Color=\"FodColor.Warning\" Variant=\"FodVariant.Outlined\"&gt;Two&lt;/FodButton&gt;\n    &lt;FodButton Color=\"FodColor.Secondary\" Variant=\"FodVariant.Outlined\"&gt;Three&lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n\n&lt;FodCheckBox2 @bind-Checked=\"@_overrideStyles\" Label=\"Override styles\" Color=\"FodColor.Primary\" /&gt;\n\n@code {\n    private bool _overrideStyles;\n}\n</code></pre>"},{"location":"fod/componente/FodButtonGroup/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere <code>OverrideStyles</code> <code>bool</code> Dac\u0103 este <code>true</code>, stilurile implicite ale butoanelor sunt suprascrise. Implicit <code>true</code>. <code>VerticalAlign</code> <code>bool</code> Dac\u0103 este <code>true</code>, butoanele vor fi aliniate vertical. Implicit <code>false</code>. <code>DisableElevation</code> <code>bool</code> Dac\u0103 este <code>true</code>, elimin\u0103 efectul de ridicare (shadow). Implicit <code>false</code>. <code>RightToLeft</code> <code>bool</code> Dac\u0103 este <code>true</code>, afi\u0219eaz\u0103 butoanele \u00een direc\u021bia RTL. <code>Color</code> <code>FodColor</code> Culoarea grupului de butoane. Accept\u0103 culorile temei. <code>Size</code> <code>FodSize</code> Dimensiunea butoanelor din grup. <code>Variant</code> <code>FodVariant</code> Varianta de stil a butoanelor. <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul butonului (alte componente sau text)."},{"location":"fod/componente/FodButtonGroup/#3-metode-publice-si-protejate","title":"3. Metode Publice \u0219i Protejate","text":"<ul> <li><code>Classname()</code> (Protejat\u0103) \u2013 Construie\u0219te \u0219i returneaz\u0103 clasa CSS corespunz\u0103toare grupului de butoane, pe baza propriet\u0103\u021bilor setate.</li> </ul>"},{"location":"fod/componente/FodButtonGroup/#4-concluzie","title":"4. Concluzie","text":"<p><code>FodButtonGroup</code> permite organizarea \u0219i stilizarea eficient\u0103 a grupurilor de butoane, oferind flexibilitate \u0219i compatibilitate cu temele Blazor.</p>"},{"location":"fod/componente/FodCard/","title":"Card","text":""},{"location":"fod/componente/FodCard/#documentatie-pentru-componenta-fodcard","title":"Documenta\u021bie pentru componenta FodCard","text":""},{"location":"fod/componente/FodCard/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodCard</code> este o component\u0103 container care afi\u0219eaz\u0103 con\u021binut \u00eentr-o suprafa\u021b\u0103 ridicat\u0103 (elevated). Cardurile sunt utilizate pentru a grupa informa\u021bii conexe \u0219i pentru a oferi un punct de intrare c\u0103tre informa\u021bii mai detaliate.</p> <p>Componenta suport\u0103: - Nivele de eleva\u021bie personalizabile - Con\u021binut structurat (Header, Content, Actions, Media) - Stiluri outlined \u0219i square - Integrare cu alte componente Fod - Layout flexibil \u0219i responsive</p>"},{"location":"fod/componente/FodCard/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodCard/#card-de-baza","title":"Card de baz\u0103","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Titlu Card&lt;/FodText&gt;\n        &lt;FodText&gt;Acesta este con\u021binutul cardului.&lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-header-si-actiuni","title":"Card cu header \u0219i ac\u021biuni","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;CardHeaderContent&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Titlu Document&lt;/FodText&gt;\n        &lt;/CardHeaderContent&gt;\n        &lt;CardHeaderActions&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" /&gt;\n        &lt;/CardHeaderActions&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText&gt;\n            Con\u021binutul documentului este afi\u0219at aici. \n            Poate include text formatat, liste sau alte elemente.\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" Color=\"FodColor.Primary\"&gt;Cite\u0219te mai mult&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" Color=\"FodColor.Primary\"&gt;Partajeaz\u0103&lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-imagine","title":"Card cu imagine","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardMedia Image=\"images/service-banner.jpg\" Height=\"200\" /&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;Serviciul de Apostil\u0103&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.TextSecondary\"&gt;\n            Ob\u021bine\u021bi apostila pentru documentele dumneavoastr\u0103 \u00eentr-un mod rapid \u0219i eficient.\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;Aplic\u0103 acum&lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-outlined-fara-elevatie","title":"Card outlined (f\u0103r\u0103 eleva\u021bie)","text":"<pre><code>&lt;FodCard Outlined=\"true\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.subtitle1\"&gt;Card cu chenar&lt;/FodText&gt;\n        &lt;FodText&gt;\n            Acest card folose\u0219te un chenar \u00een loc de umbr\u0103 pentru delimitare.\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-elevatie-personalizata","title":"Card cu eleva\u021bie personalizat\u0103","text":"<pre><code>&lt;FodGrid&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;FodCard Elevation=\"0\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;F\u0103r\u0103 eleva\u021bie&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;FodCard Elevation=\"3\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;Eleva\u021bie medie&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;FodCard Elevation=\"12\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;Eleva\u021bie mare&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-pentru-profil-utilizator","title":"Card pentru profil utilizator","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;CardHeaderAvatar&gt;\n            &lt;div class=\"d-flex align-items-center justify-content-center\"\n                 style=\"width: 40px; height: 40px; border-radius: 50%; background-color: var(--fod-palette-primary); color: white;\"&gt;\n                &lt;FodText&gt;IP&lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/CardHeaderAvatar&gt;\n        &lt;CardHeaderContent&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Ion Popescu&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.TextSecondary\"&gt;\n                Administrator\n            &lt;/FodText&gt;\n        &lt;/CardHeaderContent&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText&gt;Email: ion.popescu@example.md&lt;/FodText&gt;\n        &lt;FodText&gt;Telefon: +373 XX XXX XXX&lt;/FodText&gt;\n        &lt;FodText&gt;Departament: IT&lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" StartIcon=\"@FodIcons.Material.Filled.Edit\"&gt;\n            Editeaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" StartIcon=\"@FodIcons.Material.Filled.Delete\" Color=\"FodColor.Error\"&gt;\n            \u0218terge\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-pentru-servicii","title":"Card pentru servicii","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;div class=\"d-flex align-items-center mb-3\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Description\" \n                     Size=\"FodSize.Large\" \n                     Color=\"FodColor.Primary\" \n                     Class=\"me-3\" /&gt;\n            &lt;FodText Typo=\"Typo.h5\"&gt;Traduceri Autorizate&lt;/FodText&gt;\n        &lt;/div&gt;\n        &lt;FodText Class=\"mb-3\"&gt;\n            Serviciu de traducere autorizat\u0103 pentru documente oficiale \u00een peste 20 de limbi.\n        &lt;/FodText&gt;\n        &lt;FodChipSet&gt;\n            &lt;FodChip Size=\"FodSize.Small\"&gt;Rapiditate&lt;/FodChip&gt;\n            &lt;FodChip Size=\"FodSize.Small\"&gt;Calitate&lt;/FodChip&gt;\n            &lt;FodChip Size=\"FodSize.Small\"&gt;Pre\u021b accesibil&lt;/FodChip&gt;\n        &lt;/FodChipSet&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n            Solicit\u0103 serviciul\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-formular","title":"Card cu formular","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;CardHeaderContent&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Formular de contact&lt;/FodText&gt;\n        &lt;/CardHeaderContent&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;EditForm Model=\"contactForm\"&gt;\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FODInputText Label=\"Nume complet\" @bind-Value=\"contactForm.Name\" /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FODInputText Label=\"Email\" @bind-Value=\"contactForm.Email\" /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FodTextArea Label=\"Mesaj\" @bind-Value=\"contactForm.Message\" Rows=\"4\" /&gt;\n            &lt;/div&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;Trimite&lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private ContactForm contactForm = new();\n\n    public class ContactForm\n    {\n        public string Name { get; set; } = \"\";\n        public string Email { get; set; } = \"\";\n        public string Message { get; set; } = \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-statistici","title":"Card cu statistici","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodGrid&gt;\n            &lt;FodItem xs=\"6\"&gt;\n                &lt;FodText Typo=\"Typo.h3\" Color=\"FodColor.Primary\"&gt;1,234&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.subtitle2\" Color=\"FodColor.TextSecondary\"&gt;\n                    Solicit\u0103ri procesate\n                &lt;/FodText&gt;\n            &lt;/FodItem&gt;\n            &lt;FodItem xs=\"6\"&gt;\n                &lt;FodText Typo=\"Typo.h3\" Color=\"FodColor.Success\"&gt;98%&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.subtitle2\" Color=\"FodColor.TextSecondary\"&gt;\n                    Rata de satisfac\u021bie\n                &lt;/FodText&gt;\n            &lt;/FodItem&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Elevation</code> <code>int</code> Nivelul de umbr\u0103/eleva\u021bie (0-24) <code>1</code> <code>Square</code> <code>bool</code> Elimin\u0103 border-radius pentru col\u021buri drepte <code>false</code> <code>Outlined</code> <code>bool</code> Folose\u0219te chenar \u00een loc de umbr\u0103 <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul cardului <code>null</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri CSS inline <code>null</code>"},{"location":"fod/componente/FodCard/#3-componente-asociate","title":"3. Componente asociate","text":""},{"location":"fod/componente/FodCard/#fodcardheader","title":"FodCardHeader","text":"<p>Sec\u021biunea de header a cardului: - <code>CardHeaderAvatar</code> - Avatar \u00een header - <code>CardHeaderContent</code> - Con\u021binut principal header - <code>CardHeaderActions</code> - Ac\u021biuni \u00een header</p>"},{"location":"fod/componente/FodCard/#fodcardcontent","title":"FodCardContent","text":"<p>Container pentru con\u021binutul principal al cardului cu padding standard.</p>"},{"location":"fod/componente/FodCard/#fodcardactions","title":"FodCardActions","text":"<p>Container pentru butoane \u0219i ac\u021biuni, cu alignment \u0219i spacing automat.</p>"},{"location":"fod/componente/FodCard/#fodcardmedia","title":"FodCardMedia","text":"<p>Afi\u0219eaz\u0103 imagini sau media \u00een card: <pre><code>&lt;FodCardMedia Image=\"image.jpg\" Height=\"200\" Title=\"Descriere imagine\" /&gt;\n</code></pre></p>"},{"location":"fod/componente/FodCard/#4-combinatii-cu-alte-componente","title":"4. Combina\u021bii cu alte componente","text":""},{"location":"fod/componente/FodCard/#card-in-grid","title":"Card \u00een Grid","text":"<pre><code>&lt;FodGrid&gt;\n    @foreach (var item in items)\n    {\n        &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;@item.Title&lt;/FodText&gt;\n                    &lt;FodText&gt;@item.Description&lt;/FodText&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodItem&gt;\n    }\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-expansion-panel","title":"Card cu Expansion Panel","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodExpansionPanels&gt;\n            &lt;FodExpansionPanel&gt;\n                &lt;TitleContent&gt;Detalii adi\u021bionale&lt;/TitleContent&gt;\n                &lt;ChildContent&gt;\n                    &lt;FodText&gt;Informa\u021bii extinse despre subiect...&lt;/FodText&gt;\n                &lt;/ChildContent&gt;\n            &lt;/FodExpansionPanel&gt;\n        &lt;/FodExpansionPanels&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#5-stilizare-si-teme","title":"5. Stilizare \u0219i teme","text":""},{"location":"fod/componente/FodCard/#card-colorat","title":"Card colorat","text":"<pre><code>&lt;FodCard Style=\"background-color: #e3f2fd;\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText&gt;Card cu fundal personalizat&lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-cu-gradient","title":"Card cu gradient","text":"<pre><code>&lt;FodCard Style=\"background: linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%);\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Style=\"color: white;\"&gt;Card cu gradient&lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#6-note-si-observatii","title":"6. Note \u0219i observa\u021bii","text":"<ul> <li>Cardurile sunt containere flexibile care pot con\u021bine aproape orice tip de con\u021binut</li> <li>Eleva\u021bia implicit\u0103 este 1, oferind o separare subtil\u0103 de fundal</li> <li>Pentru liste de carduri, folosi\u021bi FodGrid pentru layout responsive</li> <li>CardActions aplic\u0103 automat spacing \u00eentre butoane</li> <li>Outlined \u0219i Elevation sunt mutual exclusive</li> </ul>"},{"location":"fod/componente/FodCard/#7-bune-practici","title":"7. Bune practici","text":"<ol> <li>Con\u021binut concis - P\u0103stra\u021bi con\u021binutul cardului focusat pe un singur subiect</li> <li>Ac\u021biuni clare - Limita\u021bi num\u0103rul de ac\u021biuni la 2-3 per card</li> <li>Ierarhie vizual\u0103 - Folosi\u021bi tipografie pentru a crea ierarhie clar\u0103</li> <li>Spacing consistent - Folosi\u021bi componentele Card pentru spacing uniform</li> <li>Imagini optimizate - Pentru CardMedia, folosi\u021bi imagini de dimensiuni adecvate</li> <li>Accesibilitate - Asigura\u021bi-v\u0103 c\u0103 toate ac\u021biunile au etichete descriptive</li> </ol>"},{"location":"fod/componente/FodCard/#8-cazuri-de-utilizare-avansate","title":"8. Cazuri de utilizare avansate","text":""},{"location":"fod/componente/FodCard/#card-cu-loading-state","title":"Card cu loading state","text":"<pre><code>&lt;FodCard&gt;\n    @if (isLoading)\n    {\n        &lt;FodCardContent&gt;\n            &lt;div class=\"d-flex justify-content-center p-4\"&gt;\n                &lt;FodLoadingCircular /&gt;\n            &lt;/div&gt;\n        &lt;/FodCardContent&gt;\n    }\n    else\n    {\n        &lt;FodCardContent&gt;\n            &lt;!-- Con\u021binut actual --&gt;\n        &lt;/FodCardContent&gt;\n    }\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCard/#card-interactiv","title":"Card interactiv","text":"<pre><code>&lt;FodCard @onclick=\"HandleCardClick\" Style=\"cursor: pointer;\" \n         Class=\"@(isSelected ? \"selected-card\" : \"\")\"\n         Elevation=\"@(isHovered ? 8 : 2)\"\n         @onmouseenter=\"@(() =&gt; isHovered = true)\"\n         @onmouseleave=\"@(() =&gt; isHovered = false)\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText&gt;Card selectabil&lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private bool isSelected = false;\n    private bool isHovered = false;\n\n    private void HandleCardClick()\n    {\n        isSelected = !isSelected;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCard/#9-concluzie","title":"9. Concluzie","text":"<p><code>FodCard</code> este o component\u0103 fundamental\u0103 pentru organizarea \u0219i prezentarea con\u021binutului \u00een aplica\u021biile Blazor, oferind flexibilitate maxim\u0103 pentru diferite cazuri de utilizare, de la simple containere de informa\u021bii p\u00e2n\u0103 la interfe\u021be complexe interactive.</p>"},{"location":"fod/componente/FodCardWrapper/","title":"FodCardWrapper","text":""},{"location":"fod/componente/FodCardWrapper/#documentatie-pentru-componenta-fodcardwrapper","title":"Documenta\u021bie pentru componenta FodCardWrapper","text":""},{"location":"fod/componente/FodCardWrapper/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodCardWrapper</code> este o component\u0103 wrapper care extinde <code>FodCard</code> cu un header pre-stilizat ce include un titlu \u0219i o iconi\u021b\u0103. Ofer\u0103 o modalitate rapid\u0103 \u0219i consistent\u0103 de a crea card-uri cu header-e standardizate pentru sec\u021biuni de con\u021binut.</p> <p>Caracteristici principale: - Header pre-configurat cu background deschis - Suport pentru iconi\u021b\u0103 \u0219i titlu \u00een header - Culoare personalizabil\u0103 pentru iconi\u021b\u0103 - Spacing automat (margin-bottom) - Mo\u0219tene\u0219te func\u021bionalitatea FodCard - Ideal pentru sec\u021biuni de formular sau dashboard</p>"},{"location":"fod/componente/FodCardWrapper/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodCardWrapper/#card-simplu-cu-titlu-si-iconita","title":"Card simplu cu titlu \u0219i iconi\u021b\u0103","text":"<pre><code>&lt;FodCardWrapper Title=\"Informa\u021bii personale\" \n                Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n    &lt;FodTextField Label=\"Nume\" @bind-Value=\"name\" /&gt;\n    &lt;FodTextField Label=\"Email\" @bind-Value=\"email\" /&gt;\n&lt;/FodCardWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#card-cu-iconita-colorata","title":"Card cu iconi\u021b\u0103 colorat\u0103","text":"<pre><code>&lt;FodCardWrapper Title=\"Set\u0103ri notific\u0103ri\" \n                Icon=\"@FodIcons.Material.Filled.Notifications\"\n                IconColor=\"FodColor.Warning\"&gt;\n    &lt;FodCheckbox Label=\"Prime\u0219te notific\u0103ri email\" @bind-Value=\"emailNotifications\" /&gt;\n    &lt;FodCheckbox Label=\"Prime\u0219te notific\u0103ri SMS\" @bind-Value=\"smsNotifications\" /&gt;\n&lt;/FodCardWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>Title</code> <code>string</code> Titlul afi\u0219at \u00een header - <code>Icon</code> <code>string</code> Iconi\u021b\u0103 afi\u0219at\u0103 l\u00e2ng\u0103 titlu - <code>IconColor</code> <code>FodColor</code> Culoarea iconi\u021bei <code>Primary</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul card-ului -"},{"location":"fod/componente/FodCardWrapper/#4-mostenire-si-styling","title":"4. Mo\u0219tenire \u0219i Styling","text":"<p>Componenta aplic\u0103 automat: - <code>Class=\"mb-2\"</code> - margin bottom pentru spacing - <code>HeaderClass=\"bg-light\"</code> - background deschis pentru header - Font size <code>h3</code> \u0219i weight <code>500</code> pentru titlu</p>"},{"location":"fod/componente/FodCardWrapper/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodCardWrapper/#dashboard-cu-multiple-card-uri","title":"Dashboard cu multiple card-uri","text":"<pre><code>&lt;FodGrid container spacing=\"3\"&gt;\n    &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n        &lt;FodCardWrapper Title=\"Statistici v\u00e2nz\u0103ri\" \n                        Icon=\"@FodIcons.Material.Filled.TrendingUp\"\n                        IconColor=\"FodColor.Success\"&gt;\n            &lt;FodText Typo=\"Typo.h4\"&gt;$25,430&lt;/FodText&gt;\n            &lt;FodText Color=\"FodColor.TextSecondary\"&gt;Total luna aceasta&lt;/FodText&gt;\n            &lt;FodDivider Class=\"my-2\" /&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                &lt;span class=\"text-success\"&gt;+15%&lt;/span&gt; fa\u021b\u0103 de luna trecut\u0103\n            &lt;/FodText&gt;\n        &lt;/FodCardWrapper&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n        &lt;FodCardWrapper Title=\"Clien\u021bi noi\" \n                        Icon=\"@FodIcons.Material.Filled.GroupAdd\"\n                        IconColor=\"FodColor.Info\"&gt;\n            &lt;FodText Typo=\"Typo.h4\"&gt;142&lt;/FodText&gt;\n            &lt;FodText Color=\"FodColor.TextSecondary\"&gt;\u00cenregistra\u021bi aceast\u0103 lun\u0103&lt;/FodText&gt;\n            &lt;FodDivider Class=\"my-2\" /&gt;\n            &lt;FodLoadingLinear Value=\"71\" Max=\"200\" Color=\"FodColor.Info\" /&gt;\n        &lt;/FodCardWrapper&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#formular-structurat-cu-sectiuni","title":"Formular structurat cu sec\u021biuni","text":"<pre><code>&lt;EditForm Model=\"@employeeModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodCardWrapper Title=\"Date personale\" \n                    Icon=\"@FodIcons.Material.Filled.Badge\"&gt;\n        &lt;FodGrid container spacing=\"2\"&gt;\n            &lt;FodGrid item xs=\"12\" sm=\"6\"&gt;\n                &lt;FodTextField Label=\"Nume\" \n                              @bind-Value=\"employeeModel.FirstName\" \n                              Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid item xs=\"12\" sm=\"6\"&gt;\n                &lt;FodTextField Label=\"Prenume\" \n                              @bind-Value=\"employeeModel.LastName\" \n                              Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid item xs=\"12\" sm=\"6\"&gt;\n                &lt;FodDatePicker Label=\"Data na\u0219terii\" \n                               @bind-Value=\"employeeModel.BirthDate\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid item xs=\"12\" sm=\"6\"&gt;\n                &lt;FodTextField Label=\"CNP\" \n                              @bind-Value=\"employeeModel.PersonalId\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodCardWrapper&gt;\n\n    &lt;FodCardWrapper Title=\"Date contact\" \n                    Icon=\"@FodIcons.Material.Filled.ContactPhone\"\n                    IconColor=\"FodColor.Secondary\"&gt;\n        &lt;FodTextField Label=\"Email\" \n                      @bind-Value=\"employeeModel.Email\" \n                      Type=\"email\" /&gt;\n        &lt;FodTextField Label=\"Telefon\" \n                      @bind-Value=\"employeeModel.Phone\" /&gt;\n        &lt;FodTextField Label=\"Adres\u0103\" \n                      @bind-Value=\"employeeModel.Address\" \n                      Multiline=\"true\" \n                      Rows=\"3\" /&gt;\n    &lt;/FodCardWrapper&gt;\n\n    &lt;FodCardWrapper Title=\"Informa\u021bii angajare\" \n                    Icon=\"@FodIcons.Material.Filled.Work\"\n                    IconColor=\"FodColor.Primary\"&gt;\n        &lt;FodSelect T=\"string\" Label=\"Departament\" \n                   @bind-Value=\"employeeModel.Department\"&gt;\n            &lt;FodSelectItem Value=\"HR\"&gt;Resurse Umane&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"IT\"&gt;IT&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"Sales\"&gt;V\u00e2nz\u0103ri&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n        &lt;FodTextField Label=\"Func\u021bie\" \n                      @bind-Value=\"employeeModel.Position\" /&gt;\n        &lt;FodDatePicker Label=\"Data angaj\u0103rii\" \n                       @bind-Value=\"employeeModel.HireDate\" /&gt;\n    &lt;/FodCardWrapper&gt;\n\n    &lt;div class=\"text-end mt-3\"&gt;\n        &lt;FodButton Type=\"submit\" Color=\"FodColor.Primary\"&gt;\n            Salveaz\u0103\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#card-cu-actiuni-in-header-extins","title":"Card cu ac\u021biuni \u00een header (extins)","text":"<pre><code>@* ExtendedCardWrapper.razor *@\n&lt;FodCard Class=\"mb-2\" HeaderClass=\"bg-light\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n            &lt;FodText Class=\"m-1 display-2\" Style=\"font-weight: 500;\" Typo=\"Typo.h3\"&gt;\n                &lt;FodIcon Icon=\"@Icon\" Color=\"@IconColor\"/&gt;\n                @Title\n            &lt;/FodText&gt;\n            @if (HeaderActions != null)\n            {\n                &lt;div class=\"header-actions\"&gt;\n                    @HeaderActions\n                &lt;/div&gt;\n            }\n        &lt;/div&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        @ChildContent\n    &lt;/BodyTemplate&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Parameter] public string Title { get; set; }\n    [Parameter] public string Icon { get; set; }\n    [Parameter] public FodColor IconColor { get; set; } = FodColor.Primary;\n    [Parameter] public RenderFragment ChildContent { get; set; }\n    [Parameter] public RenderFragment HeaderActions { get; set; }\n}\n\n@* Utilizare *@\n&lt;ExtendedCardWrapper Title=\"List\u0103 utilizatori\" \n                     Icon=\"@FodIcons.Material.Filled.People\"&gt;\n    &lt;HeaderActions&gt;\n        &lt;FodButton Size=\"FodSize.Small\" \n                   StartIcon=\"@FodIcons.Material.Filled.Add\"&gt;\n            Adaug\u0103 utilizator\n        &lt;/FodButton&gt;\n    &lt;/HeaderActions&gt;\n    &lt;ChildContent&gt;\n        &lt;!-- List\u0103 utilizatori --&gt;\n    &lt;/ChildContent&gt;\n&lt;/ExtendedCardWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#6-stilizare-css","title":"6. Stilizare CSS","text":"<pre><code>/* Override pentru header */\n.fod-card .bg-light {\n    background-color: #f8f9fa !important;\n    border-bottom: 1px solid var(--fod-palette-divider);\n}\n\n/* Stilizare titlu \u00een header */\n.fod-card-header .display-2 {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: 0.5rem;\n}\n\n/* Iconi\u021be \u00een header */\n.fod-card-header .fod-icon-root {\n    font-size: 1.75rem;\n}\n\n/* Spacing \u00eentre card-uri */\n.fod-card.mb-2 {\n    margin-bottom: 1rem !important;\n}\n\n/* Responsive */\n@media (max-width: 600px) {\n    .fod-card-header .display-2 {\n        font-size: 1.25rem !important;\n    }\n\n    .fod-card-header .fod-icon-root {\n        font-size: 1.5rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#7-scenarii-de-utilizare","title":"7. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodCardWrapper/#wizard-cu-pasi-in-card-uri","title":"Wizard cu pa\u0219i \u00een card-uri","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Title=\"Informa\u021bii generale\"&gt;\n        &lt;FodCardWrapper Title=\"Detalii proiect\" \n                        Icon=\"@FodIcons.Material.Filled.Description\"&gt;\n            &lt;FodTextField Label=\"Nume proiect\" @bind-Value=\"project.Name\" /&gt;\n            &lt;FodTextArea Label=\"Descriere\" @bind-Value=\"project.Description\" /&gt;\n        &lt;/FodCardWrapper&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Echip\u0103\"&gt;\n        &lt;FodCardWrapper Title=\"Membri echip\u0103\" \n                        Icon=\"@FodIcons.Material.Filled.Groups\"\n                        IconColor=\"FodColor.Info\"&gt;\n            &lt;!-- Selector membri echip\u0103 --&gt;\n        &lt;/FodCardWrapper&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Planificare\"&gt;\n        &lt;FodCardWrapper Title=\"Timeline proiect\" \n                        Icon=\"@FodIcons.Material.Filled.Schedule\"\n                        IconColor=\"FodColor.Warning\"&gt;\n            &lt;FodDateRangePicker Label=\"Perioad\u0103 proiect\" \n                                @bind-StartDate=\"project.StartDate\"\n                                @bind-EndDate=\"project.EndDate\" /&gt;\n        &lt;/FodCardWrapper&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#card-uri-colapsabile","title":"Card-uri colapsabile","text":"<pre><code>@foreach (var section in formSections)\n{\n    &lt;FodCardWrapper Title=\"@section.Title\" \n                    Icon=\"@section.Icon\"\n                    IconColor=\"@section.IconColor\"&gt;\n        @if (section.IsExpanded)\n        {\n            &lt;div class=\"card-content\"&gt;\n                @section.Content\n            &lt;/div&gt;\n        }\n        &lt;div class=\"text-end\"&gt;\n            &lt;FodButton Variant=\"FodVariant.Text\" \n                       Size=\"FodSize.Small\"\n                       OnClick=\"() =&gt; ToggleSection(section)\"&gt;\n                @(section.IsExpanded ? \"Restr\u00e2nge\" : \"Extinde\")\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/FodCardWrapper&gt;\n}\n\n@code {\n    private List&lt;FormSection&gt; formSections = new();\n\n    private void ToggleSection(FormSection section)\n    {\n        section.IsExpanded = !section.IsExpanded;\n    }\n\n    public class FormSection\n    {\n        public string Title { get; set; }\n        public string Icon { get; set; }\n        public FodColor IconColor { get; set; }\n        public RenderFragment Content { get; set; }\n        public bool IsExpanded { get; set; } = true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Iconi\u021be descriptive - Folosi\u021bi iconi\u021be care reprezint\u0103 con\u021binutul</li> <li>Culori consistente - Men\u021bine\u021bi o palet\u0103 de culori coerent\u0103</li> <li>Titluri clare - Titluri scurte \u0219i descriptive</li> <li>Grupare logic\u0103 - Grupa\u021bi con\u021binutul related \u00eentr-un card</li> <li>Spacing consistent - Folosi\u021bi marginile implicite</li> </ol>"},{"location":"fod/componente/FodCardWrapper/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Component\u0103 lightweight, doar wrapper peste FodCard</li> <li>Nu adaug\u0103 logic\u0103 complex\u0103</li> <li>Randare eficient\u0103</li> </ul>"},{"location":"fod/componente/FodCardWrapper/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Structur\u0103 semantic\u0103 cu header \u0219i body</li> <li>Iconi\u021bele sunt decorative (nu necesit\u0103 alt text)</li> <li>Titlul ofer\u0103 context pentru con\u021binut</li> <li>Contrast adecvat pentru header</li> </ul>"},{"location":"fod/componente/FodCardWrapper/#11-comparatie-cu-fodcard","title":"11. Compara\u021bie cu FodCard","text":"Caracteristic\u0103 FodCard FodCardWrapper Header custom Da Pre-stilizat Flexibilitate Maxim\u0103 Limitat\u0103 U\u0219urin\u021b\u0103 utilizare Necesit\u0103 mai mult cod Rapid de implementat Use case Card-uri complexe Card-uri standard"},{"location":"fod/componente/FodCardWrapper/#12-migrare-de-la-fodcard","title":"12. Migrare de la FodCard","text":"<pre><code>@* \u00cenainte - FodCard *@\n&lt;FodCard Class=\"mb-2\" HeaderClass=\"bg-light\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Class=\"m-1 display-2\" Style=\"font-weight: 500;\" Typo=\"Typo.h3\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" Color=\"FodColor.Primary\"/&gt;\n            Set\u0103ri\n        &lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        &lt;!-- con\u021binut --&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodCard&gt;\n\n@* Dup\u0103 - FodCardWrapper *@\n&lt;FodCardWrapper Title=\"Set\u0103ri\" \n                Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n    &lt;!-- con\u021binut --&gt;\n&lt;/FodCardWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FodCardWrapper/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodCardWrapper/#iconita-nu-apare","title":"Iconi\u021ba nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 valoarea Icon este valid\u0103</li> <li>Verifica\u021bi importul FodIcons</li> </ul>"},{"location":"fod/componente/FodCardWrapper/#stilizare-inconsistenta","title":"Stilizare inconsistent\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 nu exist\u0103 CSS care suprascrie stilurile</li> <li>Folosi\u021bi !important dac\u0103 e necesar</li> </ul>"},{"location":"fod/componente/FodCardWrapper/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodCardWrapper</code> simplific\u0103 crearea de card-uri cu header-e standardizate, reduc\u00e2nd codul boilerplate \u0219i asigur\u00e2nd consisten\u021b\u0103 vizual\u0103. Perfect pentru formulare structurate, dashboard-uri \u0219i orice aplica\u021bie care necesit\u0103 gruparea vizual\u0103 a con\u021binutului cu titluri \u0219i iconi\u021be descriptive.</p>"},{"location":"fod/componente/FodCheckBox2/","title":"CheckBox2","text":"<p>Documenta\u021bie pentru <code>FodCheckBox2</code></p>"},{"location":"fod/componente/FodCheckBox2/#descriere-generala","title":"Descriere general\u0103","text":"<p><code>FodCheckBox2</code> este o component\u0103 Blazor care extinde <code>FodBooleanInput&lt;T&gt;</code>, utilizat\u0103 pentru a afi\u0219a \u0219i gestiona un input de tip checkbox \u00een cadrul unui formular. Componenta suport\u0103: - validare, - st\u0103ri de <code>readonly</code> \u0219i <code>disabled</code>, - binding bidirec\u021bional, - propagarea configurabil\u0103 a evenimentelor.</p>"},{"location":"fod/componente/FodCheckBox2/#ierarhie-mostenire","title":"Ierarhie mo\u0219tenire","text":"<pre><code>FodCheckBox2\n \u2514\u2500\u2500 FodBooleanInput&lt;T&gt;\n      \u2514\u2500\u2500 FodFormComponent&lt;T, bool?&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckBox2/#proprietati-mostenite","title":"Propriet\u0103\u021bi mo\u0219tenite","text":"Proprietate Tip Descriere Checked <code>T?</code> Valoarea curent\u0103 a checkbox-ului. Mapat\u0103 intern \u00een <code>bool?</code>. CheckedChanged <code>EventCallback&lt;T?&gt;</code> Eveniment declan\u0219at c\u00e2nd <code>Checked</code> se modific\u0103. OnCheckedChanged <code>EventCallback</code> Eveniment suplimentar la modificarea st\u0103rii bifate. Disabled <code>bool</code> Dac\u0103 este <code>true</code>, componenta este dezactivat\u0103. ReadOnly <code>bool</code> Dac\u0103 este <code>true</code>, componenta este doar pentru vizualizare. StopClickPropagation <code>bool</code> Dac\u0103 este <code>true</code>, opre\u0219te propagarea evenimentului de click. Required <code>bool</code> Dac\u0103 este <code>true</code>, c\u00e2mpul este obligatoriu. RequiredError <code>string</code> Mesajul de eroare afi\u0219at dac\u0103 <code>Required</code> este <code>true</code> \u0219i nu e bifat. Error <code>bool</code> Indic\u0103 dac\u0103 exist\u0103 o eroare afi\u0219at\u0103. ErrorText <code>string</code> Textul erorii afi\u0219ate. Validation <code>object</code> Logica de validare (sincron\u0103 sau asincron\u0103)."},{"location":"fod/componente/FodCheckBox2/#functionalitate","title":"Func\u021bionalitate","text":""},{"location":"fod/componente/FodCheckBox2/#setboolvalueasyncbool-value","title":"<code>SetBoolValueAsync(bool? value)</code>","text":"<p>Convert\u0103 valoarea primit\u0103 \u00een <code>T?</code>, seteaz\u0103 <code>Checked</code>, declan\u0219eaz\u0103 evenimente \u0219i validare.</p>"},{"location":"fod/componente/FodCheckBox2/#getdisabledstate-getreadonlystate","title":"<code>GetDisabledState()</code> / <code>GetReadOnlyState()</code>","text":"<p>Determin\u0103 starea final\u0103 a componentului \u021bin\u00e2nd cont \u0219i de p\u0103rintele contextual (<code>ParentDisabled</code>, <code>ParentReadOnly</code>).</p>"},{"location":"fod/componente/FodCheckBox2/#validare","title":"Validare","text":"<p>Componenta consider\u0103 c\u0103 are o valoare valid\u0103 doar dac\u0103 checkbox-ul este bifat (adic\u0103 valoarea este <code>true</code>).</p> <pre><code>protected override bool HasValue(T? value)\n{\n    return (BoolValue == true);\n}\n</code></pre>"},{"location":"fod/componente/FodCheckBox2/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"model.IsAccepted\"\n              Required=\"true\"\n              RequiredError=\"Trebuie sa accepti termenii.\"\n              OnCheckedChanged=\"@(() =&gt; Console.WriteLine(\\\"Checked!\\\"))\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckBox2/#alte-observatii","title":"Alte observa\u021bii","text":"<ul> <li><code>FodCheckBox2</code> este potrivit\u0103 pentru utilizare \u00een formulare complexe cu validare integrat\u0103.  </li> <li>Se integreaz\u0103 complet cu <code>EditForm</code> din Blazor \u0219i suport\u0103 valid\u0103ri asincrone \u0219i personalizate.  </li> <li>Poate mo\u0219teni comportamente de la componente p\u0103rinte (cum ar fi <code>Disabled</code> sau <code>ReadOnly</code>) prin <code>CascadingParameter</code>.</li> </ul>"},{"location":"fod/componente/FodCheckbox/","title":"Checkbox","text":""},{"location":"fod/componente/FodCheckbox/#documentatie-pentru-componentele-fodcheckbox2-si-fodcheckbox","title":"Documenta\u021bie pentru componentele FodCheckBox2 \u0219i FodCheckbox","text":""},{"location":"fod/componente/FodCheckbox/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodCheckBox2</code> este componenta modern\u0103 pentru input-uri de tip checkbox \u00een aplica\u021bii Blazor. Ofer\u0103 func\u021bionalit\u0103\u021bi avansate precum suport tri-state, validare integrat\u0103, personalizare complet\u0103 a aspectului \u0219i suport pentru multiple tipuri de date.</p> <p>Componenta include: - Suport pentru tipuri generice (bool, bool?, int, string, etc.) - Mod tri-state pentru valori nullable - Validare integrat\u0103 cu formulare Blazor - Personalizare complet\u0103 (culori, pictograme, dimensiuni) - Efecte ripple \u0219i anima\u021bii - Suport complet pentru tastatur\u0103 - Integrare cu DataTable pentru selec\u021bii multiple - Componente wrapper pentru formulare (FodInputCheckbox, FodInlineCheckbox)</p>"},{"location":"fod/componente/FodCheckbox/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodCheckbox/#checkbox-de-baza","title":"Checkbox de baz\u0103","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"isActive\" /&gt;\n\n@code {\n    private bool isActive = false;\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-eticheta","title":"Checkbox cu etichet\u0103","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"acceptTerms\" \n              Label=\"Accept termenii \u0219i condi\u021biile\" /&gt;\n\n@code {\n    private bool acceptTerms = false;\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-validare-in-formular","title":"Checkbox cu validare \u00een formular","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodCheckBox2 @bind-Checked=\"model.AcceptTerms\"\n                  Label=\"Accept termenii de utilizare\"\n                  Required=\"true\"\n                  RequiredError=\"Trebuie s\u0103 accepta\u021bi termenii pentru a continua\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.AcceptTerms)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        \u00cenregistrare\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class RegistrationModel\n    {\n        [Required(ErrorMessage = \"Acceptarea termenilor este obligatorie\")]\n        [Range(typeof(bool), \"true\", \"true\", ErrorMessage = \"Trebuie s\u0103 accepta\u021bi termenii\")]\n        public bool AcceptTerms { get; set; }\n    }\n\n    private RegistrationModel model = new();\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-tri-state-nullable","title":"Checkbox tri-state (nullable)","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"includeArchived\"\n              Label=\"Include documente arhivate\"\n              TriState=\"true\" /&gt;\n\n@code {\n    private bool? includeArchived = null; // null = toate, true = doar arhivate, false = f\u0103r\u0103 arhivate\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-pictograme-personalizate","title":"Checkbox cu pictograme personalizate","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"isFavorite\"\n              Label=\"Adaug\u0103 la favorite\"\n              CheckedIcon=\"@FodIcons.Material.Filled.Favorite\"\n              UncheckedIcon=\"@FodIcons.Material.Filled.FavoriteBorder\"\n              Color=\"FodColor.Error\" /&gt;\n\n@code {\n    private bool isFavorite = false;\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-culori-personalizate","title":"Checkbox cu culori personalizate","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"isEnabled\"\n              Label=\"Activat\"\n              Color=\"FodColor.Success\"\n              UnCheckedColor=\"FodColor.Error\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-in-mod-dense","title":"Checkbox \u00een mod dense","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"compactMode\"\n              Label=\"Afi\u0219are compact\u0103\"\n              Dense=\"true\"\n              Size=\"Size.Small\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-pozitionare-eticheta","title":"Checkbox cu pozi\u021bionare etichet\u0103","text":"<pre><code>&lt;!-- Etichet\u0103 la \u00eenceput (st\u00e2nga) --&gt;\n&lt;FodCheckBox2 @bind-Checked=\"leftLabel\"\n              Label=\"Etichet\u0103 la st\u00e2nga\"\n              LabelPosition=\"LabelPosition.Start\" /&gt;\n\n&lt;!-- Etichet\u0103 la sf\u00e2r\u0219it (dreapta) - implicit --&gt;\n&lt;FodCheckBox2 @bind-Checked=\"rightLabel\"\n              Label=\"Etichet\u0103 la dreapta\"\n              LabelPosition=\"LabelPosition.End\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-conversie-tip-personalizat","title":"Checkbox cu conversie tip personalizat","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"status\"\n              Label=\"Status activ\"\n              Converter=\"@(new StatusBoolConverter())\" /&gt;\n\n@code {\n    private string status = \"active\";\n\n    public class StatusBoolConverter : IBoolConverter&lt;string&gt;\n    {\n        public bool Convert(string value) =&gt; value == \"active\";\n        public string ConvertBack(bool value) =&gt; value ? \"active\" : \"inactive\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-in-componente-de-formular","title":"Checkbox \u00een componente de formular","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;!-- Checkbox standard \u00een formular --&gt;\n    &lt;FodInputCheckbox @bind-Value=\"model.IsActive\" /&gt;\n\n    &lt;!-- Checkbox inline cu etichet\u0103 automat\u0103 --&gt;\n    &lt;FodInlineCheckbox @bind-Value=\"model.ReceiveNotifications\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class FormModel\n    {\n        [Display(Name = \"Cont activ\")]\n        public bool IsActive { get; set; }\n\n        [Display(Name = \"Prime\u0219te notific\u0103ri\")]\n        public bool ReceiveNotifications { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-in-datatable-pentru-selectie-multipla","title":"Checkbox \u00een DataTable pentru selec\u021bie multipl\u0103","text":"<pre><code>&lt;FodDataTable Items=\"users\" MultiSelection=\"true\" @bind-SelectedItems=\"selectedUsers\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;\n                &lt;FodCheckBox2 @bind-Checked=\"selectAll\" TriState=\"true\" /&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;\n                &lt;FodCheckBox2 @bind-Checked=\"@context.IsSelected\" /&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Email&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#grupuri-de-checkbox-uri","title":"Grupuri de checkbox-uri","text":"<pre><code>&lt;div class=\"mb-3\"&gt;\n    &lt;label class=\"form-label\"&gt;Permisiuni utilizator&lt;/label&gt;\n    &lt;div class=\"d-flex flex-column gap-2\"&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"permissions.CanRead\" \n                      Label=\"Citire\" /&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"permissions.CanWrite\" \n                      Label=\"Scriere\" /&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"permissions.CanDelete\" \n                      Label=\"\u0218tergere\" \n                      Color=\"FodColor.Error\" /&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"permissions.IsAdmin\" \n                      Label=\"Administrator\" \n                      Color=\"FodColor.Warning\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private UserPermissions permissions = new();\n\n    public class UserPermissions\n    {\n        public bool CanRead { get; set; } = true;\n        public bool CanWrite { get; set; }\n        public bool CanDelete { get; set; }\n        public bool IsAdmin { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#checkbox-cu-stari-conditionate","title":"Checkbox cu st\u0103ri condi\u021bionate","text":"<pre><code>&lt;FodCheckBox2 @bind-Checked=\"enableAdvanced\"\n              Label=\"Op\u021biuni avansate\"\n              OnCheckedChanged=\"ToggleAdvancedOptions\" /&gt;\n\n@if (enableAdvanced)\n{\n    &lt;div class=\"mt-3\"&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"option1\" \n                      Label=\"Op\u021biune avansat\u0103 1\"\n                      Disabled=\"@(!enableAdvanced)\" /&gt;\n        &lt;FodCheckBox2 @bind-Checked=\"option2\" \n                      Label=\"Op\u021biune avansat\u0103 2\"\n                      Disabled=\"@(!enableAdvanced)\" /&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private bool enableAdvanced = false;\n    private bool option1 = false;\n    private bool option2 = false;\n\n    private void ToggleAdvancedOptions(bool value)\n    {\n        if (!value)\n        {\n            option1 = false;\n            option2 = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodCheckbox/#fodcheckbox2","title":"FodCheckBox2","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Checked</code> <code>T</code> Valoarea bifat\u0103 (generic) <code>default(T)</code> <code>CheckedChanged</code> <code>EventCallback&lt;T&gt;</code> Eveniment la schimbare - <code>Color</code> <code>FodColor</code> Culoarea c\u00e2nd este bifat <code>Default</code> <code>UnCheckedColor</code> <code>FodColor</code> Culoarea c\u00e2nd nu este bifat <code>Default</code> <code>Label</code> <code>string</code> Eticheta checkbox-ului <code>null</code> <code>LabelPosition</code> <code>LabelPosition</code> Pozi\u021bia etichetei (Start/End) <code>End</code> <code>Dense</code> <code>bool</code> Mod compact <code>false</code> <code>Size</code> <code>Size</code> Dimensiune (Small/Medium/Large) <code>Medium</code> <code>DisableRipple</code> <code>bool</code> Dezactiveaz\u0103 efectul ripple <code>false</code> <code>TriState</code> <code>bool</code> Activeaz\u0103 modul tri-state <code>false</code> <code>CheckedIcon</code> <code>string</code> Pictogram\u0103 personalizat\u0103 bifat <code>Check</code> <code>UncheckedIcon</code> <code>string</code> Pictogram\u0103 personalizat\u0103 nebifat <code>null</code> <code>IndeterminateIcon</code> <code>string</code> Pictogram\u0103 pentru stare nedeterminat\u0103 <code>IndeterminateMark</code> <code>KeyboardEnabled</code> <code>bool</code> Activeaz\u0103 controlul cu tastatura <code>true</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 checkbox-ul <code>false</code> <code>ReadOnly</code> <code>bool</code> Mod doar citire <code>false</code> <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code> <code>RequiredError</code> <code>string</code> Mesaj eroare pentru c\u00e2mp obligatoriu <code>\"Required\"</code> <code>Converter</code> <code>IBoolConverter&lt;T&gt;</code> Convertor personalizat <code>null</code> <code>StopClickPropagation</code> <code>bool</code> Opre\u0219te propagarea click-ului <code>false</code>"},{"location":"fod/componente/FodCheckbox/#fodcheckbox-legacy","title":"FodCheckbox (Legacy)","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>CheckboxType</code> <code>FodCheckboxType</code> Tip afi\u0219are (Checkbox/Radio/Switch) <code>Checkbox</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code> <code>Value</code> <code>bool</code> Valoarea checkbox-ului <code>false</code>"},{"location":"fod/componente/FodCheckbox/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>CheckedChanged</code> <code>EventCallback&lt;T&gt;</code> Se declan\u0219eaz\u0103 la schimbarea valorii <code>OnCheckedChanged</code> <code>EventCallback&lt;T&gt;</code> Callback adi\u021bional dup\u0103 schimbare"},{"location":"fod/componente/FodCheckbox/#5-suport-tastatura","title":"5. Suport tastatur\u0103","text":"Tast\u0103 Ac\u021biune <code>Space</code> Comut\u0103 starea checkbox-ului <code>Enter</code> / <code>NumpadEnter</code> Seteaz\u0103 la true <code>Delete</code> Seteaz\u0103 la false <code>Backspace</code> Seteaz\u0103 la null (doar \u00een TriState)"},{"location":"fod/componente/FodCheckbox/#6-componente-asociate","title":"6. Componente asociate","text":"<ul> <li>FodInputCheckbox - Wrapper pentru utilizare \u00een formulare</li> <li>FodInlineCheckbox - Checkbox inline cu etichet\u0103 automat\u0103</li> <li>FodBooleanInput - Clasa de baz\u0103 pentru input-uri boolean <li>IBoolConverter - Interfa\u021b\u0103 pentru conversii personalizate"},{"location":"fod/componente/FodCheckbox/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":"<pre><code>/* Personalizare checkbox */\n.fod-checkbox {\n    --fod-checkbox-size: 24px;\n    --fod-checkbox-color: var(--fod-primary);\n}\n\n/* Checkbox mai mare */\n.large-checkbox .fod-checkbox {\n    --fod-checkbox-size: 32px;\n}\n\n/* Checkbox cu anima\u021bie personalizat\u0103 */\n.animated-checkbox .fod-checkbox-input:checked + .fod-button-root {\n    animation: checkPulse 0.3s ease;\n}\n\n@keyframes checkPulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.2); }\n    100% { transform: scale(1); }\n}\n\n/* Stil pentru grupuri de checkbox-uri */\n.checkbox-group {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 16px;\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#8-validare-personalizata","title":"8. Validare personalizat\u0103","text":"<pre><code>&lt;EditForm EditContext=\"editContext\"&gt;\n    &lt;FodCheckBox2 @bind-Checked=\"model.HasReadTerms\"\n                  Label=\"Am citit termenii\"\n                  ValidationFunc=\"@ValidateTermsRead\" /&gt;\n\n    &lt;FodCheckBox2 @bind-Checked=\"model.AgreeToTerms\"\n                  Label=\"Sunt de acord cu termenii\"\n                  Disabled=\"@(!model.HasReadTerms)\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private EditContext editContext;\n\n    private string ValidateTermsRead(bool value)\n    {\n        if (!value &amp;&amp; model.AgreeToTerms)\n            return \"Nu pute\u021bi fi de acord f\u0103r\u0103 s\u0103 citi\u021bi termenii\";\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#9-integrare-cu-alte-componente","title":"9. Integrare cu alte componente","text":""},{"location":"fod/componente/FodCheckbox/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Set\u0103ri notific\u0103ri&lt;/FodText&gt;\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FodCheckBox2 @bind-Checked=\"settings.EmailNotifications\" \n                          Label=\"Notific\u0103ri email\" /&gt;\n            &lt;FodCheckBox2 @bind-Checked=\"settings.SmsNotifications\" \n                          Label=\"Notific\u0103ri SMS\" /&gt;\n            &lt;FodCheckBox2 @bind-Checked=\"settings.PushNotifications\" \n                          Label=\"Notific\u0103ri push\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#10-migrare-de-la-fodcheckbox-la-fodcheckbox2","title":"10. Migrare de la FodCheckbox la FodCheckBox2","text":"<pre><code>&lt;!-- Vechiul cod --&gt;\n&lt;FodCheckbox @bind-Value=\"isChecked\" CheckboxType=\"FodCheckboxType.Checkbox\" /&gt;\n\n&lt;!-- Cod nou --&gt;\n&lt;FodCheckBox2 @bind-Checked=\"isChecked\" /&gt;\n\n&lt;!-- Pentru switch, folosi\u021bi componenta dedicat\u0103 FodSwitch --&gt;\n&lt;FodSwitch @bind-Checked=\"isEnabled\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCheckbox/#11-note-si-observatii","title":"11. Note \u0219i observa\u021bii","text":"<ul> <li>FodCheckBox2 este componenta recomandat\u0103 pentru dezvolt\u0103ri noi</li> <li>Pentru c\u00e2mpuri obligatorii, doar valoarea <code>true</code> este considerat\u0103 valid\u0103</li> <li>TriState func\u021bioneaz\u0103 doar cu tipuri nullable (bool?)</li> <li>Convertorii personaliza\u021bi permit binding la orice tip de date</li> <li>Efectul ripple poate fi dezactivat pentru performan\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodCheckbox/#12-accesibilitate","title":"12. Accesibilitate","text":"<ul> <li>Suport complet ARIA</li> <li>Navigare cu tastatur\u0103</li> <li>Asociere corect\u0103 label-input</li> <li>Anun\u021buri pentru screen readers</li> <li>Contrast adecvat pentru toate st\u0103rile</li> </ul>"},{"location":"fod/componente/FodCheckbox/#13-bune-practici","title":"13. Bune practici","text":"<ol> <li>Etichete clare - Folosi\u021bi etichete descriptive</li> <li>Grupare logic\u0103 - Grupa\u021bi checkbox-urile conexe</li> <li>Feedback vizual - Folosi\u021bi culori pentru st\u0103ri importante</li> <li>Validare - Valida\u021bi la nivel de grup pentru op\u021biuni exclusive</li> <li>St\u0103ri intermediare - Folosi\u021bi TriState pentru \"selecteaz\u0103 toate\"</li> <li>Accesibilitate - Testa\u021bi cu navigare prin tastatur\u0103</li> </ol>"},{"location":"fod/componente/FodCheckbox/#14-troubleshooting","title":"14. Troubleshooting","text":""},{"location":"fod/componente/FodCheckbox/#checkbox-ul-nu-se-actualizeaza","title":"Checkbox-ul nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi binding-ul <code>@bind-Checked</code></li> <li>Asigura\u021bi-v\u0103 c\u0103 tipul T este consistent</li> </ul>"},{"location":"fod/componente/FodCheckbox/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Pentru Required, doar <code>true</code> este valid</li> <li>Folosi\u021bi Range validator pentru bool \u00een EditForm</li> </ul>"},{"location":"fod/componente/FodCheckbox/#tristate-nu-functioneaza","title":"TriState nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 tipul este nullable (bool?)</li> <li>Seta\u021bi explicit <code>TriState=\"true\"</code></li> </ul>"},{"location":"fod/componente/FodCheckbox/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodCheckBox2</code> ofer\u0103 o solu\u021bie modern\u0103 \u0219i complet\u0103 pentru input-uri checkbox, cu suport excelent pentru personalizare, validare \u0219i accesibilitate. Componenta acoper\u0103 toate scenariile de la checkbox-uri simple p\u00e2n\u0103 la sisteme complexe de selec\u021bie.</p>"},{"location":"fod/componente/FodChip/","title":"Chip","text":"<p>Documenta\u021bie \u2013 FodChip</p>"},{"location":"fod/componente/FodChip/#descriere","title":"Descriere","text":"<p><code>FodChip</code> sunt elemente compacte care permit utilizatorilor s\u0103 introduc\u0103 informa\u021bii, s\u0103 selecteze o op\u021biune, s\u0103 filtreze con\u021binutul sau s\u0103 declan\u0219eze o ac\u021biune. Pentru mai multe informa\u021bii despre seturi de chips, vezi <code>ChipSet</code>.</p>"},{"location":"fod/componente/FodChip/#proprietati","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere Valoare Implicit\u0103 Color <code>FodColor</code> Define\u0219te culoarea chip-ului. <code>FodColor.Default</code> Variant <code>FodVariant</code> Define\u0219te stilul chip-ului (Filled, Text, Outlined). <code>FodVariant.Filled</code> Disabled <code>bool</code> Dezactiveaz\u0103 componenta. <code>false</code> OnClose <code>EventCallback&lt;FodChip&gt;</code> Eveniment declan\u0219at la \u00eenchiderea chip-ului. <code>null</code> CloseIcon <code>string</code> Icon personalizat pentru butonul de \u00eenchidere. <code>null</code> Icon <code>string</code> Icon-ul afi\u0219at \u00een interiorul chip-ului. <code>null</code> IconColor <code>FodColor</code> Culoarea icon-ului afi\u0219at. <code>null</code> Label <code>bool</code> Seteaz\u0103 chip-ul ca etichet\u0103 rotunjit\u0103. <code>false</code> Size <code>FodSize</code> Define\u0219te dimensiunea chip-ului (Small, Medium, Large) <code>FodSize.Medium</code>"},{"location":"fod/componente/FodChip/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/componente/FodChip/#1-chips-cu-stil-filled","title":"1. Chips cu stil <code>Filled</code>","text":"<pre><code>&lt;FodChip&gt;Default&lt;/FodChip&gt;\n&lt;FodChip Color=\"FodColor.Primary\"&gt;Primary&lt;/FodChip&gt;\n&lt;FodChip Color=\"FodColor.Secondary\"&gt;Secondary&lt;/FodChip&gt;\n&lt;FodChip Color=\"FodColor.Warning\"&gt;Warning&lt;/FodChip&gt;\n&lt;FodChip Disabled=\"true\"&gt;Disabled&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodChip/#2-chips-cu-stil-text","title":"2. Chips cu stil <code>Text</code>","text":"<pre><code>&lt;FodChip Variant=\"FodVariant.Text\"&gt;Default&lt;/FodChip&gt;\n&lt;FodChip Variant=\"FodVariant.Text\" Color=\"FodColor.Primary\"&gt;Primary&lt;/FodChip&gt;\n&lt;FodChip Variant=\"FodVariant.Text\" Disabled=\"true\"&gt;Disabled&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodChip/#3-chips-cu-stil-outlined","title":"3. Chips cu stil <code>Outlined</code>","text":"<pre><code>&lt;FodChip Variant=\"FodVariant.Outlined\"&gt;Default&lt;/FodChip&gt;\n&lt;FodChip Variant=\"FodVariant.Outlined\" Color=\"FodColor.Info\"&gt;Info&lt;/FodChip&gt;\n&lt;FodChip Variant=\"FodVariant.Outlined\" Disabled=\"true\"&gt;Disabled&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodChip/#4-chips-care-pot-fi-inchise","title":"4. Chips care pot fi \u00eenchise","text":"<pre><code>&lt;FodChip Color=\"FodColor.Default\" OnClose=\"Closed\"&gt;Closable&lt;/FodChip&gt;\n&lt;FodChip Color=\"FodColor.Primary\" OnClose=\"Closed\" CloseIcon=\"@FodIcons.Material.Filled.AlarmAdd\"&gt;Closable&lt;/FodChip&gt;\n\n@code {\n    void Closed(FodChip chip) {\n        // react to chip closed\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodChip/#5-chips-cu-icoane","title":"5. Chips cu icoane","text":"<pre><code>&lt;FodChip Icon=\"@FodIcons.Material.Filled.Dangerous\" IconColor=\"FodColor.Error\"&gt;Error&lt;/FodChip&gt;\n&lt;FodChip Icon=\"@FodIcons.Material.Filled.Person\" Color=\"FodColor.Primary\"&gt;Account&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodChip/#6-chips-cu-etichete-labels","title":"6. Chips cu etichete (Labels)","text":"<pre><code>&lt;FodChip Label=\"true\"&gt;Default&lt;/FodChip&gt;\n&lt;FodChip Icon=\"@FodIcons.Custom.Brands.GitHub\" Label=\"true\" Color=\"FodColor.Primary\"&gt;GitHub&lt;/FodChip&gt;\n&lt;FodChip Icon=\"@FodIcons.Custom.Brands.Twitter\" Label=\"true\" Color=\"FodColor.Info\" OnClose=\"CloseChip\"&gt;New Tweets&lt;/FodChip&gt;\n\n@code {\n    void CloseChip() {\n        // Code..\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodChip/#7-dimensiuni-diferite","title":"7. Dimensiuni diferite","text":"<p>```razor Small Medium Large</p>"},{"location":"fod/componente/FodChipSet/","title":"ChipSet","text":"<p>Documenta\u021bie \u2013 FodChipSet</p>"},{"location":"fod/componente/FodChipSet/#descriere","title":"Descriere","text":"<p><code>FodChipSet</code> este utilizat pentru a crea grupuri de selec\u021bii folosind componente <code>FodChip</code>. Aceasta permite utilizatorilor s\u0103 selecteze una sau mai multe op\u021biuni, oferind suport pentru selec\u021bie unic\u0103 \u0219i selec\u021bie multipl\u0103. Pentru mai multe detalii despre utilizarea chip-urilor individuale, vezi <code>FodChip</code>.</p>"},{"location":"fod/componente/FodChipSet/#proprietati","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere Valoare Implicit\u0103 SelectedChip <code>FodChip</code> Reprezint\u0103 chip-ul selectat \u00een mod unic. <code>null</code> Filter <code>bool</code> Activeaz\u0103 filtrarea \u00een chipset. <code>false</code> Mandatory <code>bool</code> Dac\u0103 este <code>true</code>, un chip selectat nu poate fi deselectat. <code>false</code>"},{"location":"fod/componente/FodChipSet/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/componente/FodChipSet/#1-selectie-unica-cu-optiune-obligatorie","title":"1. Selec\u021bie unic\u0103 cu op\u021biune obligatorie","text":"<p>```razor  Default Primary Secondary Info Success Warning Error Dark </p>      @if (selected != null)     {         You selected the @selected.Text chip.     }     Mandatory <p>@code {     bool mandatory = true;     FodChip selected; }</p>"},{"location":"fod/componente/FodCollapse/","title":"Collapse","text":""},{"location":"fod/componente/FodCollapse/#documentatie-pentru-componenta-fodcollapse","title":"Documenta\u021bie pentru componenta FodCollapse","text":""},{"location":"fod/componente/FodCollapse/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodCollapse</code> este o component\u0103 care permite expandarea \u0219i restr\u00e2ngerea animat\u0103 a con\u021binutului. Ofer\u0103 tranzi\u021bii fluide cu durat\u0103 adaptiv\u0103 bazat\u0103 pe \u00een\u0103l\u021bimea con\u021binutului, fiind ideal\u0103 pentru meniuri, sec\u021biuni expandabile \u0219i orice con\u021binut care necesit\u0103 afi\u0219are/ascundere elegant\u0103.</p> <p>Caracteristici principale: - Anima\u021bii fluide de expandare/restr\u00e2ngere - Durat\u0103 anima\u021bie adaptiv\u0103 bazat\u0103 pe \u00een\u0103l\u021bime - M\u0103surare automat\u0103 a con\u021binutului - Suport pentru \u00een\u0103l\u021bime maxim\u0103 - Two-way binding pentru starea expandat\u0103 - Evenimente pentru sf\u00e2r\u0219itul anima\u021biei - Gestionare st\u0103ri de tranzi\u021bie - Performan\u021b\u0103 optimizat\u0103</p>"},{"location":"fod/componente/FodCollapse/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodCollapse/#collapse-simplu","title":"Collapse simplu","text":"<pre><code>&lt;FodButton OnClick=\"@(() =&gt; isExpanded = !isExpanded)\"&gt;\n    @(isExpanded ? \"Ascunde\" : \"Arat\u0103\") detalii\n&lt;/FodButton&gt;\n\n&lt;FodCollapse @bind-Expanded=\"isExpanded\"&gt;\n    &lt;FodPaper Class=\"pa-4 mt-3\"&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Acesta este con\u021binutul care poate fi expandat sau restr\u00e2ns.\n            Anima\u021bia se adapteaz\u0103 automat la \u00een\u0103l\u021bimea con\u021binutului.\n        &lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodCollapse&gt;\n\n@code {\n    private bool isExpanded = false;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#collapse-cu-continut-dinamic","title":"Collapse cu con\u021binut dinamic","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;div class=\"d-flex align-items-center justify-content-between\"&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Descriere produs&lt;/FodText&gt;\n            &lt;FodIconButton Icon=\"@(showDescription ? FodIcons.Material.Filled.ExpandLess : FodIcons.Material.Filled.ExpandMore)\"\n                           OnClick=\"@(() =&gt; showDescription = !showDescription)\" /&gt;\n        &lt;/div&gt;\n\n        &lt;FodCollapse @bind-Expanded=\"showDescription\"&gt;\n            &lt;FodText Typo=\"Typo.body2\" Class=\"mt-3\"&gt;\n                @productDescription\n            &lt;/FodText&gt;\n\n            @if (productFeatures.Any())\n            {\n                &lt;FodText Typo=\"Typo.subtitle2\" Class=\"mt-3\"&gt;Caracteristici:&lt;/FodText&gt;\n                &lt;FodList Dense=\"true\"&gt;\n                    @foreach (var feature in productFeatures)\n                    {\n                        &lt;FodListItem&gt;\n                            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                                     Color=\"FodColor.Success\" \n                                     Size=\"FodSize.Small\" \n                                     Class=\"me-2\" /&gt;\n                            @feature\n                        &lt;/FodListItem&gt;\n                    }\n                &lt;/FodList&gt;\n            }\n        &lt;/FodCollapse&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private bool showDescription = false;\n    private string productDescription = \"Descriere detaliat\u0103 a produsului...\";\n    private List&lt;string&gt; productFeatures = new() \n    { \n        \"Calitate superioar\u0103\",\n        \"Garan\u021bie extins\u0103\",\n        \"Livrare gratuit\u0103\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#faq-cu-collapse","title":"FAQ cu collapse","text":"<pre><code>&lt;div class=\"faq-section\"&gt;\n    &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n        \u00centreb\u0103ri frecvente\n    &lt;/FodText&gt;\n\n    @foreach (var (faq, index) in faqs.Select((f, i) =&gt; (f, i)))\n    {\n        &lt;FodPaper Class=\"mb-2\" Elevation=\"1\"&gt;\n            &lt;div class=\"pa-3 cursor-pointer\" @onclick=\"@(() =&gt; ToggleFaq(index))\"&gt;\n                &lt;div class=\"d-flex align-items-center justify-content-between\"&gt;\n                    &lt;FodText Typo=\"Typo.subtitle1\"&gt;@faq.Question&lt;/FodText&gt;\n                    &lt;FodIcon Icon=\"@(expandedFaqs.Contains(index) ? FodIcons.Material.Filled.Remove : FodIcons.Material.Filled.Add)\" /&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;FodCollapse Expanded=\"@expandedFaqs.Contains(index)\"&gt;\n                &lt;FodDivider /&gt;\n                &lt;div class=\"pa-3\"&gt;\n                    &lt;FodText Typo=\"Typo.body1\"&gt;@faq.Answer&lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/FodCollapse&gt;\n        &lt;/FodPaper&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private HashSet&lt;int&gt; expandedFaqs = new();\n    private List&lt;FaqItem&gt; faqs = new()\n    {\n        new() { Question = \"Ce este FOD?\", Answer = \"FOD este o bibliotec\u0103 de componente Blazor...\" },\n        new() { Question = \"Cum instalez FOD?\", Answer = \"Pute\u021bi instala FOD prin NuGet...\" },\n        new() { Question = \"Este FOD gratuit?\", Answer = \"Da, FOD este open source \u0219i gratuit...\" }\n    };\n\n    private void ToggleFaq(int index)\n    {\n        if (expandedFaqs.Contains(index))\n            expandedFaqs.Remove(index);\n        else\n            expandedFaqs.Add(index);\n    }\n\n    public class FaqItem\n    {\n        public string Question { get; set; }\n        public string Answer { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#collapse-cu-inaltime-maxima","title":"Collapse cu \u00een\u0103l\u021bime maxim\u0103","text":"<pre><code>&lt;FodCollapse @bind-Expanded=\"showComments\" MaxHeight=\"300\"&gt;\n    &lt;FodList&gt;\n        @foreach (var comment in comments)\n        {\n            &lt;FodListItem&gt;\n                &lt;FodListItemText Primary=\"@comment.Author\" \n                                 Secondary=\"@comment.Text\" /&gt;\n                &lt;FodListItemSecondaryAction&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;\n                        @comment.Date.ToString(\"dd.MM.yyyy\")\n                    &lt;/FodText&gt;\n                &lt;/FodListItemSecondaryAction&gt;\n            &lt;/FodListItem&gt;\n        }\n    &lt;/FodList&gt;\n&lt;/FodCollapse&gt;\n\n@if (comments.Count &gt; 5)\n{\n    &lt;FodButton Variant=\"FodVariant.Text\" \n               OnClick=\"@(() =&gt; showComments = !showComments)\"\n               Class=\"mt-2\"&gt;\n        @(showComments ? \"Ascunde\" : \"Vezi toate\") comentariile (@comments.Count)\n    &lt;/FodButton&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#filtre-avansate-cu-collapse","title":"Filtre avansate cu collapse","text":"<pre><code>&lt;div class=\"filters-section\"&gt;\n    &lt;div class=\"d-flex align-items-center justify-content-between mb-3\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Filtre&lt;/FodText&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" \n                   Size=\"FodSize.Small\"\n                   OnClick=\"@(() =&gt; showAdvancedFilters = !showAdvancedFilters)\"&gt;\n            @(showAdvancedFilters ? \"Ascunde\" : \"Arat\u0103\") filtre avansate\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Filtre de baz\u0103 \u00eentotdeauna vizibile --&gt;\n    &lt;FodTextField @bind-Value=\"searchTerm\" \n                  Label=\"Caut\u0103\"\n                  FullWidth=\"true\"\n                  Class=\"mb-3\" /&gt;\n\n    &lt;FodSelect @bind-Value=\"selectedCategory\" \n               Label=\"Categorie\"\n               FullWidth=\"true\"\n               Class=\"mb-3\"&gt;\n        @foreach (var category in categories)\n        {\n            &lt;FodSelectItem Value=\"@category\"&gt;@category&lt;/FodSelectItem&gt;\n        }\n    &lt;/FodSelect&gt;\n\n    &lt;!-- Filtre avansate \u00een collapse --&gt;\n    &lt;FodCollapse @bind-Expanded=\"showAdvancedFilters\" \n                 OnAnimationEnd=\"@(() =&gt; Console.WriteLine(\"Anima\u021bie complet\u0103\"))\"&gt;\n        &lt;FodDivider Class=\"mb-3\" /&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                &lt;FodTextField @bind-Value=\"minPrice\" \n                              Label=\"Pre\u021b minim\"\n                              Type=\"number\"\n                              FullWidth=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                &lt;FodTextField @bind-Value=\"maxPrice\" \n                              Label=\"Pre\u021b maxim\"\n                              Type=\"number\"\n                              FullWidth=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle2\" GutterBottom=\"true\"&gt;\n                    Evaluare minim\u0103\n                &lt;/FodText&gt;\n                &lt;FodRating @bind-SelectedValue=\"minRating\" /&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodCheckbox @bind-Checked=\"inStockOnly\"&gt;\n                    Doar produse \u00een stoc\n                &lt;/FodCheckbox&gt;\n                &lt;FodCheckbox @bind-Checked=\"freeShippingOnly\"&gt;\n                    Doar cu livrare gratuit\u0103\n                &lt;/FodCheckbox&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;div class=\"mt-3 d-flex gap-2\"&gt;\n            &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"ResetFilters\"&gt;\n                Reseteaz\u0103 filtre\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"ApplyFilters\"&gt;\n                Aplic\u0103 filtre\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/FodCollapse&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showAdvancedFilters = false;\n    private string searchTerm = \"\";\n    private string selectedCategory = \"\";\n    private decimal? minPrice;\n    private decimal? maxPrice;\n    private int minRating = 0;\n    private bool inStockOnly = false;\n    private bool freeShippingOnly = false;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#card-cu-sectiuni-collapse","title":"Card cu sec\u021biuni collapse","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Raport detaliat\n        &lt;/FodText&gt;\n\n        &lt;!-- Sec\u021biune sumar\u0103 \u00eentotdeauna vizibil\u0103 --&gt;\n        &lt;div class=\"summary-section mb-3\"&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\" sm=\"3\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;Total v\u00e2nz\u0103ri&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;\u20ac12,450&lt;/FodText&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\" sm=\"3\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;Comenzi&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;156&lt;/FodText&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\" sm=\"3\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;Clien\u021bi noi&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;23&lt;/FodText&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\" sm=\"3\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;Rat\u0103 conversie&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;3.2%&lt;/FodText&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Sec\u021biuni detaliate cu collapse --&gt;\n        @foreach (var section in reportSections)\n        {\n            &lt;div class=\"report-section mb-2\"&gt;\n                &lt;FodButton Variant=\"FodVariant.Text\" \n                           FullWidth=\"true\"\n                           Class=\"justify-content-between\"\n                           OnClick=\"@(() =&gt; ToggleSection(section.Id))\"&gt;\n                    &lt;span&gt;@section.Title&lt;/span&gt;\n                    &lt;FodIcon Icon=\"@(expandedSections.Contains(section.Id) ? \n                        FodIcons.Material.Filled.ExpandLess : \n                        FodIcons.Material.Filled.ExpandMore)\" /&gt;\n                &lt;/FodButton&gt;\n\n                &lt;FodCollapse Expanded=\"@expandedSections.Contains(section.Id)\"&gt;\n                    &lt;div class=\"pa-3\"&gt;\n                        @section.Content\n                    &lt;/div&gt;\n                &lt;/FodCollapse&gt;\n            &lt;/div&gt;\n            &lt;FodDivider /&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private HashSet&lt;string&gt; expandedSections = new();\n    private List&lt;ReportSection&gt; reportSections = new()\n    {\n        new() { Id = \"sales\", Title = \"Detalii v\u00e2nz\u0103ri\", Content = \"...\" },\n        new() { Id = \"products\", Title = \"Produse populare\", Content = \"...\" },\n        new() { Id = \"customers\", Title = \"Analiza clien\u021bilor\", Content = \"...\" }\n    };\n\n    private void ToggleSection(string sectionId)\n    {\n        if (expandedSections.Contains(sectionId))\n            expandedSections.Remove(sectionId);\n        else\n            expandedSections.Add(sectionId);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#navigation-menu-cu-collapse","title":"Navigation menu cu collapse","text":"<pre><code>&lt;FodList&gt;\n    @foreach (var menuItem in menuItems)\n    {\n        &lt;div&gt;\n            &lt;FodListItem Button=\"true\" \n                         OnClick=\"@(() =&gt; ToggleMenuItem(menuItem.Id))\"&gt;\n                &lt;FodListItemIcon&gt;\n                    &lt;FodIcon Icon=\"@menuItem.Icon\" /&gt;\n                &lt;/FodListItemIcon&gt;\n                &lt;FodListItemText Primary=\"@menuItem.Title\" /&gt;\n                @if (menuItem.Children.Any())\n                {\n                    &lt;FodIcon Icon=\"@(expandedMenuItems.Contains(menuItem.Id) ? \n                        FodIcons.Material.Filled.ExpandLess : \n                        FodIcons.Material.Filled.ExpandMore)\" /&gt;\n                }\n            &lt;/FodListItem&gt;\n\n            @if (menuItem.Children.Any())\n            {\n                &lt;FodCollapse Expanded=\"@expandedMenuItems.Contains(menuItem.Id)\"&gt;\n                    &lt;FodList DisablePadding=\"true\"&gt;\n                        @foreach (var child in menuItem.Children)\n                        {\n                            &lt;FodListItem Button=\"true\" \n                                         Class=\"ps-8\"\n                                         OnClick=\"@(() =&gt; NavigateTo(child.Url))\"&gt;\n                                &lt;FodListItemText Primary=\"@child.Title\" /&gt;\n                            &lt;/FodListItem&gt;\n                        }\n                    &lt;/FodList&gt;\n                &lt;/FodCollapse&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodCollapse/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Expanded</code> <code>bool</code> Starea curent\u0103 expandat\u0103/restr\u00e2ns\u0103 <code>false</code> <code>ExpandedChanged</code> <code>EventCallback&lt;bool&gt;</code> Eveniment pentru two-way binding - <code>MaxHeight</code> <code>int?</code> \u00cen\u0103l\u021bime maxim\u0103 \u00een pixeli <code>null</code> <code>OnAnimationEnd</code> <code>EventCallback</code> Eveniment la sf\u00e2r\u0219itul anima\u021biei - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul de expandat - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodCollapse/#4-stari-de-animatie","title":"4. St\u0103ri de anima\u021bie","text":"<p>Componenta gestioneaz\u0103 4 st\u0103ri: 1. Entering - \u00cencepe expandarea 2. Entered - Complet expandat 3. Exiting - \u00cencepe restr\u00e2ngerea 4. Exited - Complet restr\u00e2ns</p>"},{"location":"fod/componente/FodCollapse/#5-evenimente","title":"5. Evenimente","text":"Eveniment Descriere C\u00e2nd se declan\u0219eaz\u0103 <code>ExpandedChanged</code> Two-way binding pentru Expanded La schimbarea st\u0103rii <code>OnAnimationEnd</code> Sf\u00e2r\u0219itul anima\u021biei Dup\u0103 tranzi\u021bia complet\u0103"},{"location":"fod/componente/FodCollapse/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Anima\u021bie mai rapid\u0103 */\n.fast-collapse .fod-collapse-container {\n    transition-duration: 200ms !important;\n}\n\n/* Anima\u021bie mai lent\u0103 */\n.slow-collapse .fod-collapse-container {\n    transition-duration: 600ms !important;\n}\n\n/* Easing personalizat */\n.custom-collapse .fod-collapse-container {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Collapse cu background */\n.styled-collapse .fod-collapse-wrapper-inner {\n    background-color: var(--fod-palette-background-paper);\n    border: 1px solid var(--fod-palette-divider);\n    border-radius: 4px;\n    padding: 1rem;\n}\n\n/* Anima\u021bie doar pe \u00een\u0103l\u021bime */\n.height-only-collapse .fod-collapse-container {\n    transition-property: height !important;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodCollapse/#in-expansionpanel-custom","title":"\u00cen ExpansionPanel custom","text":"<pre><code>&lt;div class=\"custom-expansion-panel\"&gt;\n    &lt;div class=\"panel-header\" @onclick=\"Toggle\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;@Title&lt;/FodText&gt;\n        &lt;FodIcon Icon=\"@(isExpanded ? FodIcons.Material.Filled.ExpandLess : FodIcons.Material.Filled.ExpandMore)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodCollapse @bind-Expanded=\"isExpanded\"&gt;\n        &lt;div class=\"panel-content\"&gt;\n            @ChildContent\n        &lt;/div&gt;\n    &lt;/FodCollapse&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public string Title { get; set; }\n    [Parameter] public RenderFragment ChildContent { get; set; }\n\n    private bool isExpanded = false;\n\n    private void Toggle() =&gt; isExpanded = !isExpanded;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#in-treeview","title":"\u00cen TreeView","text":"<pre><code>@foreach (var node in treeNodes)\n{\n    &lt;div class=\"tree-node\"&gt;\n        &lt;div class=\"node-header\" @onclick=\"@(() =&gt; ToggleNode(node.Id))\"&gt;\n            @if (node.Children.Any())\n            {\n                &lt;FodIcon Icon=\"@(expandedNodes.Contains(node.Id) ? \n                    FodIcons.Material.Filled.FolderOpen : \n                    FodIcons.Material.Filled.Folder)\" /&gt;\n            }\n            else\n            {\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Description\" /&gt;\n            }\n            &lt;span class=\"ms-2\"&gt;@node.Name&lt;/span&gt;\n        &lt;/div&gt;\n\n        @if (node.Children.Any())\n        {\n            &lt;FodCollapse Expanded=\"@expandedNodes.Contains(node.Id)\"&gt;\n                &lt;div class=\"ps-4\"&gt;\n                    @* Recursiv pentru copii *@\n                &lt;/div&gt;\n            &lt;/FodCollapse&gt;\n        }\n    &lt;/div&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodCollapse/#show-moreless-pentru-text-lung","title":"Show more/less pentru text lung","text":"<pre><code>&lt;div class=\"content-preview\"&gt;\n    &lt;FodText Typo=\"Typo.body1\"&gt;\n        @(showFullContent ? fullText : GetPreviewText())\n    &lt;/FodText&gt;\n\n    &lt;FodCollapse Expanded=\"@showFullContent\"&gt;\n        &lt;FodText Typo=\"Typo.body1\" Class=\"mt-2\"&gt;\n            @GetRemainingText()\n        &lt;/FodText&gt;\n    &lt;/FodCollapse&gt;\n\n    &lt;FodButton Variant=\"FodVariant.Text\" \n               Size=\"FodSize.Small\"\n               OnClick=\"@(() =&gt; showFullContent = !showFullContent)\"&gt;\n        @(showFullContent ? \"Arat\u0103 mai pu\u021bin\" : \"Cite\u0219te mai mult\")\n    &lt;/FodButton&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showFullContent = false;\n    private string fullText = \"Text foarte lung...\";\n    private int previewLength = 200;\n\n    private string GetPreviewText() =&gt; \n        fullText.Length &gt; previewLength ? \n            fullText.Substring(0, previewLength) + \"...\" : \n            fullText;\n\n    private string GetRemainingText() =&gt; \n        fullText.Length &gt; previewLength ? \n            fullText.Substring(previewLength) : \n            \"\";\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Con\u021binutul este \u00eentotdeauna randat (doar ascuns vizual)</li> <li>Pentru con\u021binut greu, considera\u021bi randare condi\u021bionat\u0103</li> <li>Anima\u021bia folose\u0219te CSS transitions (hardware accelerated)</li> <li>M\u0103surarea \u00een\u0103l\u021bimii se face o singur\u0103 dat\u0103 per expandare</li> </ul> <pre><code>&lt;!-- Pentru con\u021binut greu --&gt;\n@if (isExpanded || hasBeenExpanded)\n{\n    &lt;FodCollapse Expanded=\"@isExpanded\"&gt;\n        &lt;HeavyComponent /&gt;\n    &lt;/FodCollapse&gt;\n}\n\n@code {\n    private bool hasBeenExpanded = false;\n    private bool _isExpanded;\n    private bool isExpanded \n    { \n        get =&gt; _isExpanded;\n        set\n        {\n            _isExpanded = value;\n            if (value) hasBeenExpanded = true;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Folosi\u021bi ARIA attributes pentru screen readers</li> <li>Indica\u021bi starea expandat\u0103/restr\u00e2ns\u0103</li> <li>Asigura\u021bi navigare cu tastatur\u0103</li> </ul> <pre><code>&lt;button @onclick=\"Toggle\" \n        aria-expanded=\"@isExpanded.ToString().ToLower()\"\n        aria-controls=\"collapse-content-@id\"&gt;\n    Toggle content\n&lt;/button&gt;\n\n&lt;FodCollapse @bind-Expanded=\"isExpanded\"&gt;\n    &lt;div id=\"collapse-content-@id\" role=\"region\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/div&gt;\n&lt;/FodCollapse&gt;\n</code></pre>"},{"location":"fod/componente/FodCollapse/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Feedback vizual - Indica\u021bi clar ce poate fi expandat</li> <li>Anima\u021bii fluide - Nu modifica\u021bi duration-ul implicit</li> <li>Con\u021binut consistent - Evita\u021bi schimb\u0103ri majore \u00een timpul anima\u021biei</li> <li>Loading states - Pentru con\u021binut asincron</li> <li>Max height - Pentru con\u021binut foarte lung</li> <li>Performan\u021b\u0103 - Lazy load pentru con\u021binut greu</li> </ol>"},{"location":"fod/componente/FodCollapse/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodCollapse/#animatia-nu-functioneaza","title":"Anima\u021bia nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 CSS-ul este \u00eenc\u0103rcat</li> <li>Verifica\u021bi consol\u0103 pentru erori JS</li> <li>Verifica\u021bi c\u0103 elementul are \u00een\u0103l\u021bime m\u0103surabil\u0103</li> </ul>"},{"location":"fod/componente/FodCollapse/#continutul-clipeste","title":"Con\u021binutul clipe\u0219te","text":"<ul> <li>Evita\u021bi schimb\u0103ri de stil \u00een timpul anima\u021biei</li> <li>Verifica\u021bi c\u0103 nu exist\u0103 CSS conflictual</li> <li>Folosi\u021bi <code>will-change: height</code> pentru optimizare</li> </ul>"},{"location":"fod/componente/FodCollapse/#inaltimea-nu-se-calculeaza-corect","title":"\u00cen\u0103l\u021bimea nu se calculeaz\u0103 corect","text":"<ul> <li>Asigura\u021bi-v\u0103 c\u0103 con\u021binutul este complet randat</li> <li>Evita\u021bi imagini f\u0103r\u0103 dimensiuni specificate</li> <li>Folosi\u021bi <code>OnAnimationEnd</code> pentru ac\u021biuni post-anima\u021bie</li> </ul>"},{"location":"fod/componente/FodCollapse/#13-limitari-cunoscute","title":"13. Limit\u0103ri cunoscute","text":"<ul> <li>Nu suport\u0103 anima\u021bii orizontale</li> <li>Con\u021binutul trebuie s\u0103 aib\u0103 \u00een\u0103l\u021bime determinabil\u0103</li> <li>Nu func\u021bioneaz\u0103 cu <code>display: none</code> pe p\u0103rinte</li> <li>Performan\u021b\u0103 redus\u0103 pentru &gt; 100 collapses simultane</li> </ul>"},{"location":"fod/componente/FodCollapse/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodCollapse/#collapse-orchestrat","title":"Collapse orchestrat","text":"<pre><code>&lt;div class=\"orchestrated-collapse\"&gt;\n    @foreach (var (item, index) in items.Select((x, i) =&gt; (x, i)))\n    {\n        &lt;div @key=\"item.Id\"&gt;\n            &lt;FodCollapse Expanded=\"@(currentIndex == index)\"\n                         OnAnimationEnd=\"@(() =&gt; OnItemAnimationEnd(index))\"&gt;\n                &lt;ItemContent Item=\"@item\" /&gt;\n            &lt;/FodCollapse&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private int currentIndex = 0;\n    private bool isAnimating = false;\n\n    private async Task ShowNext()\n    {\n        if (isAnimating || currentIndex &gt;= items.Count - 1) return;\n\n        isAnimating = true;\n        currentIndex++;\n        // A\u0219teapt\u0103 sf\u00e2r\u0219itul anima\u021biei prin OnAnimationEnd\n    }\n\n    private void OnItemAnimationEnd(int index)\n    {\n        if (index == currentIndex)\n        {\n            isAnimating = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCollapse/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodCollapse</code> ofer\u0103 o solu\u021bie elegant\u0103 pentru expandarea \u0219i restr\u00e2ngerea animat\u0103 a con\u021binutului. Cu anima\u021bii fluide adaptive, gestionare inteligent\u0103 a st\u0103rilor \u0219i integrare u\u0219oar\u0103, componenta este esen\u021bial\u0103 pentru crearea de interfe\u021be interactive \u0219i pl\u0103cute vizual \u00een aplica\u021bii Blazor.</p>"},{"location":"fod/componente/FodColumn/","title":"FodColumn","text":""},{"location":"fod/componente/FodColumn/#documentatie-pentru-componenta-fodcolumn","title":"Documenta\u021bie pentru componenta FodColumn","text":""},{"location":"fod/componente/FodColumn/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodColumn&lt;T&gt;</code> este componenta de baz\u0103 pentru definirea coloanelor \u00een <code>FodDataTable</code>. Ofer\u0103 suport pentru afi\u0219are, editare \u0219i formatare a datelor, cu moduri diferite de randare pentru header, con\u021binut, editare \u0219i footer.</p> <p>Caracteristici principale: - Suport pentru tipuri generice - Moduri multiple de randare (Header, Item, Edit, Footer) - Formatare personalizat\u0103 a datelor - Editare inline cu FodTextField - Suport pentru valori footer - Vizibilitate controlat\u0103 - Integrare automat\u0103 cu FodDataTable - Responsive cu data labels</p>"},{"location":"fod/componente/FodColumn/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodColumn/#coloane-simple-in-datatable","title":"Coloane simple \u00een DataTable","text":"<pre><code>&lt;FodDataTable Items=\"employees\" T=\"Employee\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Nume\" Value=\"@context.Name\" /&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Departament\" Value=\"@context.Department\" /&gt;\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Salariu\" Value=\"@context.Salary\" \n                   DataFormatString=\"{0:C}\" /&gt;\n        &lt;FodColumn T=\"DateTime\" HeaderText=\"Data angaj\u0103rii\" Value=\"@context.HireDate\" \n                   DataFormatString=\"{0:dd.MM.yyyy}\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;Employee&gt; employees = new();\n\n    public class Employee\n    {\n        public string Name { get; set; }\n        public string Department { get; set; }\n        public decimal Salary { get; set; }\n        public DateTime HireDate { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#coloane-cu-editare","title":"Coloane cu editare","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\" EditMode=\"DataEditMode.Cell\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Produs\" Value=\"@context.Name\" \n                   @bind-Value=\"context.Name\" /&gt;\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Pre\u021b\" Value=\"@context.Price\" \n                   @bind-Value=\"context.Price\"\n                   DataFormatString=\"{0:F2} MDL\" /&gt;\n        &lt;FodColumn T=\"int\" HeaderText=\"Stoc\" Value=\"@context.Stock\" \n                   @bind-Value=\"context.Stock\" /&gt;\n        &lt;FodColumn T=\"bool\" HeaderText=\"Activ\" Value=\"@context.IsActive\" \n                   @bind-Value=\"context.IsActive\"\n                   ReadOnly=\"true\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodColumn/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>T</code> Valoarea de afi\u0219at/editat - <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Callback pentru schimbarea valorii - <code>HeaderText</code> <code>string</code> Textul pentru header \u0219i data label - <code>FooterValue</code> <code>T</code> Valoarea pentru footer - <code>FooterText</code> <code>string</code> Text footer (c\u00e2nd FooterValue nu e setat) - <code>DataFormatString</code> <code>string</code> Format string pentru afi\u0219are - <code>ReadOnly</code> <code>bool</code> Dezactiveaz\u0103 editarea <code>false</code> <code>Visible</code> <code>bool</code> Controleaz\u0103 vizibilitatea coloanei <code>true</code>"},{"location":"fod/componente/FodColumn/#4-moduri-de-randare","title":"4. Moduri de Randare","text":"Mod Descriere Comportament <code>Header</code> Randare header Afi\u0219eaz\u0103 HeaderText \u00een FodTh <code>Item</code> Randare normal\u0103 Afi\u0219eaz\u0103 valoarea formatat\u0103 \u00een FodTd <code>Edit</code> Randare editare Afi\u0219eaz\u0103 FodTextField pentru editare <code>Footer</code> Randare footer Afi\u0219eaz\u0103 FooterValue sau FooterText"},{"location":"fod/componente/FodColumn/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodColumn/#coloane-cu-formatare-complexa","title":"Coloane cu formatare complex\u0103","text":"<pre><code>&lt;FodDataTable Items=\"orders\" T=\"Order\" ShowFooter=\"true\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Nr. Comand\u0103\" Value=\"@context.OrderNumber\" /&gt;\n\n        &lt;FodColumn T=\"DateTime\" HeaderText=\"Data\" Value=\"@context.OrderDate\" \n                   DataFormatString=\"{0:dd MMM yyyy HH:mm}\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Subtotal\" Value=\"@context.Subtotal\" \n                   DataFormatString=\"{0:N2} MDL\"\n                   FooterValue=\"@orders.Sum(o =&gt; o.Subtotal)\"\n                   FooterText=\"Total:\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"TVA\" Value=\"@context.Tax\" \n                   DataFormatString=\"{0:N2} MDL\"\n                   FooterValue=\"@orders.Sum(o =&gt; o.Tax)\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Total\" Value=\"@context.Total\" \n                   DataFormatString=\"{0:N2} MDL\"\n                   FooterValue=\"@orders.Sum(o =&gt; o.Total)\" /&gt;\n\n        &lt;FodColumn T=\"OrderStatus\" HeaderText=\"Status\" Value=\"@context.Status\" \n                   DataFormatString=\"{0}\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;Order&gt; orders = new();\n\n    public class Order\n    {\n        public string OrderNumber { get; set; }\n        public DateTime OrderDate { get; set; }\n        public decimal Subtotal { get; set; }\n        public decimal Tax { get; set; }\n        public decimal Total =&gt; Subtotal + Tax;\n        public OrderStatus Status { get; set; }\n    }\n\n    public enum OrderStatus\n    {\n        [Description(\"\u00cen a\u0219teptare\")]\n        Pending,\n        [Description(\"Procesare\")]\n        Processing,\n        [Description(\"Livrat\u0103\")]\n        Delivered,\n        [Description(\"Anulat\u0103\")]\n        Cancelled\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#coloane-conditional-vizibile","title":"Coloane condi\u021bional vizibile","text":"<pre><code>&lt;FodDataTable Items=\"users\" T=\"User\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Nume\" Value=\"@context.Name\" /&gt;\n\n        &lt;FodColumn T=\"string\" HeaderText=\"Email\" Value=\"@context.Email\" \n                   Visible=\"@showEmail\" /&gt;\n\n        &lt;FodColumn T=\"string\" HeaderText=\"Telefon\" Value=\"@context.Phone\" \n                   Visible=\"@showPhone\" /&gt;\n\n        &lt;FodColumn T=\"DateTime?\" HeaderText=\"Ultima autentificare\" \n                   Value=\"@context.LastLogin\" \n                   DataFormatString=\"{0:dd.MM.yyyy HH:mm}\"\n                   Visible=\"@showLoginInfo\" /&gt;\n\n        &lt;FodColumn T=\"bool\" HeaderText=\"Activ\" Value=\"@context.IsActive\" \n                   Visible=\"@showStatus\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n&lt;FodCheckbox @bind-Checked=\"showEmail\" Label=\"Arat\u0103 email\" /&gt;\n&lt;FodCheckbox @bind-Checked=\"showPhone\" Label=\"Arat\u0103 telefon\" /&gt;\n&lt;FodCheckbox @bind-Checked=\"showLoginInfo\" Label=\"Arat\u0103 info autentificare\" /&gt;\n&lt;FodCheckbox @bind-Checked=\"showStatus\" Label=\"Arat\u0103 status\" /&gt;\n\n@code {\n    private List&lt;User&gt; users = new();\n    private bool showEmail = true;\n    private bool showPhone = false;\n    private bool showLoginInfo = false;\n    private bool showStatus = true;\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#coloane-cu-editare-controlata","title":"Coloane cu editare controlat\u0103","text":"<pre><code>&lt;FodDataTable Items=\"inventory\" T=\"InventoryItem\" EditMode=\"DataEditMode.Cell\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Cod produs\" Value=\"@context.ProductCode\" \n                   ReadOnly=\"true\" /&gt;\n\n        &lt;FodColumn T=\"string\" HeaderText=\"Denumire\" Value=\"@context.Name\" \n                   @bind-Value=\"context.Name\"\n                   ReadOnly=\"@(!canEditNames)\" /&gt;\n\n        &lt;FodColumn T=\"int\" HeaderText=\"Cantitate\" Value=\"@context.Quantity\" \n                   @bind-Value=\"context.Quantity\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Pre\u021b unitar\" Value=\"@context.UnitPrice\" \n                   @bind-Value=\"context.UnitPrice\"\n                   DataFormatString=\"{0:F2}\"\n                   ReadOnly=\"@(!hasPermission)\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Valoare total\u0103\" \n                   Value=\"@(context.Quantity * context.UnitPrice)\" \n                   DataFormatString=\"{0:N2} MDL\"\n                   ReadOnly=\"true\"\n                   FooterValue=\"@inventory.Sum(i =&gt; i.Quantity * i.UnitPrice)\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;InventoryItem&gt; inventory = new();\n    private bool canEditNames = false;\n    private bool hasPermission = true;\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#coloane-cu-formate-personalizate","title":"Coloane cu formate personalizate","text":"<pre><code>&lt;FodDataTable Items=\"metrics\" T=\"PerformanceMetric\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"string\" HeaderText=\"Metric\" Value=\"@context.Name\" /&gt;\n\n        &lt;FodColumn T=\"double\" HeaderText=\"Valoare\" Value=\"@context.Value\" \n                   DataFormatString=\"@GetFormatString(context.Type)\" /&gt;\n\n        &lt;FodColumn T=\"double?\" HeaderText=\"Target\" Value=\"@context.Target\" \n                   DataFormatString=\"@GetFormatString(context.Type)\" /&gt;\n\n        &lt;FodColumn T=\"double\" HeaderText=\"Diferen\u021b\u0103\" \n                   Value=\"@(context.Target.HasValue ? context.Value - context.Target.Value : 0)\"\n                   DataFormatString=\"@GetDifferenceFormat(context.Type)\" /&gt;\n\n        &lt;FodColumn T=\"bool\" HeaderText=\"Atins\" \n                   Value=\"@(context.Target.HasValue &amp;&amp; context.Value &gt;= context.Target.Value)\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;PerformanceMetric&gt; metrics = new();\n\n    private string GetFormatString(MetricType type)\n    {\n        return type switch\n        {\n            MetricType.Percentage =&gt; \"{0:P2}\",\n            MetricType.Currency =&gt; \"{0:C}\",\n            MetricType.Count =&gt; \"{0:N0}\",\n            MetricType.Duration =&gt; \"{0:F2} min\",\n            _ =&gt; \"{0:F2}\"\n        };\n    }\n\n    private string GetDifferenceFormat(MetricType type)\n    {\n        return type switch\n        {\n            MetricType.Percentage =&gt; \"{0:+0.00;-0.00;0}%\",\n            MetricType.Currency =&gt; \"{0:+#,##0.00;-#,##0.00;0} MDL\",\n            _ =&gt; \"{0:+#,##0;-#,##0;0}\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#6-integrare-cu-datatable","title":"6. Integrare cu DataTable","text":""},{"location":"fod/componente/FodColumn/#in-modul-template","title":"\u00cen modul template","text":"<pre><code>&lt;FodDataTable Items=\"tasks\" T=\"Task\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodColumn T=\"string\" HeaderText=\"Task\" Mode=\"Rendermode.Header\" /&gt;\n            &lt;FodColumn T=\"string\" HeaderText=\"Asignat\" Mode=\"Rendermode.Header\" /&gt;\n            &lt;FodColumn T=\"DateTime\" HeaderText=\"Deadline\" Mode=\"Rendermode.Header\" /&gt;\n            &lt;FodColumn T=\"TaskStatus\" HeaderText=\"Status\" Mode=\"Rendermode.Header\" /&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodColumn T=\"string\" Value=\"@context.Title\" Mode=\"Rendermode.Item\" /&gt;\n            &lt;FodColumn T=\"string\" Value=\"@context.AssignedTo\" Mode=\"Rendermode.Item\" /&gt;\n            &lt;FodColumn T=\"DateTime\" Value=\"@context.Deadline\" \n                       Mode=\"Rendermode.Item\"\n                       DataFormatString=\"{0:dd.MM.yyyy}\" /&gt;\n            &lt;FodColumn T=\"TaskStatus\" Value=\"@context.Status\" Mode=\"Rendermode.Item\" /&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodColumn/#7-stilizare-si-teme","title":"7. Stilizare \u0219i Teme","text":"<pre><code>/* Coloane cu aliniere personalizat\u0103 */\n.number-column .fod-table-cell {\n    text-align: right;\n}\n\n/* Coloane cu l\u0103\u021bime fix\u0103 */\n.fixed-width-column {\n    width: 150px;\n    max-width: 150px;\n}\n\n/* Highlight pentru coloane importante */\n.important-column {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.05);\n    font-weight: 600;\n}\n\n/* Stil pentru coloane editabile */\n.editable-column:hover {\n    background-color: rgba(var(--fod-palette-info-rgb), 0.08);\n    cursor: pointer;\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#8-scenarii-comune","title":"8. Scenarii Comune","text":""},{"location":"fod/componente/FodColumn/#raport-financiar-cu-totale","title":"Raport financiar cu totale","text":"<pre><code>&lt;FodDataTable Items=\"transactions\" T=\"Transaction\" ShowFooter=\"true\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"DateTime\" HeaderText=\"Data\" Value=\"@context.Date\" \n                   DataFormatString=\"{0:dd.MM.yyyy}\" /&gt;\n\n        &lt;FodColumn T=\"string\" HeaderText=\"Descriere\" Value=\"@context.Description\" \n                   FooterText=\"Total:\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Debit\" Value=\"@context.DebitAmount\" \n                   DataFormatString=\"{0:N2}\"\n                   FooterValue=\"@transactions.Sum(t =&gt; t.DebitAmount)\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Credit\" Value=\"@context.CreditAmount\" \n                   DataFormatString=\"{0:N2}\"\n                   FooterValue=\"@transactions.Sum(t =&gt; t.CreditAmount)\" /&gt;\n\n        &lt;FodColumn T=\"decimal\" HeaderText=\"Balan\u021b\u0103\" \n                   Value=\"@GetBalance(context)\" \n                   DataFormatString=\"{0:N2}\"\n                   FooterValue=\"@GetFinalBalance()\" /&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;Transaction&gt; transactions = new();\n\n    private decimal GetBalance(Transaction transaction)\n    {\n        var index = transactions.IndexOf(transaction);\n        return transactions.Take(index + 1)\n            .Sum(t =&gt; t.CreditAmount - t.DebitAmount);\n    }\n\n    private decimal GetFinalBalance()\n    {\n        return transactions.Sum(t =&gt; t.CreditAmount - t.DebitAmount);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodColumn/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Tipuri clare - Specifica\u021bi \u00eentotdeauna tipul generic T</li> <li>Formatare consistent\u0103 - Folosi\u021bi DataFormatString pentru uniformitate</li> <li>HeaderText descriptiv - Pentru accesibilitate \u0219i data labels</li> <li>ReadOnly pentru calculat - Coloane calculate sunt \u00eentotdeauna read-only</li> <li>Footer pentru totale - Folosi\u021bi FooterValue pentru sume \u0219i agreg\u0103ri</li> <li>Performan\u021b\u0103 - Evita\u021bi calcule complexe \u00een DataFormatString</li> </ol>"},{"location":"fod/componente/FodColumn/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Calculele pentru footer se fac o singur\u0103 dat\u0103</li> <li>Formatarea se aplic\u0103 doar la randare</li> <li>Folosi\u021bi Visible pentru a ascunde coloane ne-necesare</li> <li>Evita\u021bi binding-uri complexe \u00een Value</li> </ul>"},{"location":"fod/componente/FodColumn/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>HeaderText devine data-label pe mobile</li> <li>Coloanele invizibile nu sunt randate \u00een DOM</li> <li>Suport pentru screen readers prin structura tabelar\u0103</li> </ul>"},{"location":"fod/componente/FodColumn/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodColumn/#valoarea-nu-se-actualizeaza","title":"Valoarea nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi @bind-Value pentru two-way binding</li> <li>Verifica\u021bi c\u0103 ReadOnly=\"false\" pentru editare</li> <li>Verifica\u021bi EditMode pe DataTable</li> </ul>"},{"location":"fod/componente/FodColumn/#formatarea-nu-functioneaza","title":"Formatarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi sintaxa DataFormatString</li> <li>Asigura\u021bi-v\u0103 c\u0103 tipul T suport\u0103 formatul</li> <li>Pentru enum-uri, implementa\u021bi ToString()</li> </ul>"},{"location":"fod/componente/FodColumn/#footer-nu-apare","title":"Footer nu apare","text":"<ul> <li>Verifica\u021bi ShowFooter=\"true\" pe DataTable</li> <li>Seta\u021bi FooterValue sau FooterText</li> <li>Verifica\u021bi c\u0103 Mode=\"Rendermode.Footer\"</li> </ul>"},{"location":"fod/componente/FodColumn/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodColumn&lt;T&gt;</code> ofer\u0103 o solu\u021bie flexibil\u0103 \u0219i tipizat\u0103 pentru definirea coloanelor \u00een tabelele FOD. Cu suport pentru formatare, editare \u0219i agreg\u0103ri, componenta faciliteaz\u0103 crearea de tabele complexe \u0219i interactive cu cod minimal \u0219i performan\u021b\u0103 optim\u0103.</p>"},{"location":"fod/componente/FodContainer/","title":"Container","text":""},{"location":"fod/componente/FodContainer/#documentatie-pentru-componenta-fodcontainer","title":"Documenta\u021bie pentru componenta FodContainer","text":""},{"location":"fod/componente/FodContainer/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodContainer</code> este o component\u0103 de layout care ofer\u0103 constr\u00e2ngeri responsive de l\u0103\u021bime maxim\u0103 \u0219i padding orizontal pentru con\u021binutul site-ului. Containerul centreaz\u0103 con\u021binutul orizontal \u0219i se adapteaz\u0103 la diferite dimensiuni de ecran, oferind o experien\u021b\u0103 consistent\u0103 pe toate dispozitivele.</p> <p>Componenta suport\u0103: - L\u0103\u021bime maxim\u0103 adaptiv\u0103 bazat\u0103 pe dimensiunea viewport-ului - Mod fix pentru dimensiuni predefinite - Diferite valori de l\u0103\u021bime maxim\u0103 (de la ExtraSmall la ExtraExtraLarge) - Op\u021biunea de a dezactiva complet l\u0103\u021bimea maxim\u0103</p>"},{"location":"fod/componente/FodContainer/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodContainer/#exemplu-de-utilizare-de-baza","title":"Exemplu de utilizare de baz\u0103","text":"<pre><code>&lt;FodContainer&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Con\u021binut centrat cu l\u0103\u021bime maxim\u0103 responsive&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodContainer/#container-cu-latime-fixa","title":"Container cu l\u0103\u021bime fix\u0103","text":"<pre><code>&lt;FodContainer Fixed=\"true\"&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Container cu l\u0103\u021bime fix\u0103 care se potrive\u0219te cu breakpoint-urile&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodContainer/#container-cu-diferite-dimensiuni-maxime","title":"Container cu diferite dimensiuni maxime","text":"<pre><code>&lt;!-- Container Extra Small --&gt;\n&lt;FodContainer MaxWidth=\"MaxWidth.ExtraSmall\"&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Container foarte mic (xs)&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n\n&lt;!-- Container Medium --&gt;\n&lt;FodContainer MaxWidth=\"MaxWidth.Medium\"&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Container mediu (md)&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n\n&lt;!-- Container Extra Large --&gt;\n&lt;FodContainer MaxWidth=\"MaxWidth.ExtraLarge\"&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Container extra mare (xl)&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodContainer/#container-fara-constrangeri-de-latime","title":"Container f\u0103r\u0103 constr\u00e2ngeri de l\u0103\u021bime","text":"<pre><code>&lt;FodContainer MaxWidth=\"MaxWidth.False\"&gt;\n    &lt;FodPaper Class=\"pa-4\"&gt;\n        &lt;FodText&gt;Container care ocup\u0103 toat\u0103 l\u0103\u021bimea disponibil\u0103&lt;/FodText&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodContainer/#container-cu-continut-complex","title":"Container cu con\u021binut complex","text":"<pre><code>&lt;FodContainer MaxWidth=\"MaxWidth.Large\"&gt;\n    &lt;FodGrid&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText&gt;Card 1&lt;/FodText&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText&gt;Card 2&lt;/FodText&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText&gt;Card 3&lt;/FodText&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodContainer/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Fixed</code> <code>bool</code> Seteaz\u0103 l\u0103\u021bimea maxim\u0103 s\u0103 se potriveasc\u0103 cu l\u0103\u021bimea minim\u0103 a breakpoint-ului curent. Util pentru design-uri cu dimensiuni fixe \u00een loc de viewport complet fluid. <code>false</code> <code>MaxWidth</code> <code>MaxWidth</code> Determin\u0103 l\u0103\u021bimea maxim\u0103 a containerului. Containerul cre\u0219te odat\u0103 cu dimensiunea ecranului. <code>MaxWidth.Large</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul copil al componentei. <code>null</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale pentru container. <code>null</code> <code>Style</code> <code>string</code> Stiluri CSS inline pentru container. <code>null</code>"},{"location":"fod/componente/FodContainer/#3-valori-disponibile-pentru-maxwidth","title":"3. Valori disponibile pentru MaxWidth","text":"Valoare Descriere Breakpoint CSS <code>MaxWidth.ExtraSmall</code> Container foarte mic <code>xs</code> <code>MaxWidth.Small</code> Container mic <code>sm</code> <code>MaxWidth.Medium</code> Container mediu <code>md</code> <code>MaxWidth.Large</code> Container mare (implicit) <code>lg</code> <code>MaxWidth.ExtraLarge</code> Container extra mare <code>xl</code> <code>MaxWidth.ExtraExtraLarge</code> Container foarte mare <code>xxl</code> <code>MaxWidth.False</code> F\u0103r\u0103 limit\u0103 de l\u0103\u021bime -"},{"location":"fod/componente/FodContainer/#4-note-si-observatii","title":"4. Note \u0219i observa\u021bii","text":"<ul> <li>Containerul este fluid \u00een mod implicit, adapt\u00e2ndu-se smooth la schimb\u0103rile de dimensiune ale viewport-ului</li> <li>C\u00e2nd <code>Fixed=\"true\"</code>, containerul folose\u0219te l\u0103\u021bimi fixe predefinite care se schimb\u0103 la anumite breakpoint-uri</li> <li>Pentru layout-uri full-width, folosi\u021bi <code>MaxWidth=\"MaxWidth.False\"</code></li> <li>Containerul adaug\u0103 automat padding orizontal pentru a preveni lipirea con\u021binutului de marginile ecranului</li> <li>Se recomand\u0103 utilizarea unui singur container principal per pagin\u0103, cu containere imbricate doar c\u00e2nd este necesar</li> </ul>"},{"location":"fod/componente/FodContainer/#5-concluzie","title":"5. Concluzie","text":"<p><code>FodContainer</code> este o component\u0103 esen\u021bial\u0103 pentru crearea layout-urilor responsive \u00een aplica\u021biile Blazor, oferind un control precis asupra l\u0103\u021bimii maxime a con\u021binutului \u0219i asigur\u00e2nd o experien\u021b\u0103 vizual\u0103 consistent\u0103 pe toate dispozitivele.</p>"},{"location":"fod/componente/FodContextCleaner/","title":"FodContextCleaner","text":""},{"location":"fod/componente/FodContextCleaner/#documentatie-pentru-componenta-fodcontextcleaner","title":"Documenta\u021bie pentru componenta FodContextCleaner","text":""},{"location":"fod/componente/FodContextCleaner/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodContextCleaner</code> este o component\u0103 util\u0103 pentru cur\u0103\u021barea datelor de context din aplica\u021bie. Aceast\u0103 component\u0103 invizibil\u0103 se execut\u0103 automat la ini\u021bializare \u0219i apeleaz\u0103 metoda <code>ClearData()</code> din serviciul <code>IContextService</code> pentru a \u0219terge datele de context stocate.</p> <p>Caracteristici principale: - Component\u0103 f\u0103r\u0103 UI (nu randeaz\u0103 nimic) - Execu\u021bie automat\u0103 la ini\u021bializare - Cur\u0103\u021b\u0103 datele de context stocate - Util\u0103 pentru logout sau resetare sesiune - Integrare simpl\u0103 cu IContextService</p>"},{"location":"fod/componente/FodContextCleaner/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodContextCleaner/#curatare-context-la-logout","title":"Cur\u0103\u021bare context la logout","text":"<pre><code>@page \"/logout\"\n\n&lt;FodContextCleaner /&gt;\n\n@code {\n    [Inject] private NavigationManager Navigation { get; set; }\n\n    protected override void OnAfterRender(bool firstRender)\n    {\n        if (firstRender)\n        {\n            // Redirec\u021bionare dup\u0103 cur\u0103\u021bare\n            Navigation.NavigateTo(\"/login\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#integrare-in-componente-wrapper","title":"Integrare \u00een componente wrapper","text":"<pre><code>@* LogoutHandler.razor *@\n&lt;FodContextCleaner /&gt;\n&lt;FodLoading IsLoading=\"true\"&gt;\n    &lt;p&gt;Se deconecteaz\u0103...&lt;/p&gt;\n&lt;/FodLoading&gt;\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#3-parametri","title":"3. Parametri","text":"<p>Componenta nu are parametri publici. Func\u021bionalitatea este complet automat\u0103.</p>"},{"location":"fod/componente/FodContextCleaner/#4-metode-si-evenimente","title":"4. Metode \u0219i Evenimente","text":"<p>Componenta nu expune metode publice sau evenimente. Toat\u0103 func\u021bionalitatea este intern\u0103.</p>"},{"location":"fod/componente/FodContextCleaner/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodContextCleaner/#componenta-de-logout-completa","title":"Component\u0103 de logout complet\u0103","text":"<pre><code>@page \"/auth/logout\"\n@layout EmptyLayout\n\n&lt;FodContextCleaner /&gt;\n\n&lt;div class=\"logout-container\"&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h5\" Align=\"FodAlign.Center\"&gt;\n                Deconectare \u00een curs...\n            &lt;/FodText&gt;\n            &lt;FodLoadingLinear Color=\"FodColor.Primary\" /&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/div&gt;\n\n@code {\n    [Inject] private IAuthenticationService AuthService { get; set; }\n    [Inject] private NavigationManager Navigation { get; set; }\n    [Inject] private ILocalStorageService LocalStorage { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            // Cur\u0103\u021bare adi\u021bional\u0103\n            await LocalStorage.RemoveItemAsync(\"authToken\");\n            await AuthService.Logout();\n\n            // Redirec\u021bionare\n            Navigation.NavigateTo(\"/\", true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#handler-pentru-schimbare-utilizator","title":"Handler pentru schimbare utilizator","text":"<pre><code>@* SwitchUserHandler.razor *@\n@if (isSwitching)\n{\n    &lt;FodContextCleaner /&gt;\n}\n\n&lt;FodButton OnClick=\"SwitchUser\" Disabled=\"@isSwitching\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.SwitchAccount\" /&gt;\n    Schimb\u0103 utilizatorul\n&lt;/FodButton&gt;\n\n@code {\n    private bool isSwitching = false;\n\n    private async Task SwitchUser()\n    {\n        isSwitching = true;\n        StateHasChanged();\n\n        // A\u0219teapt\u0103 cur\u0103\u021barea contextului\n        await Task.Delay(500);\n\n        // Navigheaz\u0103 la login\n        Navigation.NavigateTo(\"/login?switch=true\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#resetare-aplicatie","title":"Resetare aplica\u021bie","text":"<pre><code>@* AppReset.razor *@\n&lt;FodModal @bind-Visible=\"showResetModal\"&gt;\n    &lt;FodDialogTitle&gt;\n        Resetare aplica\u021bie\n    &lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        &lt;FodText&gt;\n            Aceast\u0103 ac\u021biune va \u0219terge toate datele locale \u0219i v\u0103 va deconecta.\n            Continua\u021bi?\n        &lt;/FodText&gt;\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodButton OnClick=\"CancelReset\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Error\" OnClick=\"ConfirmReset\"&gt;\n            Reseteaz\u0103\n        &lt;/FodButton&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodModal&gt;\n\n@if (isResetting)\n{\n    &lt;FodContextCleaner /&gt;\n    &lt;FodOverlay Visible=\"true\"&gt;\n        &lt;FodLoadingCircular /&gt;\n    &lt;/FodOverlay&gt;\n}\n\n@code {\n    private bool showResetModal = false;\n    private bool isResetting = false;\n\n    private async Task ConfirmReset()\n    {\n        showResetModal = false;\n        isResetting = true;\n        StateHasChanged();\n\n        // Cur\u0103\u021bare adi\u021bional\u0103\n        await LocalStorage.ClearAsync();\n        await SessionStorage.ClearAsync();\n\n        // Re\u00eenc\u0103rcare complet\u0103\n        await Task.Delay(1000);\n        Navigation.NavigateTo(\"/\", true);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/FodContextCleaner/#implementare-icontextservice","title":"Implementare IContextService","text":"<pre><code>public interface IContextService\n{\n    Task ClearData();\n    // alte metode...\n}\n\npublic class ContextService : IContextService\n{\n    private readonly ILocalStorageService _localStorage;\n    private readonly ISessionStorageService _sessionStorage;\n\n    public ContextService(\n        ILocalStorageService localStorage,\n        ISessionStorageService sessionStorage)\n    {\n        _localStorage = localStorage;\n        _sessionStorage = sessionStorage;\n    }\n\n    public async Task ClearData()\n    {\n        // Cur\u0103\u021bare date context\n        await _localStorage.RemoveItemAsync(\"currentContext\");\n        await _localStorage.RemoveItemAsync(\"userContexts\");\n        await _sessionStorage.RemoveItemAsync(\"contextCache\");\n\n        // Resetare state intern\n        CurrentContext = null;\n        AvailableContexts.Clear();\n\n        // Notificare listeners\n        ContextCleared?.Invoke(this, EventArgs.Empty);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#7-scenarii-de-utilizare","title":"7. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodContextCleaner/#timeout-sesiune","title":"Timeout sesiune","text":"<pre><code>@implements IDisposable\n\n&lt;FodLayout&gt;\n    @if (sessionExpired)\n    {\n        &lt;FodContextCleaner /&gt;\n        &lt;FodModal Visible=\"true\" DisableBackdropClick=\"true\"&gt;\n            &lt;FodDialogContent&gt;\n                Sesiunea a expirat. V\u0103 rug\u0103m s\u0103 v\u0103 autentifica\u021bi din nou.\n            &lt;/FodDialogContent&gt;\n        &lt;/FodModal&gt;\n    }\n\n    @ChildContent\n&lt;/FodLayout&gt;\n\n@code {\n    [Parameter] public RenderFragment ChildContent { get; set; }\n\n    private bool sessionExpired = false;\n    private Timer sessionTimer;\n\n    protected override void OnInitialized()\n    {\n        // Timer pentru 30 minute\n        sessionTimer = new Timer(OnSessionTimeout, null, \n            TimeSpan.FromMinutes(30), TimeSpan.FromMinutes(30));\n    }\n\n    private void OnSessionTimeout(object state)\n    {\n        sessionExpired = true;\n        InvokeAsync(StateHasChanged);\n\n        // Redirec\u021bionare dup\u0103 3 secunde\n        Task.Delay(3000).ContinueWith(_ =&gt; \n        {\n            Navigation.NavigateTo(\"/login\", true);\n        });\n    }\n\n    public void Dispose()\n    {\n        sessionTimer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#multi-tenant-switch","title":"Multi-tenant switch","text":"<pre><code>@* TenantSwitcher.razor *@\n&lt;FodSelect T=\"string\" \n           @bind-Value=\"selectedTenant\"\n           Label=\"Organiza\u021bie\"&gt;\n    @foreach (var tenant in availableTenants)\n    {\n        &lt;FodSelectItem Value=\"@tenant.Id\"&gt;\n            @tenant.Name\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@if (isSwitchingTenant)\n{\n    &lt;FodContextCleaner /&gt;\n    &lt;FodOverlay Visible=\"true\"&gt;\n        &lt;FodText&gt;Se schimb\u0103 organiza\u021bia...&lt;/FodText&gt;\n    &lt;/FodOverlay&gt;\n}\n\n@code {\n    private string selectedTenant;\n    private string currentTenant;\n    private bool isSwitchingTenant;\n    private List&lt;Tenant&gt; availableTenants;\n\n    protected override async Task OnParametersSetAsync()\n    {\n        if (selectedTenant != currentTenant &amp;&amp; !string.IsNullOrEmpty(selectedTenant))\n        {\n            isSwitchingTenant = true;\n            StateHasChanged();\n\n            // A\u0219teapt\u0103 cur\u0103\u021barea contextului\n            await Task.Delay(500);\n\n            // Seteaz\u0103 noul tenant\n            await TenantService.SetCurrentTenant(selectedTenant);\n            currentTenant = selectedTenant;\n\n            // Re\u00eencarc\u0103 aplica\u021bia\n            Navigation.NavigateTo(\"/\", true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Utilizare strategic\u0103 - Folosi\u021bi doar c\u00e2nd e necesar\u0103 cur\u0103\u021barea complet\u0103</li> <li>Combinare cu navigare - \u00centotdeauna naviga\u021bi dup\u0103 cur\u0103\u021bare</li> <li>Feedback vizual - Afi\u0219a\u021bi indicator de loading \u00een timpul cur\u0103\u021b\u0103rii</li> <li>Cur\u0103\u021bare complet\u0103 - Combina\u021bi cu alte metode de cur\u0103\u021bare</li> <li>Evitare loops - Nu plasa\u021bi \u00een componente care se re-randeaz\u0103 frecvent</li> </ol>"},{"location":"fod/componente/FodContextCleaner/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Execu\u021bie rapid\u0103 (&lt; 100ms \u00een general)</li> <li>Nu afecteaz\u0103 randarea UI</li> <li>Cur\u0103\u021bare asincron\u0103 pentru performan\u021b\u0103 optim\u0103</li> <li>F\u0103r\u0103 impact asupra memoriei</li> </ul>"},{"location":"fod/componente/FodContextCleaner/#10-debugging","title":"10. Debugging","text":"<p>Pentru a verifica func\u021bionarea:</p> <pre><code>// \u00cen ContextService\npublic async Task ClearData()\n{\n    Console.WriteLine(\"Context cleanup started\");\n\n    try\n    {\n        await _localStorage.RemoveItemAsync(\"currentContext\");\n        Console.WriteLine(\"Current context cleared\");\n\n        await _localStorage.RemoveItemAsync(\"userContexts\");\n        Console.WriteLine(\"User contexts cleared\");\n\n        // etc.\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine($\"Context cleanup error: {ex.Message}\");\n    }\n\n    Console.WriteLine(\"Context cleanup completed\");\n}\n</code></pre>"},{"location":"fod/componente/FodContextCleaner/#11-consideratii-de-securitate","title":"11. Considera\u021bii de Securitate","text":"<ol> <li>Cur\u0103\u021bare complet\u0103 - Asigura\u021bi \u0219tergerea tuturor datelor sensibile</li> <li>Token cleanup - Include\u021bi \u0219tergerea token-urilor de autentificare</li> <li>Cache cleanup - Cur\u0103\u021ba\u021bi toate cache-urile locale</li> <li>Navigation forcing - Folosi\u021bi <code>forceLoad: true</code> pentru re\u00eenc\u0103rcare complet\u0103</li> </ol>"},{"location":"fod/componente/FodContextCleaner/#12-alternative","title":"12. Alternative","text":"<p>Pentru scenarii specifice, considera\u021bi: - <code>IContextService.ClearData()</code> - Apel direct pentru control mai fin - Manual cleanup - Pentru cur\u0103\u021bare selectiv\u0103 - Browser refresh - Pentru resetare complet\u0103 (<code>location.reload()</code>)</p>"},{"location":"fod/componente/FodContextCleaner/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodContextCleaner</code> este o component\u0103 simpl\u0103 dar esen\u021bial\u0103 pentru gestionarea corect\u0103 a st\u0103rii aplica\u021biei \u00een scenarii de logout, schimbare utilizator sau resetare. Prin integrarea sa transparent\u0103 cu <code>IContextService</code>, ofer\u0103 o metod\u0103 consistent\u0103 \u0219i fiabil\u0103 de cur\u0103\u021bare a datelor de context.</p>"},{"location":"fod/componente/FodContextProvider/","title":"FodContextProvider","text":""},{"location":"fod/componente/FodContextProvider/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodContextProvider</code> este un wrapper simplu care \u00eencapsuleaz\u0103 componenta <code>FodContextSelector</code>. Ofer\u0103 o interfa\u021b\u0103 simplificat\u0103 pentru includerea func\u021bionalit\u0103\u021bii de selectare a contextului \u00een aplica\u021bii, abstractiz\u00e2nd complexitatea implement\u0103rii.</p>"},{"location":"fod/componente/FodContextProvider/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodContextProvider/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodContextProvider /&gt;\n</code></pre>"},{"location":"fod/componente/FodContextProvider/#integrare-in-layout-aplicatie","title":"Integrare \u00een layout aplica\u021bie","text":"<pre><code>@inherits LayoutComponentBase\n\n&lt;div class=\"page\"&gt;\n    &lt;FodContextProvider /&gt;\n\n    &lt;div class=\"main\"&gt;\n        &lt;FodHeader /&gt;\n\n        &lt;div class=\"content px-4\"&gt;\n            @Body\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodContextProvider/#in-componenta-apprazor","title":"\u00cen componenta App.razor","text":"<pre><code>&lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n    &lt;Found Context=\"routeData\"&gt;\n        &lt;FodContextProvider /&gt;\n        &lt;RouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(MainLayout)\" /&gt;\n    &lt;/Found&gt;\n    &lt;NotFound&gt;\n        &lt;PageTitle&gt;Not found&lt;/PageTitle&gt;\n        &lt;LayoutView Layout=\"@typeof(MainLayout)\"&gt;\n            &lt;p role=\"alert\"&gt;Sorry, there's nothing at this address.&lt;/p&gt;\n        &lt;/LayoutView&gt;\n    &lt;/NotFound&gt;\n&lt;/Router&gt;\n</code></pre>"},{"location":"fod/componente/FodContextProvider/#atribute-disponibile","title":"Atribute disponibile","text":"<p>Componenta nu expune atribute publice. Toate configur\u0103rile sunt gestionate intern prin <code>FodContextSelector</code>.</p>"},{"location":"fod/componente/FodContextProvider/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice.</p>"},{"location":"fod/componente/FodContextProvider/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodContextProvider/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodContextSelector - Componenta intern\u0103 care gestioneaz\u0103 \u00eentreaga logic\u0103 de selectare context</li> <li>IContextService - Serviciul utilizat pentru gestionarea contextelor</li> </ul>"},{"location":"fod/componente/FodContextProvider/#stilizare","title":"Stilizare","text":"<p>Componenta nu adaug\u0103 stiluri proprii. Toate stilurile sunt gestionate de <code>FodContextSelector</code>.</p>"},{"location":"fod/componente/FodContextProvider/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Wrapper component - Aceast\u0103 component\u0103 serve\u0219te doar ca punct de intrare</li> <li>Delegare complet\u0103 - Toat\u0103 func\u021bionalitatea este delegat\u0103 c\u0103tre FodContextSelector</li> <li>Simplificare API - Ofer\u0103 o interfa\u021b\u0103 mai simpl\u0103 pentru dezvoltatori</li> </ol>"},{"location":"fod/componente/FodContextProvider/#bune-practici","title":"Bune practici","text":"<ol> <li>Plasare strategic\u0103 - Include\u021bi \u00een layout-ul principal sau App.razor</li> <li>O singur\u0103 instan\u021b\u0103 - Folosi\u021bi doar o instan\u021b\u0103 per aplica\u021bie</li> <li>Servicii necesare - Asigura\u021bi-v\u0103 c\u0103 IContextService este \u00eenregistrat \u00een DI</li> </ol>"},{"location":"fod/componente/FodContextProvider/#concluzie","title":"Concluzie","text":"<p>FodContextProvider ofer\u0103 o modalitate simpl\u0103 de a integra func\u021bionalitatea de selectare a contextului \u00een aplica\u021bii. Prin abstractizarea complexit\u0103\u021bii \u00een FodContextSelector, dezvoltatorii pot ad\u0103uga aceast\u0103 func\u021bionalitate cu minim de configurare.</p>"},{"location":"fod/componente/FodContextSelector/","title":"FodContextSelector","text":""},{"location":"fod/componente/FodContextSelector/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodContextSelector</code> gestioneaz\u0103 selectarea \u0219i schimbarea contextului utilizatorului \u00een aplica\u021biile guvernamentale. Permite utilizatorilor s\u0103 comute \u00eentre diferite roluri (persoan\u0103 fizic\u0103, organiza\u021bie, operator CUPS) \u0219i afi\u0219eaz\u0103 un modal de selec\u021bie c\u00e2nd este necesar s\u0103 aleag\u0103 un context.</p> <p>Componenta suport\u0103 mai multe tipuri de contexte: - Individual - Persoan\u0103 fizic\u0103 cu IDNP - Organization - Persoan\u0103 juridic\u0103 cu IDNO - CUPSOperator - Operator al Centrului Unic de Prestare a Serviciilor - System - Context de sistem</p>"},{"location":"fod/componente/FodContextSelector/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodContextSelector/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodContextSelector /&gt;\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#cu-parametru-cascading","title":"Cu parametru cascading","text":"<pre><code>&lt;CascadingValue Name=\"ApplicationModel\" Value=\"@appModel\"&gt;\n    &lt;FodContextSelector /&gt;\n&lt;/CascadingValue&gt;\n\n@code {\n    private ApplicationModel appModel = new();\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#integrare-in-aplicatie","title":"Integrare \u00een aplica\u021bie","text":"<pre><code>@* \u00cen MainLayout.razor *@\n@inherits LayoutComponentBase\n\n&lt;div class=\"page\"&gt;\n    &lt;FodContextSelector /&gt;\n\n    &lt;div class=\"sidebar\"&gt;\n        &lt;NavMenu /&gt;\n    &lt;/div&gt;\n\n    &lt;main&gt;\n        &lt;FodHeader /&gt;\n\n        &lt;div class=\"content\"&gt;\n            @Body\n        &lt;/div&gt;\n    &lt;/main&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#declansare-manuala-a-schimbarii-contextului","title":"Declan\u0219are manual\u0103 a schimb\u0103rii contextului","text":"<pre><code>@inject IContextService contextService\n\n&lt;FodButton OnClick=\"RequestContextChange\"&gt;\n    Schimb\u0103 Rolul\n&lt;/FodButton&gt;\n\n&lt;FodContextSelector /&gt;\n\n@code {\n    private void RequestContextChange()\n    {\n        // Declan\u0219eaz\u0103 evenimentul care va afi\u0219a selectorul\n        contextService.RequestContextChange();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Descriere ApplicationModel ApplicationModel Model cascading cu datele aplica\u021biei"},{"location":"fod/componente/FodContextSelector/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice, dar ascult\u0103 evenimentul <code>ChangeContextRequested</code> din <code>IContextService</code>.</p>"},{"location":"fod/componente/FodContextSelector/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodContextSelector/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodModal - Pentru afi\u0219area selectorului de context</li> <li>FodButton - Pentru ac\u021biunea de continuare</li> <li>FodIcon - Pentru iconi\u021bele tipurilor de context</li> <li>FodText - Pentru formatarea textului</li> <li>IContextService - Serviciul pentru gestionarea contextelor</li> </ul>"},{"location":"fod/componente/FodContextSelector/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodContextSelector/#structura-modalului","title":"Structura modalului","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        [Icon]                       \u2502\n\u2502     Ion Popescu                     \u2502\n\u2502   Persoan\u0103 fizic\u0103                   \u2502\n\u2502   IDNP: 2000000000000              \u2502\n\u2502                                     \u2502\n\u2502     [Continu\u0103]                      \u2502\n\u2502                                     \u2502\n\u2502   Alege alt rol:                    \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2502 [Icon] Compania SRL              \u2502 \u2502\n\u2502 \u2502        IDNO: 1234567890          \u2502 \u2502\n\u2502 \u2502        Administrator             \u2502 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#clase-css-utilizate","title":"Clase CSS utilizate","text":"<ul> <li><code>.profile-icon</code> - Container pentru iconi\u021ba profilului curent</li> <li><code>.select-context</code> - Text pentru sec\u021biunea de selec\u021bie</li> <li><code>.role</code> - Container pentru fiecare rol disponibil</li> <li><code>.role-icon-container</code> - Container pentru iconi\u021ba rolului</li> <li><code>.role-icon</code> - Iconi\u021ba specific\u0103 tipului de rol</li> <li><code>.role-description</code> - Detaliile rolului</li> <li><code>.role-name</code> - Numele entit\u0103\u021bii</li> <li><code>.role-idn</code> - IDNP/IDNO</li> <li><code>.role-title</code> - Func\u021bia/rolul</li> </ul>"},{"location":"fod/componente/FodContextSelector/#personalizare","title":"Personalizare","text":"<pre><code>/* Stilizare container rol */\n.role {\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n    padding: 1rem;\n    margin: 0.5rem 0;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.role:hover {\n    background-color: #f5f5f5;\n    border-color: var(--fod-primary);\n}\n\n/* Iconi\u021be pentru tipuri de context */\n.role-icon {\n    background-color: var(--fod-primary-light);\n    border-radius: 50%;\n    padding: 0.5rem;\n}\n\n/* Formatare informa\u021bii rol */\n.role-description {\n    text-align: left;\n    margin-left: 1rem;\n}\n\n.role-name {\n    font-weight: bold;\n    color: #333;\n}\n\n.role-idn {\n    color: #666;\n    font-size: 0.9rem;\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Query parameter - Suport\u0103 parametrul <code>outside-context</code> pentru setare extern\u0103</li> <li>Selec\u021bie obligatorie - Se afi\u0219eaz\u0103 automat c\u00e2nd este necesar\u0103 selec\u021bia</li> <li>Persisten\u021b\u0103 - Contextul selectat este salvat pentru sesiunea curent\u0103</li> <li>Refresh la schimbare - Pagina se re\u00eencarc\u0103 dup\u0103 selectarea unui nou context</li> <li>Context exclus - Contextul curent nu apare \u00een lista de selec\u021bie</li> </ol>"},{"location":"fod/componente/FodContextSelector/#bune-practici","title":"Bune practici","text":"<ol> <li>O singur\u0103 instan\u021b\u0103 - Include\u021bi componenta o singur\u0103 dat\u0103 \u00een aplica\u021bie</li> <li>Layout principal - Plasa\u021bi \u00een MainLayout sau App.razor</li> <li>Servicii necesare - Asigura\u021bi \u00eenregistrarea IContextService \u00een DI</li> <li>Gestionare st\u0103ri - Trata\u021bi cazurile c\u00e2nd nu exist\u0103 contexte disponibile</li> <li>Loading state - Componenta gestioneaz\u0103 automat starea de \u00eenc\u0103rcare</li> <li>Deep linking - Suport\u0103 setarea contextului prin URL</li> </ol>"},{"location":"fod/componente/FodContextSelector/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/FodContextSelector/#verificare-context-curent","title":"Verificare context curent","text":"<pre><code>@inject IContextService contextService\n\n@if (currentContext != null)\n{\n    &lt;div class=\"current-context\"&gt;\n        &lt;span&gt;Context activ: @currentContext.ContextName&lt;/span&gt;\n        &lt;span&gt;Tip: @currentContext.ContextType&lt;/span&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentContext = await contextService.GetCurrent();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#fortare-selectie-context","title":"For\u021bare selec\u021bie context","text":"<pre><code>@inject IContextService contextService\n\nprotected override async Task OnInitializedAsync()\n{\n    // Verific\u0103 dac\u0103 pagina necesit\u0103 un context specific\n    if (RequiresOrganizationContext())\n    {\n        var current = await contextService.GetCurrent();\n        if (current?.ContextType != UserContextType.Organization)\n        {\n            contextService.RequestContextChange();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelector/#concluzie","title":"Concluzie","text":"<p>FodContextSelector ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea contextelor multiple ale utilizatorilor. Cu suport pentru diferite tipuri de entit\u0103\u021bi, interfa\u021b\u0103 intuitiv\u0103 \u0219i integrare perfect\u0103 cu serviciile de autentificare, componenta faciliteaz\u0103 navigarea \u00eentre roluri \u00een aplica\u021biile guvernamentale complexe.</p>"},{"location":"fod/componente/FodContextSelectorCard/","title":"FodContextSelectorCard","text":""},{"location":"fod/componente/FodContextSelectorCard/#documentatie-pentru-componenta-fodcontextselectorcard","title":"Documenta\u021bie pentru componenta FodContextSelectorCard","text":""},{"location":"fod/componente/FodContextSelectorCard/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodContextSelectorCard</code> este o component\u0103 card specializat\u0103 pentru selectarea contextului utilizatorului \u00een aplica\u021biile guvernamentale. Permite utilizatorilor s\u0103 comute \u00eentre diferite roluri sau contexte (persoan\u0103 fizic\u0103, organiza\u021bie, operator CUPS, sistem) \u00eentr-o interfa\u021b\u0103 intuitiv\u0103 de tip card.</p> <p>Caracteristici principale: - Afi\u0219are context curent \u00een header - List\u0103 de contexte disponibile pentru comutare - Iconi\u021be distinctive pentru tipuri de context - Integrare cu IContextService - Re\u00eenc\u0103rcare automat\u0103 dup\u0103 schimbare - Suport pentru multiple tipuri de utilizatori - Design card cu header \u0219i body personalizabile</p>"},{"location":"fod/componente/FodContextSelectorCard/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodContextSelectorCard/#selector-simplu-de-context","title":"Selector simplu de context","text":"<pre><code>&lt;FodContextSelectorCard /&gt;\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#selector-cu-clase-personalizate","title":"Selector cu clase personalizate","text":"<pre><code>&lt;FodContextSelectorCard HeaderClass=\"custom-header\" \n                        BodyClass=\"custom-body\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>HeaderClass</code> <code>string</code> Clase CSS pentru header - <code>BodyClass</code> <code>string</code> Clase CSS pentru body -"},{"location":"fod/componente/FodContextSelectorCard/#4-tipuri-de-context-suportate","title":"4. Tipuri de Context Suportate","text":""},{"location":"fod/componente/FodContextSelectorCard/#individual-persoana-fizica","title":"Individual (Persoan\u0103 fizic\u0103)","text":"<ul> <li>Iconi\u021b\u0103: Person</li> <li>Afi\u0219eaz\u0103: Nume, IDNP</li> <li>Rol: \"Persoan\u0103 fizic\u0103\"</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#organization-persoana-juridica","title":"Organization (Persoan\u0103 juridic\u0103)","text":"<ul> <li>Iconi\u021b\u0103: Business</li> <li>Afi\u0219eaz\u0103: Denumire organiza\u021bie, IDNO</li> <li>Rol: Rol specific \u00een organiza\u021bie</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#cupsoperator","title":"CUPSOperator","text":"<ul> <li>Iconi\u021b\u0103: HowToReg</li> <li>Afi\u0219eaz\u0103: Nume operator</li> <li>Rol: \"Operator CUPS\"</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#system","title":"System","text":"<ul> <li>Iconi\u021b\u0103: HowToReg</li> <li>Afi\u0219eaz\u0103: Nume sistem</li> <li>Rol: Rol \u00een sistem</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodContextSelectorCard/#integrare-in-layout-aplicatie","title":"Integrare \u00een layout aplica\u021bie","text":"<pre><code>@page \"/dashboard\"\n\n&lt;div class=\"container-fluid\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-lg-3\"&gt;\n            &lt;FodContextSelectorCard /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-lg-9\"&gt;\n            @if (currentContext != null)\n            {\n                &lt;h3&gt;Bun venit, @currentContext.ContextName!&lt;/h3&gt;\n                &lt;!-- Con\u021binut specific contextului --&gt;\n                @switch (currentContext.ContextType)\n                {\n                    case UserContextType.Individual:\n                        &lt;IndividualDashboard /&gt;\n                        break;\n                    case UserContextType.Organization:\n                        &lt;OrganizationDashboard /&gt;\n                        break;\n                    case UserContextType.CUPSOperator:\n                        &lt;OperatorDashboard /&gt;\n                        break;\n                }\n            }\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    [Inject] private IContextService contextService { get; set; }\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentContext = await contextService.GetCurrent();\n        contextService.ContextChanged += OnContextChanged;\n    }\n\n    private void OnContextChanged(object sender, UserContext context)\n    {\n        currentContext = context;\n        InvokeAsync(StateHasChanged);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#declansare-schimbare-context-programatic","title":"Declan\u0219are schimbare context programatic","text":"<pre><code>&lt;FodButton OnClick=\"RequestContextChange\"&gt;\n    Schimb\u0103 contextul\n&lt;/FodButton&gt;\n\n&lt;FodContextSelectorCard @ref=\"contextSelector\" /&gt;\n\n@code {\n    [Inject] private IContextService contextService { get; set; }\n    private FodContextSelectorCard contextSelector;\n\n    private void RequestContextChange()\n    {\n        // Declan\u0219eaz\u0103 evenimentul pentru afi\u0219area selectorului\n        contextService.RequestContextChangeCard();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#personalizare-vizuala","title":"Personalizare vizual\u0103","text":"<pre><code>&lt;FodContextSelectorCard HeaderClass=\"bg-primary text-white\" \n                        BodyClass=\"p-4\" /&gt;\n\n&lt;style&gt;\n    /* Header personalizat */\n    .card-header-context.bg-primary {\n        background: linear-gradient(135deg, \n            var(--fod-palette-primary-dark) 0%, \n            var(--fod-palette-primary-main) 100%) !important;\n    }\n\n    /* Body cu spacing mai mare */\n    .card-body-context.p-4 {\n        padding: 2rem !important;\n    }\n\n    /* Hover effect pentru roluri */\n    .card-role {\n        transition: all 0.3s ease;\n        border-radius: 8px;\n        padding: 1rem;\n        margin-bottom: 0.5rem;\n    }\n\n    .card-role:hover {\n        background-color: rgba(var(--fod-palette-primary-rgb), 0.1);\n        transform: translateX(5px);\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/FodContextSelectorCard/#configurare-icontextservice","title":"Configurare IContextService","text":"<pre><code>// Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IContextService, ContextService&gt;();\n\n// Implementare serviciu\npublic class ContextService : IContextService\n{\n    public event EventHandler ChangeContextRequestedCard;\n    public event EventHandler&lt;UserContext&gt; ContextChanged;\n\n    public async Task&lt;IEnumerable&lt;UserContext&gt;&gt; Get()\n    {\n        // Returneaz\u0103 contextele disponibile pentru utilizator\n        return await apiClient.GetUserContextsAsync();\n    }\n\n    public async Task&lt;UserContext&gt; GetCurrent()\n    {\n        // Returneaz\u0103 contextul curent activ\n        return await sessionStorage.GetItemAsync&lt;UserContext&gt;(\"currentContext\");\n    }\n\n    public async Task SetCurrent(UserContext context, bool persist)\n    {\n        await sessionStorage.SetItemAsync(\"currentContext\", context);\n        if (persist)\n        {\n            await apiClient.SetActiveContextAsync(context.ContextId);\n        }\n        ContextChanged?.Invoke(this, context);\n    }\n\n    public void RequestContextChangeCard()\n    {\n        ChangeContextRequestedCard?.Invoke(this, EventArgs.Empty);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#7-stilizare-css","title":"7. Stilizare CSS","text":"<pre><code>/* Card context selector */\n.card-header-context {\n    display: flex;\n    align-items: center;\n    padding: 1.5rem;\n    background-color: var(--fod-palette-primary-light);\n    color: var(--fod-palette-primary-contrastText);\n}\n\n.card-profile-icon {\n    margin-right: 1rem;\n}\n\n.head-content .current-name {\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin: 0;\n}\n\n.head-content .current-role {\n    font-size: 0.875rem;\n    opacity: 0.8;\n    margin: 0;\n}\n\n/* Body context selector */\n.card-body-context {\n    padding: 1.5rem;\n}\n\n.select-context {\n    font-weight: 500;\n    margin-bottom: 1rem;\n    color: var(--fod-palette-text-secondary);\n}\n\n/* Card role item */\n.card-role {\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    border: 1px solid var(--fod-palette-divider);\n    border-radius: 4px;\n    margin-bottom: 0.75rem;\n    cursor: pointer;\n    transition: all 0.2s ease;\n}\n\n.card-role:hover {\n    background-color: var(--fod-palette-action-hover);\n    border-color: var(--fod-palette-primary-main);\n}\n\n.card-role-icon-container {\n    margin-right: 1rem;\n}\n\n.card-role-icon {\n    width: 48px;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--fod-palette-grey-100);\n    border-radius: 50%;\n}\n\n.card-role-description {\n    flex: 1;\n}\n\n.card-role-name {\n    font-weight: 500;\n    margin-bottom: 0.25rem;\n}\n\n.card-role-idn {\n    font-size: 0.875rem;\n    color: var(--fod-palette-text-secondary);\n}\n\n.card-role-idn span {\n    font-weight: 500;\n    margin-right: 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodContextSelectorCard/#dashboard-multi-context","title":"Dashboard multi-context","text":"<pre><code>@page \"/\"\n@layout MainLayout\n\n&lt;div class=\"dashboard-container\"&gt;\n    @if (showContextSelector)\n    {\n        &lt;div class=\"context-selector-overlay\" @onclick=\"HideContextSelector\"&gt;\n            &lt;div class=\"context-selector-modal\" @onclick:stopPropagation=\"true\"&gt;\n                &lt;FodContextSelectorCard /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;div class=\"dashboard-header\"&gt;\n        &lt;h1&gt;Dashboard&lt;/h1&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" \n                   OnClick=\"ShowContextSelector\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.SwapHoriz\" /&gt;\n            Schimb\u0103 context\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Con\u021binut dashboard --&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showContextSelector = false;\n\n    private void ShowContextSelector()\n    {\n        showContextSelector = true;\n    }\n\n    private void HideContextSelector()\n    {\n        showContextSelector = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#validare-context-inainte-de-actiuni","title":"Validare context \u00eenainte de ac\u021biuni","text":"<pre><code>&lt;FodContextSelectorCard @ref=\"contextSelector\" /&gt;\n\n&lt;FodButton OnClick=\"PerformAction\" Color=\"FodColor.Primary\"&gt;\n    Execut\u0103 ac\u021biune\n&lt;/FodButton&gt;\n\n@code {\n    [Inject] private IContextService contextService { get; set; }\n    private FodContextSelectorCard contextSelector;\n\n    private async Task PerformAction()\n    {\n        var currentContext = await contextService.GetCurrent();\n\n        if (currentContext.ContextType != UserContextType.Organization)\n        {\n            ShowNotification(\"Aceast\u0103 ac\u021biune necesit\u0103 context de organiza\u021bie!\", \n                           FodSeverity.Warning);\n\n            // Solicit\u0103 schimbarea contextului\n            contextService.RequestContextChangeCard();\n            return;\n        }\n\n        // Execut\u0103 ac\u021biunea\n        await ExecuteBusinessAction();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodContextSelectorCard/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Pozi\u021bionare vizibil\u0103 - Plasa\u021bi \u00een locuri u\u0219or accesibile</li> <li>Feedback vizual - Indica\u021bi clar contextul activ</li> <li>Validare context - Verifica\u021bi contextul \u00eenainte de ac\u021biuni</li> <li>Persisten\u021b\u0103 - Salva\u021bi contextul selectat \u00eentre sesiuni</li> <li>Loading states - Afi\u0219a\u021bi loading \u00een timpul schimb\u0103rii</li> <li>Error handling - Trata\u021bi erorile de schimbare context</li> </ol>"},{"location":"fod/componente/FodContextSelectorCard/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Cache-ui\u021bi lista de contexte disponibile</li> <li>Evita\u021bi re\u00eenc\u0103rc\u0103ri frecvente ale paginii</li> <li>Folosi\u021bi lazy loading pentru date context-specifice</li> <li>Minimiza\u021bi apelurile API la schimbare context</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Structur\u0103 semantic\u0103 cu heading-uri</li> <li>Suport pentru navigare cu tastatura</li> <li>ARIA labels pentru iconi\u021be</li> <li>Focus management la schimbare context</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodContextSelectorCard/#contextele-nu-apar","title":"Contextele nu apar","text":"<ul> <li>Verifica\u021bi IContextService registration</li> <li>Verifica\u021bi c\u0103 utilizatorul are contexte multiple</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#schimbarea-nu-se-aplica","title":"Schimbarea nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 persist=true la SetCurrent</li> <li>Verifica\u021bi navigare cu forceLoad</li> <li>Verifica\u021bi event handlers</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#stilizare-nu-se-aplica","title":"Stilizare nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi ordinea CSS</li> <li>Folosi\u021bi !important pentru override</li> <li>Verifica\u021bi clase CSS custom</li> </ul>"},{"location":"fod/componente/FodContextSelectorCard/#13-note-despre-fodcontextprovidercard","title":"13. Note despre FodContextProviderCard","text":"<p><code>FodContextProviderCard</code> este un wrapper simplu care utilizeaz\u0103 <code>FodContextSelectorCard</code>:</p> <pre><code>@namespace Fod.Components\n&lt;FodContextSelectorCard /&gt;\n</code></pre> <p>Folosi\u021bi direct <code>FodContextSelectorCard</code> pentru mai mult control.</p>"},{"location":"fod/componente/FodContextSelectorCard/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodContextSelectorCard</code> ofer\u0103 o interfa\u021b\u0103 intuitiv\u0103 pentru gestionarea contextelor multiple ale utilizatorilor \u00een aplica\u021biile guvernamentale. Cu design card modern \u0219i integrare complet\u0103 cu serviciile de context, componenta faciliteaz\u0103 navigarea \u00eentre diferite roluri \u0219i responsabilit\u0103\u021bi ale utilizatorului.</p>"},{"location":"fod/componente/FodCustomInputSelect/","title":"FodCustomInputSelect","text":""},{"location":"fod/componente/FodCustomInputSelect/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodCustomInputSelect&lt;T&gt;</code> este o component\u0103 generic\u0103 avansat\u0103 pentru dropdown-uri care extinde <code>FodCustomSelectableFormComponent&lt;T&gt;</code>. Ofer\u0103 func\u021bionalit\u0103\u021bi extinse fa\u021b\u0103 de select-ul standard, inclusiv suport pentru tipuri generice, enum-uri cu localizare, op\u021biuni dezactivate/ascunse \u0219i integrare complet\u0103 cu sistemul de validare Blazor.</p>"},{"location":"fod/componente/FodCustomInputSelect/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Select simplu cu string --&gt;\n&lt;FodCustomInputSelect @bind-Value=\"selectedCountry\" \n                      Options=\"@countryOptions\"\n                      Label=\"\u021aar\u0103\" /&gt;\n\n&lt;!-- Select cu enum --&gt;\n&lt;FodCustomInputSelect @bind-Value=\"selectedStatus\" \n                      EnumType=\"@typeof(OrderStatus)\"\n                      Label=\"Status comand\u0103\" /&gt;\n\n&lt;!-- Select cu tip complex --&gt;\n&lt;FodCustomInputSelect @bind-Value=\"selectedProduct\" \n                      Options=\"@productOptions\"\n                      Label=\"Produs\"\n                      DefaultOptionText=\"Alege\u021bi un produs...\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodCustomInputSelect/#configurare-optiuni","title":"Configurare Op\u021biuni","text":""},{"location":"fod/componente/FodCustomInputSelect/#customselectableitem","title":"CustomSelectableItem <pre><code>public class CustomSelectableItem&lt;T&gt;\n{\n    public string Value { get; set; }      // Valoarea pentru HTML\n    public string Text { get; set; }       // Textul afi\u0219at\n    public T Data { get; set; }           // Obiectul asociat\n    public bool Disabled { get; set; }    // Dezactivat\n    public bool Hidden { get; set; }      // Ascuns\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#exemple-de-configurare","title":"Exemple de Configurare <pre><code>@code {\n    // Op\u021biuni simple (string)\n    private List&lt;CustomSelectableItem&lt;string&gt;&gt; simpleOptions = new()\n    {\n        new() { Value = \"md\", Text = \"Moldova\", Data = \"MD\" },\n        new() { Value = \"ro\", Text = \"Rom\u00e2nia\", Data = \"RO\" },\n        new() { Value = \"ua\", Text = \"Ucraina\", Data = \"UA\" }\n    };\n\n    // Op\u021biuni cu obiecte complexe\n    private List&lt;CustomSelectableItem&lt;Product&gt;&gt; productOptions = new()\n    {\n        new() \n        { \n            Value = \"1\", \n            Text = \"Laptop Dell XPS 13\", \n            Data = new Product { Id = 1, Name = \"Dell XPS 13\", Price = 25000 }\n        },\n        new() \n        { \n            Value = \"2\", \n            Text = \"MacBook Pro 14\", \n            Data = new Product { Id = 2, Name = \"MacBook Pro\", Price = 45000 },\n            Disabled = true // Stoc epuizat\n        }\n    };\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Options List&gt; null Lista de op\u021biuni DefaultOptionText string \"Select...\" Text pentru op\u021biunea implicit\u0103 DefaultOption bool false Selecteaz\u0103 automat prima op\u021biune BoldText bool false Text label \u00eengro\u0219at isInvalid bool false Marcheaz\u0103 select-ul ca invalid EnumType Type null Tip enum pentru generare automat\u0103 Readonly bool false Dezactiveaz\u0103 select-ul"},{"location":"fod/componente/FodCustomInputSelect/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodCustomInputSelect/#formular-de-comanda","title":"Formular de Comand\u0103 <pre><code>&lt;EditForm Model=\"@order\" OnValidSubmit=\"@SubmitOrder\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"order.Customer\" \n                          Options=\"@customerOptions\"\n                          Label=\"Client\"\n                          DefaultOptionText=\"Selecta\u021bi clientul...\" /&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"order.Priority\" \n                          EnumType=\"@typeof(OrderPriority)\"\n                          Label=\"Prioritate\" /&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"order.ShippingMethod\" \n                          Options=\"@shippingOptions\"\n                          Label=\"Metod\u0103 livrare\"\n                          @bind-Value:after=\"UpdateShippingCost\" /&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\"&gt;Plaseaz\u0103 comanda&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderModel order = new();\n    private decimal shippingCost;\n\n    private List&lt;CustomSelectableItem&lt;Customer&gt;&gt; customerOptions;\n    private List&lt;CustomSelectableItem&lt;ShippingMethod&gt;&gt; shippingOptions;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cenc\u0103rcare clien\u021bi\n        var customers = await CustomerService.GetActiveCustomers();\n        customerOptions = customers.Select(c =&gt; new CustomSelectableItem&lt;Customer&gt;\n        {\n            Value = c.Id.ToString(),\n            Text = $\"{c.Name} - {c.Company}\",\n            Data = c\n        }).ToList();\n\n        // Op\u021biuni livrare\n        shippingOptions = new()\n        {\n            new() \n            { \n                Value = \"standard\", \n                Text = \"Standard (3-5 zile)\", \n                Data = new ShippingMethod { Id = \"standard\", Cost = 50 }\n            },\n            new() \n            { \n                Value = \"express\", \n                Text = \"Express (1-2 zile)\", \n                Data = new ShippingMethod { Id = \"express\", Cost = 100 }\n            },\n            new() \n            { \n                Value = \"urgent\", \n                Text = \"Urgent (\u00een aceea\u0219i zi)\", \n                Data = new ShippingMethod { Id = \"urgent\", Cost = 200 },\n                Disabled = !IsWorkingDay() // Dezactivat \u00een weekend\n            }\n        };\n    }\n\n    private void UpdateShippingCost()\n    {\n        shippingCost = order.ShippingMethod?.Cost ?? 0;\n    }\n\n    public class OrderModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi clientul\")]\n        public Customer Customer { get; set; }\n\n        [Required(ErrorMessage = \"Selecta\u021bi prioritatea\")]\n        public OrderPriority Priority { get; set; }\n\n        [Required(ErrorMessage = \"Selecta\u021bi metoda de livrare\")]\n        public ShippingMethod ShippingMethod { get; set; }\n    }\n\n    public enum OrderPriority\n    {\n        [Display(Name = \"Normal\u0103\")]\n        Normal,\n        [Display(Name = \"Urgent\u0103\")]\n        Urgent,\n        [Display(Name = \"Critic\u0103\")]\n        Critical\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#select-cu-enum-localizat","title":"Select cu Enum Localizat <pre><code>&lt;FodCustomInputSelect @bind-Value=\"selectedLanguage\" \n                      EnumType=\"@typeof(Language)\"\n                      Label=\"Limba preferat\u0103\"\n                      DefaultOption=\"true\" /&gt;\n\n@code {\n    private Language selectedLanguage;\n\n    public enum Language\n    {\n        [Display(Name = \"Romanian\", ResourceType = typeof(LanguageResources))]\n        Romanian,\n\n        [Display(Name = \"Russian\", ResourceType = typeof(LanguageResources))]\n        Russian,\n\n        [Display(Name = \"English\", ResourceType = typeof(LanguageResources))]\n        English\n    }\n}\n\n// \u00cen LanguageResources.resx\n// Romanian = Rom\u00e2n\u0103\n// Russian = \u0420\u0443\u0441\u0441\u043a\u0438\u0439  \n// English = English\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#select-dinamic-cu-filtrare","title":"Select Dinamic cu Filtrare <pre><code>&lt;div class=\"dynamic-select-container\"&gt;\n    &lt;div class=\"filters mb-3\"&gt;\n        &lt;FodCheckbox @bind-Value=\"showOnlyActive\" \n                     Label=\"Doar active\"\n                     @bind-Value:after=\"FilterOptions\" /&gt;\n\n        &lt;FodCheckbox @bind-Value=\"showOnlyAvailable\" \n                     Label=\"Doar disponibile\"\n                     @bind-Value:after=\"FilterOptions\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"selectedItem\" \n                          Options=\"@filteredOptions\"\n                          Label=\"Selecta\u021bi elementul\"\n                          DefaultOptionText=\"-- Alege\u021bi --\"\n                          isInvalid=\"@(!IsValidSelection())\" /&gt;\n\n    @if (selectedItem != null)\n    {\n        &lt;div class=\"selection-details mt-3\"&gt;\n            &lt;h5&gt;Detalii selec\u021bie:&lt;/h5&gt;\n            &lt;p&gt;Nume: @selectedItem.Name&lt;/p&gt;\n            &lt;p&gt;Status: @selectedItem.Status&lt;/p&gt;\n            &lt;p&gt;Disponibil: @(selectedItem.IsAvailable ? \"Da\" : \"Nu\")&lt;/p&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private Item selectedItem;\n    private List&lt;Item&gt; allItems = new();\n    private List&lt;CustomSelectableItem&lt;Item&gt;&gt; filteredOptions = new();\n\n    private bool showOnlyActive = true;\n    private bool showOnlyAvailable = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        allItems = await ItemService.GetAllItems();\n        FilterOptions();\n    }\n\n    private void FilterOptions()\n    {\n        var filtered = allItems.AsEnumerable();\n\n        if (showOnlyActive)\n            filtered = filtered.Where(i =&gt; i.Status == \"Active\");\n\n        if (showOnlyAvailable)\n            filtered = filtered.Where(i =&gt; i.IsAvailable);\n\n        filteredOptions = filtered.Select(item =&gt; new CustomSelectableItem&lt;Item&gt;\n        {\n            Value = item.Id.ToString(),\n            Text = $\"{item.Name} ({item.Code})\",\n            Data = item,\n            Disabled = !item.IsSelectable\n        }).ToList();\n\n        // Reset selec\u021bie dac\u0103 nu mai e valid\u0103\n        if (selectedItem != null &amp;&amp; !filtered.Contains(selectedItem))\n        {\n            selectedItem = null;\n        }\n    }\n\n    private bool IsValidSelection()\n    {\n        return selectedItem == null || selectedItem.IsValid;\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#select-in-cascada","title":"Select \u00een Cascad\u0103 <pre><code>&lt;div class=\"cascading-selects\"&gt;\n    &lt;FodCustomInputSelect @bind-Value=\"selectedCategory\" \n                          Options=\"@categoryOptions\"\n                          Label=\"Categorie\"\n                          @bind-Value:after=\"LoadSubcategories\" /&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"selectedSubcategory\" \n                          Options=\"@subcategoryOptions\"\n                          Label=\"Subcategorie\"\n                          Readonly=\"@(selectedCategory == null)\" /&gt;\n\n    &lt;FodCustomInputSelect @bind-Value=\"selectedProduct\" \n                          Options=\"@productOptions\"\n                          Label=\"Produs\"\n                          Readonly=\"@(selectedSubcategory == null)\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private Category selectedCategory;\n    private Subcategory selectedSubcategory;\n    private Product selectedProduct;\n\n    private List&lt;CustomSelectableItem&lt;Category&gt;&gt; categoryOptions;\n    private List&lt;CustomSelectableItem&lt;Subcategory&gt;&gt; subcategoryOptions = new();\n    private List&lt;CustomSelectableItem&lt;Product&gt;&gt; productOptions = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        var categories = await CategoryService.GetCategories();\n        categoryOptions = categories.Select(c =&gt; new CustomSelectableItem&lt;Category&gt;\n        {\n            Value = c.Id.ToString(),\n            Text = c.Name,\n            Data = c\n        }).ToList();\n    }\n\n    private async Task LoadSubcategories()\n    {\n        selectedSubcategory = null;\n        selectedProduct = null;\n        subcategoryOptions.Clear();\n        productOptions.Clear();\n\n        if (selectedCategory != null)\n        {\n            var subcategories = await CategoryService.GetSubcategories(selectedCategory.Id);\n            subcategoryOptions = subcategories.Select(s =&gt; new CustomSelectableItem&lt;Subcategory&gt;\n            {\n                Value = s.Id.ToString(),\n                Text = s.Name,\n                Data = s\n            }).ToList();\n        }\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#select-cu-grupare-vizuala","title":"Select cu Grupare Vizual\u0103 <pre><code>&lt;style&gt;\n    .grouped-option {\n        padding-left: 20px;\n    }\n\n    .group-header {\n        font-weight: bold;\n        background-color: #f0f0f0;\n    }\n&lt;/style&gt;\n\n&lt;FodCustomInputSelect @bind-Value=\"selectedOffice\" \n                      Options=\"@groupedOfficeOptions\"\n                      Label=\"Birou\"\n                      DefaultOptionText=\"Selecta\u021bi biroul...\" /&gt;\n\n@code {\n    private Office selectedOffice;\n    private List&lt;CustomSelectableItem&lt;Office&gt;&gt; groupedOfficeOptions;\n\n    protected override void OnInitialized()\n    {\n        groupedOfficeOptions = new();\n\n        var officesByRegion = offices.GroupBy(o =&gt; o.Region);\n\n        foreach (var group in officesByRegion)\n        {\n            // Adaug\u0103 header pentru grup (dezactivat)\n            groupedOfficeOptions.Add(new CustomSelectableItem&lt;Office&gt;\n            {\n                Value = $\"header-{group.Key}\",\n                Text = $\"-- {group.Key} --\",\n                Data = null,\n                Disabled = true\n            });\n\n            // Adaug\u0103 birourile din grup\n            foreach (var office in group)\n            {\n                groupedOfficeOptions.Add(new CustomSelectableItem&lt;Office&gt;\n                {\n                    Value = office.Id.ToString(),\n                    Text = $\"    {office.Name}\",\n                    Data = office\n                });\n            }\n        }\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodCustomInputSelect/#css-pentru-select-invalid","title":"CSS pentru Select Invalid <pre><code>.fod-select select.invalid {\n    border-color: #dc3545;\n    background-image: url(\"data:image/svg+xml,...\");\n    background-repeat: no-repeat;\n    background-position: right .75rem center;\n    background-size: 16px 12px;\n}\n\n.fod-select select.invalid:focus {\n    border-color: #dc3545;\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#stilizare-personalizata","title":"Stilizare Personalizat\u0103 <pre><code>/* Select modern */\n.modern-select select {\n    border: 2px solid #e0e0e0;\n    border-radius: 8px;\n    padding: 10px 15px;\n    font-size: 16px;\n    transition: all 0.3s;\n    appearance: none;\n    background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg...%3e\");\n    background-repeat: no-repeat;\n    background-position: right 10px center;\n    background-size: 20px;\n}\n\n.modern-select select:focus {\n    border-color: #007bff;\n    outline: none;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n/* Op\u021biuni dezactivate */\n.modern-select option:disabled {\n    color: #999;\n    font-style: italic;\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#validare","title":"Validare","text":""},{"location":"fod/componente/FodCustomInputSelect/#validare-cu-atribute","title":"Validare cu Atribute <pre><code>public class FormModel\n{\n    [Required(ErrorMessage = \"Selecta\u021bi o op\u021biune\")]\n    public MyEnum EnumValue { get; set; }\n\n    [Required(ErrorMessage = \"Clientul este obligatoriu\")]\n    public Customer Customer { get; set; }\n\n    [CustomValidation(typeof(FormModel), nameof(ValidateProduct))]\n    public Product Product { get; set; }\n\n    public static ValidationResult ValidateProduct(Product product, ValidationContext context)\n    {\n        if (product?.IsAvailable == false)\n        {\n            return new ValidationResult(\"Produsul selectat nu este disponibil\");\n        }\n        return ValidationResult.Success;\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodCustomInputSelect/#mostenire-si-extensibilitate","title":"Mo\u0219tenire \u0219i Extensibilitate","text":"<p>FodCustomInputSelect extinde <code>FodCustomSelectableFormComponent&lt;T&gt;</code> care ofer\u0103: - Generare automat\u0103 din enum-uri - Suport pentru binding two-way - Integrare cu EditForm - Validare automat\u0103</p>"},{"location":"fod/componente/FodCustomInputSelect/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi tipuri generice - Pentru type safety</li> <li>DefaultOptionText descriptiv - Ajut\u0103 utilizatorii</li> <li>Validare adecvat\u0103 - Pentru selec\u021bii obligatorii</li> <li>Grupare logic\u0103 - Pentru liste lungi</li> <li>Feedback vizual - Pentru st\u0103ri invalide</li> <li>Lazy loading - Pentru date mari</li> </ol>"},{"location":"fod/componente/FodCustomInputSelect/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Op\u021biunile sunt generate o singur\u0103 dat\u0103</li> <li>Re-renderare minim\u0103 la schimbare selec\u021bie</li> <li>Pentru liste foarte mari (&gt;1000), considera\u021bi paginare sau virtualizare</li> </ul>"},{"location":"fod/componente/FodCustomInputSelect/#diferente-fata-de-fodinputselect","title":"Diferen\u021be fa\u021b\u0103 de FODInputSelect","text":"Caracteristic\u0103 FodCustomInputSelect FODInputSelect Tipuri generice Da (T) Da (TValue) Obiecte complexe CustomSelectableItem SelectableItem Op\u021biuni dezactivate Da Nu Op\u021biuni ascunse Da Nu Localizare enum ResourceType Standard"},{"location":"fod/componente/FodCustomInputSelect/#concluzie","title":"Concluzie","text":"<p>FodCustomInputSelect ofer\u0103 o solu\u021bie puternic\u0103 \u0219i flexibil\u0103 pentru dropdown-uri \u00een aplica\u021bii Blazor, cu suport pentru tipuri generice, validare complex\u0103 \u0219i numeroase op\u021biuni de personalizare. Este ideal\u0103 pentru formulare care necesit\u0103 selec\u021bii din liste de obiecte complexe sau enum-uri localizate.</p>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/","title":"FodCustomMultipleGroupSelect","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#documentatie-pentru-componenta-fodcustommultiplegroupselect","title":"Documenta\u021bie pentru componenta FodCustomMultipleGroupSelect","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodCustomMultipleGroupSelect&lt;T&gt;</code> este o component\u0103 de selec\u021bie multipl\u0103 cu suport pentru grupare a op\u021biunilor. Permite utilizatorilor s\u0103 selecteze mai multe elemente dintr-o list\u0103 organizat\u0103 \u00een grupuri, cu checkbox-uri pentru fiecare op\u021biune.</p> <p>Caracteristici principale: - Selec\u021bie multipl\u0103 cu checkbox-uri - Grupare op\u021biuni cu etichete - Afi\u0219are op\u021biuni selectate inline - Suport pentru op\u021biuni dezactivate/ascunse - Dropdown cu scroll pentru liste lungi - Validare integrat\u0103 cu EditForm - Tipizare generic\u0103 cu constr\u00e2ngere ICustomSelectItem - Stilizare inclus\u0103</p>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selectie-multipla-simpla","title":"Selec\u021bie multipl\u0103 simpl\u0103","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"CustomOption\" \n                              @bind-Value=\"selectedOptions\"\n                              Source=\"optionGroups\"\n                              DefaultOptionText=\"Selecta\u021bi op\u021biunile...\" /&gt;\n\n@code {\n    private List&lt;CustomOption&gt; selectedOptions = new();\n    private IEnumerable&lt;CustomSelectItemGroup&gt; optionGroups;\n\n    protected override void OnInitialized()\n    {\n        optionGroups = new List&lt;CustomSelectItemGroup&gt;\n        {\n            new CustomSelectItemGroup\n            {\n                Label = \"Op\u021biuni principale\",\n                Members = new List&lt;CustomOption&gt;\n                {\n                    new() { Value = \"1\", Label = \"Op\u021biunea 1\" },\n                    new() { Value = \"2\", Label = \"Op\u021biunea 2\" }\n                }\n            }\n        };\n    }\n\n    public class CustomOption : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selectie-cu-grupuri-multiple","title":"Selec\u021bie cu grupuri multiple","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"PermissionItem\" \n                              @bind-Value=\"selectedPermissions\"\n                              Source=\"permissionGroups\" /&gt;\n\n@code {\n    private List&lt;PermissionItem&gt; selectedPermissions = new();\n\n    private IEnumerable&lt;CustomSelectItemGroup&gt; permissionGroups = new[]\n    {\n        new CustomSelectItemGroup\n        {\n            Label = \"Citire\",\n            Members = new List&lt;PermissionItem&gt;\n            {\n                new() { Value = \"read_users\", Label = \"Citire utilizatori\" },\n                new() { Value = \"read_reports\", Label = \"Citire rapoarte\" },\n                new() { Value = \"read_settings\", Label = \"Citire set\u0103ri\" }\n            }\n        },\n        new CustomSelectItemGroup\n        {\n            Label = \"Scriere\",\n            Members = new List&lt;PermissionItem&gt;\n            {\n                new() { Value = \"write_users\", Label = \"Modificare utilizatori\" },\n                new() { Value = \"write_reports\", Label = \"Creare rapoarte\" },\n                new() { Value = \"write_settings\", Label = \"Modificare set\u0103ri\" }\n            }\n        },\n        new CustomSelectItemGroup\n        {\n            Label = \"Administrare\",\n            Members = new List&lt;PermissionItem&gt;\n            {\n                new() { Value = \"delete_users\", Label = \"\u0218tergere utilizatori\", Disabled = true },\n                new() { Value = \"admin_system\", Label = \"Administrare sistem\" }\n            }\n        }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>List&lt;T&gt;</code> Lista elementelor selectate <code>new List&lt;T&gt;()</code> <code>Source</code> <code>IEnumerable&lt;CustomSelectItemGroup&gt;</code> Sursa de date cu grupuri - <code>DefaultOptionText</code> <code>string</code> Text afi\u0219at c\u00e2nd nu exist\u0103 selec\u021bie <code>\"Select...\"</code> <code>DefaultOption</code> <code>bool</code> Afi\u0219eaz\u0103 op\u021biunea implicit\u0103 <code>true</code> <code>OnValueChanged</code> <code>EventCallback&lt;List&lt;T&gt;&gt;</code> Eveniment la schimbare selec\u021bie - <code>Readonly</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#4-interfete-si-modele","title":"4. Interfe\u021be \u0219i Modele","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#icustomselectitem","title":"ICustomSelectItem","text":"<pre><code>public interface ICustomSelectItem\n{\n    string Value { get; set; }      // Valoarea unic\u0103\n    string Label { get; set; }      // Textul afi\u0219at\n    bool Disabled { get; set; }     // Dezactivat\n    bool Hidden { get; set; }       // Ascuns\n    bool isChecked { get; set; }    // Stare selec\u021bie\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#customselectitemgroup","title":"CustomSelectItemGroup","text":"<pre><code>public class CustomSelectItemGroup\n{\n    public string Label { get; set; }                    // Numele grupului\n    public IEnumerable&lt;ICustomSelectItem&gt; Members { get; set; }  // Membrii grupului\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selector-de-roluri-si-permisiuni","title":"Selector de roluri \u0219i permisiuni","text":"<pre><code>&lt;EditForm Model=\"userModel\" OnValidSubmit=\"SaveUser\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodCustomMultipleGroupSelect T=\"RolePermission\" \n                                  @bind-Value=\"userModel.Permissions\"\n                                  Source=\"rolePermissionGroups\"\n                                  DefaultOptionText=\"Selecta\u021bi rolurile \u0219i permisiunile...\"\n                                  OnValueChanged=\"UpdatePermissionSummary\" /&gt;\n\n    @if (selectedCount &gt; 0)\n    {\n        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n            @selectedCount permisiuni selectate\n        &lt;/FodText&gt;\n    }\n\n    &lt;ValidationMessage For=\"@(() =&gt; userModel.Permissions)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103 utilizator\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel userModel = new();\n    private int selectedCount = 0;\n\n    private IEnumerable&lt;CustomSelectItemGroup&gt; rolePermissionGroups = new[]\n    {\n        new CustomSelectItemGroup\n        {\n            Label = \"Roluri standard\",\n            Members = new List&lt;RolePermission&gt;\n            {\n                new() { \n                    Value = \"role_viewer\", \n                    Label = \"Vizualizator\", \n                    Description = \"Poate doar vizualiza date\" \n                },\n                new() { \n                    Value = \"role_editor\", \n                    Label = \"Editor\", \n                    Description = \"Poate edita date existente\" \n                },\n                new() { \n                    Value = \"role_creator\", \n                    Label = \"Creator\", \n                    Description = \"Poate crea date noi\" \n                }\n            }\n        },\n        new CustomSelectItemGroup\n        {\n            Label = \"Permisiuni speciale\",\n            Members = new List&lt;RolePermission&gt;\n            {\n                new() { \n                    Value = \"perm_export\", \n                    Label = \"Export date\", \n                    RequiresApproval = true \n                },\n                new() { \n                    Value = \"perm_bulk_ops\", \n                    Label = \"Opera\u021bii \u00een mas\u0103\", \n                    RequiresApproval = true \n                },\n                new() { \n                    Value = \"perm_api_access\", \n                    Label = \"Acces API\", \n                    Disabled = !userModel.IsVerified \n                }\n            }\n        }\n    };\n\n    private void UpdatePermissionSummary(List&lt;RolePermission&gt; permissions)\n    {\n        selectedCount = permissions.Count;\n\n        // Verific\u0103 permisiuni care necesit\u0103 aprobare\n        var requiresApproval = permissions.Any(p =&gt; p.RequiresApproval);\n        if (requiresApproval)\n        {\n            ShowNotification(\"Unele permisiuni necesit\u0103 aprobare suplimentar\u0103\", \n                           FodSeverity.Warning);\n        }\n    }\n\n    public class RolePermission : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n\n        // Propriet\u0103\u021bi adi\u021bionale\n        public string Description { get; set; }\n        public bool RequiresApproval { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selector-de-categorii-cu-subcategorii","title":"Selector de categorii cu subcategorii","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"CategoryItem\" \n                              @bind-Value=\"selectedCategories\"\n                              Source=\"categoryGroups\"\n                              DefaultOptionText=\"Alege\u021bi categoriile...\" /&gt;\n\n&lt;div class=\"mt-3\"&gt;\n    &lt;h5&gt;Categorii selectate:&lt;/h5&gt;\n    @foreach (var category in selectedCategories)\n    {\n        &lt;FodChip Color=\"FodColor.Primary\" Size=\"FodSize.Small\" Class=\"ma-1\"&gt;\n            @category.Label\n        &lt;/FodChip&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;CategoryItem&gt; selectedCategories = new();\n\n    private IEnumerable&lt;CustomSelectItemGroup&gt; categoryGroups;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 categoriile din API\n        var categories = await CategoryService.GetCategoriesAsync();\n\n        categoryGroups = categories\n            .Where(c =&gt; c.ParentId == null)\n            .Select(parent =&gt; new CustomSelectItemGroup\n            {\n                Label = parent.Name,\n                Members = categories\n                    .Where(c =&gt; c.ParentId == parent.Id)\n                    .Select(child =&gt; new CategoryItem\n                    {\n                        Value = child.Id.ToString(),\n                        Label = child.Name,\n                        ParentCategory = parent.Name,\n                        Icon = child.Icon\n                    })\n            });\n    }\n\n    public class CategoryItem : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n\n        public string ParentCategory { get; set; }\n        public string Icon { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selector-dinamic-cu-filtrare","title":"Selector dinamic cu filtrare","text":"<pre><code>&lt;div class=\"mb-3\"&gt;\n    &lt;FodTextField @bind-Value=\"searchTerm\" \n                  Label=\"Caut\u0103 op\u021biuni\"\n                  Immediate=\"true\"\n                  DebounceInterval=\"300\"\n                  OnDebounceIntervalElapsed=\"FilterOptions\" /&gt;\n&lt;/div&gt;\n\n&lt;FodCustomMultipleGroupSelect T=\"DynamicOption\" \n                              @bind-Value=\"selectedOptions\"\n                              Source=\"filteredGroups\"\n                              DefaultOptionText=\"Selecta\u021bi din rezultate...\" /&gt;\n\n@code {\n    private List&lt;DynamicOption&gt; selectedOptions = new();\n    private IEnumerable&lt;CustomSelectItemGroup&gt; allGroups;\n    private IEnumerable&lt;CustomSelectItemGroup&gt; filteredGroups;\n    private string searchTerm = \"\";\n\n    protected override void OnInitialized()\n    {\n        allGroups = GenerateAllGroups();\n        filteredGroups = allGroups;\n    }\n\n    private void FilterOptions()\n    {\n        if (string.IsNullOrWhiteSpace(searchTerm))\n        {\n            filteredGroups = allGroups;\n            return;\n        }\n\n        filteredGroups = allGroups\n            .Select(group =&gt; new CustomSelectItemGroup\n            {\n                Label = group.Label,\n                Members = group.Members\n                    .Cast&lt;DynamicOption&gt;()\n                    .Where(m =&gt; m.Label.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||\n                               m.Tags.Any(t =&gt; t.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)))\n            })\n            .Where(g =&gt; g.Members.Any());\n\n        StateHasChanged();\n    }\n\n    public class DynamicOption : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n\n        public List&lt;string&gt; Tags { get; set; } = new();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#6-stilizare-personalizata","title":"6. Stilizare Personalizat\u0103","text":"<p>Componenta include stiluri inline, dar pot fi suprascrse:</p> <pre><code>/* Override stiluri implicite */\n.fod-custom-select .fod-dropdown {\n    max-height: 300px; /* M\u0103rime dropdown */\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* Grupuri cu culori diferite */\n.fod-custom-select .fod-group:nth-child(odd) {\n    background-color: #f8f9fa;\n}\n\n/* Op\u021biuni selectate eviden\u021biate */\n.fod-custom-select .fod-option input[type=\"checkbox\"]:checked + label {\n    font-weight: 600;\n    color: var(--fod-palette-primary-main);\n}\n\n/* Chips pentru elemente selectate */\n.fod-custom-select .selected-item {\n    background-color: var(--fod-palette-primary-light);\n    color: var(--fod-palette-primary-contrastText);\n    font-size: 0.875rem;\n}\n\n/* Op\u021biuni dezactivate */\n.fod-custom-select .fod-option[disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n    background-color: #f5f5f5;\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#7-integrare-cu-validare","title":"7. Integrare cu Validare","text":"<pre><code>&lt;EditForm Model=\"formModel\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodCustomMultipleGroupSelect T=\"SkillItem\" \n                                  @bind-Value=\"formModel.RequiredSkills\"\n                                  Source=\"skillGroups\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; formModel.RequiredSkills)\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class FormModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi cel pu\u021bin o competen\u021b\u0103\")]\n        [MinLength(1, ErrorMessage = \"Minim o competen\u021b\u0103 necesar\u0103\")]\n        [MaxLength(5, ErrorMessage = \"Maxim 5 competen\u021be\")]\n        public List&lt;SkillItem&gt; RequiredSkills { get; set; } = new();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#8-evenimente-si-callback-uri","title":"8. Evenimente \u0219i Callback-uri","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"NotificationOption\" \n                              @bind-Value=\"userNotifications\"\n                              Source=\"notificationGroups\"\n                              OnValueChanged=\"HandleNotificationChange\" /&gt;\n\n@code {\n    private async Task HandleNotificationChange(List&lt;NotificationOption&gt; selected)\n    {\n        // Verific\u0103 combina\u021bii incompatibile\n        if (selected.Any(n =&gt; n.Value == \"email_all\") &amp;&amp; \n            selected.Any(n =&gt; n.Value.StartsWith(\"email_specific\")))\n        {\n            ShowWarning(\"Nu pute\u021bi selecta 'Toate email-urile' \u00eempreun\u0103 cu op\u021biuni specifice\");\n        }\n\n        // Salveaz\u0103 preferin\u021be\n        await UserPreferencesService.SaveNotificationSettings(selected);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Implementare ICustomSelectItem - Asigura\u021bi implementarea complet\u0103</li> <li>Grupare logic\u0103 - Organiza\u021bi op\u021biunile \u00een grupuri clare</li> <li>Limite de selec\u021bie - Impune\u021bi limite pentru UX mai bun</li> <li>Feedback vizual - Afi\u0219a\u021bi num\u0103rul de selec\u021bii</li> <li>Performan\u021b\u0103 - Pentru liste mari, implementa\u021bi virtualizare</li> <li>Accesibilitate - Include\u021bi etichete descriptive</li> </ol>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#10-performanta","title":"10. Performan\u021b\u0103","text":"<p>Pentru liste mari de op\u021biuni:</p> <pre><code>@code {\n    private async Task&lt;IEnumerable&lt;CustomSelectItemGroup&gt;&gt; LoadOptionsAsync()\n    {\n        // \u00cencarc\u0103 doar grupurile vizibile ini\u021bial\n        var visibleGroups = await OptionService.GetTopGroupsAsync(10);\n\n        // \u00cencarc\u0103 restul asincron\n        _ = Task.Run(async () =&gt;\n        {\n            var allGroups = await OptionService.GetAllGroupsAsync();\n            await InvokeAsync(() =&gt;\n            {\n                optionGroups = allGroups;\n                StateHasChanged();\n            });\n        });\n\n        return visibleGroups;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodCustomMultipleGroupSelect/#selectiile-nu-se-pastreaza","title":"Selec\u021biile nu se p\u0103streaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Value</code> este unic pentru fiecare op\u021biune</li> <li>Verifica\u021bi implementarea <code>isChecked</code> \u00een model</li> <li>Asigura\u021bi-v\u0103 c\u0103 lista Value este ini\u021bializat\u0103</li> </ul>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#grupurile-nu-apar","title":"Grupurile nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Source</code> con\u021bine date</li> <li>Verifica\u021bi c\u0103 <code>Members</code> nu este gol pentru fiecare grup</li> <li>Verifica\u021bi c\u0103 modelul implementeaz\u0103 <code>ICustomSelectItem</code></li> </ul>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#dropdown-nu-se-inchide","title":"Dropdown nu se \u00eenchide","text":"<ul> <li>Ad\u0103uga\u021bi handler pentru click \u00een afara componentei</li> <li>Implementa\u021bi <code>@onfocusout</code> pentru \u00eenchidere automat\u0103</li> </ul>"},{"location":"fod/componente/FodCustomMultipleGroupSelect/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodCustomMultipleGroupSelect</code> ofer\u0103 o solu\u021bie complet\u0103 pentru selec\u021bii multiple organizate \u00een grupuri. Cu suport pentru validare, personalizare \u0219i o interfa\u021b\u0103 intuitiv\u0103 cu checkbox-uri, componenta este ideal\u0103 pentru scenarii complexe de selec\u021bie \u00een aplica\u021biile FOD.</p>"},{"location":"fod/componente/FodDataTable/","title":"DataTable","text":""},{"location":"fod/componente/FodDataTable/#documentatie-pentru-componenta-foddatatable","title":"Documenta\u021bie pentru componenta FodDataTable","text":""},{"location":"fod/componente/FodDataTable/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodDataTable</code> este o component\u0103 avansat\u0103 pentru afi\u0219area datelor tabulare cu func\u021bionalit\u0103\u021bi complete de sortare, filtrare, paginare \u0219i personalizare. Este ideal\u0103 pentru afi\u0219area listelor de date complexe cu necesit\u0103\u021bi de interac\u021biune avansat\u0103.</p> <p>Componenta suport\u0103: - Sortare pe coloane - Filtrare global\u0103 \u0219i pe coloane - Paginare cu dimensiuni configurabile - Selec\u021bie single/multiple - Coloane personalizabile cu template-uri - Grupare date - Export date - Responsive design - Virtualizare pentru seturi mari de date</p>"},{"location":"fod/componente/FodDataTable/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodDataTable/#tabel-de-baza","title":"Tabel de baz\u0103","text":"<pre><code>&lt;FodDataTable Items=\"users\" Class=\"elevation-1\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n            &lt;FodTh&gt;Rol&lt;/FodTh&gt;\n            &lt;FodTh&gt;Status&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Email&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Role&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Status&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;User&gt; users = new List&lt;User&gt;\n    {\n        new User { Name = \"Ion Popescu\", Email = \"ion@example.md\", Role = \"Admin\", Status = \"Activ\" },\n        new User { Name = \"Maria Ionescu\", Email = \"maria@example.md\", Role = \"User\", Status = \"Activ\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-cu-sortare","title":"Tabel cu sortare","text":"<pre><code>&lt;FodDataTable Items=\"products\" @bind-SortBy=\"sortBy\" @bind-SortDescending=\"sortDesc\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel SortBy=\"name\" @bind-CurrentSortBy=\"@sortBy\"&gt;\n                    Nume Produs\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel SortBy=\"price\" @bind-CurrentSortBy=\"@sortBy\"&gt;\n                    Pre\u021b\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel SortBy=\"stock\" @bind-CurrentSortBy=\"@sortBy\"&gt;\n                    Stoc\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Price.ToString(\"C\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Stock&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private string sortBy = \"name\";\n    private bool sortDesc = false;\n    private List&lt;Product&gt; products;\n\n    protected override void OnInitialized()\n    {\n        products = GetProducts();\n        SortProducts();\n    }\n\n    private void SortProducts()\n    {\n        products = sortBy switch\n        {\n            \"name\" =&gt; sortDesc ? products.OrderByDescending(p =&gt; p.Name).ToList() : products.OrderBy(p =&gt; p.Name).ToList(),\n            \"price\" =&gt; sortDesc ? products.OrderByDescending(p =&gt; p.Price).ToList() : products.OrderBy(p =&gt; p.Price).ToList(),\n            \"stock\" =&gt; sortDesc ? products.OrderByDescending(p =&gt; p.Stock).ToList() : products.OrderBy(p =&gt; p.Stock).ToList(),\n            _ =&gt; products\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-cu-filtrare","title":"Tabel cu filtrare","text":"<pre><code>&lt;FodDataTable Items=\"filteredItems\" Search=\"true\" SearchIcon=\"@FodIcons.Material.Filled.Search\"&gt;\n    &lt;ToolbarContent&gt;\n        &lt;FodTextField @bind-Value=\"searchString\" \n                      Placeholder=\"Caut\u0103...\" \n                      Adornment=\"Adornment.Start\" \n                      AdornmentIcon=\"@FodIcons.Material.Filled.Search\" \n                      IconSize=\"Size.Medium\" \n                      Class=\"mt-0\" /&gt;\n    &lt;/ToolbarContent&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Descriere&lt;/FodTh&gt;\n            &lt;FodTh&gt;Categorie&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Description&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Category&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private string searchString = \"\";\n    private List&lt;Item&gt; allItems = GetItems();\n\n    private List&lt;Item&gt; filteredItems =&gt; string.IsNullOrWhiteSpace(searchString) \n        ? allItems \n        : allItems.Where(x =&gt; \n            x.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase) ||\n            x.Description.Contains(searchString, StringComparison.OrdinalIgnoreCase) ||\n            x.Category.Contains(searchString, StringComparison.OrdinalIgnoreCase)\n        ).ToList();\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-cu-paginare","title":"Tabel cu paginare","text":"<pre><code>&lt;FodDataTable Items=\"pagedData\" \n              @bind-Page=\"currentPage\" \n              @bind-RowsPerPage=\"pageSize\"\n              TotalItems=\"totalItems\"\n              Paginate=\"true\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;ID&lt;/FodTh&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Data&lt;/FodTh&gt;\n            &lt;FodTh&gt;Status&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@context.Id&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Date.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodChip Color=\"@GetStatusColor(context.Status)\" Size=\"Size.Small\"&gt;\n                    @context.Status\n                &lt;/FodChip&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n    &lt;PagerContent&gt;\n        &lt;FodTablePager PageSizeOptions=\"new int[] { 10, 25, 50, 100 }\" /&gt;\n    &lt;/PagerContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private int currentPage = 1;\n    private int pageSize = 10;\n    private int totalItems = 1000;\n\n    private List&lt;DataItem&gt; pagedData =&gt; GetPagedData(currentPage, pageSize);\n\n    private FodColor GetStatusColor(string status) =&gt; status switch\n    {\n        \"Activ\" =&gt; FodColor.Success,\n        \"Inactiv\" =&gt; FodColor.Error,\n        \"Pending\" =&gt; FodColor.Warning,\n        _ =&gt; FodColor.Default\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-cu-selectie","title":"Tabel cu selec\u021bie","text":"<pre><code>&lt;FodDataTable Items=\"items\" \n              MultiSelection=\"true\" \n              @bind-SelectedItems=\"selectedItems\"\n              SelectOnRowClick=\"true\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh Style=\"width: 48px;\"&gt;\n                &lt;FodCheckbox @bind-Checked=\"selectAll\" /&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n            &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;\n                &lt;FodCheckbox @bind-Checked=\"@context.IsSelected\" /&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Email&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Edit\" Size=\"Size.Small\" /&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Size=\"Size.Small\" Color=\"FodColor.Error\" /&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow&gt;\n            &lt;FodTd Colspan=\"4\"&gt;\n                &lt;FodText&gt;@selectedItems.Count() elemente selectate&lt;/FodText&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;SelectableItem&gt; items = GetItems();\n    private IEnumerable&lt;SelectableItem&gt; selectedItems = new List&lt;SelectableItem&gt;();\n    private bool selectAll = false;\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-cu-grupare","title":"Tabel cu grupare","text":"<pre><code>&lt;FodDataTable Items=\"groupedItems\" GroupBy=\"Category\"&gt;\n    &lt;GroupHeaderTemplate&gt;\n        &lt;FodTableGroupRow&gt;\n            &lt;FodTd Colspan=\"3\"&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;@context.Key&lt;/FodText&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTableGroupRow&gt;\n    &lt;/GroupHeaderTemplate&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Produs&lt;/FodTh&gt;\n            &lt;FodTh&gt;Pre\u021b&lt;/FodTh&gt;\n            &lt;FodTh&gt;Stoc&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Price MDL&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Stock buc.&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodDataTable/#tabel-avansat-cu-toate-functionalitatile","title":"Tabel avansat cu toate func\u021bionalit\u0103\u021bile","text":"<pre><code>&lt;FodDataTable Items=\"@Elements\" \n              FilterFunc=\"@FilterFunc\" \n              @bind-SelectedItem=\"selectedElement\"\n              Dense=\"true\"\n              Hover=\"true\"\n              Striped=\"true\"\n              Bordered=\"true\"\n              Class=\"elevation-1\"&gt;\n    &lt;!-- Toolbar personalizat --&gt;\n    &lt;ToolbarContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Gestiune utilizatori&lt;/FodText&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodTextField @bind-Value=\"searchString\" \n                      Placeholder=\"Caut\u0103 utilizatori...\" \n                      Adornment=\"Adornment.Start\" \n                      AdornmentIcon=\"@FodIcons.Material.Filled.Search\" \n                      Class=\"mt-0 mx-4\" /&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Add\" \n                   Color=\"FodColor.Primary\" \n                   Variant=\"FodVariant.Filled\"&gt;\n            Adaug\u0103 utilizator\n        &lt;/FodButton&gt;\n    &lt;/ToolbarContent&gt;\n\n    &lt;!-- Coloane cu template personalizat --&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"User\" Field=\"Avatar\" Title=\"\"&gt;\n            &lt;CellTemplate&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AccountCircle\" \n                         Size=\"Size.Small\" /&gt;\n            &lt;/CellTemplate&gt;\n        &lt;/FodColumn&gt;\n\n        &lt;FodColumn T=\"User\" Field=\"Name\" Title=\"Nume complet\" Sortable=\"true\"&gt;\n            &lt;CellTemplate&gt;\n                &lt;FodText&gt;@context.Item.FirstName @context.Item.LastName&lt;/FodText&gt;\n            &lt;/CellTemplate&gt;\n        &lt;/FodColumn&gt;\n\n        &lt;FodColumn T=\"User\" Field=\"Email\" Title=\"Email\" Sortable=\"true\" /&gt;\n\n        &lt;FodColumn T=\"User\" Field=\"Role\" Title=\"Rol\"&gt;\n            &lt;CellTemplate&gt;\n                &lt;FodChip Color=\"@GetRoleColor(context.Item.Role)\" Size=\"Size.Small\"&gt;\n                    @context.Item.Role\n                &lt;/FodChip&gt;\n            &lt;/CellTemplate&gt;\n        &lt;/FodColumn&gt;\n\n        &lt;FodColumn T=\"User\" Field=\"Status\" Title=\"Status\"&gt;\n            &lt;CellTemplate&gt;\n                &lt;FodSwitch @bind-Checked=\"@context.Item.IsActive\" Color=\"FodColor.Success\" /&gt;\n            &lt;/CellTemplate&gt;\n        &lt;/FodColumn&gt;\n\n        &lt;FodColumn T=\"User\" Title=\"Ac\u021biuni\" Sortable=\"false\"&gt;\n            &lt;CellTemplate&gt;\n                &lt;FodMenu&gt;\n                    &lt;ActivatorContent&gt;\n                        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" /&gt;\n                    &lt;/ActivatorContent&gt;\n                    &lt;ChildContent&gt;\n                        &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Edit\"&gt;Editeaz\u0103&lt;/FodMenuItem&gt;\n                        &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Lock\"&gt;Reseteaz\u0103 parola&lt;/FodMenuItem&gt;\n                        &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Delete\" Color=\"FodColor.Error\"&gt;\u0218terge&lt;/FodMenuItem&gt;\n                    &lt;/ChildContent&gt;\n                &lt;/FodMenu&gt;\n            &lt;/CellTemplate&gt;\n        &lt;/FodColumn&gt;\n    &lt;/Columns&gt;\n\n    &lt;!-- Paginare --&gt;\n    &lt;PagerContent&gt;\n        &lt;FodTablePager /&gt;\n    &lt;/PagerContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;User&gt; Elements = GetUsers();\n    private string searchString = \"\";\n    private User selectedElement;\n\n    private bool FilterFunc(User element) =&gt; FilterFunc(element, searchString);\n\n    private bool FilterFunc(User element, string searchString)\n    {\n        if (string.IsNullOrWhiteSpace(searchString))\n            return true;\n        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))\n            return true;\n        if (element.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))\n            return true;\n        if (element.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase))\n            return true;\n        return false;\n    }\n\n    private FodColor GetRoleColor(string role) =&gt; role switch\n    {\n        \"Admin\" =&gt; FodColor.Primary,\n        \"Manager\" =&gt; FodColor.Secondary,\n        \"User\" =&gt; FodColor.Default,\n        _ =&gt; FodColor.Default\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Items</code> <code>IEnumerable&lt;T&gt;</code> Colec\u021bia de date pentru afi\u0219are <code>null</code> <code>Dense</code> <code>bool</code> Reduce padding-ul pentru un tabel mai compact <code>false</code> <code>Hover</code> <code>bool</code> Eviden\u021biaz\u0103 r\u00e2ndul la hover <code>false</code> <code>Striped</code> <code>bool</code> R\u00e2nduri alternate colorate <code>false</code> <code>Bordered</code> <code>bool</code> Adaug\u0103 borduri la celule <code>false</code> <code>Elevation</code> <code>int</code> Nivelul de umbr\u0103 (0-24) <code>1</code> <code>SelectedItem</code> <code>T</code> Elementul selectat curent <code>null</code> <code>SelectedItems</code> <code>HashSet&lt;T&gt;</code> Elementele selectate (multi-selection) <code>null</code> <code>MultiSelection</code> <code>bool</code> Permite selec\u021bie multipl\u0103 <code>false</code> <code>SelectOnRowClick</code> <code>bool</code> Selecteaz\u0103 la click pe r\u00e2nd <code>false</code> <code>SortBy</code> <code>string</code> Coloana curent\u0103 de sortare <code>null</code> <code>SortDescending</code> <code>bool</code> Direc\u021bia de sortare <code>false</code> <code>Page</code> <code>int</code> Pagina curent\u0103 <code>1</code> <code>RowsPerPage</code> <code>int</code> Num\u0103r de r\u00e2nduri pe pagin\u0103 <code>10</code> <code>TotalItems</code> <code>int</code> Total elemente (pentru paginare server-side) <code>0</code> <code>FilterFunc</code> <code>Func&lt;T, bool&gt;</code> Func\u021bie de filtrare personalizat\u0103 <code>null</code> <code>GroupBy</code> <code>string</code> Proprietatea pentru grupare <code>null</code> <code>HeaderContent</code> <code>RenderFragment</code> Template pentru header tabel - <code>RowTemplate</code> <code>RenderFragment&lt;T&gt;</code> Template pentru r\u00e2nduri - <code>FooterContent</code> <code>RenderFragment</code> Template pentru footer - <code>ToolbarContent</code> <code>RenderFragment</code> Con\u021binut toolbar - <code>PagerContent</code> <code>RenderFragment</code> Template pentru paginator - <code>NoDataContent</code> <code>RenderFragment</code> Con\u021binut c\u00e2nd nu sunt date - <code>LoadingContent</code> <code>RenderFragment</code> Con\u021binut \u00een timpul \u00eenc\u0103rc\u0103rii -"},{"location":"fod/componente/FodDataTable/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>OnRowClick</code> <code>EventCallback&lt;TableRowClickEventArgs&lt;T&gt;&gt;</code> Click pe r\u00e2nd <code>SelectedItemChanged</code> <code>EventCallback&lt;T&gt;</code> Schimbare element selectat <code>SelectedItemsChanged</code> <code>EventCallback&lt;HashSet&lt;T&gt;&gt;</code> Schimbare selec\u021bie multipl\u0103 <code>SortByChanged</code> <code>EventCallback&lt;string&gt;</code> Schimbare coloan\u0103 sortare <code>PageChanged</code> <code>EventCallback&lt;int&gt;</code> Schimbare pagin\u0103 <code>RowsPerPageChanged</code> <code>EventCallback&lt;int&gt;</code> Schimbare dimensiune pagin\u0103"},{"location":"fod/componente/FodDataTable/#5-componente-asociate","title":"5. Componente asociate","text":""},{"location":"fod/componente/FodDataTable/#fodcolumn","title":"FodColumn","text":"<p>Define\u0219te o coloan\u0103 \u00een tabel: <pre><code>&lt;FodColumn T=\"Item\" \n           Field=\"@nameof(Item.Name)\" \n           Title=\"Nume produs\"\n           Sortable=\"true\"\n           Filterable=\"true\"\n           Width=\"200px\"&gt;\n    &lt;CellTemplate&gt;\n        &lt;strong&gt;@context.Item.Name&lt;/strong&gt;\n    &lt;/CellTemplate&gt;\n&lt;/FodColumn&gt;\n</code></pre></p>"},{"location":"fod/componente/FodDataTable/#fodtablesortlabel","title":"FodTableSortLabel","text":"<p>Etichet\u0103 pentru sortare \u00een header: <pre><code>&lt;FodTableSortLabel SortBy=\"price\" @bind-CurrentSortBy=\"@sortBy\"&gt;\n    Pre\u021b\n&lt;/FodTableSortLabel&gt;\n</code></pre></p>"},{"location":"fod/componente/FodDataTable/#fodtablepager","title":"FodTablePager","text":"<p>Controale de paginare: <pre><code>&lt;FodTablePager PageSizeOptions=\"new int[] { 5, 10, 25, 50, 100 }\" \n               HideRowsPerPage=\"false\"\n               HidePageButtons=\"false\" /&gt;\n</code></pre></p>"},{"location":"fod/componente/FodDataTable/#6-filtrare-avansata","title":"6. Filtrare avansat\u0103","text":"<pre><code>&lt;FodDataTable Items=\"FilteredUsers\"&gt;\n    &lt;Columns&gt;\n        &lt;FodColumn T=\"User\" Field=\"Name\" Title=\"Nume\"&gt;\n            &lt;FilterTemplate&gt;\n                &lt;FodTextField @bind-Value=\"nameFilter\" Placeholder=\"Filtreaz\u0103 nume...\" /&gt;\n            &lt;/FilterTemplate&gt;\n        &lt;/FodColumn&gt;\n\n        &lt;FodColumn T=\"User\" Field=\"Role\" Title=\"Rol\"&gt;\n            &lt;FilterTemplate&gt;\n                &lt;FodSelect @bind-Value=\"roleFilter\" Placeholder=\"Toate rolurile\"&gt;\n                    &lt;FodSelectItem Value=\"\"&gt;Toate&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"Admin\"&gt;Admin&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"User\"&gt;User&lt;/FodSelectItem&gt;\n                &lt;/FodSelect&gt;\n            &lt;/FilterTemplate&gt;\n        &lt;/FodColumn&gt;\n    &lt;/Columns&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private string nameFilter = \"\";\n    private string roleFilter = \"\";\n\n    private IEnumerable&lt;User&gt; FilteredUsers =&gt; users\n        .Where(u =&gt; string.IsNullOrEmpty(nameFilter) || u.Name.Contains(nameFilter))\n        .Where(u =&gt; string.IsNullOrEmpty(roleFilter) || u.Role == roleFilter);\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#7-server-side-operations","title":"7. Server-side operations","text":"<pre><code>&lt;FodDataTable Items=\"serverData\" \n              TotalItems=\"totalServerItems\"\n              ServerData=\"true\"\n              @bind-Page=\"currentPage\"\n              @bind-RowsPerPage=\"pageSize\"\n              @bind-SortBy=\"sortBy\"\n              OnServerDataRequest=\"LoadServerData\"&gt;\n    &lt;!-- Coloane --&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;Item&gt; serverData = new();\n    private int totalServerItems = 0;\n    private int currentPage = 1;\n    private int pageSize = 10;\n    private string sortBy = \"\";\n\n    private async Task LoadServerData(ServerDataEventArgs args)\n    {\n        var result = await DataService.GetPagedData(\n            args.Page, \n            args.PageSize, \n            args.SortBy, \n            args.SortDescending,\n            args.FilterValues\n        );\n\n        serverData = result.Items;\n        totalServerItems = result.TotalCount;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#8-export-date","title":"8. Export date","text":"<pre><code>&lt;FodDataTable Items=\"items\"&gt;\n    &lt;ToolbarContent&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Download\" \n                   OnClick=\"ExportToExcel\"&gt;\n            Export Excel\n        &lt;/FodButton&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.PictureAsPdf\" \n                   OnClick=\"ExportToPdf\"&gt;\n            Export PDF\n        &lt;/FodButton&gt;\n    &lt;/ToolbarContent&gt;\n    &lt;!-- Restul configura\u021biei --&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private async Task ExportToExcel()\n    {\n        var excelData = items.Select(i =&gt; new \n        {\n            i.Name,\n            i.Email,\n            i.Role,\n            CreatedDate = i.CreatedAt.ToString(\"dd.MM.yyyy\")\n        });\n\n        await ExcelService.Export(\"users.xlsx\", excelData);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDataTable/#9-note-si-observatii","title":"9. Note \u0219i observa\u021bii","text":"<ul> <li>Pentru seturi mari de date (&gt;1000 r\u00e2nduri), folosi\u021bi virtualizare sau paginare server-side</li> <li>Sortarea \u0219i filtrarea se fac \u00een memorie pentru date client-side</li> <li>MultiSelection creeaz\u0103 o referin\u021b\u0103 HashSet pentru performan\u021b\u0103</li> <li>Folosi\u021bi Dense pentru a economisi spa\u021biu vertical</li> <li>GroupBy func\u021bioneaz\u0103 doar cu date client-side</li> </ul>"},{"location":"fod/componente/FodDataTable/#10-bune-practici","title":"10. Bune practici","text":"<ol> <li>Performan\u021b\u0103 - Pentru &gt;100 r\u00e2nduri, activa\u021bi paginarea</li> <li>Responsive - Ascunde\u021bi coloane mai pu\u021bin importante pe mobile</li> <li>Loading states - Afi\u0219a\u021bi indicatori pentru opera\u021bii asincrone</li> <li>Sortare - Activa\u021bi doar pentru coloane relevante</li> <li>Selec\u021bie - Oferi\u021bi feedback vizual pentru elementele selectate</li> <li>Ac\u021biuni - Grupa\u021bi ac\u021biunile \u00eentr-un meniu pentru a economisi spa\u021biu</li> </ol>"},{"location":"fod/componente/FodDataTable/#11-concluzie","title":"11. Concluzie","text":"<p><code>FodDataTable</code> este componenta ideal\u0103 pentru afi\u0219area \u0219i manipularea datelor tabulare complexe, oferind toate func\u021bionalit\u0103\u021bile necesare pentru o experien\u021b\u0103 utilizator profesional\u0103.</p>"},{"location":"fod/componente/FodDatePicker/","title":"Date Picker","text":"<p>Documenta\u021bie Componente Razor: <code>FodDatePicker</code> \u0219i <code>FodDateRangePicker</code> Namespace: <code>Fod.Components</code></p>"},{"location":"fod/componente/FodDatePicker/#1-foddatepicker","title":"1. FodDatePicker","text":""},{"location":"fod/componente/FodDatePicker/#descriere","title":"Descriere","text":"<p><code>FodDatePicker</code> este o component\u0103 de tip date picker care permite selectarea unei singure date. Deriv\u0103 din <code>FodBaseDatePicker</code>, care implementeaz\u0103 logica comun\u0103 pentru interfa\u021ba calendarului \u0219i comportamentul picker-ului.</p> <p>\u26a0\ufe0f Pentru ca <code>FodDatePicker</code> s\u0103 func\u021bioneze corect, componenta trebuie s\u0103 fie generat\u0103 \u00een interiorul unui <code>FodLayout</code> sau s\u0103 fie ad\u0103ugat manual <code>&lt;FodPopoverProvider&gt;&lt;/FodPopoverProvider&gt;</code> \u00een layout-ul aplica\u021biei.</p>"},{"location":"fod/componente/FodDatePicker/#proprietati-principale","title":"Propriet\u0103\u021bi principale","text":"Proprietate Tip Descriere Date <code>DateTime?</code> Data selectat\u0103 (binding bidirec\u021bional). DateChanged <code>EventCallback&lt;DateTime?&gt;</code> Eveniment invocat c\u00e2nd data se modific\u0103. OnDateChanged <code>EventCallback&lt;DateTime?&gt;</code> Eveniment suplimentar la modificarea datei. DateFormat <code>string</code> Formatul de afi\u0219are a datei. MinDate / MaxDate <code>DateTime?</code> Limite inferioare \u0219i superioare pentru selec\u021bie. FixYear/FixMonth/FixDay <code>int?</code> Fixeaz\u0103 un an, lun\u0103 sau zi (nu pot fi selectate alte valori). AutoClose <code>bool</code> \u00cenchide automat picker-ul dup\u0103 selec\u021bie. IsDateDisabledFunc <code>Func&lt;DateTime, bool&gt;</code> Func\u021bie care dezactiveaz\u0103 anumite zile."},{"location":"fod/componente/FodDatePicker/#functionalitati","title":"Func\u021bionalit\u0103\u021bi","text":"<ul> <li>Suport\u0103 <code>OpenTo</code> (deschiderea la nivel de an/lun\u0103/zi).  </li> <li>Navigare cu tastatura (Enter, Escape, Space, s\u0103ge\u021bi).  </li> <li>Metode publice:</li> <li><code>GoToDate()</code> </li> <li><code>GoToDate(DateTime, bool)</code> \u2013 seteaz\u0103 luna curent\u0103.  </li> <li><code>Clear()</code> \u2013 \u0219terge data selectat\u0103.  </li> <li><code>Submit()</code> \u2013 finalizeaz\u0103 selec\u021bia.  </li> </ul>"},{"location":"fod/componente/FodDatePicker/#2-foddaterangepicker","title":"2. FodDateRangePicker","text":""},{"location":"fod/componente/FodDatePicker/#descriere_1","title":"Descriere","text":"<p><code>FodDateRangePicker</code> permite selectarea unui interval de date (de la \u2013 p\u00e2n\u0103 la). Mo\u0219tene\u0219te <code>FodBaseDatePicker</code> \u0219i gestioneaz\u0103 logica suplimentar\u0103 necesar\u0103 pentru lucrul cu intervale.</p>"},{"location":"fod/componente/FodDatePicker/#proprietati-principale_1","title":"Propriet\u0103\u021bi principale","text":"Proprietate Tip Descriere DateRange <code>DateRange</code> Intervalul selectat (binding bidirec\u021bional). DateRangeChanged <code>EventCallback&lt;DateRange&gt;</code> Eveniment invocat c\u00e2nd intervalul se modific\u0103. MinDate/MaxDate <code>DateTime?</code> Limite inferioare \u0219i superioare pentru selec\u021bie. DisplayMonths <code>int</code> Num\u0103rul de luni afi\u0219ate simultan (implicit 2)."},{"location":"fod/componente/FodDatePicker/#functionalitati_1","title":"Func\u021bionalit\u0103\u021bi","text":"<ul> <li>Selectarea se face \u00een 2 pa\u0219i: primul click seteaz\u0103 <code>Start</code>, al doilea <code>End</code>.  </li> <li>Dac\u0103 selec\u021bia este invalid\u0103 (con\u021bine zile dezactivate), este ignorat\u0103.  </li> <li>Metode publice pentru control text:</li> <li><code>FocusStartAsync()</code> / <code>FocusEndAsync()</code> </li> <li><code>SelectStartAsync()</code> / <code>SelectEndAsync()</code> </li> <li><code>SelectRangeStartAsync()</code> / <code>SelectRangeEndAsync()</code> </li> <li>Suport\u0103 formatare customizabil\u0103 (<code>DateFormat</code>) \u0219i conversie <code>string \u2194 DateRange</code>.</li> </ul>"},{"location":"fod/componente/FodDatePicker/#3-clasa-daterange","title":"3. Clasa <code>DateRange</code>","text":""},{"location":"fod/componente/FodDatePicker/#descriere_2","title":"Descriere","text":"<p>Clas\u0103 model care define\u0219te un interval de tip <code>DateTime?</code>. Include metode pentru: - Conversie la/din string (<code>ToIsoDateString()</code>, <code>TryParse(...)</code>) - Egalitate (<code>Equals</code>, operatori <code>==</code>, <code>!=</code>) - Suport <code>RangeConverter</code></p>"},{"location":"fod/componente/FodDatePicker/#4-componente-interne-utilitare","title":"4. Componente interne &amp; utilitare","text":"<ul> <li><code>FodBaseDatePicker</code>: Clas\u0103 abstract\u0103 cu func\u021bionalitate comun\u0103 picker-urilor:</li> <li>Navigare lun\u0103/an</li> <li>Customizare: icoane, formate, cultur\u0103</li> <li> <p><code>OpenTo</code>, <code>CurrentView</code>, <code>DisplayMonths</code>, <code>TitleDateFormat</code></p> </li> <li> <p><code>Range&lt;T&gt;</code>: Model generic pentru intervale (folosit \u00een <code>DateRange</code>).</p> </li> <li><code>Converter&lt;T&gt;</code>: Obiect care converte\u0219te \u00eentre <code>T</code> \u0219i <code>string</code>, cu erori \u0219i formatare.</li> <li><code>CssBuilder</code>: Utilitar pentru compunerea dinamic\u0103 a claselor CSS.</li> </ul>"},{"location":"fod/componente/FodDatePicker/#5-uiux","title":"5. UI/UX","text":"<ul> <li>S\u0103pt\u0103m\u00e2na \u00eencepe conform culturii (<code>FirstDayOfWeek</code>).</li> <li>Suport pentru afi\u0219are numere s\u0103pt\u0103m\u00e2ni (<code>ShowWeekNumbers</code>).</li> <li>Stiluri aplicate condi\u021bionat prin func\u021bii delegate:</li> <li><code>IsDateDisabledFunc</code></li> <li><code>AdditionalDateClassesFunc</code></li> </ul>"},{"location":"fod/componente/FodDatePicker/#6-exemple-de-utilizare","title":"6. Exemple de utilizare","text":"<pre><code>&lt;FodDatePicker @bind-Date=\"selectedDate\"\n               MinDate=\"DateTime.Today\"\n               MaxDate=\"DateTime.Today.AddYears(1)\"\n               DateFormat=\"dd.MM.yyyy\"\n               AutoClose=\"true\" /&gt;\n\n&lt;FodDateRangePicker @bind-DateRange=\"selectedRange\"\n                    DisplayMonths=\"2\"\n                    DateFormat=\"yyyy-MM-dd\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/","title":"DateRangePicker","text":""},{"location":"fod/componente/FodDateRangePicker/#documentatie-pentru-componenta-foddaterangepicker","title":"Documenta\u021bie pentru componenta FodDateRangePicker","text":""},{"location":"fod/componente/FodDateRangePicker/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodDateRangePicker</code> este o component\u0103 avansat\u0103 pentru selectarea unui interval de date \u00eentr-o aplica\u021bie Blazor. Ofer\u0103 o interfa\u021b\u0103 intuitiv\u0103 cu calendar dual, validare integrat\u0103 \u0219i multiple op\u021biuni de personalizare.</p> <p>Caracteristici principale: - Selec\u021bie interval prin dou\u0103 click-uri - Afi\u0219are calendare multiple (implicit 2 luni) - Validare date minime/maxime - Dezactivare date specifice - Formatare personalizat\u0103 - Integrare complet\u0103 cu formulare Blazor - Suport pentru localizare - \u00cenchidere automat\u0103 dup\u0103 selec\u021bie - Eviden\u021biere vizual\u0103 a intervalului selectat</p>"},{"location":"fod/componente/FodDateRangePicker/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-de-baza","title":"DateRangePicker de baz\u0103","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"selectedRange\" /&gt;\n\n@code {\n    private DateRange selectedRange = new DateRange();\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-limite-de-date","title":"DateRangePicker cu limite de date","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"vacationDates\"\n                    Label=\"Perioada concediului\"\n                    MinDate=\"DateTime.Today\"\n                    MaxDate=\"DateTime.Today.AddMonths(6)\"\n                    HelperText=\"Selecta\u021bi perioada dorit\u0103 pentru concediu\" /&gt;\n\n@code {\n    private DateRange vacationDates = new DateRange();\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-validare-in-formular","title":"DateRangePicker cu validare \u00een formular","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodDateRangePicker @bind-DateRange=\"model.ProjectPeriod\"\n                        Label=\"Perioada proiectului\"\n                        Required=\"true\"\n                        RequiredError=\"Perioada proiectului este obligatorie\"\n                        For=\"@(() =&gt; model.ProjectPeriod)\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.ProjectPeriod)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class ProjectModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi perioada proiectului\")]\n        public DateRange ProjectPeriod { get; set; } = new DateRange();\n\n        // Validare personalizat\u0103\n        public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n        {\n            if (ProjectPeriod?.Start != null &amp;&amp; ProjectPeriod?.End != null)\n            {\n                var duration = ProjectPeriod.End.Value - ProjectPeriod.Start.Value;\n                if (duration.TotalDays &gt; 365)\n                {\n                    yield return new ValidationResult(\n                        \"Perioada proiectului nu poate dep\u0103\u0219i un an\",\n                        new[] { nameof(ProjectPeriod) });\n                }\n            }\n        }\n    }\n\n    private ProjectModel model = new();\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-date-dezactivate","title":"DateRangePicker cu date dezactivate","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"bookingDates\"\n                    Label=\"Selecta\u021bi perioada rezerv\u0103rii\"\n                    MinDate=\"DateTime.Today\"\n                    MaxDate=\"DateTime.Today.AddMonths(3)\"\n                    IsDateDisabledFunc=\"@IsDateUnavailable\"\n                    HelperText=\"Zilele marcate sunt indisponibile\" /&gt;\n\n@code {\n    private DateRange bookingDates = new DateRange();\n    private List&lt;DateTime&gt; unavailableDates = new()\n    {\n        DateTime.Today.AddDays(5),\n        DateTime.Today.AddDays(6),\n        DateTime.Today.AddDays(10),\n        DateTime.Today.AddDays(15)\n    };\n\n    private bool IsDateUnavailable(DateTime date)\n    {\n        // Weekend-uri\n        if (date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday)\n            return true;\n\n        // Date specifice indisponibile\n        return unavailableDates.Contains(date.Date);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-format-personalizat","title":"DateRangePicker cu format personalizat","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"customRange\"\n                    Label=\"Interval personalizat\"\n                    DateFormat=\"dd MMMM yyyy\"\n                    Culture=\"@(new System.Globalization.CultureInfo(\"ro-RO\"))\"\n                    FirstDayOfWeek=\"DayOfWeek.Monday\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-afisare-multipla-luni","title":"DateRangePicker cu afi\u0219are multipl\u0103 luni","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"extendedRange\"\n                    Label=\"Planificare pe termen lung\"\n                    DisplayMonths=\"3\"\n                    AutoClose=\"false\"\n                    HelperText=\"Afi\u0219eaz\u0103 3 luni pentru planificare mai u\u0219oar\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-presetari-rapide","title":"DateRangePicker cu preset\u0103ri rapide","text":"<pre><code>&lt;div class=\"d-flex gap-2 mb-3\"&gt;\n    &lt;FodButton OnClick=\"@(() =&gt; SetLastWeek())\" \n               Variant=\"FodVariant.Outlined\" \n               Size=\"Size.Small\"&gt;\n        S\u0103pt\u0103m\u00e2na trecut\u0103\n    &lt;/FodButton&gt;\n    &lt;FodButton OnClick=\"@(() =&gt; SetLastMonth())\" \n               Variant=\"FodVariant.Outlined\" \n               Size=\"Size.Small\"&gt;\n        Luna trecut\u0103\n    &lt;/FodButton&gt;\n    &lt;FodButton OnClick=\"@(() =&gt; SetLast30Days())\" \n               Variant=\"FodVariant.Outlined\" \n               Size=\"Size.Small\"&gt;\n        Ultimele 30 zile\n    &lt;/FodButton&gt;\n&lt;/div&gt;\n\n&lt;FodDateRangePicker @bind-DateRange=\"reportRange\"\n                    Label=\"Perioada raportului\" /&gt;\n\n@code {\n    private DateRange reportRange = new DateRange();\n\n    private void SetLastWeek()\n    {\n        var today = DateTime.Today;\n        var startOfWeek = today.AddDays(-(int)today.DayOfWeek - 6);\n        reportRange = new DateRange(startOfWeek, startOfWeek.AddDays(6));\n    }\n\n    private void SetLastMonth()\n    {\n        var today = DateTime.Today;\n        var firstDayLastMonth = new DateTime(today.Year, today.Month, 1).AddMonths(-1);\n        var lastDayLastMonth = firstDayLastMonth.AddMonths(1).AddDays(-1);\n        reportRange = new DateRange(firstDayLastMonth, lastDayLastMonth);\n    }\n\n    private void SetLast30Days()\n    {\n        var today = DateTime.Today;\n        reportRange = new DateRange(today.AddDays(-30), today);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-pentru-filtrare-date","title":"DateRangePicker pentru filtrare date","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Filtrare tranzac\u021bii&lt;/FodText&gt;\n\n        &lt;FodDateRangePicker @bind-DateRange=\"filterDates\"\n                            Label=\"Perioada tranzac\u021biilor\"\n                            MaxDate=\"DateTime.Today\"\n                            OnDateRangeChanged=\"FilterTransactions\" /&gt;\n\n        @if (filteredTransactions.Any())\n        {\n            &lt;div class=\"mt-3\"&gt;\n                &lt;FodText&gt;\n                    G\u0103site @filteredTransactions.Count tranzac\u021bii \u00eentre \n                    @filterDates.Start?.ToString(\"dd.MM.yyyy\") \u0219i \n                    @filterDates.End?.ToString(\"dd.MM.yyyy\")\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DateRange filterDates = new DateRange();\n    private List&lt;Transaction&gt; allTransactions = GetTransactions();\n    private List&lt;Transaction&gt; filteredTransactions = new();\n\n    private async Task FilterTransactions(DateRange range)\n    {\n        if (range?.Start != null &amp;&amp; range?.End != null)\n        {\n            filteredTransactions = allTransactions\n                .Where(t =&gt; t.Date &gt;= range.Start &amp;&amp; t.Date &lt;= range.End)\n                .ToList();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-stilizare-personalizata","title":"DateRangePicker cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"styledRange\"\n                    Label=\"Interval stilizat\"\n                    Color=\"FodColor.Primary\"\n                    Variant=\"FodVariant.Filled\"\n                    AdornmentIcon=\"@FodIcons.Material.Filled.DateRange\"\n                    AdornmentColor=\"FodColor.Primary\"\n                    Class=\"custom-date-range-picker\" /&gt;\n\n&lt;style&gt;\n    .custom-date-range-picker {\n        --fod-range-color: #1976d2;\n        --fod-range-hover-color: #42a5f5;\n    }\n\n    .custom-date-range-picker .fod-range-between {\n        background-color: var(--fod-range-color);\n        opacity: 0.1;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#daterangepicker-cu-validare-interval-minimmaxim","title":"DateRangePicker cu validare interval minim/maxim","text":"<pre><code>&lt;FodDateRangePicker @bind-DateRange=\"reservationDates\"\n                    Label=\"Perioada rezerv\u0103rii\"\n                    MinDate=\"DateTime.Today.AddDays(1)\"\n                    MaxDate=\"DateTime.Today.AddMonths(3)\"\n                    ValidationFunc=\"@ValidateReservationPeriod\"\n                    HelperText=\"Minim 2 nop\u021bi, maxim 14 nop\u021bi\" /&gt;\n\n@code {\n    private DateRange reservationDates = new DateRange();\n\n    private string ValidateReservationPeriod(DateRange range)\n    {\n        if (range?.Start == null || range?.End == null)\n            return null;\n\n        var nights = (range.End.Value - range.Start.Value).TotalDays;\n\n        if (nights &lt; 2)\n            return \"Rezervarea minim\u0103 este de 2 nop\u021bi\";\n\n        if (nights &gt; 14)\n            return \"Rezervarea maxim\u0103 este de 14 nop\u021bi\";\n\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>DateRange</code> <code>DateRange</code> Intervalul de date selectat <code>new DateRange()</code> <code>DateRangeChanged</code> <code>EventCallback&lt;DateRange&gt;</code> Eveniment la schimbarea intervalului - <code>DisplayMonths</code> <code>int</code> Num\u0103r de luni afi\u0219ate simultan <code>2</code> <code>MinDate</code> <code>DateTime?</code> Data minim\u0103 selectabil\u0103 <code>null</code> <code>MaxDate</code> <code>DateTime?</code> Data maxim\u0103 selectabil\u0103 <code>null</code> <code>DateFormat</code> <code>string</code> Format afi\u0219are date <code>\"yyyy-MM-dd\"</code> <code>Culture</code> <code>CultureInfo</code> Cultura pentru formatare Current culture <code>FirstDayOfWeek</code> <code>DayOfWeek?</code> Prima zi a s\u0103pt\u0103m\u00e2nii <code>null</code> <code>IsDateDisabledFunc</code> <code>Func&lt;DateTime, bool&gt;</code> Func\u021bie pentru dezactivare date <code>null</code> <code>AutoClose</code> <code>bool</code> \u00cenchide automat dup\u0103 selec\u021bie <code>false</code> <code>Label</code> <code>string</code> Eticheta c\u00e2mpului <code>null</code> <code>HelperText</code> <code>string</code> Text ajut\u0103tor <code>null</code> <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code> <code>RequiredError</code> <code>string</code> Mesaj eroare pentru c\u00e2mp obligatoriu <code>\"Required\"</code> <code>Placeholder</code> <code>string</code> Text placeholder <code>null</code> <code>Variant</code> <code>FodVariant</code> Stilul c\u00e2mpului <code>Outlined</code> <code>Color</code> <code>FodColor</code> Culoarea temei <code>Default</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code> <code>ReadOnly</code> <code>bool</code> Doar citire <code>false</code> <code>AdornmentIcon</code> <code>string</code> Pictogram\u0103 adornment Calendar icon <code>AdornmentColor</code> <code>FodColor</code> Culoare pictogram\u0103 <code>Default</code> <code>ValidationFunc</code> <code>Func&lt;DateRange, string&gt;</code> Func\u021bie validare personalizat\u0103 <code>null</code>"},{"location":"fod/componente/FodDateRangePicker/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>DateRangeChanged</code> <code>EventCallback&lt;DateRange&gt;</code> Se declan\u0219eaz\u0103 la schimbarea intervalului <code>OnDateRangeChanged</code> <code>EventCallback&lt;DateRange&gt;</code> Callback adi\u021bional dup\u0103 schimbare <code>OnOpen</code> <code>EventCallback</code> La deschiderea picker-ului <code>OnClose</code> <code>EventCallback</code> La \u00eenchiderea picker-ului"},{"location":"fod/componente/FodDateRangePicker/#5-metode-publice","title":"5. Metode publice","text":"Metod\u0103 Descriere <code>FocusStartAsync()</code> Focus pe c\u00e2mpul dat\u0103 \u00eenceput <code>FocusEndAsync()</code> Focus pe c\u00e2mpul dat\u0103 sf\u00e2r\u0219it <code>SelectStartAsync()</code> Selecteaz\u0103 tot textul din c\u00e2mpul \u00eenceput <code>SelectEndAsync()</code> Selecteaz\u0103 tot textul din c\u00e2mpul sf\u00e2r\u0219it <code>Clear()</code> \u0218terge intervalul selectat <code>Submit()</code> Finalizeaz\u0103 selec\u021bia curent\u0103"},{"location":"fod/componente/FodDateRangePicker/#6-model-daterange","title":"6. Model DateRange","text":"<pre><code>public class DateRange\n{\n    public DateTime? Start { get; set; }\n    public DateTime? End { get; set; }\n\n    // Constructori\n    public DateRange() { }\n    public DateRange(DateTime? start, DateTime? end)\n    {\n        Start = start;\n        End = end;\n    }\n\n    // Metode utile\n    public bool IsValid() =&gt; Start.HasValue &amp;&amp; End.HasValue &amp;&amp; Start &lt;= End;\n    public int? GetDays() =&gt; IsValid() ? (int?)(End.Value - Start.Value).TotalDays : null;\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":"<pre><code>/* Personalizare culori interval */\n.custom-range-picker {\n    --fod-range-start-color: #1976d2;\n    --fod-range-end-color: #1565c0;\n    --fod-range-between-color: #e3f2fd;\n}\n\n/* Stil pentru zilele dezactivate */\n.custom-range-picker .fod-picker-calendar-day-disabled {\n    color: #ccc;\n    text-decoration: line-through;\n}\n\n/* Eviden\u021biere weekend-uri */\n.custom-range-picker .fod-picker-calendar-day-weekend {\n    background-color: #f5f5f5;\n}\n\n/* Anima\u021bie la hover */\n.custom-range-picker .fod-picker-calendar-day:hover {\n    transform: scale(1.1);\n    transition: transform 0.2s ease;\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/FodDateRangePicker/#in-card-pentru-rapoarte","title":"\u00cen Card pentru rapoarte","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Generare raport&lt;/FodText&gt;\n\n        &lt;FodDateRangePicker @bind-DateRange=\"reportPeriod\"\n                            Label=\"Perioada raportului\"\n                            MaxDate=\"DateTime.Today\" /&gt;\n\n        &lt;FodSelect @bind-Value=\"reportType\" Label=\"Tip raport\" Class=\"mt-3\"&gt;\n            &lt;FodSelectItem Value=\"sales\"&gt;V\u00e2nz\u0103ri&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"inventory\"&gt;Stocuri&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"financial\"&gt;Financiar&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton OnClick=\"GenerateReport\" \n                   Variant=\"FodVariant.Filled\" \n                   Color=\"FodColor.Primary\"\n                   Disabled=\"@(!reportPeriod.IsValid())\"&gt;\n            Genereaz\u0103 raport\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#9-scenarii-avansate","title":"9. Scenarii avansate","text":""},{"location":"fod/componente/FodDateRangePicker/#sincronizare-cu-alte-picker-e","title":"Sincronizare cu alte picker-e","text":"<pre><code>&lt;FodDatePicker @bind-Date=\"startDate\"\n               Label=\"Data \u00eenceput\"\n               MaxDate=\"@endDate\"\n               OnDateChanged=\"@((DateTime? date) =&gt; UpdateRange())\" /&gt;\n\n&lt;FodDatePicker @bind-Date=\"endDate\"\n               Label=\"Data sf\u00e2r\u0219it\"\n               MinDate=\"@startDate\"\n               OnDateChanged=\"@((DateTime? date) =&gt; UpdateRange())\" /&gt;\n\n&lt;FodDateRangePicker @bind-DateRange=\"syncedRange\"\n                    Label=\"Interval sincronizat\"\n                    Disabled=\"true\" /&gt;\n\n@code {\n    private DateTime? startDate;\n    private DateTime? endDate;\n    private DateRange syncedRange = new DateRange();\n\n    private void UpdateRange()\n    {\n        syncedRange = new DateRange(startDate, endDate);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDateRangePicker/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Selec\u021bia se face prin dou\u0103 click-uri consecutive</li> <li>Nu se pot selecta date dezactivate \u00een interval</li> <li>Calendarul afi\u0219eaz\u0103 implicit 2 luni pentru vizibilitate optim\u0103</li> <li>Suport\u0103 navigare cu tastatur\u0103 \u00eentre luni</li> <li>Format dat\u0103 implicit ISO pentru consisten\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodDateRangePicker/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Suport complet pentru navigare cu tastatur\u0103</li> <li>Atribute ARIA pentru screen readers</li> <li>Indicatori vizuali clari pentru st\u0103ri</li> <li>Focus management \u00eentre c\u00e2mpuri</li> </ul>"},{"location":"fod/componente/FodDateRangePicker/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Limite clare - Seta\u021bi MinDate/MaxDate pentru a ghida utilizatorii</li> <li>Validare util\u0103 - Implementa\u021bi valid\u0103ri care ajut\u0103 (durat\u0103 min/max)</li> <li>Preset\u0103ri rapide - Oferi\u021bi butoane pentru perioade comune</li> <li>Feedback vizual - Folosi\u021bi HelperText pentru instruc\u021biuni</li> <li>Date dezactivate - Marca\u021bi clar zilele indisponibile</li> <li>Format consistent - Folosi\u021bi acela\u0219i DateFormat \u00een toat\u0103 aplica\u021bia</li> </ol>"},{"location":"fod/componente/FodDateRangePicker/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodDateRangePicker/#intervalul-nu-se-salveaza","title":"Intervalul nu se salveaz\u0103","text":"<ul> <li>Verifica\u021bi binding-ul <code>@bind-DateRange</code></li> <li>Asigura\u021bi-v\u0103 c\u0103 modelul are proprietate DateRange</li> </ul>"},{"location":"fod/componente/FodDateRangePicker/#calendarul-nu-se-deschide","title":"Calendarul nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 ave\u021bi FodPopoverProvider \u00een layout</li> <li>Component nu trebuie s\u0103 fie Disabled sau ReadOnly</li> </ul>"},{"location":"fod/componente/FodDateRangePicker/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Pentru Required, ambele date trebuie selectate</li> <li>Folosi\u021bi ValidationFunc pentru valid\u0103ri complexe</li> </ul>"},{"location":"fod/componente/FodDateRangePicker/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodDateRangePicker</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i intuitiv\u0103 pentru selectarea intervalelor de date, cu func\u021bionalit\u0103\u021bi avansate de validare \u0219i personalizare, perfect integrat\u0103 \u00een ecosistemul FOD Components.</p>"},{"location":"fod/componente/FodDeliveryDisplay/","title":"FodDeliveryDisplay","text":""},{"location":"fod/componente/FodDeliveryDisplay/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodDeliveryDisplay</code> este utilizat\u0103 pentru afi\u0219area informa\u021biilor despre livrarea documentelor prin servicii de curierat. Ofer\u0103 o vizualizare structurat\u0103 \u0219i clar\u0103 a detaliilor de livrare, incluz\u00e2nd transportatorul, num\u0103rul de urm\u0103rire \u0219i data estimat\u0103 de livrare.</p> <p>Componenta este ideal\u0103 pentru afi\u0219area statusului de livrare \u00een paginile de detalii ale solicit\u0103rilor sau \u00een sec\u021biunile de urm\u0103rire a comenzilor.</p>"},{"location":"fod/componente/FodDeliveryDisplay/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodDeliveryDisplay/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodDeliveryDisplay Model=\"@deliveryInfo\" /&gt;\n\n@code {\n    private FodDeliveryModel deliveryInfo = new()\n    {\n        CarrierName = \"DHL Express\",\n        TrackingId = \"1234567890\",\n        CarrierEstimatedDeliveryEnd = DateTime.Now.AddDays(3)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#integrare-in-pagina-de-detalii","title":"Integrare \u00een pagin\u0103 de detalii","text":"<pre><code>&lt;div class=\"request-details\"&gt;\n    &lt;h3&gt;Informa\u021bii solicitare&lt;/h3&gt;\n\n    &lt;!-- Detalii solicitare --&gt;\n    &lt;FodRequestorDisplay Model=\"@requestor\" /&gt;\n\n    &lt;!-- Informa\u021bii livrare --&gt;\n    @if (hasDelivery)\n    {\n        &lt;FodDeliveryDisplay Model=\"@deliveryModel\" /&gt;\n    }\n\n    &lt;!-- Status solicitare --&gt;\n    &lt;FodRequestStatus Status=\"@status\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#gestionare-model-null","title":"Gestionare model null","text":"<pre><code>&lt;!-- Componenta gestioneaz\u0103 automat cazul c\u00e2nd Model este null --&gt;\n&lt;FodDeliveryDisplay Model=\"@nullableDeliveryModel\" /&gt;\n\n@code {\n    private FodDeliveryModel? nullableDeliveryModel = null;\n    // Va afi\u0219a mesaj de eroare localizat\n}\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#exemplu-cu-date-complete","title":"Exemplu cu date complete","text":"<pre><code>&lt;FodDeliveryDisplay Model=\"@completeDeliveryInfo\" /&gt;\n\n@code {\n    private FodDeliveryModel completeDeliveryInfo = new()\n    {\n        CarrierName = \"Posta Moldovei\",\n        TrackingId = \"RM123456789MD\",\n        CarrierEstimatedDeliveryEnd = DateTime.Now.AddDays(5)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model FodDeliveryModel null Modelul cu informa\u021biile de livrare"},{"location":"fod/componente/FodDeliveryDisplay/#proprietati-foddeliverymodel","title":"Propriet\u0103\u021bi FodDeliveryModel","text":"Proprietate Tip Descriere CarrierName string Numele transportatorului/curierului TrackingId string Num\u0103rul de urm\u0103rire a coletului CarrierEstimatedDeliveryEnd DateTime? Data estimat\u0103 pentru finalizarea livr\u0103rii"},{"location":"fod/componente/FodDeliveryDisplay/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente.</p>"},{"location":"fod/componente/FodDeliveryDisplay/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodDeliveryDisplay/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodCardWrapper - Container pentru afi\u0219area \u00eentr-un card cu titlu \u0219i iconi\u021b\u0103</li> <li>FodDisplay - Component generic pentru afi\u0219area c\u00e2mpurilor formatate</li> <li>FodAlert - Pentru afi\u0219area mesajelor de eroare c\u00e2nd modelul lipse\u0219te</li> </ul>"},{"location":"fod/componente/FodDeliveryDisplay/#stilizare","title":"Stilizare","text":"<p>Componenta folose\u0219te stilurile standard ale componentelor FOD \u0219i Bootstrap.</p>"},{"location":"fod/componente/FodDeliveryDisplay/#structura-vizuala","title":"Structura vizual\u0103","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\ude9a Informa\u021bii livrare              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Transportator: DHL Express          \u2502\n\u2502 Num\u0103r urm\u0103rire: 1234567890          \u2502\n\u2502 Data estimat\u0103: 20.01.2024           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#personalizare","title":"Personalizare","text":"<pre><code>/* Ajustarea spa\u021bierii cardului */\n.fod-delivery-display .fod-card-wrapper {\n    margin-bottom: 1.5rem;\n}\n\n/* Stilizare pentru c\u00e2mpurile de date */\n.fod-delivery-display dl.row {\n    margin-bottom: 0;\n}\n\n/* Eviden\u021bierea num\u0103rului de urm\u0103rire */\n.fod-delivery-display [data-field=\"TrackingId\"] {\n    font-family: monospace;\n    font-weight: bold;\n}\n</code></pre>"},{"location":"fod/componente/FodDeliveryDisplay/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Gestionare null - Componenta afi\u0219eaz\u0103 un mesaj de eroare localizat c\u00e2nd Model este null</li> <li>Localizare complet\u0103 - Toate textele \u0219i etichetele sunt localizate</li> <li>Format read-only - Componenta este doar pentru vizualizare</li> <li>Iconi\u021b\u0103 tematic\u0103 - Folose\u0219te o iconi\u021b\u0103 de livrare pentru identificare vizual\u0103 rapid\u0103</li> <li>Card wrapper - \u00cencapsulat\u0103 \u00een FodCardWrapper pentru consisten\u021b\u0103 vizual\u0103</li> </ol>"},{"location":"fod/componente/FodDeliveryDisplay/#bune-practici","title":"Bune practici","text":"<ol> <li>Validare date - Verifica\u021bi c\u0103 modelul con\u021bine date valide \u00eenainte de afi\u0219are</li> <li>Format tracking ID - P\u0103stra\u021bi formatul original al num\u0103rului de urm\u0103rire</li> <li>Actualizare status - Actualiza\u021bi periodic informa\u021biile de livrare</li> <li>Context complet - Folosi\u021bi \u00eempreun\u0103 cu alte componente de afi\u0219are pentru context</li> <li>Tratare erori - Gestiona\u021bi cazurile c\u00e2nd serviciul de livrare nu returneaz\u0103 date</li> </ol>"},{"location":"fod/componente/FodDeliveryDisplay/#concluzie","title":"Concluzie","text":"<p>FodDeliveryDisplay ofer\u0103 o modalitate simpl\u0103 \u0219i elegant\u0103 de a afi\u0219a informa\u021biile de livrare. Cu suport pentru localizare, gestionare automat\u0103 a erorilor \u0219i design consistent, componenta se integreaz\u0103 perfect \u00een fluxurile de urm\u0103rire a solicit\u0103rilor.</p>"},{"location":"fod/componente/FodDisplay/","title":"FodDisplay","text":""},{"location":"fod/componente/FodDisplay/#documentatie-pentru-componenta-foddisplay","title":"Documenta\u021bie pentru componenta FodDisplay","text":""},{"location":"fod/componente/FodDisplay/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodDisplay</code> este o component\u0103 pentru afi\u0219area valorilor \u00een format doar-citire (read-only). Aceasta formateaz\u0103 automat valorile bazat pe tipul lor \u0219i suport\u0103 localizare pentru etichete \u0219i valori, fiind ideal\u0103 pentru afi\u0219area datelor \u00een formulare de vizualizare sau rezumate.</p> <p>Caracteristici principale: - Formatare automat\u0103 pentru diferite tipuri de date - Suport pentru localizare etichete \u0219i valori - Integrare cu atribute de validare .NET - Formatare automat\u0103 pentru bool, DateTime, enum - Layout responsive cu grid Bootstrap - Suport pentru expresii lambda - Extragere automat\u0103 etichete din DisplayAttribute</p>"},{"location":"fod/componente/FodDisplay/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodDisplay/#afisare-simpla-cu-model-binding","title":"Afi\u0219are simpl\u0103 cu model binding","text":"<pre><code>&lt;dl class=\"row\"&gt;\n    &lt;FodDisplay For=\"@(() =&gt; model.Name)\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; model.Email)\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; model.BirthDate)\" /&gt;\n&lt;/dl&gt;\n\n@code {\n    private UserModel model = new()\n    {\n        Name = \"Ion Popescu\",\n        Email = \"ion@example.com\",\n        BirthDate = new DateTime(1990, 5, 15)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#afisare-cu-etichete-personalizate","title":"Afi\u0219are cu etichete personalizate","text":"<pre><code>&lt;FodDisplay For=\"@(() =&gt; invoice.Number)\" \n            Label=\"Num\u0103r factur\u0103\" /&gt;\n\n&lt;FodDisplay For=\"@(() =&gt; invoice.Amount)\" \n            Label=\"Suma total\u0103\"\n            ValueLabel=\"@($\"{invoice.Amount:C}\")\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodDisplay/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>For</code> <code>Expression&lt;Func&lt;object&gt;&gt;</code> Expresie pentru proprietatea de afi\u0219at - <code>Value</code> <code>object</code> Valoarea de afi\u0219at (alternativ la For) - <code>Label</code> <code>string?</code> Eticheta personalizat\u0103 - <code>ValueLabel</code> <code>string?</code> Valoare formatat\u0103 personalizat - <code>LabelClass</code> <code>string</code> Clase CSS pentru etichet\u0103 <code>\"\"</code> <code>Text</code> <code>Expression&lt;Func&lt;object&gt;&gt;?</code> Expresie pentru proprietate imbricat\u0103 - <code>TitleWidth</code> <code>int</code> L\u0103\u021bimea coloanei pentru titlu (1-12) <code>4</code>"},{"location":"fod/componente/FodDisplay/#4-formatare-automata","title":"4. Formatare Automat\u0103","text":"<p>Componenta formateaz\u0103 automat valorile bazat pe tip:</p>"},{"location":"fod/componente/FodDisplay/#boolean","title":"Boolean","text":"<pre><code>true \u2192 \"Da\"\nfalse \u2192 \"Nu\"\n</code></pre>"},{"location":"fod/componente/FodDisplay/#datetime","title":"DateTime","text":"<pre><code>DateTime \u2192 \"dd/MM/yyyy\"\n</code></pre>"},{"location":"fod/componente/FodDisplay/#enum-cu-displayattribute","title":"Enum cu DisplayAttribute","text":"<pre><code>[Display(Name = \"StatusActiv\", ResourceType = typeof(Resources))]\nActive \u2192 \"Activ\" (localizat)\n</code></pre>"},{"location":"fod/componente/FodDisplay/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodDisplay/#model-cu-atribute-de-display","title":"Model cu atribute de display","text":"<pre><code>public class ProductModel\n{\n    [Display(Name = \"ProductName\", ResourceType = typeof(Resources))]\n    public string Name { get; set; }\n\n    [Display(Name = \"ProductPrice\")]\n    public decimal Price { get; set; }\n\n    [Display(Name = \"InStock\", ResourceType = typeof(Resources))]\n    public bool IsAvailable { get; set; }\n\n    [Display(Name = \"Category\")]\n    public ProductCategory Category { get; set; }\n\n    [Display(Name = \"CreatedDate\", \n             Description = \"Data c\u00e2nd produsul a fost ad\u0103ugat\")]\n    public DateTime CreatedAt { get; set; }\n}\n\n// Utilizare\n&lt;dl class=\"row\"&gt;\n    &lt;FodDisplay For=\"@(() =&gt; product.Name)\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; product.Price)\" \n                ValueLabel=\"@($\"{product.Price:C}\")\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; product.IsAvailable)\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; product.Category)\" /&gt;\n    &lt;FodDisplay For=\"@(() =&gt; product.CreatedAt)\" /&gt;\n&lt;/dl&gt;\n</code></pre>"},{"location":"fod/componente/FodDisplay/#card-detalii-cu-layout-personalizat","title":"Card detalii cu layout personalizat","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Detalii comand\u0103&lt;/FodText&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;dl class=\"row\"&gt;\n            &lt;FodDisplay For=\"@(() =&gt; order.Number)\" \n                        TitleWidth=\"3\" /&gt;\n\n            &lt;FodDisplay For=\"@(() =&gt; order.Customer.Name)\" \n                        Label=\"Client\"\n                        TitleWidth=\"3\" /&gt;\n\n            &lt;FodDisplay For=\"@(() =&gt; order.Status)\" \n                        TitleWidth=\"3\"\n                        LabelClass=\"fw-bold\" /&gt;\n\n            &lt;FodDisplay For=\"@(() =&gt; order.TotalAmount)\" \n                        Label=\"Total\"\n                        ValueLabel=\"@FormatCurrency(order.TotalAmount)\"\n                        TitleWidth=\"3\" /&gt;\n        &lt;/dl&gt;\n\n        &lt;FodDivider Class=\"my-3\" /&gt;\n\n        &lt;h6&gt;Produse comandate&lt;/h6&gt;\n        @foreach (var item in order.Items)\n        {\n            &lt;dl class=\"row mb-2\"&gt;\n                &lt;FodDisplay For=\"@(() =&gt; item.ProductName)\" \n                            Label=\"Produs\"\n                            TitleWidth=\"6\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; item.Quantity)\" \n                            Label=\"Cantitate\"\n                            TitleWidth=\"2\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; item.Price)\" \n                            Label=\"Pre\u021b\"\n                            ValueLabel=\"@($\"{item.Price:C}\")\"\n                            TitleWidth=\"2\" /&gt;\n            &lt;/dl&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string FormatCurrency(decimal amount)\n    {\n        return $\"{amount:N2} MDL\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#formular-comparatie-date","title":"Formular compara\u021bie date","text":"<pre><code>&lt;div class=\"comparison-view\"&gt;\n    &lt;FodGrid container&gt;\n        &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n            &lt;h5&gt;Date vechi&lt;/h5&gt;\n            &lt;dl class=\"row\"&gt;\n                &lt;FodDisplay For=\"@(() =&gt; oldData.Name)\" \n                            LabelClass=\"text-muted\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; oldData.Email)\" \n                            LabelClass=\"text-muted\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; oldData.Phone)\" \n                            LabelClass=\"text-muted\" /&gt;\n            &lt;/dl&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n            &lt;h5&gt;Date noi&lt;/h5&gt;\n            &lt;dl class=\"row\"&gt;\n                &lt;FodDisplay For=\"@(() =&gt; newData.Name)\" \n                            LabelClass=\"@GetChangeClass(oldData.Name, newData.Name)\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; newData.Email)\" \n                            LabelClass=\"@GetChangeClass(oldData.Email, newData.Email)\" /&gt;\n                &lt;FodDisplay For=\"@(() =&gt; newData.Phone)\" \n                            LabelClass=\"@GetChangeClass(oldData.Phone, newData.Phone)\" /&gt;\n            &lt;/dl&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/div&gt;\n\n@code {\n    private string GetChangeClass(string oldValue, string newValue)\n    {\n        return oldValue != newValue ? \"text-warning fw-bold\" : \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#6-integrare-cu-proprietati-complexe","title":"6. Integrare cu Propriet\u0103\u021bi Complexe","text":"<pre><code>&lt;!-- Acces la propriet\u0103\u021bi imbricate --&gt;\n&lt;FodDisplay For=\"@(() =&gt; user)\" \n            Text=\"@(() =&gt; user.Address.City)\" \n            Label=\"Ora\u0219\" /&gt;\n\n&lt;FodDisplay For=\"@(() =&gt; user)\" \n            Text=\"@(() =&gt; user.Company.Name)\" \n            Label=\"Companie\" /&gt;\n\n&lt;!-- Sau direct --&gt;\n&lt;FodDisplay For=\"@(() =&gt; user.Address.Street)\" \n            Label=\"Strad\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodDisplay/#7-stilizare-css","title":"7. Stilizare CSS","text":"<pre><code>/* Stiluri pentru dl/dt/dd */\n.row &gt; dd {\n    font-weight: 500;\n    color: var(--fod-palette-text-secondary);\n    margin-bottom: 0.5rem;\n}\n\n.row &gt; dt {\n    color: var(--fod-palette-text-primary);\n    margin-bottom: 0.5rem;\n}\n\n/* Highlight pentru valori importante */\ndt.highlight {\n    background-color: var(--fod-palette-warning-light);\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n}\n\n/* Layout compact */\n.compact-display &gt; .row &gt; dd,\n.compact-display &gt; .row &gt; dt {\n    margin-bottom: 0.25rem;\n    font-size: 0.875rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 576px) {\n    .row &gt; dd {\n        margin-bottom: 0;\n    }\n\n    .row &gt; dt {\n        margin-bottom: 1rem;\n        padding-bottom: 0.5rem;\n        border-bottom: 1px solid var(--fod-palette-divider);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#8-localizare","title":"8. Localizare","text":""},{"location":"fod/componente/FodDisplay/#configurare-resurse","title":"Configurare resurse","text":"<pre><code>// Model cu localizare\npublic class LocalizedModel\n{\n    [Display(Name = \"FieldName\", ResourceType = typeof(MyResources))]\n    public string Field { get; set; }\n\n    [Display(Name = \"StatusField\", ResourceType = typeof(MyResources))]\n    public Status Status { get; set; }\n}\n\n// Enum cu localizare\npublic enum Status\n{\n    [Display(Name = \"StatusActive\", ResourceType = typeof(MyResources))]\n    Active,\n\n    [Display(Name = \"StatusInactive\", ResourceType = typeof(MyResources))]\n    Inactive\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#9-scenarii-de-utilizare","title":"9. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodDisplay/#rezumat-formular-inainte-de-trimitere","title":"Rezumat formular \u00eenainte de trimitere","text":"<pre><code>@page \"/submit-summary\"\n\n&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Verifica\u021bi datele \u00eenainte de trimitere&lt;/FodText&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;dl class=\"row\"&gt;\n            @foreach (var prop in GetDisplayProperties())\n            {\n                &lt;FodDisplay For=\"@prop.Expression\" \n                            Label=\"@prop.Label\" /&gt;\n            }\n        &lt;/dl&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Color=\"FodColor.Secondary\" OnClick=\"GoBack\"&gt;\n            \u00cenapoi\n        &lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"Submit\"&gt;\n            Confirm\u0103 \u0219i trimite\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodDisplay/#dashboard-cu-statistici","title":"Dashboard cu statistici","text":"<pre><code>&lt;FodGrid container spacing=\"3\"&gt;\n    @foreach (var stat in statistics)\n    {\n        &lt;FodGrid item xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;FodPaper Class=\"p-3 text-center\"&gt;\n                &lt;FodDisplay For=\"@(() =&gt; stat)\"\n                            Text=\"@(() =&gt; stat.Value)\"\n                            Label=\"@stat.Label\"\n                            ValueLabel=\"@FormatStatValue(stat)\"\n                            TitleWidth=\"12\" /&gt;\n            &lt;/FodPaper&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n\n@code {\n    private string FormatStatValue(Statistic stat)\n    {\n        return stat.Type switch\n        {\n            StatType.Currency =&gt; $\"{stat.Value:C}\",\n            StatType.Percentage =&gt; $\"{stat.Value:P}\",\n            StatType.Number =&gt; $\"{stat.Value:N0}\",\n            _ =&gt; stat.Value.ToString()\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Folosi\u021bi DisplayAttribute - Pentru localizare consistent\u0103</li> <li>ValueLabel pentru formatare - Control complet asupra afi\u0219\u0103rii</li> <li>TitleWidth responsive - Ajusta\u021bi pentru diferite ecrane</li> <li>Grupa\u021bi \u00een dl/dt/dd - Pentru semantic\u0103 HTML corect\u0103</li> <li>Clase CSS descriptive - Pentru stilizare u\u0219oar\u0103</li> </ol>"},{"location":"fod/componente/FodDisplay/#11-performanta","title":"11. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi <code>For</code> \u00een loc de <code>Value</code> c\u00e2nd e posibil</li> <li>Cache-ui\u021bi string-urile localizate</li> <li>Evita\u021bi expresii complexe \u00een <code>Text</code></li> <li>Minimiza\u021bi apelurile la reflection</li> </ul>"},{"location":"fod/componente/FodDisplay/#12-accesibilitate","title":"12. Accesibilitate","text":"<ul> <li>Structura dl/dt/dd este semantic\u0103</li> <li>Screen readers \u00een\u021beleg rela\u021bia label-value</li> <li>Asigura\u021bi contrast suficient pentru text</li> <li>Folosi\u021bi aria-label pentru context adi\u021bional</li> </ul>"},{"location":"fod/componente/FodDisplay/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodDisplay/#label-ul-nu-apare-corect","title":"Label-ul nu apare corect","text":"<ul> <li>Verifica\u021bi DisplayAttribute pe proprietate</li> <li>Verifica\u021bi resurse de localizare</li> <li>Verifica\u021bi c\u0103 For este setat corect</li> </ul>"},{"location":"fod/componente/FodDisplay/#formatarea-nu-functioneaza","title":"Formatarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi tipul propriet\u0103\u021bii</li> <li>Pentru formatare custom folosi\u021bi ValueLabel</li> <li>Pentru enum verifica\u021bi DisplayAttribute</li> </ul>"},{"location":"fod/componente/FodDisplay/#14-extensibilitate","title":"14. Extensibilitate","text":"<pre><code>@* Component\u0103 extins\u0103 pentru tooltip-uri *@\n&lt;div class=\"fod-display-extended\"&gt;\n    &lt;FodDisplay @ref=\"baseDisplay\" \n                For=\"@For\"\n                Label=\"@Label\"\n                ValueLabel=\"@ValueLabel\" /&gt;\n\n    @if (!string.IsNullOrEmpty(GetDescription()))\n    {\n        &lt;FodTooltip Text=\"@GetDescription()\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n                     Size=\"FodSize.Small\" /&gt;\n        &lt;/FodTooltip&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    [Parameter] public Expression&lt;Func&lt;object&gt;&gt; For { get; set; }\n    // alte parametri\n\n    private FodDisplay baseDisplay;\n\n    private string GetDescription()\n    {\n        return baseDisplay?.GetDescription() ?? \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDisplay/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodDisplay</code> simplific\u0103 afi\u0219area datelor \u00een format read-only cu formatare automat\u0103 \u0219i suport complet pentru localizare. Prin integrarea cu sistemul de atribute .NET \u0219i formatare inteligent\u0103 bazat\u0103 pe tip, componenta reduce semnificativ codul necesar pentru afi\u0219area profesional\u0103 a datelor.</p>"},{"location":"fod/componente/FodDrawer/","title":"Drawer","text":""},{"location":"fod/componente/FodDrawer/#documentatie-pentru-componentele-foddrawer-si-foddrawercontainer","title":"Documenta\u021bie pentru componentele FodDrawer \u0219i FodDrawerContainer","text":""},{"location":"fod/componente/FodDrawer/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodDrawer</code> este o component\u0103 de navigare lateral\u0103 care ofer\u0103 un panou glisant pentru meniuri, navigare sau con\u021binut suplimentar. Suport\u0103 multiple pozi\u021bii, moduri de afi\u0219are responsive \u0219i integrare perfect\u0103 cu sistemul de layout FOD.</p> <p><code>FodDrawerContainer</code> gestioneaz\u0103 mai multe instan\u021be de drawer \u0219i este de obicei mo\u0219tenit de <code>FodLayout</code>.</p> <p>Caracteristici principale: - 6 pozi\u021bii de ancorare (left, right, start, end, top, bottom) - 4 variante de afi\u0219are (temporary, persistent, responsive, mini) - Suport pentru breakpoint-uri responsive - \u00cenchidere automat\u0103 la navigare - Anima\u021bii fluide - Integrare cu FodLayout - Suport RTL (Right-to-Left) - Mini drawer cu expansiune la hover</p>"},{"location":"fod/componente/FodDrawer/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodDrawer/#drawer-temporar-simplu","title":"Drawer temporar simplu","text":"<pre><code>&lt;FodButton OnClick=\"@(() =&gt; drawerOpen = true)\"&gt;\n    Deschide meniu\n&lt;/FodButton&gt;\n\n&lt;FodDrawer @bind-Open=\"drawerOpen\" Variant=\"DrawerVariant.Temporary\"&gt;\n    &lt;FodNavMenu&gt;\n        &lt;FodNavLink Href=\"/\" Match=\"NavLinkMatch.All\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Home\" Class=\"me-3\" /&gt;\n            Acas\u0103\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/products\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ShoppingCart\" Class=\"me-3\" /&gt;\n            Produse\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/contact\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ContactMail\" Class=\"me-3\" /&gt;\n            Contact\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n\n@code {\n    private bool drawerOpen = false;\n}\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-persistent","title":"Drawer persistent","text":"<pre><code>&lt;FodDrawerContainer&gt;\n    &lt;FodDrawer @bind-Open=\"drawerOpen\" \n               Variant=\"DrawerVariant.Persistent\"\n               Width=\"260px\"&gt;\n        &lt;div class=\"pa-4\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Meniu principal\n            &lt;/FodText&gt;\n            &lt;FodNavMenu&gt;\n                &lt;FodNavLink Href=\"/dashboard\"&gt;Dashboard&lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/settings\"&gt;Set\u0103ri&lt;/FodNavLink&gt;\n            &lt;/FodNavMenu&gt;\n        &lt;/div&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;div class=\"pa-4\"&gt;\n        &lt;FodButton OnClick=\"@(() =&gt; drawerOpen = !drawerOpen)\"&gt;\n            Toggle Drawer\n        &lt;/FodButton&gt;\n        &lt;!-- Con\u021binut principal --&gt;\n    &lt;/div&gt;\n&lt;/FodDrawerContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-responsiv","title":"Drawer responsiv","text":"<pre><code>&lt;FodLayout&gt;\n    &lt;FodHeader Fixed=\"true\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                       OnClick=\"@(() =&gt; drawerOpen = !drawerOpen)\" /&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"ms-3\"&gt;Aplica\u021bia Mea&lt;/FodText&gt;\n    &lt;/FodHeader&gt;\n\n    &lt;FodDrawer @bind-Open=\"drawerOpen\" \n               Variant=\"DrawerVariant.Responsive\"\n               Breakpoint=\"Breakpoint.Lg\"&gt;\n        &lt;NavigationMenu /&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodMainContent&gt;\n        @Body\n    &lt;/FodMainContent&gt;\n&lt;/FodLayout&gt;\n\n@code {\n    private bool drawerOpen = true;\n}\n</code></pre>"},{"location":"fod/componente/FodDrawer/#mini-drawer-cu-hover","title":"Mini drawer cu hover","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\"\n           Variant=\"DrawerVariant.Mini\"\n           OpenMiniOnHover=\"true\"\n           MiniWidth=\"60px\"\n           Width=\"240px\"&gt;\n    &lt;FodNavMenu&gt;\n        &lt;FodNavLink Href=\"/home\" Match=\"NavLinkMatch.All\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Home\" /&gt;\n            @if (drawerOpen)\n            {\n                &lt;span class=\"ms-3\"&gt;Acas\u0103&lt;/span&gt;\n            }\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/reports\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Assessment\" /&gt;\n            @if (drawerOpen)\n            {\n                &lt;span class=\"ms-3\"&gt;Rapoarte&lt;/span&gt;\n            }\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-cu-pozitii-diferite","title":"Drawer cu pozi\u021bii diferite","text":"<pre><code>&lt;!-- Drawer din st\u00e2nga (implicit) --&gt;\n&lt;FodDrawer @bind-Open=\"leftOpen\" Anchor=\"Anchor.Left\"&gt;\n    &lt;div class=\"pa-4\"&gt;Drawer st\u00e2nga&lt;/div&gt;\n&lt;/FodDrawer&gt;\n\n&lt;!-- Drawer din dreapta --&gt;\n&lt;FodDrawer @bind-Open=\"rightOpen\" Anchor=\"Anchor.Right\"&gt;\n    &lt;div class=\"pa-4\"&gt;Drawer dreapta&lt;/div&gt;\n&lt;/FodDrawer&gt;\n\n&lt;!-- Drawer de sus --&gt;\n&lt;FodDrawer @bind-Open=\"topOpen\" \n           Anchor=\"Anchor.Top\" \n           Height=\"200px\"&gt;\n    &lt;div class=\"pa-4\"&gt;Drawer sus&lt;/div&gt;\n&lt;/FodDrawer&gt;\n\n&lt;!-- Drawer de jos --&gt;\n&lt;FodDrawer @bind-Open=\"bottomOpen\" \n           Anchor=\"Anchor.Bottom\"\n           Height=\"300px\"&gt;\n    &lt;div class=\"pa-4\"&gt;Drawer jos&lt;/div&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-cu-continut-personalizat","title":"Drawer cu con\u021binut personalizat","text":"<pre><code>&lt;FodDrawer @bind-Open=\"filterOpen\" \n           Anchor=\"Anchor.End\"\n           Width=\"400px\"\n           Variant=\"DrawerVariant.Temporary\"&gt;\n    &lt;div class=\"pa-4\"&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Filtrare rezultate\n        &lt;/FodText&gt;\n\n        &lt;FodTextField Label=\"Caut\u0103\" \n                      FullWidth=\"true\" \n                      Class=\"mb-3\" /&gt;\n\n        &lt;FodText Typo=\"Typo.subtitle2\" GutterBottom=\"true\"&gt;\n            Categorii\n        &lt;/FodText&gt;\n        &lt;FodCheckBox2 Label=\"Electronice\" Class=\"mb-2\" /&gt;\n        &lt;FodCheckBox2 Label=\"\u00cembr\u0103c\u0103minte\" Class=\"mb-2\" /&gt;\n        &lt;FodCheckBox2 Label=\"Mobil\u0103\" Class=\"mb-2\" /&gt;\n\n        &lt;FodText Typo=\"Typo.subtitle2\" GutterBottom=\"true\" Class=\"mt-3\"&gt;\n            Interval pre\u021b\n        &lt;/FodText&gt;\n        &lt;FodSlider Min=\"0\" Max=\"5000\" Step=\"100\" /&gt;\n\n        &lt;div class=\"d-flex justify-end mt-4\"&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; filterOpen = false)\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" \n                       Variant=\"FodVariant.Filled\" \n                       Class=\"ms-2\"&gt;\n                Aplic\u0103 filtre\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-cu-header-si-footer","title":"Drawer cu header \u0219i footer","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\" Width=\"320px\"&gt;\n    &lt;!-- Header --&gt;\n    &lt;FodPaper Square=\"true\" Elevation=\"2\" Class=\"pa-4\"&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;div class=\"d-flex align-items-center justify-content-center\" \n                 style=\"width: 48px; height: 48px; border-radius: 50%; background-color: var(--fod-palette-primary); color: white;\"&gt;\n                &lt;FodText&gt;@currentUser.Initials&lt;/FodText&gt;\n            &lt;/div&gt;\n            &lt;div class=\"ms-3\"&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;@currentUser.Name&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\"&gt;@currentUser.Email&lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/FodPaper&gt;\n\n    &lt;!-- Content --&gt;\n    &lt;div class=\"flex-grow-1 overflow-auto\"&gt;\n        &lt;FodNavMenu&gt;\n            &lt;FodNavLink Href=\"/profile\"&gt;Profil&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/settings\"&gt;Set\u0103ri&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/help\"&gt;Ajutor&lt;/FodNavLink&gt;\n        &lt;/FodNavMenu&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Footer --&gt;\n    &lt;FodPaper Square=\"true\" Elevation=\"2\" Class=\"pa-3\"&gt;\n        &lt;FodButton FullWidth=\"true\" \n                   StartIcon=\"@FodIcons.Material.Filled.Logout\"&gt;\n            Deconectare\n        &lt;/FodButton&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#drawer-cu-tabs","title":"Drawer cu tabs","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\" Width=\"400px\"&gt;\n    &lt;FodTabs @bind-ActivePanelIndex=\"activeTab\" \n             HeaderPosition=\"FodTabHeaderPosition.Top\"\n             Class=\"h-100\"&gt;\n        &lt;FodTabPanel Text=\"Navigare\" Icon=\"@FodIcons.Material.Filled.Menu\"&gt;\n            &lt;FodNavMenu&gt;\n                &lt;!-- Meniu navigare --&gt;\n            &lt;/FodNavMenu&gt;\n        &lt;/FodTabPanel&gt;\n\n        &lt;FodTabPanel Text=\"Notific\u0103ri\" Icon=\"@FodIcons.Material.Filled.Notifications\"&gt;\n            &lt;FodList&gt;\n                &lt;!-- Lista notific\u0103ri --&gt;\n            &lt;/FodList&gt;\n        &lt;/FodTabPanel&gt;\n\n        &lt;FodTabPanel Text=\"Set\u0103ri\" Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n            &lt;!-- Formular set\u0103ri --&gt;\n        &lt;/FodTabPanel&gt;\n    &lt;/FodTabs&gt;\n&lt;/FodDrawer&gt;\n\n@code {\n    private int activeTab = 0;\n}\n</code></pre>"},{"location":"fod/componente/FodDrawer/#integrare-completa-cu-fodlayout","title":"Integrare complet\u0103 cu FodLayout","text":"<pre><code>&lt;FodLayout&gt;\n    &lt;FodHeader Fixed=\"true\" Elevation=\"2\"&gt;\n        &lt;FodToolBar&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                           OnClick=\"ToggleDrawer\" /&gt;\n            &lt;FodText Typo=\"Typo.h6\" Class=\"ms-3\"&gt;\n                Dashboard Administrativ\n            &lt;/FodText&gt;\n            &lt;FodSpacer /&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\" /&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.AccountCircle\" /&gt;\n        &lt;/FodToolBar&gt;\n    &lt;/FodHeader&gt;\n\n    &lt;FodDrawer @bind-Open=\"drawerOpen\"\n               Variant=\"DrawerVariant.Responsive\"\n               Breakpoint=\"Breakpoint.Md\"\n               ClipMode=\"DrawerClipMode.Always\"&gt;\n        &lt;FodNavMenu&gt;\n            &lt;FodNavGroup Title=\"General\" Expanded=\"true\"&gt;\n                &lt;FodNavLink Href=\"/dashboard\" \n                            Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n                    Dashboard\n                &lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/analytics\" \n                            Icon=\"@FodIcons.Material.Filled.Analytics\"&gt;\n                    Analize\n                &lt;/FodNavLink&gt;\n            &lt;/FodNavGroup&gt;\n\n            &lt;FodNavGroup Title=\"Management\"&gt;\n                &lt;FodNavLink Href=\"/users\" \n                            Icon=\"@FodIcons.Material.Filled.People\"&gt;\n                    Utilizatori\n                &lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/products\" \n                            Icon=\"@FodIcons.Material.Filled.Inventory\"&gt;\n                    Produse\n                &lt;/FodNavLink&gt;\n            &lt;/FodNavGroup&gt;\n        &lt;/FodNavMenu&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodMainContent&gt;\n        &lt;FodContainer MaxWidth=\"MaxWidth.Large\" Class=\"py-8\"&gt;\n            @Body\n        &lt;/FodContainer&gt;\n    &lt;/FodMainContent&gt;\n&lt;/FodLayout&gt;\n\n@code {\n    private bool drawerOpen = true;\n\n    private void ToggleDrawer()\n    {\n        drawerOpen = !drawerOpen;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDrawer/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodDrawer/#foddrawer","title":"FodDrawer","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Open</code> <code>bool</code> Starea deschis/\u00eenchis <code>false</code> <code>OpenChanged</code> <code>EventCallback&lt;bool&gt;</code> Eveniment la schimbare stare - <code>Anchor</code> <code>Anchor</code> Pozi\u021bia drawer-ului <code>Anchor.Start</code> <code>Variant</code> <code>DrawerVariant</code> Modul de afi\u0219are <code>DrawerVariant.Responsive</code> <code>Breakpoint</code> <code>Breakpoint</code> Punct de schimbare responsive <code>Breakpoint.Md</code> <code>Width</code> <code>string</code> L\u0103\u021bimea drawer-ului <code>240px</code> <code>MiniWidth</code> <code>string</code> L\u0103\u021bimea \u00een mod mini <code>56px</code> <code>Height</code> <code>string</code> \u00cen\u0103l\u021bimea (pentru top/bottom) <code>auto</code> <code>Fixed</code> <code>bool</code> Pozi\u021bie CSS fixed vs absolute <code>true</code> \u00een FodLayout <code>Elevation</code> <code>int</code> Nivelul umbrei (0-25) <code>1</code> <code>Color</code> <code>FodColor</code> Culoarea temei <code>FodColor.Default</code> <code>DisableOverlay</code> <code>bool</code> Dezactiveaz\u0103 overlay-ul <code>false</code> <code>PreserveOpenState</code> <code>bool</code> P\u0103streaz\u0103 starea la resize <code>false</code> <code>OpenMiniOnHover</code> <code>bool</code> Deschide mini drawer la hover <code>false</code> <code>ClipMode</code> <code>DrawerClipMode</code> Comportament \u00een FodLayout <code>DrawerClipMode.Docked</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul drawer-ului -"},{"location":"fod/componente/FodDrawer/#4-enumerari","title":"4. Enumer\u0103ri","text":""},{"location":"fod/componente/FodDrawer/#drawervariant","title":"DrawerVariant","text":"Valoare Descriere <code>Temporary</code> Se suprapune peste con\u021binut, \u00eenchide automat <code>Persistent</code> \u00cempinge con\u021binutul, r\u0103m\u00e2ne deschis <code>Responsive</code> Temporary sub breakpoint, Persistent peste <code>Mini</code> Afi\u0219eaz\u0103 versiune minimizat\u0103 c\u00e2nd e \u00eenchis"},{"location":"fod/componente/FodDrawer/#anchor","title":"Anchor","text":"Valoare Descriere <code>Left</code> Fixat \u00een st\u00e2nga <code>Right</code> Fixat \u00een dreapta <code>Start</code> St\u00e2nga \u00een LTR, dreapta \u00een RTL <code>End</code> Dreapta \u00een LTR, st\u00e2nga \u00een RTL <code>Top</code> Fixat sus <code>Bottom</code> Fixat jos"},{"location":"fod/componente/FodDrawer/#drawerclipmode","title":"DrawerClipMode","text":"Valoare Descriere <code>Never</code> Nu se ajusteaz\u0103 la app bar <code>Docked</code> Se ajusteaz\u0103 c\u00e2nd e andocat <code>Always</code> Se ajusteaz\u0103 \u00eentotdeauna"},{"location":"fod/componente/FodDrawer/#5-evenimente-si-metode","title":"5. Evenimente \u0219i metode","text":"Eveniment/Metod\u0103 Descriere <code>OpenChanged</code> Se declan\u0219eaz\u0103 c\u00e2nd drawer-ul se deschide/\u00eenchide Auto-close Se \u00eenchide automat la navigare (Temporary) Overlay click Click pe overlay \u00eenchide drawer-ul"},{"location":"fod/componente/FodDrawer/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Personalizare drawer */\n.custom-drawer {\n    --fod-drawer-width: 320px;\n    --fod-drawer-mini-width: 72px;\n    --fod-drawer-background: #f5f5f5;\n}\n\n/* Anima\u021bii personalizate */\n.custom-drawer .fod-drawer-paper {\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Stil pentru mini drawer */\n.fod-drawer-mini .fod-nav-link {\n    justify-content: center;\n}\n\n.fod-drawer-mini .fod-nav-link-text {\n    display: none;\n}\n\n/* Overlay personalizat */\n.fod-drawer-overlay {\n    background-color: rgba(0, 0, 0, 0.5);\n    backdrop-filter: blur(2px);\n}\n</code></pre>"},{"location":"fod/componente/FodDrawer/#7-integrare-cu-navigare","title":"7. Integrare cu navigare","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\"&gt;\n    &lt;FodNavMenu&gt;\n        &lt;FodNavLink Href=\"/\" Match=\"NavLinkMatch.All\"&gt;\n            Acas\u0103\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavGroup Title=\"Produse\" Expanded=\"true\"&gt;\n            &lt;FodNavLink Href=\"/products/all\"&gt;Toate produsele&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/products/new\"&gt;Produse noi&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/products/sale\"&gt;Reduceri&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n\n        &lt;FodNavLink Href=\"/about\"&gt;Despre noi&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/contact\"&gt;Contact&lt;/FodNavLink&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodDrawer/#dashboard-cu-drawer","title":"Dashboard cu drawer","text":"<pre><code>&lt;FodLayout Class=\"dashboard-layout\"&gt;\n    &lt;FodHeader Fixed=\"true\"&gt;\n        &lt;!-- Header content --&gt;\n    &lt;/FodHeader&gt;\n\n    &lt;FodDrawer @bind-Open=\"drawerOpen\" \n               Variant=\"DrawerVariant.Mini\"\n               OpenMiniOnHover=\"true\"&gt;\n        &lt;!-- Navigation --&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodMainContent&gt;\n        &lt;FodContainer&gt;\n            @Body\n        &lt;/FodContainer&gt;\n    &lt;/FodMainContent&gt;\n&lt;/FodLayout&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#mobile-first-navigation","title":"Mobile-first navigation","text":"<pre><code>&lt;FodDrawer @bind-Open=\"mobileMenuOpen\"\n           Variant=\"DrawerVariant.Temporary\"\n           Breakpoint=\"Breakpoint.None\"\n           Class=\"d-lg-none\"&gt;\n    &lt;!-- Mobile menu --&gt;\n&lt;/FodDrawer&gt;\n\n&lt;FodDrawer Open=\"true\"\n           Variant=\"DrawerVariant.Persistent\"\n           Class=\"d-none d-lg-flex\"&gt;\n    &lt;!-- Desktop menu --&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodDrawer/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Drawer-ul lazy-\u00eencarc\u0103 con\u021binutul c\u00e2nd e deschis prima dat\u0103</li> <li>Anima\u021biile folosesc CSS transforms pentru performan\u021b\u0103</li> <li>Mini drawer men\u021bine con\u021binutul \u00een DOM pentru tranzi\u021bii rapide</li> <li>Overlay-ul este op\u021bional pentru a reduce re-render-uri</li> </ul>"},{"location":"fod/componente/FodDrawer/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Suport complet pentru navigare cu tastatura</li> <li>Focus trap c\u00e2nd drawer-ul temporal este deschis</li> <li>Atribute ARIA pentru screen readers</li> <li>Escape \u00eenchide drawer-ul temporal</li> <li>Roluri semantice pentru navigare</li> </ul>"},{"location":"fod/componente/FodDrawer/#11-note-si-observatii","title":"11. Note \u0219i observa\u021bii","text":"<ul> <li>Drawer-ul temporar se \u00eenchide automat la navigare</li> <li>\u00cen FodLayout, drawer-ul se \u00eenregistreaz\u0103 automat</li> <li>Variant responsive este recomandat pentru majoritatea aplica\u021biilor</li> <li>Mini drawer necesit\u0103 design special pentru pictograme</li> </ul>"},{"location":"fod/componente/FodDrawer/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Consisten\u021b\u0103 - Folosi\u021bi acela\u0219i tip de drawer \u00een toat\u0103 aplica\u021bia</li> <li>Responsive - Alege\u021bi breakpoint-ul potrivit pentru layout</li> <li>Con\u021binut - Nu supra\u00eenc\u0103rca\u021bi drawer-ul cu prea multe op\u021biuni</li> <li>Performan\u021b\u0103 - Pentru liste lungi, folosi\u021bi virtualizare</li> <li>UX - Oferi\u021bi buton vizibil pentru deschidere pe mobile</li> <li>Anima\u021bii - P\u0103stra\u021bi anima\u021biile rapide (sub 300ms)</li> </ol>"},{"location":"fod/componente/FodDrawer/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodDrawer/#drawer-ul-nu-se-deschide","title":"Drawer-ul nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Open</code> este setat corect</li> <li>Verifica\u021bi c\u0103 nu exist\u0103 erori JavaScript \u00een consol\u0103</li> </ul>"},{"location":"fod/componente/FodDrawer/#overlay-ul-nu-apare","title":"Overlay-ul nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 <code>DisableOverlay</code> nu este <code>true</code></li> <li>Verifica\u021bi c\u0103 variant-ul suport\u0103 overlay</li> </ul>"},{"location":"fod/componente/FodDrawer/#drawer-ul-nu-se-inchide-la-navigare","title":"Drawer-ul nu se \u00eenchide la navigare","text":"<ul> <li>Func\u021bioneaz\u0103 doar pentru variant Temporary</li> <li>Verifica\u021bi c\u0103 folosi\u021bi componente de navigare FOD</li> </ul>"},{"location":"fod/componente/FodDrawer/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodDrawer</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru implementarea navig\u0103rii laterale \u00een aplica\u021bii Blazor. Cu suport pentru multiple variante, pozi\u021bii \u0219i comportamente responsive, acoper\u0103 toate scenariile comune de navigare modern\u0103.</p>"},{"location":"fod/componente/FodDropdown/","title":"Dropdown","text":""},{"location":"fod/componente/FodDropdown/#documentatie-pentru-componentele-foddropdown-si-dropdown","title":"Documenta\u021bie pentru componentele FodDropdown \u0219i Dropdown","text":""},{"location":"fod/componente/FodDropdown/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodDropdown</code> este o component\u0103 dropdown generic\u0103 care permite selectarea unei op\u021biuni dintr-o list\u0103 derulant\u0103. Ofer\u0103 o interfa\u021b\u0103 flexibil\u0103 \u0219i personalizabil\u0103 pentru meniuri dropdown, cu suport pentru tipuri generice \u0219i evenimente de selec\u021bie.</p> <p>Componenta include: - Suport pentru tipuri generice de date - Detectare automat\u0103 click \u00een afara dropdown-ului - Personalizare complet\u0103 a afi\u0219\u0103rii elementelor - Integrare cu sistemul de butoane FOD - Variant\u0103 simplificat\u0103 non-generic\u0103 (Dropdown) - Suport pentru pictograme \u00een buton</p>"},{"location":"fod/componente/FodDropdown/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodDropdown/#dropdown-de-baza","title":"Dropdown de baz\u0103","text":"<pre><code>&lt;FodDropdown TItem=\"string\" OnSelected=\"@OnLanguageSelected\"&gt;\n    &lt;InitialTip&gt;Selecta\u021bi limba&lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodDropdownListItem Item=\"ro\"&gt;Rom\u00e2n\u0103&lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"ru\"&gt;\u0420\u0443\u0441\u0441\u043a\u0438\u0439&lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"en\"&gt;English&lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n\n@code {\n    private void OnLanguageSelected(string language)\n    {\n        Console.WriteLine($\"Limba selectat\u0103: {language}\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-cu-pictograma","title":"Dropdown cu pictogram\u0103","text":"<pre><code>&lt;FodDropdown TItem=\"string\" \n             StartIcon=\"@FodIcons.Material.Filled.Language\" \n             OnSelected=\"@OnLanguageSelected\"\n             Variant=\"FodVariant.Text\"&gt;\n    &lt;InitialTip&gt;RO&lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodDropdownListItem Item=\"ro\"&gt;\n            &lt;span class=\"flag-icon flag-icon-md me-2\"&gt;&lt;/span&gt; Rom\u00e2n\u0103\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"ru\"&gt;\n            &lt;span class=\"flag-icon flag-icon-ru me-2\"&gt;&lt;/span&gt; \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"en\"&gt;\n            &lt;span class=\"flag-icon flag-icon-gb me-2\"&gt;&lt;/span&gt; English\n        &lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-cu-obiecte-complexe","title":"Dropdown cu obiecte complexe","text":"<pre><code>&lt;FodDropdown TItem=\"User\" OnSelected=\"@OnUserSelected\"&gt;\n    &lt;InitialTip&gt;Selecta\u021bi utilizator&lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        @foreach (var user in users)\n        {\n            &lt;FodDropdownListItem Item=\"@user\"&gt;\n                &lt;div class=\"d-flex align-items-center\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                             Size=\"Size.Small\" \n                             Class=\"me-2\" /&gt;\n                    &lt;div&gt;\n                        &lt;div&gt;@user.Name&lt;/div&gt;\n                        &lt;small class=\"text-muted\"&gt;@user.Email&lt;/small&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodDropdownListItem&gt;\n        }\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n\n@code {\n    private List&lt;User&gt; users = GetUsers();\n\n    private void OnUserSelected(User user)\n    {\n        selectedUser = user;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-cu-stilizare-personalizata","title":"Dropdown cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodDropdown TItem=\"string\" \n             OnSelected=\"@OnActionSelected\"\n             Variant=\"FodVariant.Filled\"\n             Class=\"custom-dropdown\"\n             Style=\"min-width: 200px;\"&gt;\n    &lt;InitialTip&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" Class=\"me-2\" /&gt;\n        Ac\u021biuni\n    &lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodDropdownListItem Item=\"edit\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Edit\" Class=\"me-2\" /&gt; Editeaz\u0103\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"duplicate\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.FileCopy\" Class=\"me-2\" /&gt; Duplic\u0103\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"delete\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Delete\" Class=\"me-2 text-danger\" /&gt; \n            &lt;span class=\"text-danger\"&gt;\u0218terge&lt;/span&gt;\n        &lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n\n&lt;style&gt;\n    .custom-dropdown .dropdown-menu {\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        border-radius: 8px;\n    }\n\n    .custom-dropdown .dropdown-item:hover {\n        background-color: #f5f5f5;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-simplu-non-generic","title":"Dropdown simplu (non-generic)","text":"<pre><code>&lt;Dropdown StartIcon=\"@FodIcons.Material.Filled.MoreVert\"\n          Title=\"Mai multe\"\n          Variant=\"FodVariant.Text\"\n          DropDownMenuClass=\"dropdown-menu-end\"&gt;\n    &lt;a class=\"dropdown-item\" href=\"#\" @onclick=\"Edit\"&gt;Editeaz\u0103&lt;/a&gt;\n    &lt;a class=\"dropdown-item\" href=\"#\" @onclick=\"Duplicate\"&gt;Duplic\u0103&lt;/a&gt;\n    &lt;div class=\"dropdown-divider\"&gt;&lt;/div&gt;\n    &lt;a class=\"dropdown-item text-danger\" href=\"#\" @onclick=\"Delete\"&gt;\u0218terge&lt;/a&gt;\n&lt;/Dropdown&gt;\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-pentru-meniu-utilizator","title":"Dropdown pentru meniu utilizator","text":"<pre><code>&lt;FodDropdown TItem=\"string\" OnSelected=\"@OnMenuSelected\" Variant=\"FodVariant.Text\"&gt;\n    &lt;InitialTip&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AccountCircle\" \n                 Size=\"Size.Small\" \n                 Class=\"me-2\" /&gt;\n        &lt;span&gt;@currentUser.Name&lt;/span&gt;\n    &lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodDropdownListItem Item=\"profile\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" Class=\"me-2\" /&gt; Profil\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"settings\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" Class=\"me-2\" /&gt; Set\u0103ri\n        &lt;/FodDropdownListItem&gt;\n        &lt;div class=\"dropdown-divider\"&gt;&lt;/div&gt;\n        &lt;FodDropdownListItem Item=\"logout\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Logout\" Class=\"me-2\" /&gt; Deconectare\n        &lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n\n@code {\n    private async Task OnMenuSelected(string action)\n    {\n        switch (action)\n        {\n            case \"profile\":\n                Navigation.NavigateTo(\"/profile\");\n                break;\n            case \"settings\":\n                Navigation.NavigateTo(\"/settings\");\n                break;\n            case \"logout\":\n                await AuthService.Logout();\n                break;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-cu-grupare-vizuala","title":"Dropdown cu grupare vizual\u0103","text":"<pre><code>&lt;FodDropdown TItem=\"MenuItem\" OnSelected=\"@OnMenuItemSelected\"&gt;\n    &lt;InitialTip&gt;Selecta\u021bi o op\u021biune&lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;h6 class=\"dropdown-header\"&gt;Documente&lt;/h6&gt;\n        &lt;FodDropdownListItem Item=\"@menuItems[0]\"&gt;\n            &lt;FodIcon Icon=\"@menuItems[0].Icon\" Class=\"me-2\" /&gt; @menuItems[0].Title\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"@menuItems[1]\"&gt;\n            &lt;FodIcon Icon=\"@menuItems[1].Icon\" Class=\"me-2\" /&gt; @menuItems[1].Title\n        &lt;/FodDropdownListItem&gt;\n\n        &lt;div class=\"dropdown-divider\"&gt;&lt;/div&gt;\n        &lt;h6 class=\"dropdown-header\"&gt;Rapoarte&lt;/h6&gt;\n        &lt;FodDropdownListItem Item=\"@menuItems[2]\"&gt;\n            &lt;FodIcon Icon=\"@menuItems[2].Icon\" Class=\"me-2\" /&gt; @menuItems[2].Title\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"@menuItems[3]\"&gt;\n            &lt;FodIcon Icon=\"@menuItems[3].Icon\" Class=\"me-2\" /&gt; @menuItems[3].Title\n        &lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n</code></pre>"},{"location":"fod/componente/FodDropdown/#dropdown-cu-stari","title":"Dropdown cu st\u0103ri","text":"<pre><code>&lt;FodDropdown TItem=\"string\" \n             OnSelected=\"@OnStatusSelected\"\n             Variant=\"@GetVariantForStatus(currentStatus)\"&gt;\n    &lt;InitialTip&gt;\n        &lt;FodIcon Icon=\"@GetIconForStatus(currentStatus)\" Class=\"me-2\" /&gt;\n        @GetLabelForStatus(currentStatus)\n    &lt;/InitialTip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodDropdownListItem Item=\"active\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" Class=\"me-2 text-success\" /&gt;\n            &lt;span class=\"text-success\"&gt;Activ&lt;/span&gt;\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"inactive\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Cancel\" Class=\"me-2 text-danger\" /&gt;\n            &lt;span class=\"text-danger\"&gt;Inactiv&lt;/span&gt;\n        &lt;/FodDropdownListItem&gt;\n        &lt;FodDropdownListItem Item=\"pending\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Schedule\" Class=\"me-2 text-warning\" /&gt;\n            &lt;span class=\"text-warning\"&gt;\u00cen a\u0219teptare&lt;/span&gt;\n        &lt;/FodDropdownListItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodDropdown&gt;\n\n@code {\n    private string currentStatus = \"active\";\n\n    private void OnStatusSelected(string status)\n    {\n        currentStatus = status;\n        StateHasChanged();\n    }\n\n    private FodVariant GetVariantForStatus(string status) =&gt; status switch\n    {\n        \"active\" =&gt; FodVariant.Filled,\n        \"inactive\" =&gt; FodVariant.Outlined,\n        _ =&gt; FodVariant.Text\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodDropdown/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodDropdown/#foddropdown","title":"FodDropdown    Proprietate Tip Descriere Valoare Implicit\u0103     <code>TItem</code> <code>Type</code> Tipul generic al elementelor din dropdown -   <code>StartIcon</code> <code>string</code> Pictograma afi\u0219at\u0103 \u00een buton <code>null</code>   <code>Variant</code> <code>FodVariant</code> Stilul butonului (Text, Filled, Outlined) <code>Text</code>   <code>InitialTip</code> <code>RenderFragment</code> Textul ini\u021bial afi\u0219at \u00een buton -   <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul dropdown-ului -   <code>OnSelected</code> <code>EventCallback&lt;TItem&gt;</code> Eveniment declan\u0219at la selec\u021bie -   <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code>   <code>Style</code> <code>string</code> Stiluri inline adi\u021bionale <code>null</code>","text":""},{"location":"fod/componente/FodDropdown/#dropdown-simplu","title":"Dropdown (simplu)    Proprietate Tip Descriere Valoare Implicit\u0103     <code>StartIcon</code> <code>string</code> Pictograma butonului <code>null</code>   <code>Title</code> <code>string</code> Textul butonului <code>\"\"</code>   <code>Variant</code> <code>FodVariant</code> Stilul butonului <code>Text</code>   <code>DropDownMenuClass</code> <code>string</code> Clase CSS pentru meniul dropdown <code>\"\"</code>   <code>Class</code> <code>string</code> Clase CSS pentru buton <code>\"\"</code>   <code>Style</code> <code>string</code> Stiluri inline <code>\"\"</code>","text":""},{"location":"fod/componente/FodDropdown/#foddropdownlistitem","title":"FodDropdownListItem    Proprietate Tip Descriere Valoare Implicit\u0103     <code>Item</code> <code>TItem</code> Elementul de date asociat -   <code>ChildContent</code> <code>RenderFragment&lt;TItem&gt;</code> Template pentru afi\u0219are -","text":""},{"location":"fod/componente/FodDropdown/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>OnSelected</code> <code>EventCallback&lt;TItem&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd un element este selectat"},{"location":"fod/componente/FodDropdown/#5-metode-publice","title":"5. Metode publice","text":""},{"location":"fod/componente/FodDropdown/#foddropdown_1","title":"FodDropdown    Metod\u0103 Descriere     <code>Hide()</code> \u00cenchide dropdown-ul programatic","text":""},{"location":"fod/componente/FodDropdown/#6-componente-asociate","title":"6. Componente asociate","text":"<ul> <li>OutsideHandleContainer - Detecteaz\u0103 click-uri \u00een afara dropdown-ului</li> <li>FodButton - Folosit ca trigger pentru dropdown</li> <li>FodIcon - Pentru afi\u0219area pictogramelor</li> </ul>"},{"location":"fod/componente/FodDropdown/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":"<pre><code>/* Stiluri personalizate pentru dropdown */\n.custom-dropdown .dropdown-toggle {\n    border: 2px solid #e0e0e0;\n    border-radius: 8px;\n    padding: 8px 16px;\n}\n\n.custom-dropdown .dropdown-menu {\n    border: 1px solid #e0e0e0;\n    box-shadow: 0 8px 16px rgba(0,0,0,0.1);\n    border-radius: 8px;\n    padding: 8px 0;\n}\n\n.custom-dropdown .dropdown-item {\n    padding: 12px 20px;\n    transition: all 0.2s ease;\n}\n\n.custom-dropdown .dropdown-item:hover {\n    background-color: #f5f5f5;\n    transform: translateX(4px);\n}\n\n/* Dropdown cu anima\u021bii */\n.animated-dropdown .dropdown-menu {\n    animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodDropdown/#8-diferente-intre-foddropdown-si-dropdown","title":"8. Diferen\u021be \u00eentre FodDropdown \u0219i Dropdown","text":"Caracteristic\u0103 FodDropdown Dropdown Suport tipuri generice Da Nu Evenimente de selec\u021bie Da Nu Actualizare automat\u0103 text Da Nu Complexitate Medie Simpl\u0103 Cazuri de utilizare Selec\u021bii complexe Meniuri simple"},{"location":"fod/componente/FodDropdown/#9-integrare-cu-formulare","title":"9. Integrare cu formulare","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label&gt;Departament&lt;/label&gt;\n        &lt;FodDropdown TItem=\"Department\" OnSelected=\"@(dept =&gt; model.Department = dept)\"&gt;\n            &lt;InitialTip&gt;\n                @(model.Department?.Name ?? \"Selecta\u021bi departament\")\n            &lt;/InitialTip&gt;\n            &lt;ChildContent&gt;\n                @foreach (var dept in departments)\n                {\n                    &lt;FodDropdownListItem Item=\"@dept\"&gt;\n                        @dept.Name\n                    &lt;/FodDropdownListItem&gt;\n                }\n            &lt;/ChildContent&gt;\n        &lt;/FodDropdown&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; model.Department)\" /&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodDropdown/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Dropdown-ul se \u00eenchide automat la click \u00een afar\u0103</li> <li>Pentru liste lungi, considera\u021bi folosirea FodSelect cu c\u0103utare</li> <li>Suport\u0103 orice tip de con\u021binut \u00een elementele dropdown</li> <li>Click pe un element \u00eenchide automat dropdown-ul</li> <li>Pentru meniuri persistente, folosi\u021bi componenta Dropdown simpl\u0103</li> </ul>"},{"location":"fod/componente/FodDropdown/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Generare automat\u0103 ID-uri pentru WCAG</li> <li>Suport navigare cu tastatura</li> <li>Atribute ARIA pentru screen readers</li> <li>Focus management integrat</li> </ul>"},{"location":"fod/componente/FodDropdown/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Tipuri generice - Folosi\u021bi tipuri specifice pentru type safety</li> <li>Pictograme descriptive - Ajut\u0103 la identificarea rapid\u0103</li> <li>Feedback vizual - Eviden\u021bia\u021bi elementul selectat</li> <li>Grupare logic\u0103 - Folosi\u021bi separatoare \u0219i headere</li> <li>Ac\u021biuni clare - Eticheta\u021bi clar fiecare op\u021biune</li> <li>Responsive - Testa\u021bi pe diferite dimensiuni de ecran</li> </ol>"},{"location":"fod/componente/FodDropdown/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodDropdown/#dropdown-ul-nu-se-inchide","title":"Dropdown-ul nu se \u00eenchide <ul> <li>Verifica\u021bi c\u0103 <code>OutsideHandleContainer</code> func\u021bioneaz\u0103</li> <li>Verifica\u021bi consol\u0103 pentru erori JavaScript</li> </ul>","text":""},{"location":"fod/componente/FodDropdown/#evenimentul-onselected-nu-se-declanseaza","title":"Evenimentul OnSelected nu se declan\u0219eaz\u0103 <ul> <li>Verifica\u021bi c\u0103 a\u021bi specificat <code>Item</code> pentru <code>FodDropdownListItem</code></li> <li>Verifica\u021bi c\u0103 tipul generic este corect</li> </ul>","text":""},{"location":"fod/componente/FodDropdown/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodDropdown</code> ofer\u0103 o solu\u021bie flexibil\u0103 \u0219i puternic\u0103 pentru implementarea de meniuri dropdown, cu suport pentru tipuri generice \u0219i personalizare complet\u0103. Pentru cazuri simple, componenta <code>Dropdown</code> ofer\u0103 o alternativ\u0103 mai u\u0219oar\u0103.</p>"},{"location":"fod/componente/FodExceptionDays/","title":"FodExceptionDays","text":""},{"location":"fod/componente/FodExceptionDays/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodExceptionDays</code> este un sistem de componente pentru gestionarea programului de lucru \u0219i a zilelor excep\u021bionale (s\u0103rb\u0103tori, zile scurte, zile lucr\u0103toare speciale). Sistemul include componenta principal\u0103 <code>FodExceptionDays</code> pentru afi\u0219are \u0219i gestionare, \u0219i <code>FodExceptionDayModal</code> pentru ad\u0103ugare/editare excep\u021bii.</p>"},{"location":"fod/componente/FodExceptionDays/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Afi\u0219are program de lucru \u0219i excep\u021bii --&gt;\n&lt;FodExceptionDays /&gt;\n\n&lt;!-- Doar afi\u0219are, f\u0103r\u0103 editare --&gt;\n&lt;FodExceptionDays ReadOnly=\"true\" /&gt;\n\n&lt;!-- Cu callback pentru schimb\u0103ri --&gt;\n&lt;FodExceptionDays OnExceptionChanged=\"@HandleExceptionChange\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#componente-si-atribute","title":"Componente \u0219i Atribute","text":""},{"location":"fod/componente/FodExceptionDays/#fodexceptiondays-componenta-principala","title":"FodExceptionDays (component\u0103 principal\u0103)","text":"Atribut Tip Default Descriere ReadOnly bool false Dezactiveaz\u0103 func\u021biile de editare OnExceptionChanged EventCallback - Eveniment la modificare excep\u021bii"},{"location":"fod/componente/FodExceptionDays/#fodexceptiondaymodal-modal-pentru-editare","title":"FodExceptionDayModal (modal pentru editare)","text":"Atribut Tip Default Descriere Action ActionType - Tipul ac\u021biunii (Add/Edit/Delete) Id Guid? null ID-ul excep\u021biei pentru editare/\u0219tergere OnSave EventCallback - Eveniment la salvare OnCancel EventCallback - Eveniment la anulare"},{"location":"fod/componente/FodExceptionDays/#servicii-si-modele","title":"Servicii \u0219i Modele","text":""},{"location":"fod/componente/FodExceptionDays/#iexceptiondaysservice","title":"IExceptionDaysService","text":"<pre><code>public interface IExceptionDaysService\n{\n    Task&lt;DataResponse&lt;WorkProgramModel&gt;&gt; GetFormatted(DataRequest request);\n    Task&lt;DataResponse&lt;ExceptionWorkingProgramModel&gt;&gt; GetExceptions(DataRequest request);\n    Task&lt;ExceptionWorkingProgramDetailsModel&gt; GetExceptionById(Guid id);\n    Task AddOrUpdateException(ExceptionWorkingProgramDetailsModel model);\n    Task Delete(Guid id);\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#modele-de-date","title":"Modele de Date","text":"<pre><code>public class WorkProgramModel\n{\n    public string Day { get; set; }      // Ziua s\u0103pt\u0103m\u00e2nii\n    public string Open { get; set; }     // Ora deschidere\n    public string Close { get; set; }    // Ora \u00eenchidere\n    public string Pause { get; set; }    // Pauz\u0103\n}\n\npublic class ExceptionWorkingProgramModel\n{\n    public Guid Id { get; set; }\n    public ExceptionTypeEnum Type { get; set; }\n    public DateTime Date { get; set; }\n    public string Open { get; set; }\n    public string Close { get; set; }\n}\n\npublic class ExceptionWorkingProgramDetailsModel\n{\n    public Guid? Id { get; set; }\n    public ExceptionTypeEnum Type { get; set; }\n    public DateTime Date { get; set; }\n    public int OpenHours { get; set; }\n    public int OpenMinutes { get; set; }\n    public int CloseHours { get; set; }\n    public int CloseMinutes { get; set; }\n}\n\npublic enum ExceptionTypeEnum\n{\n    Holiday,      // Zi liber\u0103\n    ShortDay,     // Zi scurt\u0103\n    WorkingDay    // Zi lucr\u0103toare special\u0103\n}\n\npublic enum ActionType\n{\n    Add,\n    Edit,\n    Delete\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FodExceptionDays/#gestionare-exceptii-cu-validare","title":"Gestionare Excep\u021bii cu Validare","text":"<pre><code>&lt;FodExceptionDays @ref=\"exceptionDaysComponent\" /&gt;\n\n@code {\n    private FodExceptionDays exceptionDaysComponent;\n\n    protected override void OnInitialized()\n    {\n        // \u00cenregistrare pentru evenimente\n        exceptionDaysComponent.OnExceptionChanged += HandleExceptionChanged;\n    }\n\n    private async Task HandleExceptionChanged()\n    {\n        // Re\u00eencarc\u0103 date sau notific\u0103 alte componente\n        await NotifyExceptionUpdate();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#integrare-cu-calendar","title":"Integrare cu Calendar","text":"<pre><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"col-md-8\"&gt;\n        &lt;FodCalendar @ref=\"calendar\"\n                     OnDateSelected=\"@OnCalendarDateSelected\"\n                     HighlightedDates=\"@highlightedDates\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-4\"&gt;\n        &lt;FodExceptionDays OnExceptionChanged=\"@RefreshCalendarHighlights\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FodCalendar calendar;\n    private List&lt;HighlightedDate&gt; highlightedDates = new();\n\n    private async Task RefreshCalendarHighlights()\n    {\n        var exceptions = await ExceptionDaysService.GetAllExceptions();\n\n        highlightedDates = exceptions.Select(e =&gt; new HighlightedDate\n        {\n            Date = e.Date,\n            Color = GetColorForExceptionType(e.Type),\n            Tooltip = GetTooltipForException(e)\n        }).ToList();\n\n        calendar.RefreshHighlights();\n    }\n\n    private string GetColorForExceptionType(ExceptionTypeEnum type)\n    {\n        return type switch\n        {\n            ExceptionTypeEnum.Holiday =&gt; \"red\",\n            ExceptionTypeEnum.ShortDay =&gt; \"orange\",\n            ExceptionTypeEnum.WorkingDay =&gt; \"green\",\n            _ =&gt; \"gray\"\n        };\n    }\n\n    private async Task OnCalendarDateSelected(DateTime date)\n    {\n        // Verific\u0103 dac\u0103 data selectat\u0103 are excep\u021bie\n        var exception = await ExceptionDaysService.GetExceptionByDate(date);\n        if (exception != null)\n        {\n            ShowExceptionDetails(exception);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#modal-personalizat-pentru-adaugare-rapida","title":"Modal Personalizat pentru Ad\u0103ugare Rapid\u0103","text":"<pre><code>&lt;FodButton @onclick=\"ShowQuickAddModal\"&gt;\n    Adaug\u0103 S\u0103rb\u0103toare Na\u021bional\u0103\n&lt;/FodButton&gt;\n\n@if (showQuickAdd)\n{\n    &lt;FodModal @bind-Visible=\"showQuickAdd\" Title=\"Adaug\u0103 S\u0103rb\u0103tori Na\u021bionale\"&gt;\n        &lt;BodyTemplate&gt;\n            &lt;FodCheckboxList @bind-Values=\"selectedHolidays\"\n                            Items=\"@nationalHolidays\"\n                            TextField=\"@(h =&gt; h.Name)\"\n                            ValueField=\"@(h =&gt; h.Date)\" /&gt;\n        &lt;/BodyTemplate&gt;\n        &lt;FooterTemplate&gt;\n            &lt;FodButton @onclick=\"AddSelectedHolidays\" Color=\"FodColor.Primary\"&gt;\n                Adaug\u0103 S\u0103rb\u0103torile Selectate\n            &lt;/FodButton&gt;\n        &lt;/FooterTemplate&gt;\n    &lt;/FodModal&gt;\n}\n\n@code {\n    private bool showQuickAdd;\n    private List&lt;DateTime&gt; selectedHolidays = new();\n\n    private List&lt;NationalHoliday&gt; nationalHolidays = new()\n    {\n        new() { Date = new DateTime(2024, 1, 1), Name = \"Anul Nou\" },\n        new() { Date = new DateTime(2024, 3, 8), Name = \"Ziua Interna\u021bional\u0103 a Femeii\" },\n        new() { Date = new DateTime(2024, 5, 1), Name = \"Ziua Muncii\" },\n        new() { Date = new DateTime(2024, 5, 9), Name = \"Ziua Victoriei\" },\n        new() { Date = new DateTime(2024, 8, 27), Name = \"Ziua Independen\u021bei\" },\n        new() { Date = new DateTime(2024, 8, 31), Name = \"Limba Noastr\u0103\" },\n        new() { Date = new DateTime(2024, 12, 25), Name = \"Cr\u0103ciunul\" }\n    };\n\n    private async Task AddSelectedHolidays()\n    {\n        foreach (var date in selectedHolidays)\n        {\n            var exception = new ExceptionWorkingProgramDetailsModel\n            {\n                Type = ExceptionTypeEnum.Holiday,\n                Date = date,\n                OpenHours = 0,\n                OpenMinutes = 0,\n                CloseHours = 0,\n                CloseMinutes = 0\n            };\n\n            await ExceptionDaysService.AddOrUpdateException(exception);\n        }\n\n        showQuickAdd = false;\n        await RefreshExceptionsList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#exportimport-exceptii","title":"Export/Import Excep\u021bii","text":"<pre><code>&lt;div class=\"exception-tools mb-3\"&gt;\n    &lt;FodButtonGroup&gt;\n        &lt;FodButton @onclick=\"ExportExceptions\" \n                   StartIcon=\"download\"&gt;\n            Export Excel\n        &lt;/FodButton&gt;\n        &lt;FodFileUpload Accept=\".xlsx,.xls\"\n                       OnFileSelected=\"@ImportExceptions\"&gt;\n            &lt;FodButton StartIcon=\"upload\"&gt;\n                Import Excel\n            &lt;/FodButton&gt;\n        &lt;/FodFileUpload&gt;\n    &lt;/FodButtonGroup&gt;\n&lt;/div&gt;\n\n&lt;FodExceptionDays @ref=\"exceptionDays\" /&gt;\n\n@code {\n    private FodExceptionDays exceptionDays;\n\n    private async Task ExportExceptions()\n    {\n        var exceptions = await ExceptionDaysService.GetAllExceptions();\n        var excelData = GenerateExcelFile(exceptions);\n\n        await JSRuntime.InvokeVoidAsync(\"downloadFile\", \n            \"exceptii_program_lucru.xlsx\", \n            Convert.ToBase64String(excelData));\n    }\n\n    private async Task ImportExceptions(InputFileChangeEventArgs e)\n    {\n        var file = e.File;\n        if (file != null)\n        {\n            using var stream = file.OpenReadStream();\n            var exceptions = await ParseExcelFile(stream);\n\n            foreach (var exception in exceptions)\n            {\n                await ExceptionDaysService.AddOrUpdateException(exception);\n            }\n\n            await exceptionDays.RefreshData();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#vizualizare-statistici","title":"Vizualizare Statistici","text":"<pre><code>&lt;FodCard&gt;\n    &lt;CardContent&gt;\n        &lt;h5&gt;Statistici Program Lucru - @DateTime.Now.Year&lt;/h5&gt;\n\n        &lt;FodGrid&gt;\n            &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n                &lt;div class=\"stat-box\"&gt;\n                    &lt;FodIcon Icon=\"event_busy\" Color=\"FodColor.Error\" /&gt;\n                    &lt;h6&gt;Zile Libere&lt;/h6&gt;\n                    &lt;h3&gt;@holidaysCount&lt;/h3&gt;\n                &lt;/div&gt;\n            &lt;/FodItem&gt;\n\n            &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n                &lt;div class=\"stat-box\"&gt;\n                    &lt;FodIcon Icon=\"schedule\" Color=\"FodColor.Warning\" /&gt;\n                    &lt;h6&gt;Zile Scurte&lt;/h6&gt;\n                    &lt;h3&gt;@shortDaysCount&lt;/h3&gt;\n                &lt;/div&gt;\n            &lt;/FodItem&gt;\n\n            &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n                &lt;div class=\"stat-box\"&gt;\n                    &lt;FodIcon Icon=\"work\" Color=\"FodColor.Success\" /&gt;\n                    &lt;h6&gt;Zile Lucr\u0103toare Speciale&lt;/h6&gt;\n                    &lt;h3&gt;@workingDaysCount&lt;/h3&gt;\n                &lt;/div&gt;\n            &lt;/FodItem&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodChart Type=\"ChartType.Pie\"\n                  Data=\"@GetChartData()\"\n                  Options=\"@chartOptions\" /&gt;\n    &lt;/CardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private int holidaysCount;\n    private int shortDaysCount;\n    private int workingDaysCount;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadStatistics();\n    }\n\n    private async Task LoadStatistics()\n    {\n        var exceptions = await ExceptionDaysService.GetYearExceptions(DateTime.Now.Year);\n\n        holidaysCount = exceptions.Count(e =&gt; e.Type == ExceptionTypeEnum.Holiday);\n        shortDaysCount = exceptions.Count(e =&gt; e.Type == ExceptionTypeEnum.ShortDay);\n        workingDaysCount = exceptions.Count(e =&gt; e.Type == ExceptionTypeEnum.WorkingDay);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodExceptionDays/#clase-css","title":"Clase CSS","text":"<pre><code>/* Stiluri pentru tabel program */\n.working-schedule-table {\n    margin-bottom: 2rem;\n}\n\n/* Stiluri pentru excep\u021bii */\n.exception-day-row {\n    transition: background-color 0.3s ease;\n}\n\n.exception-day-row:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n}\n\n/* Tipuri de excep\u021bii */\n.exception-type-holiday {\n    color: #dc3545;\n    font-weight: bold;\n}\n\n.exception-type-shortday {\n    color: #fd7e14;\n    font-weight: bold;\n}\n\n.exception-type-workingday {\n    color: #28a745;\n    font-weight: bold;\n}\n\n/* Modal styling */\n.exception-modal .hours,\n.exception-modal .minutes {\n    width: 60px;\n    text-align: center;\n    padding: 0.25rem;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n}\n\n/* Butoane ac\u021biuni */\n.exception-actions {\n    white-space: nowrap;\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#teme-personalizate","title":"Teme Personalizate","text":"<pre><code>/* Tem\u0103 s\u0103rb\u0103tori */\n.holiday-theme {\n    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n    color: white;\n}\n\n/* Tem\u0103 zile scurte */\n.shortday-theme {\n    background: linear-gradient(135deg, #feca57 0%, #ff9ff3 100%);\n    color: #333;\n}\n\n/* Tem\u0103 zile lucr\u0103toare */\n.workday-theme {\n    background: linear-gradient(135deg, #48dbfb 0%, #0abde3 100%);\n    color: white;\n}\n</code></pre>"},{"location":"fod/componente/FodExceptionDays/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>Data Validation - Validare automat\u0103 pentru date viitoare</li> <li>Time Format - Suport pentru format 24h</li> <li>Localization - Suport complet pentru RO/RU/EN</li> <li>Server Integration - Necesit\u0103 endpoint-uri API</li> <li>State Management - Refresh automat dup\u0103 modific\u0103ri</li> </ol>"},{"location":"fod/componente/FodExceptionDays/#bune-practici","title":"Bune Practici","text":"<ol> <li>Valida\u021bi orele de lucru (deschidere &lt; \u00eenchidere)</li> <li>Preveni\u021bi duplicate pentru aceea\u0219i dat\u0103</li> <li>Arhiva\u021bi excep\u021biile vechi</li> <li>Seta\u021bi permisiuni pentru editare</li> <li>Implementa\u021bi audit trail pentru modific\u0103ri</li> <li>Notifica\u021bi utilizatorii despre schimb\u0103ri</li> <li>Sincroniza\u021bi cu sistemul de program\u0103ri</li> </ol>"},{"location":"fod/componente/FodExceptionDays/#concluzie","title":"Concluzie","text":"<p>FodExceptionDays ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea programului de lucru \u0219i a excep\u021biilor. Cu interfa\u021b\u0103 intuitiv\u0103 pentru CRUD operations \u0219i suport pentru diverse tipuri de excep\u021bii, sistemul faciliteaz\u0103 administrarea eficient\u0103 a timpului de lucru \u00een institu\u021bii.</p>"},{"location":"fod/componente/FodExpansionPanels/","title":"Expansion Panels","text":""},{"location":"fod/componente/FodExpansionPanels/#documentatie-pentru-componentele-fodexpansionpanels-si-fodexpansionpanel","title":"Documenta\u021bie pentru componentele FodExpansionPanels \u0219i FodExpansionPanel","text":""},{"location":"fod/componente/FodExpansionPanels/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodExpansionPanels</code> \u0219i <code>FodExpansionPanel</code> sunt componente pentru crearea de panouri expandabile (accordion) \u00een aplica\u021bii Blazor. Permit organizarea con\u021binutului \u00een sec\u021biuni care pot fi extinse sau restr\u00e2nse pentru a economisi spa\u021biu \u0219i \u00eembun\u0103t\u0103\u021bi experien\u021ba utilizatorului.</p> <p>Caracteristici principale: - Container pentru multiple panouri expandabile - Mod single sau multi-expansion - Anima\u021bii fluide la expandare/restr\u00e2ngere - Iconi\u021be indicator pentru starea panoului - Integrare cu Bootstrap accordion - Gestionare centralizat\u0103 a st\u0103rii - Suport pentru con\u021binut dinamic - Design responsive</p>"},{"location":"fod/componente/FodExpansionPanels/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodExpansionPanels/#accordion-simplu-single-expansion","title":"Accordion simplu (single expansion)","text":"<pre><code>&lt;FodExpansionPanels&gt;\n    &lt;FodExpansionPanel Text=\"Informa\u021bii generale\" Id=\"info\"&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Aici pute\u021bi g\u0103si informa\u021bii generale despre serviciul nostru.\n            Panoul se poate extinde pentru a afi\u0219a mai multe detalii.\n        &lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"\u00centreb\u0103ri frecvente\" Id=\"faq\"&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Sec\u021biune cu \u00eentreb\u0103ri frecvente \u0219i r\u0103spunsurile aferente.\n        &lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Contact\" Id=\"contact\"&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Informa\u021bii de contact \u0219i formular de comunicare.\n        &lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#multi-expansion-mai-multe-panouri-deschise-simultan","title":"Multi-expansion (mai multe panouri deschise simultan)","text":"<pre><code>&lt;FodExpansionPanels MultiExpansion=\"true\"&gt;\n    &lt;FodExpansionPanel Text=\"Sec\u021biunea 1\" Id=\"section1\" IsExpanded=\"true\"&gt;\n        &lt;FodText&gt;Con\u021binut pentru prima sec\u021biune - ini\u021bial expandat\u0103&lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Sec\u021biunea 2\" Id=\"section2\"&gt;\n        &lt;FodText&gt;Con\u021binut pentru a doua sec\u021biune&lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Sec\u021biunea 3\" Id=\"section3\" IsExpanded=\"true\"&gt;\n        &lt;FodText&gt;Con\u021binut pentru a treia sec\u021biune - \u0219i aceasta expandat\u0103&lt;/FodText&gt;\n    &lt;/FodExpansionPanel&gt;\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#panouri-cu-continut-complex","title":"Panouri cu con\u021binut complex","text":"<pre><code>&lt;FodExpansionPanels&gt;\n    &lt;FodExpansionPanel Text=\"Date personale\" Id=\"personal-data\"&gt;\n        &lt;EditForm Model=\"@personalData\"&gt;\n            &lt;FodTextField @bind-Value=\"personalData.FirstName\" \n                          Label=\"Prenume\" \n                          FullWidth=\"true\" /&gt;\n            &lt;FodTextField @bind-Value=\"personalData.LastName\" \n                          Label=\"Nume\" \n                          FullWidth=\"true\" /&gt;\n            &lt;FodTextField @bind-Value=\"personalData.Email\" \n                          Label=\"Email\" \n                          Type=\"email\"\n                          FullWidth=\"true\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Adres\u0103\" Id=\"address\"&gt;\n        &lt;EditForm Model=\"@addressData\"&gt;\n            &lt;FodTextField @bind-Value=\"addressData.Street\" \n                          Label=\"Strad\u0103\" \n                          FullWidth=\"true\" /&gt;\n            &lt;FodTextField @bind-Value=\"addressData.City\" \n                          Label=\"Ora\u0219\" \n                          FullWidth=\"true\" /&gt;\n            &lt;FodTextField @bind-Value=\"addressData.PostalCode\" \n                          Label=\"Cod po\u0219tal\" \n                          FullWidth=\"true\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Preferin\u021be\" Id=\"preferences\"&gt;\n        &lt;FodCheckbox @bind-Checked=\"preferences.Newsletter\"&gt;\n            Doresc s\u0103 primesc newsletter\n        &lt;/FodCheckbox&gt;\n        &lt;FodCheckbox @bind-Checked=\"preferences.Notifications\"&gt;\n            Activeaz\u0103 notific\u0103rile\n        &lt;/FodCheckbox&gt;\n    &lt;/FodExpansionPanel&gt;\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#panouri-dinamice-din-lista","title":"Panouri dinamice din list\u0103","text":"<pre><code>&lt;FodExpansionPanels MultiExpansion=\"true\"&gt;\n    @foreach (var category in productCategories)\n    {\n        &lt;FodExpansionPanel Text=\"@category.Name\" \n                           Id=\"@($\"category-{category.Id}\")\"\n                           IsExpanded=\"@category.IsPopular\"&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n                @foreach (var product in category.Products)\n                {\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\"&gt;\n                        &lt;FodCard&gt;\n                            &lt;FodCardContent&gt;\n                                &lt;FodText Typo=\"Typo.h6\"&gt;@product.Name&lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.body2\"&gt;@product.Description&lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n                                    @product.Price.ToString(\"C\")\n                                &lt;/FodText&gt;\n                            &lt;/FodCardContent&gt;\n                        &lt;/FodCard&gt;\n                    &lt;/FodGrid&gt;\n                }\n            &lt;/FodGrid&gt;\n        &lt;/FodExpansionPanel&gt;\n    }\n&lt;/FodExpansionPanels&gt;\n\n@code {\n    private List&lt;ProductCategory&gt; productCategories = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        productCategories = await ProductService.GetCategoriesWithProductsAsync();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#faq-cu-cautare","title":"FAQ cu c\u0103utare","text":"<pre><code>&lt;FodTextField @bind-Value=\"searchTerm\" \n              Label=\"C\u0103uta\u021bi \u00een \u00eentreb\u0103ri frecvente\"\n              FullWidth=\"true\"\n              Class=\"mb-4\" /&gt;\n\n&lt;FodExpansionPanels&gt;\n    @foreach (var faq in FilteredFAQs)\n    {\n        &lt;FodExpansionPanel Text=\"@faq.Question\" Id=\"@($\"faq-{faq.Id}\")\"&gt;\n            &lt;FodText Typo=\"Typo.body1\" Class=\"mb-3\"&gt;\n                @faq.Answer\n            &lt;/FodText&gt;\n\n            @if (!string.IsNullOrEmpty(faq.AdditionalInfo))\n            {\n                &lt;FodAlert Severity=\"Severity.Info\"&gt;\n                    &lt;FodAlertTitle&gt;Informa\u021bii suplimentare&lt;/FodAlertTitle&gt;\n                    @faq.AdditionalInfo\n                &lt;/FodAlert&gt;\n            }\n\n            &lt;div class=\"mt-3\"&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    Ultima actualizare: @faq.LastUpdated.ToString(\"dd.MM.yyyy\")\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/FodExpansionPanel&gt;\n    }\n&lt;/FodExpansionPanels&gt;\n\n@if (!FilteredFAQs.Any())\n{\n    &lt;FodAlert Severity=\"Severity.Warning\"&gt;\n        Nu am g\u0103sit \u00eentreb\u0103ri care s\u0103 corespund\u0103 c\u0103ut\u0103rii dvs.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private string searchTerm = \"\";\n    private List&lt;FAQ&gt; allFAQs = new();\n\n    private IEnumerable&lt;FAQ&gt; FilteredFAQs =&gt; string.IsNullOrWhiteSpace(searchTerm)\n        ? allFAQs\n        : allFAQs.Where(f =&gt; \n            f.Question.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||\n            f.Answer.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));\n}\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#panouri-cu-actiuni","title":"Panouri cu ac\u021biuni","text":"<pre><code>&lt;FodExpansionPanels&gt;\n    @foreach (var order in userOrders)\n    {\n        &lt;FodExpansionPanel Text=\"@($\"Comand\u0103 #{order.Number} - {order.Date:dd.MM.yyyy}\")\" \n                           Id=\"@($\"order-{order.Id}\")\"&gt;\n            &lt;div class=\"order-details\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                    Produse comandate\n                &lt;/FodText&gt;\n\n                &lt;FodList&gt;\n                    @foreach (var item in order.Items)\n                    {\n                        &lt;FodListItem&gt;\n                            &lt;div class=\"d-flex justify-content-between\"&gt;\n                                &lt;FodText&gt;@item.ProductName x @item.Quantity&lt;/FodText&gt;\n                                &lt;FodText&gt;@item.TotalPrice.ToString(\"C\")&lt;/FodText&gt;\n                            &lt;/div&gt;\n                        &lt;/FodListItem&gt;\n                    }\n                &lt;/FodList&gt;\n\n                &lt;FodDivider Class=\"my-3\" /&gt;\n\n                &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n                    &lt;div&gt;\n                        &lt;FodText Typo=\"Typo.h6\"&gt;\n                            Total: @order.TotalAmount.ToString(\"C\")\n                        &lt;/FodText&gt;\n                        &lt;FodChip Color=\"@GetStatusColor(order.Status)\" Size=\"FodSize.Small\"&gt;\n                            @order.Status\n                        &lt;/FodChip&gt;\n                    &lt;/div&gt;\n\n                    &lt;div&gt;\n                        &lt;FodButton Variant=\"FodVariant.Text\" \n                                   OnClick=\"@(() =&gt; ViewOrderDetails(order))\"&gt;\n                            Vezi detalii\n                        &lt;/FodButton&gt;\n                        @if (order.Status == \"\u00cen procesare\")\n                        {\n                            &lt;FodButton Color=\"FodColor.Error\" \n                                       Variant=\"FodVariant.Text\"\n                                       OnClick=\"@(() =&gt; CancelOrder(order))\"&gt;\n                                Anuleaz\u0103\n                            &lt;/FodButton&gt;\n                        }\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/FodExpansionPanel&gt;\n    }\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#formular-step-by-step-cu-validare","title":"Formular step-by-step cu validare","text":"<pre><code>&lt;EditForm Model=\"@applicationForm\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodExpansionPanels&gt;\n        &lt;FodExpansionPanel Text=\"Pasul 1: Date personale\" \n                           Id=\"step1\" \n                           IsExpanded=\"true\"&gt;\n            &lt;FodTextField @bind-Value=\"applicationForm.FirstName\" \n                          Label=\"Prenume\" \n                          Required=\"true\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; applicationForm.FirstName)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"applicationForm.LastName\" \n                          Label=\"Nume\" \n                          Required=\"true\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; applicationForm.LastName)\" /&gt;\n\n            &lt;FodButton Color=\"FodColor.Primary\" \n                       OnClick=\"@(() =&gt; ExpandNextPanel(\"step2\"))\"&gt;\n                Continu\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodExpansionPanel&gt;\n\n        &lt;FodExpansionPanel Text=\"Pasul 2: Date de contact\" \n                           Id=\"step2\"&gt;\n            &lt;FodTextField @bind-Value=\"applicationForm.Email\" \n                          Label=\"Email\" \n                          Type=\"email\"\n                          Required=\"true\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; applicationForm.Email)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"applicationForm.Phone\" \n                          Label=\"Telefon\" \n                          Required=\"true\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; applicationForm.Phone)\" /&gt;\n\n            &lt;div class=\"d-flex gap-2\"&gt;\n                &lt;FodButton Variant=\"FodVariant.Text\"\n                           OnClick=\"@(() =&gt; ExpandNextPanel(\"step1\"))\"&gt;\n                    \u00cenapoi\n                &lt;/FodButton&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" \n                           OnClick=\"@(() =&gt; ExpandNextPanel(\"step3\"))\"&gt;\n                    Continu\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/FodExpansionPanel&gt;\n\n        &lt;FodExpansionPanel Text=\"Pasul 3: Confirmare\" \n                           Id=\"step3\"&gt;\n            &lt;FodAlert Severity=\"Severity.Info\" Class=\"mb-3\"&gt;\n                V\u0103 rug\u0103m verifica\u021bi datele introduse \u00eenainte de trimitere.\n            &lt;/FodAlert&gt;\n\n            &lt;div class=\"summary\"&gt;\n                &lt;FodText&gt;&lt;strong&gt;Nume:&lt;/strong&gt; @applicationForm.FullName&lt;/FodText&gt;\n                &lt;FodText&gt;&lt;strong&gt;Email:&lt;/strong&gt; @applicationForm.Email&lt;/FodText&gt;\n                &lt;FodText&gt;&lt;strong&gt;Telefon:&lt;/strong&gt; @applicationForm.Phone&lt;/FodText&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"d-flex gap-2 mt-3\"&gt;\n                &lt;FodButton Variant=\"FodVariant.Text\"\n                           OnClick=\"@(() =&gt; ExpandNextPanel(\"step2\"))\"&gt;\n                    \u00cenapoi\n                &lt;/FodButton&gt;\n                &lt;FodButton Type=\"ButtonType.Submit\" \n                           Color=\"FodColor.Primary\"&gt;\n                    Trimite aplica\u021bia\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/FodExpansionPanel&gt;\n    &lt;/FodExpansionPanels&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ApplicationForm applicationForm = new();\n    [CascadingParameter] private FodExpansionPanels? ExpansionPanels { get; set; }\n\n    private void ExpandNextPanel(string panelId)\n    {\n        // Logic\u0103 pentru a expanda urm\u0103torul panou\n        ExpansionPanels?.TogglePanel(panelId);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodExpansionPanels/#fodexpansionpanels","title":"FodExpansionPanels","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>MultiExpansion</code> <code>bool</code> Permite expandarea simultan\u0103 a mai multor panouri <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul (panourile) - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodExpansionPanels/#fodexpansionpanel","title":"FodExpansionPanel","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul afi\u0219at \u00een header - <code>Id</code> <code>string</code> Identificator unic pentru panou - <code>IsExpanded</code> <code>bool</code> Starea ini\u021bial\u0103 expandat\u0103 <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul panoului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodExpansionPanels/#4-metode-publice","title":"4. Metode publice","text":""},{"location":"fod/componente/FodExpansionPanels/#fodexpansionpanels_1","title":"FodExpansionPanels","text":"Metod\u0103 Descriere Parametri Return <code>TogglePanel</code> Comut\u0103 starea unui panou <code>string panelId</code> <code>void</code> <code>ExpandPanel</code> Expandeaz\u0103 un panou specific <code>string panelId</code> <code>void</code> <code>CollapsePanel</code> Restr\u00e2nge un panou specific <code>string panelId</code> <code>void</code> <code>CollapseAll</code> Restr\u00e2nge toate panourile - <code>void</code>"},{"location":"fod/componente/FodExpansionPanels/#5-evenimente","title":"5. Evenimente","text":"<p>Componentele nu expun evenimente publice direct, dar pot fi extinse pentru a ad\u0103uga: - <code>OnPanelExpanded</code> - <code>OnPanelCollapsed</code> - <code>OnPanelToggled</code></p>"},{"location":"fod/componente/FodExpansionPanels/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Stilizare header personalizat\u0103 */\n.custom-expansion .card-header {\n    background-color: var(--fod-palette-primary-light);\n    border-bottom: 2px solid var(--fod-palette-primary-main);\n}\n\n.custom-expansion .card-header:hover {\n    background-color: var(--fod-palette-primary-main);\n    color: white;\n}\n\n/* Iconi\u021be personalizate */\n.custom-expansion .expansion-icon {\n    transition: transform 0.3s ease;\n}\n\n.custom-expansion .expanded .expansion-icon {\n    transform: rotate(180deg);\n}\n\n/* Anima\u021bie smooth pentru con\u021binut */\n.custom-expansion .collapse {\n    transition: height 0.35s ease;\n}\n\n/* Panouri cu margini rotunjite */\n.rounded-panels .card {\n    border-radius: 12px;\n    margin-bottom: 1rem;\n    overflow: hidden;\n}\n\n/* Stil minimalist */\n.minimal-expansion .card {\n    border: none;\n    box-shadow: none;\n}\n\n.minimal-expansion .card-header {\n    background: transparent;\n    border-bottom: 1px solid #e0e0e0;\n    padding: 1rem 0;\n}\n\n/* Numerotare automat\u0103 */\n.numbered-expansion {\n    counter-reset: panel-counter;\n}\n\n.numbered-expansion .card-header::before {\n    counter-increment: panel-counter;\n    content: counter(panel-counter) \". \";\n    font-weight: bold;\n    margin-right: 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodExpansionPanels/#in-card-pentru-organizare","title":"\u00cen Card pentru organizare","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Set\u0103ri cont\n        &lt;/FodText&gt;\n\n        &lt;FodExpansionPanels&gt;\n            &lt;FodExpansionPanel Text=\"Profil\" Id=\"profile\"&gt;\n                &lt;!-- Set\u0103ri profil --&gt;\n            &lt;/FodExpansionPanel&gt;\n            &lt;FodExpansionPanel Text=\"Securitate\" Id=\"security\"&gt;\n                &lt;!-- Set\u0103ri securitate --&gt;\n            &lt;/FodExpansionPanel&gt;\n            &lt;FodExpansionPanel Text=\"Notific\u0103ri\" Id=\"notifications\"&gt;\n                &lt;!-- Set\u0103ri notific\u0103ri --&gt;\n            &lt;/FodExpansionPanel&gt;\n        &lt;/FodExpansionPanels&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#in-modal-pentru-detalii","title":"\u00cen Modal pentru detalii","text":"<pre><code>&lt;FodModal Show=\"@showDetailsModal\" Size=\"Size.Large\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Detalii produs&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodExpansionPanels MultiExpansion=\"true\"&gt;\n                &lt;FodExpansionPanel Text=\"Specifica\u021bii\" Id=\"specs\" IsExpanded=\"true\"&gt;\n                    &lt;!-- Specifica\u021bii tehnice --&gt;\n                &lt;/FodExpansionPanel&gt;\n                &lt;FodExpansionPanel Text=\"Recenzii\" Id=\"reviews\"&gt;\n                    &lt;!-- Recenzii utilizatori --&gt;\n                &lt;/FodExpansionPanel&gt;\n                &lt;FodExpansionPanel Text=\"\u00centreb\u0103ri\" Id=\"qa\"&gt;\n                    &lt;!-- Q&amp;A --&gt;\n                &lt;/FodExpansionPanel&gt;\n            &lt;/FodExpansionPanels&gt;\n        &lt;/FodModalBody&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodExpansionPanels/#accordion-pentru-navigare-laterala","title":"Accordion pentru navigare lateral\u0103","text":"<pre><code>&lt;div class=\"sidebar\"&gt;\n    &lt;FodExpansionPanels&gt;\n        @foreach (var menuSection in menuSections)\n        {\n            &lt;FodExpansionPanel Text=\"@menuSection.Title\" \n                               Id=\"@menuSection.Id\"\n                               IsExpanded=\"@(menuSection.Id == activeSection)\"&gt;\n                &lt;FodList&gt;\n                    @foreach (var item in menuSection.Items)\n                    {\n                        &lt;FodListItem OnClick=\"@(() =&gt; NavigateTo(item.Url))\"\n                                     Selected=\"@(currentUrl == item.Url)\"&gt;\n                            &lt;FodIcon Icon=\"@item.Icon\" Class=\"me-2\" /&gt;\n                            @item.Label\n                        &lt;/FodListItem&gt;\n                    }\n                &lt;/FodList&gt;\n            &lt;/FodExpansionPanel&gt;\n        }\n    &lt;/FodExpansionPanels&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#timeline-cu-expansion-panels","title":"Timeline cu expansion panels","text":"<pre><code>&lt;FodExpansionPanels MultiExpansion=\"true\"&gt;\n    @foreach (var timelineItem in timeline.OrderByDescending(t =&gt; t.Date))\n    {\n        &lt;FodExpansionPanel Text=\"@($\"{timelineItem.Date:dd.MM.yyyy} - {timelineItem.Title}\")\" \n                           Id=\"@($\"timeline-{timelineItem.Id}\")\"&gt;\n            &lt;div class=\"timeline-content\"&gt;\n                &lt;FodText Typo=\"Typo.body1\" GutterBottom=\"true\"&gt;\n                    @timelineItem.Description\n                &lt;/FodText&gt;\n\n                @if (timelineItem.Attachments.Any())\n                {\n                    &lt;FodText Typo=\"Typo.subtitle2\"&gt;Ata\u0219amente:&lt;/FodText&gt;\n                    &lt;FodList&gt;\n                        @foreach (var attachment in timelineItem.Attachments)\n                        {\n                            &lt;FodListItem&gt;\n                                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AttachFile\" /&gt;\n                                &lt;FodLink Href=\"@attachment.Url\"&gt;@attachment.Name&lt;/FodLink&gt;\n                            &lt;/FodListItem&gt;\n                        }\n                    &lt;/FodList&gt;\n                }\n            &lt;/div&gt;\n        &lt;/FodExpansionPanel&gt;\n    }\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi <code>@key</code> pentru panouri generate dinamic</li> <li>Evita\u021bi re-render inutile p\u0103str\u00e2nd referin\u021be stabile</li> <li>Pentru liste foarte mari, considera\u021bi virtualizare</li> <li>\u00cenc\u0103rca\u021bi con\u021binut lazy pentru panouri grele</li> </ul> <pre><code>&lt;FodExpansionPanel Text=\"Date complexe\" Id=\"complex-data\"&gt;\n    @if (isPanelExpanded)\n    {\n        &lt;ComplexDataComponent /&gt;\n    }\n    else\n    {\n        &lt;FodText&gt;Click pentru a \u00eenc\u0103rca datele...&lt;/FodText&gt;\n    }\n&lt;/FodExpansionPanel&gt;\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Folosi\u021bi ID-uri descriptive pentru panouri</li> <li>Asigura\u021bi contrast suficient pentru text</li> <li>Suport pentru navigare cu tastatur\u0103</li> <li>ARIA labels sunt generate automat</li> <li>Focus management corect</li> </ul>"},{"location":"fod/componente/FodExpansionPanels/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>ID-uri unice - Asigura\u021bi-v\u0103 c\u0103 fiecare panou are un ID unic</li> <li>Titluri clare - Folosi\u021bi texte descriptive pentru headers</li> <li>Con\u021binut organizat - Grupa\u021bi logic informa\u021biile</li> <li>Loading states - Afi\u0219a\u021bi indicatori pentru con\u021binut dinamic</li> <li>Responsive - Testa\u021bi pe diferite dimensiuni de ecran</li> <li>Limite rezonabile - Nu dep\u0103\u0219i\u021bi 10-15 panouri \u00eentr-un container</li> </ol>"},{"location":"fod/componente/FodExpansionPanels/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodExpansionPanels/#panourile-nu-se-expandeaza","title":"Panourile nu se expandeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 ID-urile sunt unice</li> <li>Verifica\u021bi c\u0103 panourile sunt \u00een interiorul FodExpansionPanels</li> <li>Verifica\u021bi consol\u0103 pentru erori JavaScript</li> </ul>"},{"location":"fod/componente/FodExpansionPanels/#animatia-nu-functioneaza-smooth","title":"Anima\u021bia nu func\u021bioneaz\u0103 smooth","text":"<ul> <li>Verifica\u021bi c\u0103 Bootstrap CSS este \u00eenc\u0103rcat</li> <li>Evita\u021bi schimb\u0103ri de \u00een\u0103l\u021bime \u00een timpul anima\u021biei</li> </ul>"},{"location":"fod/componente/FodExpansionPanels/#multiexpansion-nu-functioneaza","title":"MultiExpansion nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 a\u021bi setat <code>MultiExpansion=\"true\"</code> pe container</li> <li>Verifica\u021bi c\u0103 nu ave\u021bi logic\u0103 custom care interfereaz\u0103</li> </ul>"},{"location":"fod/componente/FodExpansionPanels/#13-limitari-cunoscute","title":"13. Limit\u0103ri cunoscute","text":"<ul> <li>Dependen\u021b\u0103 de Bootstrap pentru stiluri</li> <li>Nu suport\u0103 anima\u021bii custom native</li> <li>Nu are evenimente publice built-in</li> <li>Nu suport\u0103 lazy loading nativ</li> </ul>"},{"location":"fod/componente/FodExpansionPanels/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodExpansionPanels/#expansion-panels-cu-stare-persistenta","title":"Expansion panels cu stare persistent\u0103","text":"<pre><code>@inject ILocalStorageService LocalStorage\n\n&lt;FodExpansionPanels MultiExpansion=\"true\"&gt;\n    @foreach (var section in sections)\n    {\n        &lt;FodExpansionPanel Text=\"@section.Title\" \n                           Id=\"@section.Id\"\n                           IsExpanded=\"@IsExpanded(section.Id)\"&gt;\n            @section.Content\n        &lt;/FodExpansionPanel&gt;\n    }\n&lt;/FodExpansionPanels&gt;\n\n@code {\n    private HashSet&lt;string&gt; expandedPanels = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        var saved = await LocalStorage.GetItemAsync&lt;string[]&gt;(\"expandedPanels\");\n        if (saved != null)\n        {\n            expandedPanels = new HashSet&lt;string&gt;(saved);\n        }\n    }\n\n    private bool IsExpanded(string panelId) =&gt; expandedPanels.Contains(panelId);\n\n    private async Task TogglePanel(string panelId)\n    {\n        if (expandedPanels.Contains(panelId))\n            expandedPanels.Remove(panelId);\n        else\n            expandedPanels.Add(panelId);\n\n        await LocalStorage.SetItemAsync(\"expandedPanels\", expandedPanels.ToArray());\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodExpansionPanels/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodExpansionPanels</code> \u0219i <code>FodExpansionPanel</code> ofer\u0103 o solu\u021bie elegant\u0103 pentru organizarea con\u021binutului \u00een sec\u021biuni expandabile. Cu suport pentru single \u0219i multi-expansion, integrare u\u0219oar\u0103 \u0219i design responsive, acestea sunt ideale pentru formulare complexe, set\u0103ri, FAQ-uri \u0219i multe alte scenarii de utilizare.</p>"},{"location":"fod/componente/FodFaqViewer/","title":"FodFaqViewer","text":""},{"location":"fod/componente/FodFaqViewer/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodFaqViewer</code> este o component\u0103 pentru afi\u0219area \u00eentreb\u0103rilor frecvente (FAQ) asociate unui serviciu. Componenta \u00eencarc\u0103 datele de la un API endpoint, suport\u0103 paginare, multilingvism \u0219i afi\u0219are expandabil\u0103 a r\u0103spunsurilor. Include componenta <code>FaqItem</code> pentru afi\u0219area individual\u0103 a fiec\u0103rei \u00eentreb\u0103ri.</p>"},{"location":"fod/componente/FodFaqViewer/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- FAQ Viewer simplu --&gt;\n&lt;FodFaqViewer ServiceId=\"service-001\" /&gt;\n\n&lt;!-- FAQ cu titlu personalizat --&gt;\n&lt;FodFaqViewer ServiceId=\"service-001\" \n              Title=\"\u00centreb\u0103ri despre serviciul nostru\" /&gt;\n\n&lt;!-- FAQ f\u0103r\u0103 titlu \u0219i cu paginare personalizat\u0103 --&gt;\n&lt;FodFaqViewer ServiceId=\"service-001\"\n              HideTitle=\"true\"\n              PageSize=\"10\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#atribute-disponibile","title":"Atribute Disponibile","text":""},{"location":"fod/componente/FodFaqViewer/#fodfaqviewer_1","title":"FodFaqViewer","text":"Atribut Tip Default Descriere ServiceId string - ID-ul serviciului (obligatoriu) Title string null Titlu personalizat HideTitle bool false Ascunde titlul PageSize int 20 Num\u0103r \u00eentreb\u0103ri per pagin\u0103 Active bool true Afi\u0219eaz\u0103 doar FAQ-uri active Class string - Clase CSS adi\u021bionale Style string - Stiluri inline"},{"location":"fod/componente/FodFaqViewer/#faqitem-componenta-interna","title":"FaqItem (component\u0103 intern\u0103)","text":"Atribut Tip Default Descriere Id string Guid ID unic pentru item Question string \"\" Textul \u00eentreb\u0103rii Answer string \"\" Textul r\u0103spunsului (suport\u0103 HTML) IsInitiallyExpanded bool false Expandat ini\u021bial"},{"location":"fod/componente/FodFaqViewer/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere OnPageChanged int Schimbare pagin\u0103 intern\u0103"},{"location":"fod/componente/FodFaqViewer/#modele-de-date","title":"Modele de Date","text":""},{"location":"fod/componente/FodFaqViewer/#faqmodel","title":"FaqModel","text":"<pre><code>public class FaqModel\n{\n    public List&lt;FaqItemDto&gt; Items { get; set; }\n    public int TotalPages { get; set; }\n    public int CurrentPage { get; set; }\n    public int TotalItems { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faqitemdto","title":"FaqItemDto","text":"<pre><code>public class FaqItemDto\n{\n    public LocalizedText Question { get; set; }\n    public LocalizedText Answer { get; set; }\n    public bool Active { get; set; }\n}\n\npublic class LocalizedText\n{\n    public string Ro { get; set; }\n    public string Ru { get; set; }\n    public string En { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FodFaqViewer/#faq-cu-loading-si-error-states","title":"FAQ cu Loading \u0219i Error States","text":"<pre><code>&lt;div class=\"faq-container\"&gt;\n    @if (string.IsNullOrEmpty(serviceId))\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n            Selecta\u021bi un serviciu pentru a vedea \u00eentreb\u0103rile frecvente.\n        &lt;/FodAlert&gt;\n    }\n    else\n    {\n        &lt;FodFaqViewer ServiceId=\"@serviceId\"\n                      Title=\"@GetFaqTitle()\"\n                      PageSize=\"15\"\n                      Active=\"showOnlyActive\" /&gt;\n    }\n\n    &lt;FodCheckbox @bind-Value=\"showOnlyActive\" \n                 Label=\"Arat\u0103 doar FAQ-uri active\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private string serviceId;\n    private bool showOnlyActive = true;\n\n    private string GetFaqTitle()\n    {\n        return $\"\u00centreb\u0103ri frecvente - {GetServiceName(serviceId)}\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faq-cu-categorii-multiple","title":"FAQ cu Categorii Multiple","text":"<pre><code>&lt;FodTabs&gt;\n    &lt;FodTabPanel Title=\"Generale\"&gt;\n        &lt;FodFaqViewer ServiceId=\"general-faq\" \n                      HideTitle=\"true\" /&gt;\n    &lt;/FodTabPanel&gt;\n\n    &lt;FodTabPanel Title=\"Tehnice\"&gt;\n        &lt;FodFaqViewer ServiceId=\"technical-faq\" \n                      HideTitle=\"true\" /&gt;\n    &lt;/FodTabPanel&gt;\n\n    &lt;FodTabPanel Title=\"Facturare\"&gt;\n        &lt;FodFaqViewer ServiceId=\"billing-faq\" \n                      HideTitle=\"true\" /&gt;\n    &lt;/FodTabPanel&gt;\n&lt;/FodTabs&gt;\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faq-item-personalizat","title":"FAQ Item Personalizat","text":"<pre><code>&lt;!-- Utilizare direct\u0103 FaqItem --&gt;\n&lt;div class=\"custom-faq-list\"&gt;\n    @foreach (var faq in customFaqs)\n    {\n        &lt;div class=\"mb-3\"&gt;\n            &lt;FaqItem Question=\"@faq.Question\"\n                     Answer=\"@faq.Answer\"\n                     IsInitiallyExpanded=\"@faq.IsImportant\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;CustomFaq&gt; customFaqs = new()\n    {\n        new()\n        {\n            Question = \"Cum pot accesa serviciul?\",\n            Answer = \"&lt;p&gt;Pentru a accesa serviciul:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Autentifica\u021bi-v\u0103 cu MPass&lt;/li&gt;&lt;li&gt;Selecta\u021bi serviciul dorit&lt;/li&gt;&lt;li&gt;Completa\u021bi formularul&lt;/li&gt;&lt;/ul&gt;\",\n            IsImportant = true\n        },\n        new()\n        {\n            Question = \"Care sunt taxele?\",\n            Answer = \"Taxa standard este de &lt;strong&gt;100 MDL&lt;/strong&gt;. Pentru urgen\u021b\u0103: &lt;strong&gt;200 MDL&lt;/strong&gt;.\",\n            IsImportant = false\n        }\n    };\n\n    private class CustomFaq\n    {\n        public string Question { get; set; }\n        public string Answer { get; set; }\n        public bool IsImportant { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faq-cu-cautare","title":"FAQ cu C\u0103utare","text":"<pre><code>&lt;div class=\"faq-search-container\"&gt;\n    &lt;FodInput @bind-Value=\"searchQuery\"\n              Label=\"C\u0103uta\u021bi \u00een \u00eentreb\u0103ri\"\n              Immediate=\"true\"\n              DebounceInterval=\"300\"\n              OnDebounceIntervalElapsed=\"@FilterFaqs\" /&gt;\n\n    @if (filteredFaqs.Any())\n    {\n        &lt;div class=\"mt-4\"&gt;\n            @foreach (var faq in filteredFaqs)\n            {\n                &lt;FaqItem Question=\"@faq.Question\"\n                         Answer=\"@faq.Answer\" /&gt;\n            }\n        &lt;/div&gt;\n    }\n    else if (!string.IsNullOrWhiteSpace(searchQuery))\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"mt-4\"&gt;\n            Nu s-au g\u0103sit \u00eentreb\u0103ri pentru \"@searchQuery\"\n        &lt;/FodAlert&gt;\n    }\n\n    &lt;div class=\"mt-5\"&gt;\n        &lt;h4&gt;Toate \u00eentreb\u0103rile&lt;/h4&gt;\n        &lt;FodFaqViewer ServiceId=\"@currentServiceId\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string searchQuery;\n    private string currentServiceId = \"service-001\";\n    private List&lt;FaqSearchResult&gt; allFaqs = new();\n    private List&lt;FaqSearchResult&gt; filteredFaqs = new();\n\n    private async Task FilterFaqs()\n    {\n        if (string.IsNullOrWhiteSpace(searchQuery))\n        {\n            filteredFaqs.Clear();\n            return;\n        }\n\n        filteredFaqs = allFaqs\n            .Where(f =&gt; f.Question.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||\n                       f.Answer.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))\n            .ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faq-cu-statistici-si-feedback","title":"FAQ cu Statistici \u0219i Feedback","text":"<pre><code>&lt;div class=\"faq-with-stats\"&gt;\n    &lt;FodFaqViewer ServiceId=\"@serviceId\" @ref=\"faqViewer\" /&gt;\n\n    &lt;div class=\"faq-feedback mt-4 p-3 border rounded\"&gt;\n        &lt;h5&gt;A\u021bi g\u0103sit informa\u021bia util\u0103?&lt;/h5&gt;\n        &lt;div class=\"btn-group\"&gt;\n            &lt;FodButton Color=\"FodColor.Success\" \n                       Variant=\"FodVariant.Outlined\"\n                       @onclick=\"() =&gt; SubmitFeedback(true)\"&gt;\n                &lt;FodIcon Icon=\"thumb_up\" /&gt; Da\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Error\" \n                       Variant=\"FodVariant.Outlined\"\n                       @onclick=\"() =&gt; SubmitFeedback(false)\"&gt;\n                &lt;FodIcon Icon=\"thumb_down\" /&gt; Nu\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n\n        @if (showFeedbackForm)\n        {\n            &lt;div class=\"mt-3\"&gt;\n                &lt;FodTextArea @bind-Value=\"feedbackComment\"\n                             Label=\"Cum putem \u00eembun\u0103t\u0103\u021bi?\"\n                             Rows=\"3\" /&gt;\n                &lt;FodButton @onclick=\"SubmitDetailedFeedback\" \n                           Class=\"mt-2\"&gt;\n                    Trimite Feedback\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string serviceId = \"service-001\";\n    private FodFaqViewer faqViewer;\n    private bool showFeedbackForm;\n    private string feedbackComment;\n\n    private async Task SubmitFeedback(bool wasHelpful)\n    {\n        if (!wasHelpful)\n        {\n            showFeedbackForm = true;\n        }\n        else\n        {\n            await SaveFeedback(wasHelpful, null);\n        }\n    }\n\n    private async Task SubmitDetailedFeedback()\n    {\n        await SaveFeedback(false, feedbackComment);\n        showFeedbackForm = false;\n        feedbackComment = \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#faq-multilingv-personalizat","title":"FAQ Multilingv Personalizat","text":"<pre><code>&lt;div class=\"multilingual-faq\"&gt;\n    &lt;div class=\"language-selector mb-3\"&gt;\n        &lt;FodButtonGroup&gt;\n            &lt;FodButton Variant=\"@GetLanguageVariant(\"ro\")\"\n                       @onclick='() =&gt; currentLanguage = \"ro\"'&gt;\n                RO\n            &lt;/FodButton&gt;\n            &lt;FodButton Variant=\"@GetLanguageVariant(\"ru\")\"\n                       @onclick='() =&gt; currentLanguage = \"ru\"'&gt;\n                RU\n            &lt;/FodButton&gt;\n            &lt;FodButton Variant=\"@GetLanguageVariant(\"en\")\"\n                       @onclick='() =&gt; currentLanguage = \"en\"'&gt;\n                EN\n            &lt;/FodButton&gt;\n        &lt;/FodButtonGroup&gt;\n    &lt;/div&gt;\n\n    @foreach (var faq in multilingualFaqs)\n    {\n        &lt;FaqItem Question=\"@GetLocalizedText(faq.Question)\"\n                 Answer=\"@GetLocalizedText(faq.Answer)\" /&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string currentLanguage = \"ro\";\n    private List&lt;MultilingualFaq&gt; multilingualFaqs = new();\n\n    private string GetLocalizedText(LocalizedText text)\n    {\n        return currentLanguage switch\n        {\n            \"ro\" =&gt; text.Ro,\n            \"ru\" =&gt; text.Ru,\n            \"en\" =&gt; text.En,\n            _ =&gt; text.Ro\n        };\n    }\n\n    private FodVariant GetLanguageVariant(string lang)\n    {\n        return lang == currentLanguage ? FodVariant.Filled : FodVariant.Outlined;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#api-endpoint","title":"API Endpoint","text":"<p>Componenta a\u0219teapt\u0103 un endpoint cu urm\u0103toarea structur\u0103:</p> <pre><code>GET /api/faq-items?serviceId={serviceId}&amp;pageSize={pageSize}&amp;active={active}&amp;page={page}\n</code></pre> <p>R\u0103spuns a\u0219teptat: <pre><code>{\n    \"items\": [\n        {\n            \"question\": {\n                \"ro\": \"\u00centrebare \u00een rom\u00e2n\u0103\",\n                \"ru\": \"\u0412\u043e\u043f\u0440\u043e\u0441 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c\",\n                \"en\": \"Question in English\"\n            },\n            \"answer\": {\n                \"ro\": \"R\u0103spuns \u00een rom\u00e2n\u0103\",\n                \"ru\": \"\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c\",\n                \"en\": \"Answer in English\"\n            }\n        }\n    ],\n    \"totalPages\": 5,\n    \"currentPage\": 1,\n    \"totalItems\": 100\n}\n</code></pre></p>"},{"location":"fod/componente/FodFaqViewer/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodFaqViewer/#clase-css","title":"Clase CSS","text":"<pre><code>.faq-item\n.card\n.card-header\n.card-title\n.accordion-toggle\n.collapse\n.card-body\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#personalizare-aspect","title":"Personalizare Aspect","text":"<pre><code>/* FAQ Item personalizat */\n.faq-item .card {\n    border: 1px solid #e0e0e0;\n    margin-bottom: 10px;\n    border-radius: 8px;\n}\n\n.faq-item .card-header {\n    background-color: #f8f9fa;\n    border-bottom: none;\n    padding: 1rem;\n}\n\n.faq-item .accordion-toggle {\n    color: var(--fod-primary);\n    text-decoration: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    text-align: left;\n    border: none;\n    background: none;\n    padding: 0;\n}\n\n.faq-item .accordion-toggle:after {\n    content: '+';\n    font-size: 1.5rem;\n    transition: transform 0.3s ease;\n}\n\n.faq-item .accordion-toggle[aria-expanded=\"true\"]:after {\n    transform: rotate(45deg);\n}\n\n.faq-item .card-body {\n    padding: 1rem;\n    background-color: #ffffff;\n}\n</code></pre>"},{"location":"fod/componente/FodFaqViewer/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>ServiceId Required - Componenta necesit\u0103 ServiceId pentru a func\u021biona</li> <li>HTML Support - R\u0103spunsurile suport\u0103 markup HTML</li> <li>Localization - Suport complet pentru RO/RU/EN</li> <li>Pagination - Paginare automat\u0103 pentru liste lungi</li> <li>Loading State - Indicator de \u00eenc\u0103rcare integrat</li> </ol>"},{"location":"fod/componente/FodFaqViewer/#bune-practici","title":"Bune Practici","text":"<ol> <li>Seta\u021bi un PageSize rezonabil (10-20 \u00eentreb\u0103ri)</li> <li>Folosi\u021bi HTML semantic \u00een r\u0103spunsuri</li> <li>P\u0103stra\u021bi \u00eentreb\u0103rile concise \u0219i clare</li> <li>Grupa\u021bi FAQ-uri similare \u00eempreun\u0103</li> <li>Actualiza\u021bi regular con\u021binutul</li> <li>Monitoriza\u021bi feedback-ul utilizatorilor</li> <li>Optimiza\u021bi pentru SEO cu markup structurat</li> </ol>"},{"location":"fod/componente/FodFaqViewer/#concluzie","title":"Concluzie","text":"<p>FodFaqViewer ofer\u0103 o solu\u021bie complet\u0103 pentru afi\u0219area \u00eentreb\u0103rilor frecvente cu suport pentru multilingvism, paginare \u0219i expandare/colapsare. Componenta este ideal\u0103 pentru sec\u021biuni de ajutor \u0219i documenta\u021bie \u00een aplica\u021bii guvernamentale.</p>"},{"location":"fod/componente/FodFeedback/","title":"FodFeedback","text":""},{"location":"fod/componente/FodFeedback/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodFeedback</code> ofer\u0103 un widget complet pentru colectarea feedback-ului de la utilizatori. Poate fi afi\u0219at\u0103 ca un buton lateral fixat pe partea dreapt\u0103 a ecranului sau ca un modal overlay. Componenta include un flux multi-pas pentru colectarea rating-ului, mesajului \u0219i datelor op\u021bionale de contact.</p> <p>Componenta suport\u0103 dou\u0103 moduri principale de afi\u0219are: - Stick Right - Widget fixat pe partea dreapt\u0103 care se extinde lateral - Modal Overlay - Fereastr\u0103 modal\u0103 centrat\u0103</p>"},{"location":"fod/componente/FodFeedback/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodFeedback/#exemplu-de-baza-mod-stick-right","title":"Exemplu de baz\u0103 - mod stick right","text":"<pre><code>&lt;FodFeedback \n    StickRight=\"true\"\n    Text=\"Feedback\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedback/#exemplu-mod-modal","title":"Exemplu - mod modal","text":"<pre><code>&lt;FodFeedback \n    StickRight=\"false\"\n    ShowHeader=\"true\"\n    ShowCloseButton=\"true\" /&gt;\n\n@code {\n    // Componenta va afi\u0219a un buton care deschide modalul\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#cu-parametri-pentru-serviciu","title":"Cu parametri pentru serviciu","text":"<pre><code>&lt;FodFeedback \n    ServiceInternalCode=\"@serviceCode\"\n    TransactionId=\"@transactionId\"\n    Idno=\"@userIdno\"\n    OnSubmit=\"@HandleFeedbackSubmit\" /&gt;\n\n@code {\n    private string serviceCode = \"SRV001\";\n    private string transactionId = \"TRX123456\";\n    private string userIdno = \"2000000000000\";\n\n    private async Task HandleFeedbackSubmit()\n    {\n        // Logic\u0103 dup\u0103 trimiterea feedback-ului\n        Console.WriteLine(\"Feedback trimis!\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#configurare-completa","title":"Configurare complet\u0103","text":"<pre><code>&lt;FodFeedback \n    StickRight=\"true\"\n    Text=\"P\u0103rerea ta\"\n    ShowRatingLabel=\"true\"\n    ShowCloseButton=\"true\"\n    ShowHeader=\"true\"\n    HideOnSubmit=\"true\"\n    IsButtonMode=\"true\"\n    Model=\"@feedbackModel\" /&gt;\n\n@code {\n    private FeedbackComponentModel feedbackModel = new()\n    {\n        ServiceCode = \"SRV001\",\n        Rating = 0\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Idno string null IDNP-ul utilizatorului ServiceInternalCode string null Codul intern al serviciului TransactionId string null ID-ul tranzac\u021biei ShowRatingLabel bool true Afi\u0219eaz\u0103 eticheta pentru rating ShowCloseButton bool true Afi\u0219eaz\u0103 butonul de \u00eenchidere HideOnSubmit bool true Ascunde widget-ul dup\u0103 trimitere StickRight bool false Fixeaz\u0103 widget-ul pe partea dreapt\u0103 ShowHeader bool true Afi\u0219eaz\u0103 header-ul componentei Text string null Textul pentru butonul de feedback Model FeedbackComponentModel new() Modelul de date pentru feedback IsButtonMode bool true Afi\u0219eaz\u0103 butonul de activare"},{"location":"fod/componente/FodFeedback/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere OnSubmit EventCallback Declan\u0219at la trimiterea feedback-ului"},{"location":"fod/componente/FodFeedback/#metode-publice","title":"Metode publice","text":"Metod\u0103 Descriere ShowOrHide() Comut\u0103 vizibilitatea widget-ului"},{"location":"fod/componente/FodFeedback/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodRating - Pentru selectarea rating-ului</li> <li>FodButton - Butoane pentru ac\u021biuni</li> <li>FodOverlay - Pentru modul overlay</li> <li>FodCollapse - Pentru tranzi\u021bii \u00eentre pa\u0219i</li> <li>FodLoadingLinear - Indicator de \u00eenc\u0103rcare</li> <li>FodIcon - Iconi\u021be pentru interfa\u021b\u0103</li> <li>FodText - Afi\u0219are text formatat</li> </ul>"},{"location":"fod/componente/FodFeedback/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodFeedback/#clase-css-principale","title":"Clase CSS principale","text":"<ul> <li><code>.rating-popup</code> - Container pentru modul stick right</li> <li><code>.stickRight</code> - Pozi\u021bionare fix\u0103 pe dreapta</li> <li><code>.feedback-background</code> - Fundal pentru overlay</li> <li><code>.smooth-shadow</code> - Umbr\u0103 pentru container</li> <li><code>.widget-max-width</code> - L\u0103\u021bime maxim\u0103 (30rem)</li> <li><code>.widget-min-height</code> - \u00cen\u0103l\u021bime minim\u0103 (7rem)</li> </ul>"},{"location":"fod/componente/FodFeedback/#personalizare","title":"Personalizare","text":"<pre><code>/* Modificarea culorii de fundal */\n.feedback-background {\n    background: rgba(67, 130, 180, 0.3) !important;\n}\n\n/* Ajustarea pozi\u021biei stick right */\n.stickRight {\n    top: 50%; /* implicit 43% */\n}\n\n/* Stilizare buton feedback */\n.stickRight .fod-button {\n    padding: 0.5rem 1rem;\n    font-size: 0.9rem;\n}\n\n/* Anima\u021bii personalizate */\n.rating-popup {\n    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Flux multi-pas - Include 3 pa\u0219i: rating, mesaj, date op\u021bionale</li> <li>Validare - Mesajul este limitat la 500 caractere</li> <li>Autentificare - Detecteaz\u0103 automat utilizatorii autentifica\u021bi</li> <li>Responsive - Se adapteaz\u0103 pentru dispozitive mobile</li> <li>Anima\u021bii - Tranzi\u021bii fluide \u00eentre st\u0103ri</li> <li>Localizare - Toate textele sunt localizate</li> <li>Context - Preia automat contextul utilizatorului curent</li> </ol>"},{"location":"fod/componente/FodFeedback/#bune-practici","title":"Bune practici","text":"<ol> <li>Plasare strategic\u0103 - Folosi\u021bi StickRight pentru pagini cu mult con\u021binut</li> <li>Feedback contextual - Furniza\u021bi ServiceInternalCode pentru feedback specific</li> <li>Mesaje clare - Ghida\u021bi utilizatorii prin procesul de feedback</li> <li>Validare vizual\u0103 - Afi\u0219a\u021bi erori \u00een timp real</li> <li>Confirmare - Afi\u0219a\u021bi \u00eentotdeauna mesaj de mul\u021bumire</li> <li>Accesibilitate - Asigura\u021bi navigare cu tastatura</li> <li>Performance - \u00cenc\u0103rca\u021bi componenta doar c\u00e2nd este necesar\u0103</li> </ol>"},{"location":"fod/componente/FodFeedback/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/FodFeedback/#integrare-cu-servicii","title":"Integrare cu servicii","text":"<pre><code>&lt;FodFeedback \n    ServiceInternalCode=\"@currentService.Code\"\n    TransactionId=\"@currentTransaction.Id\"\n    OnSubmit=\"@(async () =&gt; await LogFeedback())\" /&gt;\n\n@code {\n    private async Task LogFeedback()\n    {\n        // Logare \u00een sistem\n        await analyticsService.TrackFeedback();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#control-programatic","title":"Control programatic","text":"<pre><code>&lt;FodFeedback @ref=\"feedbackWidget\" StickRight=\"true\" /&gt;\n\n&lt;FodButton OnClick=\"ShowFeedback\"&gt;\n    Solicit\u0103 Feedback\n&lt;/FodButton&gt;\n\n@code {\n    private FodFeedback feedbackWidget;\n\n    private async Task ShowFeedback()\n    {\n        await feedbackWidget.ShowOrHide();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFeedback/#concluzie","title":"Concluzie","text":"<p>FodFeedback ofer\u0103 o solu\u021bie complet\u0103 pentru colectarea feedback-ului de la utilizatori. Cu op\u021biuni flexibile de afi\u0219are, flux intuitiv multi-pas \u0219i integrare perfect\u0103 cu serviciile guvernamentale, componenta faciliteaz\u0103 \u00eembun\u0103t\u0103\u021birea continu\u0103 a serviciilor digitale bazat\u0103 pe p\u0103rerea cet\u0103\u021benilor.</p>"},{"location":"fod/componente/FodFeedbackBadge/","title":"FodFeedbackBadge","text":""},{"location":"fod/componente/FodFeedbackBadge/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodFeedbackBadge</code> afi\u0219eaz\u0103 un badge vizual cu statisticile de feedback pentru un serviciu specific. Prezint\u0103 scorul mediu, num\u0103rul total de recenzii \u0219i op\u021bional numele serviciului cu reprezentare vizual\u0103 prin stele. Componenta ofer\u0103 dou\u0103 variante de afi\u0219are pentru a se potrivi diferitelor contexte de design.</p>"},{"location":"fod/componente/FodFeedbackBadge/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodFeedbackBadge/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodFeedbackBadge ServiceInternalCode=\"SRV001\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#varianta-1-layout-standard","title":"Varianta 1 - Layout standard","text":"<pre><code>&lt;FodFeedbackBadge \n    ServiceInternalCode=\"@serviceCode\"\n    ShowStars=\"true\"\n    ShowServiceName=\"true\"\n    ShowBorder=\"true\"\n    ShowSecondVariant=\"false\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#varianta-2-layout-cu-scor-evidentiat","title":"Varianta 2 - Layout cu scor eviden\u021biat","text":"<pre><code>&lt;FodFeedbackBadge \n    ServiceInternalCode=\"@serviceCode\"\n    ShowSecondVariant=\"true\"\n    ShowStars=\"true\"\n    UseDefaultBackgroundColor=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#personalizare-culori","title":"Personalizare culori","text":"<pre><code>&lt;FodFeedbackBadge \n    ServiceInternalCode=\"@serviceCode\"\n    BadgeText=\"#FFFFFF\"\n    BadgeColor=\"#2196F3\"\n    InfoText=\"#333333\"\n    InfoBackgroundColor=\"#F5F5F5\"\n    UseDefaultBackgroundColor=\"false\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#exemplu-complet-cu-toate-optiunile","title":"Exemplu complet cu toate op\u021biunile","text":"<pre><code>&lt;FodFeedbackBadge \n    ServiceInternalCode=\"MDOCS-001\"\n    ShowSecondVariant=\"true\"\n    ShowStars=\"true\"\n    ShowBorder=\"true\"\n    ShowServiceName=\"true\"\n    UseDefaultBackgroundColor=\"true\" /&gt;\n\n@code {\n    // Badge-ul va afi\u0219a:\n    // - Scorul mediu colorat dinamic\n    // - Numele serviciului\n    // - Reprezentare cu stele\n    // - Num\u0103rul total de recenzii\n}\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere ServiceInternalCode string null Codul intern al serviciului (obligatoriu) ShowStars bool false Afi\u0219eaz\u0103 reprezentarea cu stele ShowBorder bool false Adaug\u0103 bordur\u0103 componentei ShowServiceName bool false Afi\u0219eaz\u0103 numele serviciului ShowSecondVariant bool false Folose\u0219te varianta 2 de layout UseDefaultBackgroundColor bool true Folose\u0219te culori dinamice bazate pe scor BadgeText string \"#FFFFFF\" Culoarea textului pentru badge BadgeColor string \"#4382b4\" Culoarea de fundal pentru badge InfoText string \"#4382b4\" Culoarea textului pentru informa\u021bii InfoBackgroundColor string \"#FFFFFF\" Culoarea de fundal pentru zona de informa\u021bii"},{"location":"fod/componente/FodFeedbackBadge/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente.</p>"},{"location":"fod/componente/FodFeedbackBadge/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodFeedbackBadge/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodIcon - Pentru afi\u0219area stelelor</li> <li>FodText - Pentru formatarea textului</li> <li>IFeedbackComponentService - Serviciu pentru ob\u021binerea datelor</li> </ul>"},{"location":"fod/componente/FodFeedbackBadge/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodFeedbackBadge/#varianta-1-layout-standard_1","title":"Varianta 1 - Layout standard","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Nume Serviciu                  \u2502\n\u2502 \u2605\u2605\u2605\u2605\u2606 4.2/5                    \u2502\n\u2502 Bazat pe 150 recenzii          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#varianta-2-layout-cu-scor-evidentiat_1","title":"Varianta 2 - Layout cu scor eviden\u021biat","text":"<pre><code>\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25024.2\u2502 Nume Serviciu              \u2502\n\u2502   \u2502 \u2605\u2605\u2605\u2605\u2606                      \u2502\n\u2502   \u2502 Foarte bun \u2022 150 recenzii  \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#clase-css-generate","title":"Clase CSS generate","text":"<ul> <li><code>.star</code> - Dimensiune stele (25x25px)</li> <li><code>.badge-text-color</code> - Culoare text badge</li> <li><code>.badge-background-color</code> - Culoare fundal badge</li> <li><code>.info-background-color</code> - Culoare fundal informa\u021bii</li> <li><code>.info-text-color</code> - Culoare text informa\u021bii</li> <li><code>.small-text</code> - Text de dimensiune mic\u0103</li> </ul>"},{"location":"fod/componente/FodFeedbackBadge/#personalizare","title":"Personalizare","text":"<pre><code>/* Modificarea dimensiunii stelelor */\n.fod-feedback-badge .star {\n    height: 30px;\n    width: 30px;\n}\n\n/* Stilizare badge scor */\n.fod-feedback-badge h3 {\n    font-weight: bold;\n    margin: 0.5rem;\n}\n\n/* Ajustare spa\u021biere */\n.fod-feedback-badge .row {\n    gap: 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Culori dinamice - C\u00e2nd <code>UseDefaultBackgroundColor</code> este true, culoarea se schimb\u0103 \u00een func\u021bie de scor:</li> <li>1 stea: Ro\u0219u (#d50000)</li> <li>2 stele: Portocaliu (#e16900)</li> <li>3 stele: Galben (#fcd002)</li> <li>4 stele: Verde deschis (#98bc25)</li> <li> <p>5 stele: Verde \u00eenchis (#56ab42)</p> </li> <li> <p>\u00cenc\u0103rcare asincron\u0103 - Datele sunt \u00eenc\u0103rcate automat la ini\u021bializare</p> </li> <li>Refresh automat - Datele se actualizeaz\u0103 c\u00e2nd se schimb\u0103 ServiceInternalCode</li> <li>Gestionare erori - Afi\u0219eaz\u0103 mesaj c\u00e2nd nu exist\u0103 recenzii</li> </ol>"},{"location":"fod/componente/FodFeedbackBadge/#bune-practici","title":"Bune practici","text":"<ol> <li>Cod serviciu valid - Asigura\u021bi-v\u0103 c\u0103 ServiceInternalCode este corect</li> <li>Performan\u021b\u0103 - Cache-ui\u021bi rezultatele pentru servicii frecvent accesate</li> <li>Responsive - Testa\u021bi ambele variante pe diferite dimensiuni de ecran</li> <li>Contrast - Verifica\u021bi contrastul culorilor personalizate</li> <li>Loading state - Considera\u021bi afi\u0219area unui placeholder \u00een timpul \u00eenc\u0103rc\u0103rii</li> </ol>"},{"location":"fod/componente/FodFeedbackBadge/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/componente/FodFeedbackBadge/#in-lista-de-servicii","title":"\u00cen lista de servicii","text":"<pre><code>@foreach (var service in services)\n{\n    &lt;div class=\"service-card\"&gt;\n        &lt;h3&gt;@service.Name&lt;/h3&gt;\n        &lt;FodFeedbackBadge ServiceInternalCode=\"@service.Code\" ShowStars=\"true\" /&gt;\n        &lt;FodButton Href=\"@($\"/service/{service.Code}\")\"&gt;Vezi detalii&lt;/FodButton&gt;\n    &lt;/div&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#in-header-serviciu","title":"\u00cen header serviciu","text":"<pre><code>&lt;div class=\"service-header\"&gt;\n    &lt;h1&gt;@serviceName&lt;/h1&gt;\n    &lt;FodFeedbackBadge \n        ServiceInternalCode=\"@serviceCode\" \n        ShowSecondVariant=\"true\"\n        ShowStars=\"true\"\n        ShowServiceName=\"false\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodFeedbackBadge/#concluzie","title":"Concluzie","text":"<p>FodFeedbackBadge ofer\u0103 o modalitate elegant\u0103 \u0219i informativ\u0103 de a afi\u0219a statisticile de feedback. Cu dou\u0103 variante de layout, culori dinamice \u0219i personalizare flexibil\u0103, componenta se integreaz\u0103 perfect \u00een diverse contexte pentru a prezenta calitatea serviciilor bazat\u0103 pe feedback-ul utilizatorilor.</p>"},{"location":"fod/componente/FodFileView/","title":"FodFileView","text":""},{"location":"fod/componente/FodFileView/#documentatie-pentru-componenta-fodfileview","title":"Documenta\u021bie pentru componenta FodFileView","text":""},{"location":"fod/componente/FodFileView/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodFileView</code> este o component\u0103 pentru vizualizarea fi\u0219ierelor \u00eentr-un modal. Suport\u0103 afi\u0219area imaginilor direct \u0219i a altor tipuri de fi\u0219iere prin iframe, oferind o experien\u021b\u0103 de previzualizare integrat\u0103 pentru documentele \u00eenc\u0103rcate.</p> <p>Caracteristici principale: - Vizualizare fi\u0219iere \u00een modal responsive - Suport pentru imagini cu scalare automat\u0103 - Afi\u0219are documente (PDF, etc.) prin iframe - Loading state pentru \u00eenc\u0103rcare - Integrare cu IFileUploadService - API endpoint pentru servirea fi\u0219ierelor - \u00cenchidere cu ESC</p>"},{"location":"fod/componente/FodFileView/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodFileView/#vizualizator-simplu","title":"Vizualizator simplu","text":"<pre><code>&lt;FodFileView @ref=\"fileViewer\" /&gt;\n\n&lt;FodButton OnClick=\"() =&gt; fileViewer.OpenFileViewAsync(fileId)\"&gt;\n    Vizualizeaz\u0103 fi\u0219ier\n&lt;/FodButton&gt;\n\n@code {\n    private FodFileView fileViewer;\n    private Guid fileId = Guid.Parse(\"...\");\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#integrare-cu-filelist","title":"Integrare cu FileList","text":"<pre><code>&lt;FileList Model=\"@uploadedFiles\"&gt;\n    &lt;PreviewButton&gt;\n        &lt;FodButton OnClick=\"() =&gt; OpenPreview(context.Id)\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Preview\" /&gt;\n        &lt;/FodButton&gt;\n    &lt;/PreviewButton&gt;\n&lt;/FileList&gt;\n\n&lt;FodFileView @ref=\"fileViewer\" \n             OnOpen=\"HandleFileOpened\"\n             OnCloase=\"HandleFileClosed\" /&gt;\n\n@code {\n    private FodFileView fileViewer;\n\n    private async Task OpenPreview(Guid fileId)\n    {\n        await fileViewer.OpenFileViewAsync(fileId);\n    }\n\n    private void HandleFileOpened()\n    {\n        Console.WriteLine(\"File viewer opened\");\n    }\n\n    private void HandleFileClosed()\n    {\n        Console.WriteLine(\"File viewer closed\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#3-parametri-si-metode","title":"3. Parametri \u0219i Metode","text":"Parametru/Metod\u0103 Tip Descriere <code>OpenFileViewer</code> <code>bool</code> Stare deschidere modal (Parameter) <code>OnCloase</code> <code>EventCallback</code> Eveniment la \u00eenchidere (typo \u00een original) <code>OnOpen</code> <code>EventCallback</code> Eveniment la deschidere <code>FileId</code> <code>Guid</code> ID-ul fi\u0219ierului de afi\u0219at <code>OpenFileViewAsync(Guid id)</code> <code>Task</code> Metod\u0103 public\u0103 pentru deschidere"},{"location":"fod/componente/FodFileView/#4-model-fileviewmodel","title":"4. Model FileViewModel","text":"<pre><code>public class FileViewModel\n{\n    public Guid Id { get; set; }\n    public string FileName { get; set; }\n    public string FileType { get; set; }\n    public string ContentType { get; set; }\n    public long FileSize { get; set; }\n    // alte propriet\u0103\u021bi\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodFileView/#galerie-de-imagini-cu-preview","title":"Galerie de imagini cu preview","text":"<pre><code>&lt;div class=\"image-gallery\"&gt;\n    &lt;FodGrid container spacing=\"2\"&gt;\n        @foreach (var image in imageFiles)\n        {\n            &lt;FodGrid item xs=\"6\" sm=\"4\" md=\"3\"&gt;\n                &lt;div class=\"gallery-item\" @onclick=\"() =&gt; PreviewImage(image.Id)\"&gt;\n                    &lt;img src=\"@GetThumbnailUrl(image.Id)\" \n                         alt=\"@image.FileName\"\n                         class=\"img-thumbnail\" /&gt;\n                    &lt;div class=\"overlay\"&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ZoomIn\" \n                                 Color=\"FodColor.White\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodGrid&gt;\n        }\n    &lt;/FodGrid&gt;\n&lt;/div&gt;\n\n&lt;FodFileView @ref=\"imageViewer\" /&gt;\n\n@code {\n    private FodFileView imageViewer;\n    private List&lt;FileInfo&gt; imageFiles;\n\n    private async Task PreviewImage(Guid imageId)\n    {\n        await imageViewer.OpenFileViewAsync(imageId);\n    }\n\n    private string GetThumbnailUrl(Guid fileId)\n    {\n        return $\"api/fod/file-thumbnail/{fileId}\";\n    }\n}\n\n&lt;style&gt;\n    .gallery-item {\n        position: relative;\n        cursor: pointer;\n        overflow: hidden;\n        border-radius: 8px;\n    }\n\n    .gallery-item img {\n        width: 100%;\n        height: 200px;\n        object-fit: cover;\n        transition: transform 0.3s;\n    }\n\n    .gallery-item:hover img {\n        transform: scale(1.1);\n    }\n\n    .gallery-item .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: rgba(0, 0, 0, 0.5);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        opacity: 0;\n        transition: opacity 0.3s;\n    }\n\n    .gallery-item:hover .overlay {\n        opacity: 1;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodFileView/#viewer-cu-toolbar-actiuni","title":"Viewer cu toolbar ac\u021biuni","text":"<pre><code>@* ExtendedFileView.razor *@\n@inherits FodComponent\n\n&lt;FodModal Show=\"@Show\"\n          OnClosed=\"OnCloseAsync\"\n          CloseOnEscape=\"true\"\n          Scrollable=\"true\"\n          Size=\"FodSize.Large\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;div class=\"d-flex justify-content-between align-items-center w-100\"&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;@fileInfo?.FileName&lt;/FodText&gt;\n            &lt;div class=\"file-actions\"&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Download\"\n                               OnClick=\"DownloadFile\"\n                               Title=\"Descarc\u0103\" /&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Print\"\n                               OnClick=\"PrintFile\"\n                               Title=\"Printeaz\u0103\" /&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Share\"\n                               OnClick=\"ShareFile\"\n                               Title=\"Partajeaz\u0103\" /&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Close\"\n                               OnClick=\"OnCloseAsync\"\n                               Title=\"\u00cenchide\" /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/HeaderTemplate&gt;\n\n    &lt;BodyTemplate&gt;\n        &lt;FodFileView @ref=\"baseViewer\" FileId=\"@currentFileId\" /&gt;\n\n        @if (showFileInfo)\n        {\n            &lt;div class=\"file-info-panel mt-3\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle2\"&gt;Informa\u021bii fi\u0219ier&lt;/FodText&gt;\n                &lt;dl class=\"row\"&gt;\n                    &lt;dt class=\"col-sm-3\"&gt;Nume:&lt;/dt&gt;\n                    &lt;dd class=\"col-sm-9\"&gt;@fileInfo.FileName&lt;/dd&gt;\n\n                    &lt;dt class=\"col-sm-3\"&gt;Dimensiune:&lt;/dt&gt;\n                    &lt;dd class=\"col-sm-9\"&gt;@FormatFileSize(fileInfo.FileSize)&lt;/dd&gt;\n\n                    &lt;dt class=\"col-sm-3\"&gt;Tip:&lt;/dt&gt;\n                    &lt;dd class=\"col-sm-9\"&gt;@fileInfo.ContentType&lt;/dd&gt;\n\n                    &lt;dt class=\"col-sm-3\"&gt;\u00cenc\u0103rcat la:&lt;/dt&gt;\n                    &lt;dd class=\"col-sm-9\"&gt;@fileInfo.UploadDate.ToString(\"dd.MM.yyyy HH:mm\")&lt;/dd&gt;\n                &lt;/dl&gt;\n            &lt;/div&gt;\n        }\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private FodFileView baseViewer;\n    private FileInfo fileInfo;\n    private Guid currentFileId;\n    private bool Show;\n    private bool showFileInfo;\n\n    [Inject] private IJSRuntime JS { get; set; }\n    [Inject] private IPrintingService PrintService { get; set; }\n\n    public async Task OpenWithInfo(Guid fileId)\n    {\n        currentFileId = fileId;\n        fileInfo = await FileService.GetFileInfo(fileId);\n        Show = true;\n        await baseViewer.OpenFileViewAsync(fileId);\n    }\n\n    private async Task DownloadFile()\n    {\n        var url = $\"api/fod/file-download/{currentFileId}\";\n        await JS.InvokeVoidAsync(\"open\", url, \"_blank\");\n    }\n\n    private async Task PrintFile()\n    {\n        await PrintService.PrintFile(currentFileId);\n    }\n\n    private async Task ShareFile()\n    {\n        // Implementare partajare\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i Personalizare","text":"<pre><code>/* Modal customization */\n.fod-modal .modal-dialog.modal-lg {\n    max-width: 90%;\n}\n\n/* Responsive iframe */\n.fod-file-view iframe {\n    width: 100%;\n    height: calc(100vh - 200px);\n    border: none;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* Image viewer enhancements */\n.fod-file-view .scaled-img {\n    cursor: zoom-in;\n    transition: transform 0.3s ease;\n}\n\n.fod-file-view .scaled-img:hover {\n    transform: scale(1.02);\n}\n\n/* Loading state */\n.fod-file-view-loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 400px;\n}\n\n/* File type indicators */\n.file-type-indicator {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 0.875rem;\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#7-integrare-cu-servicii","title":"7. Integrare cu Servicii","text":""},{"location":"fod/componente/FodFileView/#service-pentru-file-viewing","title":"Service pentru file viewing","text":"<pre><code>public interface IFileViewService\n{\n    Task&lt;FileViewModel&gt; GetFileViewModel(Guid fileId);\n    Task&lt;bool&gt; CanUserViewFile(Guid fileId, string userId);\n    Task LogFileView(Guid fileId, string userId);\n}\n\npublic class FileViewService : IFileViewService\n{\n    private readonly IFileUploadService _fileService;\n    private readonly ILogger&lt;FileViewService&gt; _logger;\n\n    public async Task&lt;FileViewModel&gt; GetFileViewModel(Guid fileId)\n    {\n        var file = await _fileService.GetFileUrl(fileId);\n\n        // Adaug\u0103 metadata suplimentar\u0103\n        file.CanPrint = IsPrintable(file.FileType);\n        file.CanDownload = await CheckDownloadPermission(fileId);\n\n        return file;\n    }\n\n    private bool IsPrintable(string fileType)\n    {\n        var printableTypes = new[] { \"pdf\", \"image\", \"text\" };\n        return printableTypes.Any(t =&gt; fileType.Contains(t));\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodFileView/#document-viewer-cu-navigare","title":"Document viewer cu navigare","text":"<pre><code>&lt;div class=\"document-viewer-container\"&gt;\n    &lt;div class=\"document-list\"&gt;\n        &lt;FodList Dense=\"true\" @bind-SelectedValue=\"selectedDocId\"&gt;\n            @foreach (var doc in documents)\n            {\n                &lt;FodListItem Value=\"@doc.Id.ToString()\"\n                             OnClick=\"() =&gt; ViewDocument(doc.Id)\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@GetFileIcon(doc.FileType)\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText&gt;\n                        &lt;span&gt;@doc.FileName&lt;/span&gt;\n                        &lt;small class=\"text-muted\"&gt;@doc.FileSize.ToFileSize()&lt;/small&gt;\n                    &lt;/FodListItemText&gt;\n                &lt;/FodListItem&gt;\n            }\n        &lt;/FodList&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"document-preview\"&gt;\n        &lt;FodFileView @ref=\"docViewer\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FodFileView docViewer;\n    private string selectedDocId;\n    private List&lt;Document&gt; documents;\n\n    private async Task ViewDocument(Guid docId)\n    {\n        await docViewer.OpenFileViewAsync(docId);\n    }\n\n    private string GetFileIcon(string fileType) =&gt; fileType switch\n    {\n        var t when t.Contains(\"pdf\") =&gt; FodIcons.Material.Filled.PictureAsPdf,\n        var t when t.Contains(\"image\") =&gt; FodIcons.Material.Filled.Image,\n        var t when t.Contains(\"word\") =&gt; FodIcons.Material.Filled.Description,\n        _ =&gt; FodIcons.Material.Filled.InsertDriveFile\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Securitate:</li> <li>Valida\u021bi permisiunile \u00eenainte de afi\u0219are</li> <li>Folosi\u021bi token-uri pentru URL-uri sigure</li> <li> <p>Implementa\u021bi audit logging</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Lazy loading pentru fi\u0219iere mari</li> <li>Thumbnail-uri pentru imagini</li> <li> <p>Cache pentru fi\u0219iere frecvent accesate</p> </li> <li> <p>UX:</p> </li> <li>Loading indicators clare</li> <li>Mesaje de eroare descriptive</li> <li>Suport pentru zoom \u00een imagini</li> <li>Navigare cu keyboard</li> </ol>"},{"location":"fod/componente/FodFileView/#10-suport-pentru-tipuri-de-fisiere","title":"10. Suport pentru Tipuri de Fi\u0219iere","text":"<pre><code>public static class FileTypeSupport\n{\n    public static bool IsViewable(string fileType)\n    {\n        var viewableTypes = new[]\n        {\n            // Imagini\n            \"image/jpeg\", \"image/png\", \"image/gif\", \"image/webp\",\n            // Documente\n            \"application/pdf\",\n            // Text\n            \"text/plain\", \"text/html\",\n            // Video (cu limit\u0103ri)\n            \"video/mp4\", \"video/webm\"\n        };\n\n        return viewableTypes.Contains(fileType.ToLower());\n    }\n\n    public static string GetViewerType(string fileType)\n    {\n        return fileType switch\n        {\n            var t when t.StartsWith(\"image/\") =&gt; \"image\",\n            \"application/pdf\" =&gt; \"iframe\",\n            var t when t.StartsWith(\"video/\") =&gt; \"video\",\n            _ =&gt; \"download\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFileView/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodFileView/#fisierul-nu-se-afiseaza","title":"Fi\u0219ierul nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 endpoint-ul API returneaz\u0103 fi\u0219ierul</li> <li>Verifica\u021bi Content-Type corect</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FodFileView/#modal-nu-se-deschide","title":"Modal nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 <code>OpenFileViewAsync</code> este apelat</li> <li>Verifica\u021bi c\u0103 FileId este valid</li> <li>Verifica\u021bi erori \u00een consol\u0103</li> </ul>"},{"location":"fod/componente/FodFileView/#12-limitari-si-alternative","title":"12. Limit\u0103ri \u0219i Alternative","text":"<p>Limit\u0103ri actuale: - Nu suport\u0103 editare - Suport limitat pentru formate video - Nu are zoom pentru PDF</p> <p>Alternative: - PDF.js pentru control avansat PDF - ViewerJS pentru mai multe formate - Google Docs Viewer pentru documente Office</p>"},{"location":"fod/componente/FodFileView/#13-extensibilitate","title":"13. Extensibilitate","text":"<pre><code>@* FileViewerWithAnnotations.razor *@\n&lt;FodFileView @ref=\"baseViewer\"&gt;\n    &lt;AdditionalContent&gt;\n        @if (IsAnnotatable)\n        {\n            &lt;div class=\"annotation-toolbar\"&gt;\n                &lt;FodButton OnClick=\"AddComment\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Comment\" /&gt;\n                    Adaug\u0103 comentariu\n                &lt;/FodButton&gt;\n                &lt;FodButton OnClick=\"Highlight\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Highlight\" /&gt;\n                    Eviden\u021biaz\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        }\n    &lt;/AdditionalContent&gt;\n&lt;/FodFileView&gt;\n</code></pre>"},{"location":"fod/componente/FodFileView/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodFileView</code> ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru vizualizarea fi\u0219ierelor \u00een aplica\u021bii Blazor. Cu suport pentru imagini \u0219i documente, integrare cu servicii de fi\u0219iere \u0219i o interfa\u021b\u0103 modal responsiv\u0103, componenta acoper\u0103 majoritatea necesit\u0103\u021bilor de previzualizare a documentelor.</p>"},{"location":"fod/componente/FodFilter/","title":"FodFilter","text":""},{"location":"fod/componente/FodFilter/#documentatie-pentru-componenta-fodfilter","title":"Documenta\u021bie pentru componenta FodFilter","text":""},{"location":"fod/componente/FodFilter/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodFilter</code> este o component\u0103 generic\u0103 pentru filtrarea datelor \u00een tabele. Ofer\u0103 o interfa\u021b\u0103 de filtrare extensibil\u0103 cu suport pentru salvarea st\u0103rii \u00een sesiune, resetare \u0219i op\u021bional printare.</p> <p>Caracteristici principale: - Component\u0103 generic\u0103 pentru orice tip de model de filtrare - Salvare automat\u0103 a st\u0103rii filtrelor \u00een sesiune - UI colapsabil pentru economisirea spa\u021biului - Butoane pentru aplicare, resetare \u0219i printare - Integrare cu context de tabel pentru filtrare - Suport pentru cascading values - Memorare filtru original pentru resetare</p>"},{"location":"fod/componente/FodFilter/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodFilter/#filtru-simplu-pentru-tabel","title":"Filtru simplu pentru tabel","text":"<pre><code>&lt;FodFilter FilterT=\"ProductFilter\" TableId=\"products-table\"&gt;\n    &lt;FodInput Label=\"Nume produs\" @bind-Value=\"context.Name\" /&gt;\n    &lt;FodInput Label=\"Cod\" @bind-Value=\"context.Code\" /&gt;\n&lt;/FodFilter&gt;\n\n&lt;FodFilteredTable T=\"Product\" FilterT=\"ProductFilter\" \n                  Id=\"products-table\"\n                  Items=\"@products\"&gt;\n    &lt;!-- Coloane tabel --&gt;\n&lt;/FodFilteredTable&gt;\n\n@code {\n    public class ProductFilter\n    {\n        public string Name { get; set; }\n        public string Code { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#filtru-cu-salvare-in-sesiune","title":"Filtru cu salvare \u00een sesiune","text":"<pre><code>&lt;FodFilter FilterT=\"OrderFilter\" \n           TableId=\"orders-table\"\n           ToSaveInSesion=\"true\"\n           ShowPrintTable=\"true\"&gt;\n    &lt;FodDatePicker Label=\"De la data\" @bind-Value=\"context.StartDate\" /&gt;\n    &lt;FodDatePicker Label=\"P\u00e2n\u0103 la data\" @bind-Value=\"context.EndDate\" /&gt;\n    &lt;FodSelect T=\"OrderStatus\" Label=\"Status\" @bind-Value=\"context.Status\"&gt;\n        @foreach (var status in Enum.GetValues&lt;OrderStatus&gt;())\n        {\n            &lt;FodSelectItem Value=\"@status\"&gt;@status&lt;/FodSelectItem&gt;\n        }\n    &lt;/FodSelect&gt;\n&lt;/FodFilter&gt;\n</code></pre>"},{"location":"fod/componente/FodFilter/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>FilterT</code> <code>Type</code> Tipul generic al modelului de filtrare - <code>ChildContent</code> <code>RenderFragment&lt;FilterT&gt;</code> Con\u021binutul filtrului (c\u00e2mpuri) - <code>OnFilterTable</code> <code>EventCallback&lt;DataRequest&lt;FilterT&gt;&gt;</code> Eveniment la aplicare filtru - <code>ShowPrintTable</code> <code>bool</code> Afi\u0219eaz\u0103 butonul de printare <code>false</code> <code>ToSaveInSesion</code> <code>bool</code> Salveaz\u0103 starea \u00een sesiune <code>false</code> <code>ShowFilter</code> <code>bool</code> Afi\u0219eaz\u0103 header-ul filtrului <code>true</code> <code>TableId</code> <code>string</code> ID unic pentru identificare tabel - <code>Filter</code> <code>FilterT</code> Instan\u021ba modelului de filtrare <code>new FilterT()</code>"},{"location":"fod/componente/FodFilter/#4-context-si-integrare","title":"4. Context \u0219i Integrare","text":"<p>Componenta necesit\u0103 un <code>IFilterTableContext&lt;FilterT&gt;</code> furnizat prin CascadingParameter de la tabelul p\u0103rinte.</p>"},{"location":"fod/componente/FodFilter/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodFilter/#filtru-complex-cu-validare","title":"Filtru complex cu validare","text":"<pre><code>&lt;FodFilter FilterT=\"AdvancedFilter\" \n           TableId=\"advanced-table\"\n           ToSaveInSesion=\"true\"\n           OnFilterTable=\"HandleFilterApplied\"&gt;\n    &lt;div class=\"col-md-4\"&gt;\n        &lt;FodInput Label=\"C\u0103utare\" @bind-Value=\"context.SearchTerm\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-4\"&gt;\n        &lt;FodInputNumber Label=\"Pre\u021b minim\" @bind-Value=\"context.MinPrice\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-4\"&gt;\n        &lt;FodInputNumber Label=\"Pre\u021b maxim\" @bind-Value=\"context.MaxPrice\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-6\"&gt;\n        &lt;FodGroupSelect T=\"string\" Label=\"Categorii\" \n                        @bind-Value=\"context.CategoryId\"\n                        Items=\"@categories\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-6\"&gt;\n        &lt;FodCheckbox Label=\"Doar \u00een stoc\" @bind-Value=\"context.InStockOnly\" /&gt;\n    &lt;/div&gt;\n&lt;/FodFilter&gt;\n\n@code {\n    public class AdvancedFilter\n    {\n        public string SearchTerm { get; set; }\n        public decimal? MinPrice { get; set; }\n        public decimal? MaxPrice { get; set; }\n        public string CategoryId { get; set; }\n        public bool InStockOnly { get; set; }\n\n        public bool IsValid()\n        {\n            if (MinPrice.HasValue &amp;&amp; MaxPrice.HasValue)\n                return MinPrice.Value &lt;= MaxPrice.Value;\n            return true;\n        }\n    }\n\n    private async Task HandleFilterApplied(DataRequest&lt;AdvancedFilter&gt; request)\n    {\n        if (!request.Filter.IsValid())\n        {\n            await NotificationService.ShowError(\"Interval de pre\u021b invalid!\");\n            return;\n        }\n\n        // Procesare filtru\n        await LoadFilteredData(request);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#filtru-cu-preset-uri","title":"Filtru cu preset-uri","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;div class=\"mb-3\"&gt;\n            &lt;FodButtonGroup&gt;\n                &lt;FodButton OnClick=\"() =&gt; ApplyPreset('today')\"&gt;Ast\u0103zi&lt;/FodButton&gt;\n                &lt;FodButton OnClick=\"() =&gt; ApplyPreset('week')\"&gt;S\u0103pt\u0103m\u00e2na aceasta&lt;/FodButton&gt;\n                &lt;FodButton OnClick=\"() =&gt; ApplyPreset('month')\"&gt;Luna aceasta&lt;/FodButton&gt;\n            &lt;/FodButtonGroup&gt;\n        &lt;/div&gt;\n\n        &lt;FodFilter @ref=\"filterComponent\"\n                   FilterT=\"DateRangeFilter\" \n                   TableId=\"reports-table\"\n                   Filter=\"@dateFilter\"&gt;\n            &lt;div class=\"col-md-6\"&gt;\n                &lt;FodDatePicker Label=\"Data \u00eenceput\" @bind-Value=\"context.StartDate\" /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"col-md-6\"&gt;\n                &lt;FodDatePicker Label=\"Data sf\u00e2r\u0219it\" @bind-Value=\"context.EndDate\" /&gt;\n            &lt;/div&gt;\n        &lt;/FodFilter&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private FodFilter&lt;DateRangeFilter&gt; filterComponent;\n    private DateRangeFilter dateFilter = new();\n\n    private void ApplyPreset(string preset)\n    {\n        var today = DateTime.Today;\n\n        switch (preset)\n        {\n            case \"today\":\n                dateFilter.StartDate = today;\n                dateFilter.EndDate = today;\n                break;\n            case \"week\":\n                dateFilter.StartDate = today.AddDays(-(int)today.DayOfWeek);\n                dateFilter.EndDate = today.AddDays(6 - (int)today.DayOfWeek);\n                break;\n            case \"month\":\n                dateFilter.StartDate = new DateTime(today.Year, today.Month, 1);\n                dateFilter.EndDate = dateFilter.StartDate.Value\n                    .AddMonths(1).AddDays(-1);\n                break;\n        }\n\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#filtru-dinamic-bazat-pe-permisiuni","title":"Filtru dinamic bazat pe permisiuni","text":"<pre><code>&lt;FodFilter FilterT=\"UserBasedFilter\" \n           TableId=\"data-table\"\n           ShowPrintTable=\"@userCanPrint\"&gt;\n    @if (userCanSeeAllData)\n    {\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodSelect T=\"string\" Label=\"Departament\" \n                       @bind-Value=\"context.DepartmentId\"&gt;\n                @foreach (var dept in departments)\n                {\n                    &lt;FodSelectItem Value=\"@dept.Id\"&gt;@dept.Name&lt;/FodSelectItem&gt;\n                }\n            &lt;/FodSelect&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;div class=\"col-md-4\"&gt;\n        &lt;FodInput Label=\"Num\u0103r document\" @bind-Value=\"context.DocumentNumber\" /&gt;\n    &lt;/div&gt;\n\n    @if (userHasAdvancedFilters)\n    {\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodSelect T=\"DocumentStatus\" Label=\"Status\" \n                       @bind-Value=\"context.Status\"&gt;\n                &lt;!-- Op\u021biuni status --&gt;\n            &lt;/FodSelect&gt;\n        &lt;/div&gt;\n    }\n&lt;/FodFilter&gt;\n\n@code {\n    [CascadingParameter] private Task&lt;AuthenticationState&gt; AuthState { get; set; }\n\n    private bool userCanPrint;\n    private bool userCanSeeAllData;\n    private bool userHasAdvancedFilters;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var authState = await AuthState;\n        var user = authState.User;\n\n        userCanPrint = user.HasClaim(\"permission\", \"print\");\n        userCanSeeAllData = user.HasClaim(\"permission\", \"view-all\");\n        userHasAdvancedFilters = user.HasClaim(\"permission\", \"advanced-filters\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#6-stilizare-css","title":"6. Stilizare CSS","text":"<pre><code>/* Card filter styling */\n.fod-filter .card {\n    margin-bottom: 1rem;\n    border: 1px solid var(--fod-palette-divider);\n}\n\n.fod-filter .card-header {\n    background-color: var(--fod-palette-background-paper);\n    border-bottom: 1px solid var(--fod-palette-divider);\n    padding: 0.75rem 1rem;\n}\n\n.fod-filter .btn-link {\n    text-decoration: none;\n    color: var(--fod-palette-text-primary);\n    font-weight: 500;\n}\n\n.fod-filter .btn-link:hover {\n    color: var(--fod-palette-primary-main);\n}\n\n/* Filter body */\n.fod-filter .card-body {\n    padding: 1.5rem;\n    background-color: var(--fod-palette-grey-50);\n}\n\n/* Filter footer */\n.fod-filter .card-footer {\n    background-color: var(--fod-palette-background-paper);\n    border-top: 1px solid var(--fod-palette-divider);\n    padding: 1rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n    .fod-filter .card-footer .text-md-end {\n        margin-top: 0.5rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#7-integrare-cu-servicii","title":"7. Integrare cu Servicii","text":""},{"location":"fod/componente/FodFilter/#salvare-preferinte-utilizator","title":"Salvare preferin\u021be utilizator","text":"<pre><code>public class UserFilterPreferencesService\n{\n    private readonly ILocalStorageService _localStorage;\n\n    public async Task SaveFilterPreset&lt;T&gt;(string tableId, string presetName, T filter)\n    {\n        var key = $\"filter-preset-{tableId}-{presetName}\";\n        await _localStorage.SetItemAsync(key, filter);\n    }\n\n    public async Task&lt;T&gt; LoadFilterPreset&lt;T&gt;(string tableId, string presetName) \n        where T : new()\n    {\n        var key = $\"filter-preset-{tableId}-{presetName}\";\n        return await _localStorage.GetItemAsync&lt;T&gt;(key) ?? new T();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#8-javascript-interop","title":"8. JavaScript Interop","text":"<p>Componenta folose\u0219te JavaScript pentru salvarea \u00een sesiune:</p> <pre><code>window.tableDataRequest = {\n    get: function(tableId) {\n        const key = `table-filter-${tableId}`;\n        const data = sessionStorage.getItem(key);\n        return data ? JSON.parse(data) : null;\n    },\n\n    set: function(dataRequest, tableId) {\n        const key = `table-filter-${tableId}`;\n        sessionStorage.setItem(key, JSON.stringify(dataRequest));\n    }\n};\n</code></pre>"},{"location":"fod/componente/FodFilter/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Model de filtrare simplu - P\u0103stra\u021bi modelul c\u00e2t mai simplu</li> <li>Validare - Valida\u021bi filtrele \u00eenainte de aplicare</li> <li>Preset-uri - Oferi\u021bi filtre predefinite pentru cazuri comune</li> <li>Performan\u021b\u0103 - Debounce pentru filtre text</li> <li>Feedback - Indica\u021bi c\u00e2nd filtrul este activ</li> <li>Resetare clar\u0103 - Asigura\u021bi resetarea complet\u0103</li> </ol>"},{"location":"fod/componente/FodFilter/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi <code>ToSaveInSesion</code> cu modera\u021bie</li> <li>Implementa\u021bi debouncing pentru input-uri text</li> <li>Cache-ui\u021bi rezultatele filtr\u0103rii c\u00e2nd e posibil</li> <li>Evita\u021bi filtre complexe pe seturi mari de date</li> </ul>"},{"location":"fod/componente/FodFilter/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodFilter/#filtrul-nu-se-aplica","title":"Filtrul nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 TableContext este furnizat</li> <li>Verifica\u021bi c\u0103 TableId este unic</li> <li>Verifica\u021bi c\u0103 modelul de filtrare are constructor implicit</li> </ul>"},{"location":"fod/componente/FodFilter/#resetarea-nu-functioneaza","title":"Resetarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 propriet\u0103\u021bile sunt copiabile</li> <li>Evita\u021bi referin\u021be complexe \u00een modelul de filtrare</li> <li>Folosi\u021bi tipuri simple sau ICloneable</li> </ul>"},{"location":"fod/componente/FodFilter/#12-exemplu-complet","title":"12. Exemplu Complet","text":"<pre><code>@page \"/products\"\n\n&lt;h3&gt;Produse&lt;/h3&gt;\n\n&lt;FodFilter FilterT=\"ProductFilter\" \n           TableId=\"products-main\"\n           ToSaveInSesion=\"true\"\n           ShowPrintTable=\"true\"\n           OnFilterTable=\"@HandlePrint\"&gt;\n    &lt;div class=\"col-md-3\"&gt;\n        &lt;FodInput Label=\"Nume\" @bind-Value=\"context.Name\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-3\"&gt;\n        &lt;FodSelect T=\"string\" Label=\"Categorie\" @bind-Value=\"context.CategoryId\"&gt;\n            &lt;FodSelectItem Value=\"\"&gt;Toate&lt;/FodSelectItem&gt;\n            @foreach (var cat in categories)\n            {\n                &lt;FodSelectItem Value=\"@cat.Id\"&gt;@cat.Name&lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-3\"&gt;\n        &lt;FodInputNumber Label=\"Pre\u021b max\" @bind-Value=\"context.MaxPrice\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-md-3\"&gt;\n        &lt;FodCheckbox Label=\"\u00cen stoc\" @bind-Value=\"context.InStock\" /&gt;\n    &lt;/div&gt;\n&lt;/FodFilter&gt;\n\n&lt;FodFilteredTable T=\"Product\" \n                  FilterT=\"ProductFilter\"\n                  Id=\"products-main\"\n                  Items=\"@products\"\n                  ServerSide=\"true\"\n                  OnLoadData=\"@LoadProducts\"&gt;\n    &lt;FodColumn Title=\"Nume\" Field=\"@(p =&gt; p.Name)\" /&gt;\n    &lt;FodColumn Title=\"Categorie\" Field=\"@(p =&gt; p.Category)\" /&gt;\n    &lt;FodColumn Title=\"Pre\u021b\" Field=\"@(p =&gt; p.Price)\" Format=\"C\" /&gt;\n    &lt;FodColumn Title=\"Stoc\" Field=\"@(p =&gt; p.Stock)\" /&gt;\n&lt;/FodFilteredTable&gt;\n\n@code {\n    private List&lt;Product&gt; products = new();\n    private List&lt;Category&gt; categories = new();\n\n    public class ProductFilter\n    {\n        public string Name { get; set; }\n        public string CategoryId { get; set; }\n        public decimal? MaxPrice { get; set; }\n        public bool InStock { get; set; }\n    }\n\n    private async Task LoadProducts(DataRequest&lt;ProductFilter&gt; request)\n    {\n        products = await ProductService.GetFilteredProducts(request);\n    }\n\n    private async Task HandlePrint(DataRequest&lt;ProductFilter&gt; request)\n    {\n        await PrintService.PrintFilteredTable(\"products\", request);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodFilter/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodFilter</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru filtrarea datelor \u00een tabele. Cu suport pentru salvare \u00een sesiune, resetare \u0219i o interfa\u021b\u0103 intuitiv\u0103, componenta simplific\u0103 implementarea filtrelor complexe men\u021bin\u00e2nd performan\u021ba \u0219i experien\u021ba utilizatorului la un nivel optim.</p>"},{"location":"fod/componente/FodFooter/","title":"Footer","text":"<p>Documenta\u021bie Componente Blazor \u2013 <code>FODFooter</code> &amp; <code>FodFooterColumnLink</code></p>"},{"location":"fod/componente/FodFooter/#1-fodfooter","title":"1. FODFooter","text":""},{"location":"fod/componente/FodFooter/#descriere","title":"Descriere","text":"<p><code>FODFooter</code> este o component\u0103 Blazor care afi\u0219eaz\u0103 un footer configurabil pentru aplica\u021biile FOD. Aceasta permite personalizarea cu numele organiza\u021biei, linkuri c\u0103tre re\u021bele sociale, numere de telefon \u0219i alte informa\u021bii utile.</p>"},{"location":"fod/componente/FodFooter/#proprietati","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere Implicit organizationName <code>string</code> Numele organiza\u021biei afi\u0219at \u00een footer. \"Guvernul Republicii Moldova\" Facebook <code>string</code> URL c\u0103tre pagina de Facebook. <code>null</code> OrganizationLink <code>string</code> URL c\u0103tre pagina oficial\u0103 a organiza\u021biei. <code>null</code> Twitter <code>string</code> URL c\u0103tre profilul Twitter. <code>null</code> LinkedIn <code>string</code> URL c\u0103tre profilul LinkedIn. <code>null</code> Instagram <code>string</code> URL c\u0103tre profilul Instagram. <code>null</code> phoneNumber <code>string</code> Num\u0103rul de telefon principal. \"022 820 000\" technicalPhoneNumber <code>string?</code> Num\u0103rul de telefon pentru suport tehnic. <code>null</code> Email <code>string</code> Adresa de email de contact. <code>null</code> copyright <code>string</code> Textul de copyright afi\u0219at \u00een footer. \"\u00a9 Copyright. Agen\u021bia de Guvernare Electronic\u0103 {Anul curent}\" Logo <code>string</code> URL-ul logo-ului afi\u0219at \u00een footer. <code>null</code> isCompact <code>bool</code> Activeaz\u0103 modul compact pentru containerul footerului. <code>false</code> IsContainered <code>bool</code> Specific\u0103 dac\u0103 footerul este limitat la max-width 1600px. <code>false</code> PhoneNumbers <code>IEnumerable&lt;string&gt;</code> List\u0103 de numere de telefon afi\u0219ate \u00een footer. <code>null</code> ChildContent <code>RenderFragment</code> Con\u021binut personalizat afi\u0219at \u00een footer. <code>null</code> FooterFirstColumnChildContent <code>RenderFragment</code> Con\u021binut specific pentru prima coloan\u0103 a footerului. <code>null</code>"},{"location":"fod/componente/FodFooter/#metode","title":"Metode","text":"Nume Descriere <code>AddColumn(FodFooterColumnLink columnLink)</code> Adaug\u0103 un obiect de tip <code>FodFooterColumnLink</code> \u00een lista de coloane din footer."},{"location":"fod/componente/FodFooter/#2-fodfootercolumnlink","title":"2. FodFooterColumnLink","text":""},{"location":"fod/componente/FodFooter/#descriere_1","title":"Descriere","text":"<p><code>FodFooterColumnLink</code> este o component\u0103 utilizat\u0103 pentru a defini coloane de linkuri afi\u0219ate \u00een footer.</p>"},{"location":"fod/componente/FodFooter/#proprietati_1","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere Parent <code>FODFooter</code> Referin\u021b\u0103 la componenta p\u0103rinte <code>FODFooter</code>. Name <code>string</code> Numele coloanei afi\u0219at \u00een footer. Links <code>Dictionary&lt;string, string&gt;</code> Dic\u021bionar care con\u021bine linkuri (text -&gt; URL). ChildContent <code>RenderFragment</code> Con\u021binut personalizat afi\u0219at \u00een coloan\u0103."},{"location":"fod/componente/FodFooter/#3-exemplu-de-utilizare","title":"3. Exemplu de utilizare","text":"<pre><code>&lt;FODFooter Facebook=\"facebook.com\" LinkedIn=\"LinkedIn\" phoneNumber=\"025006569\" \n           PhoneNumbers=\"@(new string[]{ \"Test 2002000\", \"another test 200020000 2000\" })\" \n           Email=\"suport.fod@egov.md\" OrganizationLink=\"https://gov.md/\" \n           technicalPhoneNumber=\"034345151\"&gt;\n\n    &lt;FodFooterColumnLink&gt;\n        &lt;div class=\"col links-group pl-0\"&gt;\n            &lt;h4 class=\"group-title\"&gt;First Column Name&lt;/h4&gt;\n            &lt;ul&gt;\n                &lt;li&gt;\n                    &lt;a href=\"Facebook.com\"&gt;Pagina de Facebook&lt;/a&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/FodFooterColumnLink&gt;\n\n    &lt;FodFooterColumnLink&gt;\n        &lt;div class=\"col links-group pl-0\"&gt;\n            &lt;h4 class=\"group-title\"&gt;Second Column Name&lt;/h4&gt;\n            &lt;ul&gt;\n                &lt;li&gt;\n                    &lt;a href=\"Facebook.com\"&gt;Pagina de Facebook&lt;/a&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/FodFooterColumnLink&gt;\n\n    &lt;FodFooterColumnLink&gt;\n        &lt;div class=\"col links-group pl-0\"&gt;\n            &lt;h4 class=\"group-title\"&gt;Third Column Name&lt;/h4&gt;\n            &lt;ul&gt;\n                &lt;li&gt;\n                    &lt;a href=\"Facebook.com\"&gt;Pagina de Facebook&lt;/a&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/FodFooterColumnLink&gt;\n\n&lt;/FODFooter&gt;\n</code></pre>"},{"location":"fod/componente/FodFooter/#explicatie","title":"Explica\u021bie","text":"<ul> <li><code>FODFooter</code> include diverse informa\u021bii despre organiza\u021bie, linkuri sociale \u0219i contacte.  </li> <li><code>FodFooterColumnLink</code> sunt utilizate pentru a structura footer-ul \u00een mai multe coloane.  </li> <li>Fiecare coloan\u0103 con\u021bine un titlu (<code>h4</code>) \u0219i o list\u0103 de linkuri (<code>ul &gt; li &gt; a</code>).</li> </ul>"},{"location":"fod/componente/FodGrid/","title":"Grid","text":""},{"location":"fod/componente/FodGrid/#documentatie-pentru-componentele-fodgrid-si-foditem","title":"Documenta\u021bie pentru componentele FodGrid \u0219i FodItem","text":""},{"location":"fod/componente/FodGrid/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodGrid</code> \u0219i <code>FodItem</code> formeaz\u0103 un sistem de layout responsive bazat pe CSS Grid \u0219i Flexbox. Acest sistem permite crearea de layout-uri complexe care se adapteaz\u0103 automat la diferite dimensiuni de ecran.</p> <p>Sistemul suport\u0103: - Grid cu 12 coloane - Breakpoint-uri responsive (xs, sm, md, lg, xl) - Spacing flexibil \u00eentre elemente - Aliniament orizontal \u0219i vertical - Ordine personalizabil\u0103 a elementelor - Suport pentru offset \u0219i dimensiuni fixe</p>"},{"location":"fod/componente/FodGrid/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodGrid/#grid-de-baza","title":"Grid de baz\u0103","text":"<pre><code>&lt;FodGrid&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Coloan\u0103 1&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Coloan\u0103 2&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Coloan\u0103 3&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#grid-cu-spacing-personalizat","title":"Grid cu spacing personalizat","text":"<pre><code>&lt;!-- Spacing uniform --&gt;\n&lt;FodGrid Spacing=\"3\"&gt;\n    &lt;FodItem xs=\"6\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Element 1&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"6\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Element 2&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n\n&lt;!-- Spacing diferit pe axe --&gt;\n&lt;FodGrid SpacingX=\"4\" SpacingY=\"2\"&gt;\n    &lt;FodItem xs=\"6\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Element 1&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"6\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Element 2&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#layout-responsive-complet","title":"Layout responsive complet","text":"<pre><code>&lt;FodGrid&gt;\n    &lt;!-- Full width pe mobile, jum\u0103tate pe tablet\u0103, un sfert pe desktop --&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\" lg=\"3\" xl=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;Card 1&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n\n    &lt;!-- Dimensiuni diferite per breakpoint --&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\" lg=\"3\" xl=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;Card 2&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n\n    &lt;!-- Element care ocup\u0103 mai mult spa\u021biu pe desktop --&gt;\n    &lt;FodItem xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText&gt;Card mare&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#grid-cu-aliniament","title":"Grid cu aliniament","text":"<pre><code>&lt;!-- Aliniament orizontal --&gt;\n&lt;FodGrid Justify=\"FodJustify.Center\"&gt;\n    &lt;FodItem xs=\"3\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Centrat&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n\n&lt;!-- Aliniament vertical --&gt;\n&lt;FodGrid AlignItems=\"FodAlignItems.Center\" Style=\"height: 200px;\"&gt;\n    &lt;FodItem xs=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Aliniat vertical&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n\n&lt;!-- Distribu\u021bie spa\u021biu --&gt;\n&lt;FodGrid Justify=\"FodJustify.SpaceBetween\"&gt;\n    &lt;FodItem xs=\"3\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;St\u00e2nga&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"3\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Dreapta&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#grid-cu-offset","title":"Grid cu offset","text":"<pre><code>&lt;FodGrid&gt;\n    &lt;!-- Element cu offset --&gt;\n    &lt;FodItem xs=\"6\" xsOffset=\"3\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Centrat cu offset&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n\n    &lt;!-- Offset responsive --&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" smOffset=\"3\" md=\"4\" mdOffset=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;Offset responsive&lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#formular-cu-grid","title":"Formular cu Grid","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;FodGrid Spacing=\"3\"&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputText Label=\"Nume\" @bind-Value=\"model.FirstName\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputText Label=\"Prenume\" @bind-Value=\"model.LastName\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\"&gt;\n            &lt;FODInputText Label=\"Email\" @bind-Value=\"model.Email\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputText Label=\"Telefon\" @bind-Value=\"model.Phone\" /&gt;\n        &lt;/FodItem&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FODInputSelect Label=\"\u021aar\u0103\" @bind-Value=\"model.Country\"&gt;\n                &lt;option value=\"\"&gt;Selecta\u021bi...&lt;/option&gt;\n                &lt;option value=\"MD\"&gt;Moldova&lt;/option&gt;\n                &lt;option value=\"RO\"&gt;Rom\u00e2nia&lt;/option&gt;\n            &lt;/FODInputSelect&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodGrid&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#grid-imbricat","title":"Grid imbricat","text":"<pre><code>&lt;FodGrid Spacing=\"2\"&gt;\n    &lt;FodItem xs=\"12\" md=\"8\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Con\u021binut principal&lt;/FodText&gt;\n            &lt;!-- Grid imbricat --&gt;\n            &lt;FodGrid Spacing=\"2\" Class=\"mt-3\"&gt;\n                &lt;FodItem xs=\"6\"&gt;\n                    &lt;FodPaper Class=\"pa-2\"&gt;Sub-element 1&lt;/FodPaper&gt;\n                &lt;/FodItem&gt;\n                &lt;FodItem xs=\"6\"&gt;\n                    &lt;FodPaper Class=\"pa-2\"&gt;Sub-element 2&lt;/FodPaper&gt;\n                &lt;/FodItem&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" md=\"4\"&gt;\n        &lt;FodPaper Class=\"pa-3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Sidebar&lt;/FodText&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#grid-pentru-dashboard","title":"Grid pentru dashboard","text":"<pre><code>&lt;FodGrid Spacing=\"3\"&gt;\n    &lt;!-- Statistici --&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Primary\"&gt;1,234&lt;/FodText&gt;\n                &lt;FodText&gt;Total utilizatori&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Success\"&gt;567&lt;/FodText&gt;\n                &lt;FodText&gt;Activi azi&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Warning\"&gt;89&lt;/FodText&gt;\n                &lt;FodText&gt;\u00cen a\u0219teptare&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Error\"&gt;12&lt;/FodText&gt;\n                &lt;FodText&gt;Erori&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n\n    &lt;!-- Grafic principal --&gt;\n    &lt;FodItem xs=\"12\" md=\"8\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;Grafic activitate&lt;/FodText&gt;\n                &lt;!-- Con\u021binut grafic --&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n\n    &lt;!-- Lista lateral\u0103 --&gt;\n    &lt;FodItem xs=\"12\" md=\"4\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;Activitate recent\u0103&lt;/FodText&gt;\n                &lt;!-- List\u0103 activit\u0103\u021bi --&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#atribute-disponibile-fodgrid","title":"Atribute disponibile - FodGrid","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Spacing</code> <code>int</code> Spa\u021biu uniform \u00eentre elemente (0-10) <code>0</code> <code>SpacingX</code> <code>int</code> Spa\u021biu orizontal \u00eentre elemente <code>Spacing</code> <code>SpacingY</code> <code>int</code> Spa\u021biu vertical \u00eentre elemente <code>Spacing</code> <code>Justify</code> <code>FodJustify</code> Aliniament orizontal <code>FodJustify.FlexStart</code> <code>AlignItems</code> <code>FodAlignItems</code> Aliniament vertical <code>FodAlignItems.Stretch</code> <code>AlignContent</code> <code>FodAlignContent</code> Aliniament con\u021binut multiplu <code>FodAlignContent.Stretch</code> <code>ChildContent</code> <code>RenderFragment</code> Elementele FodItem - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri CSS inline <code>null</code>"},{"location":"fod/componente/FodGrid/#atribute-disponibile-foditem","title":"Atribute disponibile - FodItem","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>xs</code> <code>int?</code> Coloane pe extra small (0-12 sau auto) <code>null</code> <code>sm</code> <code>int?</code> Coloane pe small <code>null</code> <code>md</code> <code>int?</code> Coloane pe medium <code>null</code> <code>lg</code> <code>int?</code> Coloane pe large <code>null</code> <code>xl</code> <code>int?</code> Coloane pe extra large <code>null</code> <code>xsOffset</code> <code>int?</code> Offset pe extra small <code>null</code> <code>smOffset</code> <code>int?</code> Offset pe small <code>null</code> <code>mdOffset</code> <code>int?</code> Offset pe medium <code>null</code> <code>lgOffset</code> <code>int?</code> Offset pe large <code>null</code> <code>xlOffset</code> <code>int?</code> Offset pe extra large <code>null</code> <code>Order</code> <code>int?</code> Ordine flex <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul elementului -"},{"location":"fod/componente/FodGrid/#3-breakpoint-uri","title":"3. Breakpoint-uri","text":"Breakpoint Prefix Dimensiune minim\u0103 Extra small xs 0px Small sm 600px Medium md 960px Large lg 1280px Extra large xl 1920px"},{"location":"fod/componente/FodGrid/#4-valori-pentru-aliniament","title":"4. Valori pentru aliniament","text":""},{"location":"fod/componente/FodGrid/#fodjustify","title":"FodJustify","text":"<ul> <li><code>FlexStart</code> - Aliniere la \u00eenceput</li> <li><code>Center</code> - Centrare</li> <li><code>FlexEnd</code> - Aliniere la sf\u00e2r\u0219it</li> <li><code>SpaceBetween</code> - Spa\u021biu \u00eentre elemente</li> <li><code>SpaceAround</code> - Spa\u021biu \u00een jurul elementelor</li> <li><code>SpaceEvenly</code> - Spa\u021biu egal</li> </ul>"},{"location":"fod/componente/FodGrid/#fodalignitems","title":"FodAlignItems","text":"<ul> <li><code>FlexStart</code> - Aliniere sus</li> <li><code>Center</code> - Centrare vertical\u0103</li> <li><code>FlexEnd</code> - Aliniere jos</li> <li><code>Stretch</code> - \u00centindere pe \u00een\u0103l\u021bime</li> <li><code>Baseline</code> - Aliniere la baseline</li> </ul>"},{"location":"fod/componente/FodGrid/#5-pattern-uri-comune","title":"5. Pattern-uri comune","text":""},{"location":"fod/componente/FodGrid/#layout-2-coloane","title":"Layout 2 coloane","text":"<pre><code>&lt;FodGrid Spacing=\"3\"&gt;\n    &lt;FodItem xs=\"12\" md=\"8\"&gt;\n        &lt;!-- Con\u021binut principal --&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" md=\"4\"&gt;\n        &lt;!-- Sidebar --&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#layout-3-coloane-egale","title":"Layout 3 coloane egale","text":"<pre><code>&lt;FodGrid Spacing=\"2\"&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;!-- Coloan\u0103 1 --&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;!-- Coloan\u0103 2 --&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" sm=\"4\"&gt;\n        &lt;!-- Coloan\u0103 3 --&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#layout-asimetric","title":"Layout asimetric","text":"<pre><code>&lt;FodGrid Spacing=\"3\"&gt;\n    &lt;FodItem xs=\"12\" md=\"3\"&gt;\n        &lt;!-- Sidebar st\u00e2nga --&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" md=\"6\"&gt;\n        &lt;!-- Con\u021binut principal --&gt;\n    &lt;/FodItem&gt;\n    &lt;FodItem xs=\"12\" md=\"3\"&gt;\n        &lt;!-- Sidebar dreapta --&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#6-note-si-observatii","title":"6. Note \u0219i observa\u021bii","text":"<ul> <li>Sistemul folose\u0219te 12 coloane ca baz\u0103</li> <li>Valorile pentru dimensiuni trebuie s\u0103 fie \u00eentre 1-12</li> <li><code>auto</code> poate fi folosit pentru dimensiuni care se ajusteaz\u0103 la con\u021binut</li> <li>Spacing-ul se aplic\u0103 ca padding la FodItem \u0219i margin negativ la FodGrid</li> <li>Offset-urile mut\u0103 elementul spre dreapta cu num\u0103rul specificat de coloane</li> </ul>"},{"location":"fod/componente/FodGrid/#7-bune-practici","title":"7. Bune practici","text":"<ol> <li>Mobile-first - \u00cencepe\u021bi cu layout pentru mobile (xs) \u0219i ad\u0103uga\u021bi pentru ecrane mai mari</li> <li>Testa\u021bi responsive - Verifica\u021bi layout-ul pe toate dimensiunile de ecran</li> <li>Evita\u021bi imbricarea excesiv\u0103 - Limita\u021bi grid-urile imbricate la 2-3 nivele</li> <li>Spacing consistent - Folosi\u021bi valori de spacing consistente \u00een aplica\u021bie</li> <li>Semantic\u0103 - Folosi\u021bi Grid pentru layout, nu pentru spacing simplu</li> <li>Performance - Pentru liste mari, considera\u021bi virtualizare</li> </ol>"},{"location":"fod/componente/FodGrid/#8-troubleshooting","title":"8. Troubleshooting","text":""},{"location":"fod/componente/FodGrid/#elementele-nu-se-aliniaza-corect","title":"Elementele nu se aliniaz\u0103 corect","text":"<pre><code>&lt;!-- Verifica\u021bi c\u0103 suma coloanelor = 12 --&gt;\n&lt;FodGrid&gt;\n    &lt;FodItem xs=\"6\"&gt;...&lt;/FodItem&gt;\n    &lt;FodItem xs=\"6\"&gt;...&lt;/FodItem&gt; &lt;!-- Total: 12 \u2713 --&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#spacing-inconsistent","title":"Spacing inconsistent","text":"<pre><code>&lt;!-- Folosi\u021bi spacing uniform sau specifica\u021bi X \u0219i Y separat --&gt;\n&lt;FodGrid SpacingX=\"3\" SpacingY=\"2\"&gt;\n    &lt;!-- Con\u021binut --&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodGrid/#9-concluzie","title":"9. Concluzie","text":"<p><code>FodGrid</code> \u0219i <code>FodItem</code> ofer\u0103 un sistem puternic \u0219i flexibil pentru crearea de layout-uri responsive \u00een aplica\u021biile Blazor, cu control granular asupra pozi\u021bion\u0103rii \u0219i spacing-ului elementelor pe diferite dimensiuni de ecran.</p>"},{"location":"fod/componente/FodGroupSelect/","title":"Group Select","text":""},{"location":"fod/componente/FodGroupSelect/#documentatie-pentru-componentele-fodgroupselect","title":"Documenta\u021bie pentru componentele FodGroupSelect","text":"<p>Biblioteca FOD ofer\u0103 trei componente pentru select-uri cu grupare: - <code>FodGroupSelect</code> - Select standard cu grupuri de op\u021biuni - <code>FodCustomGroupSelect</code> - Select stilizat cu grupuri - <code>FodCustomMultipleGroupSelect</code> - Select stilizat cu selec\u021bie multipl\u0103</p>"},{"location":"fod/componente/FodGroupSelect/#1-fodgroupselect","title":"1. FodGroupSelect","text":""},{"location":"fod/componente/FodGroupSelect/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodGroupSelect</code> este o component\u0103 dropdown care permite organizarea op\u021biunilor \u00een grupuri logice folosind elementul HTML nativ <code>&lt;optgroup&gt;</code>. Este ideal\u0103 pentru liste lungi de op\u021biuni care pot fi categorizate.</p> <p>Caracteristici principale: - Grupare nativ\u0103 cu <code>&lt;optgroup&gt;</code> - Suport pentru tipuri generice - Op\u021biune implicit\u0103 configurabil\u0103 - Validare integrat\u0103 - Two-way data binding - Localizare automat\u0103 - Accesibilitate complet\u0103</p>"},{"location":"fod/componente/FodGroupSelect/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodGroupSelect/#select-grupat-de-baza","title":"Select grupat de baz\u0103","text":"<pre><code>&lt;FodGroupSelect T=\"City\" \n                @bind-Value=\"selectedCity\"\n                Source=\"@cityGroups\" /&gt;\n\n@code {\n    private City? selectedCity;\n    private List&lt;SelectItemGroup&gt; cityGroups = new();\n\n    public class City : ISelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public string County { get; set; }\n    }\n\n    protected override void OnInitialized()\n    {\n        cityGroups = new List&lt;SelectItemGroup&gt;\n        {\n            new SelectItemGroup\n            {\n                Label = \"Bucure\u0219ti\",\n                Members = new List&lt;City&gt;\n                {\n                    new() { Value = \"sector1\", Label = \"Sector 1\" },\n                    new() { Value = \"sector2\", Label = \"Sector 2\" },\n                    new() { Value = \"sector3\", Label = \"Sector 3\" }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Transilvania\",\n                Members = new List&lt;City&gt;\n                {\n                    new() { Value = \"cluj\", Label = \"Cluj-Napoca\" },\n                    new() { Value = \"brasov\", Label = \"Bra\u0219ov\" },\n                    new() { Value = \"sibiu\", Label = \"Sibiu\" }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Moldova\",\n                Members = new List&lt;City&gt;\n                {\n                    new() { Value = \"iasi\", Label = \"Ia\u0219i\" },\n                    new() { Value = \"bacau\", Label = \"Bac\u0103u\" },\n                    new() { Value = \"suceava\", Label = \"Suceava\" }\n                }\n            }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#select-fara-optiune-implicita","title":"Select f\u0103r\u0103 op\u021biune implicit\u0103","text":"<pre><code>&lt;FodGroupSelect T=\"Department\" \n                @bind-Value=\"selectedDepartment\"\n                Source=\"@departmentGroups\"\n                DefaultOption=\"false\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#select-cu-text-personalizat-pentru-optiunea-implicita","title":"Select cu text personalizat pentru op\u021biunea implicit\u0103","text":"<pre><code>&lt;FodGroupSelect T=\"Product\" \n                @bind-Value=\"selectedProduct\"\n                Source=\"@productGroups\"\n                DefaultOptionText=\"-- Alege\u021bi un produs --\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#formular-cu-validare","title":"Formular cu validare","text":"<pre><code>&lt;EditForm Model=\"@orderForm\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodGroupSelect T=\"Service\" \n                        @bind-Value=\"orderForm.Service\"\n                        Source=\"@serviceGroups\"\n                        Label=\"Serviciu\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; orderForm.Service)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;Comand\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderForm orderForm = new();\n    private List&lt;SelectItemGroup&gt; serviceGroups = new();\n\n    public class OrderForm\n    {\n        [Required(ErrorMessage = \"Serviciul este obligatoriu\")]\n        public Service? Service { get; set; }\n    }\n\n    public class Service : ISelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public decimal Price { get; set; }\n    }\n\n    protected override void OnInitialized()\n    {\n        serviceGroups = new List&lt;SelectItemGroup&gt;\n        {\n            new SelectItemGroup\n            {\n                Label = \"Servicii IT\",\n                Members = new List&lt;Service&gt;\n                {\n                    new() { Value = \"web-dev\", Label = \"Dezvoltare Web\", Price = 500 },\n                    new() { Value = \"mobile-dev\", Label = \"Dezvoltare Mobile\", Price = 800 },\n                    new() { Value = \"consulting\", Label = \"Consultan\u021b\u0103 IT\", Price = 200 }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Servicii Marketing\",\n                Members = new List&lt;Service&gt;\n                {\n                    new() { Value = \"seo\", Label = \"Optimizare SEO\", Price = 300 },\n                    new() { Value = \"social\", Label = \"Social Media\", Price = 250 },\n                    new() { Value = \"content\", Label = \"Content Marketing\", Price = 400 }\n                }\n            }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#atribute-fodgroupselect","title":"Atribute FodGroupSelect","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>T</code> Valoarea selectat\u0103 <code>default(T)</code> <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Eveniment la schimbarea valorii - <code>Source</code> <code>IEnumerable&lt;SelectItemGroup&gt;</code> Grupurile de op\u021biuni - <code>DefaultOption</code> <code>bool</code> Afi\u0219eaz\u0103 op\u021biune implicit\u0103 <code>true</code> <code>DefaultOptionText</code> <code>string</code> Text op\u021biune implicit\u0103 <code>\"Select...\"</code> <code>Label</code> <code>string</code> Eticheta c\u00e2mpului <code>null</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code> <code>ReadOnly</code> <code>bool</code> Doar citire <code>false</code> <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodGroupSelect/#2-fodcustomgroupselect","title":"2. FodCustomGroupSelect","text":""},{"location":"fod/componente/FodGroupSelect/#descriere-generala_1","title":"Descriere General\u0103","text":"<p><code>FodCustomGroupSelect</code> ofer\u0103 un select stilizat cu func\u021bionalit\u0103\u021bi extinse precum dezactivarea individual\u0103 a op\u021biunilor \u0219i design personalizat.</p>"},{"location":"fod/componente/FodGroupSelect/#ghid-de-utilizare-api_1","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodGroupSelect/#select-stilizat-cu-optiuni-dezactivate","title":"Select stilizat cu op\u021biuni dezactivate","text":"<pre><code>&lt;FodCustomGroupSelect T=\"Feature\" \n                      @bind-Value=\"selectedFeature\"\n                      Source=\"@featureGroups\" /&gt;\n\n@code {\n    private Feature? selectedFeature;\n    private List&lt;SelectItemGroup&gt; featureGroups = new();\n\n    public class Feature : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n        public bool IsPremium { get; set; }\n    }\n\n    protected override void OnInitialized()\n    {\n        featureGroups = new List&lt;SelectItemGroup&gt;\n        {\n            new SelectItemGroup\n            {\n                Label = \"Func\u021bii de baz\u0103\",\n                Members = new List&lt;Feature&gt;\n                {\n                    new() { Value = \"basic1\", Label = \"Editor text\" },\n                    new() { Value = \"basic2\", Label = \"Salvare automat\u0103\" },\n                    new() { Value = \"basic3\", Label = \"Export PDF\" }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Func\u021bii Premium\",\n                Members = new List&lt;Feature&gt;\n                {\n                    new() { Value = \"premium1\", Label = \"Colaborare \u00een timp real\", \n                           Disabled = !userHasPremium, IsPremium = true },\n                    new() { Value = \"premium2\", Label = \"Istoric versiuni\", \n                           Disabled = !userHasPremium, IsPremium = true },\n                    new() { Value = \"premium3\", Label = \"API Access\", \n                           Disabled = !userHasPremium, IsPremium = true }\n                }\n            }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#select-cu-stilizare-personalizata","title":"Select cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodCustomGroupSelect T=\"Theme\" \n                      @bind-Value=\"selectedTheme\"\n                      Source=\"@themeGroups\"\n                      Class=\"theme-selector\"\n                      Style=\"width: 300px;\" /&gt;\n\n&lt;style&gt;\n    .theme-selector {\n        --select-bg: #f5f5f5;\n        --select-border: #ddd;\n        --select-hover: #e0e0e0;\n        --select-focus: #2196f3;\n    }\n\n    .theme-selector .select-header {\n        background-color: var(--select-bg);\n        border-color: var(--select-border);\n    }\n\n    .theme-selector .select-option:hover {\n        background-color: var(--select-hover);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#atribute-fodcustomgroupselect","title":"Atribute FodCustomGroupSelect","text":"<p>Mo\u0219tene\u0219te toate atributele de la FodGroupSelect plus: - Suport pentru <code>ICustomSelectItem</code> cu propriet\u0103\u021bi <code>Disabled</code> \u0219i <code>Hidden</code> - Stilizare CSS customizat\u0103 - Anima\u021bii pentru deschidere/\u00eenchidere</p>"},{"location":"fod/componente/FodGroupSelect/#3-fodcustommultiplegroupselect","title":"3. FodCustomMultipleGroupSelect","text":""},{"location":"fod/componente/FodGroupSelect/#descriere-generala_2","title":"Descriere General\u0103","text":"<p><code>FodCustomMultipleGroupSelect</code> permite selec\u021bia multipl\u0103 a op\u021biunilor cu afi\u0219are tip tags \u0219i checkboxes.</p>"},{"location":"fod/componente/FodGroupSelect/#ghid-de-utilizare-api_2","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodGroupSelect/#select-multiplu-de-baza","title":"Select multiplu de baz\u0103","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"Permission\" \n                              @bind-Value=\"selectedPermissions\"\n                              Source=\"@permissionGroups\" /&gt;\n\n@code {\n    private List&lt;Permission&gt; selectedPermissions = new();\n    private List&lt;SelectItemGroup&gt; permissionGroups = new();\n\n    public class Permission : ICustomSelectItem\n    {\n        public string Value { get; set; }\n        public string Label { get; set; }\n        public bool Disabled { get; set; }\n        public bool Hidden { get; set; }\n        public bool isChecked { get; set; }\n        public string Category { get; set; }\n    }\n\n    protected override void OnInitialized()\n    {\n        permissionGroups = new List&lt;SelectItemGroup&gt;\n        {\n            new SelectItemGroup\n            {\n                Label = \"Permisiuni citire\",\n                Members = new List&lt;Permission&gt;\n                {\n                    new() { Value = \"read.users\", Label = \"Citire utilizatori\" },\n                    new() { Value = \"read.reports\", Label = \"Citire rapoarte\" },\n                    new() { Value = \"read.settings\", Label = \"Citire set\u0103ri\" }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Permisiuni scriere\",\n                Members = new List&lt;Permission&gt;\n                {\n                    new() { Value = \"write.users\", Label = \"Modificare utilizatori\" },\n                    new() { Value = \"write.reports\", Label = \"Creare rapoarte\" },\n                    new() { Value = \"write.settings\", Label = \"Modificare set\u0103ri\" }\n                }\n            },\n            new SelectItemGroup\n            {\n                Label = \"Permisiuni administrative\",\n                Members = new List&lt;Permission&gt;\n                {\n                    new() { Value = \"admin.users\", Label = \"\u0218tergere utilizatori\", \n                           Disabled = !isAdmin },\n                    new() { Value = \"admin.system\", Label = \"Configurare sistem\", \n                           Disabled = !isAdmin }\n                }\n            }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#select-multiplu-cu-limite","title":"Select multiplu cu limite","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"Tag\" \n                              @bind-Value=\"selectedTags\"\n                              Source=\"@tagGroups\"\n                              MaxSelections=\"5\"\n                              OnSelectionChanged=\"@ValidateTagSelection\" /&gt;\n\n@if (selectedTags.Count &gt;= 5)\n{\n    &lt;FodAlert Severity=\"Severity.Info\" Class=\"mt-2\"&gt;\n        A\u021bi atins limita maxim\u0103 de 5 tag-uri.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private List&lt;Tag&gt; selectedTags = new();\n    private int MaxSelections = 5;\n\n    private void ValidateTagSelection()\n    {\n        if (selectedTags.Count &gt; MaxSelections)\n        {\n            selectedTags = selectedTags.Take(MaxSelections).ToList();\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#select-multiplu-cu-afisare-personalizata","title":"Select multiplu cu afi\u0219are personalizat\u0103","text":"<pre><code>&lt;FodCustomMultipleGroupSelect T=\"Skill\" \n                              @bind-Value=\"selectedSkills\"\n                              Source=\"@skillGroups\"&gt;\n    &lt;SelectedItemTemplate Context=\"skill\"&gt;\n        &lt;FodChip Color=\"FodColor.Primary\" \n                 Size=\"FodSize.Small\"\n                 OnClose=\"@(() =&gt; RemoveSkill(skill))\"&gt;\n            @skill.Label\n        &lt;/FodChip&gt;\n    &lt;/SelectedItemTemplate&gt;\n&lt;/FodCustomMultipleGroupSelect&gt;\n\n&lt;div class=\"mt-3\"&gt;\n    &lt;FodText Typo=\"Typo.body2\"&gt;\n        Competen\u021be selectate: @string.Join(\", \", selectedSkills.Select(s =&gt; s.Label))\n    &lt;/FodText&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#atribute-fodcustommultiplegroupselect","title":"Atribute FodCustomMultipleGroupSelect","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>List&lt;T&gt;</code> Lista valorilor selectate <code>new List&lt;T&gt;()</code> <code>ValueChanged</code> <code>EventCallback&lt;List&lt;T&gt;&gt;</code> Eveniment la schimbare - <code>MaxSelections</code> <code>int?</code> Num\u0103r maxim selec\u021bii <code>null</code> <code>MinSelections</code> <code>int?</code> Num\u0103r minim selec\u021bii <code>null</code> <code>ShowSelectedCount</code> <code>bool</code> Afi\u0219eaz\u0103 num\u0103r selectate <code>true</code> <code>SelectedItemTemplate</code> <code>RenderFragment&lt;T&gt;</code> Template pentru itemi selecta\u021bi -"},{"location":"fod/componente/FodGroupSelect/#4-model-de-date","title":"4. Model de date","text":""},{"location":"fod/componente/FodGroupSelect/#iselectitem","title":"ISelectItem","text":"<pre><code>public interface ISelectItem\n{\n    string Value { get; set; }\n    string Label { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#selectitemgroup","title":"SelectItemGroup","text":"<pre><code>public class SelectItemGroup\n{\n    public string Label { get; set; }\n    public IEnumerable&lt;ISelectItem&gt; Members { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#icustomselectitem","title":"ICustomSelectItem","text":"<pre><code>public interface ICustomSelectItem : ISelectItem\n{\n    bool Disabled { get; set; }\n    bool Hidden { get; set; }\n    bool isChecked { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#5-exemple-complexe","title":"5. Exemple complexe","text":""},{"location":"fod/componente/FodGroupSelect/#dashboard-cu-filtre-grupate","title":"Dashboard cu filtre grupate","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Filtre raport\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodGroupSelect T=\"ReportType\" \n                                @bind-Value=\"filters.ReportType\"\n                                Source=\"@reportTypeGroups\"\n                                Label=\"Tip raport\" /&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodCustomMultipleGroupSelect T=\"Department\" \n                                              @bind-Value=\"filters.Departments\"\n                                              Source=\"@departmentGroups\"\n                                              Label=\"Departamente\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"GenerateReport\"\n                   Class=\"mt-3\"&gt;\n            Genereaz\u0103 raport\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private ReportFilters filters = new();\n\n    public class ReportFilters\n    {\n        public ReportType? ReportType { get; set; }\n        public List&lt;Department&gt; Departments { get; set; } = new();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#formular-de-configurare-roluri","title":"Formular de configurare roluri","text":"<pre><code>&lt;EditForm Model=\"@roleConfig\" OnValidSubmit=\"SaveRoleConfiguration\"&gt;\n    &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n        Configurare rol: @role.Name\n    &lt;/FodText&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;FodCustomMultipleGroupSelect T=\"Permission\" \n                                      @bind-Value=\"roleConfig.Permissions\"\n                                      Source=\"@permissionGroups\"\n                                      Label=\"Permisiuni\"\n                                      Required=\"true\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; roleConfig.Permissions)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;FodGroupSelect T=\"AccessLevel\" \n                        @bind-Value=\"roleConfig.AccessLevel\"\n                        Source=\"@accessLevelGroups\"\n                        Label=\"Nivel acces\"\n                        DefaultOption=\"false\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103 configura\u021bia\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Stilizare pentru grup headers */\n.fod-group-select optgroup {\n    font-weight: bold;\n    color: var(--fod-palette-primary-main);\n}\n\n/* Select custom cu teme */\n.custom-select-dark {\n    background-color: #2d2d2d;\n    color: #ffffff;\n}\n\n.custom-select-dark .select-option:hover {\n    background-color: #3d3d3d;\n}\n\n.custom-select-dark .group-label {\n    color: #888;\n    font-size: 0.85em;\n    text-transform: uppercase;\n}\n\n/* Tags pentru multiple select */\n.selected-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    min-height: 40px;\n}\n\n.selected-tag {\n    background-color: var(--fod-palette-primary-light);\n    color: var(--fod-palette-primary-contrastText);\n    padding: 0.25rem 0.5rem;\n    border-radius: 16px;\n    font-size: 0.875rem;\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodGroupSelect/#in-modal","title":"\u00cen Modal","text":"<pre><code>&lt;FodModal Show=\"@showAssignModal\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Asignare task&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodCustomMultipleGroupSelect T=\"User\" \n                                          @bind-Value=\"assignedUsers\"\n                                          Source=\"@userGroups\"\n                                          Label=\"Asigna\u021bi c\u0103tre\" /&gt;\n        &lt;/FodModalBody&gt;\n        &lt;FodModalFooter&gt;\n            &lt;FodButton OnClick=\"AssignTask\"&gt;Asigneaz\u0103&lt;/FodButton&gt;\n        &lt;/FodModalFooter&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#8-validare","title":"8. Validare","text":"<pre><code>public class CustomValidator : ValidationAttribute\n{\n    protected override ValidationResult IsValid(object value, \n        ValidationContext validationContext)\n    {\n        if (value is List&lt;Permission&gt; permissions)\n        {\n            if (permissions.Count == 0)\n                return new ValidationResult(\"Selecta\u021bi cel pu\u021bin o permisiune\");\n\n            if (permissions.Any(p =&gt; p.Value.StartsWith(\"admin\")) &amp;&amp; \n                !permissions.Any(p =&gt; p.Value.StartsWith(\"read\")))\n                return new ValidationResult(\n                    \"Permisiunile administrative necesit\u0103 \u0219i permisiuni de citire\");\n        }\n\n        return ValidationResult.Success;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodGroupSelect/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Pentru liste foarte mari (&gt;1000 elemente), considera\u021bi paginare sau filtrare</li> <li>Folosi\u021bi <code>Hidden</code> pentru a ascunde temporar op\u021biuni \u00een loc s\u0103 le elimina\u021bi</li> <li>Implementa\u021bi lazy loading pentru grupuri mari</li> </ul>"},{"location":"fod/componente/FodGroupSelect/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Folosi\u021bi labels descriptive pentru grupuri</li> <li>Asigura\u021bi contrast suficient pentru text</li> <li>Suport complet pentru navigare cu tastatur\u0103</li> <li>ARIA labels pentru screen readers</li> </ul>"},{"location":"fod/componente/FodGroupSelect/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Grupare logic\u0103 - Organiza\u021bi op\u021biunile \u00een categorii clare</li> <li>Limite rezonabile - Nu dep\u0103\u0219i\u021bi 100-200 op\u021biuni totale</li> <li>Labels clare - Folosi\u021bi denumiri descriptive pentru grupuri</li> <li>Validare - Implementa\u021bi validare pentru selec\u021bii multiple</li> <li>Feedback vizual - Indica\u021bi clar op\u021biunile dezactivate</li> <li>Responsive - Testa\u021bi pe diferite dimensiuni de ecran</li> </ol>"},{"location":"fod/componente/FodGroupSelect/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodGroupSelect/#optiunile-nu-apar-in-grupuri","title":"Op\u021biunile nu apar \u00een grupuri","text":"<ul> <li>Verifica\u021bi c\u0103 <code>SelectItemGroup.Label</code> este setat</li> <li>Verifica\u021bi c\u0103 <code>Members</code> con\u021bine elemente</li> </ul>"},{"location":"fod/componente/FodGroupSelect/#selectia-multipla-nu-functioneaza","title":"Selec\u021bia multipl\u0103 nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 folosi\u021bi <code>FodCustomMultipleGroupSelect</code></li> <li>Verifica\u021bi c\u0103 Value este de tip <code>List&lt;T&gt;</code></li> </ul>"},{"location":"fod/componente/FodGroupSelect/#optiuni-dezactivate-pot-fi-selectate","title":"Op\u021biuni dezactivate pot fi selectate","text":"<ul> <li>Verifica\u021bi c\u0103 modelul implementeaz\u0103 <code>ICustomSelectItem</code></li> <li>Verifica\u021bi logica de handling pentru <code>Disabled</code></li> </ul>"},{"location":"fod/componente/FodGroupSelect/#13-concluzie","title":"13. Concluzie","text":"<p>Componentele GroupSelect din FOD ofer\u0103 solu\u021bii flexibile pentru organizarea op\u021biunilor \u00een grupuri logice. De la select-ul nativ simplu p\u00e2n\u0103 la variante stilizate cu selec\u021bie multipl\u0103, acestea acoper\u0103 majoritatea scenariilor de utilizare pentru formulare complexe.</p>"},{"location":"fod/componente/FodHeader/","title":"Header","text":""},{"location":"fod/componente/FodHeader/#documentatie-pentru-componenta-fodheader","title":"Documenta\u021bie pentru componenta FodHeader","text":""},{"location":"fod/componente/FodHeader/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodHeader</code> este o component\u0103 de naviga\u021bie responsiv\u0103 pentru aplica\u021bii guvernamentale, care ofer\u0103 un header consistent cu suport integrat pentru autentificare, selec\u021bie de limb\u0103, meniu mobil responsive \u0219i branding organiza\u021bional.</p> <p>Componenta suport\u0103: - Afi\u0219area numelui \u0219i logo-ului organiza\u021biei - Autentificare cu afi\u0219area informa\u021biilor utilizatorului - Selector de limb\u0103 pentru aplica\u021bii multilingve - Meniu de naviga\u021bie responsive cu hamburger menu pentru mobile - Naviga\u021bie secundar\u0103 prin con\u021binut copil - Layout fluid sau cu container</p>"},{"location":"fod/componente/FodHeader/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodHeader/#header-de-baza","title":"Header de baz\u0103","text":"<pre><code>&lt;FodHeader OrganizationName=\"Agen\u021bia de Guvernare Electronic\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-cu-autentificare","title":"Header cu autentificare","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Agen\u021bia de Guvernare Electronic\u0103\" \n    ShowAuthentication=\"true\"\n    ShowContextSelect=\"true\"\n    LoginReturnPath=\"/login\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-cu-selector-de-limba","title":"Header cu selector de limb\u0103","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Agen\u021bia de Guvernare Electronic\u0103\" \n    ShowLanguages=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-cu-meniu-de-navigatie-secundar","title":"Header cu meniu de naviga\u021bie secundar","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Agen\u021bia de Guvernare Electronic\u0103\" \n    ShowLanguages=\"true\"\n    ShowAuthentication=\"true\"&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;FodLink Href=\"/servicii\" Class=\"nav-link\"&gt;Servicii&lt;/FodLink&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;FodLink Href=\"/documente\" Class=\"nav-link\"&gt;Documente&lt;/FodLink&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;FodLink Href=\"/ajutor\" Class=\"nav-link\"&gt;Ajutor&lt;/FodLink&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;FodLink Href=\"/contact\" Class=\"nav-link\"&gt;Contact&lt;/FodLink&gt;\n    &lt;/li&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-fluid-full-width","title":"Header fluid (full width)","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Agen\u021bia de Guvernare Electronic\u0103\" \n    ShowLanguages=\"true\"\n    ShowAuthentication=\"true\"\n    IsContainered=\"false\"\n    Style=\"background-color: #1976d2;\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-cu-logo-personalizat","title":"Header cu logo personalizat","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Organiza\u021bia Mea\"\n    OrganizationLogo=\"/images/logo-organizatie.png\"\n    Logo=\"/images/logo-aplicatie.png\"\n    Title=\"Titlul Aplica\u021biei\"\n    ShowAuthentication=\"true\"\n    ShowLanguages=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#header-complet-personalizat","title":"Header complet personalizat","text":"<pre><code>&lt;FodHeader \n    OrganizationName=\"Guvernul Republicii Moldova\"\n    ShowAuthentication=\"true\"\n    ShowContextSelect=\"true\"\n    ShowLanguages=\"true\"\n    LoginReturnPath=\"/auth/login\"\n    LogoutReturnUrl=\"/auth/logout\"\n    IsContainered=\"true\"&gt;\n    &lt;!-- Meniu secundar --&gt;\n    &lt;li class=\"nav-item dropdown\"&gt;\n        &lt;a class=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\"&gt;\n            Servicii\n        &lt;/a&gt;\n        &lt;div class=\"dropdown-menu\"&gt;\n            &lt;FodLink Href=\"/servicii/apostila\" Class=\"dropdown-item\"&gt;Apostil\u0103&lt;/FodLink&gt;\n            &lt;FodLink Href=\"/servicii/traduceri\" Class=\"dropdown-item\"&gt;Traduceri&lt;/FodLink&gt;\n            &lt;FodLink Href=\"/servicii/verificare\" Class=\"dropdown-item\"&gt;Verificare&lt;/FodLink&gt;\n        &lt;/div&gt;\n    &lt;/li&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/FodHeader/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>OrganizationName</code> <code>string</code> Numele organiza\u021biei afi\u0219at \u00een header <code>null</code> <code>OrganizationLogo</code> <code>string</code> Calea c\u0103tre logo-ul organiza\u021biei <code>null</code> <code>Logo</code> <code>string</code> Calea c\u0103tre logo-ul aplica\u021biei <code>null</code> <code>Title</code> <code>string</code> Titlul aplica\u021biei <code>null</code> <code>ShowLanguages</code> <code>bool</code> Afi\u0219eaz\u0103 selectorul de limb\u0103 <code>false</code> <code>ShowAuthentication</code> <code>bool</code> Afi\u0219eaz\u0103 controalele de autentificare <code>false</code> <code>ShowContextSelect</code> <code>bool</code> Afi\u0219eaz\u0103 selectorul de context organiza\u021bional <code>true</code> <code>IsContainered</code> <code>bool</code> Aplic\u0103 constr\u00e2ngeri de container la con\u021binut <code>true</code> <code>LoginReturnPath</code> <code>string</code> Calea de retur dup\u0103 autentificare <code>null</code> <code>LogoutReturnUrl</code> <code>string</code> URL-ul de redirec\u021bionare dup\u0103 delogare <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut pentru meniul de naviga\u021bie secundar <code>null</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri CSS inline <code>null</code>"},{"location":"fod/componente/FodHeader/#3-functionalitati-speciale","title":"3. Func\u021bionalit\u0103\u021bi speciale","text":""},{"location":"fod/componente/FodHeader/#integrare-cu-applicationmodel","title":"Integrare cu ApplicationModel","text":"<p>Header-ul se integreaz\u0103 automat cu <code>ApplicationModel</code> pentru a prelua: - Numele organiza\u021biei (dac\u0103 nu este specificat explicit) - Lista de limbi disponibile pentru selector - Alte configur\u0103ri globale ale aplica\u021biei</p>"},{"location":"fod/componente/FodHeader/#responsive-design","title":"Responsive Design","text":"<ul> <li>Pe ecrane mari: toate elementele sunt vizibile \u00een linie</li> <li>Pe ecrane mici: meniu hamburger care deschide un modal fullscreen</li> <li>Naviga\u021bia secundar\u0103 se adapteaz\u0103 automat la dimensiunea ecranului</li> </ul>"},{"location":"fod/componente/FodHeader/#autentificare","title":"Autentificare","text":"<p>C\u00e2nd <code>ShowAuthentication=\"true\"</code>, header-ul afi\u0219eaz\u0103: - Informa\u021bii despre utilizatorul autentificat - Buton de delogare pentru utilizatori autentifica\u021bi - Integrare cu <code>FodUserInfo</code> pentru afi\u0219area contextului</p>"},{"location":"fod/componente/FodHeader/#4-integrare-cu-cascade-parameters","title":"4. Integrare cu cascade parameters","text":"<pre><code>&lt;CascadingValue Name=\"ApplicationModel\" Value=\"@applicationModel\"&gt;\n    &lt;FodHeader ShowLanguages=\"true\" ShowAuthentication=\"true\" /&gt;\n&lt;/CascadingValue&gt;\n\n@code {\n    private ApplicationModel applicationModel = new ApplicationModel\n    {\n        Name = \"Portal Guvernamental\",\n        Languages = new List&lt;LanguageModel&gt;\n        {\n            new LanguageModel { Name = \"Rom\u00e2n\u0103\", Iso2 = \"ro\" },\n            new LanguageModel { Name = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\", Iso2 = \"ru\" },\n            new LanguageModel { Name = \"English\", Iso2 = \"en\" }\n        }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodHeader/#5-note-si-observatii","title":"5. Note \u0219i observa\u021bii","text":"<ul> <li>Header-ul folose\u0219te Bootstrap pentru styling \u0219i responsive behavior</li> <li>Selectorul de limb\u0103 este populat automat din <code>ApplicationModel</code> sau poate fi configurat manual</li> <li>Pentru aplica\u021bii cu autentificare MPass, asigura\u021bi-v\u0103 c\u0103 serviciile necesare sunt configurate</li> <li>Meniul mobil folose\u0219te <code>FodModal</code> pentru o experien\u021b\u0103 fullscreen pe dispozitive mici</li> <li>Header-ul trebuie plasat de obicei \u00een layout-ul principal al aplica\u021biei</li> </ul>"},{"location":"fod/componente/FodHeader/#6-concluzie","title":"6. Concluzie","text":"<p><code>FodHeader</code> ofer\u0103 o solu\u021bie complet\u0103 pentru naviga\u021bia principal\u0103 \u00een aplica\u021biile guvernamentale, cu suport pentru toate func\u021bionalit\u0103\u021bile necesare: branding, autentificare, multilingvism \u0219i naviga\u021bie responsiv\u0103.</p>"},{"location":"fod/componente/FodIcon/","title":"Icon","text":""},{"location":"fod/componente/FodIcon/#documentatie-pentru-componenta-fodicon","title":"Documenta\u021bie pentru componenta FodIcon","text":""},{"location":"fod/componente/FodIcon/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodIcon</code> este componenta fundamental\u0103 pentru afi\u0219area pictogramelor \u00een aplica\u021biile FOD. Suport\u0103 at\u00e2t pictograme SVG inline, c\u00e2t \u0219i fonturi de pictograme (Material Icons, FontAwesome, etc.), oferind o interfa\u021b\u0103 unificat\u0103 pentru toate nevoile de iconografie.</p> <p>Caracteristici principale: - Suport dual: SVG inline \u0219i fonturi de pictograme - Bibliotec\u0103 complet\u0103 Material Icons (5 variante) - Pictograme custom pentru branduri \u0219i formate de fi\u0219iere - 5 dimensiuni predefinite - Integrare complet\u0103 cu sistemul de culori FOD - Optimizat pentru performan\u021b\u0103 - Suport pentru accesibilitate - Utilizare consistent\u0103 \u00een toate componentele FOD</p>"},{"location":"fod/componente/FodIcon/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodIcon/#icon-de-baza","title":"Icon de baz\u0103","text":"<pre><code>&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Home\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#icon-cu-dimensiune-si-culoare","title":"Icon cu dimensiune \u0219i culoare","text":"<pre><code>&lt;!-- Icon mic cu culoare primar\u0103 --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" \n         Size=\"FodSize.Small\" \n         Color=\"FodColor.Primary\" /&gt;\n\n&lt;!-- Icon mare cu culoare de succes --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n         Size=\"FodSize.Large\" \n         Color=\"FodColor.Success\" /&gt;\n\n&lt;!-- Icon extra mare cu culoare de eroare --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" \n         Size=\"FodSize.ExtraLarge\" \n         Color=\"FodColor.Error\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#variante-material-icons","title":"Variante Material Icons","text":"<pre><code>&lt;!-- Filled (umplut) --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Favorite\" /&gt;\n\n&lt;!-- Outlined (contur) --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Outlined.FavoriteBorder\" /&gt;\n\n&lt;!-- Rounded (rotunjit) --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Rounded.Home\" /&gt;\n\n&lt;!-- Sharp (ascu\u021bit) --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Sharp.Settings\" /&gt;\n\n&lt;!-- TwoTone (dou\u0103 tonuri) --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.TwoTone.ShoppingCart\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#pictograme-pentru-diferite-contexte","title":"Pictograme pentru diferite contexte","text":""},{"location":"fod/componente/FodIcon/#navigare-si-actiuni","title":"Navigare \u0219i ac\u021biuni","text":"<pre><code>&lt;div class=\"d-flex gap-3\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Menu\" Title=\"Meniu\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Search\" Title=\"C\u0103utare\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ArrowBack\" Title=\"\u00cenapoi\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ArrowForward\" Title=\"\u00cenainte\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Refresh\" Title=\"Re\u00eencarc\u0103\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Close\" Title=\"\u00cenchide\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#stari-si-feedback","title":"St\u0103ri \u0219i feedback","text":"<pre><code>&lt;!-- Succes --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n         Color=\"FodColor.Success\" \n         Title=\"Opera\u021biune reu\u0219it\u0103\" /&gt;\n\n&lt;!-- Avertisment --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Warning\" \n         Color=\"FodColor.Warning\" \n         Title=\"Aten\u021bie\" /&gt;\n\n&lt;!-- Eroare --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" \n         Color=\"FodColor.Error\" \n         Title=\"Eroare\" /&gt;\n\n&lt;!-- Informa\u021bie --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n         Color=\"FodColor.Info\" \n         Title=\"Informa\u021bie\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#pictograme-pentru-formulare","title":"Pictograme pentru formulare","text":"<pre><code>&lt;div class=\"form-icons\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Email\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Phone\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Lock\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.DateRange\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AttachFile\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#pictograme-custom-pentru-branduri","title":"Pictograme custom pentru branduri","text":"<pre><code>&lt;!-- Re\u021bele sociale --&gt;\n&lt;div class=\"social-icons d-flex gap-2\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Facebook\" \n             Color=\"FodColor.Primary\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Twitter\" \n             Color=\"FodColor.Info\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.GitHub\" \n             Color=\"FodColor.Dark\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.LinkedIn\" \n             Color=\"FodColor.Primary\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.YouTube\" \n             Color=\"FodColor.Error\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- Sisteme de operare \u0219i browsere --&gt;\n&lt;div class=\"platform-icons\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Microsoft\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Apple\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Google\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#pictograme-pentru-formate-de-fisiere","title":"Pictograme pentru formate de fi\u0219iere","text":"<pre><code>&lt;div class=\"file-type-icons\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.PictureAsPdf\" \n             Color=\"FodColor.Error\" \n             Title=\"PDF\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Description\" \n             Color=\"FodColor.Primary\" \n             Title=\"Document\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Image\" \n             Color=\"FodColor.Success\" \n             Title=\"Imagine\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.VideoFile\" \n             Color=\"FodColor.Secondary\" \n             Title=\"Video\" /&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AudioFile\" \n             Color=\"FodColor.Warning\" \n             Title=\"Audio\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#utilizare-in-componente-complexe","title":"Utilizare \u00een componente complexe","text":""},{"location":"fod/componente/FodIcon/#in-butoane","title":"\u00cen butoane","text":"<pre><code>&lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Add\" \n           Color=\"FodColor.Primary\" \n           Variant=\"FodVariant.Filled\"&gt;\n    Adaug\u0103 element\n&lt;/FodButton&gt;\n\n&lt;FodButton EndIcon=\"@FodIcons.Material.Filled.Send\" \n           Color=\"FodColor.Success\" \n           Variant=\"FodVariant.Outlined\"&gt;\n    Trimite\n&lt;/FodButton&gt;\n\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n               Color=\"FodColor.Error\" \n               Size=\"FodSize.Small\" \n               Title=\"\u0218terge\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#in-liste","title":"\u00cen liste","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemIcon&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Inbox\" /&gt;\n        &lt;/FodListItemIcon&gt;\n        &lt;FodListItemText Primary=\"Inbox\" Secondary=\"5 mesaje noi\" /&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemIcon&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Send\" /&gt;\n        &lt;/FodListItemIcon&gt;\n        &lt;FodListItemText Primary=\"Trimise\" /&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemIcon&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Drafts\" /&gt;\n        &lt;/FodListItemIcon&gt;\n        &lt;FodListItemText Primary=\"Ciorne\" Secondary=\"3 ciorne\" /&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#in-notificari-si-alerte","title":"\u00cen notific\u0103ri \u0219i alerte","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" Class=\"me-2\" /&gt;\n    Opera\u021biune finalizat\u0103 cu succes!\n&lt;/FodAlert&gt;\n\n&lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" Class=\"me-2\" /&gt;\n    A ap\u0103rut o eroare la procesare.\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#in-campuri-de-formular","title":"\u00cen c\u00e2mpuri de formular","text":"<pre><code>&lt;FodTextField Label=\"Email\" \n              Type=\"email\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.Email\"\n              Adornment=\"Adornment.Start\" /&gt;\n\n&lt;FodTextField Label=\"Parol\u0103\" \n              Type=\"password\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.Lock\"\n              Adornment=\"Adornment.Start\" /&gt;\n\n&lt;FodTextField Label=\"C\u0103utare\" \n              AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n              Adornment=\"Adornment.End\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#animatii-si-efecte","title":"Anima\u021bii \u0219i efecte","text":"<pre><code>&lt;!-- Icon cu rota\u021bie --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Refresh\" \n         Class=\"@(isLoading ? \"rotating-icon\" : \"\")\" /&gt;\n\n&lt;!-- Icon cu pulsare --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Favorite\" \n         Color=\"FodColor.Error\"\n         Class=\"pulse-icon\" /&gt;\n\n&lt;style&gt;\n    .rotating-icon {\n        animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n\n    .pulse-icon {\n        animation: pulse 1.5s ease-in-out infinite;\n    }\n\n    @keyframes pulse {\n        0% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n        100% { transform: scale(1); }\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Icon</code> <code>string</code> Con\u021binut pictogram\u0103 (SVG sau clas\u0103 CSS) - <code>Title</code> <code>string</code> Titlu pentru accesibilitate <code>null</code> <code>Size</code> <code>FodSize</code> Dimensiunea pictogramei <code>Medium</code> <code>Color</code> <code>FodColor</code> Culoarea pictogramei <code>Inherit</code> <code>ViewBox</code> <code>string</code> Dimensiuni viewBox pentru SVG <code>\"0 0 24 24\"</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodIcon/#4-dimensiuni-disponibile-fodsize","title":"4. Dimensiuni disponibile (FodSize)","text":"Dimensiune Valoare CSS Pixeli <code>ExtraSmall</code> 1rem 16px <code>Small</code> 1.25rem 20px <code>Medium</code> 1.5rem 24px (implicit) <code>Large</code> 2.25rem 36px <code>ExtraLarge</code> 3rem 48px"},{"location":"fod/componente/FodIcon/#5-categorii-de-pictograme-disponibile","title":"5. Categorii de pictograme disponibile","text":""},{"location":"fod/componente/FodIcon/#material-icons","title":"Material Icons","text":"<ul> <li>Filled: Pictograme pline, aspect solid</li> <li>Outlined: Doar contur, aspect mai u\u0219or</li> <li>Rounded: Col\u021buri rotunjite, aspect prietenos</li> <li>Sharp: Col\u021buri ascu\u021bite, aspect profesional</li> <li>TwoTone: Dou\u0103 culori, accent pe detalii</li> </ul>"},{"location":"fod/componente/FodIcon/#custom-icons","title":"Custom Icons","text":"<ul> <li>Brands: Logo-uri companii (Facebook, Google, Apple, etc.)</li> <li>FileFormats: Tipuri de fi\u0219iere</li> <li>Uncategorized: Pictograme specifice aplica\u021biei</li> </ul>"},{"location":"fod/componente/FodIcon/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Personalizare dimensiuni */\n.custom-icon-size {\n    font-size: 32px !important;\n    width: 32px !important;\n    height: 32px !important;\n}\n\n/* Gradient pentru pictograme */\n.gradient-icon {\n    background: linear-gradient(45deg, #f06, #48f);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n}\n\n/* Shadow pentru pictograme */\n.shadow-icon {\n    filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.2));\n}\n\n/* Pictograme cu fundal */\n.icon-with-background {\n    background-color: #f0f0f0;\n    border-radius: 50%;\n    padding: 8px;\n}\n</code></pre>"},{"location":"fod/componente/FodIcon/#7-combinatii-comune","title":"7. Combina\u021bii comune","text":"<pre><code>&lt;!-- Icon cu text --&gt;\n&lt;div class=\"d-flex align-items-center\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Schedule\" \n             Size=\"FodSize.Small\" \n             Class=\"me-1\" /&gt;\n    &lt;FodText Typo=\"Typo.body2\"&gt;10:30 AM&lt;/FodText&gt;\n&lt;/div&gt;\n\n&lt;!-- Badge cu icon --&gt;\n&lt;FodBadge BadgeContent=\"5\" Color=\"FodColor.Error\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Notifications\" /&gt;\n&lt;/FodBadge&gt;\n\n&lt;!-- Icon \u00een chip --&gt;\n&lt;FodChip Icon=\"@FodIcons.Material.Filled.Person\" \n         Color=\"FodColor.Primary\"&gt;\n    Administrator\n&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#8-utilizare-cu-fonturi-externe","title":"8. Utilizare cu fonturi externe","text":"<pre><code>&lt;!-- FontAwesome --&gt;\n&lt;FodIcon Icon=\"fas fa-user\" /&gt;\n\n&lt;!-- Material Icons font --&gt;\n&lt;FodIcon Icon=\"face\" /&gt;\n\n&lt;!-- Custom icon font --&gt;\n&lt;FodIcon Icon=\"custom-icon-class\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Pictogramele SVG sunt stocate ca string-uri statice</li> <li>Nu se \u00eencarc\u0103 resurse externe pentru SVG</li> <li>Fonturile de pictograme se \u00eencarc\u0103 o singur\u0103 dat\u0103</li> <li>Folosi\u021bi aceea\u0219i variant\u0103 pentru consisten\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodIcon/#10-accesibilitate","title":"10. Accesibilitate","text":"<pre><code>&lt;!-- Pictogram\u0103 decorativ\u0103 --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Star\" \n         Title=\"\" /&gt;\n\n&lt;!-- Pictogram\u0103 cu semnifica\u021bie --&gt;\n&lt;FodIcon Icon=\"@FodIcons.Material.Filled.Warning\" \n         Title=\"Avertisment: Ac\u021biune ireversibil\u0103\" /&gt;\n\n&lt;!-- Pictogram\u0103 ca buton --&gt;\n&lt;button aria-label=\"\u0218terge element\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Delete\" /&gt;\n&lt;/button&gt;\n</code></pre>"},{"location":"fod/componente/FodIcon/#11-note-si-observatii","title":"11. Note \u0219i observa\u021bii","text":"<ul> <li>Dimensiunea implicit\u0103 este Medium (24px)</li> <li>Culoarea implicit\u0103 este Inherit (mo\u0219tene\u0219te de la p\u0103rinte)</li> <li>SVG-urile folosesc currentColor pentru a prelua culoarea</li> <li>ViewBox implicit este optimizat pentru Material Icons</li> </ul>"},{"location":"fod/componente/FodIcon/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Consisten\u021b\u0103 - Folosi\u021bi aceea\u0219i variant\u0103 \u00een toat\u0103 aplica\u021bia</li> <li>Semantic\u0103 - Alege\u021bi pictograme intuitive pentru ac\u021biuni</li> <li>Dimensiuni - Folosi\u021bi dimensiuni predefinite pentru consisten\u021b\u0103</li> <li>Culori - Folosi\u021bi culori semantice pentru feedback</li> <li>Accesibilitate - Ad\u0103uga\u021bi Title pentru pictograme importante</li> <li>Performan\u021b\u0103 - Prefera\u021bi pictogramele din bibliotec\u0103</li> </ol>"},{"location":"fod/componente/FodIcon/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodIcon/#pictograma-nu-apare","title":"Pictograma nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 calea Icon este corect\u0103</li> <li>Pentru fonturi, verifica\u021bi c\u0103 fontul este \u00eenc\u0103rcat</li> </ul>"},{"location":"fod/componente/FodIcon/#culoarea-nu-se-aplica","title":"Culoarea nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 folosi\u021bi FodColor valid\u0103</li> <li>Pentru SVG, verifica\u021bi c\u0103 folose\u0219te currentColor</li> </ul>"},{"location":"fod/componente/FodIcon/#dimensiunea-nu-se-schimba","title":"Dimensiunea nu se schimb\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Size este din enum FodSize</li> <li>Pentru dimensiuni custom, folosi\u021bi Class sau Style</li> </ul>"},{"location":"fod/componente/FodIcon/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodIcon</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru afi\u0219area pictogramelor \u00een aplica\u021bii Blazor. Cu o bibliotec\u0103 bogat\u0103 de pictograme Material Icons \u0219i suport pentru pictograme custom, acoper\u0103 toate nevoile de iconografie \u00eentr-un mod consistent \u0219i performant.</p>"},{"location":"fod/componente/FodIconButton/","title":"Icon Button","text":""},{"location":"fod/componente/FodIconButton/#descriere","title":"Descriere","text":"<p><code>FodIconButton</code> este o variant\u0103 a <code>FodButton</code>, dar optimizat\u0103 pentru afi\u0219area de icoane. Aceasta ofer\u0103 suport pentru diferite variante, culori \u0219i dimensiuni.</p> <p>Pentru mai multe informa\u021bii despre utilizarea icoanelor, viziteaz\u0103 pagina dedicat\u0103 Icons.</p>"},{"location":"fod/componente/FodIconButton/#proprietati","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere Valoare Implicit\u0103 <code>Icon</code> <code>string</code> Specific\u0103 iconul care va fi afi\u0219at \u00een component\u0103. <code>null</code> <code>Title</code> <code>string</code> Titlul iconului pentru accesibilitate (atribut <code>title</code>). <code>null</code> <code>Color</code> <code>FodColor</code> Specific\u0103 culoarea butonului, suport\u00e2nd culorile definite \u00een tem\u0103. <code>FodColor.Default</code> <code>Size</code> <code>FodSize</code> Define\u0219te dimensiunea butonului. <code>FodSize.Medium</code> <code>Edge</code> <code>Edge</code> Aplic\u0103 un margin negativ dac\u0103 este setat. <code>Edge.False</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul copil al componentei, afi\u0219at doar dac\u0103 <code>Icon</code> este null sau gol. <code>null</code> <code>Variant</code> <code>FodVariant</code> Define\u0219te varianta butonului (<code>Text</code>, <code>Outlined</code>, <code>Contained</code> etc.). <code>FodVariant.Text</code>"},{"location":"fod/componente/FodIconButton/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/componente/FodIconButton/#1-butoane-cu-icoane-simple","title":"1. Butoane cu icoane simple","text":"<p>Utiliz\u00e2nd libr\u0103ria de icoane pre\u00eenc\u0103rcat\u0103:</p> <pre><code>&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" aria-label=\"delete\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Custom.Brands.GitHub\" Color=\"FodColor.Primary\" aria-label=\"github\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Favorite\" Color=\"FodColor.Secondary\" aria-label=\"add to favorite\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Share\" Disabled=\"true\" aria-label=\"share\"&gt;&lt;/FodIconButton&gt;\n</code></pre>"},{"location":"fod/componente/FodIconButton/#2-utilizarea-font-icons-fontawesome","title":"2. Utilizarea font icons (FontAwesome)","text":"<p>\u00cen acest exemplu, se folosesc clasele Font Awesome:</p> <pre><code>&lt;link href=\"https://use.fontawesome.com/releases/v5.14.0/css/all.css\" rel=\"stylesheet\"&gt;\n</code></pre> <pre><code>&lt;FodIconButton Icon=\"fas fa-atom\" Color=\"FodColor.Error\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"fas fa-fighter-jet\" Color=\"FodColor.Dark\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"fas fa-globe-europe\" Color=\"FodColor.Tertiary\"&gt;&lt;/FodIconButton&gt;\n&lt;FodIconButton Icon=\"fas fa-bug\" Disabled=\"true\"&gt;&lt;/FodIconButton&gt;\n</code></pre>"},{"location":"fod/componente/FodIconButton/#3-variante-diferite-pentru-iconbutton","title":"3. Variante diferite pentru IconButton","text":"<p>Se poate aplica stilul unui buton text utiliz\u00e2nd parametrul <code>Variant</code>:</p> <pre><code>&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Outlined\" Color=\"FodColor.Primary\" Size=\"FodSize.Small\" /&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Outlined\" Color=\"FodColor.Primary\" Size=\"FodSize.Medium\" /&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Outlined\" Color=\"FodColor.Primary\" Size=\"FodSize.Large\" /&gt;\n\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" Size=\"FodSize.Large\" /&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" Size=\"FodSize.Medium\" /&gt;\n&lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" Size=\"FodSize.Small\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/","title":"Image","text":""},{"location":"fod/componente/FodImage/#documentatie-pentru-componenta-fodimage","title":"Documenta\u021bie pentru componenta FodImage","text":""},{"location":"fod/componente/FodImage/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodImage</code> este componenta pentru afi\u0219area imaginilor \u00een aplica\u021bii Blazor, oferind control asupra dimensiunilor, pozi\u021bion\u0103rii \u0219i modului de redimensionare. Componenta suport\u0103 imagini responsive \u0219i diferite moduri de \u00eencadrare \u00een container.</p> <p>Caracteristici principale: - Imagini responsive cu layout fluid - Control asupra modului de redimensionare (object-fit) - Pozi\u021bionare flexibil\u0103 \u00een container (object-position) - Sistem de eleva\u021bie pentru umbre - Dimensiuni fixe sau fluide - Integrare cu sistemul de clase CSS FOD - Suport pentru atribute HTML adi\u021bionale</p>"},{"location":"fod/componente/FodImage/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodImage/#imagine-de-baza","title":"Imagine de baz\u0103","text":"<pre><code>&lt;FodImage Src=\"/images/logo.png\" Alt=\"Logo aplica\u021bie\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-responsiva-fluid","title":"Imagine responsiv\u0103 (fluid)","text":"<pre><code>&lt;FodImage Src=\"/images/banner.jpg\" \n          Alt=\"Banner principal\" \n          Fluid=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-cu-dimensiuni-fixe","title":"Imagine cu dimensiuni fixe","text":"<pre><code>&lt;FodImage Src=\"/images/product.jpg\" \n          Alt=\"Produs\" \n          Width=\"300\" \n          Height=\"200\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-cu-object-fit-pentru-pastrarea-proportiilor","title":"Imagine cu object-fit pentru p\u0103strarea propor\u021biilor","text":"<pre><code>&lt;!-- Cover - acoper\u0103 tot containerul p\u0103str\u00e2nd propor\u021biile --&gt;\n&lt;FodImage Src=\"/images/landscape.jpg\" \n          Alt=\"Peisaj\" \n          Width=\"400\" \n          Height=\"300\"\n          ObjectFit=\"ObjectFit.Cover\" /&gt;\n\n&lt;!-- Contain - \u00eencadreaz\u0103 complet \u00een container --&gt;\n&lt;FodImage Src=\"/images/portrait.jpg\" \n          Alt=\"Portret\" \n          Width=\"200\" \n          Height=\"300\"\n          ObjectFit=\"ObjectFit.Contain\" /&gt;\n\n&lt;!-- Scale-down - cel mai mic dintre none sau contain --&gt;\n&lt;FodImage Src=\"/images/icon.png\" \n          Alt=\"Pictogram\u0103\" \n          Width=\"100\" \n          Height=\"100\"\n          ObjectFit=\"ObjectFit.ScaleDown\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-cu-pozitionare-personalizata","title":"Imagine cu pozi\u021bionare personalizat\u0103","text":"<pre><code>&lt;!-- Pozi\u021bionare sus --&gt;\n&lt;FodImage Src=\"/images/tall-image.jpg\" \n          Alt=\"Imagine \u00eenalt\u0103\" \n          Width=\"300\" \n          Height=\"200\"\n          ObjectFit=\"ObjectFit.Cover\"\n          ObjectPosition=\"ObjectPosition.Top\" /&gt;\n\n&lt;!-- Pozi\u021bionare st\u00e2nga-sus --&gt;\n&lt;FodImage Src=\"/images/large-image.jpg\" \n          Alt=\"Imagine mare\" \n          Width=\"400\" \n          Height=\"300\"\n          ObjectFit=\"ObjectFit.Cover\"\n          ObjectPosition=\"ObjectPosition.LeftTop\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-cu-elevatie-umbra","title":"Imagine cu eleva\u021bie (umbr\u0103)","text":"<pre><code>&lt;!-- Umbr\u0103 mic\u0103 --&gt;\n&lt;FodImage Src=\"/images/card-image.jpg\" \n          Alt=\"Imagine card\" \n          Elevation=\"2\"\n          Fluid=\"true\" /&gt;\n\n&lt;!-- Umbr\u0103 medie --&gt;\n&lt;FodImage Src=\"/images/featured.jpg\" \n          Alt=\"Imagine promovat\u0103\" \n          Elevation=\"8\"\n          Width=\"600\"\n          Height=\"400\" /&gt;\n\n&lt;!-- Umbr\u0103 mare pentru accent --&gt;\n&lt;FodImage Src=\"/images/hero.jpg\" \n          Alt=\"Imagine hero\" \n          Elevation=\"16\"\n          Fluid=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#galerie-de-imagini","title":"Galerie de imagini","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    @foreach (var image in galleryImages)\n    {\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodPaper Elevation=\"2\" Class=\"overflow-hidden\"&gt;\n                &lt;FodImage Src=\"@image.Url\" \n                          Alt=\"@image.Description\"\n                          ObjectFit=\"ObjectFit.Cover\"\n                          Height=\"250\"\n                          Fluid=\"true\" /&gt;\n                &lt;div class=\"pa-3\"&gt;\n                    &lt;FodText Typo=\"Typo.subtitle2\"&gt;@image.Title&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                        @image.Date.ToString(\"dd.MM.yyyy\")\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/FodPaper&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#card-de-produs-cu-imagine","title":"Card de produs cu imagine","text":"<pre><code>&lt;FodCard Class=\"product-card\"&gt;\n    &lt;FodImage Src=\"@product.ImageUrl\" \n              Alt=\"@product.Name\"\n              Height=\"200\"\n              ObjectFit=\"ObjectFit.Cover\"\n              Fluid=\"true\" /&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;@product.Name&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\" GutterBottom=\"true\"&gt;\n            @product.Description\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n            @product.Price.ToString(\"C\")\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Color=\"FodColor.Primary\"&gt;Vezi detalii&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Secondary\"&gt;Adaug\u0103 \u00een co\u0219&lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-profil-utilizator","title":"Imagine profil utilizator","text":"<pre><code>&lt;div class=\"user-profile d-flex align-items-center\"&gt;\n    &lt;FodPaper Class=\"overflow-hidden\" \n              Style=\"border-radius: 50%; width: 80px; height: 80px;\"&gt;\n        &lt;FodImage Src=\"@user.ProfileImageUrl\" \n                  Alt=\"@($\"Fotografie profil {user.Name}\")\"\n                  Width=\"80\"\n                  Height=\"80\"\n                  ObjectFit=\"ObjectFit.Cover\" /&gt;\n    &lt;/FodPaper&gt;\n    &lt;div class=\"ms-3\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;@user.Name&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n            @user.Email\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#banner-hero-cu-imagine-de-fundal","title":"Banner hero cu imagine de fundal","text":"<pre><code>&lt;div class=\"hero-section\" style=\"position: relative; height: 400px; overflow: hidden;\"&gt;\n    &lt;FodImage Src=\"/images/hero-background.jpg\" \n              Alt=\"\"\n              Style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"\n              ObjectFit=\"ObjectFit.Cover\"\n              ObjectPosition=\"ObjectPosition.Center\" /&gt;\n\n    &lt;div style=\"position: relative; z-index: 1;\" class=\"pa-8 text-white\"&gt;\n        &lt;FodText Typo=\"Typo.h1\" Color=\"FodColor.White\"&gt;\n            Bine a\u021bi venit\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.White\"&gt;\n            Descoperi\u021bi produsele noastre\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#miniatura-cu-zoom-la-hover","title":"Miniatur\u0103 cu zoom la hover","text":"<pre><code>&lt;div class=\"thumbnail-container\" \n     style=\"overflow: hidden; cursor: pointer;\"\n     @onmouseover=\"@(() =&gt; isHovered = true)\"\n     @onmouseout=\"@(() =&gt; isHovered = false)\"&gt;\n    &lt;FodImage Src=\"/images/thumbnail.jpg\" \n              Alt=\"Miniatur\u0103\"\n              Width=\"200\"\n              Height=\"150\"\n              ObjectFit=\"ObjectFit.Cover\"\n              Class=\"@(isHovered ? \"zoom-effect\" : \"\")\"\n              Style=\"transition: transform 0.3s ease;\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private bool isHovered = false;\n}\n\n&lt;style&gt;\n    .zoom-effect {\n        transform: scale(1.1);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-cu-sursa-dinamica","title":"Imagine cu surs\u0103 dinamic\u0103","text":"<pre><code>&lt;FodImage Src=\"@GetImageUrl(category)\" \n          Alt=\"@($\"Imagine categorie {category.Name}\")\"\n          Height=\"100\"\n          Width=\"100\"\n          ObjectFit=\"ObjectFit.Contain\" /&gt;\n\n@code {\n    private string GetImageUrl(Category category)\n    {\n        return $\"/api/images/categories/{category.Id}.jpg\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodImage/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Src</code> <code>string</code> Calea c\u0103tre imagine - <code>Alt</code> <code>string</code> Text alternativ pentru accesibilitate - <code>Fluid</code> <code>bool</code> Face imaginea responsiv\u0103 <code>false</code> <code>Width</code> <code>int?</code> L\u0103\u021bimea \u00een pixeli <code>null</code> <code>Height</code> <code>int?</code> \u00cen\u0103l\u021bimea \u00een pixeli <code>null</code> <code>Elevation</code> <code>int</code> Nivelul umbrei (0-25) <code>0</code> <code>ObjectFit</code> <code>ObjectFit</code> Modul de redimensionare <code>Fill</code> <code>ObjectPosition</code> <code>ObjectPosition</code> Pozi\u021bionarea \u00een container <code>Center</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodImage/#4-enumerari","title":"4. Enumer\u0103ri","text":""},{"location":"fod/componente/FodImage/#objectfit","title":"ObjectFit","text":"Valoare Descriere <code>None</code> Nu redimensioneaz\u0103 imaginea <code>Cover</code> Acoper\u0103 containerul p\u0103str\u00e2nd propor\u021biile <code>Contain</code> Se \u00eencadreaz\u0103 complet p\u0103str\u00e2nd propor\u021biile <code>Fill</code> Umple containerul (poate deforma) <code>ScaleDown</code> Cel mai mic dintre none sau contain"},{"location":"fod/componente/FodImage/#objectposition","title":"ObjectPosition","text":"Valoare Descriere <code>Center</code> Centrat (implicit) <code>Top</code> Sus centrat <code>Bottom</code> Jos centrat <code>Left</code> St\u00e2nga centrat <code>Right</code> Dreapta centrat <code>LeftTop</code> St\u00e2nga sus <code>LeftBottom</code> St\u00e2nga jos <code>RightTop</code> Dreapta sus <code>RightBottom</code> Dreapta jos"},{"location":"fod/componente/FodImage/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* Imagini cu col\u021buri rotunjite */\n.rounded-image {\n    border-radius: 8px;\n    overflow: hidden;\n}\n\n/* Imagine circular\u0103 */\n.circle-image {\n    border-radius: 50%;\n    overflow: hidden;\n}\n\n/* Efect de hover pentru galerii */\n.gallery-image {\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.gallery-image:hover {\n    transform: scale(1.05);\n    box-shadow: 0 8px 16px rgba(0,0,0,0.2);\n}\n\n/* Imagine cu overlay */\n.image-with-overlay {\n    position: relative;\n}\n\n.image-with-overlay::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to bottom, transparent 50%, rgba(0,0,0,0.7) 100%);\n}\n\n/* Placeholder pentru imagini care se \u00eencarc\u0103 */\n.image-loading {\n    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n    background-size: 200% 100%;\n    animation: loading 1.5s infinite;\n}\n\n@keyframes loading {\n    0% { background-position: 200% 0; }\n    100% { background-position: -200% 0; }\n}\n</code></pre>"},{"location":"fod/componente/FodImage/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodImage/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodImage Src=\"/images/card-header.jpg\" \n              Alt=\"Header imagine\"\n              Height=\"200\"\n              ObjectFit=\"ObjectFit.Cover\"\n              Fluid=\"true\" /&gt;\n    &lt;FodCardContent&gt;\n        &lt;!-- Con\u021binut card --&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#in-liste","title":"\u00cen Liste","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;FodImage Src=\"/images/icon1.png\" \n                      Alt=\"Icon\"\n                      Width=\"40\"\n                      Height=\"40\"\n                      Class=\"me-3\" /&gt;\n            &lt;FodText&gt;Element cu imagine&lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#in-modal-pentru-previzualizare","title":"\u00cen Modal pentru previzualizare","text":"<pre><code>&lt;FodModal Show=\"showImageModal\" Size=\"Size.Large\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Previzualizare imagine&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody Class=\"pa-0\"&gt;\n            &lt;FodImage Src=\"@selectedImage\" \n                      Alt=\"Imagine m\u0103rit\u0103\"\n                      Fluid=\"true\"\n                      ObjectFit=\"ObjectFit.Contain\" /&gt;\n        &lt;/FodModalBody&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#7-patterns-comune","title":"7. Patterns comune","text":""},{"location":"fod/componente/FodImage/#imagine-cu-fallback-manual","title":"Imagine cu fallback (manual)","text":"<pre><code>&lt;FodImage Src=\"@(string.IsNullOrEmpty(imageUrl) ? \"/images/placeholder.jpg\" : imageUrl)\" \n          Alt=\"@altText\"\n          Fluid=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#imagine-lazy-atribut-manual","title":"Imagine lazy (atribut manual)","text":"<pre><code>&lt;FodImage Src=\"@imageSrc\" \n          Alt=\"@imageAlt\"\n          Fluid=\"true\"\n          UserAttributes=\"@(new Dictionary&lt;string, object&gt; { { \"loading\", \"lazy\" } })\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodImage/#8-performanta","title":"8. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi <code>Fluid=\"true\"</code> pentru imagini responsive</li> <li>Specifica\u021bi Width \u0219i Height pentru a evita layout shift</li> <li>Pentru galerii mari, considera\u021bi paginare</li> <li>Optimiza\u021bi imaginile \u00eenainte de \u00eenc\u0103rcare</li> <li>Folosi\u021bi formate moderne (WebP) c\u00e2nd este posibil</li> </ul>"},{"location":"fod/componente/FodImage/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>\u00centotdeauna specifica\u021bi atributul Alt</li> <li>Pentru imagini decorative, folosi\u021bi Alt=\"\"</li> <li>Descrieri clare \u0219i concise \u00een Alt</li> <li>Evita\u021bi \"imagine de\" sau \"pictur\u0103 cu\" \u00een Alt</li> </ul>"},{"location":"fod/componente/FodImage/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Nu exist\u0103 suport \u00eencorporat pentru lazy loading</li> <li>Nu exist\u0103 gestionare erori pentru imagini lips\u0103</li> <li>ObjectFit necesit\u0103 suport browser modern</li> <li>Elevation func\u021bioneaz\u0103 doar cu imagini non-fluide</li> </ul>"},{"location":"fod/componente/FodImage/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Alt descriptiv - \u00centotdeauna include\u021bi text alternativ relevant</li> <li>Dimensiuni explicite - Preveni\u021bi layout shift specific\u00e2nd dimensiuni</li> <li>Optimizare - Folosi\u021bi imagini optimizate pentru web</li> <li>Responsive - Folosi\u021bi Fluid pentru imagini adaptive</li> <li>Object-fit - Alege\u021bi metoda potrivit\u0103 de \u00eencadrare</li> <li>Performan\u021b\u0103 - Considera\u021bi lazy loading pentru imagini multe</li> </ol>"},{"location":"fod/componente/FodImage/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodImage/#imaginea-nu-se-afiseaza","title":"Imaginea nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi calea Src</li> <li>Verifica\u021bi c\u0103 fi\u0219ierul exist\u0103</li> <li>Verifica\u021bi permisiunile de acces</li> </ul>"},{"location":"fod/componente/FodImage/#imaginea-este-deformata","title":"Imaginea este deformat\u0103","text":"<ul> <li>Folosi\u021bi ObjectFit=\"ObjectFit.Cover\" sau \"Contain\"</li> <li>Verifica\u021bi propor\u021biile Width/Height</li> </ul>"},{"location":"fod/componente/FodImage/#imaginea-depaseste-containerul","title":"Imaginea dep\u0103\u0219e\u0219te containerul","text":"<ul> <li>Ad\u0103uga\u021bi Fluid=\"true\"</li> <li>Folosi\u021bi clase CSS pentru overflow</li> </ul>"},{"location":"fod/componente/FodImage/#13-limitari-cunoscute","title":"13. Limit\u0103ri cunoscute","text":"<ul> <li>F\u0103r\u0103 suport pentru srcset/sizes</li> <li>F\u0103r\u0103 placeholder \u00een timpul \u00eenc\u0103rc\u0103rii</li> <li>F\u0103r\u0103 gestionare automat\u0103 a erorilor</li> <li>F\u0103r\u0103 suport pentru formate moderne automat</li> </ul>"},{"location":"fod/componente/FodImage/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodImage</code> ofer\u0103 func\u021bionalitatea de baz\u0103 pentru afi\u0219area imaginilor cu control asupra dimensiunilor \u0219i pozi\u021bion\u0103rii. De\u0219i lipsesc unele func\u021bii moderne de performan\u021b\u0103, componenta se integreaz\u0103 bine \u00een ecosistemul FOD \u0219i acoper\u0103 majoritatea cazurilor comune de utilizare.</p>"},{"location":"fod/componente/FodInlineCheckbox/","title":"FodInlineCheckbox","text":""},{"location":"fod/componente/FodInlineCheckbox/#documentatie-pentru-componenta-fodinlinecheckbox","title":"Documenta\u021bie pentru componenta FodInlineCheckbox","text":""},{"location":"fod/componente/FodInlineCheckbox/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodInlineCheckbox</code> este o component\u0103 specializat\u0103 pentru afi\u0219area unui checkbox \u00eentr-un format inline, cu eticheta pozi\u021bionat\u0103 l\u00e2ng\u0103 checkbox. Mo\u0219tene\u0219te din <code>FODFormComponent&lt;bool&gt;</code> \u0219i ofer\u0103 suport complet pentru formulare Blazor cu validare.</p> <p>Caracteristici principale: - Layout inline cu etichet\u0103 al\u0103turi de checkbox - Suport pentru atributul Display din DataAnnotations - Indicare automat\u0103 a c\u00e2mpurilor obligatorii - Integrare complet\u0103 cu EditForm \u0219i validare - Suport pentru diferite tipuri de checkbox (checkbox/switch) - Conversie automat\u0103 din diferite tipuri (bool, int, string) - Localizare automat\u0103 prin atributul Display</p>"},{"location":"fod/componente/FodInlineCheckbox/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodInlineCheckbox/#checkbox-inline-simplu","title":"Checkbox inline simplu","text":"<pre><code>&lt;EditForm Model=\"@model\"&gt;\n    &lt;FodInlineCheckbox @bind-Value=\"model.AcceptTerms\" \n                       Label=\"Accept termenii \u0219i condi\u021biile\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n\n    public class FormModel\n    {\n        public bool AcceptTerms { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#cu-validare-si-camp-obligatoriu","title":"Cu validare \u0219i c\u00e2mp obligatoriu","text":"<pre><code>&lt;EditForm Model=\"@registrationModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodInlineCheckbox @bind-Value=\"registrationModel.AcceptGDPR\" \n                       Label=\"Accept prelucrarea datelor personale\" /&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; registrationModel.AcceptGDPR)\" /&gt;\n\n    &lt;FodInlineCheckbox @bind-Value=\"registrationModel.ReceiveNewsletter\" \n                       Label=\"Doresc s\u0103 primesc newsletter\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;\u00cenregistrare&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private RegistrationModel registrationModel = new();\n\n    public class RegistrationModel\n    {\n        [Required(ErrorMessage = \"Trebuie s\u0103 accepta\u021bi prelucrarea datelor\")]\n        [Display(Name = \"Acord GDPR\")]\n        public bool AcceptGDPR { get; set; }\n\n        [Display(Name = \"Newsletter\")]\n        public bool ReceiveNewsletter { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#tip-switch","title":"Tip switch","text":"<pre><code>&lt;FodInlineCheckbox @bind-Value=\"settings.EnableNotifications\" \n                   Label=\"Activeaz\u0103 notific\u0103rile\"\n                   Type=\"FodCheckboxType.Switch\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#3-atribute-si-parametri","title":"3. Atribute \u0219i Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>bool</code> Valoarea checkbox-ului (binding) <code>false</code> <code>Label</code> <code>string</code> Eticheta afi\u0219at\u0103 l\u00e2ng\u0103 checkbox - <code>Type</code> <code>FodCheckboxType</code> Tipul checkbox-ului (Checkbox/Switch) <code>Checkbox</code> <code>Readonly</code> <code>bool</code> Dezactiveaz\u0103 checkbox-ul <code>false</code> <code>Id</code> <code>string</code> ID-ul HTML al elementului - <code>OnValueChanged</code> <code>EventCallback&lt;bool&gt;</code> Eveniment la schimbarea valorii -"},{"location":"fod/componente/FodInlineCheckbox/#4-exemple-de-utilizare","title":"4. Exemple de Utilizare","text":""},{"location":"fod/componente/FodInlineCheckbox/#formular-de-preferinte","title":"Formular de preferin\u021be","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Preferin\u021be comunicare\n        &lt;/FodText&gt;\n\n        &lt;EditForm Model=\"@preferences\"&gt;\n            &lt;FodInlineCheckbox @bind-Value=\"preferences.EmailNotifications\" \n                               Label=\"Notific\u0103ri prin email\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"preferences.SmsNotifications\" \n                               Label=\"Notific\u0103ri prin SMS\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"preferences.MarketingEmails\" \n                               Label=\"Comunic\u0103ri de marketing\" /&gt;\n\n            &lt;div class=\"mt-3\"&gt;\n                &lt;FodButton OnClick=\"SavePreferences\" Color=\"FodColor.Primary\"&gt;\n                    Salveaz\u0103 preferin\u021bele\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private UserPreferences preferences = new();\n\n    private async Task SavePreferences()\n    {\n        await PreferencesService.SaveAsync(preferences);\n        NotificationService.ShowSuccess(\"Preferin\u021bele au fost salvate\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#lista-de-task-uri","title":"List\u0103 de task-uri","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Task-uri de completat\n        &lt;/FodText&gt;\n\n        @foreach (var task in tasks)\n        {\n            &lt;FodInlineCheckbox Value=\"task.IsCompleted\"\n                               Label=\"@task.Description\"\n                               OnValueChanged=\"@(value =&gt; UpdateTask(task, value))\" /&gt;\n        }\n\n        &lt;FodDivider Class=\"my-3\" /&gt;\n\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n            Completate: @tasks.Count(t =&gt; t.IsCompleted) din @tasks.Count\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;TodoTask&gt; tasks = new()\n    {\n        new() { Id = 1, Description = \"Verific\u0103 emailurile\" },\n        new() { Id = 2, Description = \"Actualizeaz\u0103 documenta\u021bia\" },\n        new() { Id = 3, Description = \"Revizuie\u0219te codul\" }\n    };\n\n    private async Task UpdateTask(TodoTask task, bool isCompleted)\n    {\n        task.IsCompleted = isCompleted;\n        await TaskService.UpdateAsync(task);\n    }\n\n    private class TodoTask\n    {\n        public int Id { get; set; }\n        public string Description { get; set; }\n        public bool IsCompleted { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#acord-si-termeni","title":"Acord \u0219i termeni","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Finalizare comand\u0103\n        &lt;/FodText&gt;\n\n        &lt;EditForm Model=\"@orderModel\" OnValidSubmit=\"PlaceOrder\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;!-- Detalii comand\u0103 --&gt;\n            &lt;div class=\"order-summary mb-4\"&gt;\n                &lt;!-- ... --&gt;\n            &lt;/div&gt;\n\n            &lt;!-- Acorduri obligatorii --&gt;\n            &lt;FodInlineCheckbox @bind-Value=\"orderModel.AcceptTerms\" \n                               Label=\"Am citit \u0219i accept termenii \u0219i condi\u021biile\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; orderModel.AcceptTerms)\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"orderModel.AcceptReturn\" \n                               Label=\"Am \u00een\u021beles politica de returnare\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; orderModel.AcceptReturn)\" /&gt;\n\n            &lt;!-- Op\u021bionale --&gt;\n            &lt;FodDivider Class=\"my-3\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"orderModel.SaveDetails\" \n                               Label=\"Salveaz\u0103 detaliile pentru comenzi viitoare\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"orderModel.SubscribeOffers\" \n                               Label=\"Doresc s\u0103 primesc oferte speciale\" /&gt;\n\n            &lt;div class=\"mt-4\"&gt;\n                &lt;FodButton Type=\"ButtonType.Submit\" \n                           Color=\"FodColor.Primary\"\n                           FullWidth=\"true\"&gt;\n                    Plaseaz\u0103 comanda\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private OrderModel orderModel = new();\n\n    public class OrderModel\n    {\n        [Required(ErrorMessage = \"Trebuie s\u0103 accepta\u021bi termenii\")]\n        public bool AcceptTerms { get; set; }\n\n        [Required(ErrorMessage = \"Trebuie s\u0103 confirma\u021bi \u00een\u021belegerea politicii\")]\n        public bool AcceptReturn { get; set; }\n\n        public bool SaveDetails { get; set; }\n        public bool SubscribeOffers { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#setari-aplicatie-cu-switch-uri","title":"Set\u0103ri aplica\u021bie cu switch-uri","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Set\u0103ri aplica\u021bie\n        &lt;/FodText&gt;\n\n        &lt;div class=\"settings-group\"&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                Notific\u0103ri\n            &lt;/FodText&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"appSettings.PushNotifications\" \n                               Label=\"Notific\u0103ri push\"\n                               Type=\"FodCheckboxType.Switch\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"appSettings.EmailDigest\" \n                               Label=\"Rezumat s\u0103pt\u0103m\u00e2nal email\"\n                               Type=\"FodCheckboxType.Switch\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"appSettings.DesktopNotifications\" \n                               Label=\"Notific\u0103ri desktop\"\n                               Type=\"FodCheckboxType.Switch\" /&gt;\n        &lt;/div&gt;\n\n        &lt;FodDivider Class=\"my-3\" /&gt;\n\n        &lt;div class=\"settings-group\"&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                Confiden\u021bialitate\n            &lt;/FodText&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"appSettings.ShareAnalytics\" \n                               Label=\"Partajeaz\u0103 date anonime de utilizare\"\n                               Type=\"FodCheckboxType.Switch\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"appSettings.PublicProfile\" \n                               Label=\"Profil public\"\n                               Type=\"FodCheckboxType.Switch\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private AppSettings appSettings = new();\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#cu-localizare-si-display-attribute","title":"Cu localizare \u0219i Display attribute","text":"<pre><code>&lt;EditForm Model=\"@internationalModel\"&gt;\n    &lt;FodInlineCheckbox @bind-Value=\"internationalModel.AcceptPolicy\" /&gt;\n    &lt;FodInlineCheckbox @bind-Value=\"internationalModel.ReceiveUpdates\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private InternationalModel internationalModel = new();\n\n    public class InternationalModel\n    {\n        [Required]\n        [Display(ResourceType = typeof(Resources), Name = \"AcceptPolicyLabel\")]\n        public bool AcceptPolicy { get; set; }\n\n        [Display(ResourceType = typeof(Resources), Name = \"ReceiveUpdatesLabel\")]\n        public bool ReceiveUpdates { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#5-stilizare","title":"5. Stilizare","text":"<p>Componenta folose\u0219te stilurile standard ale FodCheckbox cu layout inline specific:</p> <pre><code>/* Personalizare spacing */\n.custom-inline-checkbox .d-flex {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n}\n\n/* Stil pentru label */\n.custom-inline-checkbox label {\n    margin-left: 0.5rem;\n    cursor: pointer;\n}\n\n/* Eviden\u021biere la hover */\n.custom-inline-checkbox:hover label {\n    color: var(--fod-palette-primary-main);\n}\n\n/* Stil pentru c\u00e2mpuri obligatorii */\n.custom-inline-checkbox .text-danger {\n    margin-left: 0.25rem;\n}\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#6-best-practices","title":"6. Best Practices","text":"<ol> <li>Etichete clare - Folosi\u021bi etichete descriptive care explic\u0103 clar ce implic\u0103 selec\u021bia</li> <li>Grupare logic\u0103 - Grupa\u021bi checkbox-urile \u00eenrudite vizual</li> <li>Validare - Folosi\u021bi validare pentru acorduri obligatorii</li> <li>Feedback vizual - Oferi\u021bi feedback imediat la schimbarea st\u0103rii</li> <li>Accesibilitate - Asigura\u021bi-v\u0103 c\u0103 etichetele sunt asociate corect</li> <li>Stare implicit\u0103 - Seta\u021bi valori implicite logice (de obicei false)</li> </ol>"},{"location":"fod/componente/FodInlineCheckbox/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodInlineCheckbox/#in-wizardstepper","title":"\u00cen wizard/stepper","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;Steps&gt;\n        &lt;!-- ... alte steps ... --&gt;\n\n        &lt;FodWizardStep Title=\"Confirmare\"&gt;\n            &lt;FodInlineCheckbox @bind-Value=\"confirmData\" \n                               Label=\"Confirm c\u0103 datele introduse sunt corecte\" /&gt;\n\n            &lt;FodInlineCheckbox @bind-Value=\"acceptTerms\" \n                               Label=\"Accept termenii serviciului\" /&gt;\n        &lt;/FodWizardStep&gt;\n    &lt;/Steps&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#in-expansion-panels","title":"\u00cen expansion panels","text":"<pre><code>&lt;FodExpansionPanels&gt;\n    &lt;FodExpansionPanel Text=\"Preferin\u021be avansate\"&gt;\n        &lt;FodInlineCheckbox @bind-Value=\"advancedSettings.DebugMode\" \n                           Label=\"Mod debug\" /&gt;\n\n        &lt;FodInlineCheckbox @bind-Value=\"advancedSettings.BetaFeatures\" \n                           Label=\"Activeaz\u0103 func\u021bii beta\" /&gt;\n    &lt;/FodExpansionPanel&gt;\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodInlineCheckbox/#8-concluzie","title":"8. Concluzie","text":"<p><code>FodInlineCheckbox</code> ofer\u0103 o solu\u021bie elegant\u0103 pentru checkbox-uri cu layout inline, perfect\u0103 pentru formulare cu acorduri, preferin\u021be \u0219i set\u0103ri. Cu suport complet pentru validare \u0219i localizare, componenta se integreaz\u0103 perfect \u00een ecosistemul FOD Components pentru aplica\u021bii enterprise.</p>"},{"location":"fod/componente/FodInput/","title":"FodInput","text":""},{"location":"fod/componente/FodInput/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInput</code> este componenta principal\u0103 pentru c\u00e2mpuri de input \u00een FOD.Components. Ofer\u0103 suport complet pentru diverse tipuri de input HTML5, validare, adornments (icoane/text), \u0219i integrare complet\u0103 cu formulare Blazor. Componenta mo\u0219tene\u0219te din <code>FodBaseInput&lt;T&gt;</code> \u0219i suport\u0103 binding bidirec\u021bional cu tipuri generice.</p>"},{"location":"fod/componente/FodInput/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Input text simplu --&gt;\n&lt;FodInput @bind-Value=\"nume\" Label=\"Nume\" /&gt;\n\n&lt;!-- Input cu placeholder --&gt;\n&lt;FodInput @bind-Value=\"email\" \n          Label=\"Email\" \n          Placeholder=\"exemplu@email.com\" /&gt;\n\n&lt;!-- Input num\u0103r --&gt;\n&lt;FodInput @bind-Value=\"varsta\" \n          Label=\"V\u00e2rst\u0103\" \n          InputType=\"InputType.Number\" /&gt;\n\n&lt;!-- Input cu validare --&gt;\n&lt;FodInput @bind-Value=\"telefon\" \n          Label=\"Telefon\"\n          Pattern=\"[0-9]{10}\"\n          HelperText=\"Introduce\u021bi 10 cifre\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput/#atribute-disponibile","title":"Atribute Disponibile","text":""},{"location":"fod/componente/FodInput/#proprietati-de-baza","title":"Propriet\u0103\u021bi de Baz\u0103","text":"Atribut Tip Default Descriere Value T - Valoarea input-ului (generic) Text string - Reprezentarea text a valorii Label string - Eticheta c\u00e2mpului Placeholder string - Text placeholder HelperText string - Text ajut\u0103tor sub c\u00e2mp HelperTextOnFocus bool false Arat\u0103 helper doar la focus Required bool false C\u00e2mp obligatoriu RequiredError string \"Required\" Mesaj eroare c\u00e2mp obligatoriu Error bool false Stare de eroare ErrorText string - Text eroare personalizat ErrorId string - ID pentru aria-describedby"},{"location":"fod/componente/FodInput/#proprietati-input","title":"Propriet\u0103\u021bi Input","text":"Atribut Tip Default Descriere InputType InputType Text Tipul input-ului HTML5 Pattern string - Pattern regex pentru validare MaxLength int? - Lungime maxim\u0103 caractere Lines int 1 Num\u0103r linii (pentru textarea) InputMode InputMode text Mod tastatur\u0103 mobil\u0103 Format string - Format pentru afi\u0219are valoare Culture CultureInfo - Cultura pentru formatare"},{"location":"fod/componente/FodInput/#stare-si-comportament","title":"Stare \u0219i Comportament","text":"Atribut Tip Default Descriere Disabled bool false Dezactiveaz\u0103 input-ul ReadOnly bool false Doar citire Immediate bool false Actualizare imediat\u0103 la tastare Debounce int 0 \u00cent\u00e2rziere actualizare (ms) OnlyValidateIfDirty bool false Valideaz\u0103 doar dup\u0103 modificare TextUpdateSuppression bool true Suprim\u0103 actualiz\u0103ri text \u00een server"},{"location":"fod/componente/FodInput/#aspect-si-stil","title":"Aspect \u0219i Stil","text":"Atribut Tip Default Descriere Variant FodVariant Text Stil vizual (Text, Filled, Outlined) Margin Margin None Spa\u021biere (None, Dense, Normal) FullWidth bool false Ocup\u0103 l\u0103\u021bimea container-ului DisableUnderLine bool false Ascunde linia de sub c\u00e2mp Class string - Clase CSS adi\u021bionale Style string - Stiluri CSS inline"},{"location":"fod/componente/FodInput/#adornments","title":"Adornments","text":"Atribut Tip Default Descriere Adornment Adornment None Pozi\u021bie adornment (Start/End) AdornmentIcon string - Iconi\u021ba pentru adornment AdornmentText string - Text pentru adornment AdornmentColor FodColor Default Culoare adornment AdornmentAriaLabel string - Aria label pentru adornment IconSize FodSize Medium Dimensiune iconi\u021b\u0103"},{"location":"fod/componente/FodInput/#functionalitati-numerice","title":"Func\u021bionalit\u0103\u021bi Numerice","text":"Atribut Tip Default Descriere HideSpinButtons bool true Ascunde butoane increment/decrement NumericUpIcon string KeyboardArrowUp Iconi\u021b\u0103 increment NumericDownIcon string KeyboardArrowDown Iconi\u021b\u0103 decrement"},{"location":"fod/componente/FodInput/#clear-button","title":"Clear Button","text":"Atribut Tip Default Descriere Clearable bool false Afi\u0219eaz\u0103 buton \u0219tergere ClearIcon string Clear Iconi\u021b\u0103 pentru \u0219tergere"},{"location":"fod/componente/FodInput/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere ValueChanged EventCallback Declan\u0219at la schimbarea valorii TextChanged EventCallback Declan\u0219at la schimbarea textului OnBlur EventCallback La pierderea focus-ului OnInternalInputChanged EventCallback La schimbarea intern\u0103 KeyDown EventCallback La ap\u0103sare tast\u0103 KeyPress EventCallback La tastare caracter KeyUp EventCallback La eliberare tast\u0103 OnAdornmentClick EventCallback Click pe adornment OnClearButtonClick EventCallback Click pe buton \u0219tergere OnIncrement EventCallback Click increment (numeric) OnDecrement EventCallback Click decrement (numeric) OnMouseWheel EventCallback Scroll mouse wheel"},{"location":"fod/componente/FodInput/#metode-publice","title":"Metode Publice","text":"Metod\u0103 Returneaz\u0103 Descriere FocusAsync() ValueTask Seteaz\u0103 focus pe input BlurAsync() ValueTask Elimin\u0103 focus de pe input SelectAsync() ValueTask Selecteaz\u0103 tot textul SelectRangeAsync(int, int) ValueTask Selecteaz\u0103 interval text SetText(string) Task Seteaz\u0103 text programatic ResetAsync() Task Reseteaz\u0103 la valoare ini\u021bial\u0103 ResetValidation() Task Reseteaz\u0103 starea de validare Validate() Task For\u021beaz\u0103 validarea"},{"location":"fod/componente/FodInput/#tipuri-de-input-suportate","title":"Tipuri de Input Suportate","text":"<pre><code>public enum InputType\n{\n    Text,         // Text standard\n    Password,     // Parol\u0103\n    Email,        // Email cu validare\n    Number,       // Num\u0103r\n    Date,         // Dat\u0103\n    DateTimeLocal,// Dat\u0103 \u0219i or\u0103 local\u0103\n    Month,        // Lun\u0103\n    Time,         // Or\u0103\n    Week,         // S\u0103pt\u0103m\u00e2n\u0103\n    Search,       // C\u0103utare\n    Tel,          // Telefon\n    Url,          // URL\n    Color,        // Selector culoare\n    Hidden        // Ascuns\n}\n</code></pre>"},{"location":"fod/componente/FodInput/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FodInput/#input-cu-validare-personalizata","title":"Input cu Validare Personalizat\u0103","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodInput @bind-Value=\"model.Email\" \n              Label=\"Email\"\n              InputType=\"InputType.Email\"\n              Required=\"true\"\n              RequiredError=\"Email-ul este obligatoriu\"\n              HelperText=\"Introduce\u021bi o adres\u0103 valid\u0103\"\n              Validation=\"@ValidateEmail\" /&gt;\n\n    &lt;FodInput @bind-Value=\"model.Password\"\n              Label=\"Parol\u0103\"\n              InputType=\"InputType.Password\"\n              Required=\"true\"\n              Pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\n              HelperText=\"Minim 8 caractere, o majuscul\u0103, o minuscul\u0103 \u0219i o cifr\u0103\" /&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;\u00cenregistrare&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel model = new();\n\n    private string ValidateEmail(string email)\n    {\n        if (string.IsNullOrEmpty(email))\n            return \"Email-ul este obligatoriu\";\n\n        if (!email.Contains(\"@\"))\n            return \"Email invalid\";\n\n        return null; // Valid\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput/#input-cu-adornments","title":"Input cu Adornments","text":"<pre><code>&lt;!-- C\u00e2mp sum\u0103 cu simbol moned\u0103 --&gt;\n&lt;FodInput @bind-Value=\"amount\"\n          Label=\"Sum\u0103\"\n          InputType=\"InputType.Number\"\n          Adornment=\"Adornment.Start\"\n          AdornmentText=\"MDL\"\n          Placeholder=\"0.00\" /&gt;\n\n&lt;!-- C\u00e2mp c\u0103utare cu iconi\u021b\u0103 --&gt;\n&lt;FodInput @bind-Value=\"searchTerm\"\n          Label=\"C\u0103utare\"\n          InputType=\"InputType.Search\"\n          Adornment=\"Adornment.Start\"\n          AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n          Immediate=\"true\"\n          DebounceInterval=\"300\" /&gt;\n\n&lt;!-- C\u00e2mp parol\u0103 cu toggle vizibilitate --&gt;\n&lt;FodInput @bind-Value=\"password\"\n          Label=\"Parol\u0103\"\n          InputType=\"@passwordInputType\"\n          Adornment=\"Adornment.End\"\n          AdornmentIcon=\"@passwordIcon\"\n          OnAdornmentClick=\"TogglePasswordVisibility\" /&gt;\n\n@code {\n    private string password;\n    private InputType passwordInputType = InputType.Password;\n    private string passwordIcon = FodIcons.Material.Filled.VisibilityOff;\n\n    private void TogglePasswordVisibility()\n    {\n        if (passwordInputType == InputType.Password)\n        {\n            passwordInputType = InputType.Text;\n            passwordIcon = FodIcons.Material.Filled.Visibility;\n        }\n        else\n        {\n            passwordInputType = InputType.Password;\n            passwordIcon = FodIcons.Material.Filled.VisibilityOff;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput/#input-numeric-cu-formatare","title":"Input Numeric cu Formatare","text":"<pre><code>&lt;!-- Pre\u021b cu formatare --&gt;\n&lt;FodInput @bind-Value=\"price\"\n          Label=\"Pre\u021b\"\n          InputType=\"InputType.Number\"\n          Format=\"C2\"\n          Culture=\"@(new CultureInfo(\"ro-RO\"))\"\n          Adornment=\"Adornment.Start\"\n          AdornmentText=\"MDL\" /&gt;\n\n&lt;!-- Procent cu spin buttons --&gt;\n&lt;FodInput @bind-Value=\"percentage\"\n          Label=\"Procent\"\n          InputType=\"InputType.Number\"\n          HideSpinButtons=\"false\"\n          Adornment=\"Adornment.End\"\n          AdornmentText=\"%\"\n          OnIncrement=\"@(() =&gt; percentage = Math.Min(100, percentage + 1))\"\n          OnDecrement=\"@(() =&gt; percentage = Math.Max(0, percentage - 1))\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput/#input-cu-debounce","title":"Input cu Debounce","text":"<pre><code>&lt;FodInput @bind-Value=\"searchQuery\"\n          Label=\"C\u0103utare produse\"\n          Immediate=\"true\"\n          DebounceInterval=\"500\"\n          Clearable=\"true\"\n          OnDebounceIntervalElapsed=\"@PerformSearch\" /&gt;\n\n@code {\n    private string searchQuery;\n\n    private async Task PerformSearch()\n    {\n        if (!string.IsNullOrWhiteSpace(searchQuery))\n        {\n            // Execut\u0103 c\u0103utarea\n            await LoadSearchResults(searchQuery);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput/#textarea-multi-linie","title":"Textarea Multi-linie","text":"<pre><code>&lt;FodInput @bind-Value=\"description\"\n          Label=\"Descriere\"\n          Lines=\"5\"\n          MaxLength=\"500\"\n          HelperText=\"@($\"{description?.Length ?? 0}/500 caractere\")\"\n          FullWidth=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput/#input-cu-validare-in-timp-real","title":"Input cu Validare \u00een Timp Real","text":"<pre><code>&lt;FodInput @bind-Value=\"username\"\n          Label=\"Nume utilizator\"\n          Immediate=\"true\"\n          OnlyValidateIfDirty=\"true\"\n          Validation=\"@ValidateUsername\"\n          HelperTextOnFocus=\"true\"\n          HelperText=\"Minim 3 caractere, f\u0103r\u0103 spa\u021bii\" /&gt;\n\n@code {\n    private string username;\n\n    private async Task&lt;string&gt; ValidateUsername(string value)\n    {\n        if (string.IsNullOrEmpty(value))\n            return \"Numele de utilizator este obligatoriu\";\n\n        if (value.Length &lt; 3)\n            return \"Minim 3 caractere\";\n\n        if (value.Contains(\" \"))\n            return \"Nu sunt permise spa\u021bii\";\n\n        // Verificare disponibilitate\n        var isAvailable = await CheckUsernameAvailability(value);\n        if (!isAvailable)\n            return \"Numele de utilizator este deja folosit\";\n\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput/#variante-de-stil","title":"Variante de Stil","text":"<pre><code>&lt;!-- Variant Text (default) --&gt;\n&lt;FodInput @bind-Value=\"text1\" Label=\"Text\" Variant=\"FodVariant.Text\" /&gt;\n\n&lt;!-- Variant Filled --&gt;\n&lt;FodInput @bind-Value=\"text2\" Label=\"Filled\" Variant=\"FodVariant.Filled\" /&gt;\n\n&lt;!-- Variant Outlined --&gt;\n&lt;FodInput @bind-Value=\"text3\" Label=\"Outlined\" Variant=\"FodVariant.Outlined\" /&gt;\n\n&lt;!-- Dense margin --&gt;\n&lt;FodInput @bind-Value=\"text4\" Label=\"Dense\" Margin=\"Margin.Dense\" /&gt;\n\n&lt;!-- Full width --&gt;\n&lt;FodInput @bind-Value=\"text5\" Label=\"Full Width\" FullWidth=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput/#integrare-cu-formulare","title":"Integrare cu Formulare","text":"<pre><code>&lt;EditForm Model=\"@formModel\" OnValidSubmit=\"@HandleValidSubmit\"&gt;\n    &lt;FodForm&gt;\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FodInput @bind-Value=\"formModel.FirstName\"\n                      For=\"@(() =&gt; formModel.FirstName)\"\n                      Label=\"Prenume\" /&gt;\n        &lt;/FodItem&gt;\n\n        &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n            &lt;FodInput @bind-Value=\"formModel.LastName\"\n                      For=\"@(() =&gt; formModel.LastName)\"\n                      Label=\"Nume\" /&gt;\n        &lt;/FodItem&gt;\n\n        &lt;FodItem xs=\"12\"&gt;\n            &lt;FodInput @bind-Value=\"formModel.Email\"\n                      For=\"@(() =&gt; formModel.Email)\"\n                      Label=\"Email\"\n                      InputType=\"InputType.Email\" /&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodForm&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodInput/#componente-asociate","title":"Componente Asociate","text":"<ul> <li><code>FodInputAdornment</code> - Pentru icoane \u0219i text adi\u021bional</li> <li><code>FodInputLabel</code> - Label floating pentru input</li> <li><code>FodInputControl</code> - Container pentru input cu label \u0219i helper</li> <li><code>FodForm</code> - Container pentru formulare</li> <li><code>FodNumericField&lt;T&gt;</code> - Input numeric specializat</li> </ul>"},{"location":"fod/componente/FodInput/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodInput/#clase-css","title":"Clase CSS","text":"<pre><code>.fod-input\n.fod-input-root\n.fod-input-text\n.fod-input-filled\n.fod-input-outlined\n.fod-input-fullwidth\n.fod-input-disabled\n.fod-input-error\n.fod-input-multiline\n.fod-input-adorned-start\n.fod-input-adorned-end\n.fod-input-margin-dense\n.fod-input-margin-normal\n.fod-input-underline\n.fod-shrink\n.fod-disabled\n.fod-input-input-adorned-start\n.fod-input-input-adorned-end\n</code></pre>"},{"location":"fod/componente/FodInput/#variabile-css","title":"Variabile CSS","text":"<pre><code>--fod-input-underline-color\n--fod-input-underline-hover-color  \n--fod-input-underline-focus-color\n--fod-input-error-color\n--fod-input-disabled-color\n--fod-input-filled-background\n--fod-input-outlined-border\n</code></pre>"},{"location":"fod/componente/FodInput/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>Generics - Componenta suport\u0103 orice tip T care poate fi convertit din/\u00een string</li> <li>Validare - Suport\u0103 at\u00e2t DataAnnotations c\u00e2t \u0219i validare personalizat\u0103</li> <li>Performance - Folosi\u021bi <code>TextUpdateSuppression</code> pe server pentru performan\u021b\u0103</li> <li>Accessibility - Include suport complet ARIA pentru screen readers</li> <li>Mobile - <code>InputMode</code> controleaz\u0103 tastatura pe dispozitive mobile</li> <li>Debounce - Util pentru c\u0103ut\u0103ri sau valid\u0103ri costisitoare</li> </ol>"},{"location":"fod/componente/FodInput/#bune-practici","title":"Bune Practici","text":"<ol> <li>Folosi\u021bi <code>Label</code> \u00eentotdeauna pentru accesibilitate</li> <li>Ad\u0103uga\u021bi <code>HelperText</code> pentru ghidare utilizator</li> <li>Folosi\u021bi <code>Immediate=\"false\"</code> pentru formulare mari</li> <li>Seta\u021bi <code>InputType</code> corect pentru validare browser</li> <li>Folosi\u021bi <code>Debounce</code> pentru opera\u021bii costisitoare</li> <li>Prefera\u021bi <code>For</code> pentru integrare cu EditForm</li> <li>Folosi\u021bi <code>Pattern</code> pentru validare rapid\u0103 client-side</li> </ol>"},{"location":"fod/componente/FodInput/#concluzie","title":"Concluzie","text":"<p>FodInput este componenta fundamental\u0103 pentru lucrul cu date de intrare \u00een aplica\u021bii FOD. Cu suport pentru toate tipurile HTML5, validare puternic\u0103, \u0219i numeroase op\u021biuni de personalizare, ofer\u0103 flexibilitatea necesar\u0103 pentru aproape orice scenariu de formular.</p>"},{"location":"fod/componente/FodInput1/","title":"FodInput1","text":""},{"location":"fod/componente/FodInput1/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInput1&lt;T&gt;</code> este o component\u0103 input generic\u0103 avansat\u0103 care extinde <code>FodBaseInput&lt;T&gt;</code>. Ofer\u0103 suport complet pentru toate tipurile de input HTML5, inclusiv text simplu, textarea multi-linie, input-uri numerice cu butoane increment/decrement, \u0219i suport pentru adornments. Este o component\u0103 de baz\u0103 fundamental\u0103 \u00een biblioteca FOD.</p>"},{"location":"fod/componente/FodInput1/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Input text simplu --&gt;\n&lt;FodInput1 @bind-Value=\"textValue\" \n           Placeholder=\"Introduce\u021bi text...\" /&gt;\n\n&lt;!-- Textarea multi-linie --&gt;\n&lt;FodInput1 @bind-Value=\"description\" \n           Lines=\"5\"\n           Placeholder=\"Descriere...\" /&gt;\n\n&lt;!-- Input numeric cu butoane --&gt;\n&lt;FodInput1 @bind-Value=\"quantity\" \n           InputType=\"InputType.Number\"\n           HideSpinButtons=\"false\" /&gt;\n\n&lt;!-- Input cu adornments --&gt;\n&lt;FodInput1 @bind-Value=\"email\" \n           InputType=\"InputType.Email\"\n           Adornment=\"Adornment.Start\"\n           AdornmentIcon=\"@FodIcons.Material.Filled.Email\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput1/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":""},{"location":"fod/componente/FodInput1/#parametri-principali","title":"Parametri Principali","text":"Parametru Tip Default Descriere InputType InputType Text Tipul input-ului HTML5 Lines int 1 Num\u0103r r\u00e2nduri pentru textarea Placeholder string null Text placeholder Clearable bool false Afi\u0219eaz\u0103 buton clear HideSpinButtons bool true Ascunde butoane pentru numeric MaxLength int? null Lungime maxim\u0103 text Pattern string null Pattern pentru validare InputMode InputMode - Mod tastatur\u0103 mobil\u0103"},{"location":"fod/componente/FodInput1/#parametri-adornment","title":"Parametri Adornment","text":"Parametru Tip Default Descriere Adornment Adornment None Pozi\u021bie adornment (Start/End) AdornmentIcon string null Icon pentru adornment AdornmentText string null Text pentru adornment AdornmentColor FodColor Default Culoare adornment AdornmentAriaLabel string null Label accesibilitate OnAdornmentClick EventCallback - Click handler pentru adornment"},{"location":"fod/componente/FodInput1/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere OnIncrement EventCallback Click pe buton increment OnDecrement EventCallback Click pe buton decrement OnClearButtonClick EventCallback Click pe buton clear OnMouseWheel EventCallback Scroll cu mouse wheel OnPaste EventCallback Paste content"},{"location":"fod/componente/FodInput1/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodInput1/#input-cu-validare-in-timp-real","title":"Input cu Validare \u00een Timp Real","text":"<pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;FodInput1 @bind-Value=\"username\" \n               Placeholder=\"Nume utilizator\"\n               Pattern=\"^[a-zA-Z0-9_]{3,20}$\"\n               Immediate=\"true\"\n               Clearable=\"true\"\n               @bind-Value:after=\"ValidateUsername\" /&gt;\n\n    @if (!string.IsNullOrEmpty(validationMessage))\n    {\n        &lt;div class=\"validation-feedback @(isValid ? \"valid\" : \"invalid\")\"&gt;\n            @validationMessage\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string username;\n    private string validationMessage;\n    private bool isValid;\n\n    private void ValidateUsername()\n    {\n        if (string.IsNullOrEmpty(username))\n        {\n            validationMessage = \"\";\n            return;\n        }\n\n        if (username.Length &lt; 3)\n        {\n            validationMessage = \"Minim 3 caractere\";\n            isValid = false;\n        }\n        else if (!System.Text.RegularExpressions.Regex.IsMatch(username, \"^[a-zA-Z0-9_]+$\"))\n        {\n            validationMessage = \"Doar litere, cifre \u0219i underscore\";\n            isValid = false;\n        }\n        else\n        {\n            validationMessage = \"\u2713 Nume utilizator valid\";\n            isValid = true;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#textarea-cu-contor-de-caractere","title":"Textarea cu Contor de Caractere","text":"<pre><code>&lt;div class=\"textarea-container\"&gt;\n    &lt;FodInput1 @bind-Value=\"comment\" \n               Lines=\"4\"\n               MaxLength=\"500\"\n               Placeholder=\"Comentariul dvs...\"\n               @bind-Value:after=\"UpdateCharCount\" /&gt;\n\n    &lt;div class=\"char-counter\"&gt;\n        @comment.Length / @maxLength caractere\n        @if (comment.Length &gt; maxLength * 0.9)\n        {\n            &lt;span class=\"text-warning\"&gt; (aproape de limit\u0103)&lt;/span&gt;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string comment = \"\";\n    private int maxLength = 500;\n\n    private void UpdateCharCount()\n    {\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#input-numeric-cu-control-custom","title":"Input Numeric cu Control Custom","text":"<pre><code>&lt;div class=\"quantity-control\"&gt;\n    &lt;label&gt;Cantitate:&lt;/label&gt;\n    &lt;FodInput1 @bind-Value=\"quantity\" \n               InputType=\"InputType.Number\"\n               HideSpinButtons=\"false\"\n               OnIncrement=\"IncrementQuantity\"\n               OnDecrement=\"DecrementQuantity\"\n               OnMouseWheel=\"HandleMouseWheel\"\n               min=\"1\"\n               max=\"@maxStock\" /&gt;\n\n    &lt;div class=\"stock-info\"&gt;\n        Stoc disponibil: @maxStock unit\u0103\u021bi\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private int quantity = 1;\n    private int maxStock = 100;\n\n    private void IncrementQuantity()\n    {\n        if (quantity &lt; maxStock)\n            quantity++;\n    }\n\n    private void DecrementQuantity()\n    {\n        if (quantity &gt; 1)\n            quantity--;\n    }\n\n    private void HandleMouseWheel(WheelEventArgs e)\n    {\n        if (e.DeltaY &lt; 0 &amp;&amp; quantity &lt; maxStock)\n            quantity++;\n        else if (e.DeltaY &gt; 0 &amp;&amp; quantity &gt; 1)\n            quantity--;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#input-cu-adornments-functionale","title":"Input cu Adornments Func\u021bionale","text":"<pre><code>&lt;!-- Parol\u0103 cu toggle vizibilitate --&gt;\n&lt;div class=\"password-input\"&gt;\n    &lt;FodInput1 @bind-Value=\"password\" \n               InputType=\"@passwordType\"\n               Placeholder=\"Parol\u0103\"\n               Adornment=\"Adornment.End\"\n               AdornmentIcon=\"@visibilityIcon\"\n               OnAdornmentClick=\"TogglePasswordVisibility\"\n               AdornmentAriaLabel=\"Toggle password visibility\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- Search cu clear --&gt;\n&lt;div class=\"search-input\"&gt;\n    &lt;FodInput1 @bind-Value=\"searchQuery\" \n               Placeholder=\"C\u0103uta\u021bi...\"\n               Adornment=\"Adornment.Start\"\n               AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n               Clearable=\"true\"\n               OnClearButtonClick=\"ClearSearch\"\n               Immediate=\"true\"\n               @bind-Value:after=\"PerformSearch\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- URL cu buton deschidere --&gt;\n&lt;div class=\"url-input\"&gt;\n    &lt;FodInput1 @bind-Value=\"websiteUrl\" \n               InputType=\"InputType.Url\"\n               Placeholder=\"https://example.com\"\n               Adornment=\"Adornment.End\"\n               AdornmentIcon=\"@FodIcons.Material.Filled.OpenInNew\"\n               OnAdornmentClick=\"OpenWebsite\"\n               AdornmentAriaLabel=\"Open in new window\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private string password;\n    private InputType passwordType = InputType.Password;\n    private string visibilityIcon = FodIcons.Material.Filled.Visibility;\n\n    private string searchQuery;\n    private string websiteUrl;\n\n    private void TogglePasswordVisibility()\n    {\n        if (passwordType == InputType.Password)\n        {\n            passwordType = InputType.Text;\n            visibilityIcon = FodIcons.Material.Filled.VisibilityOff;\n        }\n        else\n        {\n            passwordType = InputType.Password;\n            visibilityIcon = FodIcons.Material.Filled.Visibility;\n        }\n    }\n\n    private async Task ClearSearch(MouseEventArgs e)\n    {\n        searchQuery = \"\";\n        await PerformSearch();\n    }\n\n    private async Task PerformSearch()\n    {\n        // Implementare c\u0103utare\n        await Task.Delay(300); // Debounce\n    }\n\n    private async Task OpenWebsite()\n    {\n        if (!string.IsNullOrEmpty(websiteUrl))\n        {\n            await JS.InvokeVoidAsync(\"window.open\", websiteUrl, \"_blank\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#input-complex-cu-childcontent","title":"Input Complex cu ChildContent","text":"<pre><code>&lt;!-- Input hidden cu con\u021binut custom --&gt;\n&lt;FodInput1 @bind-Value=\"hiddenValue\" \n           InputType=\"InputType.Hidden\"&gt;\n    &lt;ChildContent&gt;\n        &lt;div class=\"custom-display\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" /&gt;\n            &lt;span&gt;Valoare ascuns\u0103: @hiddenValue&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodInput1&gt;\n\n&lt;!-- Color picker cu preview --&gt;\n&lt;div class=\"color-picker-container\"&gt;\n    &lt;FodInput1 @bind-Value=\"selectedColor\" \n               InputType=\"InputType.Color\"\n               Adornment=\"Adornment.End\"\n               AdornmentText=\"@selectedColor\" /&gt;\n\n    &lt;div class=\"color-preview\" style=\"background-color: @selectedColor;\"&gt;\n        Preview\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string hiddenValue = \"secret-value\";\n    private string selectedColor = \"#007bff\";\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodInput1/#variante","title":"Variante","text":"<pre><code>&lt;!-- Text variant (default) --&gt;\n&lt;FodInput1 @bind-Value=\"value1\" Variant=\"FodVariant.Text\" /&gt;\n\n&lt;!-- Filled variant --&gt;\n&lt;FodInput1 @bind-Value=\"value2\" Variant=\"FodVariant.Filled\" /&gt;\n\n&lt;!-- Outlined variant --&gt;\n&lt;FodInput1 @bind-Value=\"value3\" Variant=\"FodVariant.Outlined\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInput1/#clase-css-generate","title":"Clase CSS Generate","text":"<p>Componenta genereaz\u0103 clase folosind <code>FodInputCssHelper</code>:</p> <pre><code>protected string Classname =&gt; FodInputCssHelper.GetClassname(this, ...);\nprotected string InputClassname =&gt; FodInputCssHelper.GetInputClassname(this);\nprotected string AdornmentClassname =&gt; FodInputCssHelper.GetAdornmentClassname(this);\n</code></pre>"},{"location":"fod/componente/FodInput1/#css-personalizat","title":"CSS Personalizat","text":"<pre><code>/* Stilizare pentru clearable button */\n.fod-input-clear-button {\n    opacity: 0;\n    transition: opacity 0.3s;\n}\n\n.fod-input:hover .fod-input-clear-button,\n.fod-input:focus-within .fod-input-clear-button {\n    opacity: 1;\n}\n\n/* Stilizare pentru spin buttons */\n.fod-input-numeric-spin {\n    display: flex;\n    flex-direction: column;\n    margin-left: -2rem;\n}\n\n.fod-input-numeric-spin button {\n    height: 1rem;\n    padding: 0;\n    min-width: 1.5rem;\n}\n\n/* Stilizare pentru multi-line */\n.fod-input textarea {\n    resize: vertical;\n    min-height: 4rem;\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#focus-management","title":"Focus Management","text":"<pre><code>// Focus pe input\nawait inputRef.FocusAsync();\n\n// Blur\nawait inputRef.BlurAsync();\n\n// Selectare tot textul\nawait inputRef.SelectAsync();\n\n// Selectare interval specific\nawait inputRef.SelectRangeAsync(0, 5);\n</code></pre>"},{"location":"fod/componente/FodInput1/#text-update-suppression","title":"Text Update Suppression","text":"<p>Pentru Server-Side Blazor, componenta suport\u0103 suprimarea actualiz\u0103rilor de text \u00een timpul focus-ului:</p> <pre><code>if (RuntimeLocation.IsServerSide &amp;&amp; TextUpdateSuppression)\n{\n    if (!_isFocused || _forceTextUpdate)\n        _internalText = Text;\n}\n</code></pre>"},{"location":"fod/componente/FodInput1/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>ARIA attributes: <code>aria-invalid</code>, <code>aria-describedby</code>, <code>aria-label</code></li> <li>Proper <code>tabindex</code> management</li> <li>Keyboard navigation support</li> <li>Screen reader friendly</li> </ul>"},{"location":"fod/componente/FodInput1/#input-types-native-cu-placeholder","title":"Input Types Native cu Placeholder","text":"<p>Anumite tipuri de input HTML5 au placeholder nativ: - Color - Date - DateTimeLocal - Month - Time - Week</p>"},{"location":"fod/componente/FodInput1/#best-practices","title":"Best Practices","text":"<ol> <li>Alege\u021bi InputType corect - Pentru experien\u021b\u0103 optim\u0103 pe mobil</li> <li>Folosi\u021bi Pattern pentru validare - Validare client-side</li> <li>Clearable pentru c\u0103ut\u0103ri - UX \u00eembun\u0103t\u0103\u021bit</li> <li>Adornments pentru context - Iconi\u021be relevante</li> <li>MaxLength pentru limite - Preveni\u021bi input excesiv</li> </ol>"},{"location":"fod/componente/FodInput1/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Immediate mode: update la fiecare tast\u0103</li> <li>Non-immediate: update doar la blur/enter</li> <li>Text suppression \u00een SSR pentru performan\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodInput1/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Nu suport\u0103 mask pentru input</li> <li>Spin buttons doar pentru type=\"number\"</li> <li>ChildContent doar pentru type=\"hidden\"</li> </ul>"},{"location":"fod/componente/FodInput1/#concluzie","title":"Concluzie","text":"<p>FodInput1 este o component\u0103 input extrem de flexibil\u0103 \u0219i puternic\u0103, oferind suport complet pentru toate scenariile de input din aplica\u021bii web moderne. Cu suport pentru multiple tipuri, adornments, validare \u0219i caracteristici avansate, este funda\u021bia perfect\u0103 pentru construirea de formulare complexe.</p>"},{"location":"fod/componente/FodInputAdornment/","title":"FodInputAdornment","text":""},{"location":"fod/componente/FodInputAdornment/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputAdornment</code> este o component\u0103 intern\u0103 folosit\u0103 pentru a ad\u0103uga text sau iconi\u021be la \u00eenceputul sau sf\u00e2r\u0219itul input-urilor. Face parte din namespace-ul <code>Fod.Components.Internal</code> \u0219i este utilizat\u0103 de componente precum <code>FodInput</code>, <code>FodRangeInput</code> \u0219i altele pentru a oferi context vizual sau func\u021bionalitate adi\u021bional\u0103.</p>"},{"location":"fod/componente/FodInputAdornment/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Adornment cu text --&gt;\n&lt;FodInputAdornment Text=\"MDL\" \n                   Edge=\"Edge.End\" \n                   Color=\"FodColor.Default\" /&gt;\n\n&lt;!-- Adornment cu icon --&gt;\n&lt;FodInputAdornment Icon=\"@FodIcons.Material.Filled.Search\" \n                   Edge=\"Edge.Start\" /&gt;\n\n&lt;!-- Adornment cu icon clickable --&gt;\n&lt;FodInputAdornment Icon=\"@FodIcons.Material.Filled.Visibility\" \n                   Edge=\"Edge.End\"\n                   AdornmentClick=\"@TogglePasswordVisibility\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Text string null Text de afi\u0219at Icon string null Icon de afi\u0219at Edge Edge - Pozi\u021bia (Start/End) Size FodSize Medium Dimensiunea icon-ului Color FodColor Default Culoarea text/icon AriaLabel string null Label pentru accesibilitate AdornmentClick EventCallback - Handler pentru click Class string null Clase CSS adi\u021bionale"},{"location":"fod/componente/FodInputAdornment/#logica-de-afisare","title":"Logica de Afi\u0219are","text":"<p>Componenta afi\u0219eaz\u0103 con\u021binut bazat pe prioritate: 1. Dac\u0103 <code>Text</code> este setat - afi\u0219eaz\u0103 text 2. Altfel, dac\u0103 <code>Icon</code> este setat:    - Cu <code>AdornmentClick</code> - afi\u0219eaz\u0103 <code>FodIconButton</code>    - F\u0103r\u0103 <code>AdornmentClick</code> - afi\u0219eaz\u0103 <code>FodIcon</code></p>"},{"location":"fod/componente/FodInputAdornment/#exemple-de-utilizare-in-componente","title":"Exemple de Utilizare \u00een Componente","text":""},{"location":"fod/componente/FodInputAdornment/#in-fodinput-pentru-valuta","title":"\u00cen FodInput pentru Valut\u0103","text":"<pre><code>&lt;FodInput @bind-Value=\"amount\"\n          Label=\"Pre\u021b\"\n          InputType=\"InputType.Number\"\n          Adornment=\"Adornment.Start\"\n          AdornmentText=\"MDL\" /&gt;\n\n&lt;!-- Rezultat intern --&gt;\n&lt;div class=\"fod-input-adornment-start\"&gt;\n    &lt;FodText Color=\"Default\" tabindex=\"-1\"&gt;MDL&lt;/FodText&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#in-fodinput-pentru-cautare","title":"\u00cen FodInput pentru C\u0103utare","text":"<pre><code>&lt;FodInput @bind-Value=\"searchTerm\"\n          Placeholder=\"C\u0103uta\u021bi...\"\n          Adornment=\"Adornment.Start\"\n          AdornmentIcon=\"@FodIcons.Material.Filled.Search\" /&gt;\n\n&lt;!-- Rezultat intern --&gt;\n&lt;div class=\"fod-input-adornment-start\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Search\" \n             Size=\"Medium\" \n             Color=\"Default\" \n             aria-label=\"Icon\" \n             tabindex=\"-1\"/&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#in-fodinput-pentru-parola","title":"\u00cen FodInput pentru Parol\u0103","text":"<pre><code>&lt;FodInput @bind-Value=\"password\"\n          InputType=\"@passwordInputType\"\n          Label=\"Parol\u0103\"\n          Adornment=\"Adornment.End\"\n          AdornmentIcon=\"@passwordIcon\"\n          OnAdornmentClick=\"@TogglePassword\" /&gt;\n\n@code {\n    private string password;\n    private InputType passwordInputType = InputType.Password;\n    private string passwordIcon = FodIcons.Material.Filled.Visibility;\n\n    private void TogglePassword()\n    {\n        if (passwordInputType == InputType.Password)\n        {\n            passwordInputType = InputType.Text;\n            passwordIcon = FodIcons.Material.Filled.VisibilityOff;\n        }\n        else\n        {\n            passwordInputType = InputType.Password;\n            passwordIcon = FodIcons.Material.Filled.Visibility;\n        }\n    }\n}\n\n&lt;!-- Rezultat intern c\u00e2nd are OnAdornmentClick --&gt;\n&lt;div class=\"fod-input-adornment-end\"&gt;\n    &lt;FodIconButton Icon=\"@passwordIcon\" \n                   OnClick=\"@AdornmentClick\" \n                   Edge=\"End\" \n                   Size=\"Medium\" \n                   Color=\"Default\" \n                   aria-label=\"Icon Button\" \n                   tabindex=\"-1\"/&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#exemple-complete-de-input-uri-cu-adornments","title":"Exemple Complete de Input-uri cu Adornments","text":"<pre><code>&lt;!-- Email cu icon --&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;FodInput @bind-Value=\"email\"\n              Label=\"Email\"\n              InputType=\"InputType.Email\"\n              Adornment=\"Adornment.Start\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.Email\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- Telefon cu prefix --&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;FodInput @bind-Value=\"phone\"\n              Label=\"Telefon\"\n              Adornment=\"Adornment.Start\"\n              AdornmentText=\"+373\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- URL cu buton de deschidere --&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;FodInput @bind-Value=\"website\"\n              Label=\"Website\"\n              InputType=\"InputType.Url\"\n              Adornment=\"Adornment.End\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.OpenInNew\"\n              OnAdornmentClick=\"@OpenWebsite\" /&gt;\n&lt;/div&gt;\n\n&lt;!-- Sum\u0103 cu unitate de m\u0103sur\u0103 --&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;FodInput @bind-Value=\"weight\"\n              Label=\"Greutate\"\n              InputType=\"InputType.Number\"\n              Adornment=\"Adornment.End\"\n              AdornmentText=\"kg\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private string email, phone, website;\n    private decimal weight;\n\n    private async Task OpenWebsite()\n    {\n        if (!string.IsNullOrEmpty(website))\n        {\n            await JS.InvokeVoidAsync(\"window.open\", website, \"_blank\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#stilizare-prin-clase-css","title":"Stilizare prin Clase CSS","text":"<pre><code>/* Pozi\u021bionare pentru Edge.Start */\n.fod-input-adornment-start {\n    display: flex;\n    align-items: center;\n    margin-right: 8px;\n}\n\n/* Pozi\u021bionare pentru Edge.End */\n.fod-input-adornment-end {\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n}\n\n/* Text adornment */\n.fod-input-adornment-start .fod-text,\n.fod-input-adornment-end .fod-text {\n    white-space: nowrap;\n    color: #6c757d;\n}\n\n/* Icon adornment */\n.fod-input-adornment-start .fod-icon,\n.fod-input-adornment-end .fod-icon {\n    color: #6c757d;\n}\n\n/* Icon button adornment */\n.fod-input-adornment-start .fod-icon-button,\n.fod-input-adornment-end .fod-icon-button {\n    padding: 4px;\n}\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#utilizare-customizata","title":"Utilizare Customizat\u0103","text":"<pre><code>&lt;!-- Adornment complex cu tooltip --&gt;\n&lt;div class=\"custom-input-wrapper\"&gt;\n    &lt;FodInputAdornment Icon=\"@FodIcons.Material.Filled.Info\" \n                       Edge=\"Edge.End\"\n                       Color=\"FodColor.Primary\"\n                       AriaLabel=\"Informa\u021bii despre c\u00e2mp\"\n                       Class=\"info-adornment\" /&gt;\n    &lt;FodTooltip Text=\"Acest c\u00e2mp accept\u0103 doar litere \u0219i cifre\"&gt;\n        &lt;div class=\"info-icon-wrapper\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodTooltip&gt;\n&lt;/div&gt;\n\n&lt;!-- Adornment cu stare dinamic\u0103 --&gt;\n&lt;FodInputAdornment Icon=\"@GetValidationIcon()\" \n                   Edge=\"Edge.End\"\n                   Color=\"@GetValidationColor()\"\n                   AriaLabel=\"@GetValidationMessage()\" /&gt;\n\n@code {\n    private string GetValidationIcon()\n    {\n        return isValid ? FodIcons.Material.Filled.CheckCircle : FodIcons.Material.Filled.Error;\n    }\n\n    private FodColor GetValidationColor()\n    {\n        return isValid ? FodColor.Success : FodColor.Error;\n    }\n\n    private string GetValidationMessage()\n    {\n        return isValid ? \"C\u00e2mp valid\" : \"C\u00e2mp invalid\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#accesibilitate","title":"Accesibilitate","text":"<ol> <li>tabindex=\"-1\" - Previne focus-ul pe elemente decorative</li> <li>AriaLabel - Ofer\u0103 context pentru screen readers</li> <li>Valori implicite - \"Icon\" sau \"Icon Button\" c\u00e2nd AriaLabel lipse\u0219te</li> <li>Semantic\u0103 - Folose\u0219te componente semantice (FodText, FodIcon)</li> </ol>"},{"location":"fod/componente/FodInputAdornment/#integrare-cu-edge","title":"Integrare cu Edge","text":"<pre><code>public enum Edge\n{\n    Start,  // St\u00e2nga \u00een LTR, dreapta \u00een RTL\n    End     // Dreapta \u00een LTR, st\u00e2nga \u00een RTL\n}\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#best-practices","title":"Best Practices","text":"<ol> <li>Un singur tip - Folosi\u021bi fie Text, fie Icon, nu ambele</li> <li>AriaLabel pentru iconi\u021be - \u00centotdeauna pentru accesibilitate</li> <li>Click doar c\u00e2nd necesar - Nu toate iconi\u021bele necesit\u0103 interac\u021biune</li> <li>Culori consistente - Folosi\u021bi tema aplica\u021biei</li> <li>Dimensiuni potrivite - Size s\u0103 fie propor\u021bional cu input-ul</li> </ol>"},{"location":"fod/componente/FodInputAdornment/#cazuri-de-utilizare-comune","title":"Cazuri de Utilizare Comune","text":""},{"location":"fod/componente/FodInputAdornment/#unitati-de-masura","title":"Unit\u0103\u021bi de M\u0103sur\u0103","text":"<pre><code>AdornmentText=\"km\"\nAdornmentText=\"m\u00b2\"\nAdornmentText=\"%\"\nAdornmentText=\"\u00b0C\"\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#iconite-functionale","title":"Iconi\u021be Func\u021bionale","text":"<pre><code>AdornmentIcon=\"@FodIcons.Material.Filled.CalendarToday\"  // Date picker\nAdornmentIcon=\"@FodIcons.Material.Filled.AccessTime\"     // Time picker\nAdornmentIcon=\"@FodIcons.Material.Filled.AttachFile\"     // File upload\nAdornmentIcon=\"@FodIcons.Material.Filled.LocationOn\"     // Location\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#prefixesufixe","title":"Prefixe/Sufixe","text":"<pre><code>AdornmentText=\"https://\"     // URL prefix\nAdornmentText=\"@gmail.com\"   // Email suffix\nAdornmentText=\"#\"            // Number prefix\n</code></pre>"},{"location":"fod/componente/FodInputAdornment/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Nu suport\u0103 con\u021binut complex (doar text sau icon)</li> <li>Nu poate avea at\u00e2t text c\u00e2t \u0219i icon simultan</li> <li>Nu suport\u0103 styling direct (folose\u0219te clase CSS)</li> <li>Componenta intern\u0103 - nu pentru utilizare direct\u0103</li> </ul>"},{"location":"fod/componente/FodInputAdornment/#concluzie","title":"Concluzie","text":"<p>FodInputAdornment este o component\u0103 esen\u021bial\u0103 pentru \u00eembun\u0103t\u0103\u021birea UX-ului input-urilor, oferind context vizual \u0219i func\u021bionalitate adi\u021bional\u0103. De\u0219i este o component\u0103 intern\u0103, \u00een\u021belegerea func\u021bion\u0103rii sale ajut\u0103 la utilizarea corect\u0103 a adornments \u00een componentele de input FOD.</p>"},{"location":"fod/componente/FodInputCheckbox/","title":"FodInputCheckbox","text":""},{"location":"fod/componente/FodInputCheckbox/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputCheckbox</code> este o component\u0103 wrapper pentru checkbox-uri care extinde <code>FODFormComponent&lt;bool&gt;</code> \u0219i integreaz\u0103 componenta <code>FodCheckbox</code> cu sistemul de formulare Blazor. Ofer\u0103 suport complet pentru validare, layout consistent prin <code>FODInputWrapper</code> \u0219i poate afi\u0219a at\u00e2t checkbox-uri tradi\u021bionale c\u00e2t \u0219i switch-uri.</p>"},{"location":"fod/componente/FodInputCheckbox/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Checkbox simplu --&gt;\n&lt;FodInputCheckbox @bind-Value=\"isActive\" \n                  Label=\"Activ\" /&gt;\n\n&lt;!-- Checkbox tip switch --&gt;\n&lt;FodInputCheckbox @bind-Value=\"enableNotifications\" \n                  Label=\"Activeaz\u0103 notific\u0103ri\"\n                  Type=\"FodCheckboxType.Switch\" /&gt;\n\n&lt;!-- Checkbox readonly --&gt;\n&lt;FodInputCheckbox @bind-Value=\"isConfirmed\" \n                  Label=\"Confirmat\"\n                  Readonly=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#diferenta-fata-de-fodcheckbox","title":"Diferen\u021ba fa\u021b\u0103 de FodCheckbox","text":"Caracteristic\u0103 FodInputCheckbox FodCheckbox Integrare EditForm Da Nu FODInputWrapper Da Nu Validare Da Nu Layout formular Da Nu Simplicitate Nu Da"},{"location":"fod/componente/FodInputCheckbox/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Value bool false Valoarea curent\u0103 Type FodCheckboxType Checkbox Tipul afi\u0219\u0103rii (Checkbox/Switch) Label string null Eticheta checkbox-ului Readonly bool false Dezactiveaz\u0103 checkbox-ul Description string null Descriere pentru tooltip Required bool? null Marcheaz\u0103 ca obligatoriu"},{"location":"fod/componente/FodInputCheckbox/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodInputCheckbox/#formular-de-setari","title":"Formular de Set\u0103ri","text":"<pre><code>&lt;EditForm Model=\"@settings\" OnValidSubmit=\"@SaveSettings\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"settings-section\"&gt;\n        &lt;h4&gt;Notific\u0103ri&lt;/h4&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"settings.EmailNotifications\" \n                          Label=\"Notific\u0103ri prin email\"\n                          Description=\"Primi\u021bi actualiz\u0103ri importante prin email\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"settings.SmsNotifications\" \n                          Label=\"Notific\u0103ri SMS\"\n                          Description=\"Primi\u021bi alerte urgente prin SMS\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"settings.PushNotifications\" \n                          Label=\"Notific\u0103ri push\"\n                          Type=\"FodCheckboxType.Switch\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"settings-section\"&gt;\n        &lt;h4&gt;Confiden\u021bialitate&lt;/h4&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"settings.PublicProfile\" \n                          Label=\"Profil public\"\n                          Type=\"FodCheckboxType.Switch\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"settings.ShowEmail\" \n                          Label=\"Afi\u0219eaz\u0103 email-ul \u00een profil\"\n                          Readonly=\"@(!settings.PublicProfile)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Salveaz\u0103 set\u0103rile&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserSettings settings = new();\n\n    public class UserSettings\n    {\n        public bool EmailNotifications { get; set; } = true;\n        public bool SmsNotifications { get; set; }\n        public bool PushNotifications { get; set; } = true;\n        public bool PublicProfile { get; set; }\n        public bool ShowEmail { get; set; }\n\n        [Range(typeof(bool), \"true\", \"true\", \n               ErrorMessage = \"Trebuie s\u0103 accepta\u021bi termenii\")]\n        public bool AcceptTerms { get; set; }\n    }\n\n    private async Task SaveSettings()\n    {\n        await SettingsService.SaveUserSettings(settings);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#termeni-si-conditii","title":"Termeni \u0219i Condi\u021bii","text":"<pre><code>&lt;EditForm Model=\"@registration\" OnValidSubmit=\"@CompleteRegistration\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodInputCheckbox @bind-Value=\"registration.AcceptTerms\" \n                          Label=\"Accept termenii \u0219i condi\u021biile\"\n                          Description=\"Citi\u021bi termenii \u00eenainte de a accepta\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodInputCheckbox @bind-Value=\"registration.AcceptPrivacy\" \n                          Label=\"Accept politica de confiden\u021bialitate\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodInputCheckbox @bind-Value=\"registration.SubscribeNewsletter\" \n                          Label=\"Doresc s\u0103 primesc newsletter\"\n                          Type=\"FodCheckboxType.Switch\" /&gt;\n    &lt;/div&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\" \n            class=\"btn btn-primary\"\n            disabled=\"@(!registration.AcceptTerms || !registration.AcceptPrivacy)\"&gt;\n        \u00cenregistrare\n    &lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private RegistrationModel registration = new();\n\n    public class RegistrationModel\n    {\n        [Range(typeof(bool), \"true\", \"true\", \n               ErrorMessage = \"Trebuie s\u0103 accepta\u021bi termenii\")]\n        public bool AcceptTerms { get; set; }\n\n        [Range(typeof(bool), \"true\", \"true\", \n               ErrorMessage = \"Trebuie s\u0103 accepta\u021bi politica de confiden\u021bialitate\")]\n        public bool AcceptPrivacy { get; set; }\n\n        public bool SubscribeNewsletter { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#filtre-dinamice","title":"Filtre Dinamice","text":"<pre><code>&lt;div class=\"filters-container\"&gt;\n    &lt;h4&gt;Filtreaz\u0103 rezultatele&lt;/h4&gt;\n\n    &lt;FodInputCheckbox @bind-Value=\"filters.ShowActive\" \n                      Label=\"Doar active\"\n                      @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;FodInputCheckbox @bind-Value=\"filters.ShowCompleted\" \n                      Label=\"Include\u021bi completate\"\n                      Type=\"FodCheckboxType.Switch\"\n                      @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;FodInputCheckbox @bind-Value=\"filters.ShowArchived\" \n                      Label=\"Arat\u0103 arhivate\"\n                      @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;div class=\"mt-3\"&gt;\n        &lt;small class=\"text-muted\"&gt;\n            Afi\u0219eaz\u0103 @filteredItems.Count din @allItems.Count elemente\n        &lt;/small&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FilterModel filters = new();\n    private List&lt;Item&gt; allItems = new();\n    private List&lt;Item&gt; filteredItems = new();\n\n    public class FilterModel\n    {\n        public bool ShowActive { get; set; } = true;\n        public bool ShowCompleted { get; set; }\n        public bool ShowArchived { get; set; }\n    }\n\n    private void ApplyFilters()\n    {\n        filteredItems = allItems.Where(item =&gt;\n            (filters.ShowActive &amp;&amp; item.Status == \"Active\") ||\n            (filters.ShowCompleted &amp;&amp; item.Status == \"Completed\") ||\n            (filters.ShowArchived &amp;&amp; item.Status == \"Archived\")\n        ).ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#checkbox-uri-conditionate","title":"Checkbox-uri Condi\u021bionate","text":"<pre><code>&lt;div class=\"conditional-checkboxes\"&gt;\n    &lt;FodInputCheckbox @bind-Value=\"enableAdvanced\" \n                      Label=\"Activeaz\u0103 op\u021biuni avansate\"\n                      Type=\"FodCheckboxType.Switch\" /&gt;\n\n    @if (enableAdvanced)\n    {\n        &lt;div class=\"advanced-options ms-4 mt-3\"&gt;\n            &lt;FodInputCheckbox @bind-Value=\"option1\" \n                              Label=\"Op\u021biune avansat\u0103 1\" /&gt;\n\n            &lt;FodInputCheckbox @bind-Value=\"option2\" \n                              Label=\"Op\u021biune avansat\u0103 2\" /&gt;\n\n            &lt;FodInputCheckbox @bind-Value=\"option3\" \n                              Label=\"Op\u021biune avansat\u0103 3\" /&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;FodInputCheckbox @bind-Value=\"enableDebug\" \n                      Label=\"Mod debug\"\n                      Readonly=\"@(!enableAdvanced)\"\n                      Description=\"Necesit\u0103 op\u021biuni avansate activate\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private bool enableAdvanced;\n    private bool option1, option2, option3;\n    private bool enableDebug;\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#validare-customizata","title":"Validare Customizat\u0103","text":"<pre><code>&lt;EditForm Model=\"@consent\" OnValidSubmit=\"@ProcessConsent\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n    &lt;ValidationSummary /&gt;\n\n    &lt;div class=\"consent-form\"&gt;\n        &lt;h4&gt;Consim\u021b\u0103m\u00e2nt procesare date&lt;/h4&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"consent.AllowDataProcessing\" \n                          Label=\"Permit procesarea datelor personale\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"consent.AllowMarketing\" \n                          Label=\"Permit comunic\u0103ri de marketing\"\n                          Readonly=\"@(!consent.AllowDataProcessing)\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"consent.AllowThirdParty\" \n                          Label=\"Permit partajarea cu ter\u021bi\"\n                          Readonly=\"@(!consent.AllowDataProcessing)\" /&gt;\n\n        &lt;FodInputCheckbox @bind-Value=\"consent.ConfirmAge\" \n                          Label=\"Confirm c\u0103 am peste 18 ani\" /&gt;\n    &lt;/div&gt;\n\n    &lt;button type=\"submit\" class=\"btn btn-primary mt-3\"&gt;\n        Confirm\u0103\n    &lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ConsentModel consent = new();\n\n    public class ConsentModel : IValidatableObject\n    {\n        public bool AllowDataProcessing { get; set; }\n        public bool AllowMarketing { get; set; }\n        public bool AllowThirdParty { get; set; }\n\n        [Range(typeof(bool), \"true\", \"true\", \n               ErrorMessage = \"Trebuie s\u0103 confirma\u021bi v\u00e2rsta\")]\n        public bool ConfirmAge { get; set; }\n\n        public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n        {\n            if (!AllowDataProcessing &amp;&amp; (AllowMarketing || AllowThirdParty))\n            {\n                yield return new ValidationResult(\n                    \"Nu pute\u021bi permite marketing sau partajare f\u0103r\u0103 procesare date\",\n                    new[] { nameof(AllowDataProcessing) });\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#conversie-tipuri","title":"Conversie Tipuri","text":"<p>Componenta suport\u0103 conversie automat\u0103 din diferite tipuri:</p> <pre><code>private bool GetBoolValueFromObject(object value)\n{\n    if (value is bool)\n        return (bool)value;\n\n    if (value is int)\n        return (int)value == 1;\n\n    if (value is string)\n        return (string)value == \"true\";\n\n    return false;\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodInputCheckbox/#stil-container","title":"Stil Container","text":"<pre><code>/* Stilul implicit al wrapper-ului */\n.form-control.fod {\n    border: none;\n    padding: 0;\n    height: auto;\n    background: transparent;\n}\n\n/* Spacing pentru checkbox-uri multiple */\n.form-group:has(.fod-input-checkbox) {\n    margin-bottom: 0.75rem;\n}\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#teme-personalizate","title":"Teme Personalizate","text":"<pre><code>&lt;style&gt;\n    /* Checkbox cu stil card */\n    .card-checkbox .form-control.fod {\n        background: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 8px;\n        padding: 1rem;\n    }\n\n    .card-checkbox:hover .form-control.fod {\n        background: #e9ecef;\n        border-color: #adb5bd;\n    }\n\n    /* Checkbox cu highlight */\n    .highlight-checkbox {\n        position: relative;\n    }\n\n    .highlight-checkbox::before {\n        content: \"\";\n        position: absolute;\n        left: -10px;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 4px;\n        height: 24px;\n        background: #007bff;\n        border-radius: 2px;\n        opacity: 0;\n        transition: opacity 0.3s;\n    }\n\n    .highlight-checkbox:has(input:checked)::before {\n        opacity: 1;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"card-checkbox\"&gt;\n    &lt;FodInputCheckbox @bind-Value=\"cardValue\" \n                      Label=\"Op\u021biune cu stil card\" /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"highlight-checkbox\"&gt;\n    &lt;FodInputCheckbox @bind-Value=\"highlightValue\" \n                      Label=\"Op\u021biune cu highlight\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#integrare-cu-fodcheckbox","title":"Integrare cu FodCheckbox","text":"<p>Componenta folose\u0219te intern <code>FodCheckbox</code>:</p> <pre><code>&lt;FodCheckbox Value=\"@Value\" \n             ValueChanged=\"(value)=&gt; ChangeValue(value)\" \n             Id=\"@Id\" \n             CheckboxType=\"@Type\" \n             Disabled=\"@Readonly\"/&gt;\n</code></pre>"},{"location":"fod/componente/FodInputCheckbox/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Label-uri asociate automat prin FODInputWrapper</li> <li>Suport pentru keyboard navigation</li> <li>ARIA attributes pentru screen readers</li> <li>St\u0103ri vizuale clare pentru checked/unchecked</li> </ul>"},{"location":"fod/componente/FodInputCheckbox/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi etichete clare - Descrie\u021bi exact ce face checkbox-ul</li> <li>Grupa\u021bi logic - Checkbox-uri similare \u00eempreun\u0103</li> <li>Validare adecvat\u0103 - Pentru termeni obligatorii</li> <li>Feedback vizual - Pentru st\u0103ri disabled/readonly</li> <li>Descrieri utile - Folosi\u021bi Description pentru clarific\u0103ri</li> </ol>"},{"location":"fod/componente/FodInputCheckbox/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Re-renderare minim\u0103 la toggle</li> <li>Conversie tip o singur\u0103 dat\u0103 per schimbare</li> <li>Nu are overhead pentru liste mari (folosi\u021bi FodCheckbox direct)</li> </ul>"},{"location":"fod/componente/FodInputCheckbox/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Suport\u0103 doar valori boolean</li> <li>Nu are suport pentru valoare indeterminat\u0103</li> <li>Nu suport\u0103 checkbox groups (folosi\u021bi liste)</li> </ul>"},{"location":"fod/componente/FodInputCheckbox/#concluzie","title":"Concluzie","text":"<p>FodInputCheckbox ofer\u0103 integrare complet\u0103 cu sistemul de formulare Blazor pentru checkbox-uri, combin\u00e2nd simplitatea componentei FodCheckbox cu puterea FODInputWrapper pentru o experien\u021b\u0103 consistent\u0103 \u00een formulare complexe.</p>"},{"location":"fod/componente/FodInputControl/","title":"FodInputControl","text":""},{"location":"fod/componente/FodInputControl/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputControl</code> este o component\u0103 wrapper fundamental\u0103 pentru input-uri \u00een FOD, oferind o structur\u0103 consistent\u0103 pentru label, helper text, mesaje de eroare \u0219i counter-uri. Aceast\u0103 component\u0103 standardizeaz\u0103 aspectul \u0219i comportamentul tuturor input-urilor din aplica\u021bie, asigur\u00e2nd o experien\u021b\u0103 uniform\u0103 pentru utilizatori.</p>"},{"location":"fod/componente/FodInputControl/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Layout consistent - Structur\u0103 uniform\u0103 pentru toate input-urile</li> <li>Label floating - Label animat care se ridic\u0103 c\u00e2nd input-ul are valoare</li> <li>Helper text - Text ajut\u0103tor cu op\u021biune de afi\u0219are doar la focus</li> <li>Erori \u0219i validare - Afi\u0219are mesaje de eroare cu stil dedicat</li> <li>Counter text - Afi\u0219are num\u0103r caractere pentru input-uri cu limit\u0103</li> <li>Variante vizuale - Suport pentru Text, Filled \u0219i Outlined</li> <li>Accesibilitate - Atribute ARIA corecte pentru screen readers</li> </ul>"},{"location":"fod/componente/FodInputControl/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodInputControl Label=\"Nume utilizator\" \n                 HelperText=\"Minim 3 caractere\"\n                 Required=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/componente/FodInputControl/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>InputContent</code> <code>RenderFragment</code> - Con\u021binutul input-ului (c\u00e2mpul propriu-zis) <code>Label</code> <code>string</code> - Eticheta pentru input <code>HelperText</code> <code>string</code> - Text ajut\u0103tor afi\u0219at sub input <code>HelperTextOnFocus</code> <code>bool</code> <code>false</code> Afi\u0219eaz\u0103 helper text doar la focus <code>Error</code> <code>bool</code> <code>false</code> Indic\u0103 stare de eroare <code>ErrorText</code> <code>string</code> - Mesajul de eroare afi\u0219at <code>ErrorId</code> <code>string</code> - ID pentru aria-describedby <code>CounterText</code> <code>string</code> - Text pentru counter (ex: \"10/100\") <code>Required</code> <code>bool</code> <code>false</code> Marcheaz\u0103 c\u00e2mpul ca obligatoriu <code>FullWidth</code> <code>bool</code> <code>false</code> Ocup\u0103 toat\u0103 l\u0103\u021bimea containerului <code>Variant</code> <code>FodVariant</code> <code>Text</code> Stilul vizual (Text, Filled, Outlined) <code>Margin</code> <code>Margin</code> <code>None</code> Spa\u021biere vertical\u0103 <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 input-ul <code>ForId</code> <code>string</code> - ID-ul input-ului pentru label <code>ChildContent</code> <code>RenderFragment</code> - Con\u021binut adi\u021bional <code>Class</code> <code>string</code> - Clase CSS adi\u021bionale <code>Style</code> <code>string</code> - Stiluri inline <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> - Atribute HTML adi\u021bionale"},{"location":"fod/componente/FodInputControl/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodInputControl/#input-control-cu-toate-functionalitatile","title":"Input Control cu Toate Func\u021bionalit\u0103\u021bile","text":"<pre><code>&lt;FodInputControl Label=\"Email\" \n                 HelperText=\"Introduce\u021bi adresa de email valid\u0103\"\n                 Error=\"@hasError\"\n                 ErrorText=\"@errorMessage\"\n                 ErrorId=\"email-error\"\n                 CounterText=\"@($\"{email?.Length ?? 0}/50\")\"\n                 Required=\"true\"\n                 FullWidth=\"true\"\n                 Variant=\"FodVariant.Outlined\"\n                 ForId=\"email-input\"&gt;\n    &lt;InputContent&gt;\n        &lt;input id=\"email-input\" \n               type=\"email\" \n               class=\"fod-input\" \n               @bind=\"email\"\n               @oninput=\"ValidateEmail\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string email;\n    private bool hasError;\n    private string errorMessage;\n\n    private void ValidateEmail(ChangeEventArgs e)\n    {\n        email = e.Value?.ToString();\n        if (string.IsNullOrEmpty(email))\n        {\n            hasError = true;\n            errorMessage = \"Email-ul este obligatoriu\";\n        }\n        else if (!email.Contains(\"@\"))\n        {\n            hasError = true;\n            errorMessage = \"Email invalid\";\n        }\n        else\n        {\n            hasError = false;\n            errorMessage = null;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#variante-vizuale","title":"Variante Vizuale","text":"<pre><code>&lt;!-- Variant Text (implicit) --&gt;\n&lt;FodInputControl Label=\"Text Input\" Variant=\"FodVariant.Text\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Variant Filled --&gt;\n&lt;FodInputControl Label=\"Filled Input\" Variant=\"FodVariant.Filled\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Variant Outlined --&gt;\n&lt;FodInputControl Label=\"Outlined Input\" Variant=\"FodVariant.Outlined\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" class=\"fod-input\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/componente/FodInputControl/#helper-text-cu-focus","title":"Helper Text cu Focus","text":"<pre><code>&lt;FodInputControl Label=\"Parol\u0103\" \n                 HelperText=\"Minim 8 caractere, o majuscul\u0103 \u0219i o cifr\u0103\"\n                 HelperTextOnFocus=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"password\" \n               class=\"fod-input\" \n               @onfocus=\"ShowHelper\"\n               @onblur=\"HideHelper\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private void ShowHelper() =&gt; StateHasChanged();\n    private void HideHelper() =&gt; StateHasChanged();\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#input-cu-counter","title":"Input cu Counter","text":"<pre><code>&lt;FodInputControl Label=\"Descriere\" \n                 CounterText=\"@($\"{description?.Length ?? 0}/{maxLength}\")\"&gt;\n    &lt;InputContent&gt;\n        &lt;textarea class=\"fod-input\" \n                  @bind=\"description\"\n                  maxlength=\"@maxLength\"&gt;&lt;/textarea&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string description;\n    private int maxLength = 500;\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#input-control-cu-validare-in-editform","title":"Input Control cu Validare \u00een EditForm","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodInputControl Label=\"Nume complet\" \n                     Required=\"true\"\n                     Error=\"@(editContext.GetValidationMessages(() =&gt; model.FullName).Any())\"\n                     ErrorText=\"@(editContext.GetValidationMessages(() =&gt; model.FullName).FirstOrDefault())\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;InputText @bind-Value=\"model.FullName\" \n                      class=\"fod-input\" \n                      id=\"fullname-input\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel model = new();\n    private EditContext editContext;\n\n    protected override void OnInitialized()\n    {\n        editContext = new EditContext(model);\n    }\n\n    public class UserModel\n    {\n        [Required(ErrorMessage = \"Numele este obligatoriu\")]\n        [MinLength(3, ErrorMessage = \"Numele trebuie s\u0103 aib\u0103 minim 3 caractere\")]\n        public string FullName { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#input-control-dezactivat","title":"Input Control Dezactivat","text":"<pre><code>&lt;FodInputControl Label=\"ID Utilizator\" \n                 HelperText=\"Generat automat\"\n                 Disabled=\"true\"\n                 Variant=\"FodVariant.Filled\"&gt;\n    &lt;InputContent&gt;\n        &lt;input type=\"text\" \n               class=\"fod-input\" \n               value=\"USR-12345\" \n               disabled /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/componente/FodInputControl/#grupare-input-controls","title":"Grupare Input Controls","text":"<pre><code>&lt;div class=\"form-section\"&gt;\n    &lt;h3&gt;Informa\u021bii personale&lt;/h3&gt;\n\n    &lt;FodInputControl Label=\"Prenume\" \n                     Required=\"true\"\n                     Margin=\"Margin.Normal\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"text\" class=\"fod-input\" @bind=\"firstName\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodInputControl Label=\"Nume\" \n                     Required=\"true\"\n                     Margin=\"Margin.Normal\"\n                     FullWidth=\"true\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"text\" class=\"fod-input\" @bind=\"lastName\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n\n    &lt;FodInputControl Label=\"Data na\u0219terii\" \n                     HelperText=\"Format: DD/MM/YYYY\"\n                     Margin=\"Margin.Normal\"&gt;\n        &lt;InputContent&gt;\n            &lt;input type=\"date\" class=\"fod-input\" @bind=\"birthDate\" /&gt;\n        &lt;/InputContent&gt;\n    &lt;/FodInputControl&gt;\n&lt;/div&gt;\n\n@code {\n    private string firstName;\n    private string lastName;\n    private DateTime? birthDate;\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#input-control-cu-continut-personalizat","title":"Input Control cu Con\u021binut Personalizat","text":"<pre><code>&lt;FodInputControl Label=\"Selecta\u021bi fi\u0219ier\" \n                 HelperText=\"Maxim 5MB, formate: PDF, DOC, DOCX\"&gt;\n    &lt;InputContent&gt;\n        &lt;div class=\"file-input-wrapper\"&gt;\n            &lt;input type=\"file\" \n                   id=\"file-input\" \n                   class=\"d-none\"\n                   @onchange=\"HandleFileSelected\" /&gt;\n            &lt;FodButton OnClick=\"() =&gt; fileInput.Click()\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Upload\" /&gt;\n                Alege fi\u0219ier\n            &lt;/FodButton&gt;\n            @if (!string.IsNullOrEmpty(fileName))\n            {\n                &lt;span class=\"ms-2\"&gt;@fileName&lt;/span&gt;\n            }\n        &lt;/div&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n@code {\n    private string fileName;\n    private ElementReference fileInput;\n\n    private void HandleFileSelected(ChangeEventArgs e)\n    {\n        // Logic\u0103 pentru procesare fi\u0219ier\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#input-control-pentru-componente-fod","title":"Input Control pentru Componente FOD","text":"<pre><code>&lt;!-- Cu FodTextField --&gt;\n&lt;FodInputControl Label=\"Telefon\" \n                 HelperText=\"Format: +373 XX XXX XXX\"\n                 Variant=\"FodVariant.Outlined\"&gt;\n    &lt;InputContent&gt;\n        &lt;FodInput1 @bind-Value=\"phoneNumber\" \n                  Mask=\"@(new PatternMask(\"+373 00 000 000\"))\" /&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n\n&lt;!-- Cu FodSelect --&gt;\n&lt;FodInputControl Label=\"\u021aara\" Required=\"true\"&gt;\n    &lt;InputContent&gt;\n        &lt;FodSelect @bind-Value=\"selectedCountry\"&gt;\n            &lt;FodSelectItem Value=\"MD\"&gt;Moldova&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"RO\"&gt;Rom\u00e2nia&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"UA\"&gt;Ucraina&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n    &lt;/InputContent&gt;\n&lt;/FodInputControl&gt;\n</code></pre>"},{"location":"fod/componente/FodInputControl/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodInputControl/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>/* Container principal */\n.fod-input-control\n.fod-input-control-full-width /* Full width */\n.fod-input-control-margin-none/normal/dense /* Margin */\n.fod-input-required /* C\u00e2mp obligatoriu */\n.fod-input-error /* Stare de eroare */\n\n/* Container input */\n.fod-input-control-input-container\n\n/* Helper container */\n.fod-input-control-helper-container\n.px-1 /* Pentru Filled */\n.px-2 /* Pentru Outlined */\n\n/* Helper text */\n.fod-input-helper-text\n.fod-input-helper-onfocus /* Vizibil doar la focus */\n\n/* Label */\n.fod-input-label-inputcontrol\n</code></pre>"},{"location":"fod/componente/FodInputControl/#personalizare-css","title":"Personalizare CSS","text":"<pre><code>/* Stil pentru required */\n.fod-input-required .fod-input-label-inputcontrol:after {\n    content: \" *\";\n    color: var(--fod-palette-error-main);\n}\n\n/* Anima\u021bie pentru label */\n.fod-input-control .fod-input-label-inputcontrol {\n    transition: all 0.2s ease-out;\n}\n\n/* Helper text stilizat */\n.fod-input-helper-text {\n    font-size: 0.75rem;\n    margin-top: 3px;\n    color: var(--fod-palette-text-secondary);\n}\n\n/* Error state */\n.fod-input-error .fod-input-helper-text {\n    color: var(--fod-palette-error-main);\n}\n\n/* Counter aliniere */\n.fod-input-control-helper-container .ms-auto {\n    font-size: 0.75rem;\n    color: var(--fod-palette-text-disabled);\n}\n</code></pre>"},{"location":"fod/componente/FodInputControl/#integrare-cu-componente-fod","title":"Integrare cu Componente FOD","text":"<p>FodInputControl este folosit intern de majoritatea componentelor de input FOD: - FodTextField - FodSelect - FodDatePicker - FodAutocomplete - \u0218i altele</p>"},{"location":"fod/componente/FodInputControl/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi Label descriptiv - Ajut\u0103 utilizatorii \u0219i screen readers</li> <li>HelperText util - Oferi\u021bi indicii clare despre format sau cerin\u021be</li> <li>Erori specifice - Mesaje clare despre ce este gre\u0219it</li> <li>ForId pentru accesibilitate - Asocia\u021bi label cu input</li> <li>Variant consistent - Men\u021bine\u021bi acela\u0219i stil \u00een aplica\u021bie</li> <li>Required vizual - Indica\u021bi clar c\u00e2mpurile obligatorii</li> </ol>"},{"location":"fod/componente/FodInputControl/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Label asociat corect cu input prin <code>for</code> \u0219i <code>id</code></li> <li>Mesaje de eroare anun\u021bate prin <code>aria-describedby</code></li> <li>Stare dezactivat\u0103 comunicat\u0103 corect</li> <li>Suport complet pentru navigare cu tastatura</li> </ul>"},{"location":"fod/componente/FodInputControl/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodInputControl/#label-ul-nu-se-ridica","title":"Label-ul nu se ridic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 input-ul are clasele CSS corecte</li> <li>Verifica\u021bi c\u0103 Variant este setat corect</li> </ul>"},{"location":"fod/componente/FodInputControl/#helper-text-nu-apare-la-focus","title":"Helper text nu apare la focus","text":"<ul> <li>Seta\u021bi <code>HelperTextOnFocus=\"true\"</code></li> <li>Verifica\u021bi evenimentele focus/blur pe input</li> </ul>"},{"location":"fod/componente/FodInputControl/#counter-nu-se-actualizeaza","title":"Counter nu se actualizeaz\u0103","text":"<ul> <li>Actualiza\u021bi manual CounterText \u00een evenimentele input</li> <li>Folosi\u021bi binding two-way pentru valoare</li> </ul>"},{"location":"fod/componente/FodInputControl/#concluzie","title":"Concluzie","text":"<p>FodInputControl este funda\u021bia sistemului de input-uri \u00een FOD, oferind o structur\u0103 consistent\u0103 \u0219i func\u021bionalit\u0103\u021bi complete pentru toate tipurile de c\u00e2mpuri. Folosirea sa asigur\u0103 o experien\u021b\u0103 uniform\u0103 \u0219i profesional\u0103 \u00een \u00eentreaga aplica\u021bie.</p>"},{"location":"fod/componente/FodInputFile/","title":"InputFile","text":""},{"location":"fod/componente/FodInputFile/#documentatie-pentru-componentele-fodinputfile-si-fodsinglefileuploader","title":"Documenta\u021bie pentru componentele FodInputFile \u0219i FodSingleFileUploader","text":""},{"location":"fod/componente/FodInputFile/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p>Sistemul de \u00eenc\u0103rcare fi\u0219iere FOD Components ofer\u0103 dou\u0103 componente principale pentru gestionarea upload-urilor: - <code>FodInputFile</code> - Component\u0103 general\u0103 pentru \u00eenc\u0103rcare fi\u0219iere (single/multiple) - <code>FodSingleFileUploader</code> - Component\u0103 specializat\u0103 pentru un singur fi\u0219ier cu integrare \u00een formulare</p> <p>Caracteristici principale: - \u00cenc\u0103rcare fi\u0219iere single sau multiple - Restric\u021bii tip \u0219i dimensiune fi\u0219iere - Previzualizare fi\u0219iere \u00eenc\u0103rcate - \u0218tergere fi\u0219iere cu confirmare - Validare client \u0219i server - Integrare complet\u0103 cu formulare Blazor - Indicatori progres \u00eenc\u0103rcare - Suport pentru fi\u0219iere p\u00e2n\u0103 la 120MB - Personalizare complet\u0103 aspect</p>"},{"location":"fod/componente/FodInputFile/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodInputFile/#incarcare-fisier-simplu","title":"\u00cenc\u0103rcare fi\u0219ier simplu","text":"<pre><code>&lt;FodInputFile ID=\"@Guid.NewGuid().ToString()\" \n              Lable=\"\u00cencarc\u0103 fi\u0219ier\"\n              Accept=\".pdf,.doc,.docx\"\n              FileSizeMB=\"10\"\n              OnChange=\"@HandleFileUploaded\"\n              IsError=\"@HandleUploadError\" /&gt;\n\n@code {\n    private async Task HandleFileUploaded(List&lt;FileUploadResponseModel&gt; files)\n    {\n        foreach (var file in files)\n        {\n            Console.WriteLine($\"Fi\u0219ier \u00eenc\u0103rcat: {file.FileName}\");\n        }\n    }\n\n    private async Task HandleUploadError(bool hasError)\n    {\n        if (hasError)\n        {\n            // Afi\u0219eaz\u0103 mesaj eroare\n            await NotificationService.ShowError(\"Eroare la \u00eenc\u0103rcarea fi\u0219ierului\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-fisiere-multiple","title":"\u00cenc\u0103rcare fi\u0219iere multiple","text":"<pre><code>&lt;FodInputFile ID=\"@Guid.NewGuid().ToString()\"\n              Multiple=\"true\"\n              Lable=\"\u00cencarc\u0103 fi\u0219iere\"\n              Accept=\"image/*\"\n              FileSizeMB=\"5\"\n              StartIcon=\"@FodIcons.Material.Filled.CloudUpload\"\n              Color=\"FodColor.Primary\"\n              Variant=\"FodVariant.Filled\"\n              OnChange=\"@HandleMultipleFiles\" /&gt;\n\n@code {\n    private List&lt;FileUploadResponseModel&gt; uploadedFiles = new();\n\n    private async Task HandleMultipleFiles(List&lt;FileUploadResponseModel&gt; files)\n    {\n        uploadedFiles.AddRange(files);\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#fodsinglefileuploader-in-formular","title":"FodSingleFileUploader \u00een formular","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodSingleFileUploader @bind-Value=\"model.Document\"\n                          ButtonText=\"Selecteaz\u0103 document\"\n                          Accept=\".pdf\"\n                          FileSizeMB=\"20\"\n                          For=\"@(() =&gt; model.Document)\"\n                          ShowValidationMessage=\"true\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.Document)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class DocumentModel\n    {\n        [Required(ErrorMessage = \"Documentul este obligatoriu\")]\n        public FodUploadedFileModel Document { get; set; }\n    }\n\n    private DocumentModel model = new();\n\n    private async Task HandleSubmit()\n    {\n        // Procesare formular cu document\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-cu-previzualizare","title":"\u00cenc\u0103rcare cu previzualizare","text":"<pre><code>&lt;FodSingleFileUploader @bind-Value=\"uploadedFile\"\n                      ButtonText=\"\u00cencarc\u0103 imagine\"\n                      Accept=\"image/*\"\n                      FileSizeMB=\"5\"\n                      FileUploadSuccess=\"@ShowPreview\" /&gt;\n\n@if (uploadedFile != null)\n{\n    &lt;div class=\"mt-3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;img src=\"@uploadedFile.FileUrl\" alt=\"@uploadedFile.FileName\" \n                     style=\"max-width: 100%; height: auto;\" /&gt;\n                &lt;FodText Class=\"mt-2\"&gt;@uploadedFile.FileName&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private FodUploadedFileModel uploadedFile;\n\n    private void ShowPreview()\n    {\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#mod-vizualizare-readonly","title":"Mod vizualizare (readonly)","text":"<pre><code>&lt;FodSingleFileUploader Value=\"existingFile\"\n                      ViewOnly=\"true\"\n                      ButtonText=\"Vizualizeaz\u0103 document\" /&gt;\n\n@code {\n    private FodUploadedFileModel existingFile = new()\n    {\n        Id = Guid.Parse(\"123e4567-e89b-12d3-a456-426614174000\"),\n        FileName = \"Contract_2024.pdf\",\n        FileType = \"application/pdf\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#lista-fisiere-incarcate-cu-actiuni","title":"List\u0103 fi\u0219iere \u00eenc\u0103rcate cu ac\u021biuni","text":"<pre><code>&lt;FileList Model=\"uploadedFiles\"\n          ColorDelete=\"FodColor.Error\"\n          ColorDownload=\"FodColor.Success\"\n          ColorView=\"FodColor.Info\"\n          OnDelete=\"@HandleFileDelete\"\n          OnDownload=\"@HandleFileDownload\"\n          OnView=\"@HandleFileView\" /&gt;\n\n@code {\n    private List&lt;FodUploadedFileModel&gt; uploadedFiles = new();\n\n    private async Task HandleFileDelete(FodUploadedFileModel file)\n    {\n        uploadedFiles.Remove(file);\n        await FileUploadService.DeleteFile(file.Id.Value);\n    }\n\n    private async Task HandleFileDownload(FodUploadedFileModel file)\n    {\n        await FileUploadService.DownloadFile(file.Id.Value, file.FileType);\n    }\n\n    private async Task HandleFileView(FodUploadedFileModel file)\n    {\n        // Deschide previzualizare\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-cu-validare-personalizata","title":"\u00cenc\u0103rcare cu validare personalizat\u0103","text":"<pre><code>&lt;FodSingleFileUploader @bind-Value=\"model.Certificate\"\n                      ButtonText=\"\u00cencarc\u0103 certificat\"\n                      Accept=\".pdf,.jpg,.png\"\n                      FileSizeMB=\"2\"\n                      DeleteFileHandler=\"@CustomDeleteHandler\"\n                      SizeTooBig=\"@HandleSizeError\" /&gt;\n\n@code {\n    private async Task&lt;bool&gt; CustomDeleteHandler(Guid fileId)\n    {\n        // Validare personalizat\u0103 \u00eenainte de \u0219tergere\n        var canDelete = await CheckIfCanDelete(fileId);\n        if (!canDelete)\n        {\n            await NotificationService.ShowError(\"Nu pute\u021bi \u0219terge acest fi\u0219ier\");\n            return false;\n        }\n\n        return await FileUploadService.DeleteFile(fileId);\n    }\n\n    private void HandleSizeError()\n    {\n        NotificationService.ShowError(\"Fi\u0219ierul dep\u0103\u0219e\u0219te limita de 2MB\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-cu-stilizare-personalizata","title":"\u00cenc\u0103rcare cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodInputFile ID=\"upload-photos\"\n              Multiple=\"true\"\n              Lable=\"Adaug\u0103 fotografii\"\n              Accept=\"image/*\"\n              FileSizeMB=\"10\"\n              Color=\"FodColor.Secondary\"\n              Variant=\"FodVariant.Outlined\"\n              Size=\"Size.Large\"\n              StartIcon=\"@FodIcons.Material.Filled.PhotoCamera\"\n              EndIcon=\"@FodIcons.Material.Filled.Add\"\n              OnChange=\"@HandlePhotosUploaded\"\n              Class=\"custom-upload-button\" /&gt;\n\n&lt;style&gt;\n    .custom-upload-button {\n        border-style: dashed !important;\n        border-width: 2px !important;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-documente-cu-tipuri-specifice","title":"\u00cenc\u0103rcare documente cu tipuri specifice","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Documente necesare&lt;/FodText&gt;\n\n        &lt;div class=\"d-flex flex-column gap-3\"&gt;\n            &lt;FodSingleFileUploader @bind-Value=\"documents.IdCard\"\n                                  ButtonText=\"Buletin/Pa\u0219aport\"\n                                  Accept=\".pdf,.jpg,.png\"\n                                  FileSizeMB=\"5\" /&gt;\n\n            &lt;FodSingleFileUploader @bind-Value=\"documents.ProofOfAddress\"\n                                  ButtonText=\"Dovad\u0103 adres\u0103\"\n                                  Accept=\".pdf\"\n                                  FileSizeMB=\"10\" /&gt;\n\n            &lt;FodSingleFileUploader @bind-Value=\"documents.IncomeCertificate\"\n                                  ButtonText=\"Adeverin\u021b\u0103 venit\"\n                                  Accept=\".pdf\"\n                                  FileSizeMB=\"5\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DocumentsModel documents = new();\n\n    public class DocumentsModel\n    {\n        public FodUploadedFileModel IdCard { get; set; }\n        public FodUploadedFileModel ProofOfAddress { get; set; }\n        public FodUploadedFileModel IncomeCertificate { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#incarcare-cu-progres-si-anulare","title":"\u00cenc\u0103rcare cu progres \u0219i anulare","text":"<pre><code>&lt;FodInputFile ID=\"large-file-upload\"\n              Lable=\"@GetUploadButtonText()\"\n              Accept=\".zip,.rar\"\n              FileSizeMB=\"100\"\n              Disable=\"@isUploading\"\n              OnChange=\"@HandleLargeFileUpload\"\n              StartIcon=\"@GetUploadIcon()\" /&gt;\n\n@if (isUploading)\n{\n    &lt;FodProgress Value=\"@uploadProgress\" Class=\"mt-2\" /&gt;\n    &lt;FodButton OnClick=\"CancelUpload\" Color=\"FodColor.Error\" Size=\"Size.Small\"&gt;\n        Anuleaz\u0103\n    &lt;/FodButton&gt;\n}\n\n@code {\n    private bool isUploading = false;\n    private int uploadProgress = 0;\n\n    private string GetUploadButtonText() =&gt; isUploading ? \"Se \u00eencarc\u0103...\" : \"\u00cencarc\u0103 arhiv\u0103\";\n    private string GetUploadIcon() =&gt; isUploading ? FodIcons.Material.Filled.HourglassEmpty : FodIcons.Material.Filled.CloudUpload;\n\n    private async Task HandleLargeFileUpload(List&lt;FileUploadResponseModel&gt; files)\n    {\n        isUploading = true;\n        // Simulare progres\n        for (int i = 0; i &lt;= 100; i += 10)\n        {\n            uploadProgress = i;\n            StateHasChanged();\n            await Task.Delay(500);\n        }\n        isUploading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodInputFile/#fodinputfile","title":"FodInputFile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>ID</code> <code>string</code> ID unic pentru component\u0103 - <code>Multiple</code> <code>bool</code> Permite selec\u021bie multipl\u0103 <code>false</code> <code>Accept</code> <code>string</code> Tipuri fi\u0219iere acceptate <code>null</code> <code>FileSizeMB</code> <code>double</code> Dimensiune maxim\u0103 \u00een MB <code>120</code> <code>Lable</code> <code>string</code> Text buton <code>\"Upload\"</code> <code>Color</code> <code>FodColor</code> Culoarea butonului <code>Default</code> <code>Variant</code> <code>FodVariant</code> Stilul butonului <code>Text</code> <code>Size</code> <code>Size</code> Dimensiunea componentei <code>Medium</code> <code>StartIcon</code> <code>string</code> Pictogram\u0103 \u00eenceput <code>null</code> <code>EndIcon</code> <code>string</code> Pictogram\u0103 sf\u00e2r\u0219it <code>null</code> <code>Disable</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code> <code>OnChange</code> <code>EventCallback&lt;List&lt;FileUploadResponseModel&gt;&gt;</code> Callback succes - <code>IsError</code> <code>EventCallback&lt;bool&gt;</code> Callback eroare -"},{"location":"fod/componente/FodInputFile/#fodsinglefileuploader","title":"FodSingleFileUploader","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>FodUploadedFileModel</code> Fi\u0219ierul \u00eenc\u0103rcat <code>null</code> <code>ValueChanged</code> <code>EventCallback&lt;FodUploadedFileModel&gt;</code> Eveniment schimbare - <code>ViewOnly</code> <code>bool</code> Mod doar vizualizare <code>false</code> <code>ButtonText</code> <code>string</code> Text personalizat buton <code>\"Upload\"</code> <code>ShowValidationMessage</code> <code>bool</code> Afi\u0219eaz\u0103 mesaje validare <code>true</code> <code>IgnoreValidation</code> <code>bool</code> Ignor\u0103 validarea <code>false</code> <code>FileSizeMB</code> <code>double</code> Dimensiune maxim\u0103 \u00een MB <code>40</code> <code>DeleteFileHandler</code> <code>Func&lt;Guid, Task&lt;bool&gt;&gt;</code> Handler \u0219tergere custom <code>null</code> <code>FileUploadSuccess</code> <code>EventCallback</code> Callback succes upload - <code>SizeTooBig</code> <code>EventCallback</code> Callback dep\u0103\u0219ire dimensiune - Plus toate propriet\u0103\u021bile de la FodInputFile"},{"location":"fod/componente/FodInputFile/#4-modele-de-date","title":"4. Modele de date","text":""},{"location":"fod/componente/FodInputFile/#foduploadedfilemodel","title":"FodUploadedFileModel","text":"<pre><code>public class FodUploadedFileModel\n{\n    public Guid? Id { get; set; }\n    public string? FileType { get; set; }\n    public string? FileName { get; set; }\n    public string? FileUrl { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#fileuploadresponsemodel","title":"FileUploadResponseModel","text":"<pre><code>public class FileUploadResponseModel\n{\n    public Guid? Id { get; set; }\n    public string? FileName { get; set; }\n    public string FileType { get; set; }\n    public FileUploadValidateResult? ValidateResult { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#5-servicii-asociate","title":"5. Servicii asociate","text":""},{"location":"fod/componente/FodInputFile/#ifileuploadservice","title":"IFileUploadService","text":"<pre><code>// Injectare\n@inject IFileUploadService FileUploadService\n\n// Metode disponibile\nawait FileUploadService.UploadFile(fileRequest);\nawait FileUploadService.DownloadFile(fileId, contentType);\nawait FileUploadService.DeleteFile(fileId);\nawait FileUploadService.GetFileUrl(fileId);\n</code></pre>"},{"location":"fod/componente/FodInputFile/#isinglefileuploadservice","title":"ISingleFileUploadService","text":"<pre><code>// Injectare\n@inject ISingleFileUploadService SingleFileUploadService\n\n// Metode disponibile\nawait SingleFileUploadService.UploadSingleFile(fileRequest);\nawait SingleFileUploadService.DeleteFile(fileId);\n</code></pre>"},{"location":"fod/componente/FodInputFile/#6-validare-fisiere","title":"6. Validare fi\u0219iere","text":""},{"location":"fod/componente/FodInputFile/#validare-pe-client","title":"Validare pe client","text":"<ul> <li>Verificare tip fi\u0219ier (Accept parameter)</li> <li>Verificare dimensiune maxim\u0103</li> <li>Feedback instant utilizator</li> </ul>"},{"location":"fod/componente/FodInputFile/#validare-pe-server","title":"Validare pe server","text":"<pre><code>public class CustomFileValidator : IFileUploadValidator\n{\n    public FileUploadValidateResult Validate(FileUploaRequestdModel file)\n    {\n        var result = new FileUploadValidateResult();\n\n        // Validare tip fi\u0219ier\n        var allowedTypes = new[] { \"application/pdf\", \"image/jpeg\", \"image/png\" };\n        if (!allowedTypes.Contains(file.FileType))\n        {\n            result.AddError(\"Tip fi\u0219ier neacceptat\");\n        }\n\n        // Validare con\u021binut\n        if (file.FileContent?.Content == null || file.FileContent.Content.Length == 0)\n        {\n            result.AddError(\"Fi\u0219ierul este gol\");\n        }\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":"<pre><code>/* Buton upload personalizat */\n.custom-upload-zone {\n    border: 2px dashed #ccc;\n    border-radius: 8px;\n    padding: 40px;\n    text-align: center;\n    transition: all 0.3s ease;\n}\n\n.custom-upload-zone:hover {\n    border-color: var(--fod-primary);\n    background-color: rgba(var(--fod-primary-rgb), 0.05);\n}\n\n/* List\u0103 fi\u0219iere stilizat\u0103 */\n.file-list-custom {\n    max-height: 300px;\n    overflow-y: auto;\n}\n\n.file-list-custom .file-item {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n/* Indicatori tip fi\u0219ier */\n.file-type-pdf { color: #d32f2f; }\n.file-type-doc { color: #1976d2; }\n.file-type-image { color: #388e3c; }\n</code></pre>"},{"location":"fod/componente/FodInputFile/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/FodInputFile/#in-wizard-pentru-proces-pas-cu-pas","title":"\u00cen Wizard pentru proces pas cu pas","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Title=\"Date personale\"&gt;\n        &lt;!-- Formular date --&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Documente\"&gt;\n        &lt;FodSingleFileUploader @bind-Value=\"model.Document1\"\n                              ButtonText=\"Document identitate\"\n                              Required=\"true\" /&gt;\n\n        &lt;FodSingleFileUploader @bind-Value=\"model.Document2\"\n                              ButtonText=\"Dovad\u0103 venit\"\n                              Required=\"true\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Confirmare\"&gt;\n        &lt;!-- Rezumat cu previzualizare documente --&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodInputFile/#9-gestionare-erori","title":"9. Gestionare erori","text":"<pre><code>&lt;FodInputFile ID=\"safe-upload\"\n              Lable=\"\u00cencarc\u0103 fi\u0219ier\"\n              OnChange=\"@HandleFileUpload\"\n              IsError=\"@HandleError\" /&gt;\n\n@if (!string.IsNullOrEmpty(errorMessage))\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\" Class=\"mt-2\"&gt;\n        @errorMessage\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private string errorMessage = \"\";\n\n    private async Task HandleError(bool hasError)\n    {\n        if (hasError)\n        {\n            errorMessage = \"Eroare la \u00eenc\u0103rcare. Verifica\u021bi tipul \u0219i dimensiunea fi\u0219ierului.\";\n        }\n    }\n\n    private async Task HandleFileUpload(List&lt;FileUploadResponseModel&gt; files)\n    {\n        errorMessage = \"\";\n        foreach (var file in files)\n        {\n            if (file.ValidateResult?.Success == false)\n            {\n                errorMessage = string.Join(\", \", file.ValidateResult.ErrorMessages);\n                break;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFile/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Limita maxim\u0103 hardcoded: 120MB pentru FodInputFile</li> <li>Fi\u0219ierele sunt stocate \u00een baza de date (tabela FileContent)</li> <li>Previzualizarea folose\u0219te iframe pentru non-imagini</li> <li>Validarea pe server este obligatorie pentru securitate</li> <li>Component ID trebuie s\u0103 fie unic pe pagin\u0103</li> </ul>"},{"location":"fod/componente/FodInputFile/#11-securitate","title":"11. Securitate","text":"<ol> <li>Validare tip fi\u0219ier - Verifica\u021bi pe server, nu doar client</li> <li>Scanare antivirus - Integra\u021bi scanare pentru fi\u0219iere \u00eenc\u0103rcate</li> <li>Limitare dimensiune - Preveni\u021bi DoS prin upload-uri mari</li> <li>Verificare con\u021binut - Valida\u021bi c\u0103 tipul MIME corespunde con\u021binutului</li> <li>Permisiuni - Verifica\u021bi drepturile utilizatorului</li> </ol>"},{"location":"fod/componente/FodInputFile/#12-performanta","title":"12. Performan\u021b\u0103","text":"<ol> <li>\u00cenc\u0103rcare asincron\u0103 - Nu bloca\u021bi UI-ul</li> <li>Progres vizual - Afi\u0219a\u021bi indicatori pentru fi\u0219iere mari</li> <li>Compresie imagini - Reduce\u021bi dimensiunea \u00eenainte de upload</li> <li>Lazy loading - Pentru liste mari de fi\u0219iere</li> <li>Chunk upload - Pentru fi\u0219iere foarte mari</li> </ol>"},{"location":"fod/componente/FodInputFile/#13-bune-practici","title":"13. Bune practici","text":"<ol> <li>Feedback clar - Informa\u021bi utilizatorul despre progres \u0219i erori</li> <li>Tipuri explicite - Specifica\u021bi clar ce fi\u0219iere sunt acceptate</li> <li>Limite rezonabile - Seta\u021bi dimensiuni maxime adecvate</li> <li>Previzualizare - Permite\u021bi verificarea \u00eenainte de trimitere</li> <li>\u0218tergere sigur\u0103 - Confirma\u021bi \u00eenainte de \u0219tergere permanent\u0103</li> <li>Validare dubl\u0103 - Client \u0219i server pentru siguran\u021b\u0103</li> </ol>"},{"location":"fod/componente/FodInputFile/#14-troubleshooting","title":"14. Troubleshooting","text":""},{"location":"fod/componente/FodInputFile/#upload-ul-nu-functioneaza","title":"Upload-ul nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 serviciile sunt \u00eenregistrate \u00een DI</li> <li>Verifica\u021bi endpoint-urile API</li> <li>Verifica\u021bi permisiunile CORS</li> </ul>"},{"location":"fod/componente/FodInputFile/#fisierul-nu-se-afiseaza","title":"Fi\u0219ierul nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FileUrl este completat</li> <li>Verifica\u021bi tipul MIME pentru previzualizare</li> </ul>"},{"location":"fod/componente/FodInputFile/#eroare-de-dimensiune","title":"Eroare de dimensiune","text":"<ul> <li>Verifica\u021bi FileSizeMB pe component\u0103</li> <li>Verifica\u021bi limita pe server (120MB max)</li> </ul>"},{"location":"fod/componente/FodInputFile/#15-concluzie","title":"15. Concluzie","text":"<p>Sistemul de \u00eenc\u0103rcare fi\u0219iere FOD Components ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru gestionarea fi\u0219ierelor \u00een aplica\u021bii Blazor, cu suport pentru validare, previzualizare \u0219i integrare perfect\u0103 \u00een formulare.</p>"},{"location":"fod/componente/FodInputFilteredSelect/","title":"Input Filtered Select","text":""},{"location":"fod/componente/FodInputFilteredSelect/#documentatie-pentru-componenta-fodinputfilteredselect","title":"Documenta\u021bie pentru componenta FodInputFilteredSelect","text":""},{"location":"fod/componente/FodInputFilteredSelect/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodInputFilteredSelect</code> este o component\u0103 dropdown cu func\u021bionalitate de filtrare/autocomplete pentru aplica\u021bii Blazor. Permite utilizatorilor s\u0103 caute \u0219i s\u0103 selecteze valori dintr-o list\u0103 mare de op\u021biuni prin tastarea textului pentru filtrare.</p> <p>Caracteristici principale: - Filtrare \u00een timp real pe m\u0103sur\u0103 ce utilizatorul tasteaz\u0103 - Suport pentru tipuri generice \u0219i enumer\u0103ri - Localizare automat\u0103 pentru descrieri enum - Validare integrat\u0103 cu EditForm - Two-way data binding - Performan\u021b\u0103 optimizat\u0103 pentru liste mari - Suport pentru obiecte complexe - \u00cenchidere automat\u0103 la click \u00een afar\u0103 - Accesibilitate complet\u0103</p>"},{"location":"fod/componente/FodInputFilteredSelect/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodInputFilteredSelect/#select-filtrat-de-baza-cu-enum","title":"Select filtrat de baz\u0103 cu enum","text":"<pre><code>@page \"/filtered-select-demo\"\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodInputFilteredSelect @bind-Value=\"model.Country\" \n                            Label=\"\u021aar\u0103\"\n                            Placeholder=\"\u00cencepe\u021bi s\u0103 tasta\u021bi pentru a c\u0103uta...\" /&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; model.Country)\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n\n    public class FormModel\n    {\n        [Required(ErrorMessage = \"\u021aara este obligatorie\")]\n        public CountryEnum? Country { get; set; }\n    }\n\n    public enum CountryEnum\n    {\n        [Description(\"Rom\u00e2nia\")]\n        RO,\n        [Description(\"Republica Moldova\")]\n        MD,\n        [Description(\"Statele Unite ale Americii\")]\n        US,\n        [Description(\"Germania\")]\n        DE,\n        [Description(\"Fran\u021ba\")]\n        FR,\n        [Description(\"Italia\")]\n        IT,\n        [Description(\"Spania\")]\n        ES,\n        [Description(\"Regatul Unit\")]\n        UK\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-obiecte-personalizate","title":"Select cu obiecte personalizate","text":"<pre><code>&lt;FodInputFilteredSelect T=\"City\" \n                        @bind-Value=\"selectedCity\"\n                        Source=\"@cities\"\n                        Label=\"Selecta\u021bi ora\u0219ul\"\n                        Placeholder=\"Tasta\u021bi pentru a c\u0103uta...\" /&gt;\n\n@code {\n    private City? selectedCity;\n    private List&lt;SelectableItem&lt;City&gt;&gt; cities = new();\n\n    public class City\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string County { get; set; }\n        public int Population { get; set; }\n    }\n\n    protected override void OnInitialized()\n    {\n        // Ini\u021bializare list\u0103 ora\u0219e\n        cities = GetCities().Select(c =&gt; new SelectableItem&lt;City&gt;\n        {\n            Value = c,\n            Label = $\"{c.Name} ({c.County})\",\n            Data = c\n        }).ToList();\n    }\n\n    private List&lt;City&gt; GetCities()\n    {\n        return new List&lt;City&gt;\n        {\n            new() { Id = 1, Name = \"Bucure\u0219ti\", County = \"Bucure\u0219ti\", Population = 1830000 },\n            new() { Id = 2, Name = \"Cluj-Napoca\", County = \"Cluj\", Population = 325000 },\n            new() { Id = 3, Name = \"Timi\u0219oara\", County = \"Timi\u0219\", Population = 320000 },\n            new() { Id = 4, Name = \"Ia\u0219i\", County = \"Ia\u0219i\", Population = 290000 },\n            new() { Id = 5, Name = \"Constan\u021ba\", County = \"Constan\u021ba\", Population = 285000 },\n            // ... mai multe ora\u0219e\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-incarcare-asincrona","title":"Select cu \u00eenc\u0103rcare asincron\u0103","text":"<pre><code>&lt;FodInputFilteredSelect T=\"Product\" \n                        @bind-Value=\"selectedProduct\"\n                        Source=\"@products\"\n                        Label=\"Produs\"\n                        Placeholder=\"C\u0103uta\u021bi produsul...\"\n                        Disabled=\"@isLoading\" /&gt;\n\n@if (isLoading)\n{\n    &lt;FodLoadingLinear Indeterminate=\"true\" Size=\"FodSize.Small\" /&gt;\n}\n\n@code {\n    private Product? selectedProduct;\n    private List&lt;SelectableItem&lt;Product&gt;&gt; products = new();\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        isLoading = true;\n\n        try\n        {\n            var productList = await ProductService.GetProductsAsync();\n            products = productList.Select(p =&gt; new SelectableItem&lt;Product&gt;\n            {\n                Value = p,\n                Label = $\"{p.Name} - {p.Price:C}\",\n                Data = p\n            }).ToList();\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-formatare-personalizata","title":"Select cu formatare personalizat\u0103","text":"<pre><code>&lt;FodInputFilteredSelect T=\"Employee\" \n                        @bind-Value=\"selectedEmployee\"\n                        Source=\"@employees\"\n                        Label=\"Angajat\"\n                        Placeholder=\"C\u0103uta\u021bi dup\u0103 nume sau departament...\" /&gt;\n\n@if (selectedEmployee != null)\n{\n    &lt;FodCard Class=\"mt-3\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;@selectedEmployee.FullName&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;@selectedEmployee.Department&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                ID: @selectedEmployee.Id | Email: @selectedEmployee.Email\n            &lt;/FodText&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n}\n\n@code {\n    private Employee? selectedEmployee;\n    private List&lt;SelectableItem&lt;Employee&gt;&gt; employees = new();\n\n    protected override void OnInitialized()\n    {\n        employees = GetEmployees().Select(e =&gt; new SelectableItem&lt;Employee&gt;\n        {\n            Value = e,\n            Label = $\"{e.FullName} - {e.Department}\",\n            Data = e,\n            // Filtrare personalizat\u0103 - caut\u0103 \u0219i \u00een email\n            SearchableText = $\"{e.FullName} {e.Department} {e.Email}\"\n        }).ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#formular-complex-cu-multiple-select-uri-filtrate","title":"Formular complex cu multiple select-uri filtrate","text":"<pre><code>&lt;EditForm Model=\"@orderForm\" OnValidSubmit=\"HandleOrderSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;FodInputFilteredSelect @bind-Value=\"orderForm.Customer\"\n                                    Source=\"@customers\"\n                                    Label=\"Client\"\n                                    Required=\"true\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; orderForm.Customer)\" /&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;FodInputFilteredSelect @bind-Value=\"orderForm.Product\"\n                                    Source=\"@products\"\n                                    Label=\"Produs\"\n                                    Required=\"true\"\n                                    Disabled=\"@(orderForm.Customer == null)\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; orderForm.Product)\" /&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;FodInputFilteredSelect @bind-Value=\"orderForm.DeliveryMethod\"\n                                    Label=\"Metod\u0103 livrare\"\n                                    Placeholder=\"Selecta\u021bi metoda de livrare...\" /&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;FodInputFilteredSelect @bind-Value=\"orderForm.PaymentMethod\"\n                                    Label=\"Metod\u0103 plat\u0103\"\n                                    Placeholder=\"Selecta\u021bi metoda de plat\u0103...\" /&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\" \n               Color=\"FodColor.Primary\"\n               Class=\"mt-3\"&gt;\n        Plaseaz\u0103 comanda\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderForm orderForm = new();\n    private List&lt;SelectableItem&lt;Customer&gt;&gt; customers = new();\n    private List&lt;SelectableItem&lt;Product&gt;&gt; products = new();\n\n    public class OrderForm\n    {\n        [Required(ErrorMessage = \"Clientul este obligatoriu\")]\n        public Customer? Customer { get; set; }\n\n        [Required(ErrorMessage = \"Produsul este obligatoriu\")]\n        public Product? Product { get; set; }\n\n        public DeliveryMethod DeliveryMethod { get; set; }\n        public PaymentMethod PaymentMethod { get; set; }\n    }\n\n    public enum DeliveryMethod\n    {\n        [Description(\"Curier rapid (24h)\")]\n        Express,\n        [Description(\"Curier standard (3-5 zile)\")]\n        Standard,\n        [Description(\"Ridicare din magazin\")]\n        Pickup,\n        [Description(\"Po\u0219t\u0103 (5-7 zile)\")]\n        PostOffice\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-grupare-si-categorii","title":"Select cu grupare \u0219i categorii","text":"<pre><code>&lt;FodInputFilteredSelect T=\"Service\" \n                        @bind-Value=\"selectedService\"\n                        Source=\"@groupedServices\"\n                        Label=\"Serviciu\"\n                        Placeholder=\"C\u0103uta\u021bi serviciul dorit...\" /&gt;\n\n@code {\n    private Service? selectedService;\n    private List&lt;SelectableItem&lt;Service&gt;&gt; groupedServices = new();\n\n    protected override void OnInitialized()\n    {\n        var services = GetServices();\n\n        // Organizare servicii pe categorii\n        groupedServices = services\n            .OrderBy(s =&gt; s.Category)\n            .ThenBy(s =&gt; s.Name)\n            .Select(s =&gt; new SelectableItem&lt;Service&gt;\n            {\n                Value = s,\n                Label = s.Name,\n                GroupLabel = s.Category,\n                Data = s\n            }).ToList();\n    }\n\n    private List&lt;Service&gt; GetServices()\n    {\n        return new List&lt;Service&gt;\n        {\n            new() { Id = 1, Name = \"Consultan\u021b\u0103 IT\", Category = \"IT &amp; Software\" },\n            new() { Id = 2, Name = \"Dezvoltare Web\", Category = \"IT &amp; Software\" },\n            new() { Id = 3, Name = \"Audit Financiar\", Category = \"Financiar\" },\n            new() { Id = 4, Name = \"Contabilitate\", Category = \"Financiar\" },\n            new() { Id = 5, Name = \"Marketing Digital\", Category = \"Marketing\" },\n            new() { Id = 6, Name = \"SEO &amp; SEM\", Category = \"Marketing\" }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-template-personalizat-pentru-optiuni","title":"Select cu template personalizat pentru op\u021biuni","text":"<pre><code>&lt;FodInputFilteredSelect T=\"User\" \n                        @bind-Value=\"assignedUser\"\n                        Source=\"@users\"\n                        Label=\"Asignat c\u0103tre\"\n                        Placeholder=\"C\u0103uta\u021bi utilizator...\"&gt;\n    &lt;ItemTemplate Context=\"user\"&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                     Size=\"FodSize.Small\" \n                     Class=\"me-2\" /&gt;\n            &lt;div&gt;\n                &lt;FodText Typo=\"Typo.body2\"&gt;@user.Data.Name&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    @user.Data.Department - @user.Data.Role\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/ItemTemplate&gt;\n&lt;/FodInputFilteredSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-validare-personalizata","title":"Select cu validare personalizat\u0103","text":"<pre><code>&lt;EditForm EditContext=\"@editContext\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;FodInputFilteredSelect @bind-Value=\"model.Location\"\n                            Source=\"@locations\"\n                            Label=\"Loca\u021bie\"\n                            @bind-Value:after=\"ValidateLocation\" /&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; model.Location)\" /&gt;\n\n    @if (locationWarning != null)\n    {\n        &lt;FodAlert Severity=\"Severity.Warning\" Class=\"mt-2\"&gt;\n            @locationWarning\n        &lt;/FodAlert&gt;\n    }\n&lt;/EditForm&gt;\n\n@code {\n    private EditContext editContext;\n    private LocationModel model = new();\n    private string? locationWarning;\n\n    protected override void OnInitialized()\n    {\n        editContext = new EditContext(model);\n        editContext.AddDataAnnotationsValidation();\n    }\n\n    private async Task ValidateLocation()\n    {\n        locationWarning = null;\n\n        if (model.Location != null)\n        {\n            // Verificare personalizat\u0103\n            if (model.Location.IsTemporaryClosed)\n            {\n                locationWarning = \"Aceast\u0103 loca\u021bie este temporar \u00eenchis\u0103.\";\n            }\n            else if (model.Location.Capacity &lt; 10)\n            {\n                locationWarning = \"Aceast\u0103 loca\u021bie are capacitate limitat\u0103.\";\n            }\n        }\n\n        // Re-validare c\u00e2mp\n        editContext.NotifyFieldChanged(\n            FieldIdentifier.Create(() =&gt; model.Location));\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#select-cu-debounce-pentru-performanta","title":"Select cu debounce pentru performan\u021b\u0103","text":"<pre><code>@implements IDisposable\n\n&lt;FodInputFilteredSelect T=\"Article\" \n                        @bind-Value=\"selectedArticle\"\n                        Source=\"@filteredArticles\"\n                        Label=\"Articol\"\n                        Placeholder=\"C\u0103uta\u021bi articol...\"\n                        OnFilterChanged=\"@HandleFilterChanged\" /&gt;\n\n@code {\n    private Article? selectedArticle;\n    private List&lt;SelectableItem&lt;Article&gt;&gt; allArticles = new();\n    private List&lt;SelectableItem&lt;Article&gt;&gt; filteredArticles = new();\n    private CancellationTokenSource? debounceTokenSource;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 toate articolele\n        var articles = await ArticleService.GetAllArticlesAsync();\n        allArticles = articles.Select(a =&gt; new SelectableItem&lt;Article&gt;\n        {\n            Value = a,\n            Label = a.Title,\n            Data = a\n        }).ToList();\n\n        // Ini\u021bial arat\u0103 primele 50\n        filteredArticles = allArticles.Take(50).ToList();\n    }\n\n    private async Task HandleFilterChanged(string filter)\n    {\n        // Cancel c\u0103utarea anterioar\u0103\n        debounceTokenSource?.Cancel();\n        debounceTokenSource = new CancellationTokenSource();\n\n        try\n        {\n            // A\u0219teapt\u0103 300ms \u00eenainte de filtrare\n            await Task.Delay(300, debounceTokenSource.Token);\n\n            if (string.IsNullOrWhiteSpace(filter))\n            {\n                filteredArticles = allArticles.Take(50).ToList();\n            }\n            else\n            {\n                filteredArticles = allArticles\n                    .Where(a =&gt; a.Label.Contains(filter, \n                        StringComparison.OrdinalIgnoreCase))\n                    .Take(50)\n                    .ToList();\n            }\n\n            StateHasChanged();\n        }\n        catch (TaskCanceledException)\n        {\n            // C\u0103utare anulat\u0103, ignor\u0103\n        }\n    }\n\n    public void Dispose()\n    {\n        debounceTokenSource?.Cancel();\n        debounceTokenSource?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>T</code> Valoarea selectat\u0103 <code>default(T)</code> <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Eveniment la schimbarea valorii - <code>Source</code> <code>List&lt;SelectableItem&lt;T&gt;&gt;</code> Lista de op\u021biuni <code>null</code> <code>Label</code> <code>string</code> Eticheta c\u00e2mpului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder <code>null</code> <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 componenta <code>false</code> <code>ReadOnly</code> <code>bool</code> Doar citire <code>false</code> <code>OnFilterChanged</code> <code>EventCallback&lt;string&gt;</code> Eveniment la schimbarea filtrului - <code>MaxDropdownHeight</code> <code>int</code> \u00cen\u0103l\u021bime maxim\u0103 dropdown (px) <code>300</code> <code>MinFilterLength</code> <code>int</code> Lungime minim\u0103 pentru filtrare <code>0</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodInputFilteredSelect/#4-model-selectableitem","title":"4. Model SelectableItem <pre><code>public class SelectableItem&lt;T&gt;\n{\n    public T Value { get; set; }\n    public string Label { get; set; }\n    public string? GroupLabel { get; set; }\n    public string? SearchableText { get; set; }\n    public bool IsDisabled { get; set; }\n    public T Data { get; set; }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#5-evenimente","title":"5. Evenimente    Eveniment Tip Descriere     <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd se selecteaz\u0103 o valoare   <code>OnFilterChanged</code> <code>EventCallback&lt;string&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 textul de filtrare   <code>OnDropdownOpen</code> <code>EventCallback</code> Se declan\u0219eaz\u0103 c\u00e2nd se deschide dropdown-ul   <code>OnDropdownClose</code> <code>EventCallback</code> Se declan\u0219eaz\u0103 c\u00e2nd se \u00eenchide dropdown-ul","text":""},{"location":"fod/componente/FodInputFilteredSelect/#6-metode-publice","title":"6. Metode publice    Metod\u0103 Descriere Parametri Return     <code>ClearSelection()</code> \u0218terge selec\u021bia curent\u0103 - <code>void</code>   <code>FocusAsync()</code> Seteaz\u0103 focus pe input - <code>ValueTask</code>   <code>CloseDropdown()</code> \u00cenchide dropdown-ul - <code>void</code>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare <pre><code>/* Select cu bordur\u0103 colorat\u0103 */\n.custom-filtered-select .fod-input-filtered-select {\n    border: 2px solid var(--fod-palette-primary-main);\n    border-radius: 8px;\n}\n\n/* Highlight pentru text filtrat */\n.fod-filtered-option mark {\n    background-color: var(--fod-palette-warning-light);\n    color: inherit;\n    font-weight: 600;\n}\n\n/* Dropdown cu umbr\u0103 mai pronun\u021bat\u0103 */\n.fod-filtered-dropdown {\n    box-shadow: 0 8px 24px rgba(0,0,0,0.15);\n    border-radius: 8px;\n    overflow: hidden;\n}\n\n/* Hover state personalizat */\n.fod-filtered-option:hover {\n    background-color: var(--fod-palette-primary-light);\n    color: var(--fod-palette-primary-contrastText);\n}\n\n/* Op\u021biune selectat\u0103 */\n.fod-filtered-option.selected {\n    background-color: var(--fod-palette-primary-main);\n    color: var(--fod-palette-primary-contrastText);\n    font-weight: 600;\n}\n\n/* Loading state */\n.fod-filtered-select-loading {\n    position: relative;\n}\n\n.fod-filtered-select-loading::after {\n    content: '';\n    position: absolute;\n    right: 40px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 16px;\n    height: 16px;\n    border: 2px solid var(--fod-palette-primary-main);\n    border-radius: 50%;\n    border-top-color: transparent;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    to { transform: translateY(-50%) rotate(360deg); }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/FodInputFilteredSelect/#in-wizard","title":"\u00cen Wizard","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;Steps&gt;\n        &lt;FodWizardStep Title=\"Selectare loca\u021bie\"&gt;\n            &lt;FodInputFilteredSelect @bind-Value=\"model.Location\"\n                                    Source=\"@locations\"\n                                    Label=\"Alege\u021bi loca\u021bia\"\n                                    Required=\"true\" /&gt;\n        &lt;/FodWizardStep&gt;\n        &lt;!-- Al\u021bi pa\u0219i --&gt;\n    &lt;/Steps&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#in-card-cu-formular","title":"\u00cen Card cu formular","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Atribuire task\n        &lt;/FodText&gt;\n        &lt;FodInputFilteredSelect @bind-Value=\"task.AssignedTo\"\n                                Source=\"@teamMembers\"\n                                Label=\"Asignat c\u0103tre\"\n                                Placeholder=\"Selecta\u021bi membru echip\u0103...\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#9-performanta","title":"9. Performan\u021b\u0103","text":""},{"location":"fod/componente/FodInputFilteredSelect/#pentru-liste-mari","title":"Pentru liste mari","text":"<pre><code>@code {\n    // Folosi\u021bi virtualizare pentru &gt; 1000 elemente\n    private async Task LoadLargeDataset()\n    {\n        // \u00cenc\u0103rca\u021bi doar primele N elemente\n        var initialItems = await DataService.GetTopItems(100);\n\n        // \u00cenc\u0103rca\u021bi restul \u00een background\n        _ = Task.Run(async () =&gt;\n        {\n            var remainingItems = await DataService.GetRemainingItems();\n            await InvokeAsync(() =&gt;\n            {\n                items.AddRange(remainingItems);\n                StateHasChanged();\n            });\n        });\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#10-accesibilitate","title":"10. Accesibilitate <ul> <li>Suport complet pentru tastatur\u0103 (Tab, Enter, Escape, Arrow keys)</li> <li>ARIA labels pentru screen readers</li> <li>Anun\u021buri pentru rezultate filtrare</li> <li>Focus management corect</li> <li>Suport pentru high contrast mode</li> </ul>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#11-validare-si-erori","title":"11. Validare \u0219i erori <pre><code>&lt;FodInputFilteredSelect @bind-Value=\"model.Category\"\n                        Source=\"@categories\"\n                        Label=\"Categorie\"\n                        Required=\"true\"\n                        ValidationFor=\"@(() =&gt; model.Category)\" /&gt;\n\n@code {\n    // Validare personalizat\u0103\n    private IEnumerable&lt;string&gt; ValidateCategory(Category? category)\n    {\n        if (category == null)\n            yield return \"Categoria este obligatorie\";\n        else if (category.IsDeprecated)\n            yield return \"Aceast\u0103 categorie nu mai este disponibil\u0103\";\n        else if (!category.IsActive)\n            yield return \"Categoria selectat\u0103 este inactiv\u0103\";\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#12-bune-practici","title":"12. Bune practici <ol> <li>Limita\u021bi rezultatele afi\u0219ate - Nu afi\u0219a\u021bi &gt; 50-100 rezultate simultan</li> <li>Debounce pentru filtrare - A\u0219tepta\u021bi 300-500ms dup\u0103 tastare</li> <li>Loading states - Afi\u0219a\u021bi indicator c\u00e2nd se \u00eencarc\u0103 date</li> <li>Placeholder descriptiv - Ajut\u0103 utilizatorii s\u0103 \u00een\u021beleag\u0103 ce pot c\u0103uta</li> <li>C\u0103utare flexibil\u0103 - Include\u021bi mai multe c\u00e2mpuri \u00een c\u0103utare</li> <li>Feedback clar - Afi\u0219a\u021bi \"Niciun rezultat\" c\u00e2nd nu se g\u0103se\u0219te nimic</li> </ol>","text":""},{"location":"fod/componente/FodInputFilteredSelect/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodInputFilteredSelect/#dropdown-ul-nu-se-deschide","title":"Dropdown-ul nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 Source nu este null sau gol</li> <li>Verifica\u021bi c\u0103 nu este Disabled sau ReadOnly</li> <li>Verifica\u021bi z-index \u00een CSS</li> </ul>"},{"location":"fod/componente/FodInputFilteredSelect/#filtrarea-nu-functioneaza","title":"Filtrarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 SearchableText sau Label sunt setate</li> <li>Verifica\u021bi MinFilterLength</li> <li>Verifica\u021bi logica de filtrare personalizat\u0103</li> </ul>"},{"location":"fod/componente/FodInputFilteredSelect/#performanta-slaba","title":"Performan\u021b\u0103 slab\u0103","text":"<ul> <li>Reduce\u021bi num\u0103rul de elemente afi\u0219ate</li> <li>Implementa\u021bi debounce</li> <li>Folosi\u021bi virtualizare pentru liste mari</li> <li>Optimiza\u021bi logica de filtrare</li> </ul>"},{"location":"fod/componente/FodInputFilteredSelect/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodInputFilteredSelect/#cascading-dropdowns","title":"Cascading dropdowns","text":"<pre><code>&lt;FodInputFilteredSelect @bind-Value=\"selectedCountry\"\n                        Source=\"@countries\"\n                        Label=\"\u021aar\u0103\"\n                        @bind-Value:after=\"OnCountryChanged\" /&gt;\n\n&lt;FodInputFilteredSelect @bind-Value=\"selectedCity\"\n                        Source=\"@cities\"\n                        Label=\"Ora\u0219\"\n                        Disabled=\"@(selectedCountry == null)\" /&gt;\n\n@code {\n    private async Task OnCountryChanged()\n    {\n        selectedCity = null;\n        if (selectedCountry != null)\n        {\n            cities = await LoadCitiesForCountry(selectedCountry.Id);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputFilteredSelect/#15-concluzie","title":"15. Concluzie <p><code>FodInputFilteredSelect</code> ofer\u0103 o experien\u021b\u0103 superioar\u0103 de selec\u021bie pentru liste mari de date, combin\u00e2nd func\u021bionalitatea unui dropdown clasic cu puterea unui c\u00e2mp de c\u0103utare. Cu suport pentru filtrare \u00een timp real, validare integrat\u0103 \u0219i personalizare extensiv\u0103, componenta este ideal\u0103 pentru formulare complexe \u0219i interfe\u021be moderne.</p>","text":""},{"location":"fod/componente/FodInputLabel/","title":"FodInputLabel","text":""},{"location":"fod/componente/FodInputLabel/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputLabel</code> este o component\u0103 specializat\u0103 pentru etichetele input-urilor care extinde <code>FodComponent</code>. Ofer\u0103 stilizare consistent\u0103, anima\u021bii \u0219i suport pentru diferite variante vizuale. Este optimizat\u0103 pentru accesibilitate prin atributul <code>for</code> \u0219i integrare cu sistemul de stiluri FOD.</p>"},{"location":"fod/componente/FodInputLabel/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Label simplu --&gt;\n&lt;FodInputLabel ForId=\"username-input\"&gt;\n    Nume utilizator\n&lt;/FodInputLabel&gt;\n&lt;input id=\"username-input\" type=\"text\" /&gt;\n\n&lt;!-- Label cu stare de eroare --&gt;\n&lt;FodInputLabel ForId=\"email-input\" Error=\"true\"&gt;\n    Email\n&lt;/FodInputLabel&gt;\n&lt;input id=\"email-input\" type=\"email\" /&gt;\n\n&lt;!-- Label dezactivat --&gt;\n&lt;FodInputLabel ForId=\"disabled-input\" Disabled=\"true\"&gt;\n    C\u00e2mp dezactivat\n&lt;/FodInputLabel&gt;\n&lt;input id=\"disabled-input\" type=\"text\" disabled /&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere ChildContent RenderFragment - Con\u021binutul label-ului ForId string \"\" ID-ul input-ului asociat (pentru WCAG) Disabled bool false Stare dezactivat\u0103 Error bool false Stare de eroare Variant FodVariant Text Varianta vizual\u0103 Margin Margin None Spa\u021biere vertical\u0103 Class string null Clase CSS adi\u021bionale Style string null Stiluri inline"},{"location":"fod/componente/FodInputLabel/#clase-css-generate","title":"Clase CSS Generate","text":"<p>Componenta genereaz\u0103 urm\u0103toarele clase: - <code>fod-input-label</code> - Clasa de baz\u0103 - <code>fod-input-label-animated</code> - Pentru anima\u021bii - <code>fod-input-label-{variant}</code> - Bazat pe variant - <code>fod-input-label-margin-{margin}</code> - Pentru spa\u021biere - <code>fod-disabled</code> - C\u00e2nd e dezactivat - <code>fod-input-error</code> - Pentru stare de eroare</p>"},{"location":"fod/componente/FodInputLabel/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodInputLabel/#formular-cu-label-uri-complete","title":"Formular cu Label-uri Complete","text":"<pre><code>&lt;EditForm Model=\"@model\"&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;FodInputLabel ForId=\"name\" Margin=\"Margin.Dense\"&gt;\n            Nume complet &lt;span class=\"required\"&gt;*&lt;/span&gt;\n        &lt;/FodInputLabel&gt;\n        &lt;input id=\"name\" @bind=\"model.Name\" class=\"form-control\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;FodInputLabel ForId=\"email\" \n                       Error=\"@(!IsEmailValid())\"\n                       Margin=\"Margin.Normal\"&gt;\n            Adres\u0103 email\n        &lt;/FodInputLabel&gt;\n        &lt;input id=\"email\" @bind=\"model.Email\" type=\"email\" class=\"form-control\" /&gt;\n        @if (!IsEmailValid())\n        {\n            &lt;span class=\"error-message\"&gt;Email invalid&lt;/span&gt;\n        }\n    &lt;/div&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;FodInputLabel ForId=\"phone\" \n                       Disabled=\"@model.IsInternational\"\n                       Margin=\"Margin.Normal\"&gt;\n            Telefon local\n        &lt;/FodInputLabel&gt;\n        &lt;input id=\"phone\" \n               @bind=\"model.Phone\" \n               disabled=\"@model.IsInternational\" \n               class=\"form-control\" /&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel model = new();\n\n    private bool IsEmailValid()\n    {\n        return string.IsNullOrEmpty(model.Email) || \n               model.Email.Contains(\"@\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#label-uri-cu-variante","title":"Label-uri cu Variante","text":"<pre><code>&lt;!-- Text variant (default) --&gt;\n&lt;FodInputLabel ForId=\"text-input\" Variant=\"FodVariant.Text\"&gt;\n    Text Label\n&lt;/FodInputLabel&gt;\n\n&lt;!-- Filled variant --&gt;\n&lt;FodInputLabel ForId=\"filled-input\" Variant=\"FodVariant.Filled\"&gt;\n    Filled Label\n&lt;/FodInputLabel&gt;\n\n&lt;!-- Outlined variant --&gt;\n&lt;FodInputLabel ForId=\"outlined-input\" Variant=\"FodVariant.Outlined\"&gt;\n    Outlined Label\n&lt;/FodInputLabel&gt;\n\n&lt;style&gt;\n    .fod-input-label-text {\n        color: #495057;\n        font-weight: normal;\n    }\n\n    .fod-input-label-filled {\n        background-color: #f8f9fa;\n        padding: 4px 8px;\n        border-radius: 4px 4px 0 0;\n    }\n\n    .fod-input-label-outlined {\n        background-color: white;\n        padding: 0 4px;\n        position: absolute;\n        top: -10px;\n        left: 12px;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#label-animat-floating-label","title":"Label Animat (Floating Label)","text":"<pre><code>&lt;div class=\"floating-label-container\"&gt;\n    &lt;input id=\"floating-input\" \n           type=\"text\" \n           placeholder=\" \"\n           @bind=\"floatingValue\" /&gt;\n    &lt;FodInputLabel ForId=\"floating-input\" \n                   Class=\"floating-label\"&gt;\n        Label animat\n    &lt;/FodInputLabel&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n    .floating-label-container {\n        position: relative;\n        margin-top: 1rem;\n    }\n\n    .floating-label-container input {\n        padding: 1rem 0.75rem 0.5rem;\n        border: 1px solid #ced4da;\n        border-radius: 4px;\n        width: 100%;\n    }\n\n    .floating-label {\n        position: absolute;\n        top: 50%;\n        left: 0.75rem;\n        transform: translateY(-50%);\n        transition: all 0.3s ease;\n        pointer-events: none;\n        background: white;\n        padding: 0 0.25rem;\n    }\n\n    .floating-label-container input:focus + .floating-label,\n    .floating-label-container input:not(:placeholder-shown) + .floating-label {\n        top: 0;\n        font-size: 0.875rem;\n        color: #007bff;\n    }\n&lt;/style&gt;\n\n@code {\n    private string floatingValue;\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#label-cu-tooltip-si-iconite","title":"Label cu Tooltip \u0219i Iconi\u021be","text":"<pre><code>&lt;div class=\"label-with-info\"&gt;\n    &lt;FodInputLabel ForId=\"complex-input\" Class=\"d-flex align-items-center\"&gt;\n        &lt;span&gt;C\u00e2mp complex&lt;/span&gt;\n        &lt;FodTooltip Text=\"Acest c\u00e2mp necesit\u0103 informa\u021bii speciale\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n                     Size=\"FodSize.Small\" \n                     Class=\"ms-1\" /&gt;\n        &lt;/FodTooltip&gt;\n    &lt;/FodInputLabel&gt;\n    &lt;input id=\"complex-input\" type=\"text\" class=\"form-control\" /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"label-with-badge\"&gt;\n    &lt;FodInputLabel ForId=\"premium-input\" Class=\"d-flex align-items-center\"&gt;\n        &lt;span&gt;Func\u021bie Premium&lt;/span&gt;\n        &lt;FodBadge Color=\"FodColor.Warning\" Class=\"ms-2\"&gt;\n            PRO\n        &lt;/FodBadge&gt;\n    &lt;/FodInputLabel&gt;\n    &lt;input id=\"premium-input\" type=\"text\" class=\"form-control\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#label-uri-conditionate","title":"Label-uri Condi\u021bionate","text":"<pre><code>&lt;div class=\"conditional-labels\"&gt;\n    @foreach (var field in dynamicFields)\n    {\n        &lt;div class=\"form-group\"&gt;\n            &lt;FodInputLabel ForId=\"@($\"field-{field.Id}\")\"\n                           Error=\"@field.HasError\"\n                           Disabled=\"@(!field.IsEditable)\"\n                           Margin=\"Margin.Normal\"&gt;\n                @field.Label\n                @if (field.IsRequired)\n                {\n                    &lt;span class=\"text-danger\"&gt;*&lt;/span&gt;\n                }\n            &lt;/FodInputLabel&gt;\n\n            &lt;input id=\"@($\"field-{field.Id}\")\"\n                   type=\"@field.Type\"\n                   disabled=\"@(!field.IsEditable)\"\n                   class=\"form-control @(field.HasError ? \"is-invalid\" : \"\")\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;DynamicField&gt; dynamicFields = new()\n    {\n        new() { Id = 1, Label = \"Nume\", Type = \"text\", IsRequired = true, IsEditable = true },\n        new() { Id = 2, Label = \"Email\", Type = \"email\", IsRequired = true, IsEditable = true },\n        new() { Id = 3, Label = \"Cod\", Type = \"text\", IsRequired = false, IsEditable = false }\n    };\n\n    public class DynamicField\n    {\n        public int Id { get; set; }\n        public string Label { get; set; }\n        public string Type { get; set; }\n        public bool IsRequired { get; set; }\n        public bool IsEditable { get; set; }\n        public bool HasError { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#label-cu-stari-multiple","title":"Label cu St\u0103ri Multiple","text":"<pre><code>&lt;div class=\"multi-state-example\"&gt;\n    &lt;FodInputLabel ForId=\"state-input\"\n                   @ref=\"labelRef\"\n                   Error=\"@hasError\"\n                   Disabled=\"@isDisabled\"\n                   Class=\"@GetLabelClass()\"&gt;\n        @GetLabelText()\n    &lt;/FodInputLabel&gt;\n\n    &lt;input id=\"state-input\" \n           @bind=\"stateValue\"\n           @oninput=\"ValidateInput\"\n           disabled=\"@isDisabled\" /&gt;\n\n    &lt;div class=\"controls mt-2\"&gt;\n        &lt;FodButton @onclick=\"ToggleDisabled\"&gt;Toggle Disabled&lt;/FodButton&gt;\n        &lt;FodButton @onclick=\"SimulateError\"&gt;Simulate Error&lt;/FodButton&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FodInputLabel labelRef;\n    private string stateValue;\n    private bool hasError;\n    private bool isDisabled;\n\n    private string GetLabelText()\n    {\n        if (hasError) return \"C\u00e2mp cu eroare\";\n        if (isDisabled) return \"C\u00e2mp dezactivat\";\n        if (!string.IsNullOrEmpty(stateValue)) return \"C\u00e2mp completat\";\n        return \"C\u00e2mp normal\";\n    }\n\n    private string GetLabelClass()\n    {\n        if (hasError) return \"error-state\";\n        if (isDisabled) return \"disabled-state\";\n        if (!string.IsNullOrEmpty(stateValue)) return \"filled-state\";\n        return \"normal-state\";\n    }\n\n    private void ValidateInput(ChangeEventArgs e)\n    {\n        stateValue = e.Value?.ToString();\n        hasError = stateValue?.Length &lt; 3;\n    }\n\n    private void ToggleDisabled() =&gt; isDisabled = !isDisabled;\n    private void SimulateError() =&gt; hasError = !hasError;\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodInputLabel/#stiluri-pentru-animatii","title":"Stiluri pentru Anima\u021bii","text":"<pre><code>.fod-input-label-animated {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.fod-input-label-animated:hover {\n    color: #007bff;\n}\n\n/* Anima\u021bie pentru focus */\n.form-control:focus ~ .fod-input-label-animated {\n    color: #007bff;\n    transform: scale(0.9);\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#stiluri-pentru-stari","title":"Stiluri pentru St\u0103ri","text":"<pre><code>/* Eroare */\n.fod-input-error {\n    color: #dc3545 !important;\n}\n\n/* Dezactivat */\n.fod-disabled {\n    color: #6c757d !important;\n    cursor: not-allowed;\n    opacity: 0.6;\n}\n\n/* Margin-uri */\n.fod-input-label-margin-dense {\n    margin-bottom: 0.25rem;\n}\n\n.fod-input-label-margin-normal {\n    margin-bottom: 0.5rem;\n}\n\n.fod-input-label-margin-none {\n    margin-bottom: 0;\n}\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#accesibilitate","title":"Accesibilitate","text":""},{"location":"fod/componente/FodInputLabel/#asociere-corecta","title":"Asociere Corect\u0103","text":"<pre><code>&lt;!-- Corect - folose\u0219te ForId --&gt;\n&lt;FodInputLabel ForId=\"accessible-input\"&gt;\n    C\u00e2mp accesibil\n&lt;/FodInputLabel&gt;\n&lt;input id=\"accessible-input\" type=\"text\" /&gt;\n\n&lt;!-- Alternativ\u0103 - wrap input --&gt;\n&lt;label class=\"fod-input-label\"&gt;\n    C\u00e2mp accesibil\n    &lt;input type=\"text\" /&gt;\n&lt;/label&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#aria-labels","title":"ARIA Labels","text":"<pre><code>&lt;FodInputLabel ForId=\"aria-input\" \n               UserAttributes=\"@(new Dictionary&lt;string, object&gt; \n               { \n                   [\"aria-describedby\"] = \"help-text\" \n               })\"&gt;\n    C\u00e2mp cu ajutor\n&lt;/FodInputLabel&gt;\n&lt;input id=\"aria-input\" type=\"text\" aria-describedby=\"help-text\" /&gt;\n&lt;small id=\"help-text\"&gt;Text de ajutor pentru acest c\u00e2mp&lt;/small&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi \u00eentotdeauna ForId - Pentru accesibilitate</li> <li>Indica\u021bi c\u00e2mpurile obligatorii - Cu * sau (obligatoriu)</li> <li>Stilizare consistent\u0103 - Folosi\u021bi variantele FOD</li> <li>Feedback vizual - Pentru erori \u0219i st\u0103ri</li> <li>Text clar \u0219i concis - Evita\u021bi label-uri lungi</li> </ol>"},{"location":"fod/componente/FodInputLabel/#integrare-cu-componente-fod","title":"Integrare cu Componente FOD","text":"<pre><code>&lt;!-- Cu FodInput --&gt;\n&lt;FodInputLabel ForId=\"fod-input\"&gt;Email&lt;/FodInputLabel&gt;\n&lt;FodInput Id=\"fod-input\" @bind-Value=\"email\" InputType=\"InputType.Email\" /&gt;\n\n&lt;!-- Cu FODInputWrapper --&gt;\n&lt;FODInputWrapper FormComponent=\"@this\"&gt;\n    &lt;FodInputLabel ForId=\"@GetName()\"&gt;@GetLabel()&lt;/FodInputLabel&gt;\n    &lt;input id=\"@GetName()\" /&gt;\n&lt;/FODInputWrapper&gt;\n</code></pre>"},{"location":"fod/componente/FodInputLabel/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Component lightweight f\u0103r\u0103 logic\u0103 complex\u0103</li> <li>Re-renderare doar la schimbarea parametrilor</li> <li>CSS classes cached prin CssBuilder</li> </ul>"},{"location":"fod/componente/FodInputLabel/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Nu suport\u0103 pozi\u021bionare automat\u0103 (floating labels necesit\u0103 CSS custom)</li> <li>Nu are anima\u021bii built-in complexe</li> <li>Nu gestioneaz\u0103 automat asocierea cu input-uri</li> </ul>"},{"location":"fod/componente/FodInputLabel/#concluzie","title":"Concluzie","text":"<p>FodInputLabel ofer\u0103 o solu\u021bie simpl\u0103 dar puternic\u0103 pentru etichetarea input-urilor, cu suport complet pentru accesibilitate, st\u0103ri vizuale \u0219i integrare \u00een sistemul de design FOD. Este componenta ideal\u0103 pentru a asigura consisten\u021b\u0103 vizual\u0103 \u0219i experien\u021b\u0103 utilizator optim\u0103 \u00een formulare.</p>"},{"location":"fod/componente/FodInputNullableNumber/","title":"FodInputNullableNumber","text":""},{"location":"fod/componente/FodInputNullableNumber/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodInputNullableNumber</code> este o component\u0103 specializat\u0103 pentru introducerea valorilor numerice op\u021bionale de tip <code>decimal?</code>. Extinde <code>FODFormComponent&lt;decimal?&gt;</code> \u0219i ofer\u0103 suport complet pentru valori null, validare \u0219i integrare cu EditForm. Este ideal\u0103 pentru c\u00e2mpuri numerice care pot fi l\u0103sate goale.</p>"},{"location":"fod/componente/FodInputNullableNumber/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Input numeric op\u021bional --&gt;\n&lt;FodInputNullableNumber @bind-Value=\"discount\" \n                        Label=\"Reducere (%)\" /&gt;\n\n&lt;!-- Input cu placeholder --&gt;\n&lt;FodInputNullableNumber @bind-Value=\"maxAmount\" \n                        Label=\"Suma maxim\u0103\"\n                        Placeholder=\"F\u0103r\u0103 limit\u0103\" /&gt;\n\n&lt;!-- Input readonly --&gt;\n&lt;FodInputNullableNumber @bind-Value=\"calculatedValue\" \n                        Label=\"Valoare calculat\u0103\"\n                        Readonly=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#diferenta-fata-de-fodinputnumber","title":"Diferen\u021ba fa\u021b\u0103 de FODInputNumber","text":"Caracteristic\u0103 FodInputNullableNumber FODInputNumber Tip valoare decimal? TValue (generic) Permite null Da Depinde de tip Valoare implicit\u0103 null 0 Specializare Doar decimal int, double, decimal"},{"location":"fod/componente/FodInputNullableNumber/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Default Descriere Value decimal? null Valoarea curent\u0103 Label string null Eticheta c\u00e2mpului Placeholder string null Text placeholder Readonly bool false Dezactiveaz\u0103 input-ul CssClass string null Clase CSS adi\u021bionale Required bool? null Marcheaz\u0103 ca obligatoriu"},{"location":"fod/componente/FodInputNullableNumber/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodInputNullableNumber/#formular-financiar","title":"Formular Financiar","text":"<pre><code>&lt;EditForm Model=\"@invoice\" OnValidSubmit=\"@ProcessInvoice\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"invoice-form\"&gt;\n        &lt;FodInputNullableNumber @bind-Value=\"invoice.Subtotal\" \n                                Label=\"Subtotal\"\n                                Readonly=\"true\" /&gt;\n\n        &lt;FodInputNullableNumber @bind-Value=\"invoice.DiscountPercent\" \n                                Label=\"Reducere (%)\"\n                                Placeholder=\"0\"\n                                @bind-Value:after=\"CalculateTotals\" /&gt;\n\n        &lt;FodInputNullableNumber @bind-Value=\"invoice.DiscountAmount\" \n                                Label=\"Reducere (MDL)\"\n                                Placeholder=\"0\"\n                                @bind-Value:after=\"CalculateTotals\" /&gt;\n\n        &lt;FodInputNullableNumber @bind-Value=\"invoice.TaxOverride\" \n                                Label=\"TVA manual\"\n                                Placeholder=\"Auto-calculat\"\n                                Description=\"L\u0103sa\u021bi gol pentru calcul automat\" /&gt;\n\n        &lt;FodInputNullableNumber @bind-Value=\"invoice.Total\" \n                                Label=\"Total\"\n                                Readonly=\"true\" /&gt;\n    &lt;/div&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\"&gt;Salveaz\u0103 factura&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private InvoiceModel invoice = new();\n\n    public class InvoiceModel\n    {\n        public decimal Subtotal { get; set; } = 1000;\n\n        [Range(0, 100, ErrorMessage = \"Reducerea trebuie s\u0103 fie \u00eentre 0 \u0219i 100%\")]\n        public decimal? DiscountPercent { get; set; }\n\n        [Range(0, double.MaxValue, ErrorMessage = \"Reducerea nu poate fi negativ\u0103\")]\n        public decimal? DiscountAmount { get; set; }\n\n        public decimal? TaxOverride { get; set; }\n\n        public decimal Total { get; set; }\n    }\n\n    private void CalculateTotals()\n    {\n        var discountTotal = 0m;\n\n        if (invoice.DiscountPercent.HasValue)\n        {\n            discountTotal = invoice.Subtotal * (invoice.DiscountPercent.Value / 100);\n        }\n        else if (invoice.DiscountAmount.HasValue)\n        {\n            discountTotal = invoice.DiscountAmount.Value;\n        }\n\n        var afterDiscount = invoice.Subtotal - discountTotal;\n        var tax = invoice.TaxOverride ?? (afterDiscount * 0.20m);\n\n        invoice.Total = afterDiscount + tax;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#filtre-cu-valori-optionale","title":"Filtre cu Valori Op\u021bionale","text":"<pre><code>&lt;div class=\"search-filters\"&gt;\n    &lt;h4&gt;Filtreaz\u0103 produse&lt;/h4&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"filters.MinPrice\" \n                            Label=\"Pre\u021b minim\"\n                            Placeholder=\"De la...\"\n                            @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"filters.MaxPrice\" \n                            Label=\"Pre\u021b maxim\"\n                            Placeholder=\"P\u00e2n\u0103 la...\"\n                            @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"filters.MinStock\" \n                            Label=\"Stoc minim\"\n                            Placeholder=\"Orice stoc\"\n                            @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"filters.MaxWeight\" \n                            Label=\"Greutate maxim\u0103 (kg)\"\n                            Placeholder=\"F\u0103r\u0103 limit\u0103\"\n                            @bind-Value:after=\"ApplyFilters\" /&gt;\n\n    &lt;div class=\"filter-results mt-3\"&gt;\n        &lt;p&gt;G\u0103site: @filteredProducts.Count produse&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FilterModel filters = new();\n    private List&lt;Product&gt; allProducts = new();\n    private List&lt;Product&gt; filteredProducts = new();\n\n    public class FilterModel\n    {\n        public decimal? MinPrice { get; set; }\n        public decimal? MaxPrice { get; set; }\n        public decimal? MinStock { get; set; }\n        public decimal? MaxWeight { get; set; }\n    }\n\n    private void ApplyFilters()\n    {\n        filteredProducts = allProducts.Where(p =&gt;\n            (!filters.MinPrice.HasValue || p.Price &gt;= filters.MinPrice.Value) &amp;&amp;\n            (!filters.MaxPrice.HasValue || p.Price &lt;= filters.MaxPrice.Value) &amp;&amp;\n            (!filters.MinStock.HasValue || p.Stock &gt;= filters.MinStock.Value) &amp;&amp;\n            (!filters.MaxWeight.HasValue || p.Weight &lt;= filters.MaxWeight.Value)\n        ).ToList();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#configurare-limite-optionale","title":"Configurare Limite Op\u021bionale","text":"<pre><code>&lt;div class=\"limit-configuration\"&gt;\n    &lt;h4&gt;Configurare limite cont&lt;/h4&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"limits.MaxDailyTransfer\" \n                            Label=\"Transfer zilnic maxim\"\n                            Placeholder=\"Nelimitat\"\n                            Description=\"L\u0103sa\u021bi gol pentru f\u0103r\u0103 limit\u0103\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"limits.MaxMonthlyTransfer\" \n                            Label=\"Transfer lunar maxim\"\n                            Placeholder=\"Nelimitat\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"limits.MinBalance\" \n                            Label=\"Sold minim\"\n                            Placeholder=\"0.00\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"limits.CreditLimit\" \n                            Label=\"Limit\u0103 de credit\"\n                            Placeholder=\"F\u0103r\u0103 credit\"\n                            @bind-Value:after=\"ValidateLimits\" /&gt;\n\n    @if (!string.IsNullOrEmpty(validationMessage))\n    {\n        &lt;div class=\"alert alert-warning mt-2\"&gt;@validationMessage&lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private AccountLimits limits = new();\n    private string validationMessage;\n\n    public class AccountLimits\n    {\n        public decimal? MaxDailyTransfer { get; set; }\n        public decimal? MaxMonthlyTransfer { get; set; }\n        public decimal? MinBalance { get; set; }\n        public decimal? CreditLimit { get; set; }\n    }\n\n    private void ValidateLimits()\n    {\n        validationMessage = null;\n\n        if (limits.MaxDailyTransfer.HasValue &amp;&amp; \n            limits.MaxMonthlyTransfer.HasValue &amp;&amp;\n            limits.MaxDailyTransfer.Value &gt; limits.MaxMonthlyTransfer.Value)\n        {\n            validationMessage = \"Limita zilnic\u0103 nu poate dep\u0103\u0219i limita lunar\u0103\";\n        }\n\n        if (limits.MinBalance.HasValue &amp;&amp; \n            limits.CreditLimit.HasValue &amp;&amp;\n            limits.MinBalance.Value &lt; -limits.CreditLimit.Value)\n        {\n            validationMessage = \"Soldul minim nu poate fi mai mic dec\u00e2t limita de credit negativ\u0103\";\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#calculator-cu-campuri-optionale","title":"Calculator cu C\u00e2mpuri Op\u021bionale","text":"<pre><code>&lt;div class=\"loan-calculator\"&gt;\n    &lt;h4&gt;Calculator \u00eemprumut&lt;/h4&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"loan.Principal\" \n                            Label=\"Suma \u00eemprumut\"\n                            Required=\"true\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"loan.InterestRate\" \n                            Label=\"Rat\u0103 dob\u00e2nd\u0103 (%)\"\n                            Required=\"true\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"loan.Term\" \n                            Label=\"Perioad\u0103 (luni)\"\n                            Required=\"true\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"loan.DownPayment\" \n                            Label=\"Avans\"\n                            Placeholder=\"Op\u021bional\"\n                            @bind-Value:after=\"Calculate\" /&gt;\n\n    &lt;FodInputNullableNumber @bind-Value=\"loan.ExtraMonthlyPayment\" \n                            Label=\"Plat\u0103 suplimentar\u0103 lunar\u0103\"\n                            Placeholder=\"0\"\n                            @bind-Value:after=\"Calculate\" /&gt;\n\n    @if (result != null)\n    {\n        &lt;div class=\"calculation-result mt-3\"&gt;\n            &lt;p&gt;Plat\u0103 lunar\u0103: @result.MonthlyPayment.ToString(\"N2\") MDL&lt;/p&gt;\n            &lt;p&gt;Total de pl\u0103tit: @result.TotalPayment.ToString(\"N2\") MDL&lt;/p&gt;\n            &lt;p&gt;Total dob\u00e2nd\u0103: @result.TotalInterest.ToString(\"N2\") MDL&lt;/p&gt;\n            @if (loan.ExtraMonthlyPayment.HasValue)\n            {\n                &lt;p&gt;Economii: @result.Savings.ToString(\"N2\") MDL&lt;/p&gt;\n                &lt;p&gt;Timp economisit: @result.MonthsSaved luni&lt;/p&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private LoanModel loan = new();\n    private LoanResult result;\n\n    public class LoanModel\n    {\n        [Required(ErrorMessage = \"Suma este obligatorie\")]\n        [Range(1000, double.MaxValue, ErrorMessage = \"Suma minim\u0103: 1000 MDL\")]\n        public decimal? Principal { get; set; }\n\n        [Required(ErrorMessage = \"Rata dob\u00e2nzii este obligatorie\")]\n        [Range(0.1, 100, ErrorMessage = \"Rata trebuie s\u0103 fie \u00eentre 0.1% \u0219i 100%\")]\n        public decimal? InterestRate { get; set; }\n\n        [Required(ErrorMessage = \"Perioada este obligatorie\")]\n        [Range(1, 360, ErrorMessage = \"Perioada: 1-360 luni\")]\n        public decimal? Term { get; set; }\n\n        public decimal? DownPayment { get; set; }\n        public decimal? ExtraMonthlyPayment { get; set; }\n    }\n\n    private void Calculate()\n    {\n        if (!loan.Principal.HasValue || !loan.InterestRate.HasValue || !loan.Term.HasValue)\n            return;\n\n        var principal = loan.Principal.Value - (loan.DownPayment ?? 0);\n        var monthlyRate = loan.InterestRate.Value / 100 / 12;\n        var months = (int)loan.Term.Value;\n\n        // Calcul plat\u0103 standard\n        var monthlyPayment = principal * monthlyRate * \n            (decimal)Math.Pow((double)(1 + monthlyRate), months) /\n            ((decimal)Math.Pow((double)(1 + monthlyRate), months) - 1);\n\n        result = new LoanResult\n        {\n            MonthlyPayment = monthlyPayment,\n            TotalPayment = monthlyPayment * months,\n            TotalInterest = (monthlyPayment * months) - principal\n        };\n\n        // Calcul cu pl\u0103\u021bi suplimentare\n        if (loan.ExtraMonthlyPayment.HasValue &amp;&amp; loan.ExtraMonthlyPayment.Value &gt; 0)\n        {\n            // Calcul simplificat pentru demonstra\u021bie\n            result.Savings = loan.ExtraMonthlyPayment.Value * 12;\n            result.MonthsSaved = 12;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#gestionarea-valorilor-null","title":"Gestionarea Valorilor Null","text":"<pre><code>protected override bool TryParseValueFromString(string value, out decimal? result, out string validationErrorMessage)\n{\n    result = null;\n\n    // String gol = valoare null (valid\u0103)\n    if(string.IsNullOrEmpty(value))\n    {\n        validationErrorMessage = null;\n        result = null;\n        return true;\n    }\n\n    // \u00cencearc\u0103 parsare ca decimal\n    decimal parsedResult = 0;\n    if (decimal.TryParse(value, out parsedResult))\n    {\n        result = parsedResult;\n        validationErrorMessage = null;\n        return true;\n    }\n\n    validationErrorMessage = \"Value must be a number\";\n    return false;\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#validare","title":"Validare","text":""},{"location":"fod/componente/FodInputNullableNumber/#cu-data-annotations","title":"Cu Data Annotations","text":"<pre><code>public class Model\n{\n    // C\u00e2mp op\u021bional\n    public decimal? OptionalValue { get; set; }\n\n    // C\u00e2mp obligatoriu\n    [Required(ErrorMessage = \"Valoarea este obligatorie\")]\n    public decimal? RequiredValue { get; set; }\n\n    // Cu range c\u00e2nd are valoare\n    [Range(0, 100, ErrorMessage = \"Valoarea trebuie s\u0103 fie \u00eentre 0 \u0219i 100\")]\n    public decimal? RangedValue { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#validare-conditionata","title":"Validare Condi\u021bionat\u0103","text":"<pre><code>public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n{\n    if (MinValue.HasValue &amp;&amp; MaxValue.HasValue &amp;&amp; MinValue.Value &gt; MaxValue.Value)\n    {\n        yield return new ValidationResult(\n            \"Valoarea minim\u0103 nu poate fi mai mare dec\u00e2t cea maxim\u0103\",\n            new[] { nameof(MinValue), nameof(MaxValue) });\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#stilizare","title":"Stilizare","text":"<pre><code>/* Input cu indicator pentru valoare null */\n.nullable-input input:placeholder-shown {\n    font-style: italic;\n    opacity: 0.7;\n}\n\n/* Highlight pentru c\u00e2mpuri cu valoare */\n.nullable-input input:not(:placeholder-shown) {\n    border-color: #28a745;\n    background-color: #f8fff9;\n}\n\n/* Indicator vizual pentru c\u00e2mpuri op\u021bionale */\n.optional-field label::after {\n    content: \" (op\u021bional)\";\n    font-size: 0.875em;\n    color: #6c757d;\n    font-style: italic;\n}\n</code></pre>"},{"location":"fod/componente/FodInputNullableNumber/#best-practices","title":"Best Practices","text":"<ol> <li>Placeholder descriptiv - Indica\u021bi clar c\u0103 e op\u021bional</li> <li>Validare null-aware - Verifica\u021bi HasValue \u00eenainte de Value</li> <li>Valori implicite clare - Folosi\u021bi ?? pentru fallback</li> <li>UI feedback - Ar\u0103ta\u021bi diferit c\u00e2mpurile cu/f\u0103r\u0103 valoare</li> <li>Descrieri utile - Explica\u021bi c\u00e2nd s\u0103 lase gol</li> </ol>"},{"location":"fod/componente/FodInputNullableNumber/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Parsare eficient\u0103 cu cache pentru string gol</li> <li>Nu re-valideaz\u0103 la blur dac\u0103 valoarea nu s-a schimbat</li> <li>Overhead minim pentru gestionare null</li> </ul>"},{"location":"fod/componente/FodInputNullableNumber/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Suport\u0103 doar tip decimal (nu int sau double)</li> <li>Nu are formatare automat\u0103 (mii, zecimale)</li> <li>Nu suport\u0103 input masks</li> </ul>"},{"location":"fod/componente/FodInputNullableNumber/#concluzie","title":"Concluzie","text":"<p>FodInputNullableNumber este componenta ideal\u0103 pentru valori numerice op\u021bionale, oferind gestionare elegant\u0103 a valorilor null cu validare complet\u0103 \u0219i integrare perfect\u0103 \u00een formulare Blazor. Este perfect\u0103 pentru filtre, limite op\u021bionale \u0219i orice c\u00e2mp numeric care poate fi l\u0103sat gol.</p>"},{"location":"fod/componente/FodLanguage/","title":"FodLanguage","text":""},{"location":"fod/componente/FodLanguage/#documentatie-pentru-componenta-fodlanguage","title":"Documenta\u021bie pentru componenta FodLanguage","text":""},{"location":"fod/componente/FodLanguage/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodLanguage</code> este o component\u0103 specializat\u0103 pentru selec\u021bia limbii aplica\u021biei. Ofer\u0103 un dropdown pre-configurat cu limbile disponibile \u0219i integrare automat\u0103 cu serviciul de cultur\u0103 pentru schimbarea limbii \u00een \u00eentreaga aplica\u021bie.</p> <p>Caracteristici principale: - Dropdown cu limbile disponibile - Detectare automat\u0103 a limbii curente - Integrare cu ICultureService - Iconi\u021ba implicit\u0103 pentru limbi - Suport pentru variant\u0103 vizual\u0103 (text/outlined/filled) - Actualizare automat\u0103 a culturii aplica\u021biei - Personalizare complet\u0103 a listei de limbi</p>"},{"location":"fod/componente/FodLanguage/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodLanguage/#selector-simplu-de-limba","title":"Selector simplu de limb\u0103","text":"<pre><code>&lt;FodLanguage Languages=\"@availableLanguages\" /&gt;\n\n@code {\n    private List&lt;SelectItem&gt; availableLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en\", Label = \"English\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#in-header-ul-aplicatiei","title":"\u00cen header-ul aplica\u021biei","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;ToolbarContent&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodLanguage Languages=\"@languages\" /&gt;\n        &lt;FodUserInfo /&gt;\n    &lt;/ToolbarContent&gt;\n&lt;/FodHeader&gt;\n\n@code {\n    private List&lt;SelectItem&gt; languages = new()\n    {\n        new SelectItem { Value = \"ro-RO\", Label = \"Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru-RU\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en-US\", Label = \"English\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#3-atribute-si-parametri","title":"3. Atribute \u0219i Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Languages</code> <code>List&lt;SelectItem&gt;</code> Lista limbilor disponibile - <code>StartIcon</code> <code>string</code> Iconi\u021ba afi\u0219at\u0103 <code>FodIcons.Filled.Language</code> <code>Variant</code> <code>FodVariant</code> Varianta vizual\u0103 <code>Text</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale -"},{"location":"fod/componente/FodLanguage/#4-exemple-de-utilizare","title":"4. Exemple de Utilizare","text":""},{"location":"fod/componente/FodLanguage/#configurare-completa-cu-steaguri","title":"Configurare complet\u0103 cu steaguri","text":"<pre><code>&lt;FodLanguage Languages=\"@languagesWithFlags\" Class=\"language-selector\" /&gt;\n\n@code {\n    private List&lt;SelectItem&gt; languagesWithFlags = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"\ud83c\uddf7\ud83c\uddf4 Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru\", Label = \"\ud83c\uddf7\ud83c\uddfa \u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en\", Label = \"\ud83c\uddec\ud83c\udde7 English\" },\n        new SelectItem { Value = \"fr\", Label = \"\ud83c\uddeb\ud83c\uddf7 Fran\u00e7ais\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#in-toolbar-cu-alte-controale","title":"\u00cen toolbar cu alte controale","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodText Typo=\"Typo.h6\"&gt;Aplica\u021bia Mea&lt;/FodText&gt;\n    &lt;FodSpacer /&gt;\n\n    &lt;!-- Selector tem\u0103 --&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Brightness4\" \n                   OnClick=\"ToggleTheme\" /&gt;\n\n    &lt;!-- Selector limb\u0103 --&gt;\n    &lt;FodLanguage Languages=\"@appLanguages\" /&gt;\n\n    &lt;!-- Notific\u0103ri --&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\"&gt;\n        &lt;FodBadge Content=\"3\" Color=\"FodColor.Error\" /&gt;\n    &lt;/FodIconButton&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private List&lt;SelectItem&gt; appLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"RO\" },\n        new SelectItem { Value = \"ru\", Label = \"RU\" },\n        new SelectItem { Value = \"en\", Label = \"EN\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#varianta-outlined-in-formular","title":"Variant\u0103 outlined \u00een formular","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Preferin\u021be utilizator\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                    Limba aplica\u021biei\n                &lt;/FodText&gt;\n                &lt;FodLanguage Languages=\"@fullLanguageList\" \n                             Variant=\"FodVariant.Outlined\" /&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                    Fus orar\n                &lt;/FodText&gt;\n                &lt;FodSelect Items=\"@timeZones\" \n                           @bind-Value=\"selectedTimeZone\"\n                           Variant=\"FodVariant.Outlined\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;SelectItem&gt; fullLanguageList = new()\n    {\n        new SelectItem { Value = \"ro-RO\", Label = \"Rom\u00e2n\u0103 (Rom\u00e2nia)\" },\n        new SelectItem { Value = \"ro-MD\", Label = \"Rom\u00e2n\u0103 (Moldova)\" },\n        new SelectItem { Value = \"ru-RU\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u0420\u043e\u0441\u0441\u0438\u044f)\" },\n        new SelectItem { Value = \"ru-MD\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u041c\u043e\u043b\u0434\u043e\u0432\u0430)\" },\n        new SelectItem { Value = \"en-US\", Label = \"English (US)\" },\n        new SelectItem { Value = \"en-GB\", Label = \"English (UK)\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#in-drawer-pentru-setari-mobile","title":"\u00cen drawer pentru set\u0103ri mobile","text":"<pre><code>&lt;FodDrawer @bind-Open=\"settingsOpen\" Anchor=\"Anchor.Right\"&gt;\n    &lt;FodList&gt;\n        &lt;FodListItem&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\"&gt;Set\u0103ri aplica\u021bie&lt;/FodText&gt;\n        &lt;/FodListItem&gt;\n\n        &lt;FodDivider /&gt;\n\n        &lt;FodListItem&gt;\n            &lt;div class=\"d-flex align-items-center justify-content-between w-100\"&gt;\n                &lt;FodText&gt;Limb\u0103&lt;/FodText&gt;\n                &lt;FodLanguage Languages=\"@mobileLanguages\" /&gt;\n            &lt;/div&gt;\n        &lt;/FodListItem&gt;\n\n        &lt;FodListItem&gt;\n            &lt;div class=\"d-flex align-items-center justify-content-between w-100\"&gt;\n                &lt;FodText&gt;Tem\u0103&lt;/FodText&gt;\n                &lt;FodSwitch @bind-Checked=\"darkMode\" /&gt;\n            &lt;/div&gt;\n        &lt;/FodListItem&gt;\n    &lt;/FodList&gt;\n&lt;/FodDrawer&gt;\n\n@code {\n    private bool settingsOpen = false;\n    private bool darkMode = false;\n\n    private List&lt;SelectItem&gt; mobileLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"RO\" },\n        new SelectItem { Value = \"ru\", Label = \"RU\" },\n        new SelectItem { Value = \"en\", Label = \"EN\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#integrare-cu-localstorage-pentru-persistenta","title":"Integrare cu localStorage pentru persisten\u021b\u0103","text":"<pre><code>@inject ILocalStorageService LocalStorage\n@inject ICultureService CultureService\n\n&lt;FodLanguage Languages=\"@persistentLanguages\" /&gt;\n\n@code {\n    private List&lt;SelectItem&gt; persistentLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en\", Label = \"English\" }\n    };\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Restaureaz\u0103 limba salvat\u0103\n        var savedLanguage = await LocalStorage.GetItemAsync&lt;string&gt;(\"app-language\");\n        if (!string.IsNullOrEmpty(savedLanguage))\n        {\n            CultureService.SetCulture(new CultureInfo(savedLanguage));\n        }\n    }\n\n    // Hook \u00een CultureService pentru salvare automat\u0103\n    protected override void OnAfterRender(bool firstRender)\n    {\n        if (firstRender)\n        {\n            CultureService.OnCultureChanged += async (culture) =&gt;\n            {\n                await LocalStorage.SetItemAsync(\"app-language\", culture.Name);\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#5-integrare-cu-sistemul-de-localizare","title":"5. Integrare cu sistemul de localizare","text":""},{"location":"fod/componente/FodLanguage/#configurare-in-programcs","title":"Configurare \u00een Program.cs","text":"<pre><code>var builder = WebApplication.CreateBuilder(args);\n\n// Adaug\u0103 serviciile de localizare\nbuilder.Services.AddLocalization();\n\n// Configureaz\u0103 culturile suportate\nbuilder.Services.Configure&lt;RequestLocalizationOptions&gt;(options =&gt;\n{\n    var supportedCultures = new[] { \"ro\", \"ru\", \"en\" };\n    options.SetDefaultCulture(supportedCultures[0])\n        .AddSupportedCultures(supportedCultures)\n        .AddSupportedUICultures(supportedCultures);\n});\n\n// \u00cenregistreaz\u0103 serviciul de cultur\u0103\nbuilder.Services.AddScoped&lt;ICultureService, CultureService&gt;();\n</code></pre>"},{"location":"fod/componente/FodLanguage/#utilizare-cu-resurse-localizate","title":"Utilizare cu resurse localizate","text":"<pre><code>@inject IStringLocalizer&lt;AppResources&gt; Localizer\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;@Localizer[\"Welcome\"]&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\"&gt;@Localizer[\"SelectLanguage\"]&lt;/FodText&gt;\n\n        &lt;FodLanguage Languages=\"@localizedLanguages\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;SelectItem&gt; localizedLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en\", Label = \"English\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#6-stilizare","title":"6. Stilizare","text":"<pre><code>/* Selector personalizat */\n.language-selector .fod-dropdown-toggle {\n    min-width: 120px;\n}\n\n/* Steaguri \u00een dropdown */\n.language-selector .fod-dropdown-item {\n    font-size: 1.1rem;\n}\n\n/* Compact pentru mobile */\n@media (max-width: 600px) {\n    .language-selector .fod-dropdown-toggle {\n        min-width: 60px;\n    }\n}\n\n/* Eviden\u021biere limb\u0103 activ\u0103 */\n.language-selector .fod-dropdown-item.active {\n    background-color: var(--fod-palette-primary-light);\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#7-best-practices","title":"7. Best Practices","text":"<ol> <li>Cod ISO standard - Folosi\u021bi coduri ISO 639-1 pentru limbi (ro, en, ru)</li> <li>Nume native - Afi\u0219a\u021bi numele limbilor \u00een limba respectiv\u0103</li> <li>Detectare automat\u0103 - Componenta detecteaz\u0103 automat limba curent\u0103</li> <li>Persisten\u021b\u0103 - Salva\u021bi preferin\u021ba utilizatorului \u00een localStorage</li> <li>Accesibilitate - Include\u021bi atributul lang pe elementul HTML root</li> <li>Fallback - Defini\u021bi o limb\u0103 implicit\u0103 pentru cazuri neprev\u0103zute</li> </ol>"},{"location":"fod/componente/FodLanguage/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/FodLanguage/#in-pagina-de-login","title":"\u00cen pagina de login","text":"<pre><code>&lt;div class=\"login-page\"&gt;\n    &lt;div class=\"language-corner\"&gt;\n        &lt;FodLanguage Languages=\"@loginLanguages\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodCard Class=\"login-card\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h5\" Align=\"Align.Center\"&gt;\n                @Localizer[\"LoginTitle\"]\n            &lt;/FodText&gt;\n            &lt;!-- Formular login --&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/div&gt;\n\n@code {\n    private List&lt;SelectItem&gt; loginLanguages = new()\n    {\n        new SelectItem { Value = \"ro\", Label = \"Rom\u00e2n\u0103\" },\n        new SelectItem { Value = \"ru\", Label = \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\" },\n        new SelectItem { Value = \"en\", Label = \"English\" }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodLanguage/#in-footer","title":"\u00cen footer","text":"<pre><code>&lt;FodFooter&gt;\n    &lt;div class=\"footer-content\"&gt;\n        &lt;div class=\"footer-section\"&gt;\n            &lt;FodText Typo=\"Typo.caption\"&gt;\n                \u00a9 2024 Compania Mea\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"footer-section\"&gt;\n            &lt;FodLanguage Languages=\"@footerLanguages\" \n                         Variant=\"FodVariant.Text\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/FodFooter&gt;\n</code></pre>"},{"location":"fod/componente/FodLanguage/#9-troubleshooting","title":"9. Troubleshooting","text":""},{"location":"fod/componente/FodLanguage/#limba-nu-se-schimba","title":"Limba nu se schimb\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 ICultureService este \u00eenregistrat \u00een DI</li> <li>Asigura\u021bi-v\u0103 c\u0103 cultura este suportat\u0103 \u00een aplica\u021bie</li> <li>Verifica\u021bi c\u0103 resursele sunt disponibile pentru limba selectat\u0103</li> </ul>"},{"location":"fod/componente/FodLanguage/#dropdown-nu-afiseaza-limba-curenta","title":"Dropdown nu afi\u0219eaz\u0103 limba curent\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 valorile din Languages corespund cu cultura curent\u0103</li> <li>Componenta caut\u0103 at\u00e2t cultura p\u0103rinte c\u00e2t \u0219i cultura complet\u0103</li> </ul>"},{"location":"fod/componente/FodLanguage/#10-concluzie","title":"10. Concluzie","text":"<p><code>FodLanguage</code> ofer\u0103 o solu\u021bie complet\u0103 pentru selec\u021bia limbii \u00een aplica\u021biile FOD. Cu detec\u021bie automat\u0103 a limbii curente, integrare perfect\u0103 cu sistemul de localizare \u0219i design flexibil, componenta simplific\u0103 implementarea aplica\u021biilor multilingve pentru serviciile guvernamentale din Moldova.</p>"},{"location":"fod/componente/FodLayout/","title":"FodLayout","text":"<p>Documenta\u021bie component\u0103 layout pentru aplica\u021biile FOD</p>"},{"location":"fod/componente/FodLayout/#descriere-generala","title":"Descriere general\u0103","text":"<p><code>FodLayout</code> este o component\u0103 fundamental\u0103 pentru aplica\u021biile care folosesc biblioteca FOD. Aceasta ofer\u0103 contextul necesar func\u021bion\u0103rii corecte a tuturor componentelor FOD \u0219i trebuie inclus\u0103 \u00een <code>MainLayout.razor</code> sau \u00een layout-ul principal al aplica\u021biei.</p>"},{"location":"fod/componente/FodLayout/#rolul-fodlayout","title":"Rolul <code>FodLayout</code>","text":"<ul> <li>Ofer\u0103 un provider global pentru notific\u0103ri \u0219i mesaje informative.</li> <li>\u00cencarc\u0103 \u0219i gestioneaz\u0103 configura\u021biile aplica\u021biei (de exemplu, limba, temele vizuale).</li> <li>Intercepteaz\u0103 \u0219i propag\u0103 contextul aplica\u021biei c\u0103tre componentele copil (de exemplu, pentru localizare, autentificare, etc.).</li> <li>Este responsabil\u0103 pentru ini\u021bializarea contextelor globale de UI (popover, dialoguri, snackbar, tooltips etc.).</li> </ul>"},{"location":"fod/componente/FodLayout/#utilizare-recomandata","title":"Utilizare recomandat\u0103","text":"<p>Include <code>FodLayout</code> \u00een <code>MainLayout.razor</code>, astfel \u00eenc\u00e2t toate paginile \u0219i componentele s\u0103 beneficieze de infrastructura sa:</p> <pre><code>@inherits LayoutComponentBase\n\n&lt;FodLayout&gt;\n    @Body\n&lt;/FodLayout&gt;\n</code></pre> <p>\u26a0\ufe0f Dac\u0103 <code>FodLayout</code> nu este utilizat, componente precum <code>FodDatePicker</code>, <code>FodSnackbar</code>, <code>FodDialog</code> sau <code>FodAppInitializer</code> pot s\u0103 nu func\u021bioneze corect.</p>"},{"location":"fod/componente/FodLayout/#alternative","title":"Alternative","text":"<p>Dac\u0103 <code>FodLayout</code> nu este utilizat ca layout principal, este obligatoriu s\u0103 incluzi urm\u0103toarele componente manual \u00een layout-ul propriu:</p> <pre><code>&lt;FodPopoverProvider /&gt;\n&lt;FodAppInitializer /&gt;\n&lt;FodSnackbarProvider /&gt;\n</code></pre> <p>Dar aceasta este o abordare avansat\u0103 \u0219i este recomandat s\u0103 se utilizeze <code>FodLayout</code> ca root layout pentru o integrare complet\u0103 \u0219i corect\u0103.</p>"},{"location":"fod/componente/FodLayout/#concluzie","title":"Concluzie","text":"<p>Pentru a asigura func\u021bionalitatea complet\u0103 a bibliotecii FOD, <code>FodLayout</code> trebuie s\u0103 fie parte din arhitectura principal\u0103 a aplica\u021biei. Include-l \u00een <code>MainLayout.razor</code> pentru o experien\u021b\u0103 unitar\u0103, stabil\u0103 \u0219i complet func\u021bional\u0103.</p>"},{"location":"fod/componente/FodLink/","title":"Link","text":""},{"location":"fod/componente/FodLink/#documentatie-pentru-componenta-fodlink","title":"Documenta\u021bie pentru componenta FodLink","text":""},{"location":"fod/componente/FodLink/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodLink</code> este componenta pentru afi\u0219area link-urilor \u00een aplica\u021bii Blazor, oferind stilizare consistent\u0103 \u0219i control asupra comportamentului. Componenta se integreaz\u0103 perfect cu sistemul de culori \u0219i tipografie FOD, oferind op\u021biuni flexibile pentru underline \u0219i interac\u021biune.</p> <p>Caracteristici principale: - Integrare cu sistemul de culori FOD - Control asupra stilului underline - Suport pentru tipografie personalizat\u0103 - Gestionare stare dezactivat\u0103 - Evenimente onClick personalizate - Suport pentru target \u0219i rel attributes - Cursor inteligent bazat pe context - Compatibilitate cu attribute splatting</p>"},{"location":"fod/componente/FodLink/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodLink/#link-simplu","title":"Link simplu","text":"<pre><code>&lt;FodLink Href=\"/about\"&gt;Despre noi&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-cu-culoare-personalizata","title":"Link cu culoare personalizat\u0103","text":"<pre><code>&lt;FodLink Href=\"/products\" Color=\"FodColor.Primary\"&gt;\n    Vezi toate produsele\n&lt;/FodLink&gt;\n\n&lt;FodLink Href=\"/sale\" Color=\"FodColor.Secondary\"&gt;\n    Produse la reducere\n&lt;/FodLink&gt;\n\n&lt;FodLink Href=\"/contact\" Color=\"FodColor.Info\"&gt;\n    Contacteaz\u0103-ne\n&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#control-underline","title":"Control underline","text":"<pre><code>&lt;!-- F\u0103r\u0103 underline --&gt;\n&lt;FodLink Href=\"/home\" Underline=\"Underline.None\"&gt;\n    Acas\u0103\n&lt;/FodLink&gt;\n\n&lt;!-- Underline doar la hover (implicit) --&gt;\n&lt;FodLink Href=\"/services\" Underline=\"Underline.Hover\"&gt;\n    Servicii\n&lt;/FodLink&gt;\n\n&lt;!-- Underline permanent --&gt;\n&lt;FodLink Href=\"/important\" Underline=\"Underline.Always\"&gt;\n    Informa\u021bii importante\n&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-extern-cu-target","title":"Link extern cu target","text":"<pre><code>&lt;FodLink Href=\"https://github.com\" Target=\"_blank\"&gt;\n    Vizita\u021bi GitHub\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.OpenInNew\" \n             Size=\"FodSize.Small\" \n             Class=\"ms-1\" /&gt;\n&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-cu-tipografie-personalizata","title":"Link cu tipografie personalizat\u0103","text":"<pre><code>&lt;FodLink Href=\"/title\" Typo=\"Typo.h4\" Color=\"FodColor.Primary\"&gt;\n    Link ca titlu\n&lt;/FodLink&gt;\n\n&lt;FodLink Href=\"/subtitle\" Typo=\"Typo.subtitle1\"&gt;\n    Link ca subtitlu\n&lt;/FodLink&gt;\n\n&lt;FodLink Href=\"/caption\" Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n    Link mic pentru note\n&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-cu-handler-onclick","title":"Link cu handler onClick","text":"<pre><code>&lt;FodLink OnClick=\"HandleLinkClick\"&gt;\n    Execut\u0103 ac\u021biune\n&lt;/FodLink&gt;\n\n&lt;FodLink Href=\"/products\" OnClick=\"TrackLinkClick\"&gt;\n    Produse (cu tracking)\n&lt;/FodLink&gt;\n\n@code {\n    private void HandleLinkClick(MouseEventArgs e)\n    {\n        Console.WriteLine(\"Link clicked!\");\n        // Execut\u0103 ac\u021biune\n    }\n\n    private void TrackLinkClick(MouseEventArgs e)\n    {\n        // Track analytics\n        Analytics.TrackEvent(\"link_click\", new { page = \"products\" });\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#link-dezactivat","title":"Link dezactivat","text":"<pre><code>&lt;FodLink Href=\"/restricted\" Disabled=\"@(!hasAccess)\"&gt;\n    Zon\u0103 restric\u021bionat\u0103\n&lt;/FodLink&gt;\n\n@if (!hasAccess)\n{\n    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Error\"&gt;\n        Nu ave\u021bi acces la aceast\u0103 sec\u021biune\n    &lt;/FodText&gt;\n}\n\n@code {\n    private bool hasAccess = false;\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#link-uri-in-text","title":"Link-uri \u00een text","text":"<pre><code>&lt;FodText Typo=\"Typo.body1\"&gt;\n    Pentru mai multe informa\u021bii, consulta\u021bi \n    &lt;FodLink Href=\"/docs\"&gt;documenta\u021bia&lt;/FodLink&gt; sau \n    &lt;FodLink Href=\"/faq\"&gt;\u00eentreb\u0103rile frecvente&lt;/FodLink&gt;.\n&lt;/FodText&gt;\n\n&lt;FodText Typo=\"Typo.body2\"&gt;\n    Prin continuarea navig\u0103rii, sunte\u021bi de acord cu \n    &lt;FodLink Href=\"/terms\" Underline=\"Underline.Always\"&gt;\n        termenii \u0219i condi\u021biile\n    &lt;/FodLink&gt; \u0219i cu \n    &lt;FodLink Href=\"/privacy\" Underline=\"Underline.Always\"&gt;\n        politica de confiden\u021bialitate\n    &lt;/FodLink&gt;.\n&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-uri-in-liste","title":"Link-uri \u00een liste","text":"<pre><code>&lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n    Resurse utile\n&lt;/FodText&gt;\n\n&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;FodLink Href=\"/guide\"&gt;Ghid de utilizare&lt;/FodLink&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodLink Href=\"/api\"&gt;Documenta\u021bie API&lt;/FodLink&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodLink Href=\"/examples\"&gt;Exemple de cod&lt;/FodLink&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodLink Href=\"https://github.com/project\" Target=\"_blank\"&gt;\n            Cod surs\u0103\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.GitHub\" \n                     Size=\"FodSize.Small\" \n                     Class=\"ms-1\" /&gt;\n        &lt;/FodLink&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#breadcrumb-cu-link-uri","title":"Breadcrumb cu link-uri","text":"<pre><code>&lt;nav aria-label=\"breadcrumb\"&gt;\n    &lt;div class=\"d-flex align-items-center\"&gt;\n        &lt;FodLink Href=\"/\" Color=\"FodColor.Secondary\"&gt;\n            Acas\u0103\n        &lt;/FodLink&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ChevronRight\" \n                 Size=\"FodSize.Small\" \n                 Class=\"mx-2\" \n                 Color=\"FodColor.Secondary\" /&gt;\n        &lt;FodLink Href=\"/products\" Color=\"FodColor.Secondary\"&gt;\n            Produse\n        &lt;/FodLink&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ChevronRight\" \n                 Size=\"FodSize.Small\" \n                 Class=\"mx-2\" \n                 Color=\"FodColor.Secondary\" /&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Detalii produs\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#footer-cu-link-uri-organizate","title":"Footer cu link-uri organizate","text":"<pre><code>&lt;footer class=\"mt-5 pt-5 border-top\"&gt;\n    &lt;FodGrid Container=\"true\" Spacing=\"4\"&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Companie\n            &lt;/FodText&gt;\n            &lt;div class=\"d-flex flex-column\"&gt;\n                &lt;FodLink Href=\"/about\" Class=\"mb-2\"&gt;Despre noi&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/team\" Class=\"mb-2\"&gt;Echipa&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/careers\" Class=\"mb-2\"&gt;Cariere&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/press\" Class=\"mb-2\"&gt;Pres\u0103&lt;/FodLink&gt;\n            &lt;/div&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Produse\n            &lt;/FodText&gt;\n            &lt;div class=\"d-flex flex-column\"&gt;\n                &lt;FodLink Href=\"/features\" Class=\"mb-2\"&gt;Func\u021bionalit\u0103\u021bi&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/pricing\" Class=\"mb-2\"&gt;Pre\u021buri&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/enterprise\" Class=\"mb-2\"&gt;Enterprise&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/updates\" Class=\"mb-2\"&gt;Actualiz\u0103ri&lt;/FodLink&gt;\n            &lt;/div&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Resurse\n            &lt;/FodText&gt;\n            &lt;div class=\"d-flex flex-column\"&gt;\n                &lt;FodLink Href=\"/docs\" Class=\"mb-2\"&gt;Documenta\u021bie&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/api\" Class=\"mb-2\"&gt;API&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/guides\" Class=\"mb-2\"&gt;Ghiduri&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/support\" Class=\"mb-2\"&gt;Suport&lt;/FodLink&gt;\n            &lt;/div&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Legal\n            &lt;/FodText&gt;\n            &lt;div class=\"d-flex flex-column\"&gt;\n                &lt;FodLink Href=\"/privacy\" Class=\"mb-2\"&gt;Confiden\u021bialitate&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/terms\" Class=\"mb-2\"&gt;Termeni&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/cookies\" Class=\"mb-2\"&gt;Cookies&lt;/FodLink&gt;\n                &lt;FodLink Href=\"/licenses\" Class=\"mb-2\"&gt;Licen\u021be&lt;/FodLink&gt;\n            &lt;/div&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/footer&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#card-cu-link-uri-actiune","title":"Card cu link-uri ac\u021biune","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Plan Premium\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n            Deblocheaz\u0103 toate func\u021bionalit\u0103\u021bile avansate cu planul Premium.\n        &lt;/FodText&gt;\n        &lt;FodList&gt;\n            &lt;FodListItem&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                         Color=\"FodColor.Success\" \n                         Size=\"FodSize.Small\" \n                         Class=\"me-2\" /&gt;\n                Acces nelimitat\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                         Color=\"FodColor.Success\" \n                         Size=\"FodSize.Small\" \n                         Class=\"me-2\" /&gt;\n                Suport prioritar\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                         Color=\"FodColor.Success\" \n                         Size=\"FodSize.Small\" \n                         Class=\"me-2\" /&gt;\n                Func\u021bii beta\n            &lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodLink Href=\"/pricing\" Color=\"FodColor.Primary\"&gt;\n            Vezi toate planurile\n        &lt;/FodLink&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" Variant=\"FodVariant.Filled\"&gt;\n            Upgradeaz\u0103 acum\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#link-uri-sociale","title":"Link-uri sociale","text":"<pre><code>&lt;div class=\"social-links d-flex gap-3\"&gt;\n    &lt;FodLink Href=\"https://facebook.com/company\" \n             Target=\"_blank\" \n             Color=\"FodColor.Primary\"\n             Underline=\"Underline.None\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Facebook\" /&gt;\n    &lt;/FodLink&gt;\n\n    &lt;FodLink Href=\"https://twitter.com/company\" \n             Target=\"_blank\" \n             Color=\"FodColor.Info\"\n             Underline=\"Underline.None\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.Twitter\" /&gt;\n    &lt;/FodLink&gt;\n\n    &lt;FodLink Href=\"https://linkedin.com/company\" \n             Target=\"_blank\" \n             Color=\"FodColor.Primary\"\n             Underline=\"Underline.None\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.LinkedIn\" /&gt;\n    &lt;/FodLink&gt;\n\n    &lt;FodLink Href=\"https://github.com/company\" \n             Target=\"_blank\" \n             Color=\"FodColor.Default\"\n             Underline=\"Underline.None\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.GitHub\" /&gt;\n    &lt;/FodLink&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Href</code> <code>string</code> URL-ul link-ului <code>null</code> <code>Target</code> <code>string</code> Target pentru link (_blank, _self, etc) <code>null</code> <code>Color</code> <code>FodColor</code> Culoarea link-ului <code>Primary</code> <code>Typo</code> <code>Typo</code> Stilul tipografic <code>body1</code> <code>Underline</code> <code>Underline</code> Comportament underline <code>Hover</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 link-ul <code>false</code> <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Handler pentru click - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul link-ului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodLink/#4-enumerari","title":"4. Enumer\u0103ri","text":""},{"location":"fod/componente/FodLink/#underline","title":"Underline","text":"Valoare Descriere <code>None</code> F\u0103r\u0103 underline <code>Hover</code> Underline la hover <code>Always</code> Underline permanent"},{"location":"fod/componente/FodLink/#5-evenimente","title":"5. Evenimente","text":"Eveniment Tip Descriere <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Se declan\u0219eaz\u0103 la click pe link"},{"location":"fod/componente/FodLink/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Link-uri cu hover special */\n.custom-link {\n    transition: all 0.3s ease;\n    position: relative;\n}\n\n.custom-link:hover {\n    color: var(--fod-palette-secondary-main) !important;\n}\n\n/* Underline animat */\n.animated-link {\n    position: relative;\n    text-decoration: none !important;\n}\n\n.animated-link::after {\n    content: '';\n    position: absolute;\n    bottom: -2px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background-color: currentColor;\n    transition: width 0.3s ease;\n}\n\n.animated-link:hover::after {\n    width: 100%;\n}\n\n/* Link-uri cu iconi\u021be */\n.icon-link {\n    display: inline-flex;\n    align-items: center;\n    gap: 0.25rem;\n}\n\n.icon-link .fod-icon-root {\n    transition: transform 0.2s ease;\n}\n\n.icon-link:hover .fod-icon-root {\n    transform: translateX(2px);\n}\n\n/* Link-uri tip buton */\n.button-link {\n    padding: 0.5rem 1rem;\n    border: 1px solid currentColor;\n    border-radius: 4px;\n    text-decoration: none !important;\n    display: inline-block;\n    transition: all 0.2s ease;\n}\n\n.button-link:hover {\n    background-color: var(--fod-palette-primary-main);\n    color: white !important;\n    border-color: var(--fod-palette-primary-main);\n}\n\n/* Link-uri cu badge */\n.link-with-badge {\n    position: relative;\n    padding-right: 1.5rem;\n}\n\n.link-with-badge .badge {\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    background-color: var(--fod-palette-error-main);\n    color: white;\n    border-radius: 10px;\n    padding: 2px 6px;\n    font-size: 0.625rem;\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodLink/#in-text","title":"\u00cen Text","text":"<pre><code>&lt;FodText Typo=\"Typo.body1\"&gt;\n    &lt;FodLink Href=\"/profile\"&gt;@username&lt;/FodLink&gt; a distribuit acest articol.\n&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#in-alert","title":"\u00cen Alert","text":"<pre><code>&lt;FodAlert Severity=\"Severity.Info\"&gt;\n    &lt;FodAlertTitle&gt;Informa\u021bie important\u0103&lt;/FodAlertTitle&gt;\n    Pentru mai multe detalii, consulta\u021bi \n    &lt;FodLink Href=\"/info\" Color=\"FodColor.Info\" Underline=\"Underline.Always\"&gt;\n        pagina de informa\u021bii\n    &lt;/FodLink&gt;.\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#in-chip","title":"\u00cen Chip","text":"<pre><code>&lt;FodChip Color=\"FodColor.Primary\"&gt;\n    &lt;FodLink Href=\"/tag/blazor\" \n             Color=\"FodColor.White\" \n             Underline=\"Underline.None\"&gt;\n        #blazor\n    &lt;/FodLink&gt;\n&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodLink/#link-cu-loading-state","title":"Link cu loading state","text":"<pre><code>&lt;FodLink OnClick=\"HandleAsyncAction\" \n         Disabled=\"@isLoading\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodLoadingCircular Size=\"FodSize.Small\" Class=\"me-2\" /&gt;\n    }\n    @linkText\n&lt;/FodLink&gt;\n\n@code {\n    private bool isLoading = false;\n    private string linkText = \"\u00cencarc\u0103 date\";\n\n    private async Task HandleAsyncAction(MouseEventArgs e)\n    {\n        isLoading = true;\n        linkText = \"Se \u00eencarc\u0103...\";\n\n        await DataService.LoadDataAsync();\n\n        isLoading = false;\n        linkText = \"\u00cencarc\u0103 date\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#link-cu-confirmare","title":"Link cu confirmare","text":"<pre><code>&lt;FodLink OnClick=\"@(() =&gt; showConfirmDialog = true)\" \n         Color=\"FodColor.Error\"&gt;\n    \u0218terge contul\n&lt;/FodLink&gt;\n\n&lt;FodDialog @bind-Open=\"showConfirmDialog\"&gt;\n    &lt;FodDialogTitle&gt;Confirmare \u0219tergere&lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 \u0219terge\u021bi contul?\n        Aceast\u0103 ac\u021biune este ireversibil\u0103.\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodButton OnClick=\"@(() =&gt; showConfirmDialog = false)\"&gt;\n            Anuleaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Error\" OnClick=\"DeleteAccount\"&gt;\n            \u0218terge\n        &lt;/FodButton&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodDialog&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Folosi\u021bi text descriptiv pentru link-uri</li> <li>Evita\u021bi \"click aici\" sau \"cite\u0219te mai mult\" f\u0103r\u0103 context</li> <li>Pentru link-uri externe, considera\u021bi ad\u0103ugarea unui indicator vizual</li> <li>Asigura\u021bi contrast suficient pentru toate st\u0103rile</li> <li>Link-urile dezactivate nu primesc focus</li> </ul>"},{"location":"fod/componente/FodLink/#10-seo-si-performanta","title":"10. SEO \u0219i performan\u021b\u0103","text":"<pre><code>&lt;!-- Link cu rel pentru SEO --&gt;\n&lt;FodLink Href=\"https://external-site.com\" \n         Target=\"_blank\"\n         UserAttributes=\"@(new Dictionary&lt;string, object&gt; \n         { \n             { \"rel\", \"noopener noreferrer\" } \n         })\"&gt;\n    Link extern securizat\n&lt;/FodLink&gt;\n\n&lt;!-- Link cu preload --&gt;\n&lt;FodLink Href=\"/heavy-page\"\n         UserAttributes=\"@(new Dictionary&lt;string, object&gt; \n         { \n             { \"rel\", \"prefetch\" } \n         })\"&gt;\n    Pagin\u0103 grea (prefetch)\n&lt;/FodLink&gt;\n</code></pre>"},{"location":"fod/componente/FodLink/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Text descriptiv - Folosi\u021bi text care descrie destina\u021bia</li> <li>Indicatori vizuali - Marca\u021bi link-urile externe</li> <li>Consisten\u021b\u0103 - P\u0103stra\u021bi stilul uniform \u00een aplica\u021bie</li> <li>Feedback - Oferi\u021bi feedback vizual pentru interac\u021biuni</li> <li>Accesibilitate - Testa\u021bi cu screen readers</li> <li>Performan\u021b\u0103 - Folosi\u021bi prefetch pentru link-uri importante</li> </ol>"},{"location":"fod/componente/FodLink/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodLink/#link-ul-nu-functioneaza","title":"Link-ul nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Href este setat corect</li> <li>Verifica\u021bi c\u0103 nu este Disabled</li> <li>Verifica\u021bi handler-ul OnClick</li> </ul>"},{"location":"fod/componente/FodLink/#stilurile-nu-se-aplica","title":"Stilurile nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi ordinea claselor CSS</li> <li>Verifica\u021bi specificitatea stilurilor</li> <li>Folosi\u021bi !important dac\u0103 e necesar</li> </ul>"},{"location":"fod/componente/FodLink/#cursor-incorect","title":"Cursor incorect","text":"<ul> <li>Componenta seteaz\u0103 automat cursor pointer pentru OnClick</li> <li>Verifica\u021bi c\u0103 nu exist\u0103 CSS care suprascrie</li> </ul>"},{"location":"fod/componente/FodLink/#13-exemple-avansate","title":"13. Exemple avansate","text":""},{"location":"fod/componente/FodLink/#router-link-cu-active-state","title":"Router link cu active state","text":"<pre><code>&lt;NavLink class=\"@GetLinkClass()\" href=\"@href\" Match=\"NavLinkMatch.All\"&gt;\n    &lt;FodLink Href=\"@href\" \n             Color=\"@(IsActive ? FodColor.Primary : FodColor.Default)\"\n             Underline=\"@(IsActive ? Underline.Always : Underline.Hover)\"&gt;\n        @ChildContent\n    &lt;/FodLink&gt;\n&lt;/NavLink&gt;\n\n@code {\n    [Parameter] public string Href { get; set; }\n    [Parameter] public RenderFragment ChildContent { get; set; }\n\n    private bool IsActive =&gt; NavigationManager.Uri.EndsWith(Href);\n\n    private string GetLinkClass() =&gt; IsActive ? \"active-link\" : \"\";\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#link-cu-analytics","title":"Link cu analytics","text":"<pre><code>&lt;AnalyticsLink Href=\"@href\" \n               Category=\"navigation\" \n               Action=\"click\" \n               Label=\"@label\"&gt;\n    @ChildContent\n&lt;/AnalyticsLink&gt;\n\n@code {\n    public class AnalyticsLink : ComponentBase\n    {\n        [Parameter] public string Href { get; set; }\n        [Parameter] public string Category { get; set; }\n        [Parameter] public string Action { get; set; }\n        [Parameter] public string Label { get; set; }\n        [Parameter] public RenderFragment ChildContent { get; set; }\n\n        [Inject] private IAnalyticsService Analytics { get; set; }\n\n        private async Task HandleClick(MouseEventArgs e)\n        {\n            await Analytics.TrackEvent(Category, Action, Label);\n        }\n\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\n        {\n            builder.OpenComponent&lt;FodLink&gt;(0);\n            builder.AddAttribute(1, \"Href\", Href);\n            builder.AddAttribute(2, \"OnClick\", EventCallback.Factory.Create&lt;MouseEventArgs&gt;(this, HandleClick));\n            builder.AddAttribute(3, \"ChildContent\", ChildContent);\n            builder.CloseComponent();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLink/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodLink</code> ofer\u0103 o solu\u021bie complet\u0103 pentru afi\u0219area link-urilor \u00een aplica\u021bii Blazor, cu suport pentru stilizare flexibil\u0103, comportament personalizabil \u0219i integrare perfect\u0103 cu sistemul de design FOD. Componenta acoper\u0103 toate cazurile comune de utilizare, de la link-uri simple \u00een text p\u00e2n\u0103 la navigare complex\u0103 \u0219i integr\u0103ri cu analytics.</p>"},{"location":"fod/componente/FodList/","title":"List","text":""},{"location":"fod/componente/FodList/#documentatie-pentru-componentele-fodlist-si-fodlistitem","title":"Documenta\u021bie pentru componentele FodList \u0219i FodListItem","text":""},{"location":"fod/componente/FodList/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodList</code> \u0219i <code>FodListItem</code> formeaz\u0103 un sistem complet pentru afi\u0219area \u0219i gestionarea listelor \u00een aplica\u021bii Blazor. Componentele ofer\u0103 suport pentru liste simple, liste interactive cu selec\u021bie, liste imbricate \u0219i integrare cu navigarea.</p> <p>Caracteristici principale: - Liste simple \u0219i interactive - Selec\u021bie single cu urm\u0103rire valoare - Liste imbricate cu expand/collapse - Integrare cu pictograme \u0219i avatare - Densitate ajustabil\u0103 (normal/compact) - Suport pentru navigare - Stilizare flexibil\u0103 - Accesibilitate complet\u0103</p>"},{"location":"fod/componente/FodList/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodList/#lista-simpla","title":"List\u0103 simpl\u0103","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Text=\"Element 1\" /&gt;\n    &lt;FodListItem Text=\"Element 2\" /&gt;\n    &lt;FodListItem Text=\"Element 3\" /&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-selectie","title":"List\u0103 cu selec\u021bie","text":"<pre><code>&lt;FodList Clickable=\"true\" @bind-SelectedValue=\"selectedOption\"&gt;\n    &lt;FodListItem Text=\"Op\u021biunea 1\" Value=\"1\" /&gt;\n    &lt;FodListItem Text=\"Op\u021biunea 2\" Value=\"2\" /&gt;\n    &lt;FodListItem Text=\"Op\u021biunea 3\" Value=\"3\" /&gt;\n&lt;/FodList&gt;\n\n@code {\n    private object selectedOption = \"1\";\n}\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-pictograme","title":"List\u0103 cu pictograme","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Text=\"Documente\" \n                 Icon=\"@FodIcons.Material.Filled.Folder\"\n                 IconColor=\"FodColor.Primary\" /&gt;\n    &lt;FodListItem Text=\"Imagini\" \n                 Icon=\"@FodIcons.Material.Filled.Image\"\n                 IconColor=\"FodColor.Success\" /&gt;\n    &lt;FodListItem Text=\"Video\" \n                 Icon=\"@FodIcons.Material.Filled.VideoLibrary\"\n                 IconColor=\"FodColor.Secondary\" /&gt;\n    &lt;FodListItem Text=\"Audio\" \n                 Icon=\"@FodIcons.Material.Filled.AudioFile\"\n                 IconColor=\"FodColor.Warning\" /&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-continut-personalizat","title":"List\u0103 cu con\u021binut personalizat","text":"<pre><code>&lt;FodList Clickable=\"true\"&gt;\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                     Size=\"FodSize.Large\" \n                     Class=\"me-3\" /&gt;\n            &lt;div&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\"&gt;Ion Popescu&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    ion.popescu@example.md\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                     Size=\"FodSize.Large\" \n                     Class=\"me-3\" /&gt;\n            &lt;div&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\"&gt;Maria Ionescu&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    maria.ionescu@example.md\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-imbricata-nested","title":"List\u0103 imbricat\u0103 (nested)","text":"<pre><code>&lt;FodList Clickable=\"true\"&gt;\n    &lt;FodListItem Text=\"Inbox\" \n                 Icon=\"@FodIcons.Material.Filled.Inbox\"&gt;\n        &lt;NestedList&gt;\n            &lt;FodListItem Text=\"Primite\" Value=\"received\" /&gt;\n            &lt;FodListItem Text=\"Importante\" Value=\"important\" /&gt;\n            &lt;FodListItem Text=\"Necitite\" Value=\"unread\" /&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Text=\"Trimise\" \n                 Icon=\"@FodIcons.Material.Filled.Send\" \n                 Value=\"sent\" /&gt;\n\n    &lt;FodListItem Text=\"Ciorne\" \n                 Icon=\"@FodIcons.Material.Filled.Drafts\" \n                 Value=\"drafts\" /&gt;\n\n    &lt;FodListItem Text=\"Arhiv\u0103\" \n                 Icon=\"@FodIcons.Material.Filled.Archive\"&gt;\n        &lt;NestedList&gt;\n            &lt;FodListItem Text=\"2024\" Value=\"archive-2024\" /&gt;\n            &lt;FodListItem Text=\"2023\" Value=\"archive-2023\" /&gt;\n            &lt;FodListItem Text=\"2022\" Value=\"archive-2022\" /&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-navigare","title":"List\u0103 cu navigare","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Text=\"Acas\u0103\" \n                 Icon=\"@FodIcons.Material.Filled.Home\"\n                 Href=\"/\" /&gt;\n    &lt;FodListItem Text=\"Produse\" \n                 Icon=\"@FodIcons.Material.Filled.ShoppingCart\"\n                 Href=\"/products\" /&gt;\n    &lt;FodListItem Text=\"Despre noi\" \n                 Icon=\"@FodIcons.Material.Filled.Info\"\n                 Href=\"/about\" /&gt;\n    &lt;FodListItem Text=\"Contact\" \n                 Icon=\"@FodIcons.Material.Filled.ContactMail\"\n                 Href=\"/contact\" /&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-densa-compact","title":"List\u0103 dens\u0103 (compact)","text":"<pre><code>&lt;FodList Dense=\"true\" DisablePadding=\"true\"&gt;\n    &lt;FodListItem Text=\"Element compact 1\" /&gt;\n    &lt;FodListItem Text=\"Element compact 2\" /&gt;\n    &lt;FodListItem Text=\"Element compact 3\" /&gt;\n    &lt;FodListItem Text=\"Element compact 4\" /&gt;\n    &lt;FodListItem Text=\"Element compact 5\" /&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-control-expansiune","title":"List\u0103 cu control expansiune","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Text=\"Set\u0103ri generale\" \n                 Icon=\"@FodIcons.Material.Filled.Settings\"\n                 @bind-Expanded=\"generalExpanded\"\n                 InitiallyExpanded=\"true\"&gt;\n        &lt;NestedList&gt;\n            &lt;FodListItem Text=\"Profil\" /&gt;\n            &lt;FodListItem Text=\"Notific\u0103ri\" /&gt;\n            &lt;FodListItem Text=\"Limb\u0103\" /&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Text=\"Securitate\" \n                 Icon=\"@FodIcons.Material.Filled.Security\"\n                 @bind-Expanded=\"securityExpanded\"&gt;\n        &lt;NestedList&gt;\n            &lt;FodListItem Text=\"Parol\u0103\" /&gt;\n            &lt;FodListItem Text=\"Autentificare \u00een doi pa\u0219i\" /&gt;\n            &lt;FodListItem Text=\"Sesiuni active\" /&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n\n@code {\n    private bool generalExpanded = true;\n    private bool securityExpanded = false;\n}\n</code></pre>"},{"location":"fod/componente/FodList/#lista-pentru-meniu-lateral","title":"List\u0103 pentru meniu lateral","text":"<pre><code>&lt;FodList Clickable=\"true\" @bind-SelectedValue=\"currentPage\"&gt;\n    &lt;FodListItem Text=\"Dashboard\" \n                 Icon=\"@FodIcons.Material.Filled.Dashboard\"\n                 IconColor=\"FodColor.Primary\"\n                 Value=\"dashboard\" /&gt;\n\n    &lt;FodListItem Text=\"Analize\" \n                 Icon=\"@FodIcons.Material.Filled.Analytics\"\n                 IconColor=\"FodColor.Success\"\n                 Value=\"analytics\" /&gt;\n\n    &lt;FodListItem Text=\"Rapoarte\" \n                 Icon=\"@FodIcons.Material.Filled.Assessment\"\n                 IconColor=\"FodColor.Warning\"&gt;\n        &lt;NestedList&gt;\n            &lt;FodListItem Text=\"V\u00e2nz\u0103ri\" Value=\"reports-sales\" /&gt;\n            &lt;FodListItem Text=\"Inventar\" Value=\"reports-inventory\" /&gt;\n            &lt;FodListItem Text=\"Financiar\" Value=\"reports-financial\" /&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Text=\"Utilizatori\" \n                 Icon=\"@FodIcons.Material.Filled.People\"\n                 IconColor=\"FodColor.Info\"\n                 Value=\"users\" /&gt;\n\n    &lt;FodListItem Text=\"Set\u0103ri\" \n                 Icon=\"@FodIcons.Material.Filled.Settings\"\n                 IconColor=\"FodColor.Secondary\"\n                 Value=\"settings\" /&gt;\n&lt;/FodList&gt;\n\n@code {\n    private object currentPage = \"dashboard\";\n}\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-elemente-dezactivate","title":"List\u0103 cu elemente dezactivate","text":"<pre><code>&lt;FodList Clickable=\"true\"&gt;\n    &lt;FodListItem Text=\"Activ\" Value=\"1\" /&gt;\n    &lt;FodListItem Text=\"Activ\" Value=\"2\" /&gt;\n    &lt;FodListItem Text=\"Dezactivat\" Value=\"3\" Disabled=\"true\" /&gt;\n    &lt;FodListItem Text=\"Activ\" Value=\"4\" /&gt;\n    &lt;FodListItem Text=\"Dezactivat global\" Value=\"5\" /&gt;\n&lt;/FodList&gt;\n\n&lt;!-- Sau dezactivare global\u0103 --&gt;\n&lt;FodList Clickable=\"true\" Disabled=\"true\"&gt;\n    &lt;FodListItem Text=\"Toate elementele sunt dezactivate\" /&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-pentru-inbox-email","title":"List\u0103 pentru inbox email","text":"<pre><code>&lt;FodList Clickable=\"true\" @bind-SelectedValue=\"selectedEmail\"&gt;\n    @foreach (var email in emails)\n    {\n        &lt;FodListItem Value=\"@email.Id\"&gt;\n            &lt;div class=\"d-flex justify-space-between align-start\"&gt;\n                &lt;div class=\"flex-grow-1\"&gt;\n                    &lt;div class=\"d-flex align-items-center mb-1\"&gt;\n                        &lt;FodText Typo=\"Typo.subtitle2\" Class=\"me-2\"&gt;\n                            @email.From\n                        &lt;/FodText&gt;\n                        @if (!email.IsRead)\n                        {\n                            &lt;FodChip Size=\"FodSize.Small\" Color=\"FodColor.Primary\"&gt;\n                                Nou\n                            &lt;/FodChip&gt;\n                        }\n                    &lt;/div&gt;\n                    &lt;FodText Typo=\"Typo.body2\"&gt;@email.Subject&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                        @email.Preview\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    @email.Date.ToString(\"HH:mm\")\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/FodListItem&gt;\n    }\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#lista-cu-actiuni","title":"List\u0103 cu ac\u021biuni","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex justify-space-between align-items-center\"&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AttachFile\" \n                         Class=\"me-3\" /&gt;\n                &lt;div&gt;\n                    &lt;FodText&gt;Document.pdf&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                        2.5 MB\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Download\" \n                               Size=\"FodSize.Small\" \n                               Title=\"Descarc\u0103\" /&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n                               Size=\"FodSize.Small\" \n                               Color=\"FodColor.Error\"\n                               Title=\"\u0218terge\" /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodList/#fodlist","title":"FodList","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Clickable</code> <code>bool</code> Activeaz\u0103 selec\u021bia \u0219i click <code>false</code> <code>Color</code> <code>FodColor</code> Culoarea elementelor selectate <code>Primary</code> <code>Dense</code> <code>bool</code> Mod compact pentru toate elementele <code>false</code> <code>DisablePadding</code> <code>bool</code> Elimin\u0103 padding vertical <code>false</code> <code>DisableGutters</code> <code>bool</code> Elimin\u0103 padding orizontal <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 toate elementele <code>false</code> <code>SelectedItem</code> <code>FodListItem</code> Elementul selectat curent <code>null</code> <code>SelectedValue</code> <code>object</code> Valoarea selectat\u0103 curent <code>null</code> <code>SelectedItemChanged</code> <code>EventCallback&lt;FodListItem&gt;</code> Eveniment la schimbare selec\u021bie - <code>SelectedValueChanged</code> <code>EventCallback&lt;object&gt;</code> Eveniment la schimbare valoare - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul listei -"},{"location":"fod/componente/FodList/#fodlistitem","title":"FodListItem","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul elementului <code>null</code> <code>Value</code> <code>object</code> Valoarea pentru selec\u021bie <code>null</code> <code>Icon</code> <code>string</code> Pictograma de afi\u0219at <code>null</code> <code>IconColor</code> <code>FodColor</code> Culoarea pictogramei <code>Default</code> <code>IconSize</code> <code>FodSize</code> Dimensiunea pictogramei <code>Medium</code> <code>Avatar</code> <code>string</code> URL avatar (neimplementat) <code>null</code> <code>Href</code> <code>string</code> URL pentru navigare <code>null</code> <code>ForceLoad</code> <code>bool</code> For\u021beaz\u0103 re\u00eenc\u0103rcare browser <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 elementul <code>false</code> <code>DisableRipple</code> <code>bool</code> Dezactiveaz\u0103 efectul ripple <code>false</code> <code>Dense</code> <code>bool?</code> Mod compact pentru element <code>null</code> <code>Inset</code> <code>bool</code> Indenteaz\u0103 textul <code>false</code> <code>DisableGutters</code> <code>bool</code> Elimin\u0103 padding orizontal <code>false</code> <code>NestedList</code> <code>RenderFragment</code> List\u0103 imbricat\u0103 <code>null</code> <code>Expanded</code> <code>bool</code> Stare expansiune <code>false</code> <code>InitiallyExpanded</code> <code>bool</code> Expandat ini\u021bial <code>false</code> <code>ExpandLessIcon</code> <code>string</code> Pictogram\u0103 collapse <code>ExpandLess</code> <code>ExpandMoreIcon</code> <code>string</code> Pictogram\u0103 expand <code>ExpandMore</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut personalizat <code>null</code>"},{"location":"fod/componente/FodList/#4-evenimente","title":"4. Evenimente","text":"Eveniment Descriere <code>SelectedItemChanged</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 elementul selectat <code>SelectedValueChanged</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 valoarea selectat\u0103 <code>ExpandedChanged</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 starea de expansiune <code>OnClick</code> Se declan\u0219eaz\u0103 la click pe element (intern)"},{"location":"fod/componente/FodList/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* List\u0103 personalizat\u0103 */\n.custom-list {\n    background-color: #f5f5f5;\n    border-radius: 8px;\n}\n\n.custom-list .fod-list-item {\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.custom-list .fod-list-item:last-child {\n    border-bottom: none;\n}\n\n/* Hover effect personalizat */\n.custom-list .fod-list-item-clickable:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n}\n\n/* Element selectat personalizat */\n.custom-list .fod-selected {\n    background-color: rgba(25, 118, 210, 0.12);\n    border-left: 4px solid #1976d2;\n}\n\n/* List\u0103 dens\u0103 cu spa\u021biere minim\u0103 */\n.ultra-dense-list .fod-list-item {\n    min-height: 32px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n}\n</code></pre>"},{"location":"fod/componente/FodList/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodList/#in-drawer-pentru-navigare","title":"\u00cen drawer pentru navigare","text":"<pre><code>&lt;FodDrawer&gt;\n    &lt;FodList Clickable=\"true\"&gt;\n        &lt;FodListItem Text=\"Dashboard\" \n                     Icon=\"@FodIcons.Material.Filled.Dashboard\"\n                     Href=\"/dashboard\" /&gt;\n        &lt;FodListItem Text=\"Rapoarte\" \n                     Icon=\"@FodIcons.Material.Filled.Assessment\"\n                     Href=\"/reports\" /&gt;\n    &lt;/FodList&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#in-card-pentru-optiuni","title":"\u00cen card pentru op\u021biuni","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Set\u0103ri notific\u0103ri\n        &lt;/FodText&gt;\n        &lt;FodList&gt;\n            &lt;FodListItem&gt;\n                &lt;div class=\"d-flex justify-space-between align-items-center\"&gt;\n                    &lt;FodText&gt;Notific\u0103ri email&lt;/FodText&gt;\n                    &lt;FodSwitch @bind-Checked=\"emailNotifications\" /&gt;\n                &lt;/div&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;div class=\"d-flex justify-space-between align-items-center\"&gt;\n                    &lt;FodText&gt;Notific\u0103ri SMS&lt;/FodText&gt;\n                    &lt;FodSwitch @bind-Checked=\"smsNotifications\" /&gt;\n                &lt;/div&gt;\n            &lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#7-patterns-comune","title":"7. Patterns comune","text":""},{"location":"fod/componente/FodList/#lista-de-selectie","title":"List\u0103 de selec\u021bie","text":"<pre><code>&lt;FodList Clickable=\"true\" @bind-SelectedValue=\"selectedItem\" Color=\"FodColor.Secondary\"&gt;\n    @foreach (var item in items)\n    {\n        &lt;FodListItem Text=\"@item.Name\" Value=\"@item.Id\" /&gt;\n    }\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#meniu-cu-sub-meniuri","title":"Meniu cu sub-meniuri","text":"<pre><code>&lt;FodList&gt;\n    @foreach (var menu in menuItems)\n    {\n        &lt;FodListItem Text=\"@menu.Title\" \n                     Icon=\"@menu.Icon\"\n                     Href=\"@menu.Url\"&gt;\n            @if (menu.Children?.Any() == true)\n            {\n                &lt;NestedList&gt;\n                    @foreach (var child in menu.Children)\n                    {\n                        &lt;FodListItem Text=\"@child.Title\" \n                                     Href=\"@child.Url\" /&gt;\n                    }\n                &lt;/NestedList&gt;\n            }\n        &lt;/FodListItem&gt;\n    }\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodList/#8-performanta","title":"8. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi <code>Dense=\"true\"</code> pentru liste lungi</li> <li>Pentru liste foarte mari, considera\u021bi virtualizare</li> <li>Evita\u021bi con\u021binut complex \u00een liste cu multe elemente</li> <li>Dezactiva\u021bi ripple pentru performan\u021b\u0103 maxim\u0103</li> </ul>"},{"location":"fod/componente/FodList/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Elementele clickable au <code>role=\"button\"</code></li> <li>Suport pentru navigare cu tastatura</li> <li>Starea de selec\u021bie anun\u021bat\u0103 screen readers</li> <li>Expand/collapse accesibil cu taste s\u0103ge\u021bi</li> </ul>"},{"location":"fod/componente/FodList/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Selec\u021bia necesit\u0103 <code>Clickable=\"true\"</code> pe FodList</li> <li>Elementele cu <code>Href</code> devin link-uri navigabile</li> <li><code>Value</code> este necesar pentru urm\u0103rirea selec\u021biei</li> <li>Listele imbricate se expandeaz\u0103/colapseaz\u0103 smooth</li> </ul>"},{"location":"fod/componente/FodList/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Consisten\u021b\u0103 - Folosi\u021bi acela\u0219i stil \u00een toat\u0103 aplica\u021bia</li> <li>Densitate - Dense pentru multe elemente, normal pentru pu\u021bine</li> <li>Pictograme - Ajut\u0103 la scanare rapid\u0103 a listei</li> <li>Grupare - Folosi\u021bi liste imbricate pentru organizare</li> <li>Feedback - Selec\u021bia vizibil\u0103 pentru elemente interactive</li> <li>Performan\u021b\u0103 - Con\u021binut simplu pentru liste mari</li> </ol>"},{"location":"fod/componente/FodList/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodList/#selectia-nu-functioneaza","title":"Selec\u021bia nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Clickable=\"true\"</code> pe FodList</li> <li>Verifica\u021bi c\u0103 elementele au <code>Value</code> setat</li> </ul>"},{"location":"fod/componente/FodList/#expansiunea-nu-functioneaza","title":"Expansiunea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 ave\u021bi NestedList definit</li> <li>Verifica\u021bi binding-ul pentru Expanded</li> </ul>"},{"location":"fod/componente/FodList/#navigarea-nu-functioneaza","title":"Navigarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Href este URL valid</li> <li>Pentru SPA, nu folosi\u021bi ForceLoad</li> </ul>"},{"location":"fod/componente/FodList/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodList</code> \u0219i <code>FodListItem</code> ofer\u0103 o solu\u021bie complet\u0103 pentru afi\u0219area \u0219i gestionarea listelor \u00een aplica\u021bii Blazor. Cu suport pentru selec\u021bie, navigare, liste imbricate \u0219i personalizare extensiv\u0103, acoper\u0103 toate scenariile comune de UI pentru liste.</p>"},{"location":"fod/componente/FodListItem/","title":"FodListItem","text":""},{"location":"fod/componente/FodListItem/#documentatie-pentru-componenta-fodlistitem","title":"Documenta\u021bie pentru componenta FodListItem","text":""},{"location":"fod/componente/FodListItem/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodListItem</code> este componenta pentru elementele individuale dintr-o list\u0103 <code>FodList</code>. Ofer\u0103 suport complet pentru text, iconi\u021be, avatare, navigare, liste imbricate \u0219i selec\u021bie, integr\ufffd\ufffdndu-se perfect cu componenta p\u0103rinte FodList.</p> <p>Caracteristici principale: - Afi\u0219are text cu sau f\u0103r\u0103 iconi\u021b\u0103 - Suport pentru avatare - Navigare prin href - Liste imbricate expandabile - Selec\u021bie cu eviden\u021biere vizual\u0103 - Ripple effect la click - Densitate variabil\u0103 (normal/dense) - Suport pentru dezactivare - Evenimente click personalizabile</p>"},{"location":"fod/componente/FodListItem/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodListItem/#element-simplu-de-lista","title":"Element simplu de list\u0103","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;Element simplu&lt;/FodListItem&gt;\n    &lt;FodListItem&gt;Alt element&lt;/FodListItem&gt;\n    &lt;FodListItem&gt;Al treilea element&lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#element-cu-iconita","title":"Element cu iconi\u021b\u0103","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodListItem&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n        Set\u0103ri\n    &lt;/FodListItem&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Logout\"&gt;\n        Ie\u0219ire\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#element-cu-navigare","title":"Element cu navigare","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Href=\"/dashboard\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        Dashboard\n    &lt;/FodListItem&gt;\n    &lt;FodListItem Href=\"/reports\" Icon=\"@FodIcons.Material.Filled.Assessment\"&gt;\n        Rapoarte\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#3-atribute-si-parametri","title":"3. Atribute \u0219i Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul de afi\u0219at - <code>Value</code> <code>object</code> Valoarea asociat\u0103 pentru selec\u021bie - <code>Icon</code> <code>string</code> Iconi\u021b\u0103 de afi\u0219at - <code>IconColor</code> <code>FodColor</code> Culoarea iconi\u021bei <code>Inherit</code> <code>IconSize</code> <code>FodSize</code> Dimensiunea iconi\u021bei <code>Medium</code> <code>Avatar</code> <code>string</code> URL pentru avatar - <code>AvatarClass</code> <code>string</code> Clase CSS pentru avatar - <code>Href</code> <code>string</code> URL pentru navigare - <code>ForceLoad</code> <code>bool</code> For\u021beaz\u0103 re\u00eenc\u0103rcarea paginii <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 elementul <code>false</code> <code>DisableRipple</code> <code>bool</code> Dezactiveaz\u0103 ripple effect <code>false</code> <code>Dense</code> <code>bool?</code> Folose\u0219te padding compact - <code>DisableGutters</code> <code>bool</code> Elimin\u0103 padding lateral <code>false</code> <code>Inset</code> <code>bool</code> Indentare pentru subheader <code>false</code> <code>Expanded</code> <code>bool</code> Stare expandare pentru liste imbricate <code>false</code> <code>InitiallyExpanded</code> <code>bool</code> Expandat ini\u021bial <code>false</code> <code>ExpandLessIcon</code> <code>string</code> Iconi\u021b\u0103 pentru collapse <code>ExpandLess</code> <code>ExpandMoreIcon</code> <code>string</code> Iconi\u021b\u0103 pentru expand <code>ExpandMore</code> <code>AdornmentColor</code> <code>FodColor</code> Culoare iconi\u021b\u0103 expand/collapse <code>Default</code> <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Eveniment click - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut personalizat - <code>NestedList</code> <code>RenderFragment</code> List\u0103 imbricat\u0103 -"},{"location":"fod/componente/FodListItem/#4-exemple-de-utilizare","title":"4. Exemple de Utilizare","text":""},{"location":"fod/componente/FodListItem/#meniu-de-navigare","title":"Meniu de navigare","text":"<pre><code>&lt;FodList Clickable=\"true\"&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Home\" \n                 Href=\"/\"\n                 Value=\"home\"&gt;\n        Acas\u0103\n    &lt;/FodListItem&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Person\" \n                 Href=\"/profile\"\n                 Value=\"profile\"&gt;\n        Profil\n    &lt;/FodListItem&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Settings\" \n                 Href=\"/settings\"\n                 Value=\"settings\"&gt;\n        Set\u0103ri\n    &lt;/FodListItem&gt;\n    &lt;FodDivider /&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Logout\" \n                 OnClick=\"Logout\"\n                 IconColor=\"FodColor.Error\"&gt;\n        Deconectare\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n\n@code {\n    private async Task Logout(MouseEventArgs e)\n    {\n        await AuthService.LogoutAsync();\n        NavigationManager.NavigateTo(\"/login\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-cu-selectie","title":"List\u0103 cu selec\u021bie","text":"<pre><code>&lt;FodList Clickable=\"true\" @bind-SelectedValue=\"selectedCategory\"&gt;\n    @foreach (var category in categories)\n    {\n        &lt;FodListItem Value=\"@category.Id\" \n                     Icon=\"@category.Icon\"&gt;\n            @category.Name\n            &lt;FodChip Size=\"FodSize.Small\" \n                     Color=\"FodColor.Primary\" \n                     Class=\"ms-auto\"&gt;\n                @category.Count\n            &lt;/FodChip&gt;\n        &lt;/FodListItem&gt;\n    }\n&lt;/FodList&gt;\n\n@code {\n    private object selectedCategory;\n    private List&lt;Category&gt; categories = new()\n    {\n        new() { Id = 1, Name = \"Inbox\", Icon = FodIcons.Material.Filled.Inbox, Count = 5 },\n        new() { Id = 2, Name = \"Trimise\", Icon = FodIcons.Material.Filled.Send, Count = 0 },\n        new() { Id = 3, Name = \"Ciorne\", Icon = FodIcons.Material.Filled.Drafts, Count = 2 }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodListItem/#liste-imbricate","title":"Liste imbricate","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n        Utilizatori\n        &lt;NestedList&gt;\n            &lt;FodListItem Href=\"/users/active\"&gt;Activi&lt;/FodListItem&gt;\n            &lt;FodListItem Href=\"/users/inactive\"&gt;Inactivi&lt;/FodListItem&gt;\n            &lt;FodListItem Href=\"/users/pending\"&gt;\u00cen a\u0219teptare&lt;/FodListItem&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Settings\" InitiallyExpanded=\"true\"&gt;\n        Configur\u0103ri\n        &lt;NestedList&gt;\n            &lt;FodListItem Href=\"/settings/general\"&gt;Generale&lt;/FodListItem&gt;\n            &lt;FodListItem Href=\"/settings/security\"&gt;Securitate&lt;/FodListItem&gt;\n            &lt;FodListItem Href=\"/settings/notifications\"&gt;Notific\u0103ri&lt;/FodListItem&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-densa-cu-avatare","title":"List\u0103 dens\u0103 cu avatare","text":"<pre><code>&lt;FodList Dense=\"true\"&gt;\n    @foreach (var user in recentUsers)\n    {\n        &lt;FodListItem Avatar=\"@user.AvatarUrl\" \n                     OnClick=\"@(() =&gt; SelectUser(user))\"&gt;\n            &lt;div&gt;\n                &lt;FodText Typo=\"Typo.body2\"&gt;@user.Name&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    @user.LastSeen\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/FodListItem&gt;\n    }\n&lt;/FodList&gt;\n\n@code {\n    private List&lt;User&gt; recentUsers = new();\n\n    private void SelectUser(User user)\n    {\n        // Deschide chat cu utilizatorul\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-cu-actiuni","title":"List\u0103 cu ac\u021biuni","text":"<pre><code>&lt;FodList&gt;\n    @foreach (var item in todoItems)\n    {\n        &lt;FodListItem&gt;\n            &lt;FodCheckbox @bind-Checked=\"item.IsCompleted\" \n                         Class=\"me-3\" /&gt;\n            &lt;FodText Class=\"@(item.IsCompleted ? \"text-decoration-line-through\" : \"\")\"&gt;\n                @item.Title\n            &lt;/FodText&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n                           Size=\"FodSize.Small\"\n                           Color=\"FodColor.Error\"\n                           OnClick=\"@(() =&gt; DeleteItem(item))\"\n                           Class=\"ms-auto\" /&gt;\n        &lt;/FodListItem&gt;\n    }\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-cu-stari-diferite","title":"List\u0103 cu st\u0103ri diferite","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n                 IconColor=\"FodColor.Success\"&gt;\n        Task completat\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Warning\" \n                 IconColor=\"FodColor.Warning\"&gt;\n        Task cu avertismente\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Error\" \n                 IconColor=\"FodColor.Error\"&gt;\n        Task cu erori\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Block\" \n                 Disabled=\"true\"&gt;\n        Task blocat\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-fara-gutters","title":"List\u0103 f\u0103r\u0103 gutters","text":"<pre><code>&lt;FodList DisablePadding=\"true\"&gt;\n    &lt;FodListItem DisableGutters=\"true\" \n                 Class=\"px-4 py-3 border-bottom\"&gt;\n        Element full-width 1\n    &lt;/FodListItem&gt;\n    &lt;FodListItem DisableGutters=\"true\" \n                 Class=\"px-4 py-3 border-bottom\"&gt;\n        Element full-width 2\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#5-liste-complexe","title":"5. Liste Complexe","text":""},{"location":"fod/componente/FodListItem/#lista-cu-header-si-subheader","title":"List\u0103 cu header \u0219i subheader","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListSubheader&gt;Conversa\u021bii recente&lt;/FodListSubheader&gt;\n\n    &lt;FodListItem Avatar=\"/avatars/user1.jpg\"&gt;\n        &lt;div&gt;\n            &lt;FodText Typo=\"Typo.subtitle2\"&gt;Maria Popescu&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                Am primit documentele, mul\u021bumesc!\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n        &lt;FodText Typo=\"Typo.caption\" Class=\"ms-auto\"&gt;\n            10:45\n        &lt;/FodText&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodDivider /&gt;\n\n    &lt;FodListSubheader&gt;Conversa\u021bii anterioare&lt;/FodListSubheader&gt;\n    &lt;!-- Mai multe elemente --&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#lista-tip-file-explorer","title":"List\u0103 tip file explorer","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Folder\" \n                 IconColor=\"FodColor.Warning\"&gt;\n        Documente\n        &lt;NestedList&gt;\n            &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Folder\" \n                         IconColor=\"FodColor.Warning\"&gt;\n                2024\n                &lt;NestedList&gt;\n                    &lt;FodListItem Icon=\"@FodIcons.Custom.FileFormats.FileWord\"&gt;\n                        Raport.docx\n                    &lt;/FodListItem&gt;\n                    &lt;FodListItem Icon=\"@FodIcons.Custom.FileFormats.FileExcel\"&gt;\n                        Buget.xlsx\n                    &lt;/FodListItem&gt;\n                &lt;/NestedList&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Folder\" \n                         IconColor=\"FodColor.Warning\"&gt;\n                2023\n            &lt;/FodListItem&gt;\n        &lt;/NestedList&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#6-stilizare","title":"6. Stilizare","text":"<pre><code>/* Hover personalizat */\n.custom-list .fod-list-item:hover {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.08);\n}\n\n/* Selec\u021bie personalizat\u0103 */\n.custom-list .fod-selected-item {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.12);\n    border-left: 4px solid var(--fod-palette-primary-main);\n}\n\n/* Anima\u021bie pentru iconi\u021be */\n.animated-list .fod-list-item-icon {\n    transition: transform 0.2s ease;\n}\n\n.animated-list .fod-list-item:hover .fod-list-item-icon {\n    transform: translateX(4px);\n}\n\n/* Liste cu margini rotunjite */\n.rounded-list .fod-list-item:first-child {\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n}\n\n.rounded-list .fod-list-item:last-child {\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n}\n</code></pre>"},{"location":"fod/componente/FodListItem/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodListItem/#in-drawer","title":"\u00cen Drawer","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\"&gt;\n    &lt;FodList&gt;\n        &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Dashboard\" \n                     Href=\"/dashboard\"&gt;\n            Dashboard\n        &lt;/FodListItem&gt;\n        &lt;!-- Mai multe elemente --&gt;\n    &lt;/FodList&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent Class=\"pa-0\"&gt;\n        &lt;FodList&gt;\n            &lt;FodListItem&gt;Op\u021biune 1&lt;/FodListItem&gt;\n            &lt;FodListItem&gt;Op\u021biune 2&lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodListItem/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Iconi\u021be consistente - Folosi\u021bi acela\u0219i stil de iconi\u021be \u00een list\u0103</li> <li>Feedback vizual - Oferi\u021bi feedback clar pentru starea selectat\u0103</li> <li>Densitate adecvat\u0103 - Folosi\u021bi dense pentru liste lungi</li> <li>Grupare logic\u0103 - Organiza\u021bi elementele \u00een categorii clare</li> <li>Accesibilitate - Include\u021bi aria-labels pentru screen readers</li> <li>Loading states - Afi\u0219a\u021bi skeleton loaders pentru liste dinamice</li> </ol>"},{"location":"fod/componente/FodListItem/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Pentru liste mari, folosi\u021bi virtualizare cu <code>FodVirtualize</code></li> <li>Evita\u021bi re-render prin folosirea <code>@key</code> \u00een bucle</li> <li>Pentru liste imbricate complexe, \u00eenc\u0103rca\u021bi lazy con\u021binutul</li> </ul>"},{"location":"fod/componente/FodListItem/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Elementele primesc focus automat cu tabindex=\"0\"</li> <li>Suport complet pentru navigare cu tastatura</li> <li>ARIA roles sunt aplicate automat</li> <li>Folosi\u021bi text descriptiv pentru screen readers</li> </ul>"},{"location":"fod/componente/FodListItem/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodListItem/#click-nu-functioneaza","title":"Click nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 lista p\u0103rinte are <code>Clickable=\"true\"</code></li> <li>Verifica\u021bi c\u0103 elementul nu este <code>Disabled</code></li> <li>Verifica\u021bi <code>OnClickHandlerPreventDefault</code></li> </ul>"},{"location":"fod/componente/FodListItem/#selectia-nu-functioneaza","title":"Selec\u021bia nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 a\u021bi setat <code>Value</code> pe fiecare element</li> <li>Verifica\u021bi binding-ul pe lista p\u0103rinte</li> </ul>"},{"location":"fod/componente/FodListItem/#iconitele-nu-apar","title":"Iconi\u021bele nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 fonturile icon sunt \u00eenc\u0103rcate</li> <li>Verifica\u021bi namespace-ul iconi\u021bei</li> </ul>"},{"location":"fod/componente/FodListItem/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodListItem</code> ofer\u0103 flexibilitate maxim\u0103 pentru crearea de liste interactive \u00een aplica\u021biile FOD. Cu suport pentru iconi\u021be, navigare, selec\u021bie \u0219i liste imbricate, componenta acoper\u0103 toate scenariile comune de UI pentru liste.</p>"},{"location":"fod/componente/FodLoading/","title":"Loading","text":""},{"location":"fod/componente/FodLoading/#documentatie-pentru-componentele-fodloading","title":"Documenta\u021bie pentru componentele FodLoading","text":"<p>Biblioteca FOD ofer\u0103 trei componente pentru indicarea \u00eenc\u0103rc\u0103rii \u0219i progresului: - <code>FodLoadingLinear</code> - Bar\u0103 de progres liniar\u0103 - <code>FodLoadingCircular</code> - Indicator circular de progres - <code>FodLoading</code> - Wrapper simplu cu text \u0219i bar\u0103 liniar\u0103</p>"},{"location":"fod/componente/FodLoading/#1-fodloadinglinear","title":"1. FodLoadingLinear","text":""},{"location":"fod/componente/FodLoading/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodLoadingLinear</code> este o component\u0103 pentru afi\u0219area progresului liniar, care poate func\u021biona at\u00e2t \u00een mod determinat (cu valoare specific\u0103) c\u00e2t \u0219i indeterminat (anima\u021bie continu\u0103). Suport\u0103 diferite stiluri vizuale \u0219i configur\u0103ri.</p> <p>Caracteristici principale: - Mod determinat cu valoare \u00eentre Min \u0219i Max - Mod indeterminat cu anima\u021bie continu\u0103 - Buffer progress pentru \u00eenc\u0103rcare \u00een dou\u0103 etape - Variante vizuale: normal, rounded, striped - Orientare vertical\u0103 op\u021bional\u0103 - Dimensiuni multiple: Small, Medium, Large - Integrare cu sistemul de culori FOD</p>"},{"location":"fod/componente/FodLoading/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodLoading/#bara-de-progres-simpla-indeterminata","title":"Bar\u0103 de progres simpl\u0103 (indeterminat\u0103)","text":"<pre><code>&lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#progres-determinat-cu-valoare","title":"Progres determinat cu valoare","text":"<pre><code>&lt;FodLoadingLinear Value=\"@progress\" Min=\"0\" Max=\"100\" /&gt;\n\n@code {\n    private double progress = 45;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#progres-cu-buffer-incarcare-in-doua-etape","title":"Progres cu buffer (\u00eenc\u0103rcare \u00een dou\u0103 etape)","text":"<pre><code>&lt;FodLoadingLinear Value=\"@downloadProgress\" \n                  BufferValue=\"@bufferProgress\"\n                  Min=\"0\" \n                  Max=\"100\" /&gt;\n\n@code {\n    private double downloadProgress = 30;\n    private double bufferProgress = 60;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#variante-vizuale","title":"Variante vizuale","text":""},{"location":"fod/componente/FodLoading/#rounded-colturi-rotunjite","title":"Rounded (col\u021buri rotunjite)","text":"<pre><code>&lt;FodLoadingLinear Value=\"70\" \n                  Rounded=\"true\"\n                  Color=\"FodColor.Primary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#striped-cu-dungi","title":"Striped (cu dungi)","text":"<pre><code>&lt;FodLoadingLinear Value=\"50\" \n                  Striped=\"true\"\n                  Color=\"FodColor.Success\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#dimensiuni-diferite","title":"Dimensiuni diferite","text":"<pre><code>&lt;!-- Small --&gt;\n&lt;FodLoadingLinear Value=\"60\" Size=\"FodSize.Small\" /&gt;\n\n&lt;!-- Medium (implicit) --&gt;\n&lt;FodLoadingLinear Value=\"60\" Size=\"FodSize.Medium\" /&gt;\n\n&lt;!-- Large --&gt;\n&lt;FodLoadingLinear Value=\"60\" Size=\"FodSize.Large\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#orientare-verticala","title":"Orientare vertical\u0103","text":"<pre><code>&lt;div style=\"height: 200px; display: flex;\"&gt;\n    &lt;FodLoadingLinear Value=\"@progress\" \n                      Vertical=\"true\"\n                      Color=\"FodColor.Primary\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#incarcare-fisier-cu-progres","title":"\u00cenc\u0103rcare fi\u0219ier cu progres","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;\u00cenc\u0103rcare fi\u0219ier&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n            @fileName\n        &lt;/FodText&gt;\n\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FodLoadingLinear Value=\"@uploadProgress\" \n                              Min=\"0\" \n                              Max=\"100\"\n                              Color=\"FodColor.Primary\" /&gt;\n            &lt;FodText Typo=\"Typo.caption\" Class=\"mt-1\"&gt;\n                @uploadProgress% - @GetUploadStatus()\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string fileName = \"document.pdf\";\n    private double uploadProgress = 0;\n\n    private string GetUploadStatus()\n    {\n        if (uploadProgress &lt; 100)\n            return $\"{(uploadProgress * 1.5 / 100):F1} MB din 1.5 MB\";\n        return \"\u00cenc\u0103rcare complet\u0103\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#atribute-fodloadinglinear","title":"Atribute FodLoadingLinear","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Indeterminate</code> <code>bool</code> Mod anima\u021bie continu\u0103 <code>false</code> <code>Value</code> <code>double</code> Valoarea curent\u0103 <code>0</code> <code>Min</code> <code>double</code> Valoarea minim\u0103 <code>0</code> <code>Max</code> <code>double</code> Valoarea maxim\u0103 <code>100</code> <code>BufferValue</code> <code>double</code> Valoarea buffer <code>0</code> <code>Rounded</code> <code>bool</code> Col\u021buri rotunjite <code>false</code> <code>Striped</code> <code>bool</code> Pattern cu dungi <code>false</code> <code>Vertical</code> <code>bool</code> Orientare vertical\u0103 <code>false</code> <code>Color</code> <code>FodColor</code> Culoarea barei <code>Primary</code> <code>Size</code> <code>FodSize</code> Dimensiunea <code>Medium</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodLoading/#2-fodloadingcircular","title":"2. FodLoadingCircular","text":""},{"location":"fod/componente/FodLoading/#descriere-generala_1","title":"Descriere General\u0103","text":"<p><code>FodLoadingCircular</code> este o component\u0103 pentru afi\u0219area progresului circular, perfect\u0103 pentru indicarea st\u0103rilor de a\u0219teptare sau progres \u00een spa\u021bii compacte.</p> <p>Caracteristici principale: - Mod determinat cu progres vizibil - Mod indeterminat cu rota\u021bie continu\u0103 - Grosime ajustabil\u0103 pentru cerc - Dimensiuni multiple - Culori din paleta FOD - Anima\u021bii fluide</p>"},{"location":"fod/componente/FodLoading/#ghid-de-utilizare-api_1","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodLoading/#indicator-simplu-de-incarcare","title":"Indicator simplu de \u00eenc\u0103rcare","text":"<pre><code>&lt;FodLoadingCircular Indeterminate=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#progres-circular-determinat","title":"Progres circular determinat","text":"<pre><code>&lt;FodLoadingCircular Value=\"@progress\" \n                    Min=\"0\" \n                    Max=\"100\" /&gt;\n\n@code {\n    private double progress = 75;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#dimensiuni-si-culori","title":"Dimensiuni \u0219i culori","text":"<pre><code>&lt;!-- Small cu culoare secundar\u0103 --&gt;\n&lt;FodLoadingCircular Indeterminate=\"true\" \n                    Size=\"FodSize.Small\"\n                    Color=\"FodColor.Secondary\" /&gt;\n\n&lt;!-- Large cu culoare success --&gt;\n&lt;FodLoadingCircular Value=\"80\" \n                    Size=\"FodSize.Large\"\n                    Color=\"FodColor.Success\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#grosime-personalizata","title":"Grosime personalizat\u0103","text":"<pre><code>&lt;FodLoadingCircular Value=\"@progress\" \n                    StrokeWidth=\"8\"\n                    Size=\"FodSize.Large\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#buton-cu-loading","title":"Buton cu loading","text":"<pre><code>&lt;FodButton Disabled=\"@isLoading\" \n           OnClick=\"HandleClick\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodLoadingCircular Size=\"FodSize.Small\" \n                            Indeterminate=\"true\"\n                            Class=\"me-2\" /&gt;\n    }\n    @buttonText\n&lt;/FodButton&gt;\n\n@code {\n    private bool isLoading = false;\n    private string buttonText = \"Salveaz\u0103\";\n\n    private async Task HandleClick()\n    {\n        isLoading = true;\n        buttonText = \"Se salveaz\u0103...\";\n\n        await SaveData();\n\n        isLoading = false;\n        buttonText = \"Salveaz\u0103\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#card-cu-loading-overlay","title":"Card cu loading overlay","text":"<pre><code>&lt;FodCard Class=\"position-relative\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Date utilizator&lt;/FodText&gt;\n        &lt;!-- Con\u021binut card --&gt;\n    &lt;/FodCardContent&gt;\n\n    @if (isLoading)\n    {\n        &lt;div class=\"position-absolute top-0 start-0 w-100 h-100 \n                    d-flex align-items-center justify-content-center\"\n             style=\"background-color: rgba(255,255,255,0.8);\"&gt;\n            &lt;FodLoadingCircular Indeterminate=\"true\" \n                                Size=\"FodSize.Large\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#atribute-fodloadingcircular","title":"Atribute FodLoadingCircular","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Indeterminate</code> <code>bool</code> Mod anima\u021bie continu\u0103 <code>false</code> <code>Value</code> <code>double</code> Valoarea curent\u0103 <code>0</code> <code>Min</code> <code>double</code> Valoarea minim\u0103 <code>0</code> <code>Max</code> <code>double</code> Valoarea maxim\u0103 <code>100</code> <code>StrokeWidth</code> <code>int</code> Grosimea cercului <code>4</code> <code>Color</code> <code>FodColor</code> Culoarea <code>Primary</code> <code>Size</code> <code>FodSize</code> Dimensiunea <code>Medium</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodLoading/#3-fodloading","title":"3. FodLoading","text":""},{"location":"fod/componente/FodLoading/#descriere-generala_2","title":"Descriere General\u0103","text":"<p><code>FodLoading</code> este o component\u0103 wrapper simpl\u0103 care combin\u0103 text cu o bar\u0103 de progres liniar\u0103 indeterminat\u0103, util\u0103 pentru mesaje de \u00eenc\u0103rcare.</p>"},{"location":"fod/componente/FodLoading/#ghid-de-utilizare-api_2","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodLoading/#loading-simplu-cu-text","title":"Loading simplu cu text","text":"<pre><code>&lt;FodLoading Text=\"Se \u00eencarc\u0103 datele...\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#loading-cu-text-personalizat","title":"Loading cu text personalizat","text":"<pre><code>&lt;FodLoading Text=\"V\u0103 rug\u0103m a\u0219tepta\u021bi, proces\u0103m cererea dvs...\" \n            Color=\"FodColor.Primary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#loading-in-containere","title":"Loading \u00een containere","text":"<pre><code>@if (isLoading)\n{\n    &lt;FodLoading Text=\"Se \u00eencarc\u0103 produsele...\" /&gt;\n}\nelse\n{\n    &lt;!-- Afi\u0219are produse --&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#atribute-fodloading","title":"Atribute FodLoading","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul afi\u0219at - <code>Color</code> <code>FodColor</code> Culoarea <code>Primary</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodLoading/#4-exemple-complexe-si-pattern-uri","title":"4. Exemple complexe \u0219i pattern-uri","text":""},{"location":"fod/componente/FodLoading/#tabel-cu-loading-state","title":"Tabel cu loading state","text":"<pre><code>&lt;FodDataTable Items=\"@items\" Loading=\"@isLoading\"&gt;\n    &lt;LoadingContent&gt;\n        &lt;div class=\"text-center pa-8\"&gt;\n            &lt;FodLoadingCircular Indeterminate=\"true\" \n                                Size=\"FodSize.Large\" /&gt;\n            &lt;FodText Typo=\"Typo.body2\" Class=\"mt-3\"&gt;\n                Se \u00eencarc\u0103 datele...\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/LoadingContent&gt;\n    &lt;HeaderContent&gt;\n        &lt;!-- Header tabel --&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;!-- R\u00e2nduri tabel --&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#formular-cu-progres-multi-step","title":"Formular cu progres multi-step","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            \u00cenregistrare cont nou\n        &lt;/FodText&gt;\n\n        &lt;!-- Progress bar pentru pa\u0219i --&gt;\n        &lt;div class=\"mb-4\"&gt;\n            &lt;FodLoadingLinear Value=\"@((currentStep - 1) * 33.33)\" \n                              Min=\"0\" \n                              Max=\"100\"\n                              Rounded=\"true\"\n                              Color=\"FodColor.Primary\" /&gt;\n            &lt;div class=\"d-flex justify-content-between mt-2\"&gt;\n                &lt;FodText Typo=\"Typo.caption\" \n                         Color=\"@(currentStep &gt;= 1 ? FodColor.Primary : FodColor.Secondary)\"&gt;\n                    Date personale\n                &lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\"\n                         Color=\"@(currentStep &gt;= 2 ? FodColor.Primary : FodColor.Secondary)\"&gt;\n                    Date cont\n                &lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\"\n                         Color=\"@(currentStep &gt;= 3 ? FodColor.Primary : FodColor.Secondary)\"&gt;\n                    Confirmare\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Con\u021binut formular bazat pe step --&gt;\n        @switch (currentStep)\n        {\n            case 1:\n                &lt;!-- Date personale --&gt;\n                break;\n            case 2:\n                &lt;!-- Date cont --&gt;\n                break;\n            case 3:\n                &lt;!-- Confirmare --&gt;\n                break;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private int currentStep = 1;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#dashboard-cu-multiple-loading-states","title":"Dashboard cu multiple loading states","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    &lt;!-- Card statistici --&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                @if (statsLoading)\n                {\n                    &lt;div class=\"text-center\"&gt;\n                        &lt;FodLoadingCircular Indeterminate=\"true\" /&gt;\n                    &lt;/div&gt;\n                }\n                else\n                {\n                    &lt;FodText Typo=\"Typo.h4\"&gt;@totalUsers&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                        Total utilizatori\n                    &lt;/FodText&gt;\n                }\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;!-- Grafic --&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent Style=\"height: 300px;\"&gt;\n                @if (chartLoading)\n                {\n                    &lt;FodLoading Text=\"Se genereaz\u0103 graficul...\" /&gt;\n                }\n                else\n                {\n                    &lt;!-- Afi\u0219are grafic --&gt;\n                }\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#upload-multiplu-cu-progres-individual","title":"Upload multiplu cu progres individual","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            \u00cenc\u0103rcare fi\u0219iere\n        &lt;/FodText&gt;\n\n        @foreach (var file in uploadingFiles)\n        {\n            &lt;div class=\"file-upload-item mb-3\"&gt;\n                &lt;div class=\"d-flex justify-content-between mb-1\"&gt;\n                    &lt;FodText Typo=\"Typo.body2\"&gt;@file.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;\n                        @file.Progress%\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n                &lt;FodLoadingLinear Value=\"@file.Progress\" \n                                  Min=\"0\" \n                                  Max=\"100\"\n                                  Size=\"FodSize.Small\"\n                                  Color=\"@GetProgressColor(file.Progress)\" /&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;UploadFile&gt; uploadingFiles = new();\n\n    private FodColor GetProgressColor(double progress)\n    {\n        if (progress &lt; 30) return FodColor.Error;\n        if (progress &lt; 70) return FodColor.Warning;\n        return FodColor.Success;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* Loading cu gradient personalizat */\n.custom-loading .fod-loadinglinear-bar {\n    background: linear-gradient(\n        90deg, \n        var(--fod-palette-primary-main) 0%, \n        var(--fod-palette-secondary-main) 100%\n    );\n}\n\n/* Loading circular cu umbr\u0103 */\n.shadow-loading .fod-loadingcircular {\n    filter: drop-shadow(0 2px 4px rgba(0,0,0,0.2));\n}\n\n/* Anima\u021bie pulsare pentru loading text */\n@keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n}\n\n.pulsing-loading {\n    animation: pulse 2s infinite;\n}\n\n/* Loading bar cu height custom */\n.thick-loading .fod-loadinglinear {\n    height: 8px !important;\n}\n</code></pre>"},{"location":"fod/componente/FodLoading/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodLoading/#in-overlay","title":"\u00cen Overlay","text":"<pre><code>&lt;FodOverlay Visible=\"@isProcessing\"&gt;\n    &lt;div class=\"d-flex flex-column align-items-center\"&gt;\n        &lt;FodLoadingCircular Indeterminate=\"true\" \n                            Size=\"FodSize.Large\"\n                            Color=\"FodColor.Primary\" /&gt;\n        &lt;FodText Typo=\"Typo.body1\" Class=\"mt-3\" Color=\"FodColor.White\"&gt;\n            Procesare \u00een curs...\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/FodOverlay&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#in-button-group","title":"\u00cen Button Group","text":"<pre><code>&lt;FodButtonGroup&gt;\n    &lt;FodButton OnClick=\"Save\" Disabled=\"@isSaving\"&gt;\n        @if (isSaving)\n        {\n            &lt;FodLoadingCircular Size=\"FodSize.Small\" \n                                Indeterminate=\"true\"\n                                Class=\"me-2\" /&gt;\n        }\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n    &lt;FodButton OnClick=\"Cancel\" \n               Variant=\"FodVariant.Text\"\n               Disabled=\"@isSaving\"&gt;\n        Anuleaz\u0103\n    &lt;/FodButton&gt;\n&lt;/FodButtonGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodLoading/#7-performanta","title":"7. Performan\u021b\u0103","text":"<ul> <li>Anima\u021biile folosesc CSS transforms pentru performan\u021b\u0103 optim\u0103</li> <li>LoadingCircular folose\u0219te SVG pentru scalabilitate</li> <li>Evita\u021bi multiple loading indicators pe aceea\u0219i pagin\u0103</li> </ul>"},{"location":"fod/componente/FodLoading/#8-accesibilitate","title":"8. Accesibilitate","text":"<ul> <li>Folosi\u021bi <code>aria-label</code> pentru screen readers</li> <li>Include\u021bi text descriptiv pentru loading states</li> <li>Asigura\u021bi contrast suficient pentru vizibilitate</li> </ul>"},{"location":"fod/componente/FodLoading/#9-bune-practici","title":"9. Bune practici","text":"<ol> <li>Feedback imediat - Afi\u0219a\u021bi loading imediat la ac\u021biuni</li> <li>Text descriptiv - Explica\u021bi ce se \u00eencarc\u0103</li> <li>Progres real - Folosi\u021bi determinate c\u00e2nd \u0219ti\u021bi progresul</li> <li>Timeout handling - Gestiona\u021bi \u00eenc\u0103rc\u0103ri foarte lungi</li> <li>Skeleton screens - Considera\u021bi alternative pentru UX mai bun</li> </ol>"},{"location":"fod/componente/FodLoading/#10-troubleshooting","title":"10. Troubleshooting","text":""},{"location":"fod/componente/FodLoading/#loading-nu-se-afiseaza","title":"Loading nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Indeterminate=\"true\" sau Value are valoare</li> <li>Verifica\u021bi c\u0103 nu este ascuns de CSS</li> </ul>"},{"location":"fod/componente/FodLoading/#animatie-sacadata","title":"Anima\u021bie sacadat\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 nu sunt prea multe re-render-uri</li> <li>Reduce\u021bi complexitatea paginii</li> </ul>"},{"location":"fod/componente/FodLoading/#progres-nu-se-actualizeaza","title":"Progres nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Value se schimb\u0103</li> <li>Apela\u021bi StateHasChanged() dac\u0103 e necesar</li> </ul>"},{"location":"fod/componente/FodLoading/#11-concluzie","title":"11. Concluzie","text":"<p>Componentele de loading din FOD ofer\u0103 solu\u021bii complete pentru indicarea st\u0103rilor de \u00eenc\u0103rcare \u0219i progres. Cu suport pentru moduri determinate \u0219i indeterminate, multiple stiluri vizuale \u0219i dimensiuni, acestea acoper\u0103 majoritatea scenariilor de utilizare \u00eentr-o aplica\u021bie web modern\u0103.</p>"},{"location":"fod/componente/FodLoadingCircular/","title":"FodLoadingCircular","text":""},{"location":"fod/componente/FodLoadingCircular/#documentatie-pentru-componenta-fodloadingcircular","title":"Documenta\u021bie pentru componenta FodLoadingCircular","text":""},{"location":"fod/componente/FodLoadingCircular/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodLoadingCircular</code> este o component\u0103 de \u00eenc\u0103rcare circular\u0103 care afi\u0219eaz\u0103 progresul sau o anima\u021bie de a\u0219teptare. Suport\u0103 at\u00e2t modul determinate (cu valoare specific\u0103) c\u00e2t \u0219i indeterminate (anima\u021bie continu\u0103).</p> <p>Caracteristici principale: - Indicator circular SVG - Mod determinate cu procent - Mod indeterminate cu anima\u021bie - Dimensiuni multiple (Small, Medium, Large) - Culori din tema aplica\u021biei - Grosime ajustabil\u0103 - Performan\u021b\u0103 optimizat\u0103 - Accesibilitate cu ARIA</p>"},{"location":"fod/componente/FodLoadingCircular/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodLoadingCircular/#loading-indeterminate","title":"Loading indeterminate","text":"<pre><code>&lt;FodLoadingCircular Indeterminate=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#loading-cu-progres","title":"Loading cu progres","text":"<pre><code>&lt;FodLoadingCircular Value=\"@progress\" \n                    Min=\"0\" \n                    Max=\"100\" /&gt;\n\n@code {\n    private double progress = 45;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#loading-colorat-si-dimensionat","title":"Loading colorat \u0219i dimensionat","text":"<pre><code>&lt;FodLoadingCircular Indeterminate=\"true\" \n                    FodColor=\"FodColor.Primary\" \n                    FodSize=\"FodSize.Large\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>FodColor</code> <code>FodColor</code> Culoarea componentei <code>FodColor.Default</code> <code>FodSize</code> <code>FodSize</code> Dimensiunea (Small, Medium, Large) <code>FodSize.Medium</code> <code>Indeterminate</code> <code>bool</code> Anima\u021bie continu\u0103 f\u0103r\u0103 valoare <code>false</code> <code>Value</code> <code>double</code> Valoarea curent\u0103 a progresului <code>0</code> <code>Min</code> <code>double</code> Valoarea minim\u0103 <code>0</code> <code>Max</code> <code>double</code> Valoarea maxim\u0103 <code>100</code> <code>StrokeWidth</code> <code>int</code> Grosimea liniei cercului <code>3</code>"},{"location":"fod/componente/FodLoadingCircular/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodLoadingCircular/#loading-cu-progres-si-text","title":"Loading cu progres \u0219i text","text":"<pre><code>&lt;div class=\"text-center\"&gt;\n    &lt;FodLoadingCircular Value=\"@uploadProgress\" \n                        FodColor=\"FodColor.Primary\" \n                        FodSize=\"FodSize.Large\" /&gt;\n    &lt;FodText Typo=\"Typo.caption\" Class=\"mt-2\"&gt;\n        @($\"{uploadProgress:F0}% \u00eenc\u0103rcat\")\n    &lt;/FodText&gt;\n&lt;/div&gt;\n\n@code {\n    private double uploadProgress = 0;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Simulare \u00eenc\u0103rcare\n        while (uploadProgress &lt; 100)\n        {\n            await Task.Delay(100);\n            uploadProgress += Random.Shared.Next(1, 10);\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#loading-in-buton","title":"Loading \u00een buton","text":"<pre><code>&lt;FodButton Disabled=\"@isLoading\" \n           Color=\"FodColor.Primary\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodLoadingCircular Indeterminate=\"true\" \n                            FodSize=\"FodSize.Small\" \n                            FodColor=\"FodColor.Inherit\" \n                            Class=\"me-2\" /&gt;\n    }\n    @buttonText\n&lt;/FodButton&gt;\n\n@code {\n    private bool isLoading = false;\n    private string buttonText = \"Salveaz\u0103\";\n\n    private async Task Save()\n    {\n        isLoading = true;\n        buttonText = \"Se salveaz\u0103...\";\n\n        await SaveDataAsync();\n\n        isLoading = false;\n        buttonText = \"Salveaz\u0103\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#loading-overlay","title":"Loading overlay","text":"<pre><code>&lt;div class=\"position-relative\"&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;!-- Con\u021binut card --&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    @if (isLoadingData)\n    {\n        &lt;div class=\"loading-overlay\"&gt;\n            &lt;FodLoadingCircular Indeterminate=\"true\" \n                                FodColor=\"FodColor.Primary\" \n                                FodSize=\"FodSize.Large\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n&lt;style&gt;\n    .loading-overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: rgba(255, 255, 255, 0.8);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 10;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#loading-cu-etape-multiple","title":"Loading cu etape multiple","text":"<pre><code>&lt;div class=\"d-flex flex-column align-items-center\"&gt;\n    @foreach (var step in loadingSteps)\n    {\n        &lt;div class=\"d-flex align-items-center mb-2\"&gt;\n            @if (step.IsCompleted)\n            {\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n                         Color=\"FodColor.Success\" /&gt;\n            }\n            else if (step.IsActive)\n            {\n                &lt;FodLoadingCircular Indeterminate=\"true\" \n                                    FodSize=\"FodSize.Small\" \n                                    FodColor=\"FodColor.Primary\" /&gt;\n            }\n            else\n            {\n                &lt;FodIcon Icon=\"@FodIcons.Material.Outlined.Circle\" \n                         Color=\"FodColor.Disabled\" /&gt;\n            }\n            &lt;FodText Class=\"ms-2\"&gt;@step.Name&lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;LoadingStep&gt; loadingSteps = new()\n    {\n        new() { Name = \"Validare date\", IsActive = true },\n        new() { Name = \"Procesare cerere\" },\n        new() { Name = \"Generare documente\" },\n        new() { Name = \"Finalizare\" }\n    };\n\n    public class LoadingStep\n    {\n        public string Name { get; set; }\n        public bool IsActive { get; set; }\n        public bool IsCompleted { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#progress-circular-pentru-statistici","title":"Progress circular pentru statistici","text":"<pre><code>&lt;div class=\"d-flex justify-content-around\"&gt;\n    @foreach (var stat in statistics)\n    {\n        &lt;div class=\"text-center\"&gt;\n            &lt;div class=\"position-relative d-inline-block\"&gt;\n                &lt;FodLoadingCircular Value=\"@stat.Value\" \n                                    Max=\"@stat.Max\" \n                                    FodColor=\"@stat.Color\" \n                                    StrokeWidth=\"5\" /&gt;\n                &lt;div class=\"position-absolute top-50 start-50 translate-middle\"&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;@stat.Value&lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;FodText Typo=\"Typo.caption\" Class=\"mt-2\"&gt;\n                @stat.Label\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;Statistic&gt; statistics = new()\n    {\n        new() { Label = \"Completate\", Value = 75, Max = 100, Color = FodColor.Success },\n        new() { Label = \"\u00cen lucru\", Value = 15, Max = 100, Color = FodColor.Warning },\n        new() { Label = \"Respinse\", Value = 10, Max = 100, Color = FodColor.Error }\n    };\n\n    public class Statistic\n    {\n        public string Label { get; set; }\n        public double Value { get; set; }\n        public double Max { get; set; }\n        public FodColor Color { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#5-stilizare-si-dimensiuni","title":"5. Stilizare \u0219i Dimensiuni","text":""},{"location":"fod/componente/FodLoadingCircular/#dimensiuni-predefinite","title":"Dimensiuni predefinite","text":"<pre><code>&lt;div class=\"d-flex gap-3 align-items-center\"&gt;\n    &lt;div&gt;\n        &lt;FodLoadingCircular Indeterminate=\"true\" FodSize=\"FodSize.Small\" /&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Small&lt;/FodText&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;FodLoadingCircular Indeterminate=\"true\" FodSize=\"FodSize.Medium\" /&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Medium&lt;/FodText&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;FodLoadingCircular Indeterminate=\"true\" FodSize=\"FodSize.Large\" /&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Large&lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#culori-disponibile","title":"Culori disponibile","text":"<pre><code>&lt;div class=\"d-flex flex-wrap gap-3\"&gt;\n    @foreach (FodColor color in Enum.GetValues&lt;FodColor&gt;())\n    {\n        &lt;div class=\"text-center\"&gt;\n            &lt;FodLoadingCircular Indeterminate=\"true\" \n                                FodColor=\"@color\" /&gt;\n            &lt;FodText Typo=\"Typo.caption\"&gt;@color&lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#6-stilizare-css-personalizata","title":"6. Stilizare CSS Personalizat\u0103","text":"<pre><code>/* Loading cu dimensiune custom */\n.custom-loading .fod-progress-circular {\n    width: 100px !important;\n    height: 100px !important;\n}\n\n/* Anima\u021bie personalizat\u0103 */\n.smooth-loading .fod-progress-circular-circle {\n    transition: stroke-dashoffset 0.5s ease-in-out;\n}\n\n/* Loading cu fundal */\n.loading-with-bg {\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 50%;\n    padding: 10px;\n}\n\n/* Pulsa\u021bie pentru indeterminate */\n@keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n}\n\n.pulsing-loader .fod-progress-circular {\n    animation: pulse 2s ease-in-out infinite;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#7-integrare-cu-componente","title":"7. Integrare cu componente","text":""},{"location":"fod/componente/FodLoadingCircular/#in-datatable","title":"\u00cen DataTable","text":"<pre><code>&lt;FodDataTable Items=\"@items\" T=\"Item\"&gt;\n    @if (isLoadingData)\n    {\n        &lt;LoadingContent&gt;\n            &lt;div class=\"text-center p-4\"&gt;\n                &lt;FodLoadingCircular Indeterminate=\"true\" \n                                    FodColor=\"FodColor.Primary\" /&gt;\n                &lt;FodText Class=\"mt-2\"&gt;Se \u00eencarc\u0103 datele...&lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/LoadingContent&gt;\n    }\n    &lt;!-- Coloane --&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        @if (isProcessing)\n        {\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodLoadingCircular Indeterminate=\"true\" \n                                    FodSize=\"FodSize.Small\" \n                                    Class=\"me-3\" /&gt;\n                &lt;div&gt;\n                    &lt;FodText&gt;Procesare \u00een curs...&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                        Acest proces poate dura c\u00e2teva minute\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingCircular/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Feedback clar - Folosi\u021bi text descriptiv \u00eempreun\u0103 cu loader</li> <li>Dimensiune adecvat\u0103 - Adapta\u021bi dimensiunea la context</li> <li>Culori consistente - Folosi\u021bi culori din tema aplica\u021biei</li> <li>Indeterminate vs Determinate - Folosi\u021bi determinate c\u00e2nd \u0219ti\u021bi progresul</li> <li>Pozi\u021bionare - Centra\u021bi \u00een containerul p\u0103rinte</li> <li>Overlay - Pentru \u00eenc\u0103rcare full-screen folosi\u021bi overlay</li> </ol>"},{"location":"fod/componente/FodLoadingCircular/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>SVG este optimizat pentru performan\u021b\u0103</li> <li>Anima\u021bia CSS nu blocheaz\u0103 thread-ul principal</li> <li>Re-render doar la schimbarea valorii</li> <li>Folosi\u021bi <code>Indeterminate</code> pentru anima\u021bie continu\u0103</li> </ul>"},{"location":"fod/componente/FodLoadingCircular/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Atribut <code>role=\"progressbar\"</code> inclus</li> <li><code>aria-valuenow</code> actualizat automat</li> <li>Compatibil cu screen readers</li> <li>Contrast adecvat pentru culori</li> </ul>"},{"location":"fod/componente/FodLoadingCircular/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodLoadingCircular/#animatia-nu-functioneaza","title":"Anima\u021bia nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Indeterminate=\"true\"</code></li> <li>Verifica\u021bi c\u0103 CSS-ul este \u00eenc\u0103rcat</li> <li>Verifica\u021bi consol\u0103 pentru erori JS</li> </ul>"},{"location":"fod/componente/FodLoadingCircular/#valoarea-nu-se-actualizeaza","title":"Valoarea nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Value este \u00eentre Min \u0219i Max</li> <li>Verifica\u021bi c\u0103 StateHasChanged este apelat</li> <li>Folosi\u021bi @bind-Value pentru two-way binding</li> </ul>"},{"location":"fod/componente/FodLoadingCircular/#dimensiunea-nu-se-schimba","title":"Dimensiunea nu se schimb\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FodSize este setat corect</li> <li>Verifica\u021bi c\u0103 nu exist\u0103 CSS care suprascrie</li> <li>Folosi\u021bi Class pentru dimensiuni custom</li> </ul>"},{"location":"fod/componente/FodLoadingCircular/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodLoadingCircular</code> ofer\u0103 o solu\u021bie elegant\u0103 \u0219i flexibil\u0103 pentru indicarea st\u0103rii de \u00eenc\u0103rcare \u00een aplica\u021biile FOD. Cu suport pentru progres determinat \u0219i anima\u021bie continu\u0103, componenta se integreaz\u0103 perfect \u00een orice context de UI.</p>"},{"location":"fod/componente/FodLoadingLinear/","title":"FodLoadingLinear","text":""},{"location":"fod/componente/FodLoadingLinear/#documentatie-pentru-componenta-fodloadinglinear","title":"Documenta\u021bie pentru componenta FodLoadingLinear","text":""},{"location":"fod/componente/FodLoadingLinear/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodLoadingLinear</code> este o component\u0103 de \u00eenc\u0103rcare liniar\u0103 (progress bar) care afi\u0219eaz\u0103 progresul \u00eentr-o bar\u0103 orizontal\u0103 sau vertical\u0103. Suport\u0103 moduri determinate, indeterminate \u0219i buffer, cu op\u021biuni pentru stilizare avansat\u0103.</p> <p>Caracteristici principale: - Bar\u0103 de progres orizontal\u0103/vertical\u0103 - Mod determinate cu procent - Mod indeterminate cu anima\u021bie - Mod buffer pentru \u00eenc\u0103rcare \u00een dou\u0103 etape - Stria\u021bii op\u021bionale - Col\u021buri rotunjite op\u021bionale - Dimensiuni multiple - Con\u021binut personalizat - Suport RTL</p>"},{"location":"fod/componente/FodLoadingLinear/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodLoadingLinear/#progress-simplu","title":"Progress simplu","text":"<pre><code>&lt;FodLoadingLinear Value=\"@progress\" /&gt;\n\n@code {\n    private double progress = 35;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#loading-indeterminate","title":"Loading indeterminate","text":"<pre><code>&lt;FodLoadingLinear Indeterminate=\"true\" \n                  FodColor=\"FodColor.Primary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#progress-cu-buffer","title":"Progress cu buffer","text":"<pre><code>&lt;FodLoadingLinear Value=\"@downloadProgress\" \n                  BufferValue=\"@bufferProgress\"\n                  Buffer=\"true\" /&gt;\n\n@code {\n    private double downloadProgress = 30;\n    private double bufferProgress = 50;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>FodColor</code> <code>FodColor</code> Culoarea componentei <code>FodColor.Default</code> <code>FodSize</code> <code>FodSize</code> Dimensiunea barei <code>FodSize.Small</code> <code>Indeterminate</code> <code>bool</code> Anima\u021bie continu\u0103 <code>false</code> <code>Buffer</code> <code>bool</code> Activeaz\u0103 modul buffer <code>false</code> <code>Rounded</code> <code>bool</code> Col\u021buri rotunjite <code>false</code> <code>Striped</code> <code>bool</code> Adaug\u0103 stria\u021bii <code>false</code> <code>Vertical</code> <code>bool</code> Orientare vertical\u0103 <code>false</code> <code>Value</code> <code>double</code> Valoarea progresului <code>0</code> <code>BufferValue</code> <code>double</code> Valoarea buffer <code>0</code> <code>Min</code> <code>double</code> Valoare minim\u0103 <code>0</code> <code>Max</code> <code>double</code> Valoare maxim\u0103 <code>100</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut personalizat -"},{"location":"fod/componente/FodLoadingLinear/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodLoadingLinear/#progress-cu-text-si-procent","title":"Progress cu text \u0219i procent","text":"<pre><code>&lt;div class=\"position-relative\"&gt;\n    &lt;FodLoadingLinear Value=\"@uploadProgress\" \n                      FodColor=\"FodColor.Success\"\n                      FodSize=\"FodSize.Medium\"\n                      Rounded=\"true\"&gt;\n        &lt;div class=\"position-absolute w-100 text-center\"&gt;\n            &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Inherit\"&gt;\n                @($\"{uploadProgress:F0}%\")\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/FodLoadingLinear&gt;\n&lt;/div&gt;\n\n@code {\n    private double uploadProgress = 67;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#multi-step-progress","title":"Multi-step progress","text":"<pre><code>&lt;div class=\"mb-4\"&gt;\n    &lt;div class=\"d-flex justify-content-between mb-2\"&gt;\n        &lt;FodText Typo=\"Typo.subtitle2\"&gt;@currentStep.Name&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;\n            Pasul @currentStepIndex din @totalSteps\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n\n    &lt;FodLoadingLinear Value=\"@overallProgress\" \n                      FodColor=\"FodColor.Primary\"\n                      Rounded=\"true\"\n                      Striped=\"true\" /&gt;\n\n    &lt;div class=\"mt-2\"&gt;\n        &lt;FodLoadingLinear Value=\"@currentStep.Progress\" \n                          FodColor=\"FodColor.Secondary\"\n                          FodSize=\"FodSize.Small\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private int currentStepIndex = 2;\n    private int totalSteps = 5;\n    private double overallProgress =&gt; (currentStepIndex - 1) * 100.0 / totalSteps + \n                                      (currentStep.Progress / totalSteps);\n\n    private StepInfo currentStep = new() \n    { \n        Name = \"Procesare date\", \n        Progress = 45 \n    };\n\n    public class StepInfo\n    {\n        public string Name { get; set; }\n        public double Progress { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#download-cu-buffer","title":"Download cu buffer","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;div class=\"d-flex align-items-center mb-3\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Download\" \n                     Class=\"me-2\" /&gt;\n            &lt;div class=\"flex-grow-1\"&gt;\n                &lt;FodText&gt;document.pdf&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                    @FormatBytes(downloadedBytes) / @FormatBytes(totalBytes)\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n            &lt;FodText&gt;@downloadSpeed MB/s&lt;/FodText&gt;\n        &lt;/div&gt;\n\n        &lt;FodLoadingLinear Value=\"@downloadPercent\" \n                          BufferValue=\"@bufferPercent\"\n                          Buffer=\"true\"\n                          FodColor=\"FodColor.Info\"\n                          Rounded=\"true\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private long downloadedBytes = 45_000_000;\n    private long bufferedBytes = 67_000_000;\n    private long totalBytes = 150_000_000;\n    private double downloadSpeed = 2.5;\n\n    private double downloadPercent =&gt; (double)downloadedBytes / totalBytes * 100;\n    private double bufferPercent =&gt; (double)bufferedBytes / totalBytes * 100;\n\n    private string FormatBytes(long bytes)\n    {\n        return $\"{bytes / 1_000_000.0:F1} MB\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#progress-vertical-pentru-skills","title":"Progress vertical pentru skills","text":"<pre><code>&lt;div class=\"d-flex gap-4\"&gt;\n    @foreach (var skill in skills)\n    {\n        &lt;div class=\"text-center\"&gt;\n            &lt;FodText Typo=\"Typo.caption\" Class=\"mb-2\"&gt;\n                @skill.Name\n            &lt;/FodText&gt;\n            &lt;div style=\"height: 200px; position: relative;\"&gt;\n                &lt;FodLoadingLinear Value=\"@skill.Level\" \n                                  FodColor=\"@skill.Color\"\n                                  Vertical=\"true\"\n                                  Rounded=\"true\"\n                                  Class=\"h-100\" /&gt;\n                &lt;div class=\"position-absolute bottom-0 w-100 text-center pb-2\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.OnPrimary\"&gt;\n                        @skill.Level%\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;Skill&gt; skills = new()\n    {\n        new() { Name = \"C#\", Level = 90, Color = FodColor.Primary },\n        new() { Name = \"Blazor\", Level = 85, Color = FodColor.Secondary },\n        new() { Name = \"SQL\", Level = 75, Color = FodColor.Info },\n        new() { Name = \"JavaScript\", Level = 70, Color = FodColor.Warning }\n    };\n\n    public class Skill\n    {\n        public string Name { get; set; }\n        public double Level { get; set; }\n        public FodColor Color { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#loading-cu-animatie-customizata","title":"Loading cu anima\u021bie customizat\u0103","text":"<pre><code>&lt;div class=\"loading-container\"&gt;\n    @if (!isComplete)\n    {\n        &lt;FodLoadingLinear @ref=\"progressBar\"\n                          Value=\"@progress\" \n                          FodColor=\"FodColor.Primary\"\n                          FodSize=\"FodSize.Medium\"\n                          Rounded=\"true\"\n                          Striped=\"@(progress &gt; 50)\" /&gt;\n\n        &lt;div class=\"d-flex justify-content-between mt-2\"&gt;\n            &lt;FodText Typo=\"Typo.caption\"&gt;@statusMessage&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.caption\"&gt;@timeRemaining&lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n    else\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n            Proces finalizat cu succes!\n        &lt;/FodAlert&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private FodLoadingLinear progressBar;\n    private double progress = 0;\n    private bool isComplete = false;\n    private string statusMessage = \"Ini\u021bializare...\";\n    private string timeRemaining = \"Calculez...\";\n\n    protected override async Task OnInitializedAsync()\n    {\n        await SimulateProgress();\n    }\n\n    private async Task SimulateProgress()\n    {\n        var stages = new[]\n        {\n            (\"Conectare la server...\", 20),\n            (\"Desc\u0103rcare date...\", 40),\n            (\"Procesare...\", 30),\n            (\"Finalizare...\", 10)\n        };\n\n        foreach (var (message, duration) in stages)\n        {\n            statusMessage = message;\n            var stageProgress = progress;\n            var targetProgress = Math.Min(progress + duration, 100);\n\n            while (progress &lt; targetProgress)\n            {\n                await Task.Delay(100);\n                progress += 1;\n\n                var remaining = (100 - progress) * 0.1;\n                timeRemaining = $\"{remaining:F1} secunde r\u0103mase\";\n\n                StateHasChanged();\n            }\n        }\n\n        isComplete = true;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#5-stilizare-si-variante","title":"5. Stilizare \u0219i Variante","text":""},{"location":"fod/componente/FodLoadingLinear/#toate-dimensiunile","title":"Toate dimensiunile","text":"<pre><code>&lt;div class=\"space-y-4\"&gt;\n    &lt;div&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Small&lt;/FodText&gt;\n        &lt;FodLoadingLinear Value=\"70\" FodSize=\"FodSize.Small\" /&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Medium&lt;/FodText&gt;\n        &lt;FodLoadingLinear Value=\"70\" FodSize=\"FodSize.Medium\" /&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;Large&lt;/FodText&gt;\n        &lt;FodLoadingLinear Value=\"70\" FodSize=\"FodSize.Large\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#variante-stilizate","title":"Variante stilizate","text":"<pre><code>&lt;div class=\"space-y-4\"&gt;\n    &lt;FodLoadingLinear Value=\"60\" \n                      FodColor=\"FodColor.Primary\" /&gt;\n\n    &lt;FodLoadingLinear Value=\"60\" \n                      FodColor=\"FodColor.Secondary\"\n                      Rounded=\"true\" /&gt;\n\n    &lt;FodLoadingLinear Value=\"60\" \n                      FodColor=\"FodColor.Success\"\n                      Striped=\"true\" /&gt;\n\n    &lt;FodLoadingLinear Value=\"60\" \n                      FodColor=\"FodColor.Warning\"\n                      Rounded=\"true\"\n                      Striped=\"true\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#6-stilizare-css-personalizata","title":"6. Stilizare CSS Personalizat\u0103","text":"<pre><code>/* Progress cu gradient */\n.gradient-progress .fod-progress-linear-bar {\n    background: linear-gradient(90deg, \n        var(--fod-palette-primary-light) 0%, \n        var(--fod-palette-primary-dark) 100%);\n}\n\n/* Anima\u021bie pentru striped */\n@keyframes progress-striped {\n    0% { background-position: 0 0; }\n    100% { background-position: 40px 0; }\n}\n\n.animated-stripes .fod-progress-linear-striped .fod-progress-linear-bar {\n    animation: progress-striped 1s linear infinite;\n}\n\n/* Progress cu glow */\n.glow-progress .fod-progress-linear-bar {\n    box-shadow: 0 0 10px var(--fod-palette-primary-main);\n}\n\n/* Dimensiune custom */\n.thick-progress {\n    height: 20px !important;\n}\n\n.thick-progress .fod-progress-linear-content {\n    line-height: 20px;\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#7-integrare-cu-formulare","title":"7. Integrare cu Formulare","text":""},{"location":"fod/componente/FodLoadingLinear/#upload-fisiere","title":"Upload fi\u0219iere","text":"<pre><code>&lt;InputFile OnChange=\"HandleFileSelected\" multiple /&gt;\n\n@if (uploadingFiles.Any())\n{\n    &lt;div class=\"mt-3\"&gt;\n        @foreach (var file in uploadingFiles)\n        {\n            &lt;div class=\"mb-3\"&gt;\n                &lt;div class=\"d-flex justify-content-between mb-1\"&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;@file.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;@file.Progress%&lt;/FodText&gt;\n                &lt;/div&gt;\n                &lt;FodLoadingLinear Value=\"@file.Progress\" \n                                  FodColor=\"@(file.HasError ? FodColor.Error : FodColor.Primary)\"\n                                  FodSize=\"FodSize.Small\" /&gt;\n                @if (file.HasError)\n                {\n                    &lt;FodText Color=\"FodColor.Error\" Typo=\"Typo.caption\"&gt;\n                        @file.ErrorMessage\n                    &lt;/FodText&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n}\n\n@code {\n    private List&lt;FileUploadInfo&gt; uploadingFiles = new();\n\n    private async Task HandleFileSelected(InputFileChangeEventArgs e)\n    {\n        foreach (var file in e.GetMultipleFiles())\n        {\n            var fileInfo = new FileUploadInfo { Name = file.Name };\n            uploadingFiles.Add(fileInfo);\n\n            _ = UploadFile(file, fileInfo);\n        }\n    }\n\n    private async Task UploadFile(IBrowserFile file, FileUploadInfo info)\n    {\n        try\n        {\n            // Simulare upload\n            while (info.Progress &lt; 100)\n            {\n                await Task.Delay(100);\n                info.Progress += Random.Shared.Next(5, 15);\n                StateHasChanged();\n            }\n        }\n        catch (Exception ex)\n        {\n            info.HasError = true;\n            info.ErrorMessage = ex.Message;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodLoadingLinear/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Feedback vizual - Folosi\u021bi culori consistente pentru st\u0103ri</li> <li>Valori clare - Afi\u0219a\u021bi procente sau text descriptiv</li> <li>Anima\u021bii subtile - Nu distrage\u021bi utilizatorul</li> <li>Buffer pentru streaming - Folosi\u021bi pentru date \u00een flux</li> <li>Indeterminate pentru necunoscut - C\u00e2nd nu \u0219ti\u021bi durata</li> <li>Accesibilitate - Include\u021bi aria labels</li> </ol>"},{"location":"fod/componente/FodLoadingLinear/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Anima\u021biile CSS sunt optimizate</li> <li>Re-render doar la schimbarea valorilor</li> <li>Folosi\u021bi <code>Buffer</code> doar c\u00e2nd e necesar</li> <li>Evita\u021bi actualiz\u0103ri prea frecvente</li> </ul>"},{"location":"fod/componente/FodLoadingLinear/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Atribute ARIA incluse automat</li> <li><code>role=\"progressbar\"</code> setat</li> <li><code>aria-valuenow</code>, <code>aria-valuemin</code>, <code>aria-valuemax</code></li> <li>Compatibil cu screen readers</li> </ul>"},{"location":"fod/componente/FodLoadingLinear/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodLoadingLinear/#progress-nu-se-actualizeaza","title":"Progress nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Value este \u00eentre Min \u0219i Max</li> <li>Apela\u021bi StateHasChanged dup\u0103 actualizare</li> <li>Verifica\u021bi c\u0103 nu exist\u0103 erori \u00een consol\u0103</li> </ul>"},{"location":"fod/componente/FodLoadingLinear/#animatia-indeterminate-nu-merge","title":"Anima\u021bia indeterminate nu merge","text":"<ul> <li>Verifica\u021bi c\u0103 Indeterminate=\"true\"</li> <li>Verifica\u021bi c\u0103 CSS-ul este \u00eenc\u0103rcat corect</li> </ul>"},{"location":"fod/componente/FodLoadingLinear/#buffer-nu-apare","title":"Buffer nu apare","text":"<ul> <li>Seta\u021bi Buffer=\"true\"</li> <li>Asigura\u021bi-v\u0103 c\u0103 BufferValue &gt; Value</li> </ul>"},{"location":"fod/componente/FodLoadingLinear/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodLoadingLinear</code> ofer\u0103 o solu\u021bie versatil\u0103 pentru afi\u0219area progresului \u00een aplica\u021biile FOD. Cu multiple moduri de afi\u0219are \u0219i op\u021biuni de stilizare, componenta se adapteaz\u0103 perfect la orice context de \u00eenc\u0103rcare sau procesare.</p>"},{"location":"fod/componente/FodMainContent/","title":"FodMainContent","text":""},{"location":"fod/componente/FodMainContent/#documentatie-pentru-componenta-fodmaincontent","title":"Documenta\u021bie pentru componenta FodMainContent","text":""},{"location":"fod/componente/FodMainContent/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodMainContent</code> este o component\u0103 layout care serve\u0219te ca container principal pentru con\u021binutul paginii. Ofer\u0103 op\u021biuni pentru afi\u0219are cu l\u0103\u021bime complet\u0103 sau \u00eentr-un container centrat responsive, fiind ideal\u0103 pentru structurarea con\u021binutului principal al aplica\u021biei.</p> <p>Caracteristici principale: - Container flexibil pentru con\u021binut principal - Mod container cu l\u0103\u021bime maxim\u0103 \u0219i centrare - Suport pentru clase CSS personalizate - Integrare cu sistemul de layout Bootstrap - Responsive design cu container-xxl - Component\u0103 semantic\u0103 pentru con\u021binut principal</p>"},{"location":"fod/componente/FodMainContent/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodMainContent/#continut-cu-latime-completa","title":"Con\u021binut cu l\u0103\u021bime complet\u0103","text":"<pre><code>&lt;FodMainContent&gt;\n    &lt;h1&gt;Titlu pagin\u0103&lt;/h1&gt;\n    &lt;p&gt;Con\u021binutul paginii aici...&lt;/p&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#continut-intr-un-container-centrat","title":"Con\u021binut \u00eentr-un container centrat","text":"<pre><code>&lt;FodMainContent IsContainered=\"true\"&gt;\n    &lt;FodGrid container spacing=\"3\"&gt;\n        &lt;FodGrid item xs=\"12\"&gt;\n            &lt;h1&gt;Dashboard&lt;/h1&gt;\n        &lt;/FodGrid&gt;\n        &lt;FodGrid item xs=\"12\" md=\"8\"&gt;\n            &lt;!-- Con\u021binut principal --&gt;\n        &lt;/FodGrid&gt;\n        &lt;FodGrid item xs=\"12\" md=\"4\"&gt;\n            &lt;!-- Sidebar --&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul de afi\u0219at - <code>IsContainered</code> <code>bool</code> Activeaz\u0103 modul container <code>false</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale - <code>Style</code> <code>string</code> Stiluri inline - <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale -"},{"location":"fod/componente/FodMainContent/#4-clase-css-generate","title":"4. Clase CSS Generate","text":"<ul> <li><code>fod-main-content</code> - Clasa de baz\u0103</li> <li><code>container-xxl</code> - Aplicat c\u00e2nd <code>IsContainered=\"true\"</code></li> <li><code>centered-container</code> - Aplicat c\u00e2nd <code>IsContainered=\"true\"</code></li> </ul>"},{"location":"fod/componente/FodMainContent/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodMainContent/#layout-complet-cu-header-si-footer","title":"Layout complet cu header \u0219i footer","text":"<pre><code>&lt;FodLayout&gt;\n    &lt;FodHeader Fixed=\"true\"&gt;\n        &lt;FodToolbar&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" /&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Aplica\u021bia Mea&lt;/FodText&gt;\n        &lt;/FodToolbar&gt;\n    &lt;/FodHeader&gt;\n\n    &lt;FodMainContent IsContainered=\"true\" Class=\"py-4\"&gt;\n        &lt;FodBreadcrumbs Items=\"@breadcrumbs\" /&gt;\n\n        @Body\n    &lt;/FodMainContent&gt;\n\n    &lt;FodFooter&gt;\n        &lt;FodText Align=\"FodAlign.Center\" Typo=\"Typo.body2\"&gt;\n            \u00a9 2024 Compania Mea\n        &lt;/FodText&gt;\n    &lt;/FodFooter&gt;\n&lt;/FodLayout&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#continut-cu-diferite-sectiuni","title":"Con\u021binut cu diferite sec\u021biuni","text":"<pre><code>&lt;FodMainContent IsContainered=\"true\"&gt;\n    &lt;!-- Hero Section --&gt;\n    &lt;section class=\"hero-section py-5\"&gt;\n        &lt;FodGrid container alignItems=\"Center\" spacing=\"4\"&gt;\n            &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n                &lt;FodText Typo=\"Typo.h2\" GutterBottom=\"true\"&gt;\n                    Bine a\u021bi venit!\n                &lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.body1\" Color=\"FodColor.TextSecondary\"&gt;\n                    Descrierea aplica\u021biei \u0219i beneficiile principale.\n                &lt;/FodText&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" Size=\"FodSize.Large\" Class=\"mt-3\"&gt;\n                    \u00cencepe\u021bi acum\n                &lt;/FodButton&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n                &lt;FodImage Src=\"/images/hero.svg\" Alt=\"Hero image\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    &lt;/section&gt;\n\n    &lt;FodDivider /&gt;\n\n    &lt;!-- Features Section --&gt;\n    &lt;section class=\"features-section py-5\"&gt;\n        &lt;FodText Typo=\"Typo.h3\" Align=\"FodAlign.Center\" GutterBottom=\"true\"&gt;\n            Caracteristici principale\n        &lt;/FodText&gt;\n        &lt;FodGrid container spacing=\"3\"&gt;\n            @foreach (var feature in features)\n            {\n                &lt;FodGrid item xs=\"12\" sm=\"6\" md=\"4\"&gt;\n                    &lt;FodCard&gt;\n                        &lt;FodCardContent&gt;\n                            &lt;FodIcon Icon=\"@feature.Icon\" \n                                     Color=\"FodColor.Primary\" \n                                     Size=\"FodSize.Large\" /&gt;\n                            &lt;FodText Typo=\"Typo.h5\"&gt;@feature.Title&lt;/FodText&gt;\n                            &lt;FodText&gt;@feature.Description&lt;/FodText&gt;\n                        &lt;/FodCardContent&gt;\n                    &lt;/FodCard&gt;\n                &lt;/FodGrid&gt;\n            }\n        &lt;/FodGrid&gt;\n    &lt;/section&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#continut-adaptiv-pentru-diferite-rezolutii","title":"Con\u021binut adaptiv pentru diferite rezolu\u021bii","text":"<pre><code>&lt;FodMainContent IsContainered=\"@useContainer\" \n                Class=\"@GetResponsiveClasses()\"&gt;\n    @if (IsMobile)\n    {\n        &lt;!-- Layout mobil --&gt;\n        &lt;FodStack Spacing=\"2\"&gt;\n            @foreach (var item in items)\n            {\n                &lt;MobileItemCard Item=\"@item\" /&gt;\n            }\n        &lt;/FodStack&gt;\n    }\n    else\n    {\n        &lt;!-- Layout desktop --&gt;\n        &lt;FodGrid container spacing=\"3\"&gt;\n            @foreach (var item in items)\n            {\n                &lt;FodGrid item xs=\"12\" md=\"6\" lg=\"4\"&gt;\n                    &lt;DesktopItemCard Item=\"@item\" /&gt;\n                &lt;/FodGrid&gt;\n            }\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodMainContent&gt;\n\n@code {\n    [Inject] private IBreakpointService BreakpointService { get; set; }\n\n    private bool IsMobile =&gt; BreakpointService.IsSmDown;\n    private bool useContainer =&gt; !IsMobile;\n\n    private string GetResponsiveClasses()\n    {\n        return IsMobile ? \"px-2\" : \"py-4\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodMainContent/#6-stilizare-css","title":"6. Stilizare CSS","text":"<pre><code>/* Stiluri de baz\u0103 */\n.fod-main-content {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    min-height: 0;\n}\n\n/* Container centrat */\n.fod-main-content.centered-container {\n    margin-left: auto;\n    margin-right: auto;\n}\n\n/* Suport pentru diferite dimensiuni de ecran */\n@media (min-width: 1400px) {\n    .fod-main-content.container-xxl {\n        max-width: 1320px;\n    }\n}\n\n/* Padding responsive */\n.fod-main-content {\n    padding: 1rem;\n}\n\n@media (min-width: 768px) {\n    .fod-main-content {\n        padding: 2rem;\n    }\n}\n\n/* Stiluri pentru sec\u021biuni */\n.fod-main-content section {\n    margin-bottom: 3rem;\n}\n\n.fod-main-content section:last-child {\n    margin-bottom: 0;\n}\n</code></pre>"},{"location":"fod/componente/FodMainContent/#7-integrare-cu-layout-system","title":"7. Integrare cu Layout System","text":""},{"location":"fod/componente/FodMainContent/#layout-cu-navigare-laterala","title":"Layout cu navigare lateral\u0103","text":"<pre><code>&lt;FodLayout&gt;\n    &lt;FodDrawer Open=\"@drawerOpen\" Fixed=\"true\"&gt;\n        &lt;FodNavMenu&gt;\n            &lt;!-- Meniu navigare --&gt;\n        &lt;/FodNavMenu&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodMainContent IsContainered=\"false\" \n                    Style=\"@($\"margin-left: {(drawerOpen ? 240 : 0)}px\")\"&gt;\n        &lt;FodContainer MaxWidth=\"MaxWidth.Large\"&gt;\n            @Body\n        &lt;/FodContainer&gt;\n    &lt;/FodMainContent&gt;\n&lt;/FodLayout&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#layout-cu-tabs","title":"Layout cu tabs","text":"<pre><code>&lt;FodMainContent IsContainered=\"true\"&gt;\n    &lt;FodTabs @bind-ActivePanelIndex=\"activeTab\"&gt;\n        &lt;FodTabPanel Title=\"Prezentare general\u0103\"&gt;\n            &lt;div class=\"tab-content py-3\"&gt;\n                &lt;OverviewContent /&gt;\n            &lt;/div&gt;\n        &lt;/FodTabPanel&gt;\n\n        &lt;FodTabPanel Title=\"Detalii\"&gt;\n            &lt;div class=\"tab-content py-3\"&gt;\n                &lt;DetailsContent /&gt;\n            &lt;/div&gt;\n        &lt;/FodTabPanel&gt;\n\n        &lt;FodTabPanel Title=\"Statistici\"&gt;\n            &lt;div class=\"tab-content py-3\"&gt;\n                &lt;StatisticsContent /&gt;\n            &lt;/div&gt;\n        &lt;/FodTabPanel&gt;\n    &lt;/FodTabs&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodMainContent/#pagina-de-administrare","title":"Pagin\u0103 de administrare","text":"<pre><code>@page \"/admin\"\n@layout AdminLayout\n\n&lt;FodMainContent IsContainered=\"true\" Class=\"admin-content\"&gt;\n    &lt;div class=\"page-header mb-4\"&gt;\n        &lt;FodText Typo=\"Typo.h4\"&gt;Panou de administrare&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.TextSecondary\"&gt;\n            Ultima actualizare: @lastUpdate.ToString(\"dd.MM.yyyy HH:mm\")\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n\n    &lt;FodGrid container spacing=\"3\"&gt;\n        &lt;!-- Widget-uri statistici --&gt;\n        &lt;FodGrid item xs=\"12\" sm=\"6\" md=\"3\"&gt;\n            &lt;StatWidget Title=\"Utilizatori\" \n                        Value=\"@userCount\" \n                        Icon=\"@FodIcons.Material.Filled.People\" /&gt;\n        &lt;/FodGrid&gt;\n        &lt;!-- Mai multe widget-uri --&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;!-- Tabel date --&gt;\n    &lt;FodCard Class=\"mt-4\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;AdminDataTable /&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#landing-page","title":"Landing page","text":"<pre><code>&lt;FodMainContent IsContainered=\"false\"&gt;\n    &lt;!-- Full-width hero --&gt;\n    &lt;div class=\"hero-banner\"&gt;\n        &lt;FodContainer MaxWidth=\"MaxWidth.Medium\"&gt;\n            &lt;HeroContent /&gt;\n        &lt;/FodContainer&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Contained sections --&gt;\n    &lt;FodContainer MaxWidth=\"MaxWidth.Large\" Class=\"py-5\"&gt;\n        &lt;FeaturesSection /&gt;\n    &lt;/FodContainer&gt;\n\n    &lt;!-- Full-width CTA --&gt;\n    &lt;div class=\"cta-section\"&gt;\n        &lt;FodContainer MaxWidth=\"MaxWidth.Medium\"&gt;\n            &lt;CallToAction /&gt;\n        &lt;/FodContainer&gt;\n    &lt;/div&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Semantic HTML - FodMainContent genereaz\u0103 un <code>&lt;div&gt;</code>, considera\u021bi <code>&lt;main&gt;</code> pentru semantic\u0103</li> <li>Container choice - Folosi\u021bi <code>IsContainered</code> pentru con\u021binut care necesit\u0103 l\u0103\u021bime maxim\u0103</li> <li>Spacing - Ad\u0103uga\u021bi padding prin clase pentru spacing consistent</li> <li>Responsive - Testa\u021bi pe diferite dimensiuni de ecran</li> <li>Performance - Evita\u021bi re-rand\u0103ri inutile ale \u00eentregului con\u021binut</li> </ol>"},{"location":"fod/componente/FodMainContent/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Component\u0103 lightweight, doar wrapper</li> <li>Nu adaug\u0103 logic\u0103 complex\u0103</li> <li>Randare eficient\u0103</li> <li>Folosi\u021bi <code>@key</code> pentru optimizare c\u00e2nd con\u021binutul se schimb\u0103 dinamic</li> </ul>"},{"location":"fod/componente/FodMainContent/#11-accesibilitate","title":"11. Accesibilitate","text":"<p>Pentru o mai bun\u0103 accesibilitate:</p> <pre><code>&lt;main class=\"fod-main-content @(IsContainered ? \"container-xxl centered-container\" : \"\")\"\n      @attributes=\"UserAttributes\"\n      style=\"@Style\"&gt;\n    @ChildContent\n&lt;/main&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#12-combinatii-cu-alte-componente","title":"12. Combina\u021bii cu alte componente","text":"<pre><code>&lt;!-- Cu Loading --&gt;\n&lt;FodMainContent IsContainered=\"true\"&gt;\n    &lt;FodLoading IsLoading=\"@isLoading\" Color=\"FodColor.Primary\"&gt;\n        @if (!isLoading)\n        {\n            &lt;ActualContent /&gt;\n        }\n    &lt;/FodLoading&gt;\n&lt;/FodMainContent&gt;\n\n&lt;!-- Cu Error Boundary --&gt;\n&lt;FodMainContent IsContainered=\"true\"&gt;\n    &lt;ErrorBoundary&gt;\n        &lt;ChildContent&gt;\n            &lt;RiskyComponent /&gt;\n        &lt;/ChildContent&gt;\n        &lt;ErrorContent&gt;\n            &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n                A ap\u0103rut o eroare. V\u0103 rug\u0103m re\u00eenc\u0103rca\u021bi pagina.\n            &lt;/FodAlert&gt;\n        &lt;/ErrorContent&gt;\n    &lt;/ErrorBoundary&gt;\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#13-migrare-si-compatibilitate","title":"13. Migrare \u0219i Compatibilitate","text":"<p>De la div simplu la FodMainContent:</p> <pre><code>@* \u00cenainte *@\n&lt;div class=\"container-xxl centered-container main-content\"&gt;\n    @Body\n&lt;/div&gt;\n\n@* Dup\u0103 *@\n&lt;FodMainContent IsContainered=\"true\" Class=\"main-content\"&gt;\n    @Body\n&lt;/FodMainContent&gt;\n</code></pre>"},{"location":"fod/componente/FodMainContent/#14-troubleshooting","title":"14. Troubleshooting","text":""},{"location":"fod/componente/FodMainContent/#container-nu-se-centreaza","title":"Container nu se centreaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>IsContainered=\"true\"</code></li> <li>Verifica\u021bi CSS pentru <code>.centered-container</code></li> <li>Asigura\u021bi-v\u0103 c\u0103 nu exist\u0103 CSS conflictual</li> </ul>"},{"location":"fod/componente/FodMainContent/#continut-taiat-pe-mobile","title":"Con\u021binut t\u0103iat pe mobile","text":"<ul> <li>Ad\u0103uga\u021bi padding responsive</li> <li>Verifica\u021bi overflow settings</li> <li>Testa\u021bi pe diferite dispozitive</li> </ul>"},{"location":"fod/componente/FodMainContent/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodMainContent</code> ofer\u0103 o modalitate simpl\u0103 \u0219i consistent\u0103 de a structura con\u021binutul principal al paginilor. Cu suport pentru containere responsive \u0219i integrare perfect\u0103 cu sistemul de layout FOD, componenta asigur\u0103 c\u0103 con\u021binutul este afi\u0219at optim pe toate dispozitivele.</p>"},{"location":"fod/componente/FodMask/","title":"FodMask","text":""},{"location":"fod/componente/FodMask/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodMask</code> ofer\u0103 func\u021bionalitate avansat\u0103 de mascare pentru c\u00e2mpuri de input, permi\u021b\u00e2nd formatarea automat\u0103 a textului introdus conform unor pattern-uri predefinite. Este ideal\u0103 pentru formate standardizate precum numere de telefon, CNP-uri, IBAN-uri, coduri po\u0219tale \u0219i alte formate structurate.</p> <p>Componenta suport\u0103 mai multe tipuri de m\u0103\u0219ti: - PatternMask - Pentru pattern-uri fixe - RegexMask - Pentru validare cu expresii regulate - MultiMask - Pentru pattern-uri multiple - BlockMask - Pentru blocuri de caractere</p>"},{"location":"fod/componente/FodMask/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodMask/#exemplu-de-baza-numar-de-telefon","title":"Exemplu de baz\u0103 - num\u0103r de telefon","text":"<pre><code>&lt;FodMask @bind-Value=\"phoneNumber\" \n         Mask=\"@(new PatternMask(\"(000) 000-0000\"))\"\n         Label=\"Num\u0103r telefon\"\n         Placeholder=\"(xxx) xxx-xxxx\" /&gt;\n\n@code {\n    private string phoneNumber;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#cnpidnp-cu-pattern-mask","title":"CNP/IDNP cu pattern mask","text":"<pre><code>&lt;FodMask @bind-Value=\"cnp\" \n         Mask=\"@(new PatternMask(\"0 000000 00000 0\"))\"\n         Label=\"CNP\"\n         Clearable=\"true\" /&gt;\n\n@code {\n    private string cnp;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#card-bancar-cu-block-mask","title":"Card bancar cu block mask","text":"<pre><code>&lt;FodMask @bind-Value=\"cardNumber\" \n         Mask=\"@(new BlockMask(\"0000 0000 0000 0000\"))\"\n         Label=\"Num\u0103r card\"\n         Placeholder=\"0000 0000 0000 0000\"\n         AdornmentIcon=\"@FodIcons.Material.Filled.CreditCard\"\n         Adornment=\"Adornment.Start\" /&gt;\n\n@code {\n    private string cardNumber;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#data-cu-pattern-personalizat","title":"Data cu pattern personalizat","text":"<pre><code>&lt;FodMask @bind-Value=\"date\" \n         Mask=\"@(new PatternMask(\"00/00/0000\"))\"\n         Label=\"Data (LL/ZZ/AAAA)\"\n         HelperText=\"Format: lun\u0103/zi/an\" /&gt;\n\n@code {\n    private string date;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#multi-mask-pentru-diferite-formate","title":"Multi-mask pentru diferite formate","text":"<pre><code>&lt;FodMask @bind-Value=\"identifier\" \n         Mask=\"@multiMask\"\n         Label=\"CNP sau Pa\u0219aport\"\n         Placeholder=\"CNP sau nr. pa\u0219aport\" /&gt;\n\n@code {\n    private string identifier;\n\n    private MultiMask multiMask = new MultiMask(\"00000000000000|AA 0000000\",\n        new PatternMask(\"00000000000000\"), // CNP\n        new PatternMask(\"AA 0000000\")       // Pa\u0219aport\n    );\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#cu-validare-regex","title":"Cu validare regex","text":"<pre><code>&lt;FodMask @bind-Value=\"ipAddress\" \n         Mask=\"@(new RegexMask(@\"^(\\d{1,3}\\.){3}\\d{1,3}$\", '0'))\"\n         Label=\"Adres\u0103 IP\"\n         Placeholder=\"192.168.1.1\"\n         OnClearButtonClick=\"@(() =&gt; ipAddress = string.Empty)\" /&gt;\n\n@code {\n    private string ipAddress;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Mask IMask PatternMask(\" - \") Obiectul de mascare Value string - Valoarea curat\u0103 (f\u0103r\u0103 formatare) Text string - Textul formatat cu masc\u0103 InputType InputType Text Tipul c\u00e2mpului input Clearable bool false Afi\u0219eaz\u0103 buton de \u0219tergere ClearIcon string Material.Filled.Clear Iconi\u021ba pentru butonul clear Placeholder string - Text placeholder Label string - Eticheta c\u00e2mpului HelperText string - Text ajut\u0103tor Variant FodVariant Text Varianta vizual\u0103 Margin Margin None Marginea componentei Adornment Adornment None Pozi\u021bia adornment-ului AdornmentIcon string - Iconi\u021ba pentru adornment AdornmentText string - Text pentru adornment AdornmentColor FodColor Default Culoarea adornment-ului IconSize FodSize Medium Dimensiunea iconi\u021bei DisableUnderLine bool false Dezactiveaz\u0103 linia de subliniere"},{"location":"fod/componente/FodMask/#evenimente","title":"Evenimente","text":"Eveniment Tip Descriere ValueChanged EventCallback Declan\u0219at c\u00e2nd valoarea se schimb\u0103 OnClearButtonClick EventCallback Click pe butonul clear OnBlur EventCallback Pierderea focusului OnKeyDown EventCallback Tast\u0103 ap\u0103sat\u0103"},{"location":"fod/componente/FodMask/#metode-publice","title":"Metode publice","text":"Metod\u0103 Descriere Clear() \u0218terge textul \u0219i valoarea FocusAsync() Seteaz\u0103 focus pe input SelectAsync() Selecteaz\u0103 tot textul SelectRangeAsync(int pos1, int pos2) Selecteaz\u0103 un interval de text"},{"location":"fod/componente/FodMask/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodInputAdornment - Pentru iconi\u021be \u0219i text adi\u021bional</li> <li>FodIconButton - Pentru butonul de \u0219tergere</li> <li>IMask - Interfa\u021ba pentru obiectele de mascare</li> </ul>"},{"location":"fod/componente/FodMask/#tipuri-de-masti","title":"Tipuri de m\u0103\u0219ti","text":""},{"location":"fod/componente/FodMask/#patternmask","title":"PatternMask","text":"<pre><code>// 0 - cifr\u0103 obligatorie\n// 9 - cifr\u0103 op\u021bional\u0103\n// * - orice caracter\nnew PatternMask(\"(000) 000-0000\")     // Telefon US\nnew PatternMask(\"00-00-0000\")          // Dat\u0103\nnew PatternMask(\"AA 0000000\")          // Pa\u0219aport\n</code></pre>"},{"location":"fod/componente/FodMask/#blockmask","title":"BlockMask","text":"<pre><code>// Pentru grupuri de caractere\nnew BlockMask(\"0000 0000 0000 0000\")   // Card\nnew BlockMask(\"AA00 AA00\")             // Cod produs\n</code></pre>"},{"location":"fod/componente/FodMask/#regexmask","title":"RegexMask","text":"<pre><code>// Validare cu regex\nnew RegexMask(@\"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$\", '0')  // IP\nnew RegexMask(@\"^[A-Z]{2}\\d{6}$\", '*')                         // ID\n</code></pre>"},{"location":"fod/componente/FodMask/#multimask","title":"MultiMask","text":"<pre><code>// M\u0103\u0219ti multiple bazate pe input\nnew MultiMask(\"00000000000000|AA 0000000\",\n    new PatternMask(\"00000000000000\"),\n    new PatternMask(\"AA 0000000\")\n)\n</code></pre>"},{"location":"fod/componente/FodMask/#stilizare","title":"Stilizare","text":"<p>Componenta mo\u0219tene\u0219te stilurile de la FodInput cu clase adi\u021bionale pentru mascare.</p>"},{"location":"fod/componente/FodMask/#personalizare","title":"Personalizare","text":"<pre><code>/* Container principal */\n.fod-mask .fod-input {\n    font-family: monospace;\n}\n\n/* Input field */\n.fod-mask .fod-input-slot {\n    letter-spacing: 0.1em;\n}\n\n/* Clear button */\n.fod-mask .fod-icon-button-edge-end {\n    opacity: 0.7;\n}\n\n.fod-mask .fod-icon-button-edge-end:hover {\n    opacity: 1;\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Valoare vs Text - <code>Value</code> con\u021bine textul curat, <code>Text</code> con\u021bine textul formatat</li> <li>Caret management - Pozi\u021bia cursorului este gestionat\u0103 automat</li> <li>Copy/Paste - Suport\u0103 opera\u021bii clipboard cu formatare corect\u0103</li> <li>Keyboard navigation - Gestioneaz\u0103 taste speciale (Backspace, Delete, etc.)</li> <li>JS Interop - Folose\u0219te JS pentru gestionarea avansat\u0103 a cursorului</li> </ol>"},{"location":"fod/componente/FodMask/#bune-practici","title":"Bune practici","text":"<ol> <li>Pattern clar - Folosi\u021bi placeholder pentru a indica formatul a\u0219teptat</li> <li>Helper text - Ad\u0103uga\u021bi explica\u021bii pentru formate complexe</li> <li>Validare - Combina\u021bi cu validatori pentru verificare complet\u0103</li> <li>M\u0103\u0219ti simple - Prefera\u021bi PatternMask pentru majoritatea cazurilor</li> <li>Performance - Evita\u021bi regex-uri complexe \u00een RegexMask</li> </ol>"},{"location":"fod/componente/FodMask/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/FodMask/#formular-complet-cu-masti","title":"Formular complet cu m\u0103\u0219ti","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodMask @bind-Value=\"model.Phone\" \n             Mask=\"@(new PatternMask(\"+00 (000) 000-000\"))\"\n             Label=\"Telefon\"\n             Required=\"true\" /&gt;\n\n    &lt;FodMask @bind-Value=\"model.CNP\" \n             Mask=\"@(new PatternMask(\"0000000000000\"))\"\n             Label=\"CNP\"\n             Required=\"true\" /&gt;\n\n    &lt;FodMask @bind-Value=\"model.IBAN\" \n             Mask=\"@(new PatternMask(\"AA00 AAAA 0000 0000 0000 0000\"))\"\n             Label=\"IBAN\"\n             HelperText=\"Format: MD00 XXXX 0000 0000 0000 0000\" /&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodMask/#masca-dinamica","title":"Masc\u0103 dinamic\u0103","text":"<pre><code>&lt;FodSelect @bind-Value=\"maskType\" Label=\"Tip document\"&gt;\n    &lt;FodSelectItem Value=\"cnp\"&gt;CNP&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"passport\"&gt;Pa\u0219aport&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n&lt;FodMask @bind-Value=\"documentNumber\" \n         Mask=\"@GetMask()\"\n         Label=\"Num\u0103r document\"\n         Placeholder=\"@GetPlaceholder()\" /&gt;\n\n@code {\n    private string maskType = \"cnp\";\n    private string documentNumber;\n\n    private IMask GetMask() =&gt; maskType switch\n    {\n        \"cnp\" =&gt; new PatternMask(\"0000000000000\"),\n        \"passport\" =&gt; new PatternMask(\"AA 0000000\"),\n        _ =&gt; new PatternMask(\"*********\")\n    };\n\n    private string GetPlaceholder() =&gt; maskType switch\n    {\n        \"cnp\" =&gt; \"1234567890123\",\n        \"passport\" =&gt; \"AB 1234567\",\n        _ =&gt; \"\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodMask/#concluzie","title":"Concluzie","text":"<p>FodMask ofer\u0103 o solu\u021bie complet\u0103 pentru formatarea automat\u0103 a input-urilor conform pattern-urilor predefinite. Cu suport pentru multiple tipuri de m\u0103\u0219ti, gestionare inteligent\u0103 a cursorului \u0219i integrare perfect\u0103 cu formularele Blazor, componenta \u00eembun\u0103t\u0103\u021be\u0219te semnificativ experien\u021ba utilizatorului pentru introducerea datelor structurate.</p>"},{"location":"fod/componente/FodMenu/","title":"FodMenu","text":""},{"location":"fod/componente/FodMenu/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodMenu</code> ofer\u0103 un meniu de navigare lateral (sidebar) care poate fi extins sau restr\u00e2ns. Este ideal\u0103 pentru crearea de meniuri principale \u00een aplica\u021bii, oferind o experien\u021b\u0103 de navigare intuitiv\u0103 cu anima\u021bii fluide pentru tranzi\u021bia \u00eentre st\u0103rile deschis/\u00eenchis.</p> <p>Componenta func\u021bioneaz\u0103 \u00eempreun\u0103 cu <code>FodMenuItem</code> pentru a crea o structur\u0103 ierarhic\u0103 de navigare, unde meniul principal controleaz\u0103 vizibilitatea textului elementelor de meniu.</p>"},{"location":"fod/componente/FodMenu/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodMenu/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodMenu @bind-IsOpen=\"isMenuOpen\"&gt;\n    &lt;FodMenuItem Icon=\"oi-home\" Href=\"/\"&gt;\n        Acas\u0103\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-document\" Href=\"/documents\"&gt;\n        Documente\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-cog\" Href=\"/settings\"&gt;\n        Set\u0103ri\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private bool isMenuOpen = true;\n}\n</code></pre>"},{"location":"fod/componente/FodMenu/#meniu-cu-culoare-personalizata","title":"Meniu cu culoare personalizat\u0103","text":"<pre><code>&lt;FodMenu Color=\"FodColor.Primary\" IsOpen=\"true\"&gt;\n    &lt;FodMenuItem Icon=\"oi-dashboard\" Href=\"/dashboard\"&gt;\n        Dashboard\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-people\" Href=\"/users\"&gt;\n        Utilizatori\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-bar-chart\" Href=\"/reports\"&gt;\n        Rapoarte\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodMenu/#meniu-cu-actiuni-pe-click","title":"Meniu cu ac\u021biuni pe click","text":"<pre><code>&lt;FodMenu IsOpen=\"false\"&gt;\n    &lt;FodMenuItem Icon=\"oi-file\" OnClick=\"@(() =&gt; NavigateToPage(\"files\"))\"&gt;\n        Fi\u0219iere\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-envelope-closed\" OnClick=\"@ShowMessages\"&gt;\n        Mesaje\n    &lt;/FodMenuItem&gt;\n    &lt;FodMenuItem Icon=\"oi-account-logout\" OnClick=\"@Logout\"&gt;\n        Ie\u0219ire\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private void NavigateToPage(string page)\n    {\n        // Logic\u0103 de navigare\n    }\n\n    private void ShowMessages()\n    {\n        // Afi\u0219are mesaje\n    }\n\n    private void Logout()\n    {\n        // Logic\u0103 de deconectare\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodMenu/#atribute-disponibile","title":"Atribute disponibile","text":""},{"location":"fod/componente/FodMenu/#fodmenu_1","title":"FodMenu","text":"Atribut Tip Valoare implicit\u0103 Descriere ChildContent RenderFragment - Con\u021binutul meniului (elementele FodMenuItem) Color FodColor Default Culoarea meniului IsOpen bool false Starea meniului (deschis/\u00eenchis) Class string - Clase CSS adi\u021bionale Style string - Stiluri inline"},{"location":"fod/componente/FodMenu/#fodmenuitem","title":"FodMenuItem","text":"Atribut Tip Valoare implicit\u0103 Descriere ChildContent RenderFragment - Textul elementului de meniu Icon string - Clasa pentru iconi\u021b\u0103 (ex: \"oi-home\") IconColor FodColor Default Culoarea iconi\u021bei Href string - URL-ul pentru navigare ForceLoad bool false For\u021beaz\u0103 re\u00eenc\u0103rcarea complet\u0103 a paginii Disabled bool false Dezactiveaz\u0103 elementul de meniu DisableRipple bool false Dezactiveaz\u0103 efectul ripple Command ICommand - Comand\u0103 pentru pattern MVVM CommandParameter object - Parametru pentru comand\u0103 TextStyle string - Stiluri inline pentru text"},{"location":"fod/componente/FodMenu/#evenimente","title":"Evenimente","text":""},{"location":"fod/componente/FodMenu/#fodmenuitem_1","title":"FodMenuItem","text":"Eveniment Tip Descriere OnClick EventCallback Eveniment declan\u0219at la click pe element"},{"location":"fod/componente/FodMenu/#metode-publice","title":"Metode publice","text":"<p>Componentele nu expun metode publice.</p>"},{"location":"fod/componente/FodMenu/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodMenuItem - Element individual de meniu, trebuie folosit \u00eentotdeauna \u00een interiorul unui FodMenu</li> <li>FodIcon - Folosit intern pentru afi\u0219area iconi\u021belor</li> <li>NavLink - Component Blazor folosit pentru navigare</li> </ul>"},{"location":"fod/componente/FodMenu/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodMenu/#clase-css-generate","title":"Clase CSS generate","text":"<p>FodMenu: - <code>.fod-navmenu</code> - Clasa de baz\u0103 - <code>.fod-navmenu-{color}</code> - Clase pentru culori (primary, secondary, etc.)</p> <p>FodMenuItem: - <code>.fod-nav-link-icon</code> - Clasa pentru iconi\u021b\u0103 - <code>.fod-nav-link-icon-default</code> - Aplicat\u0103 c\u00e2nd culoarea este Default</p>"},{"location":"fod/componente/FodMenu/#personalizare","title":"Personalizare","text":"<pre><code>/* Schimbarea culorii de fundal a meniului */\n.sidebar {\n    background-color: #2c3e50;\n}\n\n/* Modificarea stilului hover pentru elemente */\n.nav-link:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n}\n\n/* Ajustarea anima\u021biei pentru butonul de toggle */\n.colapse-button {\n    transition: all 0.3s ease;\n}\n</code></pre>"},{"location":"fod/componente/FodMenu/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Anima\u021bii fluide - Meniul include anima\u021bii pentru tranzi\u021bia \u00eentre st\u0103rile deschis/\u00eenchis</li> <li>Responsive - Textul elementelor de meniu se ascunde/afi\u0219eaz\u0103 automat \u00een func\u021bie de starea meniului</li> <li>Hamburgher menu - Butonul de toggle se transform\u0103 \u00eentr-un X c\u00e2nd meniul este deschis</li> <li>Cascading value - FodMenu transmite referin\u021ba sa c\u0103tre FodMenuItem prin CascadingValue</li> </ol>"},{"location":"fod/componente/FodMenu/#bune-practici","title":"Bune practici","text":"<ol> <li>Iconi\u021be consistente - Folosi\u021bi iconi\u021be din aceea\u0219i familie pentru o experien\u021b\u0103 vizual\u0103 uniform\u0103</li> <li>Organizare logic\u0103 - Grupa\u021bi elementele de meniu \u00een mod logic</li> <li>Feedback vizual - Asigura\u021bi-v\u0103 c\u0103 elementul activ este eviden\u021biat vizual</li> <li>Accesibilitate - Ad\u0103uga\u021bi atribute ARIA pentru cititorii de ecran c\u00e2nd este necesar</li> <li>Performan\u021b\u0103 - Pentru meniuri mari, considera\u021bi lazy loading pentru sec\u021biuni</li> </ol>"},{"location":"fod/componente/FodMenu/#concluzie","title":"Concluzie","text":"<p>Componentele FodMenu \u0219i FodMenuItem ofer\u0103 o solu\u021bie complet\u0103 pentru navigarea lateral\u0103 \u00een aplica\u021bii. Cu suport pentru anima\u021bii, culori personalizabile \u0219i integrare perfect\u0103 cu sistemul de routing Blazor, acestea permit crearea de interfe\u021be de navigare moderne \u0219i intuitive.</p>"},{"location":"fod/componente/FodMenuItem/","title":"FodMenuItem","text":""},{"location":"fod/componente/FodMenuItem/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodMenuItem</code> este o component\u0103 pentru crearea elementelor individuale de meniu \u00een cadrul componentei <code>FodMenu</code>. Ofer\u0103 suport pentru navigare, pictograme, stilizare personalizat\u0103 \u0219i integrare cu sistemul de routing Blazor prin componenta NavLink.</p>"},{"location":"fod/componente/FodMenuItem/#relatia-cu-fodmenu","title":"Rela\u021bia cu FodMenu","text":"<p><code>FodMenuItem</code> func\u021bioneaz\u0103 \u00eentotdeauna \u00een cadrul unei componente <code>FodMenu</code> p\u0103rinte, care ofer\u0103 contextul \u0219i controlul pentru afi\u0219area/ascunderea textului \u00een func\u021bie de starea meniului (extins/colapsabil).</p>"},{"location":"fod/componente/FodMenuItem/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Href=\"/\" Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/servicii\" Icon=\"@FodIcons.Material.Filled.Work\"&gt;\n        Servicii\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/contact\" Icon=\"@FodIcons.Material.Filled.ContactMail\"&gt;\n        Contact\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>Href</code> <code>string</code> <code>null</code> URL-ul pentru navigare <code>Icon</code> <code>string</code> <code>null</code> Pictograma afi\u0219at\u0103 \u00een meniu <code>IconColor</code> <code>FodColor</code> <code>Default</code> Culoarea pictogramei <code>TextStyle</code> <code>string</code> <code>null</code> Stiluri CSS pentru text <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 elementul de meniu <code>DisableRipple</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 efectul ripple <code>ForceLoad</code> <code>bool</code> <code>false</code> For\u021beaz\u0103 re\u00eenc\u0103rcarea complet\u0103 la navigare <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> - Eveniment la click <code>Command</code> <code>ICommand</code> <code>null</code> Comand\u0103 ICommand pentru MVVM <code>CommandParameter</code> <code>object</code> <code>null</code> Parametru pentru comand\u0103 <code>ChildContent</code> <code>RenderFragment</code> - Textul elementului de meniu <code>Class</code> <code>string</code> <code>null</code> Clase CSS adi\u021bionale <code>Style</code> <code>string</code> <code>null</code> Stiluri inline"},{"location":"fod/componente/FodMenuItem/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodMenuItem/#meniu-simplu-cu-pictograme","title":"Meniu Simplu cu Pictograme","text":"<pre><code>&lt;FodMenu @bind-IsOpen=\"menuOpen\"&gt;\n    &lt;FodMenuItem Href=\"/dashboard\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        Dashboard\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/utilizatori\" Icon=\"@FodIcons.Material.Filled.People\"&gt;\n        Utilizatori\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/rapoarte\" Icon=\"@FodIcons.Material.Filled.Assessment\"&gt;\n        Rapoarte\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/setari\" Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n        Set\u0103ri\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private bool menuOpen = true;\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-culori-diferite-pentru-pictograme","title":"Meniu cu Culori Diferite pentru Pictograme","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Href=\"/activ\" \n                 Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n                 IconColor=\"FodColor.Success\"&gt;\n        Activ\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/atentie\" \n                 Icon=\"@FodIcons.Material.Filled.Warning\" \n                 IconColor=\"FodColor.Warning\"&gt;\n        Aten\u021bion\u0103ri\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/erori\" \n                 Icon=\"@FodIcons.Material.Filled.Error\" \n                 IconColor=\"FodColor.Error\"&gt;\n        Erori\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-elemente-dezactivate","title":"Meniu cu Elemente Dezactivate","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Href=\"/profil\" Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n        Profil\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/admin\" \n                 Icon=\"@FodIcons.Material.Filled.AdminPanelSettings\"\n                 Disabled=\"@(!isAdmin)\"&gt;\n        Administrare\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/developare\" \n                 Icon=\"@FodIcons.Material.Filled.Code\"\n                 Disabled=\"@(!isDeveloper)\"&gt;\n        Dezvoltare\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private bool isAdmin = false;\n    private bool isDeveloper = false;\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-evenimente-click","title":"Meniu cu Evenimente Click","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Refresh\" \n                 OnClick=\"RefreshData\"&gt;\n        Re\u00eemprosp\u0103tare\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Save\" \n                 OnClick=\"SaveData\"&gt;\n        Salvare\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Logout\" \n                 OnClick=\"Logout\"&gt;\n        Deconectare\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private async Task RefreshData(MouseEventArgs e)\n    {\n        await DataService.RefreshAsync();\n    }\n\n    private async Task SaveData(MouseEventArgs e)\n    {\n        await DataService.SaveAsync();\n    }\n\n    private async Task Logout(MouseEventArgs e)\n    {\n        await AuthService.LogoutAsync();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-stiluri-personalizate","title":"Meniu cu Stiluri Personalizate","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Href=\"/important\" \n                 Icon=\"@FodIcons.Material.Filled.Star\"\n                 TextStyle=\"font-weight: bold; color: #ff6b6b;\"&gt;\n        Important\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Href=\"/nou\" \n                 Icon=\"@FodIcons.Material.Filled.NewReleases\"\n                 TextStyle=\"font-style: italic;\"&gt;\n        Nout\u0103\u021bi\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-navigare-conditionata","title":"Meniu cu Navigare Condi\u021bionat\u0103","text":"<pre><code>&lt;FodMenu&gt;\n    @if (isAuthenticated)\n    {\n        &lt;FodMenuItem Href=\"/profil\" Icon=\"@FodIcons.Material.Filled.AccountCircle\"&gt;\n            Profilul meu\n        &lt;/FodMenuItem&gt;\n\n        &lt;FodMenuItem Href=\"/mesaje\" Icon=\"@FodIcons.Material.Filled.Message\"&gt;\n            Mesaje (@unreadCount)\n        &lt;/FodMenuItem&gt;\n    }\n    else\n    {\n        &lt;FodMenuItem Href=\"/login\" Icon=\"@FodIcons.Material.Filled.Login\"&gt;\n            Autentificare\n        &lt;/FodMenuItem&gt;\n\n        &lt;FodMenuItem Href=\"/inregistrare\" Icon=\"@FodIcons.Material.Filled.PersonAdd\"&gt;\n            \u00cenregistrare\n        &lt;/FodMenuItem&gt;\n    }\n&lt;/FodMenu&gt;\n\n@code {\n    private bool isAuthenticated = false;\n    private int unreadCount = 5;\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-cu-icommand-pattern","title":"Meniu cu ICommand Pattern","text":"<pre><code>&lt;FodMenu&gt;\n    &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Add\" \n                 Command=\"@CreateCommand\"\n                 CommandParameter=\"@(\"document\")\"&gt;\n        Creeaz\u0103 Document\n    &lt;/FodMenuItem&gt;\n\n    &lt;FodMenuItem Icon=\"@FodIcons.Material.Filled.Edit\" \n                 Command=\"@EditCommand\"\n                 CommandParameter=\"@selectedItem\"&gt;\n        Editeaz\u0103\n    &lt;/FodMenuItem&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private ICommand CreateCommand { get; set; }\n    private ICommand EditCommand { get; set; }\n    private object selectedItem;\n\n    protected override void OnInitialized()\n    {\n        CreateCommand = new RelayCommand&lt;string&gt;(Create);\n        EditCommand = new RelayCommand&lt;object&gt;(Edit, CanEdit);\n    }\n\n    private void Create(string type)\n    {\n        // Logic\u0103 de creare\n    }\n\n    private void Edit(object item)\n    {\n        // Logic\u0103 de editare\n    }\n\n    private bool CanEdit(object item)\n    {\n        return item != null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#meniu-complet-pentru-aplicatie","title":"Meniu Complet pentru Aplica\u021bie","text":"<pre><code>&lt;FodMenu @bind-IsOpen=\"sidebarOpen\" Color=\"FodColor.Primary\"&gt;\n    &lt;!-- Dashboard --&gt;\n    &lt;FodMenuItem Href=\"/\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        Dashboard\n    &lt;/FodMenuItem&gt;\n\n    &lt;!-- Sec\u021biune Servicii --&gt;\n    &lt;div class=\"menu-section\"&gt;\n        &lt;div class=\"menu-section-title\"&gt;Servicii&lt;/div&gt;\n\n        &lt;FodMenuItem Href=\"/servicii/cereri\" Icon=\"@FodIcons.Material.Filled.Assignment\"&gt;\n            Cereri\n        &lt;/FodMenuItem&gt;\n\n        &lt;FodMenuItem Href=\"/servicii/documente\" Icon=\"@FodIcons.Material.Filled.Description\"&gt;\n            Documente\n        &lt;/FodMenuItem&gt;\n\n        &lt;FodMenuItem Href=\"/servicii/plati\" Icon=\"@FodIcons.Material.Filled.Payment\"&gt;\n            Pl\u0103\u021bi\n        &lt;/FodMenuItem&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Sec\u021biune Administrare --&gt;\n    @if (hasAdminRole)\n    {\n        &lt;div class=\"menu-section\"&gt;\n            &lt;div class=\"menu-section-title\"&gt;Administrare&lt;/div&gt;\n\n            &lt;FodMenuItem Href=\"/admin/utilizatori\" Icon=\"@FodIcons.Material.Filled.SupervisedUserCircle\"&gt;\n                Utilizatori\n            &lt;/FodMenuItem&gt;\n\n            &lt;FodMenuItem Href=\"/admin/configurare\" Icon=\"@FodIcons.Material.Filled.Tune\"&gt;\n                Configurare\n            &lt;/FodMenuItem&gt;\n\n            &lt;FodMenuItem Href=\"/admin/audit\" Icon=\"@FodIcons.Material.Filled.History\"&gt;\n                Audit\n            &lt;/FodMenuItem&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;!-- Profil \u0219i Set\u0103ri --&gt;\n    &lt;div class=\"menu-section mt-auto\"&gt;\n        &lt;FodMenuItem Href=\"/profil\" Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n            @userName\n        &lt;/FodMenuItem&gt;\n\n        &lt;FodMenuItem OnClick=\"Logout\" Icon=\"@FodIcons.Material.Filled.ExitToApp\"&gt;\n            Deconectare\n        &lt;/FodMenuItem&gt;\n    &lt;/div&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private bool sidebarOpen = true;\n    private bool hasAdminRole = true;\n    private string userName = \"Ion Popescu\";\n\n    private async Task Logout(MouseEventArgs e)\n    {\n        await AuthService.LogoutAsync();\n        NavigationManager.NavigateTo(\"/login\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodMenuItem/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>/* Clase pentru NavLink (din componenta intern\u0103) */\n.nav-link\n.d-flex\n.align-items-center\n\n/* Clase pentru pictogram\u0103 */\n.fod-nav-link-icon\n.fod-nav-link-icon-default\n\n/* Clase pentru text */\n.show /* C\u00e2nd meniul este deschis */\n.hide /* C\u00e2nd meniul este colapsibil */\n.mx-2 /* Margin orizontal */\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#personalizare-css","title":"Personalizare CSS","text":"<pre><code>/* Stilizare element meniu activ */\n.nav-link.active {\n    background-color: rgba(255, 255, 255, 0.1);\n    border-left: 3px solid var(--fod-palette-primary-main);\n}\n\n/* Hover effect */\n.nav-link:hover {\n    background-color: rgba(255, 255, 255, 0.05);\n    text-decoration: none;\n}\n\n/* Pictograme mari */\n.custom-menu .fod-nav-link-icon {\n    font-size: 1.5rem;\n}\n\n/* Spa\u021biere personalizat\u0103 */\n.menu-section {\n    margin-bottom: 1rem;\n}\n\n.menu-section-title {\n    font-size: 0.75rem;\n    text-transform: uppercase;\n    opacity: 0.7;\n    padding: 0.5rem 1rem;\n}\n</code></pre>"},{"location":"fod/componente/FodMenuItem/#comportament-cu-fodmenu","title":"Comportament cu FodMenu","text":""},{"location":"fod/componente/FodMenuItem/#stare-extinsacolapsibila","title":"Stare Extins\u0103/Colapsibil\u0103","text":"<p>C\u00e2nd <code>FodMenu</code> \u00ee\u0219i schimb\u0103 starea <code>IsOpen</code>: - <code>IsOpen = true</code>: Textul este vizibil (class=\"show\") - <code>IsOpen = false</code>: Textul este ascuns (class=\"hide\"), doar pictogramele r\u0103m\u00e2n vizibile</p>"},{"location":"fod/componente/FodMenuItem/#integrare-navlink","title":"Integrare NavLink","text":"<p>FodMenuItem folose\u0219te intern componenta Blazor <code>NavLink</code> care: - Adaug\u0103 automat clasa \"active\" pentru ruta curent\u0103 - Gestioneaz\u0103 navigarea SPA (Single Page Application) - Suport\u0103 <code>Match=\"NavLinkMatch.All\"</code> pentru potrivire exact\u0103</p>"},{"location":"fod/componente/FodMenuItem/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi pictograme descriptive - Ajut\u0103 la navigare c\u00e2nd meniul e colapsibil</li> <li>Grupa\u021bi elementele logic - Folosi\u021bi sec\u021biuni pentru organizare</li> <li>Indica\u021bi elementele dezactivate - Folosi\u021bi <code>Disabled</code> pentru func\u021bii indisponibile</li> <li>P\u0103stra\u021bi textul concis - Numele elementelor trebuie s\u0103 fie scurte \u0219i clare</li> <li>Folosi\u021bi culori cu sens - Success pentru activ, Warning pentru aten\u021bion\u0103ri, etc.</li> <li>Testa\u021bi navigarea - Asigura\u021bi-v\u0103 c\u0103 toate link-urile func\u021bioneaz\u0103</li> </ol>"},{"location":"fod/componente/FodMenuItem/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Suport pentru navigare cu tastatura prin NavLink</li> <li>Pictogramele au rol decorativ (aria-hidden implicit)</li> <li>Textul ofer\u0103 contextul principal pentru screen readers</li> <li>Elementele dezactivate sunt excluse din tab order</li> </ul>"},{"location":"fod/componente/FodMenuItem/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodMenuItem/#textul-nu-se-afiseazaascunde","title":"Textul nu se afi\u0219eaz\u0103/ascunde","text":"<ul> <li>Verifica\u021bi c\u0103 FodMenuItem este \u00eentr-un FodMenu p\u0103rinte</li> <li>Verifica\u021bi valoarea <code>IsOpen</code> a meniului p\u0103rinte</li> </ul>"},{"location":"fod/componente/FodMenuItem/#navigarea-nu-functioneaza","title":"Navigarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Href</code> este valid</li> <li>Pentru navigare extern\u0103, folosi\u021bi <code>ForceLoad=\"true\"</code></li> </ul>"},{"location":"fod/componente/FodMenuItem/#pictograma-nu-apare","title":"Pictograma nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 valoarea <code>Icon</code> este corect\u0103</li> <li>Verifica\u021bi c\u0103 FodIcons este disponibil</li> </ul>"},{"location":"fod/componente/FodMenuItem/#concluzie","title":"Concluzie","text":"<p>FodMenuItem ofer\u0103 o modalitate flexibil\u0103 \u0219i consistent\u0103 de a crea elemente de meniu \u00een aplica\u021biile Blazor. \u00cen combina\u021bie cu FodMenu, permite crearea de meniuri responsive cu suport pentru colapsare, pictograme \u0219i navigare integrat\u0103.</p>"},{"location":"fod/componente/FodModal/","title":"Modal","text":""},{"location":"fod/componente/FodModal/#documentatie-pentru-componenta-fodmodal","title":"Documenta\u021bie pentru componenta FodModal","text":""},{"location":"fod/componente/FodModal/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodModal</code> este o component\u0103 dialog modal\u0103 care afi\u0219eaz\u0103 con\u021binut deasupra paginii principale. Este util\u0103 pentru confirm\u0103ri, formulare, detalii suplimentare sau orice con\u021binut care necesit\u0103 aten\u021bia imediat\u0103 a utilizatorului.</p> <p>Componenta suport\u0103: - Header, body \u0219i footer personalizabile - Diferite dimensiuni (small, medium, large, extra-large) - Mod fullscreen - Backdrop personalizabil - Anima\u021bii de deschidere/\u00eenchidere - Scroll pentru con\u021binut lung - Centrare vertical\u0103 op\u021bional\u0103</p>"},{"location":"fod/componente/FodModal/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodModal/#modal-de-baza","title":"Modal de baz\u0103","text":"<pre><code>@if (showModal)\n{\n    &lt;FodModal Show=\"true\" OnClosed=\"@(() =&gt; showModal = false)\"&gt;\n        &lt;HeaderTemplate&gt;\n            &lt;FodText Typo=\"Typo.h5\"&gt;Titlu Modal&lt;/FodText&gt;\n        &lt;/HeaderTemplate&gt;\n        &lt;BodyTemplate&gt;\n            &lt;FodText&gt;Acesta este con\u021binutul modalului.&lt;/FodText&gt;\n        &lt;/BodyTemplate&gt;\n        &lt;FooterTemplate&gt;\n            &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"@(() =&gt; showModal = false)\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n            &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;Confirm\u0103&lt;/FodButton&gt;\n        &lt;/FooterTemplate&gt;\n    &lt;/FodModal&gt;\n}\n\n&lt;FodButton OnClick=\"@(() =&gt; showModal = true)\"&gt;Deschide Modal&lt;/FodButton&gt;\n\n@code {\n    private bool showModal = false;\n}\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-cu-diferite-dimensiuni","title":"Modal cu diferite dimensiuni","text":"<pre><code>&lt;!-- Small --&gt;\n&lt;FodModal Show=\"showSmallModal\" Size=\"FodModalSize.Small\" OnClosed=\"CloseModals\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Modal mic pentru con\u021binut scurt&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n&lt;!-- Medium (implicit) --&gt;\n&lt;FodModal Show=\"showMediumModal\" Size=\"FodModalSize.Medium\" OnClosed=\"CloseModals\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Modal de dimensiune medie&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n&lt;!-- Large --&gt;\n&lt;FodModal Show=\"showLargeModal\" Size=\"FodModalSize.Large\" OnClosed=\"CloseModals\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Modal mare pentru con\u021binut extins&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n&lt;!-- Extra Large --&gt;\n&lt;FodModal Show=\"showXLModal\" Size=\"FodModalSize.ExtraLarge\" OnClosed=\"CloseModals\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Modal extra mare&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-fullscreen","title":"Modal fullscreen","text":"<pre><code>&lt;!-- Fullscreen \u00eentotdeauna --&gt;\n&lt;FodModal Show=\"showFullscreen\" Fullscreen=\"ModalFullscreen.Always\" OnClosed=\"CloseModal\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Modal Fullscreen&lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Acest modal ocup\u0103 tot ecranul&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n&lt;!-- Fullscreen sub anumite dimensiuni --&gt;\n&lt;FodModal Show=\"showResponsive\" Fullscreen=\"ModalFullscreen.SmallDown\" OnClosed=\"CloseModal\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;Fullscreen pe dispozitive mici, normal pe desktop&lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-cu-formular","title":"Modal cu formular","text":"<pre><code>&lt;FodModal Show=\"showFormModal\" OnClosed=\"@(() =&gt; showFormModal = false)\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Adaug\u0103 utilizator nou&lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        &lt;EditForm Model=\"userModel\" OnValidSubmit=\"SaveUser\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FODInputText Label=\"Nume\" @bind-Value=\"userModel.Name\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FODInputText Label=\"Email\" @bind-Value=\"userModel.Email\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"mb-3\"&gt;\n                &lt;FODInputSelect Label=\"Rol\" @bind-Value=\"userModel.Role\"&gt;\n                    &lt;option value=\"\"&gt;Selecta\u021bi...&lt;/option&gt;\n                    &lt;option value=\"admin\"&gt;Administrator&lt;/option&gt;\n                    &lt;option value=\"user\"&gt;Utilizator&lt;/option&gt;\n                &lt;/FODInputSelect&gt;\n            &lt;/div&gt;\n        &lt;/EditForm&gt;\n    &lt;/BodyTemplate&gt;\n    &lt;FooterTemplate&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"@(() =&gt; showFormModal = false)\"&gt;\n            Anuleaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" Type=\"submit\" Form=\"userForm\"&gt;\n            Salveaz\u0103\n        &lt;/FodButton&gt;\n    &lt;/FooterTemplate&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private bool showFormModal = false;\n    private UserModel userModel = new();\n\n    private async Task SaveUser()\n    {\n        // Salvare utilizator\n        showFormModal = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-cu-continut-scrollabil","title":"Modal cu con\u021binut scrollabil","text":"<pre><code>&lt;FodModal Show=\"showScrollable\" Scrollable=\"true\" OnClosed=\"CloseModal\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Termeni \u0219i Condi\u021bii&lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodText&gt;\n            &lt;!-- Con\u021binut lung care va avea scroll --&gt;\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit...\n            [mult text aici]\n        &lt;/FodText&gt;\n    &lt;/BodyTemplate&gt;\n    &lt;FooterTemplate&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"DeclineTerms\"&gt;Refuz&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" OnClick=\"AcceptTerms\"&gt;\n            Accept\n        &lt;/FodButton&gt;\n    &lt;/FooterTemplate&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-centrat-vertical","title":"Modal centrat vertical","text":"<pre><code>&lt;FodModal Show=\"showCentered\" Centered=\"true\" OnClosed=\"CloseModal\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;div class=\"text-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n                     Color=\"FodColor.Success\" \n                     Size=\"FodSize.XXLarge\" /&gt;\n            &lt;FodText Typo=\"Typo.h5\" Class=\"mt-3\"&gt;Opera\u021biune reu\u0219it\u0103!&lt;/FodText&gt;\n            &lt;FodText&gt;Datele au fost salvate cu succes.&lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/BodyTemplate&gt;\n    &lt;FooterTemplate&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\" OnClick=\"CloseModal\"&gt;\n            OK\n        &lt;/FodButton&gt;\n    &lt;/FooterTemplate&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-de-confirmare","title":"Modal de confirmare","text":"<pre><code>&lt;FodModal Show=\"showConfirmation\" Size=\"FodModalSize.Small\" OnClosed=\"CancelDelete\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Confirmare \u0219tergere&lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Warning\" Dense=\"true\"&gt;\n            Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 \u0219terge\u021bi acest element? Aceast\u0103 ac\u021biune nu poate fi anulat\u0103.\n        &lt;/FodAlert&gt;\n    &lt;/BodyTemplate&gt;\n    &lt;FooterTemplate&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"CancelDelete\"&gt;\n            Anuleaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Error\" OnClick=\"ConfirmDelete\"&gt;\n            \u0218terge\n        &lt;/FodButton&gt;\n    &lt;/FooterTemplate&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#modal-cu-continut-dinamic","title":"Modal cu con\u021binut dinamic","text":"<pre><code>&lt;FodModal Show=\"showDynamic\" OnClosed=\"CloseModal\"&gt;\n    &lt;HeaderTemplate&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;@modalTitle&lt;/FodText&gt;\n    &lt;/HeaderTemplate&gt;\n    &lt;BodyTemplate&gt;\n        @if (isLoading)\n        {\n            &lt;div class=\"d-flex justify-content-center p-4\"&gt;\n                &lt;FodLoadingCircular /&gt;\n            &lt;/div&gt;\n        }\n        else\n        {\n            &lt;FodText&gt;@modalContent&lt;/FodText&gt;\n        }\n    &lt;/BodyTemplate&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private bool showDynamic = false;\n    private bool isLoading = true;\n    private string modalTitle = \"\u00cenc\u0103rcare...\";\n    private string modalContent = \"\";\n\n    private async Task LoadModalContent()\n    {\n        showDynamic = true;\n        isLoading = true;\n\n        // Simulare \u00eenc\u0103rcare date\n        await Task.Delay(2000);\n\n        modalTitle = \"Date \u00eenc\u0103rcate\";\n        modalContent = \"Con\u021binutul a fost \u00eenc\u0103rcat cu succes!\";\n        isLoading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodModal/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Show</code> <code>bool</code> Controleaz\u0103 vizibilitatea modalului <code>false</code> <code>Size</code> <code>FodModalSize</code> Dimensiunea modalului (Small, Medium, Large, ExtraLarge) <code>Medium</code> <code>Fullscreen</code> <code>ModalFullscreen</code> Mod fullscreen (Always, SmallDown, MediumDown, LargeDown, ExtraLargeDown, Never) <code>Never</code> <code>Centered</code> <code>bool</code> Centreaz\u0103 vertical modalul <code>false</code> <code>Scrollable</code> <code>bool</code> Permite scroll \u00een body c\u00e2nd con\u021binutul dep\u0103\u0219e\u0219te \u00een\u0103l\u021bimea <code>false</code> <code>ShowBackdrop</code> <code>bool</code> Afi\u0219eaz\u0103 backdrop-ul \u00eentunecat <code>true</code> <code>ShowCloseButton</code> <code>bool</code> Afi\u0219eaz\u0103 butonul X de \u00eenchidere <code>true</code> <code>DisableBackdropClick</code> <code>bool</code> Dezactiveaz\u0103 \u00eenchiderea la click pe backdrop <code>false</code> <code>DisableEscapeKeyDown</code> <code>bool</code> Dezactiveaz\u0103 \u00eenchiderea cu tasta ESC <code>false</code> <code>HeaderTemplate</code> <code>RenderFragment</code> Con\u021binutul header-ului <code>null</code> <code>BodyTemplate</code> <code>RenderFragment</code> Con\u021binutul body-ului <code>null</code> <code>FooterTemplate</code> <code>RenderFragment</code> Con\u021binutul footer-ului <code>null</code> <code>OnClosed</code> <code>EventCallback</code> Eveniment declan\u0219at la \u00eenchiderea modalului - <code>HeaderCssClass</code> <code>string</code> Clase CSS pentru header <code>null</code> <code>BodyCssClass</code> <code>string</code> Clase CSS pentru body <code>null</code> <code>FooterCssClass</code> <code>string</code> Clase CSS pentru footer <code>null</code>"},{"location":"fod/componente/FodModal/#3-dimensiuni-disponibile","title":"3. Dimensiuni disponibile","text":"Dimensiune L\u0103\u021bime maxim\u0103 Utilizare <code>Small</code> 300px Confirm\u0103ri simple, mesaje scurte <code>Medium</code> 500px Formulare standard, con\u021binut mediu <code>Large</code> 800px Con\u021binut extins, tabele <code>ExtraLarge</code> 1140px Con\u021binut foarte mare, vizualiz\u0103ri complexe"},{"location":"fod/componente/FodModal/#4-moduri-fullscreen","title":"4. Moduri Fullscreen","text":"Mod Descriere <code>Always</code> \u00centotdeauna fullscreen <code>SmallDown</code> Fullscreen pe dispozitive &lt;= 576px <code>MediumDown</code> Fullscreen pe dispozitive &lt;= 768px <code>LargeDown</code> Fullscreen pe dispozitive &lt;= 992px <code>ExtraLargeDown</code> Fullscreen pe dispozitive &lt;= 1200px <code>Never</code> Niciodat\u0103 fullscreen"},{"location":"fod/componente/FodModal/#5-gestionarea-starii","title":"5. Gestionarea st\u0103rii","text":""},{"location":"fod/componente/FodModal/#pattern-cu-showhide","title":"Pattern cu show/hide","text":"<pre><code>@code {\n    private bool showModal = false;\n\n    private void OpenModal() =&gt; showModal = true;\n    private void CloseModal() =&gt; showModal = false;\n}\n</code></pre>"},{"location":"fod/componente/FodModal/#pattern-cu-multiple-modale","title":"Pattern cu multiple modale","text":"<pre><code>@code {\n    private enum ModalType { None, Add, Edit, Delete }\n    private ModalType activeModal = ModalType.None;\n\n    private void OpenModal(ModalType type) =&gt; activeModal = type;\n    private void CloseModal() =&gt; activeModal = ModalType.None;\n}\n\n&lt;!-- \u00cen markup --&gt;\n&lt;FodModal Show=\"@(activeModal == ModalType.Add)\" OnClosed=\"CloseModal\"&gt;\n    &lt;!-- Con\u021binut ad\u0103ugare --&gt;\n&lt;/FodModal&gt;\n\n&lt;FodModal Show=\"@(activeModal == ModalType.Edit)\" OnClosed=\"CloseModal\"&gt;\n    &lt;!-- Con\u021binut editare --&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodModal/#6-integrare-cu-servicii","title":"6. Integrare cu servicii","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodModal Show=\"showModal\" OnClosed=\"HandleModalClose\"&gt;\n    &lt;!-- Con\u021binut modal --&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private async Task HandleModalClose()\n    {\n        showModal = false;\n        await NotificationService.ShowNotification(\"Modal \u00eenchis\", FodSeverity.Info);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodModal/#7-note-si-observatii","title":"7. Note \u0219i observa\u021bii","text":"<ul> <li>Modalul folose\u0219te Bootstrap Modal \u00een fundal</li> <li>Un singur modal activ este recomandat la un moment dat</li> <li>Pentru notific\u0103ri simple, considera\u021bi FodNotificationProvider</li> <li>Body-ul paginii prime\u0219te class \"modal-open\" c\u00e2nd modalul este deschis</li> <li>Z-index-ul modalului este gestionat automat</li> </ul>"},{"location":"fod/componente/FodModal/#8-bune-practici","title":"8. Bune practici","text":"<ol> <li>Titluri clare - Folosi\u021bi titluri descriptive \u00een header</li> <li>Ac\u021biuni evidente - Butoanele din footer s\u0103 fie clare (Anuleaz\u0103/Confirm\u0103)</li> <li>Dimensiune adecvat\u0103 - Alege\u021bi dimensiunea potrivit\u0103 pentru con\u021binut</li> <li>Loading states - Afi\u0219a\u021bi indicatori de \u00eenc\u0103rcare pentru opera\u021bii asincrone</li> <li>Validare - Valida\u021bi formularele \u00eenainte de a permite \u00eenchiderea</li> <li>Confirmare - Pentru ac\u021biuni distructive, folosi\u021bi un modal de confirmare</li> </ol>"},{"location":"fod/componente/FodModal/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Focus trap - focusul r\u0103m\u00e2ne \u00een modal c\u00e2nd este deschis</li> <li>Tasta ESC \u00eenchide modalul (dac\u0103 nu este dezactivat\u0103)</li> <li>Atribute ARIA pentru screen readers</li> <li>Butonul de \u00eenchidere are label accesibil</li> </ul>"},{"location":"fod/componente/FodModal/#10-concluzie","title":"10. Concluzie","text":"<p><code>FodModal</code> este o component\u0103 esen\u021bial\u0103 pentru interac\u021biuni care necesit\u0103 aten\u021bia focalizat\u0103 a utilizatorului, oferind flexibilitate maxim\u0103 pentru diferite cazuri de utilizare, de la simple confirm\u0103ri p\u00e2n\u0103 la formulare complexe.</p>"},{"location":"fod/componente/FodNavGroup/","title":"FodNavGroup","text":""},{"location":"fod/componente/FodNavGroup/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodNavGroup</code> este o component\u0103 pentru crearea grupurilor de navigare colapsibile \u00een meniuri \u0219i bare laterale. Permite organizarea elementelor de navigare \u00een categorii care pot fi extinse sau colapsate, oferind o experien\u021b\u0103 de navigare mai organizat\u0103 \u0219i eficient\u0103 \u00een aplica\u021biile complexe.</p>"},{"location":"fod/componente/FodNavGroup/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Grupare ierarhic\u0103 - Organizeaz\u0103 elementele de navigare \u00een categorii</li> <li>Colapsibil - Poate fi extins/colapsibil pentru economisire spa\u021biu</li> <li>Two-way binding - Suport pentru <code>@bind-Expanded</code></li> <li>Pictograme - Suport pentru pictograme personalizabile</li> <li>Anima\u021bii fluide - Tranzi\u021bii smooth la extindere/colapsare</li> <li>Accesibilitate - Suport complet pentru navigare cu tastatura</li> </ul>"},{"location":"fod/componente/FodNavGroup/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodNavGroup Title=\"Administrare\" Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n    &lt;FodNavLink Href=\"/admin/utilizatori\"&gt;Utilizatori&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/admin/roluri\"&gt;Roluri&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/admin/permisiuni\"&gt;Permisiuni&lt;/FodNavLink&gt;\n&lt;/FodNavGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>Title</code> <code>string</code> - Titlul grupului de navigare <code>Icon</code> <code>string</code> - Pictograma afi\u0219at\u0103 l\u00e2ng\u0103 titlu <code>IconColor</code> <code>FodColor</code> <code>Default</code> Culoarea pictogramei <code>Expanded</code> <code>bool</code> <code>false</code> Starea extins\u0103/colapsat\u0103 <code>ExpandedChanged</code> <code>EventCallback&lt;bool&gt;</code> - Eveniment pentru two-way binding <code>ExpandIcon</code> <code>string</code> <code>ArrowDropDown</code> Pictograma pentru expand/collapse <code>HideExpandIcon</code> <code>bool</code> <code>false</code> Ascunde pictograma de expand <code>MaxHeight</code> <code>int?</code> - \u00cen\u0103l\u021bimea maxim\u0103 pentru collapse <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 grupul <code>DisableRipple</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 efectul ripple <code>ChildContent</code> <code>RenderFragment</code> - Con\u021binutul grupului (link-uri) <code>Class</code> <code>string</code> - Clase CSS adi\u021bionale <code>Style</code> <code>string</code> - Stiluri inline <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> - Atribute HTML adi\u021bionale"},{"location":"fod/componente/FodNavGroup/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodNavGroup/#meniu-cu-grupuri-simple","title":"Meniu cu Grupuri Simple","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavGroup Title=\"Dashboard\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        &lt;FodNavLink Href=\"/dashboard/overview\"&gt;Prezentare general\u0103&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/dashboard/analytics\"&gt;Analize&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/dashboard/reports\"&gt;Rapoarte&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;FodNavGroup Title=\"Utilizatori\" Icon=\"@FodIcons.Material.Filled.People\"&gt;\n        &lt;FodNavLink Href=\"/users/list\"&gt;List\u0103 utilizatori&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/users/roles\"&gt;Roluri&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/users/permissions\"&gt;Permisiuni&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grup-cu-control-two-way-binding","title":"Grup cu Control Two-Way Binding","text":"<pre><code>&lt;FodNavGroup Title=\"Set\u0103ri\" \n             Icon=\"@FodIcons.Material.Filled.Settings\"\n             @bind-Expanded=\"settingsExpanded\"&gt;\n    &lt;FodNavLink Href=\"/settings/general\"&gt;Generale&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/settings/security\"&gt;Securitate&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/settings/notifications\"&gt;Notific\u0103ri&lt;/FodNavLink&gt;\n&lt;/FodNavGroup&gt;\n\n&lt;FodButton OnClick=\"@(() =&gt; settingsExpanded = !settingsExpanded)\"&gt;\n    Toggle Set\u0103ri\n&lt;/FodButton&gt;\n\n@code {\n    private bool settingsExpanded = false;\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grupuri-cu-culori-diferite-pentru-pictograme","title":"Grupuri cu Culori Diferite pentru Pictograme","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavGroup Title=\"Activ\" \n                 Icon=\"@FodIcons.Material.Filled.CheckCircle\"\n                 IconColor=\"FodColor.Success\"&gt;\n        &lt;FodNavLink Href=\"/active/services\"&gt;Servicii active&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/active/users\"&gt;Utilizatori activi&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;FodNavGroup Title=\"Avertiz\u0103ri\" \n                 Icon=\"@FodIcons.Material.Filled.Warning\"\n                 IconColor=\"FodColor.Warning\"&gt;\n        &lt;FodNavLink Href=\"/warnings/system\"&gt;Sistem&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/warnings/security\"&gt;Securitate&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;FodNavGroup Title=\"Erori\" \n                 Icon=\"@FodIcons.Material.Filled.Error\"\n                 IconColor=\"FodColor.Error\"&gt;\n        &lt;FodNavLink Href=\"/errors/recent\"&gt;Recente&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/errors/critical\"&gt;Critice&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grupuri-imbricate","title":"Grupuri Imbricate","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavGroup Title=\"Servicii\" Icon=\"@FodIcons.Material.Filled.Work\"&gt;\n        &lt;FodNavLink Href=\"/services/all\"&gt;Toate serviciile&lt;/FodNavLink&gt;\n\n        &lt;FodNavGroup Title=\"Documente\" Icon=\"@FodIcons.Material.Filled.Description\"&gt;\n            &lt;FodNavLink Href=\"/services/docs/identity\"&gt;Acte identitate&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/services/docs/property\"&gt;Acte proprietate&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/services/docs/education\"&gt;Acte studii&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n\n        &lt;FodNavGroup Title=\"Licen\u021be\" Icon=\"@FodIcons.Material.Filled.CardMembership\"&gt;\n            &lt;FodNavLink Href=\"/services/licenses/driving\"&gt;Permis conducere&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/services/licenses/business\"&gt;Licen\u021be afaceri&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grup-cu-pictograma-expand-personalizata","title":"Grup cu Pictogram\u0103 Expand Personalizat\u0103","text":"<pre><code>&lt;FodNavGroup Title=\"Op\u021biuni avansate\" \n             Icon=\"@FodIcons.Material.Filled.Tune\"\n             ExpandIcon=\"@FodIcons.Material.Filled.ExpandMore\"\n             @bind-Expanded=\"advancedExpanded\"&gt;\n    &lt;FodNavLink Href=\"/advanced/api\"&gt;Configurare API&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/advanced/webhooks\"&gt;Webhooks&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/advanced/integrations\"&gt;Integr\u0103ri&lt;/FodNavLink&gt;\n&lt;/FodNavGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grup-fara-pictograma-expand","title":"Grup f\u0103r\u0103 Pictogram\u0103 Expand","text":"<pre><code>&lt;FodNavGroup Title=\"Ac\u021biuni rapide\" \n             Icon=\"@FodIcons.Material.Filled.FlashOn\"\n             HideExpandIcon=\"true\"\n             Expanded=\"true\"&gt;\n    &lt;FodNavLink Href=\"/quick/new\"&gt;Creeaz\u0103 nou&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/quick/import\"&gt;Import\u0103&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/quick/export\"&gt;Export\u0103&lt;/FodNavLink&gt;\n&lt;/FodNavGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grup-cu-inaltime-maxima-personalizata","title":"Grup cu \u00cen\u0103l\u021bime Maxim\u0103 Personalizat\u0103","text":"<pre><code>&lt;FodNavGroup Title=\"Categorii\" \n             Icon=\"@FodIcons.Material.Filled.Category\"\n             MaxHeight=\"300\"\n             Expanded=\"true\"&gt;\n    @foreach (var category in categories)\n    {\n        &lt;FodNavLink Href=\"@($\"/categories/{category.Id}\")\"&gt;\n            @category.Name\n        &lt;/FodNavLink&gt;\n    }\n&lt;/FodNavGroup&gt;\n\n@code {\n    private List&lt;Category&gt; categories = GenerateCategories(20);\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#meniu-complex-cu-multiple-grupuri","title":"Meniu Complex cu Multiple Grupuri","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;!-- Meniu Principal --&gt;\n    &lt;FodNavLink Href=\"/\" Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;!-- Servicii Publice --&gt;\n    &lt;FodNavGroup Title=\"Servicii Publice\" \n                 Icon=\"@FodIcons.Material.Filled.Public\"\n                 @bind-Expanded=\"publicServicesExpanded\"&gt;\n        &lt;FodNavLink Href=\"/services/documents\"&gt;Documente&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/services/certificates\"&gt;Certificate&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/services/permits\"&gt;Autoriza\u021bii&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;!-- Administrare --&gt;\n    @if (hasAdminAccess)\n    {\n        &lt;FodNavGroup Title=\"Administrare\" \n                     Icon=\"@FodIcons.Material.Filled.AdminPanelSettings\"\n                     IconColor=\"FodColor.Warning\"&gt;\n            &lt;FodNavLink Href=\"/admin/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/admin/audit\"&gt;Audit&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/admin/settings\"&gt;Set\u0103ri sistem&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n    }\n\n    &lt;!-- Rapoarte --&gt;\n    &lt;FodNavGroup Title=\"Rapoarte\" \n                 Icon=\"@FodIcons.Material.Filled.Assessment\"\n                 Disabled=\"@(!hasReportsAccess)\"&gt;\n        &lt;FodNavLink Href=\"/reports/statistics\"&gt;Statistici&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/reports/financial\"&gt;Financiar&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/reports/custom\"&gt;Personalizate&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;!-- Ajutor --&gt;\n    &lt;FodNavGroup Title=\"Ajutor\" \n                 Icon=\"@FodIcons.Material.Filled.Help\"\n                 Expanded=\"false\"&gt;\n        &lt;FodNavLink Href=\"/help/documentation\"&gt;Documenta\u021bie&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/help/faq\"&gt;\u00centreb\u0103ri frecvente&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/help/support\"&gt;Suport tehnic&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private bool publicServicesExpanded = true;\n    private bool hasAdminAccess = true;\n    private bool hasReportsAccess = false;\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#grup-dezactivat-conditionat","title":"Grup Dezactivat Condi\u021bionat","text":"<pre><code>&lt;FodNavGroup Title=\"Func\u021bii Premium\" \n             Icon=\"@FodIcons.Material.Filled.Star\"\n             IconColor=\"FodColor.Secondary\"\n             Disabled=\"@(!isPremiumUser)\"&gt;\n    &lt;FodNavLink Href=\"/premium/analytics\"&gt;Analize avansate&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/premium/export\"&gt;Export nelimitat&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/premium/api\"&gt;Acces API&lt;/FodNavLink&gt;\n&lt;/FodNavGroup&gt;\n\n@if (!isPremiumUser)\n{\n    &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"ma-2\"&gt;\n        Actualiza\u021bi la Premium pentru acces\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private bool isPremiumUser = false;\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodNavGroup/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>/* Container principal */\n.fod-nav-group\n\n/* Buton pentru expand/collapse */\n.fod-nav-link\n.fod-nav-link.fod-expanded /* C\u00e2nd grupul este extins */\n.fod-ripple /* Efect ripple activat */\n\n/* Pictogram\u0103 principal\u0103 */\n.fod-nav-link-icon\n.fod-nav-link-icon-default\n\n/* Text titlu */\n.fod-nav-link-text\n\n/* Pictogram\u0103 expand */\n.fod-nav-link-expand-icon\n.fod-nav-link-expand-icon.fod-transform /* Rotire c\u00e2nd extins */\n\n/* Container collapse */\n.fod-navgroup-collapse\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#personalizare-css","title":"Personalizare CSS","text":"<pre><code>/* Stil pentru grup activ */\n.fod-nav-group.active {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.1);\n}\n\n/* Hover effect pentru buton */\n.fod-nav-group .fod-nav-link:hover {\n    background-color: rgba(0, 0, 0, 0.04);\n}\n\n/* Indentare pentru sub-elemente */\n.fod-navgroup-collapse .fod-nav-link {\n    padding-left: 3rem;\n}\n\n/* Anima\u021bie pentru pictograma expand */\n.fod-nav-link-expand-icon {\n    transition: transform 0.3s ease;\n}\n\n.fod-nav-link-expand-icon.fod-transform {\n    transform: rotate(180deg);\n}\n\n/* Separator \u00eentre grupuri */\n.fod-nav-group + .fod-nav-group {\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\n    margin-top: 0.5rem;\n    padding-top: 0.5rem;\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#comportament-si-interactiuni","title":"Comportament \u0219i Interac\u021biuni","text":""},{"location":"fod/componente/FodNavGroup/#expandcollapse","title":"Expand/Collapse","text":"<ul> <li>Click pe header toggle starea expanded</li> <li>Anima\u021bie smooth prin FodCollapse</li> <li>Pictograma se rote\u0219te 180\u00b0 c\u00e2nd este extins</li> </ul>"},{"location":"fod/componente/FodNavGroup/#keyboard-navigation","title":"Keyboard Navigation","text":"<ul> <li><code>Tab</code> - Navigheaz\u0103 \u00eentre grupuri</li> <li><code>Enter/Space</code> - Toggle expand/collapse</li> <li>Suport complet pentru screen readers</li> </ul>"},{"location":"fod/componente/FodNavGroup/#state-management","title":"State Management","text":"<pre><code>@code {\n    // P\u0103streaz\u0103 starea \u00eentre navig\u0103ri\n    private Dictionary&lt;string, bool&gt; groupStates = new();\n\n    private bool GetGroupState(string groupName)\n    {\n        return groupStates.GetValueOrDefault(groupName, false);\n    }\n\n    private void SetGroupState(string groupName, bool expanded)\n    {\n        groupStates[groupName] = expanded;\n        // Salveaz\u0103 \u00een localStorage pentru persisten\u021b\u0103\n        localStorage.SetItem($\"navgroup_{groupName}\", expanded.ToString());\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#best-practices","title":"Best Practices","text":"<ol> <li>Titluri descriptive - Folosi\u021bi titluri clare pentru categorii</li> <li>Pictograme relevante - Alege\u021bi pictograme care reprezint\u0103 categoria</li> <li>Organizare logic\u0103 - Grupa\u021bi elementele similare \u00eempreun\u0103</li> <li>Evita\u021bi imbricarea excesiv\u0103 - Maxim 2-3 nivele de ad\u00e2ncime</li> <li>State management - P\u0103stra\u021bi starea expanded \u00eentre sesiuni pentru UX mai bun</li> <li>Feedback vizual - Indica\u021bi clar grupurile dezactivate</li> </ol>"},{"location":"fod/componente/FodNavGroup/#integrare-cu-alte-componente","title":"Integrare cu Alte Componente","text":""},{"location":"fod/componente/FodNavGroup/#cu-fodnavmenu","title":"Cu FodNavMenu","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavGroup Title=\"Sec\u021biune 1\"&gt;\n        &lt;FodNavLink Href=\"/section1/page1\"&gt;Pagina 1&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#cu-foddrawer","title":"Cu FodDrawer","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\"&gt;\n    &lt;FodNavMenu&gt;\n        &lt;FodNavGroup Title=\"Meniu\"&gt;\n            &lt;!-- Con\u021binut --&gt;\n        &lt;/FodNavGroup&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodNavGroup/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Atribute ARIA pentru screen readers</li> <li>Focus management corect</li> <li>Suport pentru navigare doar cu tastatura</li> <li>Indicatori vizuali pentru stare (expanded/collapsed)</li> </ul>"},{"location":"fod/componente/FodNavGroup/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodNavGroup/#grupul-nu-se-extindecolapseaza","title":"Grupul nu se extinde/colapseaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Expanded</code> nu este setat hard-coded</li> <li>Verifica\u021bi c\u0103 grupul nu este <code>Disabled</code></li> </ul>"},{"location":"fod/componente/FodNavGroup/#animatia-nu-functioneaza","title":"Anima\u021bia nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FodCollapse este prezent</li> <li>Verifica\u021bi CSS-ul pentru tranzi\u021bii</li> </ul>"},{"location":"fod/componente/FodNavGroup/#pictogramele-nu-apar","title":"Pictogramele nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 FodIcons este disponibil</li> <li>Verifica\u021bi valorile pentru <code>Icon</code> \u0219i <code>ExpandIcon</code></li> </ul>"},{"location":"fod/componente/FodNavGroup/#concluzie","title":"Concluzie","text":"<p>FodNavGroup este esen\u021bial\u0103 pentru organizarea meniurilor complexe \u00een aplica\u021bii Blazor, oferind o modalitate intuitiv\u0103 de a grupa \u0219i gestiona elementele de navigare. Cu suport pentru personalizare extensiv\u0103 \u0219i integrare perfect\u0103 cu alte componente FOD, permite crearea de interfe\u021be de navigare profesionale \u0219i u\u0219or de utilizat.</p>"},{"location":"fod/componente/FodNavLink/","title":"FodNavLink","text":""},{"location":"fod/componente/FodNavLink/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodNavLink</code> este o component\u0103 specializat\u0103 pentru crearea link-urilor de navigare \u00een meniuri \u0219i bare laterale. Extinde func\u021bionalitatea componentei Blazor <code>NavLink</code> cu caracteristici suplimentare precum pictograme, stilizare avansat\u0103, suport pentru comand\u0103 \u0219i integrare perfect\u0103 cu sistemul de navigare FOD.</p>"},{"location":"fod/componente/FodNavLink/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Integrare NavLink - Bazat\u0103 pe componenta Blazor NavLink pentru SPA</li> <li>Highlighting automat - Marcheaz\u0103 automat link-ul activ</li> <li>Pictograme - Suport pentru pictograme cu culori personalizabile</li> <li>Flexibilitate - Func\u021bioneaz\u0103 at\u00e2t ca link c\u00e2t \u0219i ca buton</li> <li>Ripple effect - Anima\u021bie la interac\u021biune</li> <li>Accesibilitate - Suport complet pentru navigare cu tastatura</li> </ul>"},{"location":"fod/componente/FodNavLink/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/\" Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/about\" Icon=\"@FodIcons.Material.Filled.Info\"&gt;\n        Despre noi\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/contact\" Icon=\"@FodIcons.Material.Filled.ContactMail\"&gt;\n        Contact\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>Href</code> <code>string</code> - URL-ul destina\u021bie <code>Icon</code> <code>string</code> - Pictograma pentru link <code>IconColor</code> <code>FodColor</code> <code>Default</code> Culoarea pictogramei <code>Match</code> <code>NavLinkMatch</code> <code>Prefix</code> Modul de potrivire pentru highlighting <code>Target</code> <code>string</code> - Target pentru link (_blank, _self, etc.) <code>ActiveClass</code> <code>string</code> <code>\"active\"</code> Clase CSS c\u00e2nd link-ul este activ <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 link-ul <code>DisableRipple</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 efectul ripple <code>ForceLoad</code> <code>bool</code> <code>false</code> For\u021beaz\u0103 re\u00eenc\u0103rcarea complet\u0103 <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> - Eveniment la click <code>Command</code> <code>ICommand</code> - Comand\u0103 pentru pattern MVVM <code>CommandParameter</code> <code>object</code> - Parametru pentru comand\u0103 <code>ChildContent</code> <code>RenderFragment</code> - Con\u021binutul link-ului <code>Class</code> <code>string</code> - Clase CSS adi\u021bionale <code>Style</code> <code>string</code> - Stiluri inline <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> - Atribute HTML adi\u021bionale"},{"location":"fod/componente/FodNavLink/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodNavLink/#navigare-simpla","title":"Navigare Simpl\u0103","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/\"&gt;Acas\u0103&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/products\"&gt;Produse&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/services\"&gt;Servicii&lt;/FodNavLink&gt;\n    &lt;FodNavLink Href=\"/contact\"&gt;Contact&lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#link-uri-cu-pictograme-si-culori","title":"Link-uri cu Pictograme \u0219i Culori","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/dashboard\" \n                Icon=\"@FodIcons.Material.Filled.Dashboard\"\n                IconColor=\"FodColor.Primary\"&gt;\n        Dashboard\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/reports\" \n                Icon=\"@FodIcons.Material.Filled.Assessment\"\n                IconColor=\"FodColor.Success\"&gt;\n        Rapoarte\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/alerts\" \n                Icon=\"@FodIcons.Material.Filled.Warning\"\n                IconColor=\"FodColor.Warning\"&gt;\n        Alerte\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#match-types-pentru-highlighting","title":"Match Types pentru Highlighting","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;!-- Match exact - doar pentru \"/\" --&gt;\n    &lt;FodNavLink Href=\"/\" Match=\"NavLinkMatch.All\"\n                Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;!-- Match prefix - pentru \"/products\" \u0219i sub-rute --&gt;\n    &lt;FodNavLink Href=\"/products\" Match=\"NavLinkMatch.Prefix\"\n                Icon=\"@FodIcons.Material.Filled.ShoppingCart\"&gt;\n        Produse\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#link-uri-cu-target","title":"Link-uri cu Target","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;!-- Link intern --&gt;\n    &lt;FodNavLink Href=\"/internal\"&gt;\n        Pagin\u0103 intern\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;!-- Link extern \u00een tab nou --&gt;\n    &lt;FodNavLink Href=\"https://example.com\" \n                Target=\"_blank\"\n                Icon=\"@FodIcons.Material.Filled.OpenInNew\"&gt;\n        Link extern\n    &lt;/FodNavLink&gt;\n\n    &lt;!-- PDF \u00een tab nou --&gt;\n    &lt;FodNavLink Href=\"/docs/manual.pdf\" \n                Target=\"_blank\"\n                Icon=\"@FodIcons.Material.Filled.PictureAsPdf\"&gt;\n        Manual PDF\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#link-uri-cu-onclick","title":"Link-uri cu OnClick","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.Refresh\"\n                OnClick=\"RefreshData\"&gt;\n        Re\u00eemprosp\u0103tare\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.CloudUpload\"\n                OnClick=\"SyncData\"&gt;\n        Sincronizare\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.ExitToApp\"\n                OnClick=\"Logout\"&gt;\n        Deconectare\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private async Task RefreshData(MouseEventArgs e)\n    {\n        await DataService.RefreshAsync();\n    }\n\n    private async Task SyncData(MouseEventArgs e)\n    {\n        await SyncService.SyncAsync();\n    }\n\n    private async Task Logout(MouseEventArgs e)\n    {\n        await AuthService.LogoutAsync();\n        NavigationManager.NavigateTo(\"/login\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#link-uri-dezactivate-conditionat","title":"Link-uri Dezactivate Condi\u021bionat","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/profile\" \n                Icon=\"@FodIcons.Material.Filled.Person\"\n                Disabled=\"@(!isAuthenticated)\"&gt;\n        Profil\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/admin\" \n                Icon=\"@FodIcons.Material.Filled.AdminPanelSettings\"\n                Disabled=\"@(!hasAdminRole)\"&gt;\n        Administrare\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/reports\" \n                Icon=\"@FodIcons.Material.Filled.Assessment\"\n                Disabled=\"@(!hasReportsAccess)\"&gt;\n        Rapoarte\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private bool isAuthenticated = true;\n    private bool hasAdminRole = false;\n    private bool hasReportsAccess = false;\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#clase-active-personalizate","title":"Clase Active Personalizate","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/dashboard\" \n                ActiveClass=\"custom-active highlighted\"\n                Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        Dashboard\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/analytics\" \n                ActiveClass=\"active-nav-item\"\n                Icon=\"@FodIcons.Material.Filled.Analytics\"&gt;\n        Analize\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n\n&lt;style&gt;\n    .custom-active {\n        background-color: var(--fod-palette-primary-main);\n        color: white !important;\n        border-radius: 4px;\n    }\n\n    .highlighted {\n        box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#meniu-complex-cu-grupuri","title":"Meniu Complex cu Grupuri","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;!-- Navigare principal\u0103 --&gt;\n    &lt;FodNavLink Href=\"/\" Match=\"NavLinkMatch.All\"\n                Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;!-- Grup Servicii --&gt;\n    &lt;FodNavGroup Title=\"Servicii\" Icon=\"@FodIcons.Material.Filled.Work\"&gt;\n        &lt;FodNavLink Href=\"/services/documents\"\n                    Icon=\"@FodIcons.Material.Filled.Description\"&gt;\n            Documente\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavLink Href=\"/services/certificates\"\n                    Icon=\"@FodIcons.Material.Filled.CardMembership\"&gt;\n            Certificate\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;!-- Grup Utilizator --&gt;\n    &lt;FodNavGroup Title=\"Cont\" Icon=\"@FodIcons.Material.Filled.AccountCircle\"&gt;\n        &lt;FodNavLink Href=\"/account/profile\"&gt;\n            Profil\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavLink Href=\"/account/settings\"&gt;\n            Set\u0103ri\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavLink OnClick=\"Logout\"&gt;\n            Deconectare\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavLink/#link-uri-cu-icommand","title":"Link-uri cu ICommand","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.Save\"\n                Command=\"@SaveCommand\"&gt;\n        Salveaz\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.Delete\"\n                Command=\"@DeleteCommand\"\n                CommandParameter=\"@selectedItem\"&gt;\n        \u0218terge\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private ICommand SaveCommand { get; set; }\n    private ICommand DeleteCommand { get; set; }\n    private object selectedItem;\n\n    protected override void OnInitialized()\n    {\n        SaveCommand = new RelayCommand(ExecuteSave, CanSave);\n        DeleteCommand = new RelayCommand&lt;object&gt;(ExecuteDelete, CanDelete);\n    }\n\n    private void ExecuteSave() =&gt; DataService.Save();\n    private bool CanSave() =&gt; hasChanges;\n\n    private void ExecuteDelete(object item) =&gt; DataService.Delete(item);\n    private bool CanDelete(object item) =&gt; item != null;\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#navigare-cu-tracking","title":"Navigare cu Tracking","text":"<pre><code>&lt;FodNavMenu&gt;\n    @foreach (var page in navigationPages)\n    {\n        &lt;FodNavLink Href=\"@page.Url\" \n                    Icon=\"@page.Icon\"\n                    OnClick=\"@(() =&gt; TrackNavigation(page))\"&gt;\n            @page.Title\n        &lt;/FodNavLink&gt;\n    }\n&lt;/FodNavMenu&gt;\n\n@code {\n    private List&lt;NavigationPage&gt; navigationPages = new()\n    {\n        new() { Title = \"Dashboard\", Url = \"/\", Icon = FodIcons.Material.Filled.Dashboard },\n        new() { Title = \"Rapoarte\", Url = \"/reports\", Icon = FodIcons.Material.Filled.Assessment },\n        new() { Title = \"Set\u0103ri\", Url = \"/settings\", Icon = FodIcons.Material.Filled.Settings }\n    };\n\n    private async Task TrackNavigation(NavigationPage page)\n    {\n        await AnalyticsService.TrackPageView(page.Title, page.Url);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodNavLink/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>/* Container principal */\n.fod-nav-item\n.fod-nav-item.fod-ripple /* Cu efect ripple */\n\n/* Link-ul propriu-zis */\n.fod-nav-link\n.fod-nav-link.active /* C\u00e2nd este activ */\n.fod-nav-link-disabled /* C\u00e2nd este dezactivat */\n\n/* Pictogram\u0103 */\n.fod-nav-link-icon\n.fod-nav-link-icon-default /* Culoare implicit\u0103 */\n\n/* Text */\n.fod-nav-link-text\n</code></pre>"},{"location":"fod/componente/FodNavLink/#personalizare-css","title":"Personalizare CSS","text":"<pre><code>/* Stil pentru link activ */\n.fod-nav-link.active {\n    background-color: var(--fod-palette-primary-main);\n    color: white;\n    border-left: 4px solid var(--fod-palette-primary-dark);\n}\n\n/* Hover effect */\n.fod-nav-link:hover {\n    background-color: rgba(0, 0, 0, 0.04);\n    cursor: pointer;\n}\n\n/* Link dezactivat */\n.fod-nav-link-disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n/* Anima\u021bie pentru pictogram\u0103 */\n.fod-nav-link:hover .fod-nav-link-icon {\n    transform: translateX(2px);\n    transition: transform 0.2s ease;\n}\n\n/* Stil pentru link-uri externe */\n.fod-nav-link[target=\"_blank\"]:after {\n    content: \"\u2197\";\n    margin-left: 4px;\n    font-size: 0.75em;\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#diferente-fata-de-navlink-standard","title":"Diferen\u021be fa\u021b\u0103 de NavLink Standard","text":""},{"location":"fod/componente/FodNavLink/#functionalitati-adaugate","title":"Func\u021bionalit\u0103\u021bi Ad\u0103ugate","text":"<ol> <li>Pictograme integrate - Suport nativ pentru FodIcons</li> <li>Culori pictograme - Control asupra culorii pictogramelor</li> <li>Ripple effect - Anima\u021bie la click</li> <li>Command pattern - Suport pentru ICommand</li> <li>Stilizare avansat\u0103 - Clase CSS predefinite</li> </ol>"},{"location":"fod/componente/FodNavLink/#comportament-imbunatatit","title":"Comportament \u00cembun\u0103t\u0103\u021bit","text":"<ul> <li>Auto-adaugare <code>rel=\"noopener noreferrer\"</code> pentru target=\"_blank\"</li> <li>Integrare cu <code>INavigationEventReceiver</code> pentru tracking</li> <li>Suport pentru dezactivare complet\u0103</li> </ul>"},{"location":"fod/componente/FodNavLink/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi Match corect - <code>All</code> pentru home, <code>Prefix</code> pentru sec\u021biuni</li> <li>Pictograme consistente - Men\u021bine\u021bi un stil uniform</li> <li>Grupa\u021bi logic - Folosi\u021bi FodNavGroup pentru organizare</li> <li>Feedback vizual - Indica\u021bi clar link-urile active \u0219i dezactivate</li> <li>Accesibilitate - Include\u021bi text descriptiv, nu doar pictograme</li> <li>Performan\u021b\u0103 - Evita\u021bi OnClick complex pentru navigare simpl\u0103</li> </ol>"},{"location":"fod/componente/FodNavLink/#integrare-cu-routing","title":"Integrare cu Routing","text":"<pre><code>@page \"/products/{category?}\"\n\n&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/products/electronics\" \n                Match=\"NavLinkMatch.All\"&gt;\n        Electronice\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/products/clothing\" \n                Match=\"NavLinkMatch.All\"&gt;\n        \u00cembr\u0103c\u0103minte\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    [Parameter] public string Category { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodNavLink/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodNavLink/#link-ul-nu-devine-activ","title":"Link-ul nu devine activ","text":"<ul> <li>Verifica\u021bi <code>Match</code> - folosi\u021bi <code>Prefix</code> pentru sub-rute</li> <li>Verifica\u021bi c\u0103 URL-ul coincide exact</li> </ul>"},{"location":"fod/componente/FodNavLink/#pictograma-nu-apare","title":"Pictograma nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Icon</code> con\u021bine o valoare valid\u0103 din FodIcons</li> <li>Verifica\u021bi c\u0103 FodIcon component este disponibil</li> </ul>"},{"location":"fod/componente/FodNavLink/#onclick-nu-functioneaza","title":"OnClick nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 link-ul nu este dezactivat</li> <li>Pentru navigare + OnClick, folosi\u021bi ambele</li> </ul>"},{"location":"fod/componente/FodNavLink/#concluzie","title":"Concluzie","text":"<p>FodNavLink este componenta fundamental\u0103 pentru navigare \u00een aplica\u021biile FOD, oferind toate func\u021bionalit\u0103\u021bile necesare pentru a crea meniuri de navigare moderne, accesibile \u0219i interactive. Integrarea perfect\u0103 cu sistemul de routing Blazor \u0219i extensiile ad\u0103ugate fac din aceasta o alegere ideal\u0103 pentru orice tip de aplica\u021bie.</p>"},{"location":"fod/componente/FodNavMenu/","title":"Nav Menu","text":""},{"location":"fod/componente/FodNavMenu/#documentatie-pentru-componentele-fodnavmenu-fodnavgroup-si-fodnavlink","title":"Documenta\u021bie pentru componentele FodNavMenu, FodNavGroup \u0219i FodNavLink","text":""},{"location":"fod/componente/FodNavMenu/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p>Sistemul de navigare FOD const\u0103 din trei componente principale care lucreaz\u0103 \u00eempreun\u0103 pentru a crea meniuri de navigare flexibile \u0219i ierarhice:</p> <ul> <li>FodNavMenu - Container principal pentru elementele de navigare</li> <li>FodNavGroup - Grup de navigare care poate fi expandat/restr\u00e2ns</li> <li>FodNavLink - Link individual de navigare</li> </ul> <p>Caracteristici principale: - Navigare ierarhic\u0103 pe mai multe niveluri - Grupuri expandabile cu anima\u021bii fluide - Integrare complet\u0103 cu sistemul de rutare Blazor - Suport pentru iconi\u021be \u0219i culori personalizate - Design responsive pentru drawers mini - Stilizare activ\u0103 automat\u0103 - Suport pentru comenzi \u0219i evenimente - Accesibilitate complet\u0103</p>"},{"location":"fod/componente/FodNavMenu/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodNavMenu/#meniu-de-navigare-simplu","title":"Meniu de navigare simplu","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Href=\"/\" \n                Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        Acas\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/products\" \n                Icon=\"@FodIcons.Material.Filled.ShoppingCart\"&gt;\n        Produse\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/about\" \n                Icon=\"@FodIcons.Material.Filled.Info\"&gt;\n        Despre noi\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Href=\"/contact\" \n                Icon=\"@FodIcons.Material.Filled.ContactMail\"&gt;\n        Contact\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-grupuri-expandabile","title":"Meniu cu grupuri expandabile","text":"<pre><code>&lt;FodNavMenu Color=\"FodColor.Primary\" Bordered=\"true\"&gt;\n    &lt;FodNavLink Href=\"/\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n        Dashboard\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavGroup Title=\"Administrare\" \n                 Icon=\"@FodIcons.Material.Filled.Settings\"\n                 Expanded=\"true\"&gt;\n        &lt;FodNavLink Href=\"/admin/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/admin/roles\"&gt;Roluri&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/admin/permissions\"&gt;Permisiuni&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;FodNavGroup Title=\"Rapoarte\" \n                 Icon=\"@FodIcons.Material.Filled.Assessment\"&gt;\n        &lt;FodNavLink Href=\"/reports/sales\"&gt;V\u00e2nz\u0103ri&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/reports/inventory\"&gt;Inventar&lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/reports/customers\"&gt;Clien\u021bi&lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n\n    &lt;FodNavLink Href=\"/settings\" Icon=\"@FodIcons.Material.Filled.Tune\"&gt;\n        Set\u0103ri\n    &lt;/FodNavLink&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-sub-grupuri-nested","title":"Meniu cu sub-grupuri (nested)","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavGroup Title=\"Produse\" \n                 Icon=\"@FodIcons.Material.Filled.Inventory\"\n                 @bind-Expanded=\"productsExpanded\"&gt;\n        &lt;FodNavLink Href=\"/products/all\"&gt;Toate produsele&lt;/FodNavLink&gt;\n\n        &lt;FodNavGroup Title=\"Categorii\" Expanded=\"false\"&gt;\n            &lt;FodNavLink Href=\"/products/electronics\"&gt;Electronice&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/products/clothing\"&gt;\u00cembr\u0103c\u0103minte&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/products/books\"&gt;C\u0103r\u021bi&lt;/FodNavLink&gt;\n\n            &lt;FodNavGroup Title=\"Sporturi\"&gt;\n                &lt;FodNavLink Href=\"/products/sports/outdoor\"&gt;Outdoor&lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/products/sports/indoor\"&gt;Indoor&lt;/FodNavLink&gt;\n                &lt;FodNavLink Href=\"/products/sports/water\"&gt;Sporturi nautice&lt;/FodNavLink&gt;\n            &lt;/FodNavGroup&gt;\n        &lt;/FodNavGroup&gt;\n\n        &lt;FodNavLink Href=\"/products/promotions\" \n                    Icon=\"@FodIcons.Material.Filled.LocalOffer\"&gt;\n            Promo\u021bii\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private bool productsExpanded = true;\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-in-drawer-lateral","title":"Meniu \u00een drawer lateral","text":"<pre><code>&lt;FodDrawer Variant=\"DrawerVariant.Persistent\" \n           Open=\"true\"&gt;\n    &lt;FodNavMenu Color=\"FodColor.Primary\" \n                Rounded=\"true\"\n                Margin=\"FodMargin.Dense\"&gt;\n        &lt;div class=\"pa-4 text-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Custom.Brands.MudBlazor\" \n                     Size=\"Size.Large\" /&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Aplica\u021bia Mea&lt;/FodText&gt;\n        &lt;/div&gt;\n\n        &lt;FodDivider Class=\"mb-4\" /&gt;\n\n        &lt;FodNavLink Href=\"/dashboard\" \n                    Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n            Dashboard\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavGroup Title=\"Management\" \n                     Icon=\"@FodIcons.Material.Filled.ManageAccounts\"&gt;\n            &lt;FodNavLink Href=\"/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/teams\"&gt;Echipe&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/projects\"&gt;Proiecte&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n\n        &lt;FodNavGroup Title=\"Financiar\" \n                     Icon=\"@FodIcons.Material.Filled.AttachMoney\"&gt;\n            &lt;FodNavLink Href=\"/invoices\"&gt;Facturi&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/payments\"&gt;Pl\u0103\u021bi&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/expenses\"&gt;Cheltuieli&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n\n        &lt;FodDivider Class=\"my-4\" /&gt;\n\n        &lt;FodNavLink Href=\"/profile\" \n                    Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n            Profil\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink Href=\"/logout\" \n                    Icon=\"@FodIcons.Material.Filled.Logout\"&gt;\n            Deconectare\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-actiuni-custom","title":"Meniu cu ac\u021biuni custom","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.Add\"\n                OnClick=\"@CreateNewItem\"&gt;\n        Adaug\u0103 element nou\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavLink Icon=\"@FodIcons.Material.Filled.Refresh\"\n                OnClick=\"@RefreshData\"\n                Disabled=\"@isRefreshing\"&gt;\n        @if (isRefreshing)\n        {\n            &lt;FodLoadingCircular Size=\"Size.Small\" Class=\"me-2\" /&gt;\n        }\n        Re\u00eemprosp\u0103teaz\u0103\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavGroup Title=\"Ac\u021biuni\" \n                 Icon=\"@FodIcons.Material.Filled.PlayArrow\"&gt;\n        &lt;FodNavLink OnClick=\"@(() =&gt; ExecuteAction(\"export\"))\"&gt;\n            Export date\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink OnClick=\"@(() =&gt; ExecuteAction(\"import\"))\"&gt;\n            Import date\n        &lt;/FodNavLink&gt;\n        &lt;FodNavLink OnClick=\"@(() =&gt; ExecuteAction(\"backup\"))\"&gt;\n            Backup\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n\n@code {\n    private bool isRefreshing = false;\n\n    private void CreateNewItem()\n    {\n        // Logic\u0103 pentru creare element nou\n    }\n\n    private async Task RefreshData()\n    {\n        isRefreshing = true;\n        await DataService.RefreshAsync();\n        isRefreshing = false;\n    }\n\n    private void ExecuteAction(string action)\n    {\n        // Execut\u0103 ac\u021biunea specific\u0103\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-stilizare-personalizata","title":"Meniu cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodNavMenu Color=\"FodColor.Secondary\" \n            Bordered=\"true\"\n            Rounded=\"true\"\n            Dense=\"true\"&gt;\n    &lt;FodNavLink Href=\"/home\" \n                Icon=\"@FodIcons.Material.Filled.Home\"\n                IconColor=\"FodColor.Primary\"&gt;\n        &lt;span style=\"font-weight: bold;\"&gt;Acas\u0103&lt;/span&gt;\n    &lt;/FodNavLink&gt;\n\n    &lt;FodNavGroup Title=\"Sec\u021biuni\" \n                 Icon=\"@FodIcons.Material.Filled.Folder\"\n                 IconColor=\"FodColor.Warning\"\n                 HideExpandIcon=\"false\"&gt;\n        &lt;FodNavLink Href=\"/section1\" \n                    Class=\"custom-nav-link\"&gt;\n            &lt;FodBadge Content=\"3\" Color=\"FodColor.Error\" Class=\"me-2\"&gt;\n                Sec\u021biunea 1\n            &lt;/FodBadge&gt;\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavLink Href=\"/section2\"&gt;\n            &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n                &lt;span&gt;Sec\u021biunea 2&lt;/span&gt;\n                &lt;FodChip Size=\"Size.Small\" Color=\"FodColor.Success\"&gt;\n                    Nou\n                &lt;/FodChip&gt;\n            &lt;/div&gt;\n        &lt;/FodNavLink&gt;\n    &lt;/FodNavGroup&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-control-programatic","title":"Meniu cu control programatic","text":"<pre><code>&lt;FodNavMenu&gt;\n    @foreach (var section in menuSections)\n    {\n        @if (section.Children?.Any() == true)\n        {\n            &lt;FodNavGroup Title=\"@section.Title\" \n                         Icon=\"@section.Icon\"\n                         @bind-Expanded=\"section.IsExpanded\"&gt;\n                @foreach (var child in section.Children)\n                {\n                    &lt;FodNavLink Href=\"@child.Url\" \n                                Icon=\"@child.Icon\"\n                                Disabled=\"@(!child.IsAccessible)\"&gt;\n                        @child.Title\n                    &lt;/FodNavLink&gt;\n                }\n            &lt;/FodNavGroup&gt;\n        }\n        else\n        {\n            &lt;FodNavLink Href=\"@section.Url\" \n                        Icon=\"@section.Icon\"\n                        Disabled=\"@(!section.IsAccessible)\"&gt;\n                @section.Title\n            &lt;/FodNavLink&gt;\n        }\n    }\n&lt;/FodNavMenu&gt;\n\n@code {\n    private List&lt;MenuSection&gt; menuSections = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        menuSections = await MenuService.GetUserMenuAsync();\n    }\n\n    public class MenuSection\n    {\n        public string Title { get; set; }\n        public string Icon { get; set; }\n        public string Url { get; set; }\n        public bool IsAccessible { get; set; }\n        public bool IsExpanded { get; set; }\n        public List&lt;MenuSection&gt; Children { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-responsive-pentru-drawer-mini","title":"Meniu responsive pentru drawer mini","text":"<pre><code>&lt;FodDrawer @bind-Open=\"drawerOpen\" \n           Variant=\"@DrawerVariant.Mini\"&gt;\n    &lt;FodNavMenu&gt;\n        &lt;FodNavLink Href=\"/dashboard\" \n                    Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n            &lt;FodTooltip Text=\"Dashboard\" Placement=\"Placement.Right\"&gt;\n                &lt;ChildContent&gt;\n                    Dashboard\n                &lt;/ChildContent&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodNavLink&gt;\n\n        &lt;FodNavGroup Title=\"Management\" \n                     Icon=\"@FodIcons.Material.Filled.Settings\"&gt;\n            &lt;!-- Con\u021binutul grupului se afi\u0219eaz\u0103 doar c\u00e2nd drawer-ul e expandat --&gt;\n            &lt;FodNavLink Href=\"/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/settings\"&gt;Set\u0103ri&lt;/FodNavLink&gt;\n        &lt;/FodNavGroup&gt;\n    &lt;/FodNavMenu&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodNavMenu/#fodnavmenu","title":"FodNavMenu","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Color</code> <code>FodColor</code> Culoarea pentru NavLink activ <code>Default</code> <code>Bordered</code> <code>bool</code> Adaug\u0103 bordur\u0103 la NavLink activ <code>false</code> <code>Rounded</code> <code>bool</code> Aplic\u0103 border-radius <code>false</code> <code>Margin</code> <code>FodMargin</code> Spa\u021biere vertical\u0103 \u00eentre elemente <code>Normal</code> <code>Dense</code> <code>bool</code> Padding vertical compact <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul meniului -"},{"location":"fod/componente/FodNavMenu/#fodnavgroup","title":"FodNavGroup","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Title</code> <code>string</code> Textul afi\u0219at pentru grup - <code>Icon</code> <code>string</code> Iconi\u021ba grupului <code>null</code> <code>IconColor</code> <code>FodColor</code> Culoarea iconi\u021bei <code>Default</code> <code>Expanded</code> <code>bool</code> Starea expandat\u0103 <code>false</code> <code>ExpandedChanged</code> <code>EventCallback&lt;bool&gt;</code> Eveniment pentru two-way binding - <code>HideExpandIcon</code> <code>bool</code> Ascunde iconi\u021ba expand/collapse <code>false</code> <code>MaxHeight</code> <code>int?</code> \u00cen\u0103l\u021bime maxim\u0103 pentru collapse <code>null</code> <code>ExpandIcon</code> <code>string</code> Iconi\u021ba pentru expand <code>ArrowDropDown</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul grupului - <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 grupul <code>false</code>"},{"location":"fod/componente/FodNavMenu/#fodnavlink","title":"FodNavLink","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Href</code> <code>string</code> URL-ul de navigare <code>null</code> <code>Icon</code> <code>string</code> Iconi\u021ba link-ului <code>null</code> <code>IconColor</code> <code>FodColor</code> Culoarea iconi\u021bei <code>Default</code> <code>Match</code> <code>NavLinkMatch</code> Modul de potrivire URL <code>Prefix</code> <code>Target</code> <code>string</code> Target pentru link (_blank, etc) <code>null</code> <code>ActiveClass</code> <code>string</code> Clasa CSS c\u00e2nd e activ <code>\"active\"</code> <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Handler pentru click - <code>Command</code> <code>ICommand</code> Comand\u0103 pentru MVVM <code>null</code> <code>CommandParameter</code> <code>object</code> Parametru pentru comand\u0103 <code>null</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 link-ul <code>false</code> <code>DisableRipple</code> <code>bool</code> Dezactiveaz\u0103 efectul ripple <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul link-ului -"},{"location":"fod/componente/FodNavMenu/#4-evenimente","title":"4. Evenimente","text":"Component Eveniment Descriere <code>FodNavGroup</code> <code>ExpandedChanged</code> Se declan\u0219eaz\u0103 la schimbarea st\u0103rii expand/collapse <code>FodNavLink</code> <code>OnClick</code> Se declan\u0219eaz\u0103 la click pe link"},{"location":"fod/componente/FodNavMenu/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* Meniu cu stil custom */\n.custom-nav-menu .fod-nav-menu {\n    background-color: #f5f5f5;\n    padding: 1rem;\n    border-radius: 8px;\n}\n\n/* Link-uri cu hover personalizat */\n.custom-nav-menu .fod-nav-link:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n    transform: translateX(4px);\n    transition: all 0.2s ease;\n}\n\n/* Grup cu stil special */\n.custom-nav-menu .fod-nav-group-header {\n    font-weight: bold;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 0.5px;\n}\n\n/* Active state personalizat */\n.custom-nav-menu .fod-nav-link.active {\n    background: linear-gradient(90deg, var(--fod-palette-primary-main) 0%, var(--fod-palette-primary-light) 100%);\n    color: white;\n    font-weight: 600;\n}\n\n/* Iconi\u021be colorate */\n.colorful-nav .fod-nav-link-icon {\n    color: var(--fod-palette-primary-main);\n}\n\n.colorful-nav .fod-nav-link:hover .fod-nav-link-icon {\n    color: var(--fod-palette-secondary-main);\n}\n\n/* Anima\u021bie pentru expand */\n.smooth-nav .fod-collapse-container {\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Badge-uri \u00een meniu */\n.nav-with-badges .fod-nav-link {\n    position: relative;\n}\n\n.nav-with-badges .notification-badge {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    background-color: var(--fod-palette-error-main);\n    color: white;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75rem;\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodNavMenu/#in-layout-principal","title":"\u00cen Layout principal","text":"<pre><code>&lt;FodLayout&gt;\n    &lt;FodAppBar Position=\"Position.Fixed\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                       OnClick=\"ToggleDrawer\" /&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Aplica\u021bia Mea&lt;/FodText&gt;\n    &lt;/FodAppBar&gt;\n\n    &lt;FodDrawer @bind-Open=\"drawerOpen\" \n               Variant=\"DrawerVariant.Temporary\"&gt;\n        &lt;FodNavMenu&gt;\n            &lt;!-- Con\u021binut meniu --&gt;\n        &lt;/FodNavMenu&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodMainContent&gt;\n        @Body\n    &lt;/FodMainContent&gt;\n&lt;/FodLayout&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#cu-sistem-de-autentificare","title":"Cu sistem de autentificare","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;AuthorizeView&gt;\n        &lt;Authorized&gt;\n            &lt;FodNavLink Href=\"/dashboard\" Icon=\"@FodIcons.Material.Filled.Dashboard\"&gt;\n                Dashboard\n            &lt;/FodNavLink&gt;\n\n            &lt;AuthorizeView Roles=\"Admin\"&gt;\n                &lt;FodNavGroup Title=\"Administrare\" Icon=\"@FodIcons.Material.Filled.AdminPanelSettings\"&gt;\n                    &lt;FodNavLink Href=\"/admin/users\"&gt;Utilizatori&lt;/FodNavLink&gt;\n                    &lt;FodNavLink Href=\"/admin/settings\"&gt;Set\u0103ri&lt;/FodNavLink&gt;\n                &lt;/FodNavGroup&gt;\n            &lt;/AuthorizeView&gt;\n\n            &lt;FodNavLink Href=\"/profile\" Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n                @context.User.Identity.Name\n            &lt;/FodNavLink&gt;\n\n            &lt;FodNavLink OnClick=\"Logout\" Icon=\"@FodIcons.Material.Filled.Logout\"&gt;\n                Deconectare\n            &lt;/FodNavLink&gt;\n        &lt;/Authorized&gt;\n        &lt;NotAuthorized&gt;\n            &lt;FodNavLink Href=\"/login\" Icon=\"@FodIcons.Material.Filled.Login\"&gt;\n                Autentificare\n            &lt;/FodNavLink&gt;\n            &lt;FodNavLink Href=\"/register\" Icon=\"@FodIcons.Material.Filled.PersonAdd\"&gt;\n                \u00cenregistrare\n            &lt;/FodNavLink&gt;\n        &lt;/NotAuthorized&gt;\n    &lt;/AuthorizeView&gt;\n&lt;/FodNavMenu&gt;\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#7-patterns-comune","title":"7. Patterns comune","text":""},{"location":"fod/componente/FodNavMenu/#meniu-cu-cautare","title":"Meniu cu c\u0103utare","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;div class=\"pa-3\"&gt;\n        &lt;FodTextField @bind-Value=\"searchTerm\" \n                      Placeholder=\"Caut\u0103 \u00een meniu...\"\n                      Adornment=\"Adornment.Start\"\n                      AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n                      Immediate=\"true\"\n                      DebounceInterval=\"300\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodDivider /&gt;\n\n    @foreach (var item in FilteredMenuItems)\n    {\n        @if (item.IsGroup)\n        {\n            &lt;FodNavGroup Title=\"@item.Title\" Icon=\"@item.Icon\"&gt;\n                @foreach (var child in item.Children)\n                {\n                    &lt;FodNavLink Href=\"@child.Href\"&gt;@child.Title&lt;/FodNavLink&gt;\n                }\n            &lt;/FodNavGroup&gt;\n        }\n        else\n        {\n            &lt;FodNavLink Href=\"@item.Href\" Icon=\"@item.Icon\"&gt;\n                @item.Title\n            &lt;/FodNavLink&gt;\n        }\n    }\n&lt;/FodNavMenu&gt;\n\n@code {\n    private string searchTerm = \"\";\n\n    private IEnumerable&lt;MenuItem&gt; FilteredMenuItems =&gt; \n        string.IsNullOrWhiteSpace(searchTerm) \n            ? allMenuItems \n            : allMenuItems.Where(item =&gt; \n                item.Title.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||\n                item.Children?.Any(c =&gt; c.Title.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) == true);\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#meniu-cu-state-persistent","title":"Meniu cu state persistent","text":"<pre><code>@inject ILocalStorageService LocalStorage\n\n&lt;FodNavMenu&gt;\n    @foreach (var group in navGroups)\n    {\n        &lt;FodNavGroup Title=\"@group.Title\" \n                     Icon=\"@group.Icon\"\n                     @bind-Expanded=\"group.Expanded\"\n                     ExpandedChanged=\"@(() =&gt; SaveMenuState())\"&gt;\n            @foreach (var link in group.Links)\n            {\n                &lt;FodNavLink Href=\"@link.Href\"&gt;@link.Title&lt;/FodNavLink&gt;\n            }\n        &lt;/FodNavGroup&gt;\n    }\n&lt;/FodNavMenu&gt;\n\n@code {\n    private List&lt;NavGroupState&gt; navGroups = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 starea salvat\u0103\n        var savedState = await LocalStorage.GetItemAsync&lt;List&lt;NavGroupState&gt;&gt;(\"navMenuState\");\n        if (savedState != null)\n        {\n            navGroups = savedState;\n        }\n        else\n        {\n            // Ini\u021bializare implicit\u0103\n            InitializeDefaultMenu();\n        }\n    }\n\n    private async Task SaveMenuState()\n    {\n        await LocalStorage.SetItemAsync(\"navMenuState\", navGroups);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#8-performanta","title":"8. Performan\u021b\u0103","text":"<ul> <li>NavLink-urile inactive nu proceseaz\u0103 evenimente</li> <li>Grupurile collapse folosesc anima\u021bii CSS eficiente</li> <li>Evita\u021bi re-render prin p\u0103strarea referin\u021belor stabile</li> <li>Pentru meniuri foarte mari, implementa\u021bi virtualizare</li> </ul>"},{"location":"fod/componente/FodNavMenu/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Suport complet pentru navigare cu tastatur\u0103</li> <li>ARIA labels pentru screen readers</li> <li>Focus management corect</li> <li>Anun\u021buri pentru schimb\u0103ri de stare</li> <li>Contrast adecvat pentru text \u0219i iconi\u021be</li> </ul>"},{"location":"fod/componente/FodNavMenu/#10-bune-practici","title":"10. Bune practici","text":"<ol> <li>Organizare logic\u0103 - Grupa\u021bi elementele \u00eenrudite</li> <li>Iconi\u021be consistente - Folosi\u021bi acela\u0219i stil de iconi\u021be</li> <li>Feedback vizual - Indica\u021bi clar elementul activ</li> <li>Loading states - Pentru meniuri dinamice</li> <li>Responsive design - Testa\u021bi cu drawer mini</li> <li>Limite rezonabile - Nu dep\u0103\u0219i\u021bi 3 niveluri de ad\u00e2ncime</li> </ol>"},{"location":"fod/componente/FodNavMenu/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodNavMenu/#link-ul-activ-nu-se-evidentiaza","title":"Link-ul activ nu se eviden\u021biaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Href corespunde cu URL-ul curent</li> <li>Verifica\u021bi NavLinkMatch (Prefix vs All)</li> <li>Verifica\u021bi c\u0103 Color este setat pe NavMenu</li> </ul>"},{"location":"fod/componente/FodNavMenu/#grupurile-nu-se-expandeaza","title":"Grupurile nu se expandeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Expanded binding func\u021bioneaz\u0103</li> <li>Verifica\u021bi consol\u0103 pentru erori JavaScript</li> <li>Verifica\u021bi c\u0103 FodCollapse este disponibil</li> </ul>"},{"location":"fod/componente/FodNavMenu/#iconitele-nu-se-afiseaza","title":"Iconi\u021bele nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 fontul de iconi\u021be este \u00eenc\u0103rcat</li> <li>Verifica\u021bi sintaxa iconi\u021bei</li> <li>Verifica\u021bi IconColor pentru contrast</li> </ul>"},{"location":"fod/componente/FodNavMenu/#12-limitari-cunoscute","title":"12. Limit\u0103ri cunoscute","text":"<ul> <li>Nu suport\u0103 drag &amp; drop pentru reordonare</li> <li>Nu are suport built-in pentru breadcrumbs</li> <li>Anima\u021biile nu pot fi personalizate u\u0219or</li> <li>Nu suport\u0103 lazy loading pentru grupuri mari</li> </ul>"},{"location":"fod/componente/FodNavMenu/#13-exemple-avansate","title":"13. Exemple avansate","text":""},{"location":"fod/componente/FodNavMenu/#meniu-cu-multi-tenant","title":"Meniu cu multi-tenant","text":"<pre><code>&lt;FodNavMenu&gt;\n    &lt;!-- Selector tenant --&gt;\n    &lt;div class=\"pa-3\"&gt;\n        &lt;FodSelect @bind-Value=\"selectedTenant\" \n                   Label=\"Organiza\u021bie\"\n                   FullWidth=\"true\"\n                   ValueChanged=\"OnTenantChanged\"&gt;\n            @foreach (var tenant in userTenants)\n            {\n                &lt;FodSelectItem Value=\"@tenant.Id\"&gt;\n                    @tenant.Name\n                &lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/div&gt;\n\n    &lt;FodDivider Class=\"mb-3\" /&gt;\n\n    &lt;!-- Meniu specific tenant-ului --&gt;\n    @if (tenantMenu != null)\n    {\n        @foreach (var section in tenantMenu.Sections)\n        {\n            &lt;FodNavGroup Title=\"@section.Title\" \n                         Icon=\"@section.Icon\"\n                         Disabled=\"@(!section.IsEnabled)\"&gt;\n                @foreach (var item in section.Items)\n                {\n                    &lt;FodNavLink Href=\"@($\"/tenant/{selectedTenant}/{item.Route}\")\"\n                                Icon=\"@item.Icon\"\n                                Disabled=\"@(!item.HasAccess)\"&gt;\n                        @item.Title\n                        @if (!item.HasAccess)\n                        {\n                            &lt;FodTooltip Text=\"Necesit\u0103 upgrade plan\"&gt;\n                                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Lock\" \n                                         Size=\"Size.Small\" \n                                         Class=\"ms-2\" /&gt;\n                            &lt;/FodTooltip&gt;\n                        }\n                    &lt;/FodNavLink&gt;\n                }\n            &lt;/FodNavGroup&gt;\n        }\n    }\n&lt;/FodNavMenu&gt;\n\n@code {\n    private Guid selectedTenant;\n    private List&lt;Tenant&gt; userTenants = new();\n    private TenantMenu tenantMenu;\n\n    private async Task OnTenantChanged(Guid tenantId)\n    {\n        selectedTenant = tenantId;\n        tenantMenu = await MenuService.GetTenantMenuAsync(tenantId);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavMenu/#14-concluzie","title":"14. Concluzie","text":"<p>Componentele FodNavMenu ofer\u0103 un sistem complet \u0219i flexibil pentru crearea meniurilor de navigare \u00een aplica\u021bii Blazor. Cu suport pentru ierarhii complexe, stilizare extensiv\u0103 \u0219i integrare perfect\u0103 cu sistemul de rutare, acestea sunt esen\u021biale pentru orice aplica\u021bie care necesit\u0103 navigare structurat\u0103 \u0219i intuitiv\u0103.</p>"},{"location":"fod/componente/FodNavigate/","title":"FodNavigate","text":""},{"location":"fod/componente/FodNavigate/#documentatie-pentru-componenta-fodnavigate","title":"Documenta\u021bie pentru componenta FodNavigate","text":""},{"location":"fod/componente/FodNavigate/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodNavigate</code> este o component\u0103 util\u0103 pentru navigare automat\u0103 la ini\u021bializare. Aceasta permite redirec\u021bionarea utilizatorului c\u0103tre o alt\u0103 pagin\u0103 imediat ce componenta este \u00eenc\u0103rcat\u0103, fie printr-un URL static, fie printr-un URL generat dinamic.</p> <p>Caracteristici principale: - Navigare automat\u0103 la ini\u021bializare - Suport pentru URL static sau dinamic - Navigare cu re\u00eenc\u0103rcare complet\u0103 (forceLoad) - F\u0103r\u0103 UI - component\u0103 invizibil\u0103 - Util pentru redirec\u021bion\u0103ri condi\u021bionale - Execu\u021bie asincron\u0103 pentru URL-uri dinamice</p>"},{"location":"fod/componente/FodNavigate/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodNavigate/#navigare-cu-url-static","title":"Navigare cu URL static","text":"<pre><code>&lt;FodNavigate Url=\"/dashboard\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNavigate/#navigare-cu-url-dinamic","title":"Navigare cu URL dinamic","text":"<pre><code>&lt;FodNavigate GetUrl=\"@GetRedirectUrl\" /&gt;\n\n@code {\n    private async Task&lt;string&gt; GetRedirectUrl()\n    {\n        var userRole = await UserService.GetCurrentUserRole();\n        return userRole switch\n        {\n            \"Admin\" =&gt; \"/admin/dashboard\",\n            \"User\" =&gt; \"/user/home\",\n            _ =&gt; \"/login\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Obligatoriu <code>Url</code> <code>string</code> URL-ul static pentru navigare Nu* <code>GetUrl</code> <code>Func&lt;Task&lt;string&gt;&gt;</code> Func\u021bie pentru generarea URL-ului dinamic Nu* <p>*Unul dintre <code>Url</code> sau <code>GetUrl</code> trebuie s\u0103 fie specificat.</p>"},{"location":"fod/componente/FodNavigate/#4-prioritate-parametri","title":"4. Prioritate Parametri","text":"<p>Dac\u0103 ambii parametri sunt specifica\u021bi, <code>GetUrl</code> are prioritate asupra <code>Url</code>.</p>"},{"location":"fod/componente/FodNavigate/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodNavigate/#redirectionare-dupa-autentificare","title":"Redirec\u021bionare dup\u0103 autentificare","text":"<pre><code>@page \"/auth/callback\"\n\n@if (isProcessing)\n{\n    &lt;FodLoading IsLoading=\"true\"&gt;\n        &lt;p&gt;Se proceseaz\u0103 autentificarea...&lt;/p&gt;\n    &lt;/FodLoading&gt;\n}\nelse if (isAuthenticated)\n{\n    &lt;FodNavigate GetUrl=\"@DeterminePostLoginUrl\" /&gt;\n}\nelse\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n        Autentificare e\u0219uat\u0103. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private bool isProcessing = true;\n    private bool isAuthenticated = false;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Procesare token de autentificare\n        isAuthenticated = await AuthService.ProcessCallback();\n        isProcessing = false;\n    }\n\n    private async Task&lt;string&gt; DeterminePostLoginUrl()\n    {\n        // Verific\u0103 dac\u0103 exist\u0103 URL de retur salvat\n        var returnUrl = await SessionStorage.GetItemAsync&lt;string&gt;(\"returnUrl\");\n        if (!string.IsNullOrEmpty(returnUrl))\n        {\n            await SessionStorage.RemoveItemAsync(\"returnUrl\");\n            return returnUrl;\n        }\n\n        // Altfel, redirec\u021bioneaz\u0103 bazat pe rol\n        var user = await UserService.GetCurrentUser();\n        return user.Role switch\n        {\n            \"Administrator\" =&gt; \"/admin\",\n            \"Operator\" =&gt; \"/operator/dashboard\",\n            _ =&gt; \"/user/profile\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#redirectionare-conditionata-bazata-pe-permisiuni","title":"Redirec\u021bionare condi\u021bionat\u0103 bazat\u0103 pe permisiuni","text":"<pre><code>@page \"/admin\"\n\n&lt;AuthorizeView&gt;\n    &lt;Authorized&gt;\n        @if (context.User.IsInRole(\"Admin\"))\n        {\n            &lt;AdminDashboard /&gt;\n        }\n        else\n        {\n            &lt;FodNavigate Url=\"/unauthorized\" /&gt;\n        }\n    &lt;/Authorized&gt;\n    &lt;NotAuthorized&gt;\n        &lt;FodNavigate GetUrl=\"@(() =&gt; Task.FromResult($\"/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}\"))\" /&gt;\n    &lt;/NotAuthorized&gt;\n&lt;/AuthorizeView&gt;\n\n@code {\n    [Inject] private NavigationManager Navigation { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#wizard-cu-redirectionare-finala","title":"Wizard cu redirec\u021bionare final\u0103","text":"<pre><code>@page \"/setup\"\n\n@if (currentStep &lt; totalSteps)\n{\n    &lt;FodWizard&gt;\n        &lt;!-- Pa\u0219i wizard --&gt;\n    &lt;/FodWizard&gt;\n}\nelse\n{\n    &lt;FodNavigate GetUrl=\"@GetCompletionUrl\" /&gt;\n}\n\n@code {\n    private int currentStep = 1;\n    private int totalSteps = 5;\n    private SetupData setupData = new();\n\n    private async Task&lt;string&gt; GetCompletionUrl()\n    {\n        // Salveaz\u0103 datele de configurare\n        await ConfigService.SaveSetup(setupData);\n\n        // Determin\u0103 unde s\u0103 navigheze\n        if (setupData.IsFirstTimeSetup)\n        {\n            return \"/welcome\";\n        }\n        else\n        {\n            return \"/dashboard\";\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#6-scenarii-de-utilizare","title":"6. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodNavigate/#redirect-dupa-operatiune-asincrona","title":"Redirect dup\u0103 opera\u021biune asincron\u0103","text":"<pre><code>@page \"/process/{id}\"\n\n@if (isProcessing)\n{\n    &lt;FodLoadingLinear /&gt;\n    &lt;FodText&gt;Se proceseaz\u0103 cererea @Id...&lt;/FodText&gt;\n}\nelse if (success)\n{\n    &lt;FodNavigate Url=\"@($\"/success/{Id}\")\" /&gt;\n}\nelse\n{\n    &lt;FodNavigate Url=\"/error\" /&gt;\n}\n\n@code {\n    [Parameter] public string Id { get; set; }\n\n    private bool isProcessing = true;\n    private bool success = false;\n\n    protected override async Task OnInitializedAsync()\n    {\n        try\n        {\n            await ProcessService.Process(Id);\n            success = true;\n        }\n        catch\n        {\n            success = false;\n        }\n        finally\n        {\n            isProcessing = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#redirectionare-bazata-pe-starea-aplicatiei","title":"Redirec\u021bionare bazat\u0103 pe starea aplica\u021biei","text":"<pre><code>@if (appState.RequiresMaintenance)\n{\n    &lt;FodNavigate Url=\"/maintenance\" /&gt;\n}\nelse if (!appState.IsConfigured)\n{\n    &lt;FodNavigate Url=\"/setup\" /&gt;\n}\nelse if (appState.HasPendingUpdates)\n{\n    &lt;FodNavigate GetUrl=\"@DetermineUpdateUrl\" /&gt;\n}\nelse\n{\n    &lt;MainApplication /&gt;\n}\n\n@code {\n    [Inject] private IAppStateService appState { get; set; }\n\n    private async Task&lt;string&gt; DetermineUpdateUrl()\n    {\n        var updateType = await appState.GetPendingUpdateType();\n        return updateType switch\n        {\n            UpdateType.Critical =&gt; \"/update/critical\",\n            UpdateType.Feature =&gt; \"/update/optional\",\n            _ =&gt; \"/dashboard\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#guard-pattern-pentru-rute-protejate","title":"Guard pattern pentru rute protejate","text":"<pre><code>@* RouteGuard.razor *@\n@if (isChecking)\n{\n    &lt;FodLoadingCircular /&gt;\n}\nelse if (!hasAccess)\n{\n    &lt;FodNavigate Url=\"@redirectUrl\" /&gt;\n}\nelse\n{\n    @ChildContent\n}\n\n@code {\n    [Parameter] public RenderFragment ChildContent { get; set; }\n    [Parameter] public string RequiredPermission { get; set; }\n    [Parameter] public string RedirectUrl { get; set; } = \"/unauthorized\";\n\n    private bool isChecking = true;\n    private bool hasAccess = false;\n    private string redirectUrl;\n\n    protected override async Task OnInitializedAsync()\n    {\n        hasAccess = await PermissionService.HasPermission(RequiredPermission);\n\n        if (!hasAccess)\n        {\n            // Include detalii \u00een URL pentru mesaj specific\n            redirectUrl = $\"{RedirectUrl}?permission={RequiredPermission}\";\n        }\n\n        isChecking = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#7-integrare-cu-servicii","title":"7. Integrare cu Servicii","text":""},{"location":"fod/componente/FodNavigate/#serviciu-de-navigare-centralizat","title":"Serviciu de navigare centralizat","text":"<pre><code>public interface INavigationService\n{\n    Task&lt;string&gt; GetHomeUrl();\n    Task&lt;string&gt; GetPostLoginUrl(User user);\n    Task&lt;string&gt; GetErrorUrl(Exception ex);\n}\n\npublic class NavigationService : INavigationService\n{\n    private readonly IUserService _userService;\n    private readonly IConfiguration _config;\n\n    public async Task&lt;string&gt; GetHomeUrl()\n    {\n        var user = await _userService.GetCurrentUser();\n        if (user == null) return \"/login\";\n\n        return user.DefaultPage ?? \"/dashboard\";\n    }\n\n    public async Task&lt;string&gt; GetPostLoginUrl(User user)\n    {\n        // Verific\u0103 dac\u0103 are profil complet\n        if (!user.IsProfileComplete)\n            return \"/profile/complete\";\n\n        // Verific\u0103 dac\u0103 acceptat termenii\n        if (!user.HasAcceptedTerms)\n            return \"/terms\";\n\n        return await GetHomeUrl();\n    }\n\n    public Task&lt;string&gt; GetErrorUrl(Exception ex)\n    {\n        return Task.FromResult(ex switch\n        {\n            UnauthorizedException =&gt; \"/unauthorized\",\n            NotFoundException =&gt; \"/404\",\n            _ =&gt; \"/error\"\n        });\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#8-pattern-uri-comune","title":"8. Pattern-uri Comune","text":""},{"location":"fod/componente/FodNavigate/#redirect-chain","title":"Redirect chain","text":"<pre><code>@page \"/old-url\"\n&lt;FodNavigate Url=\"/new-url\" /&gt;\n\n@page \"/new-url\"\n@if (shouldRedirectAgain)\n{\n    &lt;FodNavigate Url=\"/final-url\" /&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#conditional-navigation-wrapper","title":"Conditional navigation wrapper","text":"<pre><code>@* ConditionalNavigate.razor *@\n@if (Condition)\n{\n    &lt;FodNavigate Url=\"@NavigateToUrl\" /&gt;\n}\nelse\n{\n    @ChildContent\n}\n\n@code {\n    [Parameter] public bool Condition { get; set; }\n    [Parameter] public string NavigateToUrl { get; set; }\n    [Parameter] public RenderFragment ChildContent { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Evita\u021bi loop-uri - Asigura\u021bi-v\u0103 c\u0103 nu crea\u021bi bucle de redirec\u021bionare</li> <li>Loading states - Afi\u0219a\u021bi indicatori \u00een timpul proces\u0103rii</li> <li>Error handling - Trata\u021bi erorile \u00een func\u021biile GetUrl</li> <li>URL encoding - Codifica\u021bi parametrii URL c\u00e2nd e necesar</li> <li>Absolute paths - Folosi\u021bi c\u0103i absolute pentru claritate</li> </ol>"},{"location":"fod/componente/FodNavigate/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Navigarea cu <code>forceLoad: true</code> re\u00eencarc\u0103 complet aplica\u021bia</li> <li>Pentru navigare SPA, considera\u021bi <code>NavigationManager.NavigateTo(url, false)</code></li> <li>Evita\u021bi calcule grele \u00een GetUrl</li> </ul>"},{"location":"fod/componente/FodNavigate/#11-debugging","title":"11. Debugging","text":"<p>Pentru debugging, logga\u021bi navig\u0103rile:</p> <pre><code>public class LoggingNavigationService : INavigationService\n{\n    private readonly ILogger&lt;LoggingNavigationService&gt; _logger;\n    private readonly NavigationService _innerService;\n\n    public async Task&lt;string&gt; GetHomeUrl()\n    {\n        var url = await _innerService.GetHomeUrl();\n        _logger.LogInformation(\"Navigation to home: {Url}\", url);\n        return url;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#12-limitari","title":"12. Limit\u0103ri","text":"<ol> <li>No render - Componenta nu randeaz\u0103 nimic</li> <li>Force load - \u00centotdeauna folose\u0219te <code>forceLoad: true</code></li> <li>Timing - Navigarea se face \u00een OnInitialized, nu OnAfterRender</li> <li>No cancellation - Nu poate fi anulat\u0103 odat\u0103 ini\u021biat\u0103</li> </ol>"},{"location":"fod/componente/FodNavigate/#13-alternative","title":"13. Alternative","text":"<p>Pentru mai mult control, folosi\u021bi direct: <pre><code>@inject NavigationManager Navigation\n\n@code {\n    private void Navigate()\n    {\n        Navigation.NavigateTo(\"/url\", forceLoad: false);\n    }\n}\n</code></pre></p>"},{"location":"fod/componente/FodNavigate/#14-exemple-complete","title":"14. Exemple Complete","text":""},{"location":"fod/componente/FodNavigate/#pagina-de-redirect-cu-analytics","title":"Pagin\u0103 de redirect cu analytics","text":"<pre><code>@page \"/r/{code}\"\n\n&lt;FodNavigate GetUrl=\"@TrackAndRedirect\" /&gt;\n\n@code {\n    [Parameter] public string Code { get; set; }\n    [Inject] private IAnalyticsService Analytics { get; set; }\n    [Inject] private IRedirectService RedirectService { get; set; }\n\n    private async Task&lt;string&gt; TrackAndRedirect()\n    {\n        // Track redirect\n        await Analytics.TrackEvent(\"redirect\", new \n        {\n            code = Code,\n            timestamp = DateTime.UtcNow\n        });\n\n        // Get destination URL\n        var destination = await RedirectService.GetDestination(Code);\n\n        return destination ?? \"/404\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNavigate/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodNavigate</code> ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru navigare automat\u0103 \u00een aplica\u021bii Blazor. Prin suportul pentru URL-uri statice \u0219i dinamice, componenta faciliteaz\u0103 implementarea pattern-urilor comune de redirec\u021bionare men\u021bin\u00e2nd codul curat \u0219i u\u0219or de \u00een\u021beles.</p>"},{"location":"fod/componente/FodNotificationProvider/","title":"NotificationProvider","text":""},{"location":"fod/componente/FodNotificationProvider/#documentatie-pentru-componenta-fodnotificationprovider-si-serviciul-asociat","title":"Documenta\u021bie pentru componenta FodNotificationProvider \u0219i serviciul asociat","text":""},{"location":"fod/componente/FodNotificationProvider/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodNotificationProvider</code> este un sistem complet de notific\u0103ri pentru aplica\u021bii Blazor. Ofer\u0103 notific\u0103ri temporare de tip toast care apar \u00een col\u021bul ecranului pentru a informa utilizatorii despre diverse evenimente sau st\u0103ri.</p> <p>Sistemul include: - Provider component pentru afi\u0219area notific\u0103rilor - Serviciu pentru gestionarea notific\u0103rilor - Suport pentru diferite severit\u0103\u021bi (Error, Warning, Info, Success) - Pozi\u021bionare flexibil\u0103 pe ecran - Durat\u0103 de afi\u0219are configurabil\u0103 - Anima\u021bii de intrare/ie\u0219ire - Posibilitate de \u00eenchidere manual\u0103</p>"},{"location":"fod/componente/FodNotificationProvider/#2-configurare-initiala","title":"2. Configurare ini\u021bial\u0103","text":""},{"location":"fod/componente/FodNotificationProvider/#inregistrare-serviciu","title":"\u00cenregistrare serviciu","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IFodNotificationService, FodNotificationService&gt;();\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#adaugare-provider-in-layout","title":"Ad\u0103ugare provider \u00een layout","text":"<pre><code>&lt;!-- \u00cen MainLayout.razor sau App.razor --&gt;\n&lt;FodNotificationProvider /&gt;\n\n&lt;!-- Restul aplica\u021biei --&gt;\n@Body\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#3-utilizare-prin-serviciu","title":"3. Utilizare prin serviciu","text":""},{"location":"fod/componente/FodNotificationProvider/#injectare-si-utilizare-de-baza","title":"Injectare \u0219i utilizare de baz\u0103","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton OnClick=\"ShowSuccessNotification\"&gt;Arat\u0103 notificare succes&lt;/FodButton&gt;\n\n@code {\n    private void ShowSuccessNotification()\n    {\n        NotificationService.ShowNotification(\"Opera\u021biune reu\u0219it\u0103!\", FodSeverity.Success);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#notificari-cu-diferite-severitati","title":"Notific\u0103ri cu diferite severit\u0103\u021bi","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n@code {\n    private void ShowNotifications()\n    {\n        // Succes\n        NotificationService.ShowNotification(\"Datele au fost salvate!\", FodSeverity.Success);\n\n        // Eroare\n        NotificationService.ShowNotification(\"Eroare la salvarea datelor!\", FodSeverity.Error);\n\n        // Avertisment\n        NotificationService.ShowNotification(\"Aten\u021bie! Verifica\u021bi datele introduse.\", FodSeverity.Warning);\n\n        // Informa\u021bie\n        NotificationService.ShowNotification(\"Procesare \u00een curs...\", FodSeverity.Info);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#notificari-cu-optiuni-avansate","title":"Notific\u0103ri cu op\u021biuni avansate","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n@code {\n    private void ShowAdvancedNotification()\n    {\n        var options = new NotificationOptions\n        {\n            Duration = 5000, // 5 secunde\n            ShowCloseButton = true,\n            ShowIcon = true,\n            Animation = NotificationAnimation.SlideIn\n        };\n\n        NotificationService.ShowNotification(\n            \"Notificare personalizat\u0103 cu op\u021biuni\", \n            FodSeverity.Info, \n            options\n        );\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#4-configurare-provider","title":"4. Configurare provider","text":""},{"location":"fod/componente/FodNotificationProvider/#provider-cu-pozitionare-personalizata","title":"Provider cu pozi\u021bionare personalizat\u0103","text":"<pre><code>&lt;!-- Dreapta sus (implicit) --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.TopRight\" /&gt;\n\n&lt;!-- St\u00e2nga sus --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.TopLeft\" /&gt;\n\n&lt;!-- Centru sus --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.TopCenter\" /&gt;\n\n&lt;!-- Dreapta jos --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.BottomRight\" /&gt;\n\n&lt;!-- St\u00e2nga jos --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.BottomLeft\" /&gt;\n\n&lt;!-- Centru jos --&gt;\n&lt;FodNotificationProvider Position=\"NotificationPosition.BottomCenter\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#provider-cu-configurare-globala","title":"Provider cu configurare global\u0103","text":"<pre><code>&lt;FodNotificationProvider \n    Position=\"NotificationPosition.TopRight\"\n    DefaultDuration=\"4000\"\n    MaxNotifications=\"5\"\n    ShowNewestOnTop=\"true\"\n    PreventDuplicates=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#5-exemple-practice","title":"5. Exemple practice","text":""},{"location":"fod/componente/FodNotificationProvider/#notificari-in-formulare","title":"Notific\u0103ri \u00een formulare","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;!-- C\u00e2mpuri formular --&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private async Task HandleSubmit()\n    {\n        try\n        {\n            // Salvare date\n            await SaveData();\n            NotificationService.ShowNotification(\"Date salvate cu succes!\", FodSeverity.Success);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.ShowNotification($\"Eroare: {ex.Message}\", FodSeverity.Error);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#notificari-pentru-operatii-asincrone","title":"Notific\u0103ri pentru opera\u021bii asincrone","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton OnClick=\"ProcessData\"&gt;Proceseaz\u0103 date&lt;/FodButton&gt;\n\n@code {\n    private async Task ProcessData()\n    {\n        // Notificare de \u00eenceput\n        NotificationService.ShowNotification(\"Procesare \u00eenceput\u0103...\", FodSeverity.Info);\n\n        try\n        {\n            await Task.Delay(3000); // Simulare procesare\n\n            // Notificare de succes\n            NotificationService.ShowNotification(\"Procesare finalizat\u0103!\", FodSeverity.Success);\n        }\n        catch\n        {\n            // Notificare de eroare\n            NotificationService.ShowNotification(\"Procesare e\u0219uat\u0103!\", FodSeverity.Error);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#notificari-cu-actiuni","title":"Notific\u0103ri cu ac\u021biuni","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n@code {\n    private void ShowActionNotification()\n    {\n        var notification = new NotificationMessage\n        {\n            Message = \"Document nou disponibil\",\n            Severity = FodSeverity.Info,\n            Actions = new List&lt;NotificationAction&gt;\n            {\n                new NotificationAction\n                {\n                    Label = \"Vizualizeaz\u0103\",\n                    Action = () =&gt; NavigateToDocument()\n                },\n                new NotificationAction\n                {\n                    Label = \"Descarc\u0103\",\n                    Action = () =&gt; DownloadDocument()\n                }\n            }\n        };\n\n        NotificationService.ShowNotification(notification);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#notificari-persistente","title":"Notific\u0103ri persistente","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n@code {\n    private void ShowPersistentNotification()\n    {\n        var options = new NotificationOptions\n        {\n            Duration = 0, // 0 = persistent (nu dispare automat)\n            ShowCloseButton = true\n        };\n\n        NotificationService.ShowNotification(\n            \"Conexiune pierdut\u0103. Reconectare \u00een curs...\", \n            FodSeverity.Warning, \n            options\n        );\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#6-atribute-fodnotificationprovider","title":"6. Atribute FodNotificationProvider","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Position</code> <code>NotificationPosition</code> Pozi\u021bia notific\u0103rilor pe ecran <code>TopRight</code> <code>DefaultDuration</code> <code>int</code> Durata implicit\u0103 de afi\u0219are (ms) <code>3000</code> <code>MaxNotifications</code> <code>int</code> Num\u0103rul maxim de notific\u0103ri afi\u0219ate simultan <code>5</code> <code>ShowNewestOnTop</code> <code>bool</code> Afi\u0219eaz\u0103 notific\u0103rile noi deasupra <code>true</code> <code>PreventDuplicates</code> <code>bool</code> Previne notific\u0103ri duplicate <code>false</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodNotificationProvider/#7-metode-serviciu-ifodnotificationservice","title":"7. Metode serviciu IFodNotificationService","text":"Metod\u0103 Parametri Descriere <code>ShowNotification</code> <code>string message, FodSeverity severity</code> Afi\u0219eaz\u0103 notificare simpl\u0103 <code>ShowNotification</code> <code>string message, FodSeverity severity, NotificationOptions options</code> Afi\u0219eaz\u0103 notificare cu op\u021biuni <code>ShowNotification</code> <code>NotificationMessage notification</code> Afi\u0219eaz\u0103 notificare complex\u0103 <code>ShowSuccess</code> <code>string message</code> Afi\u0219eaz\u0103 notificare de succes <code>ShowError</code> <code>string message</code> Afi\u0219eaz\u0103 notificare de eroare <code>ShowWarning</code> <code>string message</code> Afi\u0219eaz\u0103 notificare de avertisment <code>ShowInfo</code> <code>string message</code> Afi\u0219eaz\u0103 notificare informativ\u0103 <code>Clear</code> - \u0218terge toate notific\u0103rile <code>Remove</code> <code>string notificationId</code> \u0218terge o notificare specific\u0103"},{"location":"fod/componente/FodNotificationProvider/#8-stilizare-si-personalizare","title":"8. Stilizare \u0219i personalizare","text":""},{"location":"fod/componente/FodNotificationProvider/#css-personalizat-pentru-notificari","title":"CSS personalizat pentru notific\u0103ri","text":"<pre><code>/* Notific\u0103ri cu stil personalizat */\n.fod-notification-custom {\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.fod-notification-success {\n    background: linear-gradient(45deg, #4caf50, #66bb6a);\n}\n\n.fod-notification-error {\n    background: linear-gradient(45deg, #f44336, #ef5350);\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#aplicare-stil-personalizat","title":"Aplicare stil personalizat","text":"<pre><code>&lt;FodNotificationProvider Class=\"fod-notification-custom\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#9-integrare-cu-alte-componente","title":"9. Integrare cu alte componente","text":""},{"location":"fod/componente/FodNotificationProvider/#cu-fodmodal","title":"Cu FodModal","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodModal Show=\"showModal\" OnClosed=\"HandleModalClose\"&gt;\n    &lt;!-- Con\u021binut modal --&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private void HandleModalClose()\n    {\n        showModal = false;\n        NotificationService.ShowInfo(\"Modal \u00eenchis\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#cu-validare-formular","title":"Cu validare formular","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;EditForm Model=\"model\" OnInvalidSubmit=\"HandleInvalidSubmit\"&gt;\n    &lt;!-- Formular --&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private void HandleInvalidSubmit()\n    {\n        NotificationService.ShowError(\"V\u0103 rug\u0103m s\u0103 corecta\u021bi erorile din formular\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#10-gestionare-erori-globale","title":"10. Gestionare erori globale","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n@code {\n    protected override void OnInitialized()\n    {\n        // \u00cenregistrare handler global pentru erori\n        AppDomain.CurrentDomain.UnhandledException += (sender, args) =&gt;\n        {\n            NotificationService.ShowError(\"A ap\u0103rut o eroare nea\u0219teptat\u0103\");\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNotificationProvider/#11-note-si-observatii","title":"11. Note \u0219i observa\u021bii","text":"<ul> <li>Notific\u0103rile sunt afi\u0219ate \u00eentr-un container fix pozi\u021bionat</li> <li>Z-index ridicat pentru a fi deasupra majorit\u0103\u021bii elementelor</li> <li>Anima\u021bii CSS pentru intrare/ie\u0219ire</li> <li>Suport pentru screen readers prin atribute ARIA</li> <li>Thread-safe pentru utilizare din mai multe componente</li> </ul>"},{"location":"fod/componente/FodNotificationProvider/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Mesaje concise - P\u0103stra\u021bi mesajele scurte \u0219i clare</li> <li>Severitate corect\u0103 - Folosi\u021bi severitatea potrivit\u0103 pentru context</li> <li>Nu supra\u00eenc\u0103rca\u021bi - Evita\u021bi prea multe notific\u0103ri simultane</li> <li>Feedback imediat - Afi\u0219a\u021bi notific\u0103ri imediat dup\u0103 ac\u021biuni</li> <li>Durat\u0103 adecvat\u0103 - Ajusta\u021bi durata \u00een func\u021bie de importan\u021b\u0103</li> <li>Ac\u021biuni clare - Pentru notific\u0103ri cu ac\u021biuni, folosi\u021bi etichete descriptive</li> </ol>"},{"location":"fod/componente/FodNotificationProvider/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodNotificationProvider/#notificarile-nu-apar","title":"Notific\u0103rile nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 FodNotificationProvider este ad\u0103ugat \u00een layout</li> <li>Verifica\u021bi c\u0103 serviciul este \u00eenregistrat \u00een DI container</li> <li>Verifica\u021bi z-index-ul \u00een cazul suprapunerilor</li> </ul>"},{"location":"fod/componente/FodNotificationProvider/#notificari-duplicate","title":"Notific\u0103ri duplicate","text":"<ul> <li>Activa\u021bi <code>PreventDuplicates=\"true\"</code> pe provider</li> <li>Verifica\u021bi c\u0103 nu apela\u021bi de mai multe ori metoda</li> </ul>"},{"location":"fod/componente/FodNotificationProvider/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodNotificationProvider</code> ofer\u0103 un sistem complet \u0219i flexibil pentru afi\u0219area notific\u0103rilor \u00een aplica\u021bii Blazor, cu o interfa\u021b\u0103 simpl\u0103 pentru dezvoltatori \u0219i o experien\u021b\u0103 pl\u0103cut\u0103 pentru utilizatori.</p>"},{"location":"fod/componente/FodNumberBox/","title":"FodNumberBox","text":""},{"location":"fod/componente/FodNumberBox/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodNumberBox</code> este o component\u0103 pentru introducerea valorilor numerice \u00een formulare. Extinde <code>FODInput</code> \u0219i ofer\u0103 suport pentru tipuri numerice precum <code>int</code>, <code>double</code>, <code>decimal</code> \u0219i versiunile lor nullable. Componenta gestioneaz\u0103 automat conversia tipurilor \u0219i validarea valorilor numerice.</p>"},{"location":"fod/componente/FodNumberBox/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Input numeric pentru int --&gt;\n&lt;FodNumberBox @bind-Value=\"quantity\" Label=\"Cantitate\" /&gt;\n\n&lt;!-- Input numeric pentru decimal --&gt;\n&lt;FodNumberBox @bind-Value=\"price\" Label=\"Pre\u021b\" /&gt;\n\n&lt;!-- Input numeric nullable --&gt;\n&lt;FodNumberBox @bind-Value=\"optionalValue\" Label=\"Valoare op\u021bional\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodNumberBox/#input-numeric-simplu","title":"Input Numeric Simplu","text":"<pre><code>&lt;EditForm Model=\"@model\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"model.Age\" \n                  Label=\"V\u00e2rsta\" \n                  Placeholder=\"Introduce\u021bi v\u00e2rsta\" /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"model.Salary\" \n                  Label=\"Salariu\" \n                  Placeholder=\"0.00\" /&gt;\n\n    &lt;ValidationSummary /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private PersonModel model = new();\n\n    public class PersonModel\n    {\n        [Required(ErrorMessage = \"V\u00e2rsta este obligatorie\")]\n        [Range(18, 65, ErrorMessage = \"V\u00e2rsta trebuie s\u0103 fie \u00eentre 18 \u0219i 65\")]\n        public int Age { get; set; }\n\n        [Required(ErrorMessage = \"Salariul este obligatoriu\")]\n        [Range(0, double.MaxValue, ErrorMessage = \"Salariul trebuie s\u0103 fie pozitiv\")]\n        public decimal Salary { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#valori-nullable","title":"Valori Nullable","text":"<pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;FodNumberBox @bind-Value=\"discount\" \n                  Label=\"Reducere (%)\" \n                  Placeholder=\"Op\u021bional\" /&gt;\n\n    @if (discount.HasValue)\n    {\n        &lt;p&gt;Reducere aplicat\u0103: @discount.Value%&lt;/p&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private int? discount;\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#formular-de-calcul","title":"Formular de Calcul","text":"<pre><code>&lt;div class=\"calculator-form\"&gt;\n    &lt;FodNumberBox @bind-Value=\"quantity\" \n                  Label=\"Cantitate\" \n                  @bind-Value:after=\"CalculateTotal\" /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"unitPrice\" \n                  Label=\"Pre\u021b unitar\" \n                  @bind-Value:after=\"CalculateTotal\" /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"taxRate\" \n                  Label=\"TVA (%)\" \n                  @bind-Value:after=\"CalculateTotal\" /&gt;\n\n    &lt;div class=\"mt-3\"&gt;\n        &lt;strong&gt;Subtotal:&lt;/strong&gt; @subtotal.ToString(\"C\")&lt;br /&gt;\n        &lt;strong&gt;TVA:&lt;/strong&gt; @tax.ToString(\"C\")&lt;br /&gt;\n        &lt;strong&gt;Total:&lt;/strong&gt; @total.ToString(\"C\")\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private int quantity = 1;\n    private decimal unitPrice = 0;\n    private decimal taxRate = 20;\n\n    private decimal subtotal;\n    private decimal tax;\n    private decimal total;\n\n    protected override void OnInitialized()\n    {\n        CalculateTotal();\n    }\n\n    private void CalculateTotal()\n    {\n        subtotal = quantity * unitPrice;\n        tax = subtotal * (taxRate / 100);\n        total = subtotal + tax;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#tipuri-suportate","title":"Tipuri Suportate","text":"<p>Componenta suport\u0103 urm\u0103toarele tipuri numerice: - <code>int</code> \u0219i <code>int?</code> - <code>double</code> \u0219i <code>double?</code> - <code>decimal</code> \u0219i <code>decimal?</code></p>"},{"location":"fod/componente/FodNumberBox/#detectare-automata-a-tipului","title":"Detectare Automat\u0103 a Tipului","text":"<pre><code>@code {\n    // Componenta detecteaz\u0103 automat tipul\n    private int integerValue = 0;\n    private double doubleValue = 0.0;\n    private decimal decimalValue = 0m;\n    private int? nullableInt = null;\n}\n\n&lt;FodNumberBox @bind-Value=\"integerValue\" Label=\"Integer\" /&gt;\n&lt;FodNumberBox @bind-Value=\"doubleValue\" Label=\"Double\" /&gt;\n&lt;FodNumberBox @bind-Value=\"decimalValue\" Label=\"Decimal\" /&gt;\n&lt;FodNumberBox @bind-Value=\"nullableInt\" Label=\"Nullable Integer\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#validare","title":"Validare","text":""},{"location":"fod/componente/FodNumberBox/#validare-cu-data-annotations","title":"Validare cu Data Annotations","text":"<pre><code>&lt;EditForm Model=\"@product\" OnValidSubmit=\"SaveProduct\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"product.Stock\" /&gt;\n    &lt;FodNumberBox @bind-Value=\"product.MinStock\" /&gt;\n    &lt;FodNumberBox @bind-Value=\"product.Price\" /&gt;\n\n    &lt;ValidationSummary /&gt;\n    &lt;button type=\"submit\"&gt;Salveaz\u0103&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private Product product = new();\n\n    public class Product\n    {\n        [Required(ErrorMessage = \"Stocul este obligatoriu\")]\n        [Range(0, 10000, ErrorMessage = \"Stocul trebuie s\u0103 fie \u00eentre 0 \u0219i 10000\")]\n        public int Stock { get; set; }\n\n        [Required(ErrorMessage = \"Stocul minim este obligatoriu\")]\n        public int MinStock { get; set; }\n\n        [Required(ErrorMessage = \"Pre\u021bul este obligatoriu\")]\n        [Range(0.01, double.MaxValue, ErrorMessage = \"Pre\u021bul trebuie s\u0103 fie mai mare de 0\")]\n        public decimal Price { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#validare-customizata","title":"Validare Customizat\u0103","text":"<pre><code>&lt;FodNumberBox @bind-Value=\"customValue\" \n              Label=\"Valoare cu validare custom\"\n              @bind-Value:after=\"ValidateCustomValue\" /&gt;\n\n@if (!string.IsNullOrEmpty(customError))\n{\n    &lt;div class=\"text-danger\"&gt;@customError&lt;/div&gt;\n}\n\n@code {\n    private int customValue;\n    private string customError;\n\n    private void ValidateCustomValue()\n    {\n        customError = null;\n\n        if (customValue % 5 != 0)\n        {\n            customError = \"Valoarea trebuie s\u0103 fie multiplu de 5\";\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FodNumberBox/#input-cu-limite-dinamice","title":"Input cu Limite Dinamice","text":"<pre><code>&lt;FodNumberBox @bind-Value=\"temperature\" \n              Label=\"Temperatur\u0103 (\u00b0C)\"\n              min=\"@minTemp\"\n              max=\"@maxTemp\" /&gt;\n\n&lt;div class=\"mt-2\"&gt;\n    &lt;button @onclick=\"SetWinterLimits\"&gt;Limite Iarn\u0103&lt;/button&gt;\n    &lt;button @onclick=\"SetSummerLimits\"&gt;Limite Var\u0103&lt;/button&gt;\n&lt;/div&gt;\n\n@code {\n    private double temperature;\n    private double minTemp = -50;\n    private double maxTemp = 50;\n\n    private void SetWinterLimits()\n    {\n        minTemp = -30;\n        maxTemp = 10;\n    }\n\n    private void SetSummerLimits()\n    {\n        minTemp = 15;\n        maxTemp = 40;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#calculator-de-imprumut","title":"Calculator de \u00cemprumut","text":"<pre><code>&lt;div class=\"loan-calculator\"&gt;\n    &lt;h4&gt;Calculator \u00cemprumut&lt;/h4&gt;\n\n    &lt;FodNumberBox @bind-Value=\"loanAmount\" \n                  Label=\"Suma \u00eemprumut (MDL)\" /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"interestRate\" \n                  Label=\"Rata dob\u00e2nzii (%)\" /&gt;\n\n    &lt;FodNumberBox @bind-Value=\"loanTerm\" \n                  Label=\"Perioada (ani)\" /&gt;\n\n    &lt;button @onclick=\"CalculateLoan\" class=\"btn btn-primary mt-3\"&gt;\n        Calculeaz\u0103\n    &lt;/button&gt;\n\n    @if (monthlyPayment &gt; 0)\n    {\n        &lt;div class=\"results mt-3\"&gt;\n            &lt;h5&gt;Rezultate:&lt;/h5&gt;\n            &lt;p&gt;Plat\u0103 lunar\u0103: @monthlyPayment.ToString(\"N2\") MDL&lt;/p&gt;\n            &lt;p&gt;Total de pl\u0103tit: @totalPayment.ToString(\"N2\") MDL&lt;/p&gt;\n            &lt;p&gt;Total dob\u00e2nd\u0103: @totalInterest.ToString(\"N2\") MDL&lt;/p&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private decimal loanAmount = 100000;\n    private double interestRate = 12;\n    private int loanTerm = 5;\n\n    private decimal monthlyPayment;\n    private decimal totalPayment;\n    private decimal totalInterest;\n\n    private void CalculateLoan()\n    {\n        var monthlyRate = (decimal)(interestRate / 100 / 12);\n        var months = loanTerm * 12;\n\n        monthlyPayment = loanAmount * monthlyRate * \n            (decimal)Math.Pow((double)(1 + monthlyRate), months) / \n            ((decimal)Math.Pow((double)(1 + monthlyRate), months) - 1);\n\n        totalPayment = monthlyPayment * months;\n        totalInterest = totalPayment - loanAmount;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#convertor-de-unitati","title":"Convertor de Unit\u0103\u021bi","text":"<pre><code>&lt;div class=\"unit-converter\"&gt;\n    &lt;h4&gt;Convertor Temperatur\u0103&lt;/h4&gt;\n\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodNumberBox @bind-Value=\"celsius\" \n                          Label=\"Celsius\"\n                          @bind-Value:after=\"ConvertFromCelsius\" /&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodNumberBox @bind-Value=\"fahrenheit\" \n                          Label=\"Fahrenheit\"\n                          @bind-Value:after=\"ConvertFromFahrenheit\" /&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodNumberBox @bind-Value=\"kelvin\" \n                          Label=\"Kelvin\"\n                          @bind-Value:after=\"ConvertFromKelvin\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private double celsius = 0;\n    private double fahrenheit = 32;\n    private double kelvin = 273.15;\n    private bool isConverting = false;\n\n    private void ConvertFromCelsius()\n    {\n        if (isConverting) return;\n        isConverting = true;\n\n        fahrenheit = (celsius * 9/5) + 32;\n        kelvin = celsius + 273.15;\n\n        isConverting = false;\n    }\n\n    private void ConvertFromFahrenheit()\n    {\n        if (isConverting) return;\n        isConverting = true;\n\n        celsius = (fahrenheit - 32) * 5/9;\n        kelvin = celsius + 273.15;\n\n        isConverting = false;\n    }\n\n    private void ConvertFromKelvin()\n    {\n        if (isConverting) return;\n        isConverting = true;\n\n        celsius = kelvin - 273.15;\n        fahrenheit = (celsius * 9/5) + 32;\n\n        isConverting = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#comportament-special","title":"Comportament Special","text":""},{"location":"fod/componente/FodNumberBox/#gestionarea-valorilor-goale","title":"Gestionarea Valorilor Goale","text":"<p>C\u00e2nd utilizatorul \u0219terge con\u021binutul: - Pentru tipuri non-nullable: valoarea devine <code>0</code> - Pentru tipuri nullable: valoarea devine <code>null</code></p> <pre><code>// Comportament pentru valori goale\nif (string.IsNullOrEmpty(stringValue))\n{\n    StringValue = string.Empty;\n    await ValueChanged.InvokeAsync(null);\n    return;\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#conversie-automata-de-tip","title":"Conversie Automat\u0103 de Tip","text":"<p>Componenta detecteaz\u0103 \u0219i converte\u0219te automat valorile:</p> <pre><code>// Pentru int\nif (int.TryParse(stringValue, out int intValue))\n{\n    await ValueChanged.InvokeAsync(intValue);\n}\n\n// Pentru double\nif (double.TryParse(stringValue, out double doubleValue))\n{\n    await ValueChanged.InvokeAsync(doubleValue);\n}\n\n// Pentru decimal\nif (decimal.TryParse(stringValue, out decimal decimalValue))\n{\n    await ValueChanged.InvokeAsync(decimalValue);\n}\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#atribute-html","title":"Atribute HTML","text":"<p>Componenta rendereaz\u0103 un element <code>&lt;input type=\"number\"&gt;</code> standard, accept\u00e2nd toate atributele HTML valide:</p> <pre><code>&lt;FodNumberBox @bind-Value=\"value\" \n              min=\"0\" \n              max=\"100\" \n              step=\"0.01\"\n              pattern=\"[0-9]*\"\n              inputmode=\"numeric\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodNumberBox/#clase-css","title":"Clase CSS","text":"<p>Componenta folose\u0219te clasa CSS specificat\u0103 \u00een proprietatea <code>CssClass</code>:</p> <pre><code>&lt;FodNumberBox @bind-Value=\"styledValue\" \n              CssClass=\"custom-number-input\" /&gt;\n\n&lt;style&gt;\n    .custom-number-input {\n        border: 2px solid #007bff;\n        border-radius: 8px;\n        padding: 10px;\n        font-size: 16px;\n    }\n\n    .custom-number-input:focus {\n        outline: none;\n        border-color: #0056b3;\n        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodNumberBox/#integrare-cu-fodinput","title":"Integrare cu FODInput","text":"<p>FodNumberBox mo\u0219tene\u0219te de la <code>FODInput</code>, av\u00e2nd acces la toate func\u021bionalit\u0103\u021bile de baz\u0103: - Sistem de binding two-way - Evenimente <code>ValueChanged</code> - Propriet\u0103\u021bi <code>Id</code>, <code>CssClass</code> - Tip setat automat la <code>InputType.NumberBox</code></p>"},{"location":"fod/componente/FodNumberBox/#best-practices","title":"Best Practices","text":"<ol> <li>Specifica\u021bi tipul corect - Folosi\u021bi <code>decimal</code> pentru valori monetare</li> <li>Validare adecvat\u0103 - Aplica\u021bi atribute <code>[Range]</code> pentru limite</li> <li>Valori nullable - Pentru c\u00e2mpuri op\u021bionale</li> <li>Formatare vizual\u0103 - Afi\u0219a\u021bi valorile formatate separat de input</li> <li>Feedback utilizator - Validare \u00een timp real pentru calcule</li> </ol>"},{"location":"fod/componente/FodNumberBox/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Suport\u0103 doar tipuri numerice de baz\u0103 (int, double, decimal)</li> <li>Nu suport\u0103 formatare intern\u0103 (separatori de mii, etc.)</li> <li>Conversia parse folose\u0219te cultura curent\u0103 a thread-ului</li> </ul>"},{"location":"fod/componente/FodNumberBox/#concluzie","title":"Concluzie","text":"<p>FodNumberBox ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru introducerea valorilor numerice, cu conversie automat\u0103 de tip \u0219i suport pentru valori nullable, fiind ideal\u0103 pentru formulare care necesit\u0103 input numeric validat.</p>"},{"location":"fod/componente/FodOverlay/","title":"Overlay","text":""},{"location":"fod/componente/FodOverlay/#documentatie-pentru-componenta-fodoverlay","title":"Documenta\u021bie pentru componenta FodOverlay","text":""},{"location":"fod/componente/FodOverlay/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodOverlay</code> este componenta pentru afi\u0219area unui strat suprapus peste con\u021binutul paginii, utilizat\u0103 pentru a crea efecte de fundal, loading states, modals sau pentru a bloca interac\u021biunea cu interfa\u021ba. Componenta ofer\u0103 control complet asupra vizibilit\u0103\u021bii, culorii fundalului \u0219i bloc\u0103rii scroll-ului.</p> <p>Caracteristici principale: - Fundal semi-transparent personalizabil - Blocare automat\u0103 a scroll-ului - Suport pentru pozi\u021bionare absolut\u0103 sau fix\u0103 - Auto-\u00eenchidere la click - Control z-index - Integrare cu sistemul de comenzi - Lifecycle management pentru scroll - Suport pentru con\u021binut personalizat</p>"},{"location":"fod/componente/FodOverlay/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodOverlay/#overlay-simplu","title":"Overlay simplu","text":"<pre><code>&lt;FodButton Variant=\"FodVariant.Filled\" \n           Color=\"FodColor.Primary\" \n           OnClick=\"@(() =&gt; showOverlay = true)\"&gt;\n    Afi\u0219eaz\u0103 Overlay\n&lt;/FodButton&gt;\n\n&lt;FodOverlay @bind-Visible=\"showOverlay\" \n            DarkBackground=\"true\" \n            AutoClose=\"true\" /&gt;\n\n@code {\n    private bool showOverlay = false;\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-cu-continut-personalizat","title":"Overlay cu con\u021binut personalizat","text":"<pre><code>&lt;FodOverlay @bind-Visible=\"isLoading\" DarkBackground=\"true\"&gt;\n    &lt;div class=\"d-flex flex-column align-items-center\"&gt;\n        &lt;FodProgressCircular Color=\"FodColor.Secondary\" \n                            Indeterminate=\"true\" \n                            Size=\"FodSize.Large\" /&gt;\n        &lt;FodText Typo=\"Typo.h6\" Color=\"FodColor.White\" Class=\"mt-4\"&gt;\n            Se \u00eencarc\u0103 datele...\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n&lt;/FodOverlay&gt;\n\n@code {\n    private bool isLoading = false;\n\n    private async Task LoadData()\n    {\n        isLoading = true;\n        await DataService.LoadAsync();\n        isLoading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-absolut-pentru-containere","title":"Overlay absolut pentru containere","text":"<pre><code>&lt;FodCard Style=\"position: relative; height: 300px;\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Card cu loading overlay&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\"&gt;\n            Acest card are un overlay absolut care acoper\u0103 doar cardul.\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n\n    @if (isCardLoading)\n    {\n        &lt;FodOverlay Visible=\"true\" \n                    DarkBackground=\"true\" \n                    Absolute=\"true\"&gt;\n            &lt;FodProgressCircular Color=\"FodColor.Primary\" \n                                Indeterminate=\"true\" /&gt;\n        &lt;/FodOverlay&gt;\n    }\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-cu-fundal-light","title":"Overlay cu fundal light","text":"<pre><code>&lt;FodOverlay @bind-Visible=\"showLightOverlay\" \n            LightBackground=\"true\" \n            AutoClose=\"true\"&gt;\n    &lt;FodPaper Elevation=\"8\" Class=\"pa-4\"&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Notificare\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n            Aceasta este o notificare important\u0103 cu fundal light.\n        &lt;/FodText&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"@(() =&gt; showLightOverlay = false)\"&gt;\n            \u00cenchide\n        &lt;/FodButton&gt;\n    &lt;/FodPaper&gt;\n&lt;/FodOverlay&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-cu-z-index-personalizat","title":"Overlay cu z-index personalizat","text":"<pre><code>&lt;!-- Overlay de baz\u0103 --&gt;\n&lt;FodOverlay @bind-Visible=\"baseOverlay\" \n            DarkBackground=\"true\" \n            ZIndex=\"1000\"&gt;\n    &lt;FodText Color=\"FodColor.White\"&gt;Overlay de baz\u0103 (z-index: 1000)&lt;/FodText&gt;\n&lt;/FodOverlay&gt;\n\n&lt;!-- Overlay deasupra --&gt;\n&lt;FodOverlay @bind-Visible=\"topOverlay\" \n            DarkBackground=\"true\" \n            ZIndex=\"1100\"&gt;\n    &lt;FodText Color=\"FodColor.White\"&gt;Overlay deasupra (z-index: 1100)&lt;/FodText&gt;\n&lt;/FodOverlay&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#loading-state-pentru-intreaga-pagina","title":"Loading state pentru \u00eentreaga pagin\u0103","text":"<pre><code>@if (pageLoading)\n{\n    &lt;FodOverlay Visible=\"true\" DarkBackground=\"true\"&gt;\n        &lt;div class=\"d-flex flex-column align-items-center\"&gt;\n            &lt;FodProgressCircular Color=\"FodColor.Secondary\" \n                                Indeterminate=\"true\" \n                                Size=\"FodSize.Large\" /&gt;\n            &lt;FodText Typo=\"Typo.h6\" Color=\"FodColor.White\" Class=\"mt-4\"&gt;\n                Proces\u0103m cererea dumneavoastr\u0103...\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.White\" Class=\"mt-2\"&gt;\n                V\u0103 rug\u0103m a\u0219tepta\u021bi\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/FodOverlay&gt;\n}\n\n@code {\n    private bool pageLoading = false;\n\n    private async Task ProcessRequest()\n    {\n        pageLoading = true;\n        StateHasChanged();\n\n        try\n        {\n            await ProcessService.ExecuteAsync();\n        }\n        finally\n        {\n            pageLoading = false;\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-fara-blocare-scroll","title":"Overlay f\u0103r\u0103 blocare scroll","text":"<pre><code>&lt;FodOverlay @bind-Visible=\"showOverlay\" \n            DarkBackground=\"true\" \n            LockScroll=\"false\"&gt;\n    &lt;FodAlert Severity=\"Severity.Warning\" Class=\"ma-4\"&gt;\n        &lt;FodAlertTitle&gt;Aten\u021bie&lt;/FodAlertTitle&gt;\n        Pute\u021bi continua s\u0103 naviga\u021bi \u00een timp ce acest mesaj este afi\u0219at.\n    &lt;/FodAlert&gt;\n&lt;/FodOverlay&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-cu-handler-onclick","title":"Overlay cu handler onClick","text":"<pre><code>&lt;FodOverlay Visible=\"showMenu\" \n            AutoClose=\"false\"\n            OnClick=\"HandleOverlayClick\"&gt;\n    &lt;FodList Class=\"bg-white\" Style=\"width: 200px;\"&gt;\n        &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(1))\"&gt;\n            &lt;FodListItemText Primary=\"Op\u021biunea 1\" /&gt;\n        &lt;/FodListItem&gt;\n        &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(2))\"&gt;\n            &lt;FodListItemText Primary=\"Op\u021biunea 2\" /&gt;\n        &lt;/FodListItem&gt;\n        &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(3))\"&gt;\n            &lt;FodListItemText Primary=\"Op\u021biunea 3\" /&gt;\n        &lt;/FodListItem&gt;\n    &lt;/FodList&gt;\n&lt;/FodOverlay&gt;\n\n@code {\n    private bool showMenu = false;\n\n    private void HandleOverlayClick(MouseEventArgs e)\n    {\n        // Click pe overlay (nu pe con\u021binut)\n        showMenu = false;\n    }\n\n    private void SelectOption(int option)\n    {\n        Console.WriteLine($\"Selected option: {option}\");\n        showMenu = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#loading-overlay-pentru-formular","title":"Loading overlay pentru formular","text":"<pre><code>&lt;FodForm @ref=\"form\" Model=\"@model\" Style=\"position: relative;\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodTextField @bind-Value=\"model.Name\" \n                             Label=\"Nume\" \n                             Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodTextField @bind-Value=\"model.Email\" \n                             Label=\"Email\" \n                             Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Filled\" \n                   Color=\"FodColor.Primary\"\n                   OnClick=\"Submit\"&gt;\n            Salveaz\u0103\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n\n    @if (isSubmitting)\n    {\n        &lt;FodOverlay Visible=\"true\" \n                    DarkBackground=\"true\" \n                    Absolute=\"true\"&gt;\n            &lt;FodProgressCircular Color=\"FodColor.Primary\" \n                                Indeterminate=\"true\" /&gt;\n        &lt;/FodOverlay&gt;\n    }\n&lt;/FodForm&gt;\n\n@code {\n    private FodForm form;\n    private UserModel model = new();\n    private bool isSubmitting = false;\n\n    private async Task Submit()\n    {\n        if (await form.ValidateAsync())\n        {\n            isSubmitting = true;\n            await UserService.SaveAsync(model);\n            isSubmitting = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-pentru-imagini-lightbox-simplu","title":"Overlay pentru imagini (lightbox simplu)","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n    @foreach (var image in images)\n    {\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodImage Src=\"@image.Thumbnail\" \n                     Alt=\"@image.Title\"\n                     Style=\"cursor: pointer;\"\n                     OnClick=\"@(() =&gt; ShowFullImage(image))\" /&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n\n&lt;FodOverlay @bind-Visible=\"showFullImage\" \n            DarkBackground=\"true\" \n            AutoClose=\"true\"&gt;\n    @if (selectedImage != null)\n    {\n        &lt;div class=\"d-flex flex-column align-items-center\"&gt;\n            &lt;FodImage Src=\"@selectedImage.FullSize\" \n                     Alt=\"@selectedImage.Title\"\n                     Style=\"max-width: 90vw; max-height: 90vh;\" /&gt;\n            &lt;FodText Typo=\"Typo.h6\" Color=\"FodColor.White\" Class=\"mt-3\"&gt;\n                @selectedImage.Title\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    }\n&lt;/FodOverlay&gt;\n\n@code {\n    private List&lt;ImageModel&gt; images = new();\n    private bool showFullImage = false;\n    private ImageModel selectedImage;\n\n    private void ShowFullImage(ImageModel image)\n    {\n        selectedImage = image;\n        showFullImage = true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Visible</code> <code>bool</code> Controleaz\u0103 vizibilitatea overlay-ului <code>false</code> <code>VisibleChanged</code> <code>EventCallback&lt;bool&gt;</code> Callback pentru schimbarea vizibilit\u0103\u021bii - <code>AutoClose</code> <code>bool</code> \u00cenchide overlay la click <code>false</code> <code>LockScroll</code> <code>bool</code> Blocheaz\u0103 scroll-ul paginii <code>true</code> <code>LockScrollClass</code> <code>string</code> Clasa CSS pentru blocare scroll <code>\"scroll-locked\"</code> <code>DarkBackground</code> <code>bool</code> Aplic\u0103 fundal \u00eentunecat <code>false</code> <code>LightBackground</code> <code>bool</code> Aplic\u0103 fundal deschis <code>false</code> <code>Absolute</code> <code>bool</code> Pozi\u021bionare absolut\u0103 \u00een container <code>false</code> <code>ZIndex</code> <code>int</code> Valoarea z-index <code>5</code> <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Handler pentru click pe overlay - <code>Command</code> <code>ICommand</code> Comand\u0103 executat\u0103 la click <code>null</code> <code>CommandParameter</code> <code>object</code> Parametru pentru comand\u0103 <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul overlay-ului <code>null</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodOverlay/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>VisibleChanged</code> <code>EventCallback&lt;bool&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 vizibilitatea <code>OnClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Se declan\u0219eaz\u0103 la click pe overlay"},{"location":"fod/componente/FodOverlay/#5-metode-publice","title":"5. Metode publice","text":"<p>Componenta nu expune metode publice, fiind controlat\u0103 prin propriet\u0103\u021bi.</p>"},{"location":"fod/componente/FodOverlay/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Overlay cu gradient */\n.gradient-overlay .fod-overlay-scrim {\n    background: linear-gradient(45deg, \n        rgba(63, 81, 181, 0.8), \n        rgba(233, 30, 99, 0.8));\n}\n\n/* Overlay cu blur */\n.blur-overlay {\n    backdrop-filter: blur(5px);\n    -webkit-backdrop-filter: blur(5px);\n}\n\n/* Anima\u021bie fade-in */\n.animated-overlay {\n    animation: fadeIn 0.3s ease-in-out;\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n/* Overlay cu pattern */\n.pattern-overlay .fod-overlay-scrim {\n    background-image: \n        repeating-linear-gradient(\n            45deg,\n            transparent,\n            transparent 10px,\n            rgba(0, 0, 0, 0.1) 10px,\n            rgba(0, 0, 0, 0.1) 20px\n        );\n}\n\n/* Content centrat cu anima\u021bie */\n.fod-overlay-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    animation: slideUp 0.3s ease-out;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(20px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodOverlay/#cu-dialog","title":"Cu Dialog","text":"<pre><code>&lt;FodOverlay @bind-Visible=\"showDialogOverlay\" \n            DarkBackground=\"true\"\n            ZIndex=\"1290\"&gt;\n    &lt;FodDialog Open=\"true\" MaxWidth=\"MaxWidth.Small\" FullWidth=\"true\"&gt;\n        &lt;FodDialogTitle&gt;\n            Confirmare\n        &lt;/FodDialogTitle&gt;\n        &lt;FodDialogContent&gt;\n            &lt;FodText&gt;Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 continua\u021bi?&lt;/FodText&gt;\n        &lt;/FodDialogContent&gt;\n        &lt;FodDialogActions&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; showDialogOverlay = false)\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" Variant=\"FodVariant.Filled\"&gt;\n                Confirm\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodDialogActions&gt;\n    &lt;/FodDialog&gt;\n&lt;/FodOverlay&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#cu-drawer","title":"Cu Drawer","text":"<pre><code>&lt;!-- Overlay pentru drawer --&gt;\n&lt;FodOverlay Visible=\"@drawerOpen\" \n            DarkBackground=\"true\"\n            OnClick=\"@(() =&gt; drawerOpen = false)\"\n            ZIndex=\"1200\" /&gt;\n\n&lt;FodDrawer @bind-Open=\"drawerOpen\" \n           Anchor=\"Anchor.Left\"\n           Variant=\"DrawerVariant.Temporary\"\n           Style=\"z-index: 1201;\"&gt;\n    &lt;!-- Drawer content --&gt;\n&lt;/FodDrawer&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#cu-loading-states","title":"Cu Loading states","text":"<pre><code>&lt;FodDataTable Items=\"@items\" \n              Loading=\"@loading\"\n              Style=\"position: relative;\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;!-- Table headers --&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;!-- Row template --&gt;\n    &lt;/RowTemplate&gt;\n\n    @if (loading)\n    {\n        &lt;FodOverlay Visible=\"true\" \n                    LightBackground=\"true\" \n                    Absolute=\"true\"&gt;\n            &lt;FodProgressLinear Color=\"FodColor.Primary\" \n                              Indeterminate=\"true\" /&gt;\n        &lt;/FodOverlay&gt;\n    }\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodOverlay/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodOverlay/#loading-service-global","title":"Loading service global","text":"<pre><code>public interface ILoadingService\n{\n    event Action OnChange;\n    bool IsLoading { get; }\n    void Show(string message = null);\n    void Hide();\n}\n\npublic class LoadingService : ILoadingService\n{\n    public event Action OnChange;\n    public bool IsLoading { get; private set; }\n    public string Message { get; private set; }\n\n    public void Show(string message = null)\n    {\n        IsLoading = true;\n        Message = message;\n        OnChange?.Invoke();\n    }\n\n    public void Hide()\n    {\n        IsLoading = false;\n        Message = null;\n        OnChange?.Invoke();\n    }\n}\n\n// \u00cen MainLayout.razor\n@implements IDisposable\n@inject ILoadingService LoadingService\n\n&lt;FodOverlay Visible=\"@LoadingService.IsLoading\" \n            DarkBackground=\"true\"&gt;\n    &lt;div class=\"d-flex flex-column align-items-center\"&gt;\n        &lt;FodProgressCircular Color=\"FodColor.Secondary\" \n                            Indeterminate=\"true\" /&gt;\n        @if (!string.IsNullOrEmpty(LoadingService.Message))\n        {\n            &lt;FodText Typo=\"Typo.body1\" Color=\"FodColor.White\" Class=\"mt-3\"&gt;\n                @LoadingService.Message\n            &lt;/FodText&gt;\n        }\n    &lt;/div&gt;\n&lt;/FodOverlay&gt;\n\n@code {\n    protected override void OnInitialized()\n    {\n        LoadingService.OnChange += StateHasChanged;\n    }\n\n    public void Dispose()\n    {\n        LoadingService.OnChange -= StateHasChanged;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-cu-timeout","title":"Overlay cu timeout","text":"<pre><code>&lt;FodOverlay @bind-Visible=\"showTemporaryOverlay\" \n            DarkBackground=\"true\"&gt;\n    &lt;FodAlert Severity=\"Severity.Success\" Class=\"ma-4\"&gt;\n        &lt;FodAlertTitle&gt;Succes!&lt;/FodAlertTitle&gt;\n        Opera\u021biunea a fost finalizat\u0103 cu succes.\n    &lt;/FodAlert&gt;\n&lt;/FodOverlay&gt;\n\n@code {\n    private bool showTemporaryOverlay = false;\n    private CancellationTokenSource cts;\n\n    private async Task ShowSuccessMessage()\n    {\n        showTemporaryOverlay = true;\n\n        cts?.Cancel();\n        cts = new CancellationTokenSource();\n\n        try\n        {\n            await Task.Delay(3000, cts.Token);\n            showTemporaryOverlay = false;\n        }\n        catch (TaskCanceledException)\n        {\n            // Anulat - un nou mesaj a fost afi\u0219at\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#9-consideratii-de-performanta","title":"9. Considera\u021bii de performan\u021b\u0103","text":"<ol> <li>Scroll Lock Management - Componenta gestioneaz\u0103 automat blocarea/deblocarea scroll-ului</li> <li>Dispose Pattern - Implementeaz\u0103 IDisposable pentru cleanup corect</li> <li>Event Propagation - Folose\u0219te <code>@onclick:stopPropagation</code> pentru a preveni bubble-up</li> <li>Conditional Rendering - Overlay-ul este randat doar c\u00e2nd este vizibil</li> </ol>"},{"location":"fod/componente/FodOverlay/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Overlay-ul blocheaz\u0103 interac\u021biunea cu con\u021binutul de dedesubt</li> <li>Pentru overlay-uri modale, considera\u021bi ad\u0103ugarea de atribute ARIA</li> <li>Asigura\u021bi contrast suficient pentru con\u021binutul afi\u0219at peste overlay</li> <li>Oferi\u021bi modalit\u0103\u021bi de \u00eenchidere pentru utilizatorii de tastatur\u0103</li> </ul>"},{"location":"fod/componente/FodOverlay/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Loading States - Folosi\u021bi overlay pentru loading states consistente</li> <li>Z-Index Management - Gestiona\u021bi z-index pentru overlay-uri multiple</li> <li>Scroll Lock - Activa\u021bi doar c\u00e2nd este necesar (modal-uri, meniuri)</li> <li>Auto Close - Activa\u021bi pentru overlay-uri dismissible</li> <li>Absolute vs Fixed - Folosi\u021bi Absolute pentru containere specifice</li> <li>Cleanup - Asigura\u021bi-v\u0103 c\u0103 overlay-ul este \u00eenchis la navigare</li> </ol>"},{"location":"fod/componente/FodOverlay/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodOverlay/#overlay-ul-nu-acopera-intreaga-pagina","title":"Overlay-ul nu acoper\u0103 \u00eentreaga pagin\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 nu folosi\u021bi <code>Absolute=\"true\"</code></li> <li>Verifica\u021bi c\u0103 p\u0103rintele nu are <code>position: relative</code></li> <li>Verifica\u021bi z-index-ul</li> </ul>"},{"location":"fod/componente/FodOverlay/#scroll-ul-nu-este-blocat","title":"Scroll-ul nu este blocat","text":"<ul> <li>Verifica\u021bi c\u0103 <code>LockScroll=\"true\"</code></li> <li>Verifica\u021bi c\u0103 nu folosi\u021bi <code>Absolute=\"true\"</code></li> <li>Verifica\u021bi c\u0103 clasa CSS exist\u0103</li> </ul>"},{"location":"fod/componente/FodOverlay/#continutul-nu-este-centrat","title":"Con\u021binutul nu este centrat","text":"<ul> <li>Overlay-ul centreaz\u0103 automat con\u021binutul</li> <li>Verifica\u021bi CSS-ul personalizat</li> </ul>"},{"location":"fod/componente/FodOverlay/#13-exemple-avansate","title":"13. Exemple avansate","text":""},{"location":"fod/componente/FodOverlay/#overlay-cu-tranzitii-personalizate","title":"Overlay cu tranzi\u021bii personalizate","text":"<pre><code>@if (showAnimatedOverlay)\n{\n    &lt;FodOverlay Visible=\"true\" \n                DarkBackground=\"true\"\n                Class=\"@($\"animated-overlay {(closing ? \"closing\" : \"\")}\")\"\n                OnClick=\"CloseWithAnimation\"&gt;\n        &lt;div class=\"content-scale\"&gt;\n            &lt;FodPaper Elevation=\"8\" Class=\"pa-4\"&gt;\n                &lt;FodText Typo=\"Typo.h5\"&gt;Con\u021binut animat&lt;/FodText&gt;\n            &lt;/FodPaper&gt;\n        &lt;/div&gt;\n    &lt;/FodOverlay&gt;\n}\n\n&lt;style&gt;\n    .animated-overlay {\n        animation: fadeIn 0.3s ease-out;\n    }\n\n    .animated-overlay.closing {\n        animation: fadeOut 0.3s ease-out;\n    }\n\n    .content-scale {\n        animation: scaleIn 0.3s ease-out;\n    }\n\n    .closing .content-scale {\n        animation: scaleOut 0.3s ease-out;\n    }\n\n    @keyframes scaleIn {\n        from { transform: scale(0.8); opacity: 0; }\n        to { transform: scale(1); opacity: 1; }\n    }\n\n    @keyframes scaleOut {\n        from { transform: scale(1); opacity: 1; }\n        to { transform: scale(0.8); opacity: 0; }\n    }\n&lt;/style&gt;\n\n@code {\n    private bool showAnimatedOverlay = false;\n    private bool closing = false;\n\n    private async Task CloseWithAnimation()\n    {\n        closing = true;\n        await Task.Delay(300);\n        showAnimatedOverlay = false;\n        closing = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#overlay-stack-management","title":"Overlay stack management","text":"<pre><code>@foreach (var overlay in overlayStack)\n{\n    &lt;FodOverlay @key=\"overlay.Id\"\n                Visible=\"true\"\n                DarkBackground=\"@(overlay == overlayStack.Last())\"\n                ZIndex=\"@(1000 + overlayStack.IndexOf(overlay) * 100)\"\n                OnClick=\"@(() =&gt; CloseOverlay(overlay.Id))\"&gt;\n        @overlay.Content\n    &lt;/FodOverlay&gt;\n}\n\n@code {\n    private List&lt;OverlayItem&gt; overlayStack = new();\n\n    private class OverlayItem\n    {\n        public string Id { get; set; } = Guid.NewGuid().ToString();\n        public RenderFragment Content { get; set; }\n    }\n\n    private void ShowOverlay(RenderFragment content)\n    {\n        overlayStack.Add(new OverlayItem { Content = content });\n    }\n\n    private void CloseOverlay(string id)\n    {\n        overlayStack.RemoveAll(o =&gt; o.Id == id);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodOverlay/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodOverlay</code> ofer\u0103 o solu\u021bie flexibil\u0103 pentru crearea de overlay-uri \u00een aplica\u021bii Blazor, cu suport pentru multiple scenarii de utilizare: loading states, backdrop-uri pentru modals, protec\u021bie pentru click-uri nedorite \u0219i efecte vizuale. Componenta gestioneaz\u0103 automat aspectele tehnice precum blocarea scroll-ului \u0219i ofer\u0103 control complet asupra comportamentului \u0219i stiliz\u0103rii.</p>"},{"location":"fod/componente/FodPageContentNavigation/","title":"FodPageContentNavigation","text":""},{"location":"fod/componente/FodPageContentNavigation/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodPageContentNavigation</code> este o component\u0103 de navigare pentru con\u021binut paginat care afi\u0219eaz\u0103 o list\u0103 de link-uri c\u0103tre sec\u021biuni ale paginii curente. Componenta suport\u0103 scroll spy pentru eviden\u021bierea automat\u0103 a sec\u021biunii active pe m\u0103sur\u0103 ce utilizatorul deruleaz\u0103 pagina, \u0219i permite navigare rapid\u0103 \u00eentre sec\u021biuni cu scroll smooth.</p>"},{"location":"fod/componente/FodPageContentNavigation/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Navigare simpl\u0103 pentru pagin\u0103 --&gt;\n&lt;FodPageContentNavigation @ref=\"pageNav\" \n                          SectionClassSelector=\".content-section\"\n                          Headline=\"Cuprins\" /&gt;\n\n&lt;!-- \u00cen con\u021binutul paginii --&gt;\n&lt;div class=\"content-section\" id=\"introducere\"&gt;\n    &lt;h2&gt;Introducere&lt;/h2&gt;\n    &lt;p&gt;Con\u021binut introducere...&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div class=\"content-section\" id=\"caracteristici\"&gt;\n    &lt;h2&gt;Caracteristici&lt;/h2&gt;\n    &lt;p&gt;Con\u021binut caracteristici...&lt;/p&gt;\n&lt;/div&gt;\n\n@code {\n    private FodPageContentNavigation pageNav;\n\n    protected override void OnAfterRender(bool firstRender)\n    {\n        if (firstRender)\n        {\n            // Adaug\u0103 sec\u021biuni programatic\n            pageNav.AddSection(\"Introducere\", \"introducere\", true);\n            pageNav.AddSection(\"Caracteristici\", \"caracteristici\", true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#atribute-disponibile","title":"Atribute Disponibile","text":"Atribut Tip Default Descriere Headline string \"Contents\" Titlul afi\u0219at deasupra link-urilor SectionClassSelector string \"\" Selector CSS pentru elementele observate HierarchyMapper IDictionary new() Mapare \u00eentre clase CSS \u0219i nivele ierarhice ExpandBehaviour ContentNavigationExpandBehaviour Always Comportament expandare pentru nivele multiple ActivateFirstSectionAsDefault bool false Activeaz\u0103 prima sec\u021biune implicit Class string - Clase CSS adi\u021bionale Style string - Stiluri inline UserAttributes Dictionary - Atribute HTML adi\u021bionale"},{"location":"fod/componente/FodPageContentNavigation/#proprietati-publice","title":"Propriet\u0103\u021bi Publice","text":"Proprietate Tip Descriere Sections IEnumerable Lista sec\u021biunilor \u00eenregistrate ActiveSection FodPageContentSection Sec\u021biunea activ\u0103 curent\u0103"},{"location":"fod/componente/FodPageContentNavigation/#metode-publice","title":"Metode Publice","text":"Metod\u0103 Parametri Descriere AddSection string sectionName, string sectionId, bool forceUpdate Adaug\u0103 o sec\u021biune nou\u0103 AddSection FodPageContentSection section, bool forceUpdate Adaug\u0103 o sec\u021biune cu obiect ScrollToSection Uri uri Scroll la sec\u021biune bazat pe fragment URL Update - For\u021beaz\u0103 re-randarea componentei"},{"location":"fod/componente/FodPageContentNavigation/#clase-asociate","title":"Clase Asociate","text":""},{"location":"fod/componente/FodPageContentNavigation/#fodpagecontentsection","title":"FodPageContentSection","text":"<p>Reprezint\u0103 o sec\u021biune \u00een navigare.</p> <pre><code>public class FodPageContentSection\n{\n    public string Title { get; set; }      // Titlul afi\u0219at\n    public string Id { get; set; }         // ID-ul sec\u021biunii\n    public int Level { get; set; }         // Nivelul \u00een ierarhie\n    public bool IsActive { get; set; }     // Starea activ\u0103\n    public FodPageContentSection Parent { get; set; } // Sec\u021biunea p\u0103rinte\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#contentnavigationexpandbehaviour","title":"ContentNavigationExpandBehaviour","text":"<pre><code>public enum ContentNavigationExpandBehaviour\n{\n    Always,                  // Mereu expandat\n    WhenSectionIsActive      // Expandat doar c\u00e2nd e activ\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#exemple-avansate","title":"Exemple Avansate","text":""},{"location":"fod/componente/FodPageContentNavigation/#navigare-cu-nivele-multiple","title":"Navigare cu Nivele Multiple","text":"<pre><code>&lt;FodPageContentNavigation @ref=\"navigation\"\n                          SectionClassSelector=\".doc-section\"\n                          HierarchyMapper=\"@hierarchyMap\"\n                          ExpandBehaviour=\"ContentNavigationExpandBehaviour.WhenSectionIsActive\" /&gt;\n\n&lt;article&gt;\n    &lt;section class=\"doc-section first-level\" id=\"section1\"&gt;\n        &lt;h2&gt;1. Introducere&lt;/h2&gt;\n\n        &lt;section class=\"doc-section second-level\" id=\"section1-1\"&gt;\n            &lt;h3&gt;1.1 Context&lt;/h3&gt;\n        &lt;/section&gt;\n\n        &lt;section class=\"doc-section second-level\" id=\"section1-2\"&gt;\n            &lt;h3&gt;1.2 Obiective&lt;/h3&gt;\n        &lt;/section&gt;\n    &lt;/section&gt;\n\n    &lt;section class=\"doc-section first-level\" id=\"section2\"&gt;\n        &lt;h2&gt;2. Implementare&lt;/h2&gt;\n    &lt;/section&gt;\n&lt;/article&gt;\n\n@code {\n    private FodPageContentNavigation navigation;\n\n    private Dictionary&lt;string, int&gt; hierarchyMap = new()\n    {\n        [\"first-level\"] = 0,\n        [\"second-level\"] = 1,\n        [\"third-level\"] = 2\n    };\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            // Adaug\u0103 sec\u021biuni cu ierarhie\n            var intro = new FodPageContentSection(\"1. Introducere\", \"section1\", 0, null);\n            navigation.AddSection(intro, false);\n\n            navigation.AddSection(\n                new FodPageContentSection(\"1.1 Context\", \"section1-1\", 1, intro), \n                false\n            );\n\n            navigation.AddSection(\n                new FodPageContentSection(\"1.2 Obiective\", \"section1-2\", 1, intro), \n                false\n            );\n\n            navigation.AddSection(\n                new FodPageContentSection(\"2. Implementare\", \"section2\", 0, null), \n                true\n            );\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#navigare-pentru-documentatie-api","title":"Navigare pentru Documenta\u021bie API","text":"<pre><code>@page \"/api/{ComponentName}\"\n\n&lt;div class=\"api-documentation\"&gt;\n    &lt;FodGrid&gt;\n        &lt;FodItem xs=\"12\" md=\"3\"&gt;\n            &lt;FodPageContentNavigation @ref=\"navMenu\"\n                                      Headline=\"API Reference\"\n                                      SectionClassSelector=\".api-section\"\n                                      ActivateFirstSectionAsDefault=\"true\" /&gt;\n        &lt;/FodItem&gt;\n\n        &lt;FodItem xs=\"12\" md=\"9\"&gt;\n            &lt;div class=\"api-content\"&gt;\n                &lt;div class=\"api-section\" id=\"overview\"&gt;\n                    &lt;h2&gt;Overview&lt;/h2&gt;\n                    &lt;p&gt;@GetOverview()&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div class=\"api-section\" id=\"properties\"&gt;\n                    &lt;h2&gt;Properties&lt;/h2&gt;\n                    @RenderProperties()\n                &lt;/div&gt;\n\n                &lt;div class=\"api-section\" id=\"methods\"&gt;\n                    &lt;h2&gt;Methods&lt;/h2&gt;\n                    @RenderMethods()\n                &lt;/div&gt;\n\n                &lt;div class=\"api-section\" id=\"events\"&gt;\n                    &lt;h2&gt;Events&lt;/h2&gt;\n                    @RenderEvents()\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/FodItem&gt;\n    &lt;/FodGrid&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public string ComponentName { get; set; }\n    private FodPageContentNavigation navMenu;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            navMenu.AddSection(\"Overview\", \"overview\", false);\n            navMenu.AddSection(\"Properties\", \"properties\", false);\n            navMenu.AddSection(\"Methods\", \"methods\", false);\n            navMenu.AddSection(\"Events\", \"events\", true);\n\n            // Scroll la fragment din URL dac\u0103 exist\u0103\n            await navMenu.ScrollToSection(Navigation.Uri);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#navigare-dinamica-cu-date-incarcate","title":"Navigare Dinamic\u0103 cu Date \u00cenc\u0103rcate","text":"<pre><code>&lt;FodPageContentNavigation @ref=\"dynamicNav\"\n                          Headline=\"@($\"Capitole ({chapters.Count})\")\"\n                          SectionClassSelector=\".chapter\" /&gt;\n\n&lt;div class=\"book-content\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodProgressCircular Indeterminate=\"true\" /&gt;\n    }\n    else\n    {\n        @foreach (var chapter in chapters)\n        {\n            &lt;div class=\"chapter\" id=\"@($\"chapter-{chapter.Id}\")\"&gt;\n                &lt;h2&gt;@chapter.Title&lt;/h2&gt;\n                &lt;div&gt;@((MarkupString)chapter.Content)&lt;/div&gt;\n            &lt;/div&gt;\n        }\n    }\n&lt;/div&gt;\n\n@code {\n    private FodPageContentNavigation dynamicNav;\n    private List&lt;Chapter&gt; chapters = new();\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        chapters = await LoadChapters();\n        isLoading = false;\n    }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (!firstRender &amp;&amp; !isLoading &amp;&amp; dynamicNav.Sections.Count() == 0)\n        {\n            // Adaug\u0103 sec\u021biuni dup\u0103 \u00eenc\u0103rcarea datelor\n            foreach (var chapter in chapters)\n            {\n                dynamicNav.AddSection(\n                    chapter.Title, \n                    $\"chapter-{chapter.Id}\", \n                    false\n                );\n            }\n            dynamicNav.Update();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#navigare-cu-stil-personalizat","title":"Navigare cu Stil Personalizat","text":"<pre><code>&lt;style&gt;\n    .custom-page-nav {\n        position: sticky;\n        top: 20px;\n        max-height: calc(100vh - 40px);\n        overflow-y: auto;\n    }\n\n    .custom-page-nav .page-content-navigation-navlink {\n        padding: 8px 16px;\n        border-left: 3px solid transparent;\n        transition: all 0.3s ease;\n    }\n\n    .custom-page-nav .page-content-navigation-navlink:hover {\n        background-color: rgba(0, 0, 0, 0.04);\n    }\n\n    .custom-page-nav .page-content-navigation-navlink.active {\n        border-left-color: var(--mud-palette-primary);\n        background-color: rgba(var(--mud-palette-primary-rgb), 0.1);\n        font-weight: 600;\n    }\n\n    .custom-page-nav .navigation-level-1 {\n        padding-left: 32px;\n        font-size: 0.875rem;\n    }\n\n    .custom-page-nav .navigation-level-2 {\n        padding-left: 48px;\n        font-size: 0.8125rem;\n    }\n&lt;/style&gt;\n\n&lt;FodPageContentNavigation Class=\"custom-page-nav\"\n                          SectionClassSelector=\".content-section\"\n                          Headline=\"Pe aceast\u0103 pagin\u0103\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#integrare-cu-router","title":"Integrare cu Router","text":"<pre><code>@inject NavigationManager Navigation\n\n&lt;FodPageContentNavigation @ref=\"routerNav\"\n                          SectionClassSelector=\".route-section\" /&gt;\n\n@code {\n    private FodPageContentNavigation routerNav;\n\n    protected override void OnInitialized()\n    {\n        Navigation.LocationChanged += OnLocationChanged;\n    }\n\n    private async void OnLocationChanged(object sender, LocationChangedEventArgs e)\n    {\n        // Scroll la sec\u021biune c\u00e2nd se schimb\u0103 URL-ul\n        await routerNav.ScrollToSection(new Uri(e.Location));\n    }\n\n    public void Dispose()\n    {\n        Navigation.LocationChanged -= OnLocationChanged;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#servicii-asociate","title":"Servicii Asociate","text":""},{"location":"fod/componente/FodPageContentNavigation/#iscrollspy-iscrollspyfactory","title":"IScrollSpy / IScrollSpyFactory","text":"<p>Servicii pentru monitorizarea pozi\u021biei de scroll \u0219i detectarea sec\u021biunii vizibile.</p> <pre><code>public interface IScrollSpy\n{\n    string CenteredSection { get; }\n    Task StartSpying(string selector);\n    Task ScrollToSection(string id);\n    Task ScrollToSection(Uri uri);\n    event EventHandler&lt;ScrollSectionCenteredEventArgs&gt; ScrollSectionSectionCentered;\n}\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodPageContentNavigation/#clase-css","title":"Clase CSS","text":"<pre><code>.page-content-navigation\n.page-content-navigation-navlink\n.page-content-navigation-navlink.active\n.navigation-level-0\n.navigation-level-1\n.navigation-level-2\n.title\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#variabile-css","title":"Variabile CSS","text":"<pre><code>--fod-page-nav-background\n--fod-page-nav-border\n--fod-page-nav-link-color\n--fod-page-nav-link-hover\n--fod-page-nav-link-active\n</code></pre>"},{"location":"fod/componente/FodPageContentNavigation/#note-si-observatii","title":"Note \u0219i Observa\u021bii","text":"<ol> <li>ScrollSpy - Necesit\u0103 elemente HTML cu ID-uri pentru func\u021bionare</li> <li>Performance - Pentru multe sec\u021biuni, considera\u021bi virtualizare</li> <li>Responsive - Ascunde\u021bi pe ecrane mici sau transforma\u021bi \u00een drawer</li> <li>SEO - ID-urile sec\u021biunilor devin fragmente URL</li> <li>Accessibility - Include navigare cu tastatur\u0103 automat\u0103</li> </ol>"},{"location":"fod/componente/FodPageContentNavigation/#bune-practici","title":"Bune Practici","text":"<ol> <li>Folosi\u021bi ID-uri descriptive pentru sec\u021biuni</li> <li>Limita\u021bi ad\u00e2ncimea ierarhiei la 2-3 nivele</li> <li>Asigura\u021bi-v\u0103 c\u0103 sec\u021biunile au \u00een\u0103l\u021bime suficient\u0103</li> <li>Ad\u0103uga\u021bi <code>scroll-behavior: smooth</code> \u00een CSS</li> <li>Testa\u021bi pe dispozitive mobile</li> <li>Folosi\u021bi <code>position: sticky</code> pentru meniu fix</li> <li>Implementa\u021bi fallback pentru browsere vechi</li> </ol>"},{"location":"fod/componente/FodPageContentNavigation/#concluzie","title":"Concluzie","text":"<p>FodPageContentNavigation ofer\u0103 o solu\u021bie elegant\u0103 pentru navigarea \u00een cadrul paginilor lungi sau documenta\u021biei. Cu suport pentru ierarhii, scroll spy automat \u0219i integrare u\u0219oar\u0103, componenta \u00eembun\u0103t\u0103\u021be\u0219te semnificativ experien\u021ba utilizatorului \u00een navigarea con\u021binutului structurat.</p>"},{"location":"fod/componente/FodPagination/","title":"Pagination","text":""},{"location":"fod/componente/FodPagination/#documentatie-pentru-componenta-fodpagination","title":"Documenta\u021bie pentru componenta FodPagination","text":""},{"location":"fod/componente/FodPagination/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodPagination</code> este componenta pentru navigarea \u00eentre pagini \u00een aplica\u021bii Blazor, oferind o interfa\u021b\u0103 intuitiv\u0103 pentru parcurgerea seturilor mari de date. Componenta suport\u0103 diferite stiluri vizuale, dimensiuni \u0219i configur\u0103ri pentru butoanele de navigare.</p> <p>Caracteristici principale: - Navigare rapid\u0103 cu butoane First/Previous/Next/Last - Afi\u0219are inteligent\u0103 a numerelor de pagin\u0103 cu ellipsis (...) - Trei variante vizuale: Text, Filled, Outlined - Trei dimensiuni: Small, Medium, Large - Forme rectangulare sau rotunjite - Suport pentru RTL (Right-to-Left) - Design responsive pentru dispozitive mobile - Accesibilitate complet\u0103 cu ARIA labels - Personalizare iconi\u021be navigare</p>"},{"location":"fod/componente/FodPagination/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodPagination/#paginare-de-baza","title":"Paginare de baz\u0103","text":"<pre><code>&lt;FodPagination Count=\"10\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@((page) =&gt; currentPage = page)\" /&gt;\n\n@code {\n    private int currentPage = 1;\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-cu-toate-butoanele-de-navigare","title":"Paginare cu toate butoanele de navigare","text":"<pre><code>&lt;FodPagination Count=\"20\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@((page) =&gt; currentPage = page)\"\n               ShowFirstButton=\"true\"\n               ShowLastButton=\"true\"\n               ShowPreviousButton=\"true\"\n               ShowNextButton=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#variante-vizuale","title":"Variante vizuale","text":""},{"location":"fod/componente/FodPagination/#variant-text-implicit","title":"Variant Text (implicit)","text":"<pre><code>&lt;FodPagination Count=\"15\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Variant=\"FodVariant.Text\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#variant-filled","title":"Variant Filled","text":"<pre><code>&lt;FodPagination Count=\"15\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Variant=\"FodVariant.Filled\"\n               Color=\"FodColor.Primary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#variant-outlined","title":"Variant Outlined","text":"<pre><code>&lt;FodPagination Count=\"15\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Variant=\"FodVariant.Outlined\"\n               Color=\"FodColor.Secondary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#dimensiuni-diferite","title":"Dimensiuni diferite","text":""},{"location":"fod/componente/FodPagination/#small","title":"Small","text":"<pre><code>&lt;FodPagination Count=\"10\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Size=\"FodSize.Small\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#medium-implicit","title":"Medium (implicit)","text":"<pre><code>&lt;FodPagination Count=\"10\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Size=\"FodSize.Medium\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#large","title":"Large","text":"<pre><code>&lt;FodPagination Count=\"10\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Size=\"FodSize.Large\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#forma-rectangulara","title":"Form\u0103 rectangular\u0103","text":"<pre><code>&lt;FodPagination Count=\"12\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Rectangular=\"true\"\n               Variant=\"FodVariant.Filled\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#control-asupra-afisarii-paginilor","title":"Control asupra afi\u0219\u0103rii paginilor","text":"<pre><code>&lt;!-- Afi\u0219eaz\u0103 mai multe pagini la margini --&gt;\n&lt;FodPagination Count=\"50\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               BoundaryCount=\"3\"\n               MiddleCount=\"5\" /&gt;\n\n&lt;!-- Afi\u0219are minim\u0103 pentru spa\u021biu redus --&gt;\n&lt;FodPagination Count=\"100\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               BoundaryCount=\"1\"\n               MiddleCount=\"1\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-cu-iconite-personalizate","title":"Paginare cu iconi\u021be personalizate","text":"<pre><code>&lt;FodPagination Count=\"20\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               ShowFirstButton=\"true\"\n               ShowLastButton=\"true\"\n               FirstIcon=\"@FodIcons.Material.Filled.SkipPrevious\"\n               PreviousIcon=\"@FodIcons.Material.Filled.KeyboardArrowLeft\"\n               NextIcon=\"@FodIcons.Material.Filled.KeyboardArrowRight\"\n               LastIcon=\"@FodIcons.Material.Filled.SkipNext\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#integrare-cu-tabel-de-date","title":"Integrare cu tabel de date","text":"<pre><code>&lt;FodDataTable Items=\"@products\" Context=\"product\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Pre\u021b&lt;/FodTh&gt;\n            &lt;FodTh&gt;Stoc&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@product.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@product.Price.ToString(\"C\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@product.Stock&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n&lt;div class=\"mt-4 d-flex justify-content-center\"&gt;\n    &lt;FodPagination Count=\"@totalPages\" \n                   Selected=\"@currentPage\"\n                   SelectedChanged=\"@LoadPage\"\n                   Variant=\"FodVariant.Filled\"\n                   ShowFirstButton=\"true\"\n                   ShowLastButton=\"true\" /&gt;\n&lt;/div&gt;\n\n@code {\n    private List&lt;Product&gt; products = new();\n    private int currentPage = 1;\n    private int pageSize = 10;\n    private int totalPages;\n    private int totalItems;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadPage(1);\n    }\n\n    private async Task LoadPage(int page)\n    {\n        currentPage = page;\n        var result = await ProductService.GetProductsAsync(page, pageSize);\n        products = result.Items;\n        totalItems = result.TotalCount;\n        totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-in-card","title":"Paginare \u00een card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;Lista utilizatori&lt;/FodText&gt;\n\n        @foreach (var user in currentPageUsers)\n        {\n            &lt;div class=\"user-item pa-2\"&gt;\n                &lt;FodText&gt;@user.Name - @user.Email&lt;/FodText&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions Class=\"justify-content-center\"&gt;\n        &lt;FodPagination Count=\"@totalPages\" \n                       Selected=\"@currentPage\"\n                       SelectedChanged=\"@ChangePage\"\n                       Size=\"FodSize.Small\"\n                       Variant=\"FodVariant.Text\" /&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-cu-informatii-despre-rezultate","title":"Paginare cu informa\u021bii despre rezultate","text":"<pre><code>&lt;div class=\"results-container\"&gt;\n    &lt;div class=\"d-flex justify-content-between align-items-center mb-3\"&gt;\n        &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n            Afi\u0219are @startItem - @endItem din @totalItems rezultate\n        &lt;/FodText&gt;\n        &lt;FodPagination Count=\"@totalPages\" \n                       Selected=\"@currentPage\"\n                       SelectedChanged=\"@HandlePageChange\"\n                       Size=\"FodSize.Small\" /&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Rezultate --&gt;\n    &lt;div class=\"results\"&gt;\n        @foreach (var item in currentResults)\n        {\n            &lt;!-- Afi\u0219are rezultat --&gt;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private int startItem =&gt; (currentPage - 1) * pageSize + 1;\n    private int endItem =&gt; Math.Min(currentPage * pageSize, totalItems);\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-dezactivata","title":"Paginare dezactivat\u0103","text":"<pre><code>&lt;FodPagination Count=\"10\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@HandlePageChange\"\n               Disabled=\"@isLoading\" /&gt;\n\n@code {\n    private bool isLoading = false;\n\n    private async Task HandlePageChange(int page)\n    {\n        isLoading = true;\n        currentPage = page;\n        await LoadData(page);\n        isLoading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-intr-un-modal","title":"Paginare \u00eentr-un modal","text":"<pre><code>&lt;FodModal Show=\"@showModal\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Selecta\u021bi un element&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodList&gt;\n                @foreach (var item in modalItems)\n                {\n                    &lt;FodListItem Text=\"@item.Name\" \n                                 OnClick=\"@(() =&gt; SelectItem(item))\" /&gt;\n                }\n            &lt;/FodList&gt;\n        &lt;/FodModalBody&gt;\n        &lt;FodModalFooter&gt;\n            &lt;FodPagination Count=\"@modalTotalPages\" \n                           Selected=\"@modalCurrentPage\"\n                           SelectedChanged=\"@LoadModalPage\"\n                           Size=\"FodSize.Small\"\n                           Variant=\"FodVariant.Text\" /&gt;\n        &lt;/FodModalFooter&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-cu-state-management","title":"Paginare cu state management","text":"<pre><code>@implements IDisposable\n@inject NavigationManager Navigation\n\n&lt;FodPagination Count=\"@totalPages\" \n               Selected=\"@currentPage\"\n               SelectedChanged=\"@NavigateToPage\" /&gt;\n\n@code {\n    protected override void OnInitialized()\n    {\n        // Extrage pagina din URL\n        var uri = new Uri(Navigation.Uri);\n        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);\n        if (int.TryParse(query[\"page\"], out int page))\n        {\n            currentPage = page;\n        }\n    }\n\n    private void NavigateToPage(int page)\n    {\n        currentPage = page;\n        var uri = Navigation.GetUriWithQueryParameter(\"page\", page);\n        Navigation.NavigateTo(uri);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Count</code> <code>int</code> Num\u0103rul total de pagini - <code>Selected</code> <code>int</code> Pagina curent selectat\u0103 - <code>SelectedChanged</code> <code>EventCallback&lt;int&gt;</code> Eveniment la schimbarea paginii - <code>BoundaryCount</code> <code>int</code> Num\u0103r pagini afi\u0219ate la \u00eenceput/sf\u00e2r\u0219it <code>2</code> <code>MiddleCount</code> <code>int</code> Num\u0103r pagini afi\u0219ate \u00een jurul celei selectate <code>3</code> <code>Variant</code> <code>FodVariant</code> Stilul vizual (Text/Filled/Outlined) <code>Text</code> <code>Color</code> <code>FodColor</code> Culoarea temei <code>Primary</code> <code>Size</code> <code>FodSize</code> Dimensiunea componentei <code>Medium</code> <code>Rectangular</code> <code>bool</code> Col\u021buri drepte \u00een loc de rotunjite <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 toate interac\u021biunile <code>false</code> <code>ShowFirstButton</code> <code>bool</code> Afi\u0219eaz\u0103 butonul First <code>false</code> <code>ShowLastButton</code> <code>bool</code> Afi\u0219eaz\u0103 butonul Last <code>false</code> <code>ShowPreviousButton</code> <code>bool</code> Afi\u0219eaz\u0103 butonul Previous <code>true</code> <code>ShowNextButton</code> <code>bool</code> Afi\u0219eaz\u0103 butonul Next <code>true</code> <code>DisableElevation</code> <code>bool</code> Elimin\u0103 umbra (pentru Filled) <code>false</code> <code>FirstIcon</code> <code>string</code> Iconi\u021ba pentru First <code>ChevronDoubleLeft</code> <code>PreviousIcon</code> <code>string</code> Iconi\u021ba pentru Previous <code>ChevronLeft</code> <code>NextIcon</code> <code>string</code> Iconi\u021ba pentru Next <code>ChevronRight</code> <code>LastIcon</code> <code>string</code> Iconi\u021ba pentru Last <code>ChevronDoubleRight</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodPagination/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>SelectedChanged</code> <code>EventCallback&lt;int&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd utilizatorul selecteaz\u0103 o pagin\u0103"},{"location":"fod/componente/FodPagination/#5-metode-private","title":"5. Metode private","text":"<p>Componenta nu expune metode publice, toate interac\u021biunile se fac prin evenimente.</p>"},{"location":"fod/componente/FodPagination/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Paginare cu spa\u021biere customizat\u0103 */\n.custom-pagination {\n    gap: 1rem;\n}\n\n.custom-pagination .fod-pagination-item {\n    min-width: 48px;\n    height: 48px;\n}\n\n/* Paginare compact\u0103 pentru mobile */\n@media (max-width: 600px) {\n    .mobile-pagination .fod-pagination-item-first,\n    .mobile-pagination .fod-pagination-item-last {\n        display: none;\n    }\n\n    .mobile-pagination .fod-pagination-item {\n        min-width: 36px;\n        height: 36px;\n        font-size: 0.875rem;\n    }\n}\n\n/* Stilizare pentru dark mode */\n.dark-theme .fod-pagination-item {\n    background-color: var(--fod-palette-background-paper);\n    color: var(--fod-palette-text-primary);\n}\n\n.dark-theme .fod-pagination-item:hover {\n    background-color: var(--fod-palette-action-hover);\n}\n\n/* Paginare cu accent diferit */\n.accent-pagination .fod-pagination-item.selected {\n    background-color: var(--fod-palette-secondary-main);\n    color: var(--fod-palette-secondary-contrastText);\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodPagination/#cu-foddatatable","title":"Cu FodDataTable","text":"<pre><code>&lt;FodDataTable Items=\"@items\" \n              ShowPagination=\"true\"\n              PageSize=\"20\"&gt;\n    &lt;!-- Con\u021binut tabel --&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#cu-liste-infinite","title":"Cu liste infinite","text":"<pre><code>&lt;div class=\"infinite-list\"&gt;\n    &lt;FodList&gt;\n        @foreach (var item in visibleItems)\n        {\n            &lt;FodListItem Text=\"@item.Name\" /&gt;\n        }\n    &lt;/FodList&gt;\n\n    @if (hasMorePages)\n    {\n        &lt;div class=\"text-center pa-4\"&gt;\n            &lt;FodButton OnClick=\"LoadMore\" \n                       Variant=\"FodVariant.Text\"&gt;\n                \u00cencarc\u0103 mai multe\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;FodPagination Count=\"@totalPages\" \n                   Selected=\"@currentPage\"\n                   SelectedChanged=\"@GoToPage\"\n                   Size=\"FodSize.Small\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodPagination/#paginare-cu-loading-state","title":"Paginare cu loading state","text":"<pre><code>&lt;div class=\"@(isLoading ? \"loading-overlay\" : \"\")\"&gt;\n    &lt;FodPagination Count=\"@totalPages\" \n                   Selected=\"@currentPage\"\n                   SelectedChanged=\"@HandlePageChange\"\n                   Disabled=\"@isLoading\" /&gt;\n&lt;/div&gt;\n\n@if (isLoading)\n{\n    &lt;FodProgress Indeterminate=\"true\" /&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#paginare-cu-dimensiune-pagina-selectabila","title":"Paginare cu dimensiune pagin\u0103 selectabil\u0103","text":"<pre><code>&lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n    &lt;FodSelect @bind-Value=\"pageSize\" \n               Label=\"Rezultate per pagin\u0103\"\n               Style=\"width: 120px;\"&gt;\n        &lt;FodSelectItem Value=\"10\"&gt;10&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"25\"&gt;25&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"50\"&gt;50&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"100\"&gt;100&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n\n    &lt;FodPagination Count=\"@totalPages\" \n                   Selected=\"@currentPage\"\n                   SelectedChanged=\"@HandlePageChange\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPagination/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Componenta calculeaz\u0103 eficient paginile vizibile</li> <li>Folose\u0219te <code>@key</code> pentru optimizarea rand\u0103rii</li> <li>Minimizeaz\u0103 re-rand\u0103rile prin memorarea st\u0103rii</li> <li>Responsive prin CSS, nu JavaScript</li> </ul>"},{"location":"fod/componente/FodPagination/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Atribute ARIA pentru screen readers</li> <li><code>aria-label</code> descriptiv pentru fiecare buton</li> <li><code>aria-current=\"page\"</code> pentru pagina selectat\u0103</li> <li>Navigare cu tastatur\u0103 complet\u0103</li> <li>Focus vizibil pentru navigare</li> </ul>"},{"location":"fod/componente/FodPagination/#11-note-tehnice","title":"11. Note tehnice","text":"<ul> <li>Calculul ellipsis-ului este inteligent \u0219i adaptiv</li> <li>Suport\u0103 p\u00e2n\u0103 la 999999 pagini</li> <li>Func\u021bioneaz\u0103 corect cu RTL</li> <li>Responsive f\u0103r\u0103 JavaScript adi\u021bional</li> </ul>"},{"location":"fod/componente/FodPagination/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>P\u0103stra\u021bi starea \u00een URL - Pentru navigare \u00eenapoi/\u00eenainte</li> <li>Loading states - Dezactiva\u021bi \u00een timpul \u00eenc\u0103rc\u0103rii</li> <li>Dimensiune pagin\u0103 - Oferi\u021bi op\u021biuni utilizatorului</li> <li>Mobile first - Folosi\u021bi Size.Small pe mobile</li> <li>Feedback vizual - Indica\u021bi clar pagina curent\u0103</li> <li>Limite rezonabile - Nu afi\u0219a\u021bi mii de pagini</li> </ol>"},{"location":"fod/componente/FodPagination/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodPagination/#paginarea-nu-raspunde-la-click","title":"Paginarea nu r\u0103spunde la click","text":"<ul> <li>Verifica\u021bi c\u0103 SelectedChanged este conectat</li> <li>Verifica\u021bi c\u0103 nu este Disabled</li> <li>Verifica\u021bi c\u0103 Selected este \u00een intervalul 1-Count</li> </ul>"},{"location":"fod/componente/FodPagination/#layout-ul-se-strica-pe-mobile","title":"Layout-ul se stric\u0103 pe mobile","text":"<ul> <li>Folosi\u021bi Size=\"FodSize.Small\"</li> <li>Reduce\u021bi BoundaryCount \u0219i MiddleCount</li> <li>Considera\u021bi ascunderea First/Last buttons</li> </ul>"},{"location":"fod/componente/FodPagination/#performanta-slaba-cu-multe-pagini","title":"Performan\u021b\u0103 slab\u0103 cu multe pagini","text":"<ul> <li>Verifica\u021bi c\u0103 nu re-randa\u021bi excesiv</li> <li>Folosi\u021bi paginare virtual\u0103 pentru seturi foarte mari</li> <li>Considera\u021bi lazy loading</li> </ul>"},{"location":"fod/componente/FodPagination/#14-exemple-complexe","title":"14. Exemple complexe","text":""},{"location":"fod/componente/FodPagination/#sistem-complet-de-paginare","title":"Sistem complet de paginare","text":"<pre><code>@page \"/products\"\n@inject IProductService ProductService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Catalog Produse\n    &lt;/FodText&gt;\n\n    &lt;!-- Filtre \u0219i sortare --&gt;\n    &lt;FodPaper Class=\"pa-3 mb-4\"&gt;\n        &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;FodSelect @bind-Value=\"sortBy\" Label=\"Sortare\"&gt;\n                    &lt;FodSelectItem Value=\"name\"&gt;Nume&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"price\"&gt;Pre\u021b&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"date\"&gt;Dat\u0103&lt;/FodSelectItem&gt;\n                &lt;/FodSelect&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;FodSelect @bind-Value=\"pageSize\" \n                           Label=\"Produse per pagin\u0103\"\n                           SelectedValuesChanged=\"@(() =&gt; LoadProducts(1))\"&gt;\n                    &lt;FodSelectItem Value=\"12\"&gt;12&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"24\"&gt;24&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"48\"&gt;48&lt;/FodSelectItem&gt;\n                &lt;/FodSelect&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodPaper&gt;\n\n    &lt;!-- Grid produse --&gt;\n    @if (isLoading)\n    {\n        &lt;FodProgress Indeterminate=\"true\" /&gt;\n    }\n    else\n    {\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            @foreach (var product in products)\n            {\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\"&gt;\n                    &lt;ProductCard Product=\"@product\" /&gt;\n                &lt;/FodGrid&gt;\n            }\n        &lt;/FodGrid&gt;\n\n        &lt;!-- Paginare --&gt;\n        &lt;div class=\"mt-5 d-flex flex-column align-items-center\"&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\" GutterBottom=\"true\"&gt;\n                Afi\u0219are @startItem - @endItem din @totalItems produse\n            &lt;/FodText&gt;\n            &lt;FodPagination Count=\"@totalPages\" \n                           Selected=\"@currentPage\"\n                           SelectedChanged=\"@LoadProducts\"\n                           Variant=\"FodVariant.Filled\"\n                           ShowFirstButton=\"@(totalPages &gt; 10)\"\n                           ShowLastButton=\"@(totalPages &gt; 10)\"\n                           BoundaryCount=\"@(IsMobile ? 1 : 2)\"\n                           MiddleCount=\"@(IsMobile ? 1 : 3)\"\n                           Size=\"@(IsMobile ? FodSize.Small : FodSize.Medium)\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    private List&lt;Product&gt; products = new();\n    private int currentPage = 1;\n    private int pageSize = 24;\n    private int totalPages;\n    private int totalItems;\n    private string sortBy = \"name\";\n    private bool isLoading;\n\n    private int startItem =&gt; (currentPage - 1) * pageSize + 1;\n    private int endItem =&gt; Math.Min(currentPage * pageSize, totalItems);\n    private bool IsMobile =&gt; /* logica pentru detectare mobile */;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Restaureaz\u0103 din query string\n        var uri = new Uri(Navigation.Uri);\n        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);\n\n        if (int.TryParse(query[\"page\"], out int page))\n            currentPage = page;\n        if (int.TryParse(query[\"size\"], out int size))\n            pageSize = size;\n        if (!string.IsNullOrEmpty(query[\"sort\"]))\n            sortBy = query[\"sort\"];\n\n        await LoadProducts(currentPage);\n    }\n\n    private async Task LoadProducts(int page)\n    {\n        isLoading = true;\n        StateHasChanged();\n\n        try\n        {\n            currentPage = page;\n\n            // Actualizeaz\u0103 URL\n            var uri = Navigation.GetUriWithQueryParameters(new Dictionary&lt;string, object&gt;\n            {\n                [\"page\"] = page,\n                [\"size\"] = pageSize,\n                [\"sort\"] = sortBy\n            });\n            Navigation.NavigateTo(uri, replace: true);\n\n            // \u00cencarc\u0103 date\n            var result = await ProductService.GetProductsAsync(\n                page: page,\n                pageSize: pageSize,\n                sortBy: sortBy\n            );\n\n            products = result.Items;\n            totalItems = result.TotalCount;\n            totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);\n        }\n        finally\n        {\n            isLoading = false;\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPagination/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodPagination</code> ofer\u0103 o solu\u021bie complet\u0103 pentru navigarea \u00eentre pagini, cu suport pentru diferite stiluri vizuale, dimensiuni \u0219i configur\u0103ri. Componenta este optimizat\u0103 pentru performan\u021b\u0103, accesibilitate \u0219i responsive design, f\u0103c\u00e2nd-o ideal\u0103 pentru orice aplica\u021bie care necesit\u0103 paginare.</p>"},{"location":"fod/componente/FodPaper/","title":"Paper","text":""},{"location":"fod/componente/FodPaper/#documentatie-pentru-componenta-fodpaper","title":"Documenta\u021bie pentru componenta FodPaper","text":""},{"location":"fod/componente/FodPaper/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodPaper</code> este o component\u0103 container fundamental\u0103 care ofer\u0103 o suprafa\u021b\u0103 elevat\u0103 pentru con\u021binut, urm\u00e2nd principiile Material Design. Serve\u0219te ca baz\u0103 pentru organizarea vizual\u0103 a con\u021binutului prin crearea de sec\u021biuni distincte cu umbre \u0219i borduri.</p> <p>Caracteristici principale: - Sistem de eleva\u021bie cu 26 nivele (0-25) - Suport pentru stilizare cu umbr\u0103 sau bordur\u0103 - Control complet asupra dimensiunilor - Col\u021buri rotunjite sau p\u0103trate - Integrare perfect\u0103 cu tema aplica\u021biei - Component\u0103 wrapper flexibil\u0103 - Performan\u021b\u0103 optimizat\u0103</p>"},{"location":"fod/componente/FodPaper/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodPaper/#paper-de-baza","title":"Paper de baz\u0103","text":"<pre><code>&lt;FodPaper Class=\"pa-4\"&gt;\n    &lt;FodText&gt;Con\u021binut \u00eentr-un container Paper simplu&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-cu-diferite-nivele-de-elevatie","title":"Paper cu diferite nivele de eleva\u021bie","text":"<pre><code>&lt;!-- F\u0103r\u0103 eleva\u021bie (plat) --&gt;\n&lt;FodPaper Elevation=\"0\" Class=\"pa-4 ma-2\"&gt;\n    &lt;FodText&gt;Suprafa\u021b\u0103 plat\u0103 - Eleva\u021bie 0&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Eleva\u021bie mic\u0103 --&gt;\n&lt;FodPaper Elevation=\"1\" Class=\"pa-4 ma-2\"&gt;\n    &lt;FodText&gt;Eleva\u021bie minim\u0103 - Nivel 1 (implicit)&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Eleva\u021bie medie --&gt;\n&lt;FodPaper Elevation=\"8\" Class=\"pa-4 ma-2\"&gt;\n    &lt;FodText&gt;Eleva\u021bie medie - Nivel 8&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Eleva\u021bie mare --&gt;\n&lt;FodPaper Elevation=\"16\" Class=\"pa-4 ma-2\"&gt;\n    &lt;FodText&gt;Eleva\u021bie \u00eenalt\u0103 - Nivel 16&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Eleva\u021bie maxim\u0103 --&gt;\n&lt;FodPaper Elevation=\"25\" Class=\"pa-4 ma-2\"&gt;\n    &lt;FodText&gt;Eleva\u021bie maxim\u0103 - Nivel 25&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-cu-bordura-outlined","title":"Paper cu bordur\u0103 (outlined)","text":"<pre><code>&lt;FodPaper Outlined=\"true\" Class=\"pa-4\"&gt;\n    &lt;FodText&gt;Paper cu bordur\u0103 \u00een loc de umbr\u0103&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Combina\u021bie outlined \u0219i square --&gt;\n&lt;FodPaper Outlined=\"true\" Square=\"true\" Class=\"pa-4\"&gt;\n    &lt;FodText&gt;Paper cu bordur\u0103 \u0219i col\u021buri drepte&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-cu-dimensiuni-specifice","title":"Paper cu dimensiuni specifice","text":"<pre><code>&lt;!-- Dimensiuni fixe --&gt;\n&lt;FodPaper Width=\"300px\" Height=\"200px\" Class=\"pa-4\"&gt;\n    &lt;FodText&gt;Paper cu dimensiuni fixe&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- Dimensiuni responsive --&gt;\n&lt;FodPaper Width=\"100%\" MaxWidth=\"600px\" MinHeight=\"150px\" Class=\"pa-4\"&gt;\n    &lt;FodText&gt;Paper responsive cu limite&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n&lt;!-- \u00cen\u0103l\u021bime variabil\u0103 --&gt;\n&lt;FodPaper MinHeight=\"200px\" MaxHeight=\"400px\" Class=\"pa-4\" Style=\"overflow-y: auto;\"&gt;\n    &lt;FodText&gt;Paper cu scroll vertical c\u00e2nd con\u021binutul dep\u0103\u0219e\u0219te limita&lt;/FodText&gt;\n    &lt;!-- Con\u021binut lung aici --&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-pentru-formulare","title":"Paper pentru formulare","text":"<pre><code>&lt;FodPaper Elevation=\"2\" Class=\"pa-6 ma-4\"&gt;\n    &lt;FodText Typo=\"Typo.h5\" Class=\"mb-4\"&gt;Formular \u00eenregistrare&lt;/FodText&gt;\n\n    &lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n        &lt;FodTextField @bind-Value=\"model.Name\" \n                      Label=\"Nume complet\" \n                      Required=\"true\" \n                      Class=\"mb-3\" /&gt;\n\n        &lt;FodTextField @bind-Value=\"model.Email\" \n                      Label=\"Email\" \n                      Type=\"email\" \n                      Required=\"true\" \n                      Class=\"mb-3\" /&gt;\n\n        &lt;FodButton Type=\"submit\" \n                   Variant=\"FodVariant.Filled\" \n                   Color=\"FodColor.Primary\"&gt;\n            \u00cenregistreaz\u0103-te\n        &lt;/FodButton&gt;\n    &lt;/EditForm&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-pentru-carduri-de-produs","title":"Paper pentru carduri de produs","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    @foreach (var product in products)\n    {\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\"&gt;\n            &lt;FodPaper Elevation=\"4\" Class=\"pa-0\" Style=\"height: 100%;\"&gt;\n                &lt;img src=\"@product.ImageUrl\" alt=\"@product.Name\" \n                     style=\"width: 100%; height: 200px; object-fit: cover;\" /&gt;\n\n                &lt;div class=\"pa-4\"&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;@product.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.body2\" Class=\"text-muted\"&gt;\n                        @product.Description\n                    &lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.h5\" Class=\"mt-2\"&gt;\n                        @product.Price.ToString(\"C\")\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/FodPaper&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-pentru-sectiuni-dashboard","title":"Paper pentru sec\u021biuni dashboard","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    &lt;!-- Statistici --&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n        &lt;FodPaper Elevation=\"2\" Class=\"pa-4 text-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.People\" \n                     Size=\"Size.Large\" \n                     Color=\"FodColor.Primary\" /&gt;\n            &lt;FodText Typo=\"Typo.h4\"&gt;1,234&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.subtitle2\"&gt;Utilizatori activi&lt;/FodText&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;!-- Grafic --&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"9\"&gt;\n        &lt;FodPaper Elevation=\"2\" Class=\"pa-4\" Height=\"300px\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Evolu\u021bie v\u00e2nz\u0103ri&lt;/FodText&gt;\n            &lt;!-- Component grafic aici --&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-cu-hover-effect","title":"Paper cu hover effect","text":"<pre><code>&lt;FodPaper Class=\"pa-4 hover-elevation\" \n          Elevation=\"2\" \n          Style=\"transition: all 0.3s ease; cursor: pointer;\"\n          @onmouseover=\"@(() =&gt; hoverElevation = 8)\"\n          @onmouseout=\"@(() =&gt; hoverElevation = 2)\"\n          Elevation=\"@hoverElevation\"&gt;\n    &lt;FodText&gt;Paper cu efect la hover&lt;/FodText&gt;\n&lt;/FodPaper&gt;\n\n@code {\n    private int hoverElevation = 2;\n}\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-pentru-notificarialerte","title":"Paper pentru notific\u0103ri/alerte","text":"<pre><code>&lt;FodPaper Elevation=\"6\" \n          Class=\"pa-4 ma-2\" \n          Style=\"border-left: 4px solid var(--fod-palette-warning);\"&gt;\n    &lt;div class=\"d-flex align-items-start\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Warning\" \n                 Color=\"FodColor.Warning\" \n                 Class=\"me-3\" /&gt;\n        &lt;div&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\"&gt;Aten\u021bie!&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Sesiunea dvs. va expira \u00een 5 minute.\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-pentru-layout-complex","title":"Paper pentru layout complex","text":"<pre><code>&lt;FodPaper Elevation=\"0\" Class=\"d-flex\" Height=\"400px\"&gt;\n    &lt;!-- Sidebar --&gt;\n    &lt;FodPaper Square=\"true\" \n              Outlined=\"true\" \n              Class=\"pa-4\" \n              Width=\"200px\"\n              Style=\"border-right: 1px solid var(--fod-palette-lines-default);\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Meniu&lt;/FodText&gt;\n        &lt;!-- Elemente meniu --&gt;\n    &lt;/FodPaper&gt;\n\n    &lt;!-- Content --&gt;\n    &lt;div class=\"flex-grow-1 pa-4\"&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Con\u021binut principal&lt;/FodText&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/div&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Elevation</code> <code>int</code> Nivelul de eleva\u021bie (0-25) <code>1</code> <code>Square</code> <code>bool</code> Elimin\u0103 col\u021burile rotunjite <code>false</code> <code>Outlined</code> <code>bool</code> Folose\u0219te bordur\u0103 \u00een loc de umbr\u0103 <code>false</code> <code>Height</code> <code>string</code> \u00cen\u0103l\u021bimea componentei <code>null</code> <code>Width</code> <code>string</code> L\u0103\u021bimea componentei <code>null</code> <code>MaxHeight</code> <code>string</code> \u00cen\u0103l\u021bimea maxim\u0103 <code>null</code> <code>MaxWidth</code> <code>string</code> L\u0103\u021bimea maxim\u0103 <code>null</code> <code>MinHeight</code> <code>string</code> \u00cen\u0103l\u021bimea minim\u0103 <code>null</code> <code>MinWidth</code> <code>string</code> L\u0103\u021bimea minim\u0103 <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul componentei <code>null</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodPaper/#4-nivele-de-elevatie","title":"4. Nivele de eleva\u021bie","text":"Nivel Utilizare recomandat\u0103 0 Suprafe\u021be plate, f\u0103r\u0103 separare vizual\u0103 1-3 Carduri simple, containere de baz\u0103 4-6 Carduri interactive, butoane ridicate 8-12 Dialoguri, modale, meniuri dropdown 16-24 Componente temporare deasupra con\u021binutului 25 Eleva\u021bie maxim\u0103 pentru accent special"},{"location":"fod/componente/FodPaper/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":""},{"location":"fod/componente/FodPaper/#variabile-css-disponibile","title":"Variabile CSS disponibile","text":"<pre><code>/* Personalizare global\u0103 Paper */\n:root {\n    --fod-paper-background: #ffffff;\n    --fod-paper-border-radius: 4px;\n    --fod-paper-border-color: #e0e0e0;\n}\n\n/* Paper personalizat pentru dark mode */\n.dark-theme .fod-paper {\n    --fod-palette-surface: #1e1e1e;\n    --fod-palette-lines-default: #333333;\n}\n\n/* Stiluri pentru diferite utiliz\u0103ri */\n.info-paper {\n    background-color: #e3f2fd !important;\n    border-left: 4px solid #2196f3;\n}\n\n.success-paper {\n    background-color: #e8f5e9 !important;\n    border-left: 4px solid #4caf50;\n}\n\n/* Anima\u021bii pentru interactivitate */\n.interactive-paper {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.interactive-paper:hover {\n    transform: translateY(-2px);\n}\n</code></pre>"},{"location":"fod/componente/FodPaper/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodPaper/#paper-in-grid-system","title":"Paper \u00een Grid System","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n        &lt;FodPaper Elevation=\"2\" Class=\"pa-4 h-100\"&gt;\n            &lt;!-- Con\u021binut coloan\u0103 st\u00e2nga --&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodGrid&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n        &lt;FodPaper Elevation=\"2\" Class=\"pa-4 h-100\"&gt;\n            &lt;!-- Con\u021binut coloan\u0103 dreapta --&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#paper-ca-fundal-pentru-tabele","title":"Paper ca fundal pentru tabele","text":"<pre><code>&lt;FodPaper Elevation=\"1\" Class=\"pa-0\"&gt;\n    &lt;FodDataTable Items=\"data\" Dense=\"true\"&gt;\n        &lt;!-- Configura\u021bie tabel --&gt;\n    &lt;/FodDataTable&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#7-patterns-comune-de-utilizare","title":"7. Patterns comune de utilizare","text":""},{"location":"fod/componente/FodPaper/#container-pentru-sectiuni","title":"Container pentru sec\u021biuni","text":"<pre><code>&lt;FodPaper Elevation=\"0\" Outlined=\"true\" Class=\"mb-4 pa-4\"&gt;\n    &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Titlu sec\u021biune&lt;/FodText&gt;\n    &lt;!-- Con\u021binut sec\u021biune --&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#wrapper-pentru-componente-complexe","title":"Wrapper pentru componente complexe","text":"<pre><code>&lt;FodPaper Elevation=\"4\" Class=\"overflow-hidden\"&gt;\n    &lt;!-- Header --&gt;\n    &lt;div class=\"pa-4 bg-primary text-white\"&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Header&lt;/FodText&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Body --&gt;\n    &lt;div class=\"pa-4\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Footer --&gt;\n    &lt;div class=\"pa-4 bg-grey-lighten-4\"&gt;\n        &lt;!-- Ac\u021biuni --&gt;\n    &lt;/div&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/FodPaper/#8-performanta","title":"8. Performan\u021b\u0103","text":"<ul> <li>Paper este o component\u0103 lightweight</li> <li>Umbra este aplicat\u0103 prin CSS, nu imagini</li> <li>Folosi\u021bi <code>Elevation=\"0\"</code> pentru suprafe\u021be care nu necesit\u0103 ad\u00e2ncime</li> <li><code>Outlined=\"true\"</code> este mai performant dec\u00e2t eleva\u021bia pentru liste mari</li> </ul>"},{"location":"fod/componente/FodPaper/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Paper accept\u0103 toate atributele ARIA prin UserAttributes</li> <li>Folosi\u021bi role=\"region\" \u0219i aria-label pentru sec\u021biuni importante</li> <li>Asigura\u021bi contrast adecvat pentru con\u021binutul din interior</li> </ul>"},{"location":"fod/componente/FodPaper/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Eleva\u021bia nu afecteaz\u0103 z-index-ul, doar umbra vizual\u0103</li> <li>Square elimin\u0103 doar border-radius, nu afecteaz\u0103 padding</li> <li>Outlined \u0219i Elevation sunt mutual exclusive (outlined are prioritate)</li> <li>Paper mo\u0219tene\u0219te culoarea de fundal din tem\u0103</li> </ul>"},{"location":"fod/componente/FodPaper/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Consisten\u021b\u0103 - Folosi\u021bi nivele de eleva\u021bie consistente \u00een aplica\u021bie</li> <li>Ierarhie - Eleva\u021bie mai mare = importan\u021b\u0103 mai mare</li> <li>Spa\u021biere - Folosi\u021bi clase de padding pentru spa\u021biere intern\u0103</li> <li>Performan\u021b\u0103 - Nu abuza\u021bi de eleva\u021bii mari pentru elemente multe</li> <li>Semantic\u0103 - Paper este pentru organizare vizual\u0103, nu structur\u0103</li> </ol>"},{"location":"fod/componente/FodPaper/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodPaper/#paper-nu-afiseaza-umbra","title":"Paper nu afi\u0219eaz\u0103 umbra","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Outlined</code> nu este <code>true</code></li> <li>Verifica\u021bi c\u0103 <code>Elevation</code> este \u00eentre 1-25</li> <li>Verifica\u021bi c\u0103 tema include variabilele de eleva\u021bie</li> </ul>"},{"location":"fod/componente/FodPaper/#colturile-nu-sunt-rotunjite","title":"Col\u021burile nu sunt rotunjite","text":"<ul> <li>Verifica\u021bi c\u0103 <code>Square</code> nu este <code>true</code></li> <li>Verifica\u021bi variabila <code>--fod-default-borderradius</code></li> </ul>"},{"location":"fod/componente/FodPaper/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodPaper</code> este o component\u0103 fundamental\u0103 pentru crearea de interfe\u021be cu ad\u00e2ncime \u0219i organizare vizual\u0103 clar\u0103. Simplitatea \u0219i flexibilitatea sa o fac ideal\u0103 pentru o varietate larg\u0103 de scenarii, de la simple containere p\u00e2n\u0103 la layout-uri complexe.</p>"},{"location":"fod/componente/FodPerson/","title":"FodPerson","text":""},{"location":"fod/componente/FodPerson/#documentatie-pentru-componenta-fodperson","title":"Documenta\u021bie pentru componenta FodPerson","text":""},{"location":"fod/componente/FodPerson/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodPerson</code> este o component\u0103 business complex\u0103 pentru gestionarea datelor personale (IDNP, nume, prenume) cu validare \u0219i auto-populare din serviciile guvernamentale RSP. Componenta ofer\u0103 multiple moduri de func\u021bionare pentru diferite scenarii de utilizare.</p> <p>Caracteristici principale: - C\u00e2mpuri pentru IDNP, nume \u0219i prenume - Validare automat\u0103 a coresponden\u021bei IDNP-nume prin servicii RSP - Auto-populare nume \u0219i prenume pe baza IDNP-ului - Indicatori de \u00eenc\u0103rcare pentru fiecare c\u00e2mp - Gestionare erori de conexiune - Mod readonly flexibil - Evenimente pentru fiecare schimbare de c\u00e2mp</p>"},{"location":"fod/componente/FodPerson/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodPerson/#formular-simplu-de-persoana","title":"Formular simplu de persoan\u0103","text":"<pre><code>&lt;EditForm Model=\"@personModel\"&gt;\n    &lt;FodPerson Model=\"@personModel\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FodPersonModel personModel = new();\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#cu-validare-automata-idnp-nume","title":"Cu validare automat\u0103 IDNP-nume","text":"<pre><code>&lt;FodPerson Model=\"@person\" \n           ValidateNameByIdnp=\"true\" /&gt;\n\n&lt;!-- Afi\u0219eaz\u0103 eroare automat\u0103 dac\u0103 numele nu corespunde cu IDNP --&gt;\n</code></pre>"},{"location":"fod/componente/FodPerson/#cu-auto-populare-nume-din-idnp","title":"Cu auto-populare nume din IDNP","text":"<pre><code>&lt;FodPerson Model=\"@person\" \n           AutoPopulateNameByIdnp=\"true\" /&gt;\n\n&lt;!-- Numele \u0219i prenumele devin readonly \u0219i se completeaz\u0103 automat --&gt;\n</code></pre>"},{"location":"fod/componente/FodPerson/#3-atribute-si-parametri","title":"3. Atribute \u0219i Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Model</code> <code>IPerson</code> Modelul de date pentru persoan\u0103 <code>FodPersonModel</code> <code>IsLoading</code> <code>bool</code> Indic\u0103 stare general\u0103 de \u00eenc\u0103rcare <code>false</code> <code>DisableIdnp</code> <code>bool</code> Dezactiveaz\u0103 c\u00e2mpul IDNP <code>false</code> <code>ValidateNameByIdnp</code> <code>bool</code> Valideaz\u0103 coresponden\u021ba IDNP-nume <code>false</code> <code>AutoPopulateNameByIdnp</code> <code>bool</code> Auto-populeaz\u0103 nume din IDNP <code>false</code> <code>IsReadonly</code> <code>bool</code> Seteaz\u0103 toate c\u00e2mpurile readonly <code>false</code> <code>DisableReadOnlyOnInvalid</code> <code>bool</code> Dezactiveaz\u0103 readonly la validare e\u0219uat\u0103 <code>false</code> <code>IdnpLoading</code> <code>bool</code> Indicator \u00eenc\u0103rcare pentru IDNP <code>false</code> <code>LastNameLoading</code> <code>bool</code> Indicator \u00eenc\u0103rcare pentru nume <code>false</code> <code>FirstNameLoading</code> <code>bool</code> Indicator \u00eenc\u0103rcare pentru prenume <code>false</code> <code>OnIdnpChanged</code> <code>EventCallback&lt;string&gt;</code> Eveniment la schimbare IDNP - <code>OnFirstNameChanged</code> <code>EventCallback&lt;string&gt;</code> Eveniment la schimbare prenume - <code>OnLastNameChanged</code> <code>EventCallback&lt;string&gt;</code> Eveniment la schimbare nume - <code>OnChanged</code> <code>EventCallback</code> Eveniment la orice schimbare -"},{"location":"fod/componente/FodPerson/#4-proprietati-publice","title":"4. Propriet\u0103\u021bi Publice","text":"Proprietate Tip Descriere <code>NameIsInvalid</code> <code>bool</code> Indic\u0103 dac\u0103 numele nu corespunde cu IDNP <code>ConnectionExist</code> <code>bool</code> Indic\u0103 dac\u0103 conexiunea RSP este disponibil\u0103 <code>IsNameValidating</code> <code>bool</code> Indic\u0103 procesul de validare \u00een curs"},{"location":"fod/componente/FodPerson/#5-metode-publice","title":"5. Metode Publice","text":"Metod\u0103 Descriere Return <code>ValidateName()</code> Ini\u021biaz\u0103 validarea manual\u0103 IDNP-nume <code>Task</code>"},{"location":"fod/componente/FodPerson/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/componente/FodPerson/#formular-de-inregistrare-cu-validare","title":"Formular de \u00eenregistrare cu validare","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Date personale\n        &lt;/FodText&gt;\n\n        &lt;EditForm Model=\"@registrationModel\" OnValidSubmit=\"HandleRegistration\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;FodPerson Model=\"@registrationModel.Person\" \n                       ValidateNameByIdnp=\"true\"\n                       OnChanged=\"PersonDataChanged\" /&gt;\n\n            &lt;ValidationSummary /&gt;\n\n            &lt;div class=\"mt-3\"&gt;\n                &lt;FodButton Type=\"ButtonType.Submit\" \n                           Color=\"FodColor.Primary\"\n                           Disabled=\"@(!isValid)\"&gt;\n                    \u00cenregistrare\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private RegistrationModel registrationModel = new();\n    private bool isValid = false;\n\n    private void PersonDataChanged()\n    {\n        // Verific\u0103 dac\u0103 datele sunt complete \u0219i valide\n        isValid = !string.IsNullOrEmpty(registrationModel.Person.IDNP) &amp;&amp;\n                  !string.IsNullOrEmpty(registrationModel.Person.FirstName) &amp;&amp;\n                  !string.IsNullOrEmpty(registrationModel.Person.LastName);\n    }\n\n    private async Task HandleRegistration()\n    {\n        await RegistrationService.RegisterAsync(registrationModel);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#pentru-utilizator-autentificat","title":"Pentru utilizator autentificat","text":"<pre><code>&lt;!-- IDNP preluat din autentificare, doar nume editabile --&gt;\n&lt;FodPerson Model=\"@currentUser\" \n           DisableIdnp=\"true\"\n           AutoPopulateNameByIdnp=\"true\" /&gt;\n\n@code {\n    private PersonModel currentUser = new();\n\n    protected override void OnInitialized()\n    {\n        // IDNP preluat din claims\n        currentUser.IDNP = UserService.GetCurrentUserIdnp();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#wizard-cu-date-personale","title":"Wizard cu date personale","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;Steps&gt;\n        &lt;FodWizardStep Title=\"Date personale\"&gt;\n            &lt;FodPerson Model=\"@applicationData.ApplicantPerson\" \n                       AutoPopulateNameByIdnp=\"true\"\n                       OnChanged=\"@(() =&gt; ValidateStep(1))\" /&gt;\n        &lt;/FodWizardStep&gt;\n\n        &lt;FodWizardStep Title=\"Date contact\"&gt;\n            &lt;!-- Alte date --&gt;\n        &lt;/FodWizardStep&gt;\n    &lt;/Steps&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private ApplicationData applicationData = new();\n\n    private void ValidateStep(int step)\n    {\n        // Validare date pentru pasul curent\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#formular-cu-validare-extinsa","title":"Formular cu validare extins\u0103","text":"<pre><code>&lt;EditForm Model=\"@serviceRequest\" OnValidSubmit=\"SubmitRequest\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n        Solicitant\n    &lt;/FodText&gt;\n\n    &lt;FodPerson @ref=\"personComponent\"\n               Model=\"@serviceRequest.Applicant\" \n               ValidateNameByIdnp=\"true\"\n               DisableReadOnlyOnInvalid=\"true\"\n               OnIdnpChanged=\"CheckExistingRequests\" /&gt;\n\n    @if (hasExistingRequests)\n    {\n        &lt;FodAlert Severity=\"Severity.Warning\" Class=\"mt-3\"&gt;\n            Ave\u021bi cereri \u00een procesare pentru acest IDNP\n        &lt;/FodAlert&gt;\n    }\n\n    &lt;div class=\"mt-4\"&gt;\n        &lt;FodButton Type=\"ButtonType.Submit\" \n                   Color=\"FodColor.Primary\"&gt;\n            Depune cererea\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FodPerson personComponent;\n    private ServiceRequest serviceRequest = new();\n    private bool hasExistingRequests = false;\n\n    private async Task CheckExistingRequests(string idnp)\n    {\n        if (!string.IsNullOrEmpty(idnp) &amp;&amp; idnp.Length == 13)\n        {\n            hasExistingRequests = await RequestService\n                .HasPendingRequestsAsync(idnp);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#cu-indicatori-de-incarcare-personalizati","title":"Cu indicatori de \u00eenc\u0103rcare personaliza\u021bi","text":"<pre><code>&lt;FodPerson Model=\"@person\"\n           AutoPopulateNameByIdnp=\"true\"\n           IdnpLoading=\"@customIdnpLoading\"\n           LastNameLoading=\"@customNameLoading\"\n           FirstNameLoading=\"@customNameLoading\"&gt;\n&lt;/FodPerson&gt;\n\n@if (customIdnpLoading || customNameLoading)\n{\n    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Primary\"&gt;\n        Se verific\u0103 datele \u00een Registrul de Stat al Popula\u021biei...\n    &lt;/FodText&gt;\n}\n\n@code {\n    private PersonModel person = new();\n    private bool customIdnpLoading = false;\n    private bool customNameLoading = false;\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#7-configurare-servicii","title":"7. Configurare Servicii","text":"<p>Componenta necesit\u0103 urm\u0103toarele servicii \u00eenregistrate:</p> <pre><code>// Program.cs\nbuilder.Services.AddScoped&lt;INameService, NameService&gt;();\nbuilder.Services.AddScoped&lt;IPersonComponentService, PersonComponentService&gt;();\n\n// Configurare pentru auto-populare\nbuilder.Services.Configure&lt;FodConfiguration&gt;(options =&gt;\n{\n    options.AllowGetPersonData = true; // Permite accesul la date RSP\n});\n</code></pre>"},{"location":"fod/componente/FodPerson/#8-modele-de-date","title":"8. Modele de Date","text":""},{"location":"fod/componente/FodPerson/#interfata-iperson","title":"Interfa\u021ba IPerson","text":"<pre><code>public interface IPerson\n{\n    string IDNP { get; set; }\n    string FirstName { get; set; }\n    string LastName { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#fodpersonmodel-implicit","title":"FodPersonModel implicit","text":"<pre><code>public class FodPersonModel : IPerson\n{\n    [Required(ErrorMessage = \"IDNP este obligatoriu\")]\n    [StringLength(13, MinimumLength = 13, ErrorMessage = \"IDNP trebuie s\u0103 aib\u0103 13 caractere\")]\n    public string IDNP { get; set; }\n\n    [Required(ErrorMessage = \"Numele este obligatoriu\")]\n    public string LastName { get; set; }\n\n    [Required(ErrorMessage = \"Prenumele este obligatoriu\")]\n    public string FirstName { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#9-stilizare","title":"9. Stilizare","text":"<pre><code>/* Container pentru FodPerson */\n.person-form-container {\n    padding: 1rem;\n    background-color: var(--fod-palette-background-paper);\n}\n\n/* Eviden\u021biere erori */\n.person-form-container .alert-danger {\n    margin-top: 0.5rem;\n    font-size: 0.875rem;\n}\n\n/* Loading overlay pentru c\u00e2mpuri */\n.person-loading-field {\n    position: relative;\n}\n\n.person-loading-field::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0.7);\n}\n</code></pre>"},{"location":"fod/componente/FodPerson/#10-localizare","title":"10. Localizare","text":"<p>Componenta folose\u0219te urm\u0103toarele chei de localizare din resursa <code>General</code>:</p> <ul> <li><code>Error_NameIsInvalid</code> - Mesaj c\u00e2nd numele nu corespunde cu IDNP</li> <li><code>Not_Connection</code> - Mesaj c\u00e2nd conexiunea RSP nu este disponibil\u0103</li> </ul>"},{"location":"fod/componente/FodPerson/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Configurare corect\u0103 - Alege\u021bi modul potrivit: validare sau auto-populare</li> <li>Gestionare erori - Trata\u021bi cazurile de lips\u0103 conexiune RSP</li> <li>Loading states - Folosi\u021bi indicatorii de \u00eenc\u0103rcare pentru UX mai bun</li> <li>Validare suplimentar\u0103 - Ad\u0103uga\u021bi valid\u0103ri specifice domeniului</li> <li>Cache - Considera\u021bi cache pentru date RSP frecvent accesate</li> <li>Securitate - Limita\u021bi accesul la date personale conform GDPR</li> </ol>"},{"location":"fod/componente/FodPerson/#12-integrare-cu-alte-componente","title":"12. Integrare cu alte componente","text":""},{"location":"fod/componente/FodPerson/#in-fodrequestor","title":"\u00cen FodRequestor","text":"<pre><code>&lt;FodRequestor&gt;\n    &lt;PersonContent&gt;\n        &lt;FodPerson Model=\"@requestor.Person\" \n                   AutoPopulateNameByIdnp=\"true\" /&gt;\n    &lt;/PersonContent&gt;\n    &lt;!-- Alte date solicitant --&gt;\n&lt;/FodRequestor&gt;\n</code></pre>"},{"location":"fod/componente/FodPerson/#in-formular-multi-step","title":"\u00cen formular multi-step","text":"<pre><code>&lt;FodExpansionPanels&gt;\n    &lt;FodExpansionPanel Text=\"Date personale\" IsExpanded=\"true\"&gt;\n        &lt;FodPerson Model=\"@formData.Person\" \n                   ValidateNameByIdnp=\"true\" /&gt;\n    &lt;/FodExpansionPanel&gt;\n\n    &lt;FodExpansionPanel Text=\"Date contact\"&gt;\n        &lt;!-- Date contact --&gt;\n    &lt;/FodExpansionPanel&gt;\n&lt;/FodExpansionPanels&gt;\n</code></pre>"},{"location":"fod/componente/FodPerson/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodPerson/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 serviciul INameService este \u00eenregistrat</li> <li>Verifica\u021bi conexiunea la serviciile RSP</li> <li>Verifica\u021bi c\u0103 ValidateNameByIdnp=\"true\"</li> </ul>"},{"location":"fod/componente/FodPerson/#auto-popularea-nu-functioneaza","title":"Auto-popularea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi AllowGetPersonData \u00een configurare</li> <li>Verifica\u021bi permisiunile pentru acces RSP</li> <li>Verifica\u021bi c\u0103 IDNP-ul are 13 caractere</li> </ul>"},{"location":"fod/componente/FodPerson/#campurile-raman-in-loading","title":"C\u00e2mpurile r\u0103m\u00e2n \u00een loading","text":"<ul> <li>Verifica\u021bi timeout-ul pentru serviciile RSP</li> <li>Implementa\u021bi gestionare erori \u00een servicii</li> <li>Ad\u0103uga\u021bi timeout pentru opera\u021biuni</li> </ul>"},{"location":"fod/componente/FodPerson/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodPerson</code> este o component\u0103 esen\u021bial\u0103 pentru gestionarea datelor personale \u00een aplica\u021biile guvernamentale din Moldova. Cu validare integrat\u0103 RSP \u0219i multiple moduri de func\u021bionare, componenta asigur\u0103 colectarea corect\u0103 \u0219i sigur\u0103 a datelor personale conform standardelor oficiale.</p>"},{"location":"fod/componente/FodPopover/","title":"Popover","text":""},{"location":"fod/componente/FodPopover/#documentatie-pentru-componentele-fodpopover-si-fodpopoverprovider","title":"Documenta\u021bie pentru componentele FodPopover \u0219i FodPopoverProvider","text":""},{"location":"fod/componente/FodPopover/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p>Sistemul Popover din FOD ofer\u0103 o infrastructur\u0103 complet\u0103 pentru afi\u0219area con\u021binutului flotant pozi\u021bionat relativ la un element ancor\u0103. Sistemul este format din dou\u0103 componente principale:</p> <ul> <li>FodPopover - Componenta principal\u0103 pentru definirea popover-ului</li> <li>FodPopoverProvider - Provider global care gestioneaz\u0103 toate popover-urile din aplica\u021bie</li> </ul> <p>Caracteristici principale: - Pozi\u021bionare inteligent\u0103 cu overflow behavior - Suport pentru multiple origini de ancorare - Anima\u021bii fluide cu durat\u0103 \u0219i \u00eent\u00e2rziere configurabile - Paper styling cu eleva\u021bie personalizabil\u0103 - Suport pentru l\u0103\u021bime relativ\u0103 la p\u0103rinte - Management centralizat prin service - Integrare cu JSInterop pentru pozi\u021bionare precis\u0103 - Suport RTL (Right-to-Left)</p>"},{"location":"fod/componente/FodPopover/#2-configurare-initiala","title":"2. Configurare ini\u021bial\u0103","text":""},{"location":"fod/componente/FodPopover/#adaugarea-fodpopoverprovider","title":"Ad\u0103ugarea FodPopoverProvider","text":"<pre><code>&lt;!-- \u00cen MainLayout.razor sau App.razor --&gt;\n&lt;FodPopoverProvider /&gt;\n\n@Body\n</code></pre>"},{"location":"fod/componente/FodPopover/#inregistrarea-serviciului","title":"\u00cenregistrarea serviciului","text":"<pre><code>// \u00cen Program.cs\nbuilder.Services.AddFodComponents();\n// sau specific pentru popover\nbuilder.Services.AddScoped&lt;IFodPopoverService, FodPopoverService&gt;();\n</code></pre>"},{"location":"fod/componente/FodPopover/#3-ghid-de-utilizare-api","title":"3. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodPopover/#popover-simplu","title":"Popover simplu","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodButton @onclick=\"@(() =&gt; showPopover = !showPopover)\"&gt;\n        Deschide Popover\n    &lt;/FodButton&gt;\n\n    &lt;FodPopover Open=\"@showPopover\"&gt;\n        &lt;FodPaper Class=\"pa-4\"&gt;\n            &lt;FodText&gt;Acesta este con\u021binutul popover-ului&lt;/FodText&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showPopover = false;\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-pozitionare-personalizata","title":"Popover cu pozi\u021bionare personalizat\u0103","text":"<pre><code>&lt;div style=\"position: relative; display: inline-block;\"&gt;\n    &lt;FodButton @onclick=\"TogglePopover\"&gt;\n        Popover cu pozi\u021bionare\n    &lt;/FodButton&gt;\n\n    &lt;FodPopover Open=\"@isOpen\"\n                AnchorOrigin=\"Origin.BottomCenter\"\n                TransformOrigin=\"Origin.TopCenter\"&gt;\n        &lt;FodList Class=\"py-0\" Style=\"min-width: 200px;\"&gt;\n            &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(1))\"&gt;\n                &lt;FodListItemText Primary=\"Op\u021biunea 1\" /&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(2))\"&gt;\n                &lt;FodListItemText Primary=\"Op\u021biunea 2\" /&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectOption(3))\"&gt;\n                &lt;FodListItemText Primary=\"Op\u021biunea 3\" /&gt;\n            &lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private bool isOpen = false;\n\n    private void TogglePopover() =&gt; isOpen = !isOpen;\n\n    private void SelectOption(int option)\n    {\n        Console.WriteLine($\"Selected: {option}\");\n        isOpen = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-overflow-behavior","title":"Popover cu overflow behavior","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\"\n                   @onclick=\"@(() =&gt; showMenu = !showMenu)\" /&gt;\n\n    &lt;FodPopover Open=\"@showMenu\"\n                AnchorOrigin=\"Origin.TopRight\"\n                TransformOrigin=\"Origin.TopLeft\"\n                OverflowBehavior=\"OverflowBehavior.FlipAlways\"&gt;\n        &lt;FodPaper Elevation=\"8\" Class=\"pa-2\" Style=\"min-width: 150px;\"&gt;\n            &lt;FodList Dense=\"true\"&gt;\n                &lt;FodListItem Button=\"true\" OnClick=\"Edit\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Edit\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText Primary=\"Editeaz\u0103\" /&gt;\n                &lt;/FodListItem&gt;\n                &lt;FodListItem Button=\"true\" OnClick=\"Delete\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Delete\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText Primary=\"\u0218terge\" /&gt;\n                &lt;/FodListItem&gt;\n            &lt;/FodList&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-animatii-personalizate","title":"Popover cu anima\u021bii personalizate","text":"<pre><code>&lt;FodPopover Open=\"@showAnimated\"\n            Duration=\"400\"\n            Delay=\"100\"\n            AnchorOrigin=\"Origin.BottomLeft\"\n            TransformOrigin=\"Origin.TopLeft\"&gt;\n    &lt;FodCard Style=\"width: 300px;\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Notificare animat\u0103\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Acest popover apare cu o anima\u021bie personalizat\u0103.\n            &lt;/FodText&gt;\n        &lt;/FodCardContent&gt;\n        &lt;FodCardActions&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"@(() =&gt; showAnimated = false)\"&gt;\n                \u00cenchide\n            &lt;/FodButton&gt;\n        &lt;/FodCardActions&gt;\n    &lt;/FodCard&gt;\n&lt;/FodPopover&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-latime-relativa","title":"Popover cu l\u0103\u021bime relativ\u0103","text":"<pre><code>&lt;div style=\"position: relative; width: 400px;\"&gt;\n    &lt;FodTextField Label=\"Caut\u0103\"\n                  @bind-Value=\"searchText\"\n                  @onfocus=\"@(() =&gt; showResults = true)\"\n                  @onblur=\"@(() =&gt; showResults = false)\" /&gt;\n\n    &lt;FodPopover Open=\"@showResults\"\n                RelativeWidth=\"true\"\n                AnchorOrigin=\"Origin.BottomLeft\"\n                TransformOrigin=\"Origin.TopLeft\"\n                MaxHeight=\"300\"&gt;\n        &lt;FodPaper&gt;\n            &lt;FodList&gt;\n                @foreach (var result in SearchResults)\n                {\n                    &lt;FodListItem Button=\"true\"&gt;\n                        &lt;FodListItemText Primary=\"@result\" /&gt;\n                    &lt;/FodListItem&gt;\n                }\n            &lt;/FodList&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private string searchText = \"\";\n    private bool showResults = false;\n    private List&lt;string&gt; SearchResults = new()\n    {\n        \"Rezultat 1\",\n        \"Rezultat 2\",\n        \"Rezultat 3\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-fix-pentru-modal-uri","title":"Popover fix (pentru modal-uri)","text":"<pre><code>&lt;FodPopover Open=\"@showFixed\"\n            Fixed=\"true\"\n            Paper=\"true\"\n            Elevation=\"24\"\n            AnchorOrigin=\"Origin.CenterCenter\"\n            TransformOrigin=\"Origin.CenterCenter\"&gt;\n    &lt;div style=\"width: 400px; max-width: 90vw;\"&gt;\n        &lt;FodDialogTitle&gt;\n            Dialog \u00een Popover\n        &lt;/FodDialogTitle&gt;\n        &lt;FodDialogContent&gt;\n            &lt;FodText&gt;\n                Acest popover folose\u0219te pozi\u021bionare fix\u0103 \u0219i este centrat pe ecran.\n            &lt;/FodText&gt;\n        &lt;/FodDialogContent&gt;\n        &lt;FodDialogActions&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; showFixed = false)\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" Variant=\"FodVariant.Filled\"&gt;\n                Confirm\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodDialogActions&gt;\n    &lt;/div&gt;\n&lt;/FodPopover&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#meniu-contextual-cu-popover","title":"Meniu contextual cu popover","text":"<pre><code>&lt;div @oncontextmenu=\"ShowContextMenu\" \n     @oncontextmenu:preventDefault=\"true\"\n     style=\"position: relative; padding: 40px; border: 1px dashed #ccc;\"&gt;\n    &lt;FodText&gt;Click dreapta pentru meniu contextual&lt;/FodText&gt;\n\n    &lt;FodPopover Open=\"@showContext\"\n                AnchorOrigin=\"Origin.TopLeft\"\n                TransformOrigin=\"Origin.TopLeft\"\n                Style=\"@($\"position: fixed; left: {mouseX}px; top: {mouseY}px;\")\"&gt;\n        &lt;FodPaper Elevation=\"8\"&gt;\n            &lt;FodList Dense=\"true\" Style=\"min-width: 180px;\"&gt;\n                &lt;FodListItem Button=\"true\" OnClick=\"Copy\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ContentCopy\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText Primary=\"Copiaz\u0103\" /&gt;\n                &lt;/FodListItem&gt;\n                &lt;FodListItem Button=\"true\" OnClick=\"Paste\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ContentPaste\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText Primary=\"Lipe\u0219te\" /&gt;\n                &lt;/FodListItem&gt;\n                &lt;FodDivider /&gt;\n                &lt;FodListItem Button=\"true\" OnClick=\"Delete\"&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Delete\" Color=\"FodColor.Error\" /&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText Primary=\"\u0218terge\" PrimaryTypographyProps=\"@(new { Color = FodColor.Error })\" /&gt;\n                &lt;/FodListItem&gt;\n            &lt;/FodList&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showContext = false;\n    private double mouseX = 0;\n    private double mouseY = 0;\n\n    private void ShowContextMenu(MouseEventArgs e)\n    {\n        mouseX = e.ClientX;\n        mouseY = e.ClientY;\n        showContext = true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-formular","title":"Popover cu formular","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.PersonAdd\"\n                   Color=\"FodColor.Primary\"\n                   @onclick=\"@(() =&gt; showAddUser = !showAddUser)\" /&gt;\n\n    &lt;FodPopover Open=\"@showAddUser\"\n                AnchorOrigin=\"Origin.BottomRight\"\n                TransformOrigin=\"Origin.TopRight\"\n                Paper=\"true\"\n                Elevation=\"8\"&gt;\n        &lt;FodForm Style=\"width: 300px;\" Class=\"pa-4\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Adaug\u0103 utilizator\n            &lt;/FodText&gt;\n\n            &lt;FodTextField Label=\"Nume\"\n                         @bind-Value=\"newUser.Name\"\n                         FullWidth=\"true\"\n                         Margin=\"Margin.Dense\" /&gt;\n\n            &lt;FodTextField Label=\"Email\"\n                         @bind-Value=\"newUser.Email\"\n                         Type=\"InputType.Email\"\n                         FullWidth=\"true\"\n                         Margin=\"Margin.Dense\"\n                         Class=\"mt-3\" /&gt;\n\n            &lt;FodSelect T=\"string\"\n                      Label=\"Rol\"\n                      @bind-Value=\"newUser.Role\"\n                      FullWidth=\"true\"\n                      Margin=\"Margin.Dense\"\n                      Class=\"mt-3\"&gt;\n                &lt;FodSelectItem Value=\"@(\"admin\")\"&gt;Administrator&lt;/FodSelectItem&gt;\n                &lt;FodSelectItem Value=\"@(\"user\")\"&gt;Utilizator&lt;/FodSelectItem&gt;\n                &lt;FodSelectItem Value=\"@(\"guest\")\"&gt;Vizitator&lt;/FodSelectItem&gt;\n            &lt;/FodSelect&gt;\n\n            &lt;div class=\"d-flex justify-end mt-4 gap-2\"&gt;\n                &lt;FodButton OnClick=\"@(() =&gt; showAddUser = false)\"&gt;\n                    Anuleaz\u0103\n                &lt;/FodButton&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" \n                          Variant=\"FodVariant.Filled\"\n                          OnClick=\"SaveUser\"&gt;\n                    Salveaz\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/FodForm&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showAddUser = false;\n    private UserModel newUser = new();\n\n    private void SaveUser()\n    {\n        // Salvare utilizator\n        showAddUser = false;\n        newUser = new();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#4-atribute-disponibile","title":"4. Atribute disponibile","text":""},{"location":"fod/componente/FodPopover/#fodpopover","title":"FodPopover","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Open</code> <code>bool</code> Controleaz\u0103 vizibilitatea popover-ului <code>false</code> <code>Paper</code> <code>bool</code> Aplic\u0103 stiluri FodPaper <code>true</code> <code>Elevation</code> <code>int</code> Nivelul umbrei (0-24) <code>8</code> <code>Square</code> <code>bool</code> Elimin\u0103 border-radius <code>false</code> <code>Fixed</code> <code>bool</code> Folose\u0219te position fixed \u00een loc de absolute <code>false</code> <code>Duration</code> <code>double</code> Durata anima\u021biei \u00een ms <code>251</code> <code>Delay</code> <code>double</code> \u00cent\u00e2rziere \u00eenainte de anima\u021bie \u00een ms <code>0</code> <code>AnchorOrigin</code> <code>Origin</code> Punctul de ancorare pe elementul p\u0103rinte <code>TopLeft</code> <code>TransformOrigin</code> <code>Origin</code> Punctul de transformare pe popover <code>TopLeft</code> <code>OverflowBehavior</code> <code>OverflowBehavior</code> Comportament la overflow <code>FlipOnOpen</code> <code>RelativeWidth</code> <code>bool</code> Popover-ul va avea l\u0103\u021bimea p\u0103rintelui <code>false</code> <code>MaxHeight</code> <code>int?</code> \u00cen\u0103l\u021bimea maxim\u0103 \u00een pixeli <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul popover-ului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodPopover/#fodpopoverprovider","title":"FodPopoverProvider","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>IsEnabled</code> <code>bool</code> Activeaz\u0103/dezactiveaz\u0103 provider-ul <code>true</code>"},{"location":"fod/componente/FodPopover/#5-enumerari","title":"5. Enumer\u0103ri","text":""},{"location":"fod/componente/FodPopover/#origin","title":"Origin","text":"Valoare Descriere <code>TopLeft</code> Col\u021b st\u00e2nga sus <code>TopCenter</code> Centru sus <code>TopRight</code> Col\u021b dreapta sus <code>CenterLeft</code> Centru st\u00e2nga <code>CenterCenter</code> Centru <code>CenterRight</code> Centru dreapta <code>BottomLeft</code> Col\u021b st\u00e2nga jos <code>BottomCenter</code> Centru jos <code>BottomRight</code> Col\u021b dreapta jos"},{"location":"fod/componente/FodPopover/#overflowbehavior","title":"OverflowBehavior","text":"Valoare Descriere <code>None</code> F\u0103r\u0103 logic\u0103 de overflow <code>FlipOnOpen</code> Schimb\u0103 pozi\u021bia la deschidere dac\u0103 nu \u00eencape <code>FlipAlways</code> Verific\u0103 \u0219i schimb\u0103 pozi\u021bia constant <code>FlipNever</code> Nu schimba niciodat\u0103 pozi\u021bia"},{"location":"fod/componente/FodPopover/#6-serviciul-ifodpopoverservice","title":"6. Serviciul IFodPopoverService","text":"<pre><code>public interface IFodPopoverService\n{\n    FodPopoverHandler Register(RenderFragment fragment);\n    Task&lt;bool&gt; Unregister(FodPopoverHandler handler);\n    IEnumerable&lt;FodPopoverHandler&gt; Handlers { get; }\n    Task InitializeIfNeeded();\n    event EventHandler FragmentsChanged;\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":"<pre><code>/* Popover cu umbr\u0103 colorat\u0103 */\n.custom-popover .fod-paper {\n    box-shadow: 0 8px 32px rgba(63, 81, 181, 0.15) !important;\n}\n\n/* Popover cu anima\u021bie de scale */\n.scale-popover {\n    transform-origin: top center;\n    animation: scaleIn 0.2s ease-out;\n}\n\n@keyframes scaleIn {\n    from {\n        transform: scale(0.8);\n        opacity: 0;\n    }\n    to {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n/* Popover transparent */\n.transparent-popover {\n    background: rgba(255, 255, 255, 0.95);\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n}\n\n/* Popover cu bordur\u0103 */\n.bordered-popover .fod-paper {\n    border: 2px solid var(--fod-palette-primary-main);\n}\n\n/* Popover cu s\u0103geat\u0103 custom */\n.arrow-popover::before {\n    content: '';\n    position: absolute;\n    top: -8px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-bottom: 8px solid white;\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/FodPopover/#in-selectdropdown","title":"\u00cen Select/Dropdown","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodTextField Label=\"Selecteaz\u0103\"\n                  Value=\"@selectedValue\"\n                  ReadOnly=\"true\"\n                  @onclick=\"@(() =&gt; showSelect = !showSelect)\"\n                  EndAdornment=\"@(\n                      &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ArrowDropDown\" /&gt;\n                  )\" /&gt;\n\n    &lt;FodPopover Open=\"@showSelect\"\n                RelativeWidth=\"true\"\n                AnchorOrigin=\"Origin.BottomLeft\"\n                TransformOrigin=\"Origin.TopLeft\"&gt;\n        &lt;FodList&gt;\n            @foreach (var option in options)\n            {\n                &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; Select(option))\"&gt;\n                    &lt;FodListItemText Primary=\"@option\" /&gt;\n                &lt;/FodListItem&gt;\n            }\n        &lt;/FodList&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#in-tooltip","title":"\u00cen Tooltip","text":"<pre><code>@* Tooltip implementat cu Popover *@\n&lt;div style=\"position: relative; display: inline-block;\"\n     @onmouseenter=\"@(() =&gt; showTooltip = true)\"\n     @onmouseleave=\"@(() =&gt; showTooltip = false)\"&gt;\n\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Info\" /&gt;\n\n    &lt;FodPopover Open=\"@showTooltip\"\n                AnchorOrigin=\"Origin.BottomCenter\"\n                TransformOrigin=\"Origin.TopCenter\"\n                Paper=\"false\"\n                Delay=\"500\"&gt;\n        &lt;div class=\"fod-tooltip\"&gt;\n            Aceasta este o informa\u021bie util\u0103\n        &lt;/div&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#in-autocomplete","title":"\u00cen Autocomplete","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodTextField Label=\"Caut\u0103 \u021bar\u0103\"\n                  @bind-Value=\"searchCountry\"\n                  @oninput=\"OnSearchInput\"\n                  @onfocus=\"@(() =&gt; showSuggestions = true)\" /&gt;\n\n    &lt;FodPopover Open=\"@(showSuggestions &amp;&amp; filteredCountries.Any())\"\n                RelativeWidth=\"true\"\n                AnchorOrigin=\"Origin.BottomLeft\"\n                TransformOrigin=\"Origin.TopLeft\"\n                MaxHeight=\"200\"&gt;\n        &lt;FodList&gt;\n            @foreach (var country in filteredCountries)\n            {\n                &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SelectCountry(country))\"&gt;\n                    &lt;FodListItemText&gt;\n                        &lt;HighlightText Text=\"@country\" Highlight=\"@searchCountry\" /&gt;\n                    &lt;/FodListItemText&gt;\n                &lt;/FodListItem&gt;\n            }\n        &lt;/FodList&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#9-patterns-comune","title":"9. Patterns comune","text":""},{"location":"fod/componente/FodPopover/#popover-controlat-extern","title":"Popover controlat extern","text":"<pre><code>@* Componenta p\u0103rinte *@\n&lt;PopoverController @ref=\"popoverController\" /&gt;\n&lt;FodButton OnClick=\"@(() =&gt; popoverController.Show())\"&gt;\n    Deschide popover controlat\n&lt;/FodButton&gt;\n\n@* Componenta PopoverController *@\n@code {\n    private bool isOpen = false;\n\n    public void Show() =&gt; isOpen = true;\n    public void Hide() =&gt; isOpen = false;\n    public void Toggle() =&gt; isOpen = !isOpen;\n}\n\n&lt;div style=\"position: relative;\"&gt;\n    &lt;FodPopover Open=\"@isOpen\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-inchidere-la-click-exterior","title":"Popover cu \u00eenchidere la click exterior","text":"<pre><code>@implements IDisposable\n@inject IJSRuntime JS\n\n&lt;div style=\"position: relative;\" @ref=\"containerRef\"&gt;\n    &lt;FodButton @onclick=\"TogglePopover\"&gt;\n        Deschide Popover\n    &lt;/FodButton&gt;\n\n    &lt;FodPopover Open=\"@isOpen\"&gt;\n        &lt;FodPaper Class=\"pa-4\"&gt;\n            &lt;FodText&gt;Click \u00een afar\u0103 pentru a \u00eenchide&lt;/FodText&gt;\n        &lt;/FodPaper&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private ElementReference containerRef;\n    private bool isOpen = false;\n    private DotNetObjectReference&lt;ComponentName&gt; objRef;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            objRef = DotNetObjectReference.Create(this);\n            await JS.InvokeVoidAsync(\"registerClickOutside\", containerRef, objRef);\n        }\n    }\n\n    [JSInvokable]\n    public void ClosePopover()\n    {\n        isOpen = false;\n        StateHasChanged();\n    }\n\n    private void TogglePopover() =&gt; isOpen = !isOpen;\n\n    public void Dispose()\n    {\n        objRef?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#10-consideratii-de-performanta","title":"10. Considera\u021bii de performan\u021b\u0103","text":"<ol> <li>Lazy Rendering - Popover-ul randeaz\u0103 con\u021binutul doar c\u00e2nd este deschis</li> <li>Portal Pattern - Con\u021binutul este mutat \u00een FodPopoverProvider pentru evitarea problemelor de z-index</li> <li>Event Delegation - Evenimente gestionate eficient la nivel de provider</li> <li>JSInterop Optimization - Apeluri JS minimizate \u0219i grupate</li> </ol>"},{"location":"fod/componente/FodPopover/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Popover-urile trebuie s\u0103 aib\u0103 focus management adecvat</li> <li>Folosi\u021bi <code>role=\"dialog\"</code> pentru popover-uri modale</li> <li>Asigura\u021bi navigare cu tastatura</li> <li>Ad\u0103uga\u021bi <code>aria-describedby</code> pentru screen readers</li> </ul> <pre><code>&lt;FodPopover Open=\"@isOpen\"\n            UserAttributes=\"@(new Dictionary&lt;string, object&gt;\n            {\n                { \"role\", \"dialog\" },\n                { \"aria-labelledby\", \"popover-title\" }\n            })\"&gt;\n    &lt;div&gt;\n        &lt;FodText id=\"popover-title\" Typo=\"Typo.h6\"&gt;\n            Titlu Popover\n        &lt;/FodText&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/div&gt;\n&lt;/FodPopover&gt;\n</code></pre>"},{"location":"fod/componente/FodPopover/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Container Position - Elementul p\u0103rinte trebuie s\u0103 aib\u0103 <code>position: relative</code></li> <li>Z-Index Management - Folosi\u021bi Fixed pentru overlay-uri globale</li> <li>Memory Leaks - Implementa\u021bi Dispose pattern pentru event handlers</li> <li>Overflow - Seta\u021bi OverflowBehavior pentru UI consistent</li> <li>Animation - Folosi\u021bi durat\u0103 scurt\u0103 (200-300ms) pentru UX optim</li> <li>Focus Management - Gestiona\u021bi focus pentru accesibilitate</li> </ol>"},{"location":"fod/componente/FodPopover/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodPopover/#popover-ul-nu-apare","title":"Popover-ul nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 FodPopoverProvider este ad\u0103ugat</li> <li>Verifica\u021bi c\u0103 p\u0103rintele are <code>position: relative</code></li> <li>Verifica\u021bi valoarea propriet\u0103\u021bii <code>Open</code></li> </ul>"},{"location":"fod/componente/FodPopover/#pozitionare-incorecta","title":"Pozi\u021bionare incorect\u0103","text":"<ul> <li>Verifica\u021bi AnchorOrigin \u0219i TransformOrigin</li> <li>Verifica\u021bi OverflowBehavior</li> <li>Asigura\u021bi-v\u0103 c\u0103 p\u0103rintele nu are <code>overflow: hidden</code></li> </ul>"},{"location":"fod/componente/FodPopover/#probleme-de-z-index","title":"Probleme de z-index","text":"<ul> <li>Folosi\u021bi <code>Fixed=\"true\"</code> pentru popover-uri globale</li> <li>Verifica\u021bi z-index-ul elementelor p\u0103rinte</li> </ul>"},{"location":"fod/componente/FodPopover/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodPopover/#multi-level-popover-submeniu","title":"Multi-level popover (submeniu)","text":"<pre><code>&lt;div style=\"position: relative;\"&gt;\n    &lt;FodButton @onclick=\"@(() =&gt; showMenu = !showMenu)\"&gt;\n        Meniu Multi-nivel\n    &lt;/FodButton&gt;\n\n    &lt;FodPopover Open=\"@showMenu\"\n                AnchorOrigin=\"Origin.BottomLeft\"\n                TransformOrigin=\"Origin.TopLeft\"&gt;\n        &lt;FodList Style=\"min-width: 200px;\"&gt;\n            &lt;FodListItem Button=\"true\"&gt;\n                &lt;FodListItemText Primary=\"Op\u021biune simpl\u0103\" /&gt;\n            &lt;/FodListItem&gt;\n\n            &lt;div style=\"position: relative;\"&gt;\n                &lt;FodListItem Button=\"true\" \n                            @onmouseenter=\"@(() =&gt; showSubmenu = true)\"\n                            @onmouseleave=\"@(() =&gt; showSubmenu = false)\"&gt;\n                    &lt;FodListItemText Primary=\"Cu submeniu\" /&gt;\n                    &lt;FodListItemSecondaryAction&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ChevronRight\" /&gt;\n                    &lt;/FodListItemSecondaryAction&gt;\n                &lt;/FodListItem&gt;\n\n                &lt;FodPopover Open=\"@showSubmenu\"\n                            AnchorOrigin=\"Origin.TopRight\"\n                            TransformOrigin=\"Origin.TopLeft\"&gt;\n                    &lt;FodList Style=\"min-width: 150px;\"&gt;\n                        &lt;FodListItem Button=\"true\"&gt;\n                            &lt;FodListItemText Primary=\"Sub-op\u021biune 1\" /&gt;\n                        &lt;/FodListItem&gt;\n                        &lt;FodListItem Button=\"true\"&gt;\n                            &lt;FodListItemText Primary=\"Sub-op\u021biune 2\" /&gt;\n                        &lt;/FodListItem&gt;\n                    &lt;/FodList&gt;\n                &lt;/FodPopover&gt;\n            &lt;/div&gt;\n        &lt;/FodList&gt;\n    &lt;/FodPopover&gt;\n&lt;/div&gt;\n\n@code {\n    private bool showMenu = false;\n    private bool showSubmenu = false;\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#popover-cu-tranzitii-complexe","title":"Popover cu tranzi\u021bii complexe","text":"<pre><code>&lt;style&gt;\n    .fade-scale-enter {\n        opacity: 0;\n        transform: scale(0.8);\n    }\n\n    .fade-scale-enter-active {\n        opacity: 1;\n        transform: scale(1);\n        transition: opacity 300ms, transform 300ms;\n    }\n\n    .fade-scale-exit {\n        opacity: 1;\n        transform: scale(1);\n    }\n\n    .fade-scale-exit-active {\n        opacity: 0;\n        transform: scale(0.8);\n        transition: opacity 300ms, transform 300ms;\n    }\n&lt;/style&gt;\n\n&lt;FodPopover Open=\"@showAnimated\"\n            Class=\"@GetAnimationClass()\"\n            Duration=\"300\"&gt;\n    &lt;!-- Con\u021binut animat --&gt;\n&lt;/FodPopover&gt;\n\n@code {\n    private bool showAnimated = false;\n    private bool isAnimating = false;\n\n    private string GetAnimationClass()\n    {\n        if (isAnimating)\n        {\n            return showAnimated ? \"fade-scale-enter-active\" : \"fade-scale-exit-active\";\n        }\n        return showAnimated ? \"fade-scale-enter\" : \"fade-scale-exit\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodPopover/#15-concluzie","title":"15. Concluzie","text":"<p>Sistemul Popover din FOD ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru afi\u0219area con\u021binutului flotant \u00een aplica\u021bii Blazor. Cu suport pentru pozi\u021bionare inteligent\u0103, anima\u021bii fluide \u0219i management centralizat, componentele FodPopover \u0219i FodPopoverProvider faciliteaz\u0103 crearea de interfe\u021be complexe precum meniuri, tooltip-uri, select-uri \u0219i dialoguri flotante. Arhitectura bazat\u0103 pe service asigur\u0103 performan\u021b\u0103 optim\u0103 \u0219i gestionare eficient\u0103 a resurselor.</p>"},{"location":"fod/componente/FodRadio/","title":"Radio","text":""},{"location":"fod/componente/FodRadio/#documentatie-pentru-componentele-fodinputradiogroup-si-fodinputradio","title":"Documenta\u021bie pentru componentele FODInputRadioGroup \u0219i FODInputRadio","text":""},{"location":"fod/componente/FodRadio/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FODInputRadioGroup</code> \u0219i <code>FODInputRadio</code> formeaz\u0103 un sistem complet pentru implementarea butoanelor radio \u00een formulare Blazor. Sistemul ofer\u0103 dou\u0103 stiluri de afi\u0219are (radio tradi\u021bional \u0219i grup de butoane), suport pentru tipuri generice, validare integrat\u0103 \u0219i localizare automat\u0103.</p> <p>Caracteristici principale: - Suport pentru enum-uri cu localizare automat\u0103 - Dou\u0103 stiluri vizuale: Radio \u0219i Button - Binding bidirec\u021bional cu validare - Suport pentru surse de date personalizate - Tooltips pentru descrieri detaliate - Integrare complet\u0103 cu sistemul de formulare Blazor - Componente specializate pentru scenarii specifice (OnBehalfOf)</p>"},{"location":"fod/componente/FodRadio/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodRadio/#radio-group-de-baza-cu-enum","title":"Radio group de baz\u0103 cu enum","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputRadioGroup T=\"PersonType\" \n                        @bind-Value=\"model.PersonType\"\n                        Label=\"Tip persoan\u0103\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.PersonType)\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public enum PersonType\n    {\n        [Display(Name = \"Persoan\u0103 fizic\u0103\")]\n        Individual = 1,\n\n        [Display(Name = \"Persoan\u0103 juridic\u0103\")]\n        LegalEntity = 2\n    }\n\n    public class FormModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi tipul persoanei\")]\n        public PersonType PersonType { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-stil-butoane","title":"Radio group stil butoane","text":"<pre><code>&lt;FODInputRadioGroup T=\"DeliveryOption\" \n                    @bind-Value=\"selectedDelivery\"\n                    Type=\"FodRadioType.Button\"\n                    Label=\"Modalitate de livrare\"&gt;\n&lt;/FODInputRadioGroup&gt;\n\n@code {\n    public enum DeliveryOption\n    {\n        [Display(Name = \"Livrare electronic\u0103\", Description = \"Prin MDelivery\")]\n        Electronic = 1,\n\n        [Display(Name = \"Ridicare de la oficiu\", Description = \"Personal la sediu\")]\n        Office = 2,\n\n        [Display(Name = \"Livrare po\u0219tal\u0103\", Description = \"Prin Po\u0219ta Moldovei\")]\n        Post = 3\n    }\n\n    private DeliveryOption selectedDelivery = DeliveryOption.Electronic;\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-cu-date-personalizate","title":"Radio group cu date personalizate","text":"<pre><code>&lt;FODInputRadioGroup T=\"Office\" \n                    @bind-Value=\"selectedOffice\"\n                    Source=\"offices\"\n                    Label=\"Selecta\u021bi oficiul\" /&gt;\n\n@code {\n    private Office selectedOffice;\n    private List&lt;Office&gt; offices = new()\n    {\n        new Office { Id = 1, Name = \"Oficiul Central\", Address = \"str. \u0218tefan cel Mare 1\" },\n        new Office { Id = 2, Name = \"Oficiul Botanica\", Address = \"bd. Dacia 45\" },\n        new Office { Id = 3, Name = \"Oficiul R\u00ee\u0219cani\", Address = \"str. Kiev 15\" }\n    };\n\n    public class Office\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string Address { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-cu-etichete-personalizate","title":"Radio group cu etichete personalizate","text":"<pre><code>&lt;FODInputRadioGroup T=\"PaymentMethod\" \n                    @bind-Value=\"model.PaymentMethod\"\n                    ItemLabels=\"GetPaymentLabels()\"\n                    Label=\"Metod\u0103 de plat\u0103\" /&gt;\n\n@code {\n    private IEnumerable&lt;KeyValuePair&lt;PaymentMethod, string&gt;&gt; GetPaymentLabels()\n    {\n        return new List&lt;KeyValuePair&lt;PaymentMethod, string&gt;&gt;\n        {\n            new(PaymentMethod.Card, \"Card bancar (Visa/Mastercard)\"),\n            new(PaymentMethod.MPay, \"MPay - Plat\u0103 guvernamental\u0103\"),\n            new(PaymentMethod.Cash, \"Numerar la oficiu\")\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-cu-descrieri-tooltips","title":"Radio group cu descrieri (tooltips)","text":"<pre><code>&lt;FODInputRadioGroup T=\"ServiceType\" \n                    @bind-Value=\"selectedService\"\n                    Label=\"Tip serviciu\"&gt;\n&lt;/FODInputRadioGroup&gt;\n\n@code {\n    public enum ServiceType\n    {\n        [Display(Name = \"Apostil\u0103\", \n                Description = \"Legalizarea documentelor pentru utilizare interna\u021bional\u0103\")]\n        Apostille = 1,\n\n        [Display(Name = \"Traducere autorizat\u0103\", \n                Description = \"Traducere oficial\u0103 cu \u0219tampil\u0103 \u0219i semn\u0103tur\u0103\")]\n        Translation = 2,\n\n        [Display(Name = \"Copie legalizat\u0103\", \n                Description = \"Copie certificat\u0103 conform originalului\")]\n        CertifiedCopy = 3\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-cu-validare","title":"Radio group cu validare","text":"<pre><code>&lt;EditForm Model=\"formData\" OnValidSubmit=\"ProcessForm\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputRadioGroup T=\"RequestorType\" \n                        @bind-Value=\"formData.RequestorType\"\n                        Label=\"Depun solicitarea\"\n                        Type=\"FodRadioType.Button\" /&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; formData.RequestorType)\" /&gt;\n\n    @if (formData.RequestorType == RequestorType.OnBehalf)\n    {\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FODInputText @bind-Value=\"formData.AuthorizationNumber\" \n                         Label=\"Num\u0103r \u00eemputernicire\"\n                         Required=\"true\" /&gt;\n        &lt;/div&gt;\n    }\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Continu\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class FormData\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi modul de depunere\")]\n        public RequestorType RequestorType { get; set; }\n\n        public string AuthorizationNumber { get; set; }\n    }\n\n    public enum RequestorType\n    {\n        [Display(Name = \"\u00cen nume propriu\")]\n        Personal = 1,\n\n        [Display(Name = \"\u00cen baza \u00eemputernicirii\")]\n        OnBehalf = 2\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-dezactivat-conditionat","title":"Radio group dezactivat condi\u021bionat","text":"<pre><code>&lt;FODInputRadioGroup T=\"ProcessingSpeed\" \n                    @bind-Value=\"model.Speed\"\n                    Disable=\"@(!model.IsUrgent)\"\n                    Label=\"Termen de procesare\"&gt;\n&lt;/FODInputRadioGroup&gt;\n\n&lt;FodCheckbox @bind-Checked=\"model.IsUrgent\" Label=\"Procesare urgent\u0103\" /&gt;\n\n@code {\n    public class Model\n    {\n        public ProcessingSpeed Speed { get; set; } = ProcessingSpeed.Normal;\n        public bool IsUrgent { get; set; }\n    }\n\n    public enum ProcessingSpeed\n    {\n        [Display(Name = \"Normal (3 zile)\")]\n        Normal = 1,\n\n        [Display(Name = \"Rapid (1 zi)\")]\n        Fast = 2,\n\n        [Display(Name = \"Express (2 ore)\")]\n        Express = 3\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#componenta-specializata-onbehalfof","title":"Componenta specializat\u0103 OnBehalfOf","text":"<pre><code>&lt;FODInputOnBehalfOfRadioGroup @bind-Value=\"model.OnBehalfOf\" /&gt;\n\n@code {\n    private Model model = new();\n\n    public class Model\n    {\n        public OnBehalfOnEnum OnBehalfOf { get; set; } = OnBehalfOnEnum.Personal;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#radio-group-cu-stilizare-personalizata","title":"Radio group cu stilizare personalizat\u0103","text":"<pre><code>&lt;FODInputRadioGroup T=\"Theme\" \n                    @bind-Value=\"userTheme\"\n                    Type=\"FodRadioType.Button\"\n                    Label=\"Tem\u0103 interfa\u021b\u0103\"\n                    BoldText=\"true\"\n                    LabelFontSize=\"16\"\n                    InputFontSize=\"14\"&gt;\n&lt;/FODInputRadioGroup&gt;\n\n@code {\n    public enum Theme\n    {\n        [Display(Name = \"\ud83c\udf1e Luminoas\u0103\")]\n        Light = 1,\n\n        [Display(Name = \"\ud83c\udf19 \u00centunecat\u0103\")]\n        Dark = 2,\n\n        [Display(Name = \"\ud83c\udf13 Automat\u0103\")]\n        Auto = 3\n    }\n\n    private Theme userTheme = Theme.Auto;\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodRadio/#fodinputradiogroup","title":"FODInputRadioGroup    Proprietate Tip Descriere Valoare Implicit\u0103     <code>Value</code> <code>T</code> Valoarea selectat\u0103 <code>default(T)</code>   <code>Type</code> <code>FodRadioType</code> Stilul vizual (Radio sau Button) <code>Radio</code>   <code>Disable</code> <code>bool</code> Dezactiveaz\u0103 toate op\u021biunile <code>false</code>   <code>BoldText</code> <code>bool</code> Text \u00eengro\u0219at pentru etichete <code>false</code>   <code>LabelFontSize</code> <code>int</code> Dimensiune font etichete (px) <code>null</code>   <code>InputFontSize</code> <code>int</code> Dimensiune font input-uri (px) <code>null</code>   <code>Options</code> <code>IEnumerable&lt;SelectableItem&lt;T&gt;&gt;</code> Op\u021biuni disponibile <code>null</code>   <code>ItemLabels</code> <code>IEnumerable&lt;KeyValuePair&lt;T, string&gt;&gt;</code> Etichete personalizate <code>null</code>   <code>Source</code> <code>IEnumerable&lt;T&gt;</code> Surs\u0103 de date <code>null</code>   <code>Label</code> <code>string</code> Eticheta grupului <code>null</code>   <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code>   <code>OnValueChanged</code> <code>EventCallback&lt;T&gt;</code> Callback la schimbare -","text":""},{"location":"fod/componente/FodRadio/#fodinputradio","title":"FODInputRadio    Proprietate Tip Descriere Valoare Implicit\u0103     <code>Item</code> <code>SelectableItem&lt;T&gt;</code> Elementul de date -   <code>Disable</code> <code>bool</code> Dezactiveaz\u0103 radio-ul <code>false</code>   <code>LabelFontSize</code> <code>int</code> Dimensiune font etichet\u0103 <code>null</code>   <code>InputFontSize</code> <code>int</code> Dimensiune font input <code>null</code>   <code>Label</code> <code>string</code> Etichet\u0103 personalizat\u0103 <code>null</code>","text":""},{"location":"fod/componente/FodRadio/#4-tipuri-si-enumerari","title":"4. Tipuri \u0219i Enumer\u0103ri","text":""},{"location":"fod/componente/FodRadio/#fodradiotype","title":"FodRadioType <pre><code>public enum FodRadioType\n{\n    Radio = 1,  // Butoane radio tradi\u021bionale\n    Button = 2  // Grup de butoane stil modern\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRadio/#onbehalfonenum","title":"OnBehalfOnEnum <pre><code>public enum OnBehalfOnEnum\n{\n    Personal = 1,           // \u00cen nume propriu\n    MPowerAuthorization = 2,// Cu \u00eemputernicire MPower\n    Custom = 3             // Personalizat\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRadio/#5-evenimente","title":"5. Evenimente","text":"Eveniment Tip Descriere <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Se declan\u0219eaz\u0103 la schimbarea selec\u021biei <code>OnValueChanged</code> <code>EventCallback&lt;T&gt;</code> Alias pentru ValueChanged"},{"location":"fod/componente/FodRadio/#6-componente-asociate","title":"6. Componente asociate","text":"<ul> <li>FODSelectableFormComponent - Clasa de baz\u0103 pentru componente de selec\u021bie <li>SelectableItem - Model pentru elemente selectabile <li>Tooltip - Pentru afi\u0219area descrierilor</li> <li>ValidationMessage - Pentru afi\u0219area erorilor de validare</li>"},{"location":"fod/componente/FodRadio/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i personalizare","text":""},{"location":"fod/componente/FodRadio/#css-pentru-stilul-button","title":"CSS pentru stilul Button <pre><code>/* Personalizare grup butoane */\n.fod-radio-button-group {\n    border-radius: 0.625rem;\n    overflow: hidden;\n}\n\n.fod-radio-button-group .btn {\n    border-radius: 0;\n    border: 1px solid var(--fod-primary);\n}\n\n.fod-radio-button-group .btn.active {\n    background-color: var(--fod-primary);\n    color: white;\n}\n\n/* Anima\u021bii pentru tranzi\u021bii */\n.fod-radio-button-group .btn {\n    transition: all 0.3s ease;\n}\n\n.fod-radio-button-group .btn:hover:not(.active) {\n    background-color: rgba(var(--fod-primary-rgb), 0.1);\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRadio/#stilizare-radio-traditional","title":"Stilizare radio tradi\u021bional <pre><code>/* Radio buttons personalizate */\n.form-check-input[type=\"radio\"] {\n    width: 1.25rem;\n    height: 1.25rem;\n    border: 2px solid #dee2e6;\n    transition: all 0.2s ease;\n}\n\n.form-check-input[type=\"radio\"]:checked {\n    background-color: var(--fod-primary);\n    border-color: var(--fod-primary);\n}\n\n/* Label styling */\n.form-check-label {\n    padding-left: 0.5rem;\n    cursor: pointer;\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRadio/#8-localizare-automata-pentru-enum-uri","title":"8. Localizare automat\u0103 pentru enum-uri","text":"<pre><code>public enum DocumentType\n{\n    [Display(Name = \"Pa\u0219aport\", \n            Description = \"Document de c\u0103l\u0103torie interna\u021bional\",\n            ResourceType = typeof(Resources))]\n    Passport = 1,\n\n    [Display(Name = \"Buletin de identitate\",\n            Description = \"Act de identitate na\u021bional\")]\n    IdentityCard = 2\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#9-integrare-cu-validare","title":"9. Integrare cu validare","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FODInputRadioGroup T=\"AcceptanceStatus\" \n                        @bind-Value=\"model.Status\"\n                        Label=\"Accepta\u021bi termenii?\"\n                        For=\"@(() =&gt; model.Status)\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.Status)\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class Model\n    {\n        [Required(ErrorMessage = \"Trebuie s\u0103 selecta\u021bi o op\u021biune\")]\n        [Range(1, 1, ErrorMessage = \"Trebuie s\u0103 accepta\u021bi termenii\")]\n        public AcceptanceStatus Status { get; set; }\n    }\n\n    public enum AcceptanceStatus\n    {\n        [Display(Name = \"Accept\")]\n        Accept = 1,\n\n        [Display(Name = \"Refuz\")]\n        Refuse = 2\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRadio/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Pentru enum-uri, localizarea se face automat prin atributul Display</li> <li>Stilul Button este recomandat pentru 2-4 op\u021biuni</li> <li>Pentru liste lungi (&gt;5 op\u021biuni), considera\u021bi FodSelect</li> <li>Validarea func\u021bioneaz\u0103 identic cu alte componente de formular</li> <li>Tooltips-urile apar la hover pentru descrieri lungi</li> </ul>"},{"location":"fod/componente/FodRadio/#11-diferente-intre-stiluri","title":"11. Diferen\u021be \u00eentre stiluri","text":"Caracteristic\u0103 Radio Button Aspect Cerc cu punct Butoane grupate Spa\u021biu ocupat Vertical extins Compact orizontal Cazuri de utilizare Formulare tradi\u021bionale UI modern Num\u0103r optim op\u021biuni 2-10 2-4"},{"location":"fod/componente/FodRadio/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Etichete clare - Folosi\u021bi nume descriptive pentru op\u021biuni</li> <li>Ordine logic\u0103 - Aranja\u021bi op\u021biunile \u00een ordine natural\u0103</li> <li>Valoare implicit\u0103 - Seta\u021bi o valoare implicit\u0103 sensibil\u0103</li> <li>Validare - Ad\u0103uga\u021bi validare pentru c\u00e2mpuri obligatorii</li> <li>Descrieri - Folosi\u021bi tooltips pentru clarific\u0103ri</li> <li>Stil consistent - P\u0103stra\u021bi acela\u0219i stil \u00een formular</li> </ol>"},{"location":"fod/componente/FodRadio/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodRadio/#radio-urile-nu-se-actualizeaza","title":"Radio-urile nu se actualizeaz\u0103 <ul> <li>Verifica\u021bi c\u0103 folosi\u021bi <code>@bind-Value</code> corect</li> <li>Asigura\u021bi-v\u0103 c\u0103 tipul T este consistent</li> </ul>","text":""},{"location":"fod/componente/FodRadio/#etichetele-nu-apar","title":"Etichetele nu apar <ul> <li>Verifica\u021bi atributul Display pe enum</li> <li>Pentru date custom, verifica\u021bi propriet\u0103\u021bile Text/Name</li> </ul>","text":""},{"location":"fod/componente/FodRadio/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103 <ul> <li>Ad\u0103uga\u021bi <code>DataAnnotationsValidator</code> \u00een EditForm</li> <li>Folosi\u021bi <code>ValidationMessage</code> pentru afi\u0219are erori</li> </ul>","text":""},{"location":"fod/componente/FodRadio/#14-concluzie","title":"14. Concluzie","text":"<p>Sistemul de componente radio ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru selec\u021bii unice \u00een formulare, cu suport excelent pentru localizare, validare \u0219i personalizare vizual\u0103.</p>"},{"location":"fod/componente/FodRangeInput/","title":"FodRangeInput","text":""},{"location":"fod/componente/FodRangeInput/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodRangeInput&lt;T&gt;</code> este o component\u0103 generic\u0103 pentru introducerea intervalelor de valori (de la - p\u00e2n\u0103 la). Extinde <code>FodBaseInput&lt;Range&lt;T&gt;&gt;</code> \u0219i ofer\u0103 dou\u0103 c\u00e2mpuri de input conectate vizual printr-un separator. Suport\u0103 toate tipurile de input HTML5 \u0219i include func\u021bionalit\u0103\u021bi avansate precum adornments, clearable \u0219i focus management.</p>"},{"location":"fod/componente/FodRangeInput/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Range de numere --&gt;\n&lt;FodRangeInput @bind-Value=\"priceRange\" \n               PlaceholderStart=\"Pre\u021b minim\"\n               PlaceholderEnd=\"Pre\u021b maxim\"\n               InputType=\"InputType.Number\" /&gt;\n\n&lt;!-- Range de date --&gt;\n&lt;FodRangeInput @bind-Value=\"dateRange\" \n               PlaceholderStart=\"De la\"\n               PlaceholderEnd=\"P\u00e2n\u0103 la\"\n               InputType=\"InputType.Date\" /&gt;\n\n&lt;!-- Range cu adornment --&gt;\n&lt;FodRangeInput @bind-Value=\"salaryRange\" \n               PlaceholderStart=\"Minim\"\n               PlaceholderEnd=\"Maxim\"\n               Adornment=\"Adornment.Start\"\n               AdornmentText=\"MDL\"\n               InputType=\"InputType.Number\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#model-range","title":"Model Range <pre><code>public class Range&lt;T&gt;\n{\n    public T Start { get; set; }\n    public T End { get; set; }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRangeInput/#atribute-si-parametri","title":"Atribute \u0219i Parametri    Parametru Tip Default Descriere     Value Range new Range() Valoarea intervalului   InputType InputType Text Tipul input-urilor   PlaceholderStart string null Placeholder pentru start   PlaceholderEnd string null Placeholder pentru end   SeparatorIcon string ArrowRightAlt Iconi\u021ba separator   Clearable bool false Afi\u0219eaz\u0103 buton clear   Immediate bool false Update la fiecare tast\u0103   Adornment Adornment None Pozi\u021bie adornment   AdornmentIcon string null Icon pentru adornment   AdornmentText string null Text pentru adornment","text":""},{"location":"fod/componente/FodRangeInput/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodRangeInput/#filtru-interval-de-pret","title":"Filtru Interval de Pre\u021b","text":"<pre><code>&lt;div class=\"price-filter\"&gt;\n    &lt;h4&gt;Filtru pre\u021b&lt;/h4&gt;\n\n    &lt;FodRangeInput @bind-Value=\"priceFilter\" \n                   PlaceholderStart=\"Min\"\n                   PlaceholderEnd=\"Max\"\n                   InputType=\"InputType.Number\"\n                   Adornment=\"Adornment.Start\"\n                   AdornmentText=\"MDL\"\n                   Clearable=\"true\"\n                   @bind-Value:after=\"ApplyPriceFilter\" /&gt;\n\n    &lt;div class=\"price-suggestions mt-2\"&gt;\n        &lt;button class=\"btn btn-sm btn-outline-primary\" @onclick=\"() =&gt; SetPriceRange(0, 1000)\"&gt;\n            0 - 1,000 MDL\n        &lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-outline-primary\" @onclick=\"() =&gt; SetPriceRange(1000, 5000)\"&gt;\n            1,000 - 5,000 MDL\n        &lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-outline-primary\" @onclick=\"() =&gt; SetPriceRange(5000, 10000)\"&gt;\n            5,000 - 10,000 MDL\n        &lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;p class=\"mt-2\"&gt;G\u0103site: @filteredProducts.Count produse&lt;/p&gt;\n&lt;/div&gt;\n\n@code {\n    private Range&lt;decimal&gt; priceFilter = new();\n    private List&lt;Product&gt; allProducts = new();\n    private List&lt;Product&gt; filteredProducts = new();\n\n    private void ApplyPriceFilter()\n    {\n        filteredProducts = allProducts.Where(p =&gt; \n            (priceFilter.Start == 0 || p.Price &gt;= priceFilter.Start) &amp;&amp;\n            (priceFilter.End == 0 || p.Price &lt;= priceFilter.End)\n        ).ToList();\n    }\n\n    private void SetPriceRange(decimal min, decimal max)\n    {\n        priceFilter = new Range&lt;decimal&gt; { Start = min, End = max };\n        ApplyPriceFilter();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#selector-interval-de-date","title":"Selector Interval de Date","text":"<pre><code>&lt;div class=\"date-range-picker\"&gt;\n    &lt;FodRangeInput @bind-Value=\"selectedDates\" \n                   PlaceholderStart=\"Data \u00eenceput\"\n                   PlaceholderEnd=\"Data sf\u00e2r\u0219it\"\n                   InputType=\"InputType.Date\"\n                   Variant=\"FodVariant.Outlined\"\n                   Clearable=\"true\"\n                   @ref=\"dateRangeInput\" /&gt;\n\n    &lt;div class=\"quick-ranges mt-2\"&gt;\n        &lt;button class=\"btn btn-sm btn-secondary\" @onclick=\"SelectToday\"&gt;Azi&lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-secondary\" @onclick=\"SelectThisWeek\"&gt;S\u0103pt\u0103m\u00e2na aceasta&lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-secondary\" @onclick=\"SelectThisMonth\"&gt;Luna aceasta&lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-secondary\" @onclick=\"SelectLastMonth\"&gt;Luna trecut\u0103&lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-secondary\" @onclick=\"SelectThisYear\"&gt;Anul acesta&lt;/button&gt;\n    &lt;/div&gt;\n\n    @if (selectedDates?.Start != null &amp;&amp; selectedDates?.End != null)\n    {\n        &lt;div class=\"selected-info mt-3\"&gt;\n            &lt;p&gt;Interval selectat: @GetDateRangeText()&lt;/p&gt;\n            &lt;p&gt;Num\u0103r zile: @GetDaysBetween()&lt;/p&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private Range&lt;DateTime?&gt; selectedDates = new();\n    private FodRangeInput&lt;DateTime?&gt; dateRangeInput;\n\n    private void SelectToday()\n    {\n        var today = DateTime.Today;\n        selectedDates = new Range&lt;DateTime?&gt; { Start = today, End = today };\n    }\n\n    private void SelectThisWeek()\n    {\n        var today = DateTime.Today;\n        var startOfWeek = today.AddDays(-(int)today.DayOfWeek + 1);\n        var endOfWeek = startOfWeek.AddDays(6);\n        selectedDates = new Range&lt;DateTime?&gt; { Start = startOfWeek, End = endOfWeek };\n    }\n\n    private void SelectThisMonth()\n    {\n        var today = DateTime.Today;\n        var startOfMonth = new DateTime(today.Year, today.Month, 1);\n        var endOfMonth = startOfMonth.AddMonths(1).AddDays(-1);\n        selectedDates = new Range&lt;DateTime?&gt; { Start = startOfMonth, End = endOfMonth };\n    }\n\n    private string GetDateRangeText()\n    {\n        return $\"{selectedDates.Start:dd.MM.yyyy} - {selectedDates.End:dd.MM.yyyy}\";\n    }\n\n    private int GetDaysBetween()\n    {\n        if (selectedDates?.Start != null &amp;&amp; selectedDates?.End != null)\n            return (selectedDates.End.Value - selectedDates.Start.Value).Days + 1;\n        return 0;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#range-de-timp","title":"Range de Timp","text":"<pre><code>&lt;div class=\"time-range-selector\"&gt;\n    &lt;h4&gt;Program de lucru&lt;/h4&gt;\n\n    &lt;FodRangeInput @bind-Value=\"workingHours\" \n                   PlaceholderStart=\"Deschidere\"\n                   PlaceholderEnd=\"\u00cenchidere\"\n                   InputType=\"InputType.Time\"\n                   SeparatorIcon=\"@FodIcons.Material.Filled.Schedule\"\n                   Immediate=\"true\"\n                   @bind-Value:after=\"ValidateWorkingHours\" /&gt;\n\n    @if (!string.IsNullOrEmpty(validationMessage))\n    {\n        &lt;FodAlert Severity=\"FodSeverity.Warning\" Class=\"mt-2\"&gt;\n            @validationMessage\n        &lt;/FodAlert&gt;\n    }\n\n    &lt;div class=\"schedule-templates mt-3\"&gt;\n        &lt;h5&gt;\u0218abloane rapide:&lt;/h5&gt;\n        &lt;button class=\"btn btn-sm btn-outline-secondary\" @onclick=\"() =&gt; SetSchedule(9, 18)\"&gt;\n            9:00 - 18:00 (Standard)\n        &lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-outline-secondary\" @onclick=\"() =&gt; SetSchedule(8, 17)\"&gt;\n            8:00 - 17:00 (Devreme)\n        &lt;/button&gt;\n        &lt;button class=\"btn btn-sm btn-outline-secondary\" @onclick=\"() =&gt; SetSchedule(10, 19)\"&gt;\n            10:00 - 19:00 (T\u00e2rziu)\n        &lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private Range&lt;TimeSpan?&gt; workingHours = new();\n    private string validationMessage;\n\n    private void ValidateWorkingHours()\n    {\n        validationMessage = null;\n\n        if (workingHours?.Start != null &amp;&amp; workingHours?.End != null)\n        {\n            if (workingHours.End &lt;= workingHours.Start)\n            {\n                validationMessage = \"Ora de \u00eenchidere trebuie s\u0103 fie dup\u0103 ora de deschidere\";\n            }\n            else if ((workingHours.End.Value - workingHours.Start.Value).TotalHours &gt; 12)\n            {\n                validationMessage = \"Programul nu poate dep\u0103\u0219i 12 ore\";\n            }\n        }\n    }\n\n    private void SetSchedule(int startHour, int endHour)\n    {\n        workingHours = new Range&lt;TimeSpan?&gt;\n        {\n            Start = new TimeSpan(startHour, 0, 0),\n            End = new TimeSpan(endHour, 0, 0)\n        };\n        ValidateWorkingHours();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#range-numeric-cu-validare","title":"Range Numeric cu Validare","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label&gt;Interval v\u00e2rst\u0103 acceptat\u0103&lt;/label&gt;\n        &lt;FodRangeInput @bind-Value=\"model.AgeRange\" \n                       PlaceholderStart=\"Min\"\n                       PlaceholderEnd=\"Max\"\n                       InputType=\"InputType.Number\"\n                       Clearable=\"true\"\n                       @ref=\"ageRangeInput\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; model.AgeRange)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label&gt;Interval salariu (MDL)&lt;/label&gt;\n        &lt;FodRangeInput @bind-Value=\"model.SalaryRange\" \n                       PlaceholderStart=\"Minim\"\n                       PlaceholderEnd=\"Maxim\"\n                       InputType=\"InputType.Number\"\n                       Adornment=\"Adornment.Start\"\n                       AdornmentIcon=\"@FodIcons.Material.Filled.AttachMoney\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; model.SalaryRange)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Salveaz\u0103 criteriile&lt;/button&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private JobCriteria model = new();\n    private FodRangeInput&lt;int?&gt; ageRangeInput;\n\n    public class JobCriteria : IValidatableObject\n    {\n        public Range&lt;int?&gt; AgeRange { get; set; } = new();\n        public Range&lt;decimal?&gt; SalaryRange { get; set; } = new();\n\n        public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n        {\n            if (AgeRange?.Start != null &amp;&amp; AgeRange?.End != null)\n            {\n                if (AgeRange.Start &lt; 18)\n                    yield return new ValidationResult(\"V\u00e2rsta minim\u0103 nu poate fi sub 18 ani\", \n                        new[] { nameof(AgeRange) });\n\n                if (AgeRange.End &gt; 65)\n                    yield return new ValidationResult(\"V\u00e2rsta maxim\u0103 nu poate dep\u0103\u0219i 65 ani\", \n                        new[] { nameof(AgeRange) });\n\n                if (AgeRange.Start &gt; AgeRange.End)\n                    yield return new ValidationResult(\"V\u00e2rsta minim\u0103 nu poate fi mai mare dec\u00e2t cea maxim\u0103\", \n                        new[] { nameof(AgeRange) });\n            }\n\n            if (SalaryRange?.Start != null &amp;&amp; SalaryRange?.End != null)\n            {\n                if (SalaryRange.Start &gt; SalaryRange.End)\n                    yield return new ValidationResult(\"Salariul minim nu poate fi mai mare dec\u00e2t cel maxim\", \n                        new[] { nameof(SalaryRange) });\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#range-customizat-cu-converter","title":"Range Customizat cu Converter","text":"<pre><code>&lt;div class=\"ip-range-filter\"&gt;\n    &lt;h4&gt;Filtru interval IP&lt;/h4&gt;\n\n    &lt;FodRangeInput @bind-Value=\"ipRange\" \n                   PlaceholderStart=\"IP Start\"\n                   PlaceholderEnd=\"IP End\"\n                   Pattern=\"^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$\"\n                   Clearable=\"true\"\n                   Converter=\"@ipRangeConverter\" /&gt;\n\n    @if (ipRange != null)\n    {\n        &lt;div class=\"mt-2\"&gt;\n            &lt;p&gt;Interval: @ipRange.Start - @ipRange.End&lt;/p&gt;\n            &lt;p&gt;Total adrese: @CalculateIPCount()&lt;/p&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private Range&lt;string&gt; ipRange = new();\n    private RangeConverter&lt;string&gt; ipRangeConverter = new RangeConverter&lt;string&gt;\n    {\n        // Implementare custom converter pentru IP-uri\n    };\n\n    private long CalculateIPCount()\n    {\n        // Calcul num\u0103r de IP-uri \u00een interval\n        return 0;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#metode-focus-si-selectie","title":"Metode Focus \u0219i Selec\u021bie <pre><code>// Focus pe input start\nawait rangeInput.FocusStartAsync();\n\n// Focus pe input end\nawait rangeInput.FocusEndAsync();\n\n// Selectare text start\nawait rangeInput.SelectStartAsync();\n\n// Selectare text end\nawait rangeInput.SelectEndAsync();\n\n// Selectare interval specific \u00een start\nawait rangeInput.SelectRangeStartAsync(0, 5);\n\n// Selectare interval specific \u00een end\nawait rangeInput.SelectRangeEndAsync(0, 5);\n</code></pre>","text":""},{"location":"fod/componente/FodRangeInput/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodRangeInput/#variante-de-afisare","title":"Variante de Afi\u0219are","text":"<pre><code>&lt;!-- Standard --&gt;\n&lt;FodRangeInput @bind-Value=\"range1\" Variant=\"FodVariant.Text\" /&gt;\n\n&lt;!-- Filled --&gt;\n&lt;FodRangeInput @bind-Value=\"range2\" Variant=\"FodVariant.Filled\" /&gt;\n\n&lt;!-- Outlined --&gt;\n&lt;FodRangeInput @bind-Value=\"range3\" Variant=\"FodVariant.Outlined\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#css-personalizat","title":"CSS Personalizat","text":"<pre><code>/* Separator custom */\n.fod-range-input-separator {\n    margin: 0 8px;\n    color: #6c757d;\n}\n\n/* Input-uri mai mici */\n.compact-range .fod-input-base-input {\n    width: 100px;\n}\n\n/* Highlight pentru range valid */\n.valid-range .fod-input-base-input {\n    border-color: #28a745;\n}\n\n/* Eroare pentru range invalid */\n.invalid-range .fod-input-base-input {\n    border-color: #dc3545;\n}\n</code></pre>"},{"location":"fod/componente/FodRangeInput/#rangeconverter","title":"RangeConverter <p>Componenta folose\u0219te <code>RangeConverter&lt;T&gt;</code> pentru conversia \u00eentre <code>Range&lt;T&gt;</code> \u0219i string:</p> <pre><code>public class RangeConverter&lt;T&gt;\n{\n    public static void Split(string text, out string start, out string end)\n    {\n        // Separ\u0103 textul \u00een start \u0219i end\n    }\n\n    public static string Join(string start, string end)\n    {\n        // Combin\u0103 start \u0219i end \u00eentr-un string\n    }\n}\n</code></pre>","text":""},{"location":"fod/componente/FodRangeInput/#accesibilitate","title":"Accesibilitate <ul> <li>Suport complet pentru keyboard navigation</li> <li>Tab \u00eentre c\u00e2mpurile start \u0219i end</li> <li>Label-uri asociate pentru screen readers</li> <li>ARIA labels pentru butoane \u0219i adornments</li> </ul>","text":""},{"location":"fod/componente/FodRangeInput/#best-practices","title":"Best Practices <ol> <li>Placeholder-uri descriptive - Indica\u021bi clar ce se a\u0219teapt\u0103</li> <li>Validare interval - Verifica\u021bi c\u0103 start &lt; end</li> <li>Tipuri potrivite - Folosi\u021bi InputType corect</li> <li>Feedback vizual - Pentru intervaluri invalide</li> <li>Valori sugestive - Oferi\u021bi butoane pentru selec\u021bii rapide</li> </ol>","text":""},{"location":"fod/componente/FodRangeInput/#performanta","title":"Performan\u021b\u0103 <ul> <li>Update eficient doar la schimbarea unui c\u00e2mp</li> <li>Converter cached pentru transform\u0103ri</li> <li>Re-renderare minim\u0103 cu Immediate mode</li> </ul>","text":""},{"location":"fod/componente/FodRangeInput/#limitari","title":"Limit\u0103ri <ul> <li>Nu suport\u0103 range pentru toate tipurile (ex: enum)</li> <li>Nu are calendar integrat pentru date</li> <li>Nu valideaz\u0103 automat start &lt; end</li> </ul>","text":""},{"location":"fod/componente/FodRangeInput/#concluzie","title":"Concluzie <p>FodRangeInput ofer\u0103 o solu\u021bie elegant\u0103 pentru introducerea intervalelor de valori, cu suport pentru multiple tipuri de date \u0219i func\u021bionalit\u0103\u021bi avansate de customizare. Este ideal\u0103 pentru filtre, selectoare de perioade \u0219i orice situa\u021bie care necesit\u0103 introducerea unui interval de valori.</p>","text":""},{"location":"fod/componente/FodRating/","title":"Rating","text":""},{"location":"fod/componente/FodRating/#documentatie-pentru-componenta-fodrating","title":"Documenta\u021bie pentru componenta FodRating","text":""},{"location":"fod/componente/FodRating/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodRating</code> este componenta pentru selectarea unei evalu\u0103ri sau rating \u00een aplica\u021bii Blazor, oferind o interfa\u021b\u0103 intuitiv\u0103 cu stele sau alte iconi\u021be personalizabile. Componenta suport\u0103 interac\u021biuni mouse \u0219i tastatur\u0103, st\u0103ri diverse \u0219i personalizare complet\u0103.</p> <p>Caracteristici principale: - Evaluare cu 1-n stele (configurabil) - Iconi\u021be personalizabile pentru st\u0103ri pline/goale - Suport pentru hover cu preview - Navigare cu tastatur\u0103 (s\u0103ge\u021bi) - Moduri readonly \u0219i disabled - Culori \u0219i dimensiuni multiple - Two-way data binding - Anima\u021bii fluide la interac\u021biune - Accesibilitate complet\u0103</p>"},{"location":"fod/componente/FodRating/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodRating/#rating-de-baza","title":"Rating de baz\u0103","text":"<pre><code>&lt;FodRating @bind-SelectedValue=\"rating\" /&gt;\n\n@code {\n    private int rating = 3;\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-cu-numar-diferit-de-stele","title":"Rating cu num\u0103r diferit de stele","text":"<pre><code>&lt;!-- Rating 1-10 --&gt;\n&lt;FodRating @bind-SelectedValue=\"rating\" MaxValue=\"10\" /&gt;\n\n&lt;!-- Rating 1-3 --&gt;\n&lt;FodRating @bind-SelectedValue=\"rating\" MaxValue=\"3\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-cu-feedback-hover","title":"Rating cu feedback hover","text":"<pre><code>&lt;FodRating @bind-SelectedValue=\"rating\" \n           @bind-HoveredValue=\"hoveredRating\" /&gt;\n\n&lt;FodText Typo=\"Typo.body2\" Class=\"mt-2\"&gt;\n    @if (hoveredRating &gt; 0)\n    {\n        &lt;text&gt;Ve\u021bi selecta: @hoveredRating stele&lt;/text&gt;\n    }\n    else if (rating &gt; 0)\n    {\n        &lt;text&gt;A\u021bi selectat: @rating stele&lt;/text&gt;\n    }\n    else\n    {\n        &lt;text&gt;Selecta\u021bi o evaluare&lt;/text&gt;\n    }\n&lt;/FodText&gt;\n\n@code {\n    private int rating = 0;\n    private int hoveredRating = 0;\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-cu-iconite-personalizate","title":"Rating cu iconi\u021be personalizate","text":"<pre><code>&lt;!-- Inimi \u00een loc de stele --&gt;\n&lt;FodRating @bind-SelectedValue=\"loveRating\"\n           FullIcon=\"@FodIcons.Material.Filled.Favorite\"\n           EmptyIcon=\"@FodIcons.Material.Outlined.FavoriteBorder\"\n           Color=\"FodColor.Error\" /&gt;\n\n&lt;!-- Emoji-uri --&gt;\n&lt;FodRating @bind-SelectedValue=\"moodRating\"\n           MaxValue=\"5\"\n           FullIcon=\"@FodIcons.Material.Filled.SentimentVerySatisfied\"\n           EmptyIcon=\"@FodIcons.Material.Outlined.SentimentVerySatisfied\"\n           Color=\"FodColor.Success\" /&gt;\n\n&lt;!-- Thumbs up --&gt;\n&lt;FodRating @bind-SelectedValue=\"likeRating\"\n           MaxValue=\"1\"\n           FullIcon=\"@FodIcons.Material.Filled.ThumbUp\"\n           EmptyIcon=\"@FodIcons.Material.Outlined.ThumbUp\"\n           Color=\"FodColor.Primary\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#dimensiuni-diferite","title":"Dimensiuni diferite","text":"<pre><code>&lt;!-- Small --&gt;\n&lt;FodRating @bind-SelectedValue=\"rating\" \n           Size=\"FodSize.Small\" /&gt;\n\n&lt;!-- Medium (implicit) --&gt;\n&lt;FodRating @bind-SelectedValue=\"rating\" \n           Size=\"FodSize.Medium\" /&gt;\n\n&lt;!-- Large --&gt;\n&lt;FodRating @bind-SelectedValue=\"rating\" \n           Size=\"FodSize.Large\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-readonly","title":"Rating readonly","text":"<pre><code>&lt;!-- Afi\u0219are rating existent --&gt;\n&lt;div class=\"product-rating\"&gt;\n    &lt;FodRating SelectedValue=\"4\" \n               ReadOnly=\"true\" /&gt;\n    &lt;FodText Typo=\"Typo.body2\" Class=\"ms-2\"&gt;\n        4.0 din 5 (123 recenzii)\n    &lt;/FodText&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-dezactivat","title":"Rating dezactivat","text":"<pre><code>&lt;FodRating @bind-SelectedValue=\"rating\" \n           Disabled=\"@(!canRate)\" /&gt;\n\n@code {\n    private bool canRate = false;\n    private int rating = 0;\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-in-formular","title":"Rating \u00een formular","text":"<pre><code>&lt;EditForm Model=\"@review\" OnValidSubmit=\"SubmitReview\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodTextField @bind-Value=\"review.Title\" \n                  Label=\"Titlu recenzie\" \n                  Required=\"true\" /&gt;\n\n    &lt;div class=\"my-3\"&gt;\n        &lt;FodText Typo=\"Typo.body1\" GutterBottom=\"true\"&gt;\n            Evaluare general\u0103\n        &lt;/FodText&gt;\n        &lt;FodRating @bind-SelectedValue=\"review.Rating\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; review.Rating)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodTextArea @bind-Value=\"review.Comment\" \n                 Label=\"Comentariu\"\n                 Rows=\"4\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\" \n               Color=\"FodColor.Primary\"&gt;\n        Trimite recenzia\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ProductReview review = new();\n\n    public class ProductReview\n    {\n        public string Title { get; set; }\n\n        [Required(ErrorMessage = \"V\u0103 rug\u0103m selecta\u021bi o evaluare\")]\n        [Range(1, 5, ErrorMessage = \"Evaluarea trebuie s\u0103 fie \u00eentre 1 \u0219i 5\")]\n        public int Rating { get; set; }\n\n        public string Comment { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#card-produs-cu-rating","title":"Card produs cu rating","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardMedia Image=\"@product.ImageUrl\" \n                  Title=\"@product.Name\" /&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;@product.Name&lt;/FodText&gt;\n\n        &lt;div class=\"d-flex align-items-center my-2\"&gt;\n            &lt;FodRating SelectedValue=\"@product.AverageRating\" \n                       ReadOnly=\"true\"\n                       Size=\"FodSize.Small\" /&gt;\n            &lt;FodText Typo=\"Typo.body2\" Class=\"ms-2\"&gt;\n                @product.AverageRating.ToString(\"F1\") \n                (@product.ReviewCount recenzii)\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n\n        &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n            @product.Price.ToString(\"C\")\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Color=\"FodColor.Primary\"&gt;\n            Adaug\u0103 \u00een co\u0219\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#sistem-de-feedback-cu-rating","title":"Sistem de feedback cu rating","text":"<pre><code>&lt;FodPaper Class=\"pa-4\"&gt;\n    &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n        Cum a fost experien\u021ba dvs?\n    &lt;/FodText&gt;\n\n    &lt;!-- Rating principal --&gt;\n    &lt;div class=\"text-center my-4\"&gt;\n        &lt;FodRating @bind-SelectedValue=\"overallRating\"\n                   @bind-HoveredValue=\"hoveredRating\"\n                   Size=\"FodSize.Large\" /&gt;\n        &lt;FodText Typo=\"Typo.body1\" Class=\"mt-2\"&gt;\n            @GetRatingText()\n        &lt;/FodText&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Ratinguri detaliate --&gt;\n    @if (overallRating &gt; 0)\n    {\n        &lt;FodDivider Class=\"my-3\" /&gt;\n\n        &lt;div class=\"detailed-ratings\"&gt;\n            &lt;div class=\"rating-row\"&gt;\n                &lt;FodText Class=\"rating-label\"&gt;Calitate serviciu&lt;/FodText&gt;\n                &lt;FodRating @bind-SelectedValue=\"serviceRating\" \n                           Size=\"FodSize.Small\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"rating-row\"&gt;\n                &lt;FodText Class=\"rating-label\"&gt;Timp de r\u0103spuns&lt;/FodText&gt;\n                &lt;FodRating @bind-SelectedValue=\"responseRating\" \n                           Size=\"FodSize.Small\" /&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"rating-row\"&gt;\n                &lt;FodText Class=\"rating-label\"&gt;Profesionalism&lt;/FodText&gt;\n                &lt;FodRating @bind-SelectedValue=\"professionalRating\" \n                           Size=\"FodSize.Small\" /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;FodTextArea @bind-Value=\"comments\" \n                     Label=\"Comentarii adi\u021bionale\"\n                     Rows=\"3\"\n                     Class=\"mt-3\" /&gt;\n\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   Class=\"mt-3\"\n                   OnClick=\"SubmitFeedback\"&gt;\n            Trimite feedback\n        &lt;/FodButton&gt;\n    }\n&lt;/FodPaper&gt;\n\n@code {\n    private int overallRating = 0;\n    private int hoveredRating = 0;\n    private int serviceRating = 0;\n    private int responseRating = 0;\n    private int professionalRating = 0;\n    private string comments = \"\";\n\n    private string GetRatingText()\n    {\n        var rating = hoveredRating &gt; 0 ? hoveredRating : overallRating;\n        return rating switch\n        {\n            1 =&gt; \"Foarte nemul\u021bumit\",\n            2 =&gt; \"Nemul\u021bumit\",\n            3 =&gt; \"Neutru\",\n            4 =&gt; \"Mul\u021bumit\",\n            5 =&gt; \"Foarte mul\u021bumit\",\n            _ =&gt; \"Evalua\u021bi experien\u021ba\"\n        };\n    }\n}\n\n&lt;style&gt;\n    .rating-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .rating-label {\n        min-width: 150px;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-cu-statistici","title":"Rating cu statistici","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Evalu\u0103ri clien\u021bi\n        &lt;/FodText&gt;\n\n        &lt;!-- Rating mediu --&gt;\n        &lt;div class=\"d-flex align-items-center mb-3\"&gt;\n            &lt;FodText Typo=\"Typo.h2\" Class=\"me-3\"&gt;\n                @averageRating.ToString(\"F1\")\n            &lt;/FodText&gt;\n            &lt;div&gt;\n                &lt;FodRating SelectedValue=\"@((int)Math.Round(averageRating))\" \n                           ReadOnly=\"true\" /&gt;\n                &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                    Bazat pe @totalReviews recenzii\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Distribu\u021bie ratinguri --&gt;\n        @for (int stars = 5; stars &gt;= 1; stars--)\n        {\n            var percentage = GetRatingPercentage(stars);\n            &lt;div class=\"rating-distribution\"&gt;\n                &lt;FodRating SelectedValue=\"stars\" \n                           ReadOnly=\"true\"\n                           Size=\"FodSize.Small\" /&gt;\n                &lt;FodLoadingLinear Value=\"percentage\" \n                                  Class=\"mx-2 flex-grow-1\"\n                                  Color=\"FodColor.Primary\" /&gt;\n                &lt;FodText Typo=\"Typo.caption\" Style=\"min-width: 40px;\"&gt;\n                    @percentage%\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private double averageRating = 4.3;\n    private int totalReviews = 156;\n    private Dictionary&lt;int, int&gt; ratingDistribution = new()\n    {\n        { 5, 85 },\n        { 4, 45 },\n        { 3, 15 },\n        { 2, 8 },\n        { 1, 3 }\n    };\n\n    private int GetRatingPercentage(int stars)\n    {\n        if (totalReviews == 0) return 0;\n        return (int)Math.Round(ratingDistribution[stars] * 100.0 / totalReviews);\n    }\n}\n\n&lt;style&gt;\n    .rating-distribution {\n        display: flex;\n        align-items: center;\n        margin-bottom: 0.5rem;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#rating-inline-in-tabel","title":"Rating inline \u00een tabel","text":"<pre><code>&lt;FodDataTable Items=\"@products\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Produs&lt;/FodTh&gt;\n            &lt;FodTh&gt;Pre\u021b&lt;/FodTh&gt;\n            &lt;FodTh&gt;Evaluare&lt;/FodTh&gt;\n            &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate Context=\"product\"&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;@product.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@product.Price.ToString(\"C\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;div class=\"d-flex align-items-center\"&gt;\n                    &lt;FodRating SelectedValue=\"@product.Rating\" \n                               ReadOnly=\"true\"\n                               Size=\"FodSize.Small\" /&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Class=\"ms-2\"&gt;\n                        (@product.ReviewCount)\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Edit\"\n                               Size=\"FodSize.Small\"\n                               OnClick=\"@(() =&gt; EditProduct(product))\" /&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>SelectedValue</code> <code>int</code> Valoarea selectat\u0103 <code>0</code> <code>SelectedValueChanged</code> <code>EventCallback&lt;int&gt;</code> Eveniment la schimbare - <code>HoveredValue</code> <code>int</code> Valoarea hover <code>0</code> <code>HoveredValueChanged</code> <code>EventCallback&lt;int&gt;</code> Eveniment la hover - <code>MaxValue</code> <code>int</code> Num\u0103r maxim de stele <code>5</code> <code>FullIcon</code> <code>string</code> Iconi\u021ba pentru stele pline <code>Star</code> <code>EmptyIcon</code> <code>string</code> Iconi\u021ba pentru stele goale <code>StarBorder</code> <code>Color</code> <code>FodColor</code> Culoarea iconi\u021belor <code>Default</code> <code>Size</code> <code>FodSize</code> Dimensiunea iconi\u021belor <code>Medium</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 interac\u021biunile <code>false</code> <code>ReadOnly</code> <code>bool</code> Doar citire, f\u0103r\u0103 interac\u021biuni <code>false</code> <code>DisableRipple</code> <code>bool</code> Dezactiveaz\u0103 efectul ripple <code>false</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodRating/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>SelectedValueChanged</code> <code>EventCallback&lt;int&gt;</code> Se declan\u0219eaz\u0103 la selectarea unei valori <code>HoveredValueChanged</code> <code>EventCallback&lt;int&gt;</code> Se declan\u0219eaz\u0103 la hover pe o valoare"},{"location":"fod/componente/FodRating/#5-navigare-cu-tastatura","title":"5. Navigare cu tastatur\u0103","text":"Tast\u0103 Ac\u021biune <code>Tab</code> Focus pe component\u0103 <code>\u2190/\u2192</code> Navigheaz\u0103 \u00eentre stele <code>\u2191/\u2193</code> Navigheaz\u0103 \u00eentre stele <code>Shift + \u2190</code> Prima stea <code>Shift + \u2192</code> Ultima stea <code>Space/Enter</code> Selecteaz\u0103 valoarea curent\u0103"},{"location":"fod/componente/FodRating/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Rating cu dimensiune custom */\n.custom-rating .fod-rating-item .fod-icon-root {\n    font-size: 2rem !important;\n}\n\n/* Rating cu spa\u021biere \u00eentre stele */\n.spaced-rating .fod-rating-item {\n    margin: 0 0.25rem;\n}\n\n/* Culori diferite pentru hover */\n.hover-rating .fod-rating-item:hover .fod-icon-root {\n    color: var(--fod-palette-warning-main);\n}\n\n/* Anima\u021bie diferit\u0103 */\n.smooth-rating .fod-rating-item {\n    transition: all 0.3s ease;\n}\n\n.smooth-rating .fod-rating-item.active {\n    transform: scale(1.2) rotate(10deg);\n}\n\n/* Rating vertical */\n.vertical-rating .fod-rating-root {\n    flex-direction: column;\n}\n\n/* Gradient pentru stele selectate */\n.gradient-rating .fod-rating-item.fod-rating-item-active .fod-icon-root {\n    background: linear-gradient(45deg, #ffd700, #ffed4e);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodRating/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodRating @bind-SelectedValue=\"rating\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#in-dialog","title":"\u00cen Dialog","text":"<pre><code>&lt;FodDialog Show=\"@showRatingDialog\"&gt;\n    &lt;FodDialogTitle&gt;Evalua\u021bi serviciul&lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        &lt;FodRating @bind-SelectedValue=\"serviceRating\" \n                   Size=\"FodSize.Large\" /&gt;\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodButton OnClick=\"SubmitRating\"&gt;Trimite&lt;/FodButton&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodDialog&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#in-chip-pentru-afisare-compacta","title":"\u00cen Chip pentru afi\u0219are compact\u0103","text":"<pre><code>&lt;FodChip Color=\"FodColor.Primary\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Star\" \n             Size=\"FodSize.Small\" /&gt;\n    @rating.ToString(\"F1\")\n&lt;/FodChip&gt;\n</code></pre>"},{"location":"fod/componente/FodRating/#8-validare-in-formulare","title":"8. Validare \u00een formulare","text":"<pre><code>@using System.ComponentModel.DataAnnotations\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;InputRating @bind-Value=\"model.Rating\" /&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; model.Rating)\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;Submit&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class RatingModel\n    {\n        [Required(ErrorMessage = \"Rating este obligatoriu\")]\n        [Range(1, 5, ErrorMessage = \"Rating trebuie s\u0103 fie \u00eentre 1 \u0219i 5\")]\n        public int Rating { get; set; }\n    }\n\n    private RatingModel model = new();\n}\n\n// Component wrapper pentru validare\n@code {\n    public class InputRating : InputBase&lt;int&gt;\n    {\n        protected override bool TryParseValueFromString(string value, \n            out int result, out string validationErrorMessage)\n        {\n            if (int.TryParse(value, out result))\n            {\n                validationErrorMessage = null;\n                return true;\n            }\n\n            validationErrorMessage = \"Valoare invalid\u0103\";\n            return false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Folose\u0219te un singur event handler pentru toate stelele</li> <li>Minimizeaz\u0103 re-render prin CascadingValue</li> <li>Anima\u021biile folosesc CSS transforms</li> </ul>"},{"location":"fod/componente/FodRating/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Radio inputs ascunse pentru screen readers</li> <li>Suport complet pentru navigare cu tastatur\u0103  </li> <li>ARIA labels pentru fiecare stea</li> <li>Focus vizibil pentru navigare</li> </ul>"},{"location":"fod/componente/FodRating/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Valoare ini\u021bial\u0103 - Seta\u021bi 0 pentru \"f\u0103r\u0103 rating\"</li> <li>Feedback vizual - Folosi\u021bi HoveredValue pentru preview</li> <li>Readonly pentru afi\u0219are - Nu disabled pentru date existente</li> <li>Dimensiuni responsive - Size.Small pe mobile</li> <li>Validare - Verifica\u021bi rating &gt; 0 \u00eenainte de submit</li> <li>Text descriptiv - Ad\u0103uga\u021bi text pentru claritate</li> </ol>"},{"location":"fod/componente/FodRating/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodRating/#rating-nu-raspunde-la-click","title":"Rating nu r\u0103spunde la click","text":"<ul> <li>Verifica\u021bi c\u0103 nu este Disabled sau ReadOnly</li> <li>Verifica\u021bi c\u0103 SelectedValueChanged este conectat</li> </ul>"},{"location":"fod/componente/FodRating/#hover-nu-functioneaza","title":"Hover nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 HoveredValueChanged este setat</li> <li>Verifica\u021bi CSS pentru pointer-events</li> </ul>"},{"location":"fod/componente/FodRating/#iconite-nu-se-afiseaza","title":"Iconi\u021be nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 iconi\u021bele exist\u0103 \u00een FodIcons</li> <li>Verifica\u021bi importul fonturilor de iconi\u021be</li> </ul>"},{"location":"fod/componente/FodRating/#13-exemple-avansate","title":"13. Exemple avansate","text":""},{"location":"fod/componente/FodRating/#rating-cu-nivele-si-descrieri","title":"Rating cu nivele \u0219i descrieri","text":"<pre><code>&lt;div class=\"rating-with-levels\"&gt;\n    &lt;FodRating @bind-SelectedValue=\"satisfactionLevel\"\n               @bind-HoveredValue=\"hoveredLevel\"\n               MaxValue=\"5\"\n               Size=\"FodSize.Large\" /&gt;\n\n    &lt;FodText Typo=\"Typo.h6\" Class=\"mt-2 text-center\"&gt;\n        @GetLevelDescription()\n    &lt;/FodText&gt;\n\n    @if (satisfactionLevel &gt; 0)\n    {\n        &lt;FodAlert Severity=\"@GetAlertSeverity()\" Class=\"mt-3\"&gt;\n            @GetDetailedFeedback()\n        &lt;/FodAlert&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private int satisfactionLevel = 0;\n    private int hoveredLevel = 0;\n\n    private string GetLevelDescription()\n    {\n        var level = hoveredLevel &gt; 0 ? hoveredLevel : satisfactionLevel;\n        return level switch\n        {\n            1 =&gt; \"\ud83d\ude1e Foarte nemul\u021bumit\",\n            2 =&gt; \"\ud83d\ude1f Nemul\u021bumit\", \n            3 =&gt; \"\ud83d\ude10 Neutru\",\n            4 =&gt; \"\ud83d\ude0a Mul\u021bumit\",\n            5 =&gt; \"\ud83d\ude04 Foarte mul\u021bumit\",\n            _ =&gt; \"Selecta\u021bi nivelul de satisfac\u021bie\"\n        };\n    }\n\n    private Severity GetAlertSeverity() =&gt; satisfactionLevel switch\n    {\n        1 or 2 =&gt; Severity.Error,\n        3 =&gt; Severity.Warning,\n        4 or 5 =&gt; Severity.Success,\n        _ =&gt; Severity.Info\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodRating/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodRating</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru implementarea sistemelor de evaluare \u00een aplica\u021bii. Cu suport pentru personalizare extensiv\u0103, accesibilitate complet\u0103 \u0219i integrare u\u0219oar\u0103, componenta acoper\u0103 toate cazurile comune de utilizare pentru rating \u0219i feedback.</p>"},{"location":"fod/componente/FodRecaptcha/","title":"Recaptcha","text":""},{"location":"fod/componente/FodRecaptcha/#documentatie-pentru-componenta-fodrecaptcha","title":"Documenta\u021bie pentru componenta FodRecaptcha","text":""},{"location":"fod/componente/FodRecaptcha/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodRecaptcha</code> este componenta pentru integrarea Google reCAPTCHA \u00een aplica\u021bii Blazor, oferind protec\u021bie \u00eempotriva spam-ului \u0219i automatiz\u0103rilor abuzive. Componenta suport\u0103 reCAPTCHA v3 (invizibil) \u0219i include validare at\u00e2t pe client c\u00e2t \u0219i pe server.</p> <p>Caracteristici principale: - Integrare Google reCAPTCHA v3 (invizibil) - Validare pe client \u0219i server - Configurare flexibil\u0103 prin op\u021biuni - Suport pentru utilizatori autentifica\u021bi - Gestionare automat\u0103 a scripturilor - R\u0103spuns cu status detaliat - Integrare u\u0219oar\u0103 \u00een formulare - Protec\u021bie \u00eempotriva atacurilor bot</p>"},{"location":"fod/componente/FodRecaptcha/#2-configurare-initiala","title":"2. Configurare ini\u021bial\u0103","text":""},{"location":"fod/componente/FodRecaptcha/#pasul-1-obtinerea-cheilor-google-recaptcha","title":"Pasul 1: Ob\u021binerea cheilor Google reCAPTCHA","text":"<ol> <li>Accesa\u021bi Google reCAPTCHA Admin Console</li> <li>\u00cenregistra\u021bi un nou site</li> <li>Selecta\u021bi reCAPTCHA v3</li> <li>Copia\u021bi Site Key \u0219i Secret Key</li> </ol>"},{"location":"fod/componente/FodRecaptcha/#pasul-2-configurare-in-appsettingsjson","title":"Pasul 2: Configurare \u00een appsettings.json","text":"<pre><code>{\n  \"ReCaptcha\": {\n    \"SiteKey\": \"your-site-key-here\",\n    \"SecretKey\": \"your-secret-key-here\",\n    \"Version\": \"V3\",\n    \"ValidateAuthenticated\": false\n  }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#pasul-3-inregistrare-servicii","title":"Pasul 3: \u00cenregistrare servicii","text":""},{"location":"fod/componente/FodRecaptcha/#client-side-programcs","title":"Client-side (Program.cs)","text":"<pre><code>// \u00cenregistrare serviciu recaptcha\nbuilder.Services.AddScoped&lt;IRecaptchaService, RecaptchaService&gt;();\n\n// Configurare op\u021biuni\nbuilder.Services.Configure&lt;ReCaptchaOptions&gt;(\n    builder.Configuration.GetSection(\"ReCaptcha\"));\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#server-side-programcs","title":"Server-side (Program.cs)","text":"<pre><code>// \u00cenregistrare serviciu validare\nbuilder.Services.AddScoped&lt;IRecaptchaValidationService, RecaptchaValidationService&gt;();\n\n// Configurare op\u021biuni\nbuilder.Services.Configure&lt;ReCaptchaOptions&gt;(\n    builder.Configuration.GetSection(\"ReCaptcha\"));\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#3-ghid-de-utilizare-api","title":"3. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodRecaptcha/#integrare-simpla-in-formular","title":"Integrare simpl\u0103 \u00een formular","text":"<pre><code>@page \"/contact\"\n@inject IRecaptchaService RecaptchaService\n@inject HttpClient Http\n\n&lt;EditForm Model=\"@contactForm\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodTextField @bind-Value=\"contactForm.Name\" \n                  Label=\"Nume\" \n                  Required=\"true\" /&gt;\n\n    &lt;FodTextField @bind-Value=\"contactForm.Email\" \n                  Label=\"Email\" \n                  Type=\"email\"\n                  Required=\"true\" /&gt;\n\n    &lt;FodTextArea @bind-Value=\"contactForm.Message\" \n                 Label=\"Mesaj\"\n                 Rows=\"5\"\n                 Required=\"true\" /&gt;\n\n    &lt;!-- Componenta reCAPTCHA --&gt;\n    &lt;FodRecaptcha /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\" \n               Color=\"FodColor.Primary\"\n               Disabled=\"@isSubmitting\"&gt;\n        @if (isSubmitting)\n        {\n            &lt;FodLoadingCircular Size=\"FodSize.Small\" \n                                Indeterminate=\"true\" \n                                Class=\"me-2\" /&gt;\n        }\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@if (!string.IsNullOrEmpty(statusMessage))\n{\n    &lt;FodAlert Severity=\"@alertSeverity\" Class=\"mt-3\"&gt;\n        @statusMessage\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private ContactForm contactForm = new();\n    private bool isSubmitting = false;\n    private string statusMessage = \"\";\n    private Severity alertSeverity = Severity.Info;\n\n    private async Task HandleSubmit()\n    {\n        isSubmitting = true;\n        statusMessage = \"\";\n\n        try\n        {\n            // Execut\u0103 validarea reCAPTCHA\n            var token = await RecaptchaService.Execute();\n\n            if (string.IsNullOrEmpty(token))\n            {\n                statusMessage = \"Validare reCAPTCHA e\u0219uat\u0103. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\";\n                alertSeverity = Severity.Error;\n                return;\n            }\n\n            // Trimite formularul cu token-ul\n            var response = await Http.PostAsJsonAsync(\"/api/contact\", new\n            {\n                contactForm.Name,\n                contactForm.Email,\n                contactForm.Message,\n                RecaptchaToken = token\n            });\n\n            if (response.IsSuccessStatusCode)\n            {\n                statusMessage = \"Mesaj trimis cu succes!\";\n                alertSeverity = Severity.Success;\n                contactForm = new(); // Reset form\n            }\n            else\n            {\n                statusMessage = \"Eroare la trimiterea mesajului.\";\n                alertSeverity = Severity.Error;\n            }\n        }\n        catch (Exception ex)\n        {\n            statusMessage = $\"Eroare: {ex.Message}\";\n            alertSeverity = Severity.Error;\n        }\n        finally\n        {\n            isSubmitting = false;\n        }\n    }\n\n    public class ContactForm\n    {\n        [Required(ErrorMessage = \"Numele este obligatoriu\")]\n        public string Name { get; set; }\n\n        [Required(ErrorMessage = \"Email-ul este obligatoriu\")]\n        [EmailAddress(ErrorMessage = \"Email invalid\")]\n        public string Email { get; set; }\n\n        [Required(ErrorMessage = \"Mesajul este obligatoriu\")]\n        public string Message { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#validare-server-side-controller-api","title":"Validare server-side (Controller API)","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class ContactController : ControllerBase\n{\n    private readonly IRecaptchaValidationService _recaptchaService;\n    private readonly IContactService _contactService;\n\n    public ContactController(\n        IRecaptchaValidationService recaptchaService,\n        IContactService contactService)\n    {\n        _recaptchaService = recaptchaService;\n        _contactService = contactService;\n    }\n\n    [HttpPost]\n    public async Task&lt;IActionResult&gt; Submit(ContactRequest request)\n    {\n        // Validare model\n        if (!ModelState.IsValid)\n        {\n            return BadRequest(ModelState);\n        }\n\n        // Validare reCAPTCHA\n        var recaptchaResponse = await _recaptchaService.Validate(\n            request.RecaptchaToken, \n            HttpContext);\n\n        if (recaptchaResponse.Status != ReCaptchaResponseStatusEnum.Success)\n        {\n            return BadRequest(new \n            { \n                error = \"Validare reCAPTCHA e\u0219uat\u0103\",\n                message = recaptchaResponse.Message \n            });\n        }\n\n        // Procesare formular\n        try\n        {\n            await _contactService.ProcessContactForm(request);\n            return Ok(new { message = \"Mesaj trimis cu succes\" });\n        }\n        catch (Exception ex)\n        {\n            return StatusCode(500, new { error = \"Eroare server\" });\n        }\n    }\n}\n\npublic class ContactRequest\n{\n    [Required]\n    public string Name { get; set; }\n\n    [Required]\n    [EmailAddress]\n    public string Email { get; set; }\n\n    [Required]\n    public string Message { get; set; }\n\n    [Required]\n    public string RecaptchaToken { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#formular-de-inregistrare-cu-recaptcha","title":"Formular de \u00eenregistrare cu reCAPTCHA","text":"<pre><code>@page \"/register\"\n@inject IRecaptchaService RecaptchaService\n@inject IAuthService AuthService\n@inject NavigationManager Navigation\n\n&lt;FodCard Class=\"mx-auto\" Style=\"max-width: 500px;\"&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\" Align=\"Align.Center\"&gt;\n            \u00cenregistrare cont nou\n        &lt;/FodText&gt;\n\n        &lt;EditForm Model=\"@registerModel\" OnValidSubmit=\"HandleRegister\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;FodTextField @bind-Value=\"registerModel.Email\" \n                          Label=\"Email\" \n                          Type=\"email\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; registerModel.Email)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"registerModel.Password\" \n                          Label=\"Parol\u0103\" \n                          Type=\"password\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; registerModel.Password)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"registerModel.ConfirmPassword\" \n                          Label=\"Confirm\u0103 parola\" \n                          Type=\"password\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; registerModel.ConfirmPassword)\" /&gt;\n\n            &lt;FodCheckbox @bind-Checked=\"registerModel.AcceptTerms\" \n                         Class=\"mb-3\"&gt;\n                Accept &lt;FodLink Href=\"/terms\"&gt;termenii \u0219i condi\u021biile&lt;/FodLink&gt;\n            &lt;/FodCheckbox&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; registerModel.AcceptTerms)\" /&gt;\n\n            &lt;!-- reCAPTCHA pentru protec\u021bie --&gt;\n            &lt;FodRecaptcha /&gt;\n\n            &lt;FodButton Type=\"ButtonType.Submit\" \n                       Color=\"FodColor.Primary\"\n                       FullWidth=\"true\"\n                       Disabled=\"@isProcessing\"&gt;\n                @if (isProcessing)\n                {\n                    &lt;FodLoadingCircular Size=\"FodSize.Small\" \n                                        Indeterminate=\"true\" \n                                        Class=\"me-2\" /&gt;\n                }\n                \u00cenregistrare\n            &lt;/FodButton&gt;\n        &lt;/EditForm&gt;\n\n        @if (errors.Any())\n        {\n            &lt;FodAlert Severity=\"Severity.Error\" Class=\"mt-3\"&gt;\n                &lt;ul class=\"mb-0\"&gt;\n                    @foreach (var error in errors)\n                    {\n                        &lt;li&gt;@error&lt;/li&gt;\n                    }\n                &lt;/ul&gt;\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private RegisterModel registerModel = new();\n    private bool isProcessing = false;\n    private List&lt;string&gt; errors = new();\n\n    private async Task HandleRegister()\n    {\n        isProcessing = true;\n        errors.Clear();\n\n        try\n        {\n            // Ob\u021bine token reCAPTCHA\n            var recaptchaToken = await RecaptchaService.Execute();\n\n            if (string.IsNullOrEmpty(recaptchaToken))\n            {\n                errors.Add(\"Validare de securitate e\u0219uat\u0103. Re\u00eenc\u0103rca\u021bi pagina.\");\n                return;\n            }\n\n            // \u00cenregistrare utilizator\n            var result = await AuthService.Register(\n                registerModel.Email, \n                registerModel.Password,\n                recaptchaToken);\n\n            if (result.Succeeded)\n            {\n                Navigation.NavigateTo(\"/login?registered=true\");\n            }\n            else\n            {\n                errors.AddRange(result.Errors);\n            }\n        }\n        catch (Exception ex)\n        {\n            errors.Add(\"Eroare la \u00eenregistrare. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\");\n        }\n        finally\n        {\n            isProcessing = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#configurare-pentru-utilizatori-autentificati","title":"Configurare pentru utilizatori autentifica\u021bi","text":"<pre><code>@* \u00cen componente unde utilizatorii autentifica\u021bi nu necesit\u0103 validare *@\n@inject IAuthenticationStateProvider AuthStateProvider\n\n@if (!isAuthenticated)\n{\n    &lt;FodRecaptcha /&gt;\n}\n\n@code {\n    private bool isAuthenticated = false;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var authState = await AuthStateProvider.GetAuthenticationStateAsync();\n        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#validare-manuala-cu-feedback-vizual","title":"Validare manual\u0103 cu feedback vizual","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Verificare securitate\n        &lt;/FodText&gt;\n\n        &lt;FodRecaptcha /&gt;\n\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"ValidateRecaptcha\"\n                   Class=\"mt-3\"&gt;\n            Verific\u0103\n        &lt;/FodButton&gt;\n\n        @if (validationResult != null)\n        {\n            &lt;FodAlert Severity=\"@GetSeverity()\" Class=\"mt-3\"&gt;\n                &lt;FodAlertTitle&gt;\n                    @(validationResult.Success ? \"Validare reu\u0219it\u0103\" : \"Validare e\u0219uat\u0103\")\n                &lt;/FodAlertTitle&gt;\n                @validationResult.Message\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private ReCaptchaResponse? validationResult;\n\n    private async Task ValidateRecaptcha()\n    {\n        var token = await RecaptchaService.Execute();\n\n        if (!string.IsNullOrEmpty(token))\n        {\n            var response = await Http.PostAsJsonAsync(\"/api/recaptcha/validate\", \n                new { token });\n\n            if (response.IsSuccessStatusCode)\n            {\n                validationResult = await response.Content\n                    .ReadFromJsonAsync&lt;ReCaptchaResponse&gt;();\n            }\n        }\n    }\n\n    private Severity GetSeverity() =&gt; \n        validationResult?.Success == true ? Severity.Success : Severity.Error;\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#4-model-si-configurare","title":"4. Model \u0219i configurare","text":""},{"location":"fod/componente/FodRecaptcha/#recaptchaoptions","title":"ReCaptchaOptions","text":"<pre><code>public class ReCaptchaOptions\n{\n    public string SiteKey { get; set; }\n    public string SecretKey { get; set; }\n    public ReCaptchaVersion Version { get; set; } = ReCaptchaVersion.V3;\n    public bool ValidateAuthenticated { get; set; } = false;\n}\n\npublic enum ReCaptchaVersion\n{\n    V2,\n    V2Invisible,\n    V3\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#recaptcharesponse","title":"ReCaptchaResponse","text":"<pre><code>public class ReCaptchaResponse\n{\n    public ReCaptchaResponseStatusEnum Status { get; set; }\n    public string Message { get; set; }\n    public bool Success =&gt; Status == ReCaptchaResponseStatusEnum.Success;\n}\n\npublic enum ReCaptchaResponseStatusEnum\n{\n    Failed,\n    Success,\n    Skipped\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#5-servicii-disponibile","title":"5. Servicii disponibile","text":""},{"location":"fod/componente/FodRecaptcha/#irecaptchaservice-client-side","title":"IRecaptchaService (Client-side)","text":"Metod\u0103 Descriere Return <code>Execute()</code> Execut\u0103 validarea \u0219i returneaz\u0103 token <code>Task&lt;string&gt;</code>"},{"location":"fod/componente/FodRecaptcha/#irecaptchavalidationservice-server-side","title":"IRecaptchaValidationService (Server-side)","text":"Metod\u0103 Descriere Return <code>Validate(string token, HttpContext context)</code> Valideaz\u0103 token-ul cu Google API <code>Task&lt;ReCaptchaResponse&gt;</code>"},{"location":"fod/componente/FodRecaptcha/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodRecaptcha/#in-wizard-pentru-formulare-multi-step","title":"\u00cen Wizard pentru formulare multi-step","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;Steps&gt;\n        &lt;FodWizardStep Title=\"Date personale\"&gt;\n            &lt;!-- C\u00e2mpuri formular --&gt;\n        &lt;/FodWizardStep&gt;\n\n        &lt;FodWizardStep Title=\"Verificare\"&gt;\n            &lt;!-- Rezumat date --&gt;\n            &lt;FodRecaptcha /&gt;\n        &lt;/FodWizardStep&gt;\n    &lt;/Steps&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#in-modal-pentru-actiuni-critice","title":"\u00cen Modal pentru ac\u021biuni critice","text":"<pre><code>&lt;FodModal Show=\"@showDeleteModal\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Confirmare \u0219tergere&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodText&gt;Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 \u0219terge\u021bi acest element?&lt;/FodText&gt;\n            &lt;FodRecaptcha /&gt;\n        &lt;/FodModalBody&gt;\n        &lt;FodModalFooter&gt;\n            &lt;FodButton OnClick=\"DeleteWithRecaptcha\" Color=\"FodColor.Error\"&gt;\n                \u0218terge\n            &lt;/FodButton&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; showDeleteModal = false)\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodModalFooter&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#7-gestionarea-erorilor","title":"7. Gestionarea erorilor","text":"<pre><code>@code {\n    private async Task&lt;bool&gt; ValidateWithRecaptcha()\n    {\n        try\n        {\n            var token = await RecaptchaService.Execute();\n\n            if (string.IsNullOrEmpty(token))\n            {\n                // Token gol - posibil utilizator blocat\n                await ShowError(\"Verificarea de securitate a e\u0219uat. \" +\n                    \"V\u0103 rug\u0103m re\u00eenc\u0103rca\u021bi pagina.\");\n                return false;\n            }\n\n            return true;\n        }\n        catch (JSException jsEx)\n        {\n            // Eroare JavaScript - script ne-\u00eenc\u0103rcat\n            await ShowError(\"Scriptul de securitate nu s-a \u00eenc\u0103rcat. \" +\n                \"Verifica\u021bi conexiunea.\");\n            return false;\n        }\n        catch (TaskCanceledException)\n        {\n            // Timeout\n            await ShowError(\"Verificarea a expirat. \u00cencerca\u021bi din nou.\");\n            return false;\n        }\n        catch (Exception ex)\n        {\n            // Alt\u0103 eroare\n            await ShowError(\"Eroare nea\u0219teptat\u0103 la verificare.\");\n            return false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#8-configurare-avansata","title":"8. Configurare avansat\u0103","text":""},{"location":"fod/componente/FodRecaptcha/#configurare-cu-environment-variables","title":"Configurare cu environment variables","text":"<pre><code>// Program.cs\nbuilder.Services.Configure&lt;ReCaptchaOptions&gt;(options =&gt;\n{\n    options.SiteKey = builder.Configuration[\"RECAPTCHA_SITE_KEY\"] \n        ?? builder.Configuration[\"ReCaptcha:SiteKey\"];\n    options.SecretKey = builder.Configuration[\"RECAPTCHA_SECRET_KEY\"] \n        ?? builder.Configuration[\"ReCaptcha:SecretKey\"];\n    options.Version = Enum.Parse&lt;ReCaptchaVersion&gt;(\n        builder.Configuration[\"ReCaptcha:Version\"] ?? \"V3\");\n});\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#middleware-pentru-validare-automata","title":"Middleware pentru validare automat\u0103","text":"<pre><code>public class RecaptchaMiddleware\n{\n    private readonly RequestDelegate _next;\n    private readonly IRecaptchaValidationService _recaptchaService;\n\n    public RecaptchaMiddleware(\n        RequestDelegate next, \n        IRecaptchaValidationService recaptchaService)\n    {\n        _next = next;\n        _recaptchaService = recaptchaService;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        // Verific\u0103 doar pentru anumite endpoint-uri\n        if (ShouldValidateRecaptcha(context))\n        {\n            var token = context.Request.Headers[\"X-Recaptcha-Token\"]\n                .FirstOrDefault();\n\n            if (string.IsNullOrEmpty(token))\n            {\n                context.Response.StatusCode = 400;\n                await context.Response.WriteAsync(\"reCAPTCHA token required\");\n                return;\n            }\n\n            var result = await _recaptchaService.Validate(token, context);\n            if (!result.Success)\n            {\n                context.Response.StatusCode = 403;\n                await context.Response.WriteAsync(\"reCAPTCHA validation failed\");\n                return;\n            }\n        }\n\n        await _next(context);\n    }\n\n    private bool ShouldValidateRecaptcha(HttpContext context)\n    {\n        // Logica pentru determinarea endpoint-urilor protejate\n        return context.Request.Path.StartsWithSegments(\"/api/public\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#9-testare","title":"9. Testare","text":""},{"location":"fod/componente/FodRecaptcha/#mock-pentru-development","title":"Mock pentru development","text":"<pre><code>public class MockRecaptchaService : IRecaptchaService\n{\n    public Task&lt;string&gt; Execute()\n    {\n        // \u00cen development, returneaz\u0103 \u00eentotdeauna un token valid\n        return Task.FromResult(\"mock-recaptcha-token\");\n    }\n}\n\n// \u00cen Program.cs pentru development\nif (builder.Environment.IsDevelopment())\n{\n    builder.Services.AddScoped&lt;IRecaptchaService, MockRecaptchaService&gt;();\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#10-monitorizare-si-analiza","title":"10. Monitorizare \u0219i analiz\u0103","text":"<pre><code>// Server-side logging\npublic class RecaptchaValidationService : IRecaptchaValidationService\n{\n    private readonly ILogger&lt;RecaptchaValidationService&gt; _logger;\n\n    public async Task&lt;ReCaptchaResponse&gt; Validate(string token, HttpContext context)\n    {\n        // ... cod validare ...\n\n        if (!googleResponse.Success)\n        {\n            _logger.LogWarning(\"reCAPTCHA validation failed for IP: {IP}, \" +\n                \"Errors: {Errors}\", \n                context.Connection.RemoteIpAddress,\n                string.Join(\", \", googleResponse.ErrorCodes));\n        }\n\n        // Metrici pentru monitorizare\n        RecaptchaMetrics.RecordValidation(googleResponse.Success);\n\n        return response;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRecaptcha/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>\u00centotdeauna valida\u021bi pe server - Nu v\u0103 baza\u021bi doar pe validarea client</li> <li>Gestiona\u021bi erori - Oferi\u021bi feedback clar utilizatorilor</li> <li>Timeout-uri - Seta\u021bi timeout pentru cererile API</li> <li>Rate limiting - Combina\u021bi cu rate limiting pentru protec\u021bie extra</li> <li>Monitorizare - Urm\u0103ri\u021bi rata de succes/e\u0219ec</li> <li>Fallback - Ave\u021bi o strategie pentru c\u00e2nd serviciul nu e disponibil</li> </ol>"},{"location":"fod/componente/FodRecaptcha/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodRecaptcha/#recaptcha-nu-se-incarca","title":"reCAPTCHA nu se \u00eencarc\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 site key este corect</li> <li>Verifica\u021bi c\u0103 domeniul este \u00eenregistrat \u00een Google Console</li> <li>Verifica\u021bi blocarea scripturilor \u00een browser</li> </ul>"},{"location":"fod/componente/FodRecaptcha/#token-invalid-pe-server","title":"Token invalid pe server","text":"<ul> <li>Verifica\u021bi c\u0103 secret key este corect</li> <li>Verifica\u021bi c\u0103 token-ul nu a expirat (2 minute)</li> <li>Verifica\u021bi c\u0103 IP-ul match-uie\u0219te</li> </ul>"},{"location":"fod/componente/FodRecaptcha/#utilizatori-blocati-incorect","title":"Utilizatori bloca\u021bi incorect","text":"<ul> <li>Ajusta\u021bi pragul de scor \u00een Google Console</li> <li>Implementa\u021bi logic\u0103 de retry</li> <li>Oferi\u021bi metod\u0103 alternativ\u0103 de verificare</li> </ul>"},{"location":"fod/componente/FodRecaptcha/#13-limitari","title":"13. Limit\u0103ri","text":"<ul> <li>Token-urile expir\u0103 dup\u0103 2 minute</li> <li>Necesit\u0103 conexiune internet</li> <li>Poate bloca utilizatori legitimi (false pozitive)</li> <li>Nu func\u021bioneaz\u0103 \u00een browsere foarte vechi</li> <li>Limit\u0103 de cereri per cheie</li> </ul>"},{"location":"fod/componente/FodRecaptcha/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodRecaptcha</code> ofer\u0103 o integrare simpl\u0103 \u0219i eficient\u0103 a Google reCAPTCHA \u00een aplica\u021bii Blazor. Cu suport pentru validare pe client \u0219i server, configurare flexibil\u0103 \u0219i gestionare automat\u0103 a scripturilor, componenta asigur\u0103 protec\u021bie robust\u0103 \u00eempotriva spam-ului \u0219i automatiz\u0103rilor abuzive.</p>"},{"location":"fod/componente/FodRequestOptions/","title":"FodRequestOptions","text":""},{"location":"fod/componente/FodRequestOptions/#documentatie-pentru-componenta-fodrequestoptions","title":"Documenta\u021bie pentru componenta FodRequestOptions","text":""},{"location":"fod/componente/FodRequestOptions/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodRequestOptions</code> este o component\u0103 container care \u00eencarc\u0103 \u0219i furnizeaz\u0103 op\u021biunile de configurare pentru cererile de servicii guvernamentale. Componenta ob\u021bine op\u021biunile de la server pe baza tipului de cerere \u0219i le face disponibile pentru componentele copil prin <code>CascadingValue</code>.</p> <p>Caracteristici principale: - \u00cenc\u0103rcare asincron\u0103 a op\u021biunilor de cerere - Furnizare automat\u0103 prin cascad\u0103 a op\u021biunilor - Indicator de \u00eenc\u0103rcare integrat - Suport pentru op\u021biuni de apostil\u0103 - Integrare cu IRequestService - Management automat al st\u0103rii de \u00eenc\u0103rcare</p>"},{"location":"fod/componente/FodRequestOptions/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodRequestOptions/#incarcare-optiuni-pentru-formular-cerere","title":"\u00cenc\u0103rcare op\u021biuni pentru formular cerere","text":"<pre><code>&lt;FodRequestOptions RequestTypeCode=\"APOSTILA_01\" \n                   RequestService=\"@requestService\"\n                   RequestModel=\"@requestModel\"&gt;\n    &lt;FodForm&gt;\n        &lt;!-- C\u00e2mpurile formularului au acces la RequestOptions --&gt;\n        &lt;FodInput Label=\"Nume\" @bind-Value=\"model.Name\" /&gt;\n\n        &lt;!-- Acces la op\u021biuni specifice --&gt;\n        &lt;FodApostila /&gt;\n    &lt;/FodForm&gt;\n&lt;/FodRequestOptions&gt;\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#utilizare-cu-serviciu-injectat","title":"Utilizare cu serviciu injectat","text":"<pre><code>@inject IRequestService RequestService\n\n&lt;FodRequestOptions RequestTypeCode=\"@currentRequestType\" \n                   RequestService=\"@RequestService\"\n                   RequestModel=\"@requestData\"&gt;\n    &lt;RequestForm /&gt;\n&lt;/FodRequestOptions&gt;\n\n@code {\n    private string currentRequestType = \"SERVICE_001\";\n    private FodRequestModel requestData = new();\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Obligatoriu <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul care va avea acces la op\u021biuni Nu <code>RequestService</code> <code>IRequestService</code> Serviciul pentru ob\u021binerea op\u021biunilor Da <code>RequestModel</code> <code>FodRequestModel</code> Modelul cererii curente Da <code>RequestTypeCode</code> <code>string</code> Codul tipului de cerere Da"},{"location":"fod/componente/FodRequestOptions/#4-valori-cascade-furnizate","title":"4. Valori Cascade Furnizate","text":"<p>Componenta furnizeaz\u0103 trei valori prin cascad\u0103: 1. <code>FodRequestOptionsModel</code> - Op\u021biunile complete 2. <code>ApostilaOptions</code> - Op\u021biunile specifice apostilei 3. <code>FodRequestModel</code> - Modelul cererii</p>"},{"location":"fod/componente/FodRequestOptions/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodRequestOptions/#formular-dinamic-bazat-pe-optiuni","title":"Formular dinamic bazat pe op\u021biuni","text":"<pre><code>&lt;FodRequestOptions RequestTypeCode=\"@SelectedServiceType\" \n                   RequestService=\"@RequestService\"\n                   RequestModel=\"@currentRequest\"&gt;\n    &lt;CascadingValue Value=\"this\" IsFixed=\"true\"&gt;\n        &lt;DynamicRequestForm /&gt;\n    &lt;/CascadingValue&gt;\n&lt;/FodRequestOptions&gt;\n\n@* DynamicRequestForm.razor *@\n@code {\n    [CascadingParameter] \n    public FodRequestOptionsModel Options { get; set; }\n\n    [CascadingParameter] \n    public FodRequestModel Request { get; set; }\n\n    protected override void OnParametersSet()\n    {\n        if (Options != null)\n        {\n            // Construie\u0219te formularul dinamic bazat pe op\u021biuni\n            BuildFormFields(Options.AvailableFields);\n        }\n    }\n\n    private void BuildFormFields(List&lt;FieldOption&gt; fields)\n    {\n        foreach (var field in fields)\n        {\n            switch (field.Type)\n            {\n                case \"text\":\n                    // Adaug\u0103 c\u00e2mp text\n                    break;\n                case \"date\":\n                    // Adaug\u0103 selector dat\u0103\n                    break;\n                case \"select\":\n                    // Adaug\u0103 dropdown cu op\u021biuni\n                    break;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#handler-pentru-schimbare-tip-cerere","title":"Handler pentru schimbare tip cerere","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-Value=\"selectedRequestType\" \n           Label=\"Tip cerere\"&gt;\n    @foreach (var type in availableTypes)\n    {\n        &lt;FodSelectItem Value=\"@type.Code\"&gt;@type.Name&lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@if (!string.IsNullOrEmpty(selectedRequestType))\n{\n    &lt;FodRequestOptions RequestTypeCode=\"@selectedRequestType\" \n                       RequestService=\"@RequestService\"\n                       RequestModel=\"@requestModel\"\n                       @key=\"@selectedRequestType\"&gt;\n        &lt;RequestDetailsForm OnSubmit=\"HandleSubmit\" /&gt;\n    &lt;/FodRequestOptions&gt;\n}\n\n@code {\n    private string selectedRequestType;\n    private FodRequestModel requestModel = new();\n    private List&lt;RequestType&gt; availableTypes;\n\n    [Inject] private IRequestService RequestService { get; set; }\n\n    protected override async Task OnInitializedAsync()\n    {\n        availableTypes = await RequestService.GetAvailableTypes();\n    }\n\n    private void HandleSubmit()\n    {\n        // Procesare cerere cu op\u021biunile \u00eenc\u0103rcate\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#wizard-cu-optiuni-per-pas","title":"Wizard cu op\u021biuni per pas","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Title=\"Selectare serviciu\"&gt;\n        &lt;ServiceSelector @bind-Value=\"serviceType\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Detalii cerere\"&gt;\n        @if (!string.IsNullOrEmpty(serviceType))\n        {\n            &lt;FodRequestOptions RequestTypeCode=\"@serviceType\" \n                               RequestService=\"@RequestService\"\n                               RequestModel=\"@request\"&gt;\n                &lt;RequestDetailsStep /&gt;\n            &lt;/FodRequestOptions&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Verificare\"&gt;\n        &lt;RequestSummary Request=\"@request\" /&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private string serviceType;\n    private FodRequestModel request = new();\n\n    [Inject] private IRequestService RequestService { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/FodRequestOptions/#implementare-irequestservice","title":"Implementare IRequestService","text":"<pre><code>public interface IRequestService\n{\n    Task&lt;FodRequestOptionsModel&gt; GetOptions(string requestTypeCode);\n    Task&lt;List&lt;RequestType&gt;&gt; GetAvailableTypes();\n    // alte metode...\n}\n\npublic class RequestService : IRequestService\n{\n    private readonly HttpClient _httpClient;\n\n    public async Task&lt;FodRequestOptionsModel&gt; GetOptions(string requestTypeCode)\n    {\n        var response = await _httpClient.GetAsync(\n            $\"api/requests/options/{requestTypeCode}\");\n\n        if (response.IsSuccessStatusCode)\n        {\n            return await response.Content\n                .ReadFromJsonAsync&lt;FodRequestOptionsModel&gt;();\n        }\n\n        throw new Exception($\"Failed to load options for {requestTypeCode}\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#model-fodrequestoptionsmodel","title":"Model FodRequestOptionsModel","text":"<pre><code>public class FodRequestOptionsModel\n{\n    public string RequestTypeCode { get; set; }\n    public string RequestTypeName { get; set; }\n    public List&lt;FieldOption&gt; AvailableFields { get; set; }\n    public ApostilaOptions ApostilaOptions { get; set; }\n    public ValidationRules ValidationRules { get; set; }\n    public List&lt;DocumentType&gt; RequiredDocuments { get; set; }\n    public PricingInfo Pricing { get; set; }\n    public ProcessingTimeInfo ProcessingTime { get; set; }\n}\n\npublic class ApostilaOptions\n{\n    public bool IsApostilaService { get; set; }\n    public List&lt;Country&gt; AvailableCountries { get; set; }\n    public List&lt;DocumentType&gt; ApostilableDocuments { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#7-gestionare-stari-de-incarcare","title":"7. Gestionare St\u0103ri de \u00cenc\u0103rcare","text":""},{"location":"fod/componente/FodRequestOptions/#loading-state-customizat","title":"Loading state customizat","text":"<pre><code>&lt;FodRequestOptions RequestTypeCode=\"@typeCode\" \n                   RequestService=\"@RequestService\"\n                   RequestModel=\"@model\"&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            @if (IsOptionsLoaded)\n            {\n                &lt;RequestForm /&gt;\n            }\n            else\n            {\n                &lt;FodSkeleton Height=\"200\" /&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodRequestOptions&gt;\n\n@code {\n    [CascadingParameter] \n    public FodRequestOptionsModel Options { get; set; }\n\n    private bool IsOptionsLoaded =&gt; Options != null;\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#error-handling","title":"Error handling","text":"<pre><code>@if (loadError != null)\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n        Nu s-au putut \u00eenc\u0103rca op\u021biunile: @loadError\n    &lt;/FodAlert&gt;\n}\nelse\n{\n    &lt;FodRequestOptions RequestTypeCode=\"@requestType\" \n                       RequestService=\"@RequestService\"\n                       RequestModel=\"@requestModel\"&gt;\n        &lt;RequestContent /&gt;\n    &lt;/FodRequestOptions&gt;\n}\n\n@code {\n    private string loadError;\n\n    protected override async Task OnInitializedAsync()\n    {\n        try\n        {\n            // Verificare prealabil\u0103\n            await RequestService.CheckAvailability(requestType);\n        }\n        catch (Exception ex)\n        {\n            loadError = ex.Message;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodRequestOptions/#formular-cu-validare-bazata-pe-optiuni","title":"Formular cu validare bazat\u0103 pe op\u021biuni","text":"<pre><code>&lt;FodRequestOptions RequestTypeCode=\"CERTIFICATE_001\" \n                   RequestService=\"@RequestService\"\n                   RequestModel=\"@certificateRequest\"&gt;\n    &lt;EditForm Model=\"certificateRequest\" OnValidSubmit=\"HandleSubmit\"&gt;\n        &lt;DataAnnotationsValidator /&gt;\n\n        &lt;OptionsBasedValidator /&gt;\n\n        &lt;FodInput Label=\"Nume\" @bind-Value=\"certificateRequest.Name\" /&gt;\n\n        @if (Options?.RequiredDocuments?.Any() == true)\n        {\n            &lt;h4&gt;Documente necesare&lt;/h4&gt;\n            @foreach (var doc in Options.RequiredDocuments)\n            {\n                &lt;FodFileUpload Label=\"@doc.Name\" \n                               Accept=\"@doc.AcceptedFormats\" /&gt;\n            }\n        }\n\n        &lt;FodButton Type=\"submit\"&gt;Trimite cererea&lt;/FodButton&gt;\n    &lt;/EditForm&gt;\n&lt;/FodRequestOptions&gt;\n\n@code {\n    [CascadingParameter] \n    public FodRequestOptionsModel Options { get; set; }\n\n    private CertificateRequest certificateRequest = new();\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#multi-service-dashboard","title":"Multi-service dashboard","text":"<pre><code>@foreach (var service in userServices)\n{\n    &lt;FodGrid item xs=\"12\" md=\"6\" lg=\"4\"&gt;\n        &lt;FodRequestOptions RequestTypeCode=\"@service.Code\" \n                           RequestService=\"@RequestService\"\n                           RequestModel=\"@GetRequestModel(service.Code)\"\n                           @key=\"@service.Code\"&gt;\n            &lt;ServiceCard Service=\"@service\" /&gt;\n        &lt;/FodRequestOptions&gt;\n    &lt;/FodGrid&gt;\n}\n\n@code {\n    private List&lt;UserService&gt; userServices;\n    private Dictionary&lt;string, FodRequestModel&gt; requestModels = new();\n\n    private FodRequestModel GetRequestModel(string code)\n    {\n        if (!requestModels.ContainsKey(code))\n        {\n            requestModels[code] = new FodRequestModel();\n        }\n        return requestModels[code];\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Caching - Cache-ui\u021bi op\u021biunile pentru performan\u021b\u0103</li> <li>Error handling - Trata\u021bi erorile de \u00eenc\u0103rcare</li> <li>Loading states - Afi\u0219a\u021bi feedback \u00een timpul \u00eenc\u0103rc\u0103rii</li> <li>Key usage - Folosi\u021bi <code>@key</code> pentru re-randare la schimbare</li> <li>Null checks - Verifica\u021bi existen\u021ba op\u021biunilor \u00eenainte de utilizare</li> </ol>"},{"location":"fod/componente/FodRequestOptions/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Cache op\u021biunile frecvent utilizate</li> <li>Folosi\u021bi <code>IsFixed=\"true\"</code> pentru CascadingValue c\u00e2nd e posibil</li> <li>Evita\u021bi \u00eenc\u0103rc\u0103ri repetate pentru acela\u0219i tip</li> <li>Implementa\u021bi retry logic pentru rezilien\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodRequestOptions/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodRequestOptions/#optiunile-nu-se-incarca","title":"Op\u021biunile nu se \u00eencarc\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 RequestService este injectat corect</li> <li>Verifica\u021bi c\u0103 RequestTypeCode este valid</li> <li>Verifica\u021bi conectivitatea la API</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FodRequestOptions/#componentele-copil-nu-primesc-optiunile","title":"Componentele copil nu primesc op\u021biunile","text":"<ul> <li>Verifica\u021bi c\u0103 folosi\u021bi CascadingParameter corect</li> <li>Verifica\u021bi ordinea CascadingValue</li> <li>Asigura\u021bi-v\u0103 c\u0103 ChildContent este randat dup\u0103 \u00eenc\u0103rcare</li> </ul>"},{"location":"fod/componente/FodRequestOptions/#12-integrare-cu-alte-componente","title":"12. Integrare cu Alte Componente","text":"<pre><code>&lt;FodRequestOptions RequestTypeCode=\"@selectedType\" \n                   RequestService=\"@RequestService\"\n                   RequestModel=\"@model\"&gt;\n    &lt;!-- Apostil\u0103 cu op\u021biuni --&gt;\n    &lt;FodApostila /&gt;\n\n    &lt;!-- Cost calculator cu op\u021biuni --&gt;\n    &lt;FodRequestCost /&gt;\n\n    &lt;!-- Selector documente bazat pe op\u021biuni --&gt;\n    &lt;DocumentSelector /&gt;\n&lt;/FodRequestOptions&gt;\n</code></pre>"},{"location":"fod/componente/FodRequestOptions/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodRequestOptions</code> este o component\u0103 esen\u021bial\u0103 pentru aplica\u021biile care gestioneaz\u0103 cereri de servicii guvernamentale. Prin \u00eenc\u0103rcarea \u0219i furnizarea automat\u0103 a op\u021biunilor specifice tipului de cerere, componenta simplific\u0103 dezvoltarea formularelor dinamice \u0219i asigur\u0103 consisten\u021ba \u00een procesarea cererilor.</p>"},{"location":"fod/componente/FodRequestor/","title":"FodRequestor","text":""},{"location":"fod/componente/FodRequestor/#documentatie-pentru-componenta-fodrequestor","title":"Documenta\u021bie pentru componenta FodRequestor","text":""},{"location":"fod/componente/FodRequestor/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodRequestor</code> este o component\u0103 complex\u0103 pentru gestionarea informa\u021biilor despre solicitant \u00een aplica\u021biile guvernamentale. Suport\u0103 at\u00e2t persoane fizice c\u00e2t \u0219i juridice, cu validare automat\u0103 prin servicii RSP/RSUD, autoriz\u0103ri MPower \u0219i populare automat\u0103 a datelor.</p> <p>Caracteristici principale: - Suport pentru persoane fizice \u0219i juridice - Validare IDNP/IDNO prin servicii RSP - Integrare MPower pentru \u00eemputerniciri - Populare automat\u0103 date din context - Validare rela\u021bie administrator-companie - Suport pentru statute multiple de solicitant - Loading states pentru fiecare c\u00e2mp - Evenimente pentru toate schimb\u0103rile - Configurare flexibil\u0103 vizibilitate c\u00e2mpuri</p>"},{"location":"fod/componente/FodRequestor/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodRequestor/#formular-simplu-pentru-solicitant","title":"Formular simplu pentru solicitant","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestorModel\" /&gt;\n\n@code {\n    private IRequestor requestorModel = new FodRequestorModel();\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#formular-cu-validare-automata","title":"Formular cu validare automat\u0103","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              AutoPopulateNameByIdnp=\"true\"\n              ValidateNameByIdnp=\"true\"\n              IsEmailRequired=\"true\"\n              IsPhoneRequired=\"true\" /&gt;\n\n@code {\n    private IRequestor requestor = new FodRequestorModel();\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#formular-pentru-context-autentificat","title":"Formular pentru context autentificat","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              LoadFromContext=\"true\"\n              DisableRequestorIdnp=\"true\"\n              DisableRequestorType=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodRequestor/#3-parametri-principali","title":"3. Parametri Principali","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Model</code> <code>IRequestor</code> Modelul de date pentru solicitant <code>new FodRequestorModel()</code> <code>AutoPopulateNameByIdnp</code> <code>bool</code> Populeaz\u0103 automat numele din IDNP <code>false</code> <code>AutoPopulateOrganizationNameByIdno</code> <code>bool</code> Populeaz\u0103 automat numele organiza\u021biei <code>false</code> <code>ValidateNameByIdnp</code> <code>bool</code> Valideaz\u0103 coresponden\u021ba IDNP-nume <code>false</code> <code>VerifyEntityRelationship</code> <code>bool</code> Verific\u0103 rela\u021bia administrator-companie <code>false</code> <code>LoadFromContext</code> <code>bool</code> \u00cencarc\u0103 date din context autentificat <code>false</code> <code>ShowOnBehalfOf</code> <code>bool</code> Afi\u0219eaz\u0103 op\u021biuni pentru \u00eemputernicire <code>false</code> <code>IsEmailRequired</code> <code>bool</code> Email obligatoriu <code>false</code> <code>IsPhoneRequired</code> <code>bool</code> Telefon obligatoriu <code>false</code>"},{"location":"fod/componente/FodRequestor/#4-parametri-de-control-vizibilitate","title":"4. Parametri de Control Vizibilitate","text":"Proprietate Tip Descriere <code>HideRequestorType</code> <code>bool</code> Ascunde selec\u021bia tip persoan\u0103 <code>HideRequestorIndividual</code> <code>bool</code> Ascunde c\u00e2mpurile pentru persoan\u0103 fizic\u0103 <code>HideRequestorOrganisation</code> <code>bool</code> Ascunde c\u00e2mpurile pentru organiza\u021bie <code>HideRequestorIdnp</code> <code>bool</code> Ascunde c\u00e2mpul IDNP <code>HideAuthorization</code> <code>bool</code> Ascunde selec\u021bia autoriz\u0103ri <code>HideOnBehalfOn</code> <code>bool</code> Ascunde selec\u021bia pentru \u00eemputernicire <code>HideRequestorIndividualDetails</code> <code>bool</code> Ascunde detaliile de contact"},{"location":"fod/componente/FodRequestor/#5-parametri-de-dezactivare","title":"5. Parametri de Dezactivare","text":"Proprietate Tip Descriere <code>DisableRequestorType</code> <code>bool</code> Dezactiveaz\u0103 selec\u021bia tip persoan\u0103 <code>DisableRequestorIdnp</code> <code>bool</code> Dezactiveaz\u0103 c\u00e2mpul IDNP <code>DisableRequestorCompanyName</code> <code>bool</code> Dezactiveaz\u0103 numele companiei <code>DisableRequestorIdno</code> <code>bool</code> Dezactiveaz\u0103 IDNO <code>DisableOnBehalfOn</code> <code>bool</code> Dezactiveaz\u0103 selec\u021bia \u00eemputernicire <code>IsReadonly</code> <code>bool</code> Seteaz\u0103 toate c\u00e2mpurile readonly"},{"location":"fod/componente/FodRequestor/#6-evenimente","title":"6. Evenimente","text":"Eveniment Tip Descriere <code>OnRequestorIdnpChanged</code> <code>EventCallback&lt;string&gt;</code> IDNP schimbat <code>OnRequestorIdnoChanged</code> <code>EventCallback&lt;string&gt;</code> IDNO schimbat <code>OnRequestorFirstNameChanged</code> <code>EventCallback&lt;string&gt;</code> Prenume schimbat <code>OnRequestorLastNameChanged</code> <code>EventCallback&lt;string&gt;</code> Nume schimbat <code>OnRequestorCompanyNameChanged</code> <code>EventCallback&lt;string&gt;</code> Nume companie schimbat <code>OnRequestorPhoneChanged</code> <code>EventCallback&lt;string&gt;</code> Telefon schimbat <code>OnRequestorEmailChanged</code> <code>EventCallback&lt;string&gt;</code> Email schimbat <code>OnRequestorTypeChanged</code> <code>EventCallback&lt;PersonType&gt;</code> Tip persoan\u0103 schimbat <code>OnBehalfOnChanged</code> <code>EventCallback&lt;OnBehalfOnEnum&gt;</code> \u00cemputernicire schimbat\u0103 <code>OnChangeSelectedAuthorization</code> <code>EventCallback&lt;MPowerAuthorization&gt;</code> Autorizare selectat\u0103 <code>OnEntityRelationshipVerified</code> <code>EventCallback&lt;bool&gt;</code> Rela\u021bie verificat\u0103 <code>OnChanged</code> <code>EventCallback</code> Orice schimbare"},{"location":"fod/componente/FodRequestor/#7-exemple-avansate","title":"7. Exemple Avansate","text":""},{"location":"fod/componente/FodRequestor/#formular-complet-cu-toate-optiunile","title":"Formular complet cu toate op\u021biunile","text":"<pre><code>&lt;EditForm Model=\"serviceRequest\" OnValidSubmit=\"SubmitRequest\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodRequestor @bind-Model=\"serviceRequest.Requestor\"\n                  ShowOnBehalfOf=\"true\"\n                  AutoPopulateNameByIdnp=\"true\"\n                  AutoPopulateOrganizationNameByIdno=\"true\"\n                  ValidateNameByIdnp=\"true\"\n                  VerifyEntityRelationship=\"true\"\n                  IsEmailRequired=\"true\"\n                  IsPhoneRequired=\"true\"\n                  PhonePlaceholder=\"Ex: 069123456\"\n                  OnBehalfOfPosition=\"LabelPosition.Start\"\n                  MPowerAuthorizations=\"authorizations\"\n                  AuthorizationErrorMessage=\"Nu ave\u021bi autoriz\u0103ri disponibile\"\n                  OnRequestorTypeChanged=\"HandleRequestorTypeChange\"\n                  OnEntityRelationshipVerified=\"HandleRelationshipVerified\" /&gt;\n\n    @if (showValidationErrors)\n    {\n        &lt;ValidationSummary /&gt;\n    }\n\n    &lt;FodButton Type=\"submit\" Color=\"FodColor.Primary\"&gt;\n        Trimite cererea\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ServiceRequest serviceRequest = new();\n    private List&lt;MPowerAuthorization&gt; authorizations = new();\n    private bool showValidationErrors;\n\n    private void HandleRequestorTypeChange(PersonType type)\n    {\n        if (type == PersonType.Organization)\n        {\n            // Logic\u0103 specific\u0103 pentru organiza\u021bii\n            LoadOrganizationSpecificData();\n        }\n    }\n\n    private void HandleRelationshipVerified(bool isValid)\n    {\n        if (!isValid)\n        {\n            ShowNotification(\"Persoana nu este administrator al companiei\", \n                           FodSeverity.Warning);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#formular-cu-statute-multiple","title":"Formular cu statute multiple","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              ShowOnBehalfOf=\"true\"\n              HasMultipleRequestorStatute=\"true\"\n              RequestorStatuteOptions=\"requestorStatutes\"\n              OnChanged=\"UpdateFormState\" /&gt;\n\n@code {\n    private IRequestor requestor = new FodRequestorModel();\n\n    private List&lt;FodRequestorStatuteModel&gt; requestorStatutes = new()\n    {\n        new() { \n            Id = 1, \n            Name = \"Proprietar\", \n            OnBehalfOn = OnBehalfOnEnum.Personal \n        },\n        new() { \n            Id = 2, \n            Name = \"Administrator\", \n            OnBehalfOn = OnBehalfOnEnum.Personal \n        },\n        new() { \n            Id = 3, \n            Name = \"\u00cemputernicit\", \n            OnBehalfOn = OnBehalfOnEnum.MPowerAuthorization \n        }\n    };\n\n    private void UpdateFormState()\n    {\n        // Actualizare stare formular bazat\u0103 pe selec\u021bie\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#integrare-cu-mpower","title":"Integrare cu MPower","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              ShowOnBehalfOf=\"true\"\n              MPowerAuthorizations=\"mpowerAuths\"\n              isLoadingMPower=\"loadingAuthorizations\"\n              OnChangeSelectedAuthorization=\"HandleAuthorizationSelected\" /&gt;\n\n@code {\n    private IRequestor requestor = new FodRequestorModel();\n    private List&lt;MPowerAuthorization&gt; mpowerAuths = new();\n    private bool loadingAuthorizations = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        loadingAuthorizations = true;\n\n        try\n        {\n            // \u00cencarc\u0103 autoriz\u0103rile din MPower\n            mpowerAuths = await MPowerService.GetUserAuthorizations();\n        }\n        finally\n        {\n            loadingAuthorizations = false;\n        }\n    }\n\n    private async Task HandleAuthorizationSelected(MPowerAuthorization auth)\n    {\n        // Proceseaz\u0103 autorizarea selectat\u0103\n        var authDetails = await MPowerService.GetAuthorizationDetails(auth.Id);\n\n        // Populeaz\u0103 datele bazate pe autorizare\n        requestor.RequestorIdnp = authDetails.AuthorizedPersonIdnp;\n        requestor.RequestorFirstName = authDetails.AuthorizedPersonFirstName;\n        requestor.RequestorLastName = authDetails.AuthorizedPersonLastName;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#formular-cu-validare-personalizata","title":"Formular cu validare personalizat\u0103","text":"<pre><code>&lt;FodRequestor @ref=\"requestorComponent\"\n              @bind-Model=\"requestor\"\n              ValidateNameByIdnp=\"false\"\n              OnRequestorIdnpChanged=\"CustomIdnpValidation\"\n              OnRequestorIdnoChanged=\"CustomIdnoValidation\" /&gt;\n\n&lt;FodButton OnClick=\"ValidateAndSubmit\"&gt;Valideaz\u0103 \u0219i trimite&lt;/FodButton&gt;\n\n@code {\n    private FodRequestor requestorComponent;\n    private IRequestor requestor = new FodRequestorModel();\n\n    private async Task CustomIdnpValidation(string idnp)\n    {\n        if (!string.IsNullOrEmpty(idnp))\n        {\n            // Validare IDNP personalizat\u0103\n            if (!IsValidIdnp(idnp))\n            {\n                ShowError(\"IDNP invalid\");\n                return;\n            }\n\n            // Verificare blacklist\n            if (await IsBlacklisted(idnp))\n            {\n                ShowError(\"Persoan\u0103 \u00een lista de restric\u021bii\");\n            }\n        }\n    }\n\n    private async Task CustomIdnoValidation(string idno)\n    {\n        if (!string.IsNullOrEmpty(idno))\n        {\n            // Verificare status companie\n            var companyStatus = await CompanyService.GetStatus(idno);\n            if (companyStatus != \"Active\")\n            {\n                ShowWarning($\"Compania are status: {companyStatus}\");\n            }\n        }\n    }\n\n    private async Task ValidateAndSubmit()\n    {\n        // Validare manual\u0103\n        await requestorComponent.ValidateName();\n\n        if (requestor.RequestorType == PersonType.Organization)\n        {\n            await requestorComponent.ValidateAdministrator();\n        }\n\n        if (requestorComponent.NameIsInvalid || \n            requestorComponent.AdministratorIsInvalid)\n        {\n            ShowError(\"Date invalide\");\n            return;\n        }\n\n        // Submit\n        await SubmitRequest();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#8-configurare-loading-states","title":"8. Configurare Loading States","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              RequestorIdnpLoading=\"@idnpLoading\"\n              RequestorIdnoLoading=\"@idnoLoading\"\n              RequestorFirstNameLoading=\"@firstNameLoading\"\n              RequestorLastNameLoading=\"@lastNameLoading\"\n              RequestorCompanyNameLoading=\"@companyLoading\"\n              RequestorPhoneLoading=\"@phoneLoading\"\n              RequestorEmailLoading=\"@emailLoading\" /&gt;\n\n@code {\n    private bool idnpLoading;\n    private bool idnoLoading;\n    // ... alte loading states\n\n    private async Task LoadExternalData()\n    {\n        idnpLoading = true;\n        // \u00cencarc\u0103 date externe\n        await Task.Delay(1000);\n        idnpLoading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#9-integrare-cu-contexte","title":"9. Integrare cu Contexte","text":"<pre><code>&lt;FodRequestor @bind-Model=\"requestor\"\n              LoadFromContext=\"true\"\n              LoadPersonTypeFromContext=\"true\"\n              AllowedContextTypes=\"@allowedTypes\"\n              DisableReadOnlyOnInvalid=\"true\" /&gt;\n\n@code {\n    private IRequestor requestor = new FodRequestorModel();\n\n    private UserContextType[] allowedTypes = new[]\n    {\n        UserContextType.Individual,\n        UserContextType.Organization\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#10-model-de-date","title":"10. Model de Date","text":"<pre><code>public interface IRequestor\n{\n    PersonType RequestorType { get; set; }\n    OnBehalfOnEnum OnBehalfOn { get; set; }\n\n    // Persoan\u0103 fizic\u0103\n    string RequestorIdnp { get; set; }\n    string RequestorFirstName { get; set; }\n    string RequestorLastName { get; set; }\n\n    // Persoan\u0103 juridic\u0103\n    string RequestorIdno { get; set; }\n    string RequestorCompanyName { get; set; }\n\n    // Contact\n    string RequestorPhone { get; set; }\n    string RequestorEmail { get; set; }\n\n    // MPower\n    MPowerAuthorization MPowerAuthorization { get; set; }\n\n    // Statute\n    FodRequestorStatuteModel RequestorStatuteModel { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#11-stilizare-si-teme","title":"11. Stilizare \u0219i Teme","text":"<pre><code>/* Stiluri pentru validare */\n.fod-requestor .alert-danger {\n    margin-top: 10px;\n    padding: 10px;\n    border-radius: 4px;\n}\n\n/* Loading states */\n.fod-requestor .fod-loading-linear {\n    margin: 10px 0;\n}\n\n/* Grupare sec\u021biuni */\n.fod-requestor .row {\n    margin-bottom: 15px;\n}\n\n/* MPower section */\n.fod-requestor .mpower-section {\n    background-color: rgba(var(--fod-palette-info-rgb), 0.1);\n    padding: 15px;\n    border-radius: 4px;\n    margin: 15px 0;\n}\n</code></pre>"},{"location":"fod/componente/FodRequestor/#12-servicii-necesare","title":"12. Servicii Necesare","text":"<p>Pentru func\u021bionarea complet\u0103, sunt necesare urm\u0103toarele servicii:</p> <pre><code>// Program.cs\nbuilder.Services.AddScoped&lt;INameService, NameService&gt;();\nbuilder.Services.AddScoped&lt;IContextService, ContextService&gt;();\nbuilder.Services.AddScoped&lt;IRequestorComponentService, RequestorComponentService&gt;();\nbuilder.Services.AddScoped&lt;ICultureService, CultureService&gt;();\n</code></pre>"},{"location":"fod/componente/FodRequestor/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Validare progresiv\u0103 - Activa\u021bi validarea doar c\u00e2nd e necesar\u0103</li> <li>Loading states - Folosi\u021bi loading pentru feedback vizual</li> <li>Context aware - Folosi\u021bi LoadFromContext pentru utilizatori autentifica\u021bi</li> <li>Error handling - Trata\u021bi erorile de conexiune \u0219i validare</li> <li>Disable fields - Dezactiva\u021bi c\u00e2mpuri pentru date pre-populate</li> <li>Events - Folosi\u021bi evenimente pentru logic\u0103 custom</li> </ol>"},{"location":"fod/componente/FodRequestor/#14-troubleshooting","title":"14. Troubleshooting","text":""},{"location":"fod/componente/FodRequestor/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi conexiunea la serviciile RSP</li> <li>Verifica\u021bi c\u0103 serviciile sunt configurate corect</li> <li>Verifica\u021bi permisiunile pentru accesare date</li> </ul>"},{"location":"fod/componente/FodRequestor/#date-nu-se-populeaza-din-context","title":"Date nu se populeaz\u0103 din context","text":"<ul> <li>Verifica\u021bi LoadFromContext=\"true\"</li> <li>Verifica\u021bi c\u0103 IContextService este \u00eenregistrat</li> <li>Verifica\u021bi c\u0103 utilizatorul este autentificat</li> </ul>"},{"location":"fod/componente/FodRequestor/#mpower-nu-incarca-autorizari","title":"MPower nu \u00eencarc\u0103 autoriz\u0103ri","text":"<ul> <li>Verifica\u021bi MPowerAuthorizations parameter</li> <li>Verifica\u021bi isLoadingMPower state</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FodRequestor/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodRequestor</code> este o component\u0103 esen\u021bial\u0103 pentru aplica\u021biile guvernamentale FOD, oferind o solu\u021bie complet\u0103 pentru gestionarea datelor solicitantului. Cu validare automat\u0103, integrare cu servicii externe \u0219i flexibilitate maxim\u0103 \u00een configurare, componenta asigur\u0103 colectarea corect\u0103 \u0219i sigur\u0103 a informa\u021biilor despre solicitant.</p>"},{"location":"fod/componente/FodSearchSelect/","title":"FodSearchSelect","text":""},{"location":"fod/componente/FodSearchSelect/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodSearchSelect</code> este o component\u0103 dropdown cu func\u021bionalitate de c\u0103utare integrat\u0103. Extinde <code>FODInput</code> \u0219i permite utilizatorilor s\u0103 caute \u0219i s\u0103 selecteze elemente dintr-o list\u0103, oferind o experien\u021b\u0103 similar\u0103 cu un combobox modern. Componenta include filtrare \u00een timp real \u0219i gestionare automat\u0103 a click-urilor \u00een afara dropdown-ului.</p>"},{"location":"fod/componente/FodSearchSelect/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- SearchSelect simplu --&gt;\n&lt;FodSearchSelect @bind-Value=\"selectedCity\" \n                 SelectableObjects=\"@cities\"\n                 Label=\"Selecta\u021bi ora\u0219ul\" /&gt;\n\n&lt;!-- SearchSelect cu placeholder --&gt;\n&lt;FodSearchSelect @bind-Value=\"selectedCountry\" \n                 SelectableObjects=\"@countries\"\n                 Placeholder=\"C\u0103uta\u021bi o \u021bar\u0103...\"\n                 Nullable=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#configurare-date","title":"Configurare Date","text":""},{"location":"fod/componente/FodSearchSelect/#folosind-selectableobjects-direct","title":"Folosind SelectableObjects Direct","text":"<pre><code>&lt;FodSearchSelect @bind-Value=\"selectedValue\" \n                 SelectableObjects=\"@GetSelectableItems()\"\n                 Label=\"Selecta\u021bi op\u021biunea\" /&gt;\n\n@code {\n    private string selectedValue;\n\n    private List&lt;SelectableItem&gt; GetSelectableItems()\n    {\n        return new List&lt;SelectableItem&gt;\n        {\n            new SelectableItem { Value = \"1\", Text = \"Op\u021biunea 1\" },\n            new SelectableItem { Value = \"2\", Text = \"Op\u021biunea 2\" },\n            new SelectableItem { Value = \"3\", Text = \"Op\u021biunea 3\" }\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#folosind-iselectableitemsservice","title":"Folosind ISelectableItemsService","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodSearchSelect @bind-Value=\"selectedDepartment\" \n                 Label=\"Departament\" /&gt;\n\n@code {\n    private string selectedDepartment;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Serviciul va fi injectat \u0219i folosit automat de component\u0103\n        var departments = await DepartmentService.GetDepartments();\n        SelectableItemsService.SetItems(\"departments\", departments);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodSearchSelect/#selector-de-tari-cu-cautare","title":"Selector de \u021a\u0103ri cu C\u0103utare","text":"<pre><code>&lt;div class=\"country-selector\"&gt;\n    &lt;FodSearchSelect @bind-Value=\"selectedCountryCode\" \n                     SelectableObjects=\"@countryList\"\n                     Label=\"\u021aara\"\n                     Placeholder=\"\u00cencepe\u021bi s\u0103 tasta\u021bi...\"\n                     Nullable=\"true\" /&gt;\n\n    @if (!string.IsNullOrEmpty(selectedCountryCode))\n    {\n        &lt;p class=\"mt-2\"&gt;\u021aara selectat\u0103: @GetCountryName(selectedCountryCode)&lt;/p&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string selectedCountryCode;\n    private List&lt;SelectableItem&gt; countryList = new()\n    {\n        new() { Value = \"MD\", Text = \"Moldova\" },\n        new() { Value = \"RO\", Text = \"Rom\u00e2nia\" },\n        new() { Value = \"UA\", Text = \"Ucraina\" },\n        new() { Value = \"RU\", Text = \"Rusia\" },\n        new() { Value = \"BG\", Text = \"Bulgaria\" },\n        new() { Value = \"IT\", Text = \"Italia\" },\n        new() { Value = \"DE\", Text = \"Germania\" },\n        new() { Value = \"FR\", Text = \"Fran\u021ba\" },\n        new() { Value = \"ES\", Text = \"Spania\" },\n        new() { Value = \"GB\", Text = \"Marea Britanie\" }\n    };\n\n    private string GetCountryName(string code)\n    {\n        return countryList.FirstOrDefault(c =&gt; c.Value == code)?.Text ?? code;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#selector-de-produse-cu-detalii","title":"Selector de Produse cu Detalii","text":"<pre><code>&lt;EditForm Model=\"@order\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodSearchSelect @bind-Value=\"order.ProductId\" \n                     SelectableObjects=\"@productItems\"\n                     Label=\"Produs\"\n                     Placeholder=\"C\u0103uta\u021bi produsul...\" /&gt;\n\n    @if (!string.IsNullOrEmpty(order.ProductId))\n    {\n        var product = products.FirstOrDefault(p =&gt; p.Id == order.ProductId);\n        if (product != null)\n        {\n            &lt;div class=\"product-details mt-3\"&gt;\n                &lt;p&gt;&lt;strong&gt;Pre\u021b:&lt;/strong&gt; @product.Price.ToString(\"C\")&lt;/p&gt;\n                &lt;p&gt;&lt;strong&gt;Stoc:&lt;/strong&gt; @product.Stock unit\u0103\u021bi&lt;/p&gt;\n            &lt;/div&gt;\n        }\n    }\n\n    &lt;ValidationSummary /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private OrderModel order = new();\n    private List&lt;Product&gt; products = new();\n    private List&lt;SelectableItem&gt; productItems = new();\n\n    protected override void OnInitialized()\n    {\n        // Simulare \u00eenc\u0103rcare produse\n        products = new List&lt;Product&gt;\n        {\n            new() { Id = \"P001\", Name = \"Laptop Dell XPS 13\", Price = 25000, Stock = 5 },\n            new() { Id = \"P002\", Name = \"Mouse Logitech MX Master\", Price = 1500, Stock = 20 },\n            new() { Id = \"P003\", Name = \"Tastatur\u0103 Mechanical RGB\", Price = 2500, Stock = 15 },\n            new() { Id = \"P004\", Name = \"Monitor LG 27\\\" 4K\", Price = 12000, Stock = 8 }\n        };\n\n        productItems = products.Select(p =&gt; new SelectableItem \n        { \n            Value = p.Id, \n            Text = $\"{p.Name} - {p.Price:C}\" \n        }).ToList();\n    }\n\n    public class OrderModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi un produs\")]\n        public string ProductId { get; set; }\n    }\n\n    public class Product\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n        public decimal Price { get; set; }\n        public int Stock { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#searchselect-cascadat","title":"SearchSelect Cascadat","text":"<pre><code>&lt;div class=\"cascading-selects\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodSearchSelect @bind-Value=\"selectedRegion\" \n                         SelectableObjects=\"@regions\"\n                         Label=\"Regiune\"\n                         @bind-Value:after=\"OnRegionChanged\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodSearchSelect @bind-Value=\"selectedCity\" \n                         SelectableObjects=\"@cities\"\n                         Label=\"Ora\u0219\"\n                         Disabled=\"@(string.IsNullOrEmpty(selectedRegion))\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodSearchSelect @bind-Value=\"selectedStreet\" \n                         SelectableObjects=\"@streets\"\n                         Label=\"Strad\u0103\"\n                         Disabled=\"@(string.IsNullOrEmpty(selectedCity))\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string selectedRegion;\n    private string selectedCity;\n    private string selectedStreet;\n\n    private List&lt;SelectableItem&gt; regions = new();\n    private List&lt;SelectableItem&gt; cities = new();\n    private List&lt;SelectableItem&gt; streets = new();\n\n    protected override void OnInitialized()\n    {\n        regions = new List&lt;SelectableItem&gt;\n        {\n            new() { Value = \"CH\", Text = \"Chi\u0219in\u0103u\" },\n            new() { Value = \"BL\", Text = \"B\u0103l\u021bi\" },\n            new() { Value = \"CA\", Text = \"Cahul\" }\n        };\n    }\n\n    private async Task OnRegionChanged()\n    {\n        selectedCity = null;\n        selectedStreet = null;\n        cities.Clear();\n        streets.Clear();\n\n        if (!string.IsNullOrEmpty(selectedRegion))\n        {\n            // Simulare \u00eenc\u0103rcare ora\u0219e pentru regiunea selectat\u0103\n            cities = selectedRegion switch\n            {\n                \"CH\" =&gt; new List&lt;SelectableItem&gt;\n                {\n                    new() { Value = \"CH\", Text = \"Chi\u0219in\u0103u\" },\n                    new() { Value = \"CR\", Text = \"Cricova\" },\n                    new() { Value = \"CD\", Text = \"Codru\" }\n                },\n                \"BL\" =&gt; new List&lt;SelectableItem&gt;\n                {\n                    new() { Value = \"BL\", Text = \"B\u0103l\u021bi\" },\n                    new() { Value = \"FL\", Text = \"F\u0103le\u0219ti\" },\n                    new() { Value = \"SG\", Text = \"S\u00e2ngerei\" }\n                },\n                _ =&gt; new List&lt;SelectableItem&gt;()\n            };\n        }\n\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#searchselect-cu-date-dinamice","title":"SearchSelect cu Date Dinamice","text":"<pre><code>&lt;div class=\"dynamic-search\"&gt;\n    &lt;FodSearchSelect @bind-Value=\"selectedEmployee\" \n                     SelectableObjects=\"@filteredEmployees\"\n                     Label=\"Angajat\"\n                     Placeholder=\"Nume sau departament...\" /&gt;\n\n    &lt;div class=\"filters mt-3\"&gt;\n        &lt;label&gt;\n            &lt;input type=\"checkbox\" @bind=\"showActiveOnly\" @bind:after=\"FilterEmployees\" /&gt;\n            Doar angaja\u021bi activi\n        &lt;/label&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string selectedEmployee;\n    private bool showActiveOnly = true;\n    private List&lt;Employee&gt; allEmployees = new();\n    private List&lt;SelectableItem&gt; filteredEmployees = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cenc\u0103rcare date\n        allEmployees = await EmployeeService.GetAllEmployees();\n        FilterEmployees();\n    }\n\n    private void FilterEmployees()\n    {\n        var filtered = showActiveOnly \n            ? allEmployees.Where(e =&gt; e.IsActive) \n            : allEmployees;\n\n        filteredEmployees = filtered.Select(e =&gt; new SelectableItem\n        {\n            Value = e.Id.ToString(),\n            Text = $\"{e.Name} - {e.Department}\"\n        }).ToList();\n\n        // Reset selec\u021bie dac\u0103 angajatul selectat nu mai este \u00een list\u0103\n        if (!filteredEmployees.Any(e =&gt; e.Value == selectedEmployee))\n        {\n            selectedEmployee = null;\n        }\n    }\n\n    public class Employee\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string Department { get; set; }\n        public bool IsActive { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#functionalitati-cheie","title":"Func\u021bionalit\u0103\u021bi Cheie","text":""},{"location":"fod/componente/FodSearchSelect/#filtrare-in-timp-real","title":"Filtrare \u00een Timp Real","text":"<p>Componenta filtreaz\u0103 automat elementele pe baza textului introdus:</p> <pre><code>private IEnumerable&lt;SelectableItem&gt; FilterSelectableItems(string? keyWord)\n{\n    if (string.IsNullOrEmpty(keyWord))\n    {\n        return SelectableItems;\n    }\n    else\n    {\n        return SelectableItems.Where(sr =&gt; sr.Text.ToLower().Contains(keyWord.ToLower()));\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#gestionare-click-outside","title":"Gestionare Click Outside","text":"<p>Utilizeaz\u0103 componenta <code>OutsideHandleContainer</code> pentru a \u00eenchide dropdown-ul c\u00e2nd se face click \u00een afar\u0103:</p> <pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@(() =&gt; { ShowOptions = false; StateHasChanged(); })\"&gt;\n    &lt;!-- Con\u021binut dropdown --&gt;\n&lt;/OutsideHandleContainer&gt;\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#suport-pentru-valori-null","title":"Suport pentru Valori Null","text":"<pre><code>@if (Nullable)\n{\n    &lt;option class=\"option\" value=\"\"&gt;@Placeholder&lt;/option&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodSearchSelect/#stiluri-implicite","title":"Stiluri Implicite","text":"<pre><code>.option {\n    cursor: pointer;\n    padding: 2px 14px;\n}\n\n.option:hover {\n    background-color: #1967d2;\n    color: white;\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#personalizare-stiluri","title":"Personalizare Stiluri","text":"<pre><code>&lt;style&gt;\n    .custom-search-select .option {\n        padding: 8px 16px;\n        border-bottom: 1px solid #eee;\n        transition: all 0.2s ease;\n    }\n\n    .custom-search-select .option:hover {\n        background-color: #f0f8ff;\n        color: #0066cc;\n        padding-left: 20px;\n    }\n\n    .custom-search-select input[type=\"search\"] {\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 10px 15px;\n    }\n\n    .custom-search-select input[type=\"search\"]:focus {\n        border-color: #0066cc;\n        outline: none;\n    }\n\n    .custom-search-select .dropdown-container {\n        border-radius: 8px;\n        margin-top: 4px;\n        max-height: 300px;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"custom-search-select\"&gt;\n    &lt;FodSearchSelect @bind-Value=\"customValue\" \n                     SelectableObjects=\"@items\"\n                     Label=\"Selector Personalizat\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#integrare-cu-servicii","title":"Integrare cu Servicii","text":""},{"location":"fod/componente/FodSearchSelect/#implementare-iselectableitemsservice","title":"Implementare ISelectableItemsService","text":"<pre><code>public interface ISelectableItemsService\n{\n    void SetItems(string key, IEnumerable&lt;SelectableItem&gt; items);\n    IEnumerable&lt;SelectableItem&gt; GetItems(string key);\n}\n\npublic class SelectableItemsService : ISelectableItemsService\n{\n    private readonly Dictionary&lt;string, IEnumerable&lt;SelectableItem&gt;&gt; _items = new();\n\n    public void SetItems(string key, IEnumerable&lt;SelectableItem&gt; items)\n    {\n        _items[key] = items;\n    }\n\n    public IEnumerable&lt;SelectableItem&gt; GetItems(string key)\n    {\n        return _items.TryGetValue(key, out var items) ? items : Enumerable.Empty&lt;SelectableItem&gt;();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#model-selectableitem","title":"Model SelectableItem","text":"<pre><code>public class SelectableItem\n{\n    public string Value { get; set; }\n    public string Text { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodSearchSelect/#proprietati-mostenite","title":"Propriet\u0103\u021bi Mo\u0219tenite","text":"<p>Din <code>FODInput</code>: - <code>Value</code> - Valoarea selectat\u0103 - <code>Label</code> - Eticheta componentei - <code>Placeholder</code> - Text placeholder - <code>Nullable</code> - Permite valoare null - <code>Id</code> - ID-ul componentei - <code>CssClass</code> - Clase CSS adi\u021bionale</p>"},{"location":"fod/componente/FodSearchSelect/#best-practices","title":"Best Practices","text":"<ol> <li>Date Pre-\u00eenc\u0103rcate - \u00cenc\u0103rca\u021bi datele \u00eenainte de renderare pentru performan\u021b\u0103</li> <li>Limite Rezonabile - Limita\u021bi num\u0103rul de elemente pentru liste mari</li> <li>C\u0103utare Server-Side - Pentru seturi mari de date, implementa\u021bi c\u0103utare pe server</li> <li>Feedback Vizual - Afi\u0219a\u021bi indicator de \u00eenc\u0103rcare pentru date asincrone</li> <li>Validare - Verifica\u021bi c\u0103 valoarea selectat\u0103 exist\u0103 \u00een list\u0103</li> </ol>"},{"location":"fod/componente/FodSearchSelect/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Filtrarea se face client-side pentru toate elementele</li> <li>Pentru liste mari (&gt;1000 elemente), considera\u021bi paginare sau c\u0103utare server-side</li> <li>Componenta re-rendereaz\u0103 doar dropdown-ul la filtrare</li> </ul>"},{"location":"fod/componente/FodSearchSelect/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Nu suport\u0103 selec\u021bie multipl\u0103</li> <li>Nu are virtualizare pentru liste foarte mari</li> <li>C\u0103utarea este case-insensitive dar nu suport\u0103 diacritice</li> <li>Nu suport\u0103 grupare de elemente</li> </ul>"},{"location":"fod/componente/FodSearchSelect/#concluzie","title":"Concluzie","text":"<p>FodSearchSelect ofer\u0103 o experien\u021b\u0103 modern\u0103 de selec\u021bie cu c\u0103utare integrat\u0103, ideal\u0103 pentru liste de dimensiuni medii unde utilizatorii au nevoie s\u0103 g\u0103seasc\u0103 rapid op\u021biunea dorit\u0103. Componenta combin\u0103 simplitatea unui dropdown tradi\u021bional cu puterea c\u0103ut\u0103rii \u00een timp real.</p>"},{"location":"fod/componente/FodSelect/","title":"Select","text":""},{"location":"fod/componente/FodSelect/#documentatie-pentru-componentele-fodselect-si-fodselect1","title":"Documenta\u021bie pentru componentele FodSelect \u0219i FodSelect1","text":""},{"location":"fod/componente/FodSelect/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodSelect</code> \u0219i <code>FodSelect1</code> sunt componente dropdown pentru selectarea unei op\u021biuni dintr-o list\u0103. Ofer\u0103 o experien\u021b\u0103 \u00eembun\u0103t\u0103\u021bit\u0103 fa\u021b\u0103 de elementul HTML select standard, cu suport pentru c\u0103utare, grupare, template-uri personalizate \u0219i multe alte func\u021bionalit\u0103\u021bi.</p> <p>Componentele suport\u0103: - Selec\u021bie single \u0219i multipl\u0103 - C\u0103utare \u00een op\u021biuni - Grupare op\u021biuni - Avatar-uri \u0219i pictograme \u00een op\u021biuni - Validare integrat\u0103 - Placeholder personalizabil - \u00cenc\u0103rcare asincron\u0103 de date - Template-uri pentru afi\u0219are personalizat\u0103</p>"},{"location":"fod/componente/FodSelect/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodSelect/#select-de-baza","title":"Select de baz\u0103","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedValue\" Label=\"Selecta\u021bi o op\u021biune\"&gt;\n    &lt;FodSelectItem Value=\"1\"&gt;Op\u021biunea 1&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"2\"&gt;Op\u021biunea 2&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"3\"&gt;Op\u021biunea 3&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n@code {\n    private string selectedValue = \"\";\n}\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-placeholder-si-required","title":"Select cu placeholder \u0219i required","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;FodSelect @bind-Value=\"model.Country\" \n               Label=\"\u021aara\" \n               Placeholder=\"Selecta\u021bi \u021bara\"\n               Required=\"true\"\n               HelperText=\"Selecta\u021bi \u021bara de re\u0219edin\u021b\u0103\"&gt;\n        &lt;FodSelectItem Value=\"\"&gt;Selecta\u021bi...&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"MD\"&gt;Moldova&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"RO\"&gt;Rom\u00e2nia&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"UA\"&gt;Ucraina&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"RU\"&gt;Rusia&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-pictograme","title":"Select cu pictograme","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedPayment\" Label=\"Metod\u0103 de plat\u0103\"&gt;\n    &lt;FodSelectItem Value=\"card\"&gt;\n        &lt;ItemTemplate&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CreditCard\" Class=\"me-2\" /&gt;\n                &lt;span&gt;Card bancar&lt;/span&gt;\n            &lt;/div&gt;\n        &lt;/ItemTemplate&gt;\n    &lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"cash\"&gt;\n        &lt;ItemTemplate&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Money\" Class=\"me-2\" /&gt;\n                &lt;span&gt;Numerar&lt;/span&gt;\n            &lt;/div&gt;\n        &lt;/ItemTemplate&gt;\n    &lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"transfer\"&gt;\n        &lt;ItemTemplate&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AccountBalance\" Class=\"me-2\" /&gt;\n                &lt;span&gt;Transfer bancar&lt;/span&gt;\n            &lt;/div&gt;\n        &lt;/ItemTemplate&gt;\n    &lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-cautare","title":"Select cu c\u0103utare","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedUser\" \n           Label=\"Utilizator\"\n           SearchBox=\"true\"\n           SearchBoxPlaceholder=\"C\u0103uta\u021bi utilizator...\"&gt;\n    @foreach (var user in users)\n    {\n        &lt;FodSelectItem Value=\"@user.Id\" Text=\"@user.Name\"&gt;\n            &lt;ItemTemplate&gt;\n                &lt;div class=\"d-flex align-items-center\"&gt;\n                    &lt;div class=\"d-flex align-items-center justify-content-center me-2\"\n                         style=\"width: 32px; height: 32px; border-radius: 50%; background-color: #e3f2fd; color: #1976d2;\"&gt;\n                        &lt;FodText Typo=\"Typo.button\"&gt;@user.Name.Substring(0, 1)&lt;/FodText&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;div&gt;@user.Name&lt;/div&gt;\n                        &lt;div class=\"text-muted small\"&gt;@user.Email&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/ItemTemplate&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-grupare","title":"Select cu grupare","text":"<pre><code>&lt;FodGroupSelect @bind-Value=\"selectedProduct\" Label=\"Selecta\u021bi produs\"&gt;\n    &lt;FodSelectGroup Title=\"Electronice\"&gt;\n        &lt;FodSelectItem Value=\"laptop\"&gt;Laptop&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"telefon\"&gt;Telefon&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"tableta\"&gt;Tablet\u0103&lt;/FodSelectItem&gt;\n    &lt;/FodSelectGroup&gt;\n    &lt;FodSelectGroup Title=\"Electrocasnice\"&gt;\n        &lt;FodSelectItem Value=\"frigider\"&gt;Frigider&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"masina-spalat\"&gt;Ma\u0219in\u0103 de sp\u0103lat&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"aspirator\"&gt;Aspirator&lt;/FodSelectItem&gt;\n    &lt;/FodSelectGroup&gt;\n    &lt;FodSelectGroup Title=\"Mobilier\"&gt;\n        &lt;FodSelectItem Value=\"birou\"&gt;Birou&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"scaun\"&gt;Scaun&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"dulap\"&gt;Dulap&lt;/FodSelectItem&gt;\n    &lt;/FodSelectGroup&gt;\n&lt;/FodGroupSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-selectie-multipla","title":"Select cu selec\u021bie multipl\u0103","text":"<pre><code>&lt;FodSelect @bind-SelectedValues=\"selectedRoles\" \n           Label=\"Roluri utilizator\"\n           MultiSelection=\"true\"\n           Chips=\"true\"&gt;\n    &lt;FodSelectItem Value=\"admin\"&gt;Administrator&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"editor\"&gt;Editor&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"moderator\"&gt;Moderator&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"user\"&gt;Utilizator&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n@code {\n    private HashSet&lt;string&gt; selectedRoles = new() { \"user\" };\n}\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-date-din-api","title":"Select cu date din API","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedDepartment\" \n           Label=\"Departament\"\n           Loading=\"@isLoading\"\n           Disabled=\"@(!departments.Any())\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodSelectItem Value=\"\" Disabled=\"true\"&gt;Se \u00eencarc\u0103...&lt;/FodSelectItem&gt;\n    }\n    else if (!departments.Any())\n    {\n        &lt;FodSelectItem Value=\"\" Disabled=\"true\"&gt;Nu sunt departamente disponibile&lt;/FodSelectItem&gt;\n    }\n    else\n    {\n        &lt;FodSelectItem Value=\"\"&gt;Selecta\u021bi departamentul&lt;/FodSelectItem&gt;\n        @foreach (var dept in departments)\n        {\n            &lt;FodSelectItem Value=\"@dept.Id\"&gt;@dept.Name&lt;/FodSelectItem&gt;\n        }\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private string selectedDepartment = \"\";\n    private List&lt;Department&gt; departments = new();\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        isLoading = true;\n        departments = await DepartmentService.GetAllAsync();\n        isLoading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-filtrat-fodinputfilteredselect","title":"Select filtrat (FodInputFilteredSelect)","text":"<pre><code>&lt;FodInputFilteredSelect @bind-Value=\"selectedCity\"\n                        Label=\"Ora\u0219\"\n                        Items=\"cities\"\n                        TextField=\"@(c =&gt; c.Name)\"\n                        ValueField=\"@(c =&gt; c.Id)\"\n                        FilterFunc=\"@((city, searchText) =&gt; \n                            city.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase))\"\n                        Placeholder=\"\u00cencepe\u021bi s\u0103 tasta\u021bi pentru a c\u0103uta...\"\n                        MinCharacters=\"2\"\n                        MaxItems=\"10\"&gt;\n    &lt;NoItemsTemplate&gt;\n        &lt;div class=\"pa-2 text-muted\"&gt;Niciun ora\u0219 g\u0103sit&lt;/div&gt;\n    &lt;/NoItemsTemplate&gt;\n&lt;/FodInputFilteredSelect&gt;\n\n@code {\n    private string selectedCity = \"\";\n    private List&lt;City&gt; cities = GetCities();\n}\n</code></pre>"},{"location":"fod/componente/FodSelect/#select-cu-validare-in-formular","title":"Select cu validare \u00een formular","text":"<pre><code>&lt;EditForm Model=\"formModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodSelect @bind-Value=\"formModel.ServiceType\" \n               Label=\"Tip serviciu\"\n               For=\"@(() =&gt; formModel.ServiceType)\"&gt;\n        &lt;FodSelectItem Value=\"\"&gt;Selecta\u021bi serviciul&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"apostila\"&gt;Apostil\u0103&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"traducere\"&gt;Traducere autorizat\u0103&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"verificare\"&gt;Verificare documente&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n    &lt;ValidationMessage For=\"@(() =&gt; formModel.ServiceType)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Continu\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel formModel = new();\n\n    public class FormModel\n    {\n        [Required(ErrorMessage = \"Selecta\u021bi un tip de serviciu\")]\n        public string ServiceType { get; set; } = \"\";\n    }\n\n    private void HandleSubmit()\n    {\n        // Procesare formular\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>T</code> Valoarea selectat\u0103 <code>default(T)</code> <code>SelectedValues</code> <code>IEnumerable&lt;T&gt;</code> Valorile selectate (multi-selection) <code>null</code> <code>Label</code> <code>string</code> Eticheta select-ului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder <code>null</code> <code>HelperText</code> <code>string</code> Text ajut\u0103tor sub select <code>null</code> <code>Required</code> <code>bool</code> Marcheaz\u0103 c\u00e2mpul ca obligatoriu <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 select-ul <code>false</code> <code>ReadOnly</code> <code>bool</code> Mod doar citire <code>false</code> <code>Dense</code> <code>bool</code> Reduce padding-ul <code>false</code> <code>Variant</code> <code>FodVariant</code> Stilul select-ului (Filled, Outlined, Text) <code>Outlined</code> <code>MultiSelection</code> <code>bool</code> Permite selec\u021bie multipl\u0103 <code>false</code> <code>SearchBox</code> <code>bool</code> Afi\u0219eaz\u0103 c\u0103utare \u00een dropdown <code>false</code> <code>SearchBoxPlaceholder</code> <code>string</code> Placeholder pentru c\u0103utare <code>\"C\u0103uta\u021bi...\"</code> <code>Chips</code> <code>bool</code> Afi\u0219eaz\u0103 selec\u021biile ca chip-uri <code>false</code> <code>MaxHeight</code> <code>int</code> \u00cen\u0103l\u021bimea maxim\u0103 a dropdown-ului <code>300</code> <code>Loading</code> <code>bool</code> Afi\u0219eaz\u0103 indicator de \u00eenc\u0103rcare <code>false</code> <code>Items</code> <code>IEnumerable&lt;T&gt;</code> Lista de elemente (pentru data binding) <code>null</code> <code>TextField</code> <code>Func&lt;T, string&gt;</code> Func\u021bie pentru extragere text <code>null</code> <code>ValueField</code> <code>Func&lt;T, object&gt;</code> Func\u021bie pentru extragere valoare <code>null</code> <code>ItemTemplate</code> <code>RenderFragment&lt;T&gt;</code> Template pentru afi\u0219are item <code>null</code> <code>SelectedItemTemplate</code> <code>RenderFragment&lt;T&gt;</code> Template pentru item selectat <code>null</code>"},{"location":"fod/componente/FodSelect/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> Se declan\u0219eaz\u0103 la schimbarea valorii <code>SelectedValuesChanged</code> <code>EventCallback&lt;IEnumerable&lt;T&gt;&gt;</code> Pentru multi-selection <code>OnOpen</code> <code>EventCallback</code> La deschiderea dropdown-ului <code>OnClose</code> <code>EventCallback</code> La \u00eenchiderea dropdown-ului <code>OnSearch</code> <code>EventCallback&lt;string&gt;</code> La c\u0103utare (dac\u0103 SearchBox=true)"},{"location":"fod/componente/FodSelect/#5-componente-asociate","title":"5. Componente asociate","text":""},{"location":"fod/componente/FodSelect/#fodselectitem","title":"FodSelectItem","text":"<pre><code>&lt;FodSelectItem Value=\"value\" \n               Text=\"Text afi\u0219at\" \n               Disabled=\"false\"&gt;\n    &lt;ItemTemplate&gt;\n        &lt;!-- Con\u021binut personalizat --&gt;\n    &lt;/ItemTemplate&gt;\n&lt;/FodSelectItem&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#fodselectgroup","title":"FodSelectGroup","text":"<pre><code>&lt;FodSelectGroup Title=\"Nume grup\" \n                Disabled=\"false\"&gt;\n    &lt;!-- FodSelectItem-uri --&gt;\n&lt;/FodSelectGroup&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#6-select-avansat-cu-template-uri","title":"6. Select avansat cu template-uri","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedEmployee\" \n           Label=\"Angajat responsabil\"\n           Dense=\"true\"&gt;\n    &lt;SelectedItemTemplate&gt;\n        @if (context != null)\n        {\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                         Size=\"Size.Small\" \n                         Class=\"me-2\" /&gt;\n                &lt;span&gt;@context.Name&lt;/span&gt;\n            &lt;/div&gt;\n        }\n    &lt;/SelectedItemTemplate&gt;\n    &lt;ItemsTemplate&gt;\n        @foreach (var emp in employees)\n        {\n            &lt;FodSelectItem Value=\"@emp.Id\"&gt;\n                &lt;div class=\"d-flex align-items-center pa-2\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.PersonOutline\" \n                             Size=\"Size.Medium\" \n                             Class=\"me-3\" /&gt;\n                    &lt;div&gt;\n                        &lt;div class=\"font-weight-bold\"&gt;@emp.Name&lt;/div&gt;\n                        &lt;div class=\"text-muted small\"&gt;@emp.Department - @emp.Position&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodSelectItem&gt;\n        }\n    &lt;/ItemsTemplate&gt;\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodSelect/#in-fodcard","title":"\u00cen FodCard","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Preferin\u021be utilizator&lt;/FodText&gt;\n\n        &lt;FodSelect @bind-Value=\"preferences.Theme\" \n                   Label=\"Tem\u0103 aplica\u021bie\" \n                   Class=\"mb-3\"&gt;\n            &lt;FodSelectItem Value=\"light\"&gt;Luminoas\u0103&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"dark\"&gt;\u00centunecat\u0103&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"auto\"&gt;Automat\u0103&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n\n        &lt;FodSelect @bind-Value=\"preferences.Language\" \n                   Label=\"Limb\u0103 interfa\u021b\u0103\"&gt;\n            &lt;FodSelectItem Value=\"ro\"&gt;Rom\u00e2n\u0103&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"ru\"&gt;\u0420\u0443\u0441\u0441\u043a\u0438\u0439&lt;/FodSelectItem&gt;\n            &lt;FodSelectItem Value=\"en\"&gt;English&lt;/FodSelectItem&gt;\n        &lt;/FodSelect&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#8-performanta-si-virtualizare","title":"8. Performan\u021b\u0103 \u0219i virtualizare","text":"<pre><code>&lt;!-- Pentru liste mari, folosi\u021bi virtualizare --&gt;\n&lt;FodSelect @bind-Value=\"selectedItem\"\n           Label=\"Selecta\u021bi din lista mare\"\n           Virtualize=\"true\"\n           ItemHeight=\"48\"&gt;\n    @foreach (var item in largeDataSet)\n    {\n        &lt;FodSelectItem Value=\"@item.Id\"&gt;@item.Name&lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#9-stilizare","title":"9. Stilizare","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedValue\" \n           Label=\"Select stilizat\"\n           Class=\"custom-select\"\n           Style=\"min-width: 300px;\"&gt;\n    &lt;!-- Op\u021biuni --&gt;\n&lt;/FodSelect&gt;\n\n&lt;style&gt;\n    .custom-select {\n        --fod-select-background: #f5f5f5;\n        --fod-select-border-color: #2196f3;\n        --fod-select-focus-color: #1976d2;\n    }\n\n    .custom-select .fod-select-dropdown {\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#10-note-si-observatii","title":"10. Note \u0219i observa\u021bii","text":"<ul> <li>Pentru liste cu peste 50 de elemente, activa\u021bi SearchBox</li> <li>MultiSelection creeaz\u0103 o colec\u021bie HashSet pentru performan\u021b\u0103</li> <li>Folosi\u021bi Chips=true pentru a vizualiza clar selec\u021biile multiple</li> <li>Pentru date asincrone, afi\u0219a\u021bi starea de \u00eenc\u0103rcare</li> <li>Virtualizarea \u00eembun\u0103t\u0103\u021be\u0219te performan\u021ba pentru liste mari</li> </ul>"},{"location":"fod/componente/FodSelect/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Suport complet pentru navigare cu tastatura</li> <li>Atribute ARIA pentru screen readers</li> <li>Label asociat corect cu input-ul</li> <li>Anun\u021buri pentru schimb\u0103ri de selec\u021bie</li> </ul>"},{"location":"fod/componente/FodSelect/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Placeholder descriptiv - Ajut\u0103 utilizatorii s\u0103 \u00een\u021beleag\u0103 ce trebuie selectat</li> <li>Op\u021biune goal\u0103 - Include\u021bi \u00eentotdeauna o op\u021biune de resetare</li> <li>Grupare logic\u0103 - Pentru liste lungi, grupa\u021bi op\u021biunile</li> <li>Feedback vizual - Afi\u0219a\u021bi st\u0103ri de \u00eenc\u0103rcare \u0219i eroare</li> <li>Validare - Integra\u021bi cu sistemul de validare Blazor</li> <li>Performan\u021b\u0103 - Pentru &gt;100 op\u021biuni, folosi\u021bi SearchBox sau virtualizare</li> </ol>"},{"location":"fod/componente/FodSelect/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodSelect/#select-ul-nu-se-actualizeaza","title":"Select-ul nu se actualizeaz\u0103","text":"<pre><code>&lt;!-- Asigura\u021bi-v\u0103 c\u0103 folosi\u021bi @bind-Value corect --&gt;\n&lt;FodSelect @bind-Value=\"selectedValue\" @bind-Value:event=\"ValueChanged\"&gt;\n    &lt;!-- Op\u021biuni --&gt;\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#probleme-cu-tipuri-generice","title":"Probleme cu tipuri generice","text":"<pre><code>&lt;!-- Specifica\u021bi explicit tipul dac\u0103 este necesar --&gt;\n&lt;FodSelect T=\"int\" @bind-Value=\"selectedId\"&gt;\n    &lt;FodSelectItem Value=\"1\"&gt;Op\u021biune 1&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodSelect</code> \u0219i componentele asociate ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru selec\u021bii \u00een aplica\u021biile Blazor, cu func\u021bionalit\u0103\u021bi avansate care dep\u0103\u0219esc cu mult un select HTML standard.</p>"},{"location":"fod/componente/FodSelect1/","title":"FodSelect1","text":""},{"location":"fod/componente/FodSelect1/#documentatie-pentru-componenta-fodselect1","title":"Documenta\u021bie pentru componenta FodSelect1","text":""},{"location":"fod/componente/FodSelect1/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodSelect1</code> este o variant\u0103 alternativ\u0103 a componentei de selec\u021bie dropdown care extinde <code>FodBaseInput&lt;T&gt;</code>. Ofer\u0103 func\u021bionalit\u0103\u021bi avansate pentru selec\u021bie simpl\u0103 sau multipl\u0103 cu suport pentru validare strict\u0103, afi\u0219are personalizat\u0103 \u0219i integrare cu FodPopover.</p> <p>Caracteristici principale: - Component\u0103 generic\u0103 pentru orice tip de date - Suport pentru selec\u021bie simpl\u0103 \u0219i multipl\u0103 - Mod strict cu validare list\u0103 - Integrare cu FodPopover pentru afi\u0219are dropdown - Suport pentru \"Select All\" \u00een modul multi-selec\u021bie - Clearable - \u0219tergere selec\u021bie - Integrare complet\u0103 cu sistemul de formulare - Suport pentru afi\u0219are personalizat\u0103 valori</p>"},{"location":"fod/componente/FodSelect1/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodSelect1/#select-simplu","title":"Select simplu","text":"<pre><code>&lt;FodSelect1 T=\"string\" @bind-Value=\"selectedCountry\" Label=\"\u021aar\u0103\"&gt;\n    &lt;FodSelectItem Value=\"@(\"RO\")\"&gt;Rom\u00e2nia&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"MD\")\"&gt;Moldova&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"BG\")\"&gt;Bulgaria&lt;/FodSelectItem&gt;\n&lt;/FodSelect1&gt;\n\n@code {\n    private string selectedCountry = \"RO\";\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#select-cu-multi-selectie","title":"Select cu multi-selec\u021bie","text":"<pre><code>&lt;FodSelect1 T=\"string\" @bind-SelectedValues=\"selectedLanguages\" \n            Label=\"Limbi vorbite\"\n            MultiSelection=\"true\"\n            SelectAll=\"true\"\n            SelectAllText=\"Selecteaz\u0103 toate\"&gt;\n    &lt;FodSelectItem Value=\"@(\"ro\")\"&gt;Rom\u00e2n\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"ru\")\"&gt;Rus\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"en\")\"&gt;Englez\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"fr\")\"&gt;Francez\u0103&lt;/FodSelectItem&gt;\n&lt;/FodSelect1&gt;\n\n@code {\n    private HashSet&lt;string&gt; selectedLanguages = new() { \"ro\" };\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>T</code> <code>Type</code> Tipul generic al valorilor - <code>Value</code> <code>T</code> Valoarea selectat\u0103 (single) - <code>SelectedValues</code> <code>IEnumerable&lt;T&gt;</code> Valorile selectate (multi) - <code>Label</code> <code>string</code> Eticheta dropdown-ului - <code>Placeholder</code> <code>string</code> Text placeholder - <code>MultiSelection</code> <code>bool</code> Activeaz\u0103 selec\u021bia multipl\u0103 <code>false</code> <code>SelectAll</code> <code>bool</code> Afi\u0219eaz\u0103 op\u021biunea \"Select All\" <code>false</code> <code>SelectAllText</code> <code>string</code> Textul pentru \"Select All\" - <code>Clearable</code> <code>bool</code> Permite \u0219tergerea selec\u021biei <code>false</code> <code>Strict</code> <code>bool</code> Validare strict\u0103 a valorilor <code>false</code> <code>Dense</code> <code>bool</code> Mod compact pentru list\u0103 <code>false</code> <code>DisableUnderLine</code> <code>bool</code> Dezactiveaz\u0103 linia de subliniere <code>false</code> <code>MaxHeight</code> <code>int</code> \u00cen\u0103l\u021bimea maxim\u0103 a listei <code>300</code> <code>CanRenderValue</code> <code>bool</code> Permite randare custom valoare <code>false</code> <code>LockScroll</code> <code>bool</code> Blocheaz\u0103 scroll c\u00e2nd e deschis <code>true</code>"},{"location":"fod/componente/FodSelect1/#4-evenimente","title":"4. Evenimente","text":"<ul> <li><code>ValueChanged</code> - La schimbarea valorii (single)</li> <li><code>SelectedValuesChanged</code> - La schimbarea valorilor (multi)</li> <li><code>OnClearButtonClick</code> - La ap\u0103sarea butonului clear</li> </ul>"},{"location":"fod/componente/FodSelect1/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodSelect1/#select-cu-obiecte-complexe","title":"Select cu obiecte complexe","text":"<pre><code>&lt;FodSelect1 T=\"Department\" @bind-Value=\"selectedDept\"\n            Label=\"Departament\"\n            ToStringFunc=\"@(dept =&gt; dept?.Name)\"&gt;\n    @foreach (var dept in departments)\n    {\n        &lt;FodSelectItem Value=\"@dept\"&gt;\n            &lt;div class=\"d-flex justify-content-between\"&gt;\n                &lt;span&gt;@dept.Name&lt;/span&gt;\n                &lt;FodChip Size=\"FodSize.Small\"&gt;@dept.EmployeeCount angaja\u021bi&lt;/FodChip&gt;\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect1&gt;\n\n@code {\n    private Department selectedDept;\n    private List&lt;Department&gt; departments;\n\n    public class Department\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public int EmployeeCount { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#select-cu-validare-stricta","title":"Select cu validare strict\u0103","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodSelect1 T=\"string\" @bind-Value=\"model.Category\"\n                Label=\"Categorie\"\n                Strict=\"true\"\n                Required=\"true\"\n                Error=\"@(context.GetValidationMessages(() =&gt; model.Category).Any())\"\n                ErrorText=\"@(context.GetValidationMessages(() =&gt; model.Category).FirstOrDefault())\"&gt;\n        &lt;FodSelectItem Value=\"@(\"electronics\")\"&gt;Electronice&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"@(\"clothing\")\"&gt;\u00cembr\u0103c\u0103minte&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"@(\"food\")\"&gt;Alimente&lt;/FodSelectItem&gt;\n    &lt;/FodSelect1&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ProductModel model = new();\n\n    public class ProductModel\n    {\n        [Required(ErrorMessage = \"Categoria este obligatorie\")]\n        public string Category { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#select-cu-grupare-si-icoane","title":"Select cu grupare \u0219i icoane","text":"<pre><code>&lt;FodSelect1 T=\"MenuItem\" @bind-Value=\"selectedMenuItem\"\n            Label=\"Meniu navigare\"\n            CanRenderValue=\"true\"&gt;\n    @foreach (var group in menuGroups)\n    {\n        &lt;FodListSubheader&gt;@group.Name&lt;/FodListSubheader&gt;\n        @foreach (var item in group.Items)\n        {\n            &lt;FodSelectItem Value=\"@item\"&gt;\n                &lt;div class=\"d-flex align-items-center gap-2\"&gt;\n                    &lt;FodIcon Icon=\"@item.Icon\" /&gt;\n                    &lt;span&gt;@item.Label&lt;/span&gt;\n                    @if (item.IsBeta)\n                    {\n                        &lt;FodChip Color=\"FodColor.Warning\" Size=\"FodSize.Small\"&gt;Beta&lt;/FodChip&gt;\n                    }\n                &lt;/div&gt;\n            &lt;/FodSelectItem&gt;\n        }\n    }\n&lt;/FodSelect1&gt;\n\n@code {\n    private MenuItem selectedMenuItem;\n    private List&lt;MenuGroup&gt; menuGroups;\n\n    public class MenuItem\n    {\n        public string Label { get; set; }\n        public string Icon { get; set; }\n        public string Route { get; set; }\n        public bool IsBeta { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#6-integrare-cu-formulare","title":"6. Integrare cu Formulare","text":""},{"location":"fod/componente/FodSelect1/#multi-select-cu-conversie-tip","title":"Multi-select cu conversie tip","text":"<pre><code>&lt;FodSelect1 T=\"int\" @bind-SelectedValues=\"selectedRoleIds\"\n            Label=\"Roluri utilizator\"\n            MultiSelection=\"true\"\n            SelectAll=\"true\"\n            Clearable=\"true\"&gt;\n    @foreach (var role in availableRoles)\n    {\n        &lt;FodSelectItem Value=\"@role.Id\" Disabled=\"@(!role.IsActive)\"&gt;\n            &lt;div class=\"d-flex justify-content-between w-100\"&gt;\n                &lt;span&gt;@role.Name&lt;/span&gt;\n                @if (!role.IsActive)\n                {\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.TextSecondary\"&gt;\n                        (Inactiv)\n                    &lt;/FodText&gt;\n                }\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect1&gt;\n\n&lt;FodText Class=\"mt-2\"&gt;\n    Roluri selectate: @string.Join(\", \", GetSelectedRoleNames())\n&lt;/FodText&gt;\n\n@code {\n    private HashSet&lt;int&gt; selectedRoleIds = new();\n    private List&lt;Role&gt; availableRoles;\n\n    private IEnumerable&lt;string&gt; GetSelectedRoleNames()\n    {\n        return availableRoles\n            .Where(r =&gt; selectedRoleIds.Contains(r.Id))\n            .Select(r =&gt; r.Name);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#7-stilizare-si-personalizare","title":"7. Stilizare \u0219i Personalizare","text":""},{"location":"fod/componente/FodSelect1/#select-cu-template-personalizat","title":"Select cu template personalizat","text":"<pre><code>&lt;FodSelect1 T=\"User\" @bind-Value=\"assignedUser\"\n            Label=\"Asignat c\u0103tre\"\n            CanRenderValue=\"true\"\n            PopoverClass=\"user-select-popover\"\n            ListClass=\"user-select-list\"&gt;\n    @if (assignedUser != null)\n    {\n        &lt;SelectedTemplate&gt;\n            &lt;div class=\"d-flex align-items-center gap-2\"&gt;\n                &lt;FodAvatar Size=\"FodSize.Small\"&gt;\n                    @assignedUser.Initials\n                &lt;/FodAvatar&gt;\n                &lt;span&gt;@assignedUser.FullName&lt;/span&gt;\n            &lt;/div&gt;\n        &lt;/SelectedTemplate&gt;\n    }\n\n    @foreach (var user in users)\n    {\n        &lt;FodSelectItem Value=\"@user\"&gt;\n            &lt;div class=\"user-item\"&gt;\n                &lt;FodAvatar&gt;@user.Initials&lt;/FodAvatar&gt;\n                &lt;div class=\"user-info\"&gt;\n                    &lt;div class=\"user-name\"&gt;@user.FullName&lt;/div&gt;\n                    &lt;div class=\"user-role\"&gt;@user.Department - @user.Role&lt;/div&gt;\n                &lt;/div&gt;\n                @if (user.IsOnline)\n                {\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Circle\" \n                             Color=\"FodColor.Success\" \n                             Size=\"FodSize.Small\" /&gt;\n                }\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect1&gt;\n\n&lt;style&gt;\n    .user-item {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        padding: 8px;\n    }\n\n    .user-info {\n        flex: 1;\n    }\n\n    .user-name {\n        font-weight: 500;\n    }\n\n    .user-role {\n        font-size: 0.875rem;\n        color: var(--fod-palette-text-secondary);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodSelect1/#8-cazuri-speciale","title":"8. Cazuri Speciale","text":""},{"location":"fod/componente/FodSelect1/#select-cu-incarcare-asincrona","title":"Select cu \u00eenc\u0103rcare asincron\u0103","text":"<pre><code>&lt;FodSelect1 T=\"string\" @bind-Value=\"selectedCityId\"\n            Label=\"Ora\u0219\"\n            Disabled=\"@(isLoadingCities || !selectedRegion.HasValue)\"&gt;\n    @if (isLoadingCities)\n    {\n        &lt;FodSelectItem Value=\"@(\"\")\" Disabled=\"true\"&gt;\n            &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt; Se \u00eencarc\u0103 ora\u0219ele...\n        &lt;/FodSelectItem&gt;\n    }\n    else\n    {\n        @foreach (var city in cities)\n        {\n            &lt;FodSelectItem Value=\"@city.Id\"&gt;@city.Name&lt;/FodSelectItem&gt;\n        }\n    }\n&lt;/FodSelect1&gt;\n\n@code {\n    private string selectedCityId;\n    private int? selectedRegion;\n    private List&lt;City&gt; cities = new();\n    private bool isLoadingCities;\n\n    private async Task OnRegionChanged(int? regionId)\n    {\n        selectedRegion = regionId;\n        selectedCityId = null;\n\n        if (regionId.HasValue)\n        {\n            isLoadingCities = true;\n            cities = await CityService.GetCitiesByRegion(regionId.Value);\n            isLoadingCities = false;\n        }\n        else\n        {\n            cities.Clear();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelect1/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Tipuri generice - Folosi\u021bi tipuri potrivite pentru T</li> <li>Validare - Combina\u021bi cu DataAnnotationsValidator</li> <li>Performance - Pentru liste mari, implementa\u021bi virtualizare</li> <li>Accessibility - Ad\u0103uga\u021bi Label descriptiv</li> <li>Error handling - Afi\u0219a\u021bi erori de validare clar</li> <li>Loading states - Indica\u021bi c\u00e2nd datele se \u00eencarc\u0103</li> </ol>"},{"location":"fod/componente/FodSelect1/#10-diferente-fata-de-fodselect","title":"10. Diferen\u021be fa\u021b\u0103 de FodSelect","text":"<ul> <li><code>FodSelect1</code> ofer\u0103 mai mult control asupra afi\u0219\u0103rii</li> <li>Suport pentru <code>CanRenderValue</code> pentru template-uri custom</li> <li>Integrare mai str\u00e2ns\u0103 cu <code>FodPopover</code></li> <li>Validare strict\u0103 op\u021bional\u0103 cu <code>Strict</code></li> </ul>"},{"location":"fod/componente/FodSelect1/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodSelect1/#valoarea-nu-se-actualizeaza","title":"Valoarea nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>T</code> implementeaz\u0103 corect egalitatea</li> <li>Pentru obiecte complexe, override <code>Equals</code> \u0219i <code>GetHashCode</code></li> <li>Verifica\u021bi c\u0103 <code>@bind-Value</code> este configurat corect</li> </ul>"},{"location":"fod/componente/FodSelect1/#lista-nu-se-deschide","title":"Lista nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 nu exist\u0103 erori JavaScript \u00een consol\u0103</li> <li>Verifica\u021bi z-index pentru overlay</li> <li>Asigura\u021bi-v\u0103 c\u0103 <code>Disabled</code> nu este <code>true</code></li> </ul>"},{"location":"fod/componente/FodSelect1/#12-performanta","title":"12. Performan\u021b\u0103","text":"<p>Pentru liste mari: <pre><code>&lt;FodSelect1 T=\"string\" @bind-Value=\"selected\"\n            MaxHeight=\"400\"\n            Dense=\"true\"&gt;\n    &lt;FodVirtualize Items=\"@largeList\" Context=\"item\"&gt;\n        &lt;FodSelectItem Value=\"@item\"&gt;@item&lt;/FodSelectItem&gt;\n    &lt;/FodVirtualize&gt;\n&lt;/FodSelect1&gt;\n</code></pre></p>"},{"location":"fod/componente/FodSelect1/#13-accesibilitate","title":"13. Accesibilitate","text":"<ul> <li>Suport\u0103 navigare cu tastatur\u0103</li> <li>ARIA labels pentru screen readers</li> <li>Focus management automat</li> <li>Anun\u021b\u0103 schimb\u0103rile de selec\u021bie</li> </ul>"},{"location":"fod/componente/FodSelect1/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodSelect1</code> este o alternativ\u0103 robust\u0103 la componenta standard FodSelect, oferind func\u021bionalit\u0103\u021bi avansate pentru scenarii complexe de selec\u021bie. Cu suport pentru validare strict\u0103, afi\u0219are personalizat\u0103 \u0219i multi-selec\u021bie, componenta acoper\u0103 majoritatea necesit\u0103\u021bilor pentru dropdown-uri \u00een aplica\u021bii enterprise.</p>"},{"location":"fod/componente/FodSelectItem/","title":"FodSelectItem","text":""},{"location":"fod/componente/FodSelectItem/#documentatie-pentru-componenta-fodselectitem","title":"Documenta\u021bie pentru componenta FodSelectItem","text":""},{"location":"fod/componente/FodSelectItem/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodSelectItem&lt;T&gt;</code> reprezint\u0103 o op\u021biune individual\u0103 \u00eentr-un <code>FodSelect</code> sau <code>FodMultiSelect</code>. Componenta gestioneaz\u0103 automat afi\u0219area, selec\u021bia \u0219i integrarea cu componenta p\u0103rinte select, oferind suport pentru valori tipizate \u0219i afi\u0219are personalizat\u0103.</p> <p>Caracteristici principale: - Suport pentru tipuri generice - Integrare automat\u0103 cu FodSelect p\u0103rinte - Afi\u0219are checkbox pentru multi-select - Conversie automat\u0103 a valorilor pentru afi\u0219are - Suport pentru con\u021binut personalizat - Gestionare automat\u0103 a st\u0103rii de selec\u021bie - Suport pentru elemente dezactivate</p>"},{"location":"fod/componente/FodSelectItem/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodSelectItem/#select-simplu-cu-optiuni","title":"Select simplu cu op\u021biuni","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-Value=\"selectedCountry\" Label=\"\u021aar\u0103\"&gt;\n    &lt;FodSelectItem Value=\"@(\"RO\")\"&gt;Rom\u00e2nia&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"MD\")\"&gt;Moldova&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"BG\")\"&gt;Bulgaria&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"UA\")\"&gt;Ucraina&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n@code {\n    private string selectedCountry = \"RO\";\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#select-cu-valori-numerice","title":"Select cu valori numerice","text":"<pre><code>&lt;FodSelect T=\"int\" @bind-Value=\"selectedPriority\" Label=\"Prioritate\"&gt;\n    &lt;FodSelectItem Value=\"1\"&gt;Sc\u0103zut\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"2\"&gt;Normal\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"3\"&gt;\u00cenalt\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"4\"&gt;Urgent\u0103&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n@code {\n    private int selectedPriority = 2;\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#multi-select-cu-checkbox-uri","title":"Multi-select cu checkbox-uri","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-SelectedValues=\"selectedLanguages\" \n           Label=\"Limbi vorbite\" \n           MultiSelection=\"true\"&gt;\n    &lt;FodSelectItem Value=\"@(\"ro\")\"&gt;Rom\u00e2n\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"en\")\"&gt;Englez\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"fr\")\"&gt;Francez\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"de\")\"&gt;German\u0103&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"es\")\"&gt;Spaniol\u0103&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n\n@code {\n    private IEnumerable&lt;string&gt; selectedLanguages = new[] { \"ro\", \"en\" };\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>T</code> Valoarea asociat\u0103 op\u021biunii - <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 op\u021biunea <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut personalizat de afi\u0219at - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale - <code>Style</code> <code>string</code> Stiluri inline -"},{"location":"fod/componente/FodSelectItem/#4-proprietati-calculate","title":"4. Propriet\u0103\u021bi Calculate","text":"Proprietate Tip Descriere <code>MultiSelection</code> <code>bool</code> Reflect\u0103 starea multi-select a p\u0103rintelui <code>IsSelected</code> <code>bool</code> Starea de selec\u021bie (doar pentru multi-select) <code>CheckBoxIcon</code> <code>string</code> Iconi\u021ba checkbox bazat\u0103 pe stare <code>DisplayString</code> <code>string</code> Text afi\u0219at (folosind converter)"},{"location":"fod/componente/FodSelectItem/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodSelectItem/#select-cu-obiecte-complexe","title":"Select cu obiecte complexe","text":"<pre><code>&lt;FodSelect T=\"Department\" @bind-Value=\"selectedDepartment\" \n           ToStringFunc=\"@(dept =&gt; dept?.Name)\"\n           Label=\"Departament\"&gt;\n    @foreach (var dept in departments)\n    {\n        &lt;FodSelectItem Value=\"@dept\"&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@dept.Icon\" Class=\"me-2\" /&gt;\n                &lt;div&gt;\n                    &lt;FodText Typo=\"Typo.body2\"&gt;@dept.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                        @dept.EmployeeCount angaja\u021bi\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private Department selectedDepartment;\n    private List&lt;Department&gt; departments = new()\n    {\n        new() { Id = 1, Name = \"IT\", Icon = FodIcons.Material.Filled.Computer, EmployeeCount = 25 },\n        new() { Id = 2, Name = \"HR\", Icon = FodIcons.Material.Filled.People, EmployeeCount = 10 },\n        new() { Id = 3, Name = \"V\u00e2nz\u0103ri\", Icon = FodIcons.Material.Filled.Sell, EmployeeCount = 30 }\n    };\n\n    public class Department\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string Icon { get; set; }\n        public int EmployeeCount { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#select-cu-grupare-vizuala","title":"Select cu grupare vizual\u0103","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-Value=\"selectedCity\" Label=\"Ora\u0219\"&gt;\n    &lt;FodListSubheader&gt;Rom\u00e2nia&lt;/FodListSubheader&gt;\n    &lt;FodSelectItem Value=\"@(\"BUC\")\"&gt;Bucure\u0219ti&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"CLJ\")\"&gt;Cluj-Napoca&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"TMR\")\"&gt;Timi\u0219oara&lt;/FodSelectItem&gt;\n\n    &lt;FodDivider /&gt;\n    &lt;FodListSubheader&gt;Moldova&lt;/FodListSubheader&gt;\n    &lt;FodSelectItem Value=\"@(\"CHI\")\"&gt;Chi\u0219in\u0103u&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"BAL\")\"&gt;B\u0103l\u021bi&lt;/FodSelectItem&gt;\n\n    &lt;FodDivider /&gt;\n    &lt;FodListSubheader&gt;Bulgaria&lt;/FodListSubheader&gt;\n    &lt;FodSelectItem Value=\"@(\"SOF\")\"&gt;Sofia&lt;/FodSelectItem&gt;\n    &lt;FodSelectItem Value=\"@(\"PLV\")\"&gt;Plovdiv&lt;/FodSelectItem&gt;\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#select-cu-optiuni-dezactivate-conditionat","title":"Select cu op\u021biuni dezactivate condi\u021bionat","text":"<pre><code>&lt;FodSelect T=\"TimeSlot\" @bind-Value=\"selectedSlot\" \n           ToStringFunc=\"@(slot =&gt; slot?.DisplayTime)\"\n           Label=\"Interval orar\"&gt;\n    @foreach (var slot in timeSlots)\n    {\n        &lt;FodSelectItem Value=\"@slot\" \n                       Disabled=\"@(!slot.IsAvailable)\"&gt;\n            &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n                &lt;span&gt;@slot.DisplayTime&lt;/span&gt;\n                @if (!slot.IsAvailable)\n                {\n                    &lt;FodChip Size=\"FodSize.Small\" Color=\"FodColor.Error\"&gt;\n                        Ocupat\n                    &lt;/FodChip&gt;\n                }\n                else if (slot.RemainingSpots &lt; 3)\n                {\n                    &lt;FodChip Size=\"FodSize.Small\" Color=\"FodColor.Warning\"&gt;\n                        @slot.RemainingSpots locuri\n                    &lt;/FodChip&gt;\n                }\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private TimeSlot selectedSlot;\n    private List&lt;TimeSlot&gt; timeSlots = GenerateTimeSlots();\n\n    public class TimeSlot\n    {\n        public int Hour { get; set; }\n        public int Minute { get; set; }\n        public bool IsAvailable { get; set; }\n        public int RemainingSpots { get; set; }\n        public string DisplayTime =&gt; $\"{Hour:D2}:{Minute:D2}\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#multi-select-cu-counter","title":"Multi-select cu counter","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-SelectedValues=\"selectedTags\" \n           Label=\"@($\"Taguri ({selectedTags?.Count() ?? 0} selectate)\")\"\n           MultiSelection=\"true\"\n           SelectAll=\"true\"\n           SelectAllText=\"Selecteaz\u0103 toate\"&gt;\n    @foreach (var tag in availableTags)\n    {\n        &lt;FodSelectItem Value=\"@tag.Id\"&gt;\n            &lt;div class=\"d-flex align-items-center\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Tag\" \n                         Size=\"FodSize.Small\" \n                         Color=\"@tag.Color\" \n                         Class=\"me-2\" /&gt;\n                @tag.Name\n                &lt;FodText Typo=\"Typo.caption\" Class=\"ms-auto\"&gt;\n                    (@tag.UsageCount)\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n        &lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private IEnumerable&lt;string&gt; selectedTags = new List&lt;string&gt;();\n    private List&lt;Tag&gt; availableTags = new()\n    {\n        new() { Id = \"urgent\", Name = \"Urgent\", Color = FodColor.Error, UsageCount = 45 },\n        new() { Id = \"bug\", Name = \"Bug\", Color = FodColor.Warning, UsageCount = 123 },\n        new() { Id = \"feature\", Name = \"Feature\", Color = FodColor.Success, UsageCount = 67 }\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#6-integrare-cu-formulare","title":"6. Integrare cu Formulare","text":""},{"location":"fod/componente/FodSelectItem/#in-editform","title":"\u00cen EditForm","text":"<pre><code>&lt;EditForm Model=\"formModel\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodSelect T=\"int\" @bind-Value=\"formModel.CategoryId\" \n               Label=\"Categorie\" \n               Required=\"true\"\n               Validation=\"@(() =&gt; formModel.CategoryId)\"&gt;\n        &lt;FodSelectItem Value=\"0\" Disabled=\"true\"&gt;\n            -- Selecta\u021bi categoria --\n        &lt;/FodSelectItem&gt;\n        @foreach (var category in categories)\n        {\n            &lt;FodSelectItem Value=\"@category.Id\"&gt;\n                @category.Name\n            &lt;/FodSelectItem&gt;\n        }\n    &lt;/FodSelect&gt;\n\n    &lt;ValidationSummary /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel formModel = new();\n\n    public class FormModel\n    {\n        [Required(ErrorMessage = \"Categoria este obligatorie\")]\n        [Range(1, int.MaxValue, ErrorMessage = \"Selecta\u021bi o categorie valid\u0103\")]\n        public int CategoryId { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#7-stilizare-personalizata","title":"7. Stilizare Personalizat\u0103","text":"<pre><code>/* Op\u021biuni cu hover special */\n.custom-select .fod-list-item:hover {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.1);\n    font-weight: 500;\n}\n\n/* Op\u021biuni selectate cu stil distinct */\n.custom-select .fod-selected-item {\n    background-color: var(--fod-palette-primary-main);\n    color: white;\n}\n\n/* Checkbox-uri colorate pentru multi-select */\n.colorful-select .fod-list-item .fod-icon-root {\n    color: var(--fod-palette-primary-main);\n}\n\n/* Op\u021biuni dezactivate cu stil special */\n.custom-select .fod-list-item-disabled {\n    opacity: 0.5;\n    text-decoration: line-through;\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#8-scenarii-comune","title":"8. Scenarii Comune","text":""},{"location":"fod/componente/FodSelectItem/#select-cu-cautare","title":"Select cu c\u0103utare","text":"<pre><code>&lt;FodSelect T=\"Product\" @bind-Value=\"selectedProduct\"\n           Label=\"Produs\"\n           SearchFunc=\"@SearchProducts\"\n           ToStringFunc=\"@(p =&gt; p?.Name)\"&gt;\n    @if (isLoading)\n    {\n        &lt;FodSelectItem Value=\"@null\" Disabled=\"true\"&gt;\n            &lt;FodLoadingLinear /&gt;\n        &lt;/FodSelectItem&gt;\n    }\n    else\n    {\n        @foreach (var product in filteredProducts)\n        {\n            &lt;FodSelectItem Value=\"@product\"&gt;\n                &lt;div class=\"d-flex justify-content-between\"&gt;\n                    &lt;span&gt;@product.Name&lt;/span&gt;\n                    &lt;span class=\"text-muted\"&gt;@product.Price.ToString(\"C\")&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/FodSelectItem&gt;\n        }\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private Product selectedProduct;\n    private List&lt;Product&gt; allProducts = new();\n    private List&lt;Product&gt; filteredProducts = new();\n    private bool isLoading;\n\n    private async Task&lt;IEnumerable&lt;Product&gt;&gt; SearchProducts(string searchText)\n    {\n        isLoading = true;\n        StateHasChanged();\n\n        await Task.Delay(500); // Simulare API call\n\n        filteredProducts = string.IsNullOrWhiteSpace(searchText) \n            ? allProducts \n            : allProducts.Where(p =&gt; p.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();\n\n        isLoading = false;\n        StateHasChanged();\n\n        return filteredProducts;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#select-cu-adaugare-optiune-noua","title":"Select cu ad\u0103ugare op\u021biune nou\u0103","text":"<pre><code>&lt;FodSelect T=\"string\" @bind-Value=\"selectedTag\" Label=\"Tag\"&gt;\n    @foreach (var tag in tags)\n    {\n        &lt;FodSelectItem Value=\"@tag\"&gt;@tag&lt;/FodSelectItem&gt;\n    }\n    &lt;FodDivider /&gt;\n    &lt;FodListItem Icon=\"@FodIcons.Material.Filled.Add\" \n                 OnClick=\"ShowAddDialog\"&gt;\n        Adaug\u0103 tag nou...\n    &lt;/FodListItem&gt;\n&lt;/FodSelect&gt;\n\n&lt;FodDialog @bind-Open=\"showAddDialog\"&gt;\n    &lt;FodDialogTitle&gt;Tag nou&lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        &lt;FodTextField @bind-Value=\"newTag\" \n                      Label=\"Nume tag\" \n                      Immediate=\"true\" /&gt;\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodButton OnClick=\"@(() =&gt; showAddDialog = false)\"&gt;\n            Anuleaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"AddNewTag\"&gt;\n            Adaug\u0103\n        &lt;/FodButton&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodDialog&gt;\n\n@code {\n    private string selectedTag;\n    private List&lt;string&gt; tags = new() { \"Important\", \"Arhivat\", \"\u00cen lucru\" };\n    private bool showAddDialog;\n    private string newTag;\n\n    private void AddNewTag()\n    {\n        if (!string.IsNullOrWhiteSpace(newTag) &amp;&amp; !tags.Contains(newTag))\n        {\n            tags.Add(newTag);\n            selectedTag = newTag;\n        }\n        showAddDialog = false;\n        newTag = string.Empty;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodSelectItem/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Tipuri generice - Folosi\u021bi tipuri clare \u0219i consistente pentru <code>T</code></li> <li>ToStringFunc - Defini\u021bi \u00eentotdeauna pentru obiecte complexe</li> <li>Valori unice - Asigura\u021bi-v\u0103 c\u0103 fiecare Value este unic\u0103</li> <li>Loading states - Afi\u0219a\u021bi feedback pentru \u00eenc\u0103rcare asincron\u0103</li> <li>Grupare logic\u0103 - Organiza\u021bi op\u021biunile cu subheaders \u0219i dividers</li> <li>Accesibilitate - Include\u021bi op\u021biuni descriptive pentru screen readers</li> </ol>"},{"location":"fod/componente/FodSelectItem/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Pentru liste mari (&gt;100 items), considera\u021bi virtualizare</li> <li>Folosi\u021bi <code>@key</code> \u00een bucle pentru optimizare</li> <li>Evita\u021bi calcule complexe \u00een DisplayString</li> <li>Cache-ui\u021bi rezultatele pentru SearchFunc</li> </ul>"},{"location":"fod/componente/FodSelectItem/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodSelectItem/#optiunea-nu-apare-in-select","title":"Op\u021biunea nu apare \u00een select","text":"<ul> <li>Verifica\u021bi tipul generic T</li> <li>Verifica\u021bi c\u0103 Value este setat\u0103</li> <li>Verifica\u021bi HideContent cascading parameter</li> </ul>"},{"location":"fod/componente/FodSelectItem/#checkbox-urile-nu-apar","title":"Checkbox-urile nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 MultiSelection=\"true\" pe FodSelect</li> <li>Verifica\u021bi c\u0103 FodSelect este de tip FodSelect1"},{"location":"fod/componente/FodSelectItem/#conversia-valorii-nu-functioneaza","title":"Conversia valorii nu func\u021bioneaz\u0103","text":"<ul> <li>Seta\u021bi ToStringFunc pe componenta p\u0103rinte</li> <li>Verifica\u021bi c\u0103 Converter este configurat corect</li> </ul>"},{"location":"fod/componente/FodSelectItem/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodSelectItem&lt;T&gt;</code> ofer\u0103 o solu\u021bie flexibil\u0103 \u0219i tipizat\u0103 pentru op\u021biunile din select-uri. Cu suport pentru con\u021binut personalizat, multi-selec\u021bie \u0219i integrare automat\u0103 cu componenta p\u0103rinte, faciliteaz\u0103 crearea de select-uri complexe \u0219i interactive \u00een aplica\u021biile FOD.</p>"},{"location":"fod/componente/FodServiceRequestStatus/","title":"FodServiceRequestStatus","text":""},{"location":"fod/componente/FodServiceRequestStatus/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodServiceRequestStatus</code> ofer\u0103 o interfa\u021b\u0103 pentru verificarea statusului solicit\u0103rilor de servicii publice folosind num\u0103rul de comand\u0103. Permite utilizatorilor s\u0103 introduc\u0103 un num\u0103r de comand\u0103 \u0219i s\u0103 vizualizeze informa\u021bii detaliate despre status, data depunerii \u0219i data estimat\u0103 de finalizare.</p> <p>Componenta func\u021bioneaz\u0103 \u00eempreun\u0103 cu <code>FodServiceRequestStatusResponse</code> pentru a oferi o experien\u021b\u0103 complet\u0103 de verificare a statusului.</p>"},{"location":"fod/componente/FodServiceRequestStatus/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodServiceRequestStatus/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodServiceRequestStatus /&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatus/#cu-numar-de-comanda-predefinit","title":"Cu num\u0103r de comand\u0103 predefinit","text":"<pre><code>&lt;FodServiceRequestStatus OrderNumber=\"SR-2024-001234\" /&gt;\n\n@code {\n    // Componenta va pre-completa c\u00e2mpul cu num\u0103rul furnizat\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatus/#integrare-in-pagina-dedicata","title":"Integrare \u00een pagin\u0103 dedicat\u0103","text":"<pre><code>@page \"/verifica-status\"\n\n&lt;div class=\"container mt-4\"&gt;\n    &lt;h2&gt;Verificare Status Solicitare&lt;/h2&gt;\n    &lt;p&gt;Introduce\u021bi num\u0103rul de comand\u0103 pentru a verifica statusul solicit\u0103rii dvs.&lt;/p&gt;\n\n    &lt;FodServiceRequestStatus /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatus/#exemplu-in-modal","title":"Exemplu \u00een modal","text":"<pre><code>&lt;FodModal @ref=\"statusModal\" Title=\"Verificare Status\"&gt;\n    &lt;Content&gt;\n        &lt;FodServiceRequestStatus /&gt;\n    &lt;/Content&gt;\n&lt;/FodModal&gt;\n\n&lt;FodButton OnClick=\"@(() =&gt; statusModal.Show())\"&gt;\n    Verific\u0103 Status Solicitare\n&lt;/FodButton&gt;\n\n@code {\n    private FodModal statusModal;\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatus/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere OrderNumber string null Num\u0103rul de comand\u0103 pentru pre-completare Class string - Clase CSS adi\u021bionale Style string - Stiluri inline"},{"location":"fod/componente/FodServiceRequestStatus/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice.</p>"},{"location":"fod/componente/FodServiceRequestStatus/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodServiceRequestStatus/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodServiceRequestStatusResponse - Afi\u0219eaz\u0103 r\u0103spunsul primit de la serviciu</li> <li>FodLoadingLinear - Indicator de \u00eenc\u0103rcare \u00een timpul verific\u0103rii</li> <li>FodButton - Buton pentru declan\u0219area verific\u0103rii</li> <li>FodDisplay - Pentru afi\u0219area c\u00e2mpurilor de r\u0103spuns</li> </ul>"},{"location":"fod/componente/FodServiceRequestStatus/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodServiceRequestStatus/#clase-css","title":"Clase CSS","text":"<ul> <li><code>.search-box</code> - Container principal cu umbr\u0103 \u0219i col\u021buri rotunjite</li> <li><code>.form-control</code> - Stilizare pentru c\u00e2mpul de input</li> <li><code>.text-danger</code> - Pentru mesajele de eroare</li> </ul>"},{"location":"fod/componente/FodServiceRequestStatus/#personalizare","title":"Personalizare","text":"<pre><code>/* Stilizare container principal */\n.search-box {\n    padding: 2rem;\n    background-color: #f8f9fa;\n    border: 1px solid #dee2e6;\n}\n\n/* Ajustare c\u00e2mp input */\n.search-box .form-control {\n    max-width: 400px;\n    font-size: 1.1rem;\n}\n\n/* Spa\u021biere buton */\n.search-box .fod-button {\n    margin-top: 1.5rem;\n}\n\n/* Stilizare mesaj eroare */\n.search-box .text-danger {\n    font-size: 0.875rem;\n    margin-top: 0.25rem;\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatus/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Serviciu obligatoriu - Necesit\u0103 injectarea <code>IServiceRequestStatusService</code></li> <li>Validare client-side - Verific\u0103 c\u0103 num\u0103rul de comand\u0103 este completat</li> <li>Loading state - Afi\u0219eaz\u0103 indicator de \u00eenc\u0103rcare \u00een timpul verific\u0103rii</li> <li>R\u0103spuns \u00eencapsulat - Folose\u0219te FodServiceRequestStatusResponse pentru afi\u0219are</li> <li>Localizare - Toate textele sunt localizate prin <code>IStringLocalizer</code></li> </ol>"},{"location":"fod/componente/FodServiceRequestStatus/#bune-practici","title":"Bune practici","text":"<ol> <li>Gestionare erori - Implementa\u021bi tratarea erorilor de re\u021bea/serviciu</li> <li>Format num\u0103r - Valida\u021bi formatul num\u0103rului de comand\u0103 \u00eenainte de trimitere</li> <li>Feedback vizual - P\u0103stra\u021bi indicatorul de \u00eenc\u0103rcare pentru opera\u021bii lungi</li> <li>Cache rezultate - Considera\u021bi cache-uirea rezultatelor pentru performan\u021b\u0103</li> <li>Instruc\u021biuni clare - Oferi\u021bi exemple de format pentru num\u0103rul de comand\u0103</li> </ol>"},{"location":"fod/componente/FodServiceRequestStatus/#concluzie","title":"Concluzie","text":"<p>FodServiceRequestStatus ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i intuitiv\u0103 pentru verificarea statusului solicit\u0103rilor. Cu validare integrat\u0103, feedback vizual \u0219i suport pentru localizare, componenta faciliteaz\u0103 procesul de urm\u0103rire a solicit\u0103rilor pentru utilizatori.</p>"},{"location":"fod/componente/FodServiceRequestStatusResponse/","title":"FodServiceRequestStatusResponse","text":""},{"location":"fod/componente/FodServiceRequestStatusResponse/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodServiceRequestStatusResponse</code> este responsabil\u0103 pentru afi\u0219area r\u0103spunsului primit \u00een urma verific\u0103rii statusului unei solicit\u0103ri de serviciu. Afi\u0219eaz\u0103 informa\u021bii detaliate despre solicitare sau un mesaj de eroare dac\u0103 solicitarea nu a fost g\u0103sit\u0103.</p> <p>Aceast\u0103 component\u0103 este utilizat\u0103 \u00een mod tipic \u00eempreun\u0103 cu <code>FodServiceRequestStatus</code>, dar poate fi folosit\u0103 \u0219i independent pentru afi\u0219area rezultatelor pre-\u00eenc\u0103rcate.</p>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodServiceRequestStatusResponse/#exemplu-de-baza-solicitare-gasita","title":"Exemplu de baz\u0103 - solicitare g\u0103sit\u0103","text":"<pre><code>&lt;FodServiceRequestStatusResponse Model=\"@statusResponse\" /&gt;\n\n@code {\n    private ServiceRequestStatusResponseModel statusResponse = new()\n    {\n        Found = true,\n        OrderNumber = \"SR-2024-001234\",\n        Status = \"\u00cen procesare\",\n        SubmissionDate = DateTime.Now.AddDays(-5),\n        EstimatedResolveDate = DateTime.Now.AddDays(10)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#exemplu-solicitare-negasita","title":"Exemplu - solicitare neg\u0103sit\u0103","text":"<pre><code>&lt;FodServiceRequestStatusResponse Model=\"@notFoundResponse\" /&gt;\n\n@code {\n    private ServiceRequestStatusResponseModel notFoundResponse = new()\n    {\n        Found = false,\n        OrderNumber = \"SR-2024-999999\"\n    };\n    // Va afi\u0219a mesaj de eroare localizat\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#integrare-cu-verificare-status","title":"Integrare cu verificare status","text":"<pre><code>&lt;div class=\"status-check-container\"&gt;\n    @if (isChecking)\n    {\n        &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n    }\n    else if (responseModel != null)\n    {\n        &lt;FodServiceRequestStatusResponse Model=\"@responseModel\" /&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private bool isChecking = false;\n    private ServiceRequestStatusResponseModel? responseModel;\n\n    private async Task CheckStatus(string orderNumber)\n    {\n        isChecking = true;\n        responseModel = await statusService.Check(orderNumber);\n        isChecking = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#afisare-conditionata","title":"Afi\u0219are condi\u021bionat\u0103","text":"<pre><code>@if (hasStatusResult)\n{\n    &lt;div class=\"mt-4\"&gt;\n        &lt;h4&gt;Rezultat verificare:&lt;/h4&gt;\n        &lt;FodServiceRequestStatusResponse Model=\"@statusResult\" /&gt;\n    &lt;/div&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model ServiceRequestStatusResponseModel null Modelul cu datele r\u0103spunsului"},{"location":"fod/componente/FodServiceRequestStatusResponse/#proprietati-servicerequeststatusresponsemodel","title":"Propriet\u0103\u021bi ServiceRequestStatusResponseModel","text":"Proprietate Tip Descriere Found bool Indic\u0103 dac\u0103 solicitarea a fost g\u0103sit\u0103 OrderNumber string Num\u0103rul de comand\u0103 verificat Status string Statusul curent al solicit\u0103rii SubmissionDate DateTime? Data depunerii solicit\u0103rii EstimatedResolveDate DateTime? Data estimat\u0103 de finalizare"},{"location":"fod/componente/FodServiceRequestStatusResponse/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente.</p>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodDisplay - Pentru afi\u0219area formatat\u0103 a c\u00e2mpurilor</li> <li>FodServiceRequestStatus - Componenta p\u0103rinte pentru verificare status</li> </ul>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodServiceRequestStatusResponse/#clase-css","title":"Clase CSS","text":"<ul> <li><code>.service-request-status-response</code> - Container principal</li> <li><code>.alert.alert-danger</code> - Pentru mesajul de eroare c\u00e2nd solicitarea nu este g\u0103sit\u0103</li> <li><code>.row</code> - Layout Bootstrap pentru afi\u0219area c\u00e2mpurilor</li> </ul>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#structura-vizuala-solicitare-gasita","title":"Structura vizual\u0103 - solicitare g\u0103sit\u0103","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Num\u0103r comand\u0103: SR-2024-001234           \u2502\n\u2502 Status: \u00cen procesare                     \u2502\n\u2502 Data depunerii: 15.01.2024              \u2502\n\u2502 Data estimat\u0103 finalizare: 30.01.2024    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#structura-vizuala-solicitare-negasita","title":"Structura vizual\u0103 - solicitare neg\u0103sit\u0103","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u26a0\ufe0f Solicitarea cu num\u0103rul SR-2024-999999\u2502\n\u2502    nu a fost g\u0103sit\u0103                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#personalizare","title":"Personalizare","text":"<pre><code>/* Container principal */\n.service-request-status-response {\n    padding: 1rem;\n    border-radius: 0.25rem;\n}\n\n/* Mesaj de eroare personalizat */\n.service-request-status-response .alert-danger {\n    border-left: 4px solid #dc3545;\n    background-color: #f8d7da;\n}\n\n/* Stilizare c\u00e2mpuri */\n.service-request-status-response dl.row {\n    margin-bottom: 0;\n}\n\n/* Eviden\u021biere status */\n.service-request-status-response [data-field=\"Status\"] {\n    font-weight: bold;\n    color: #0066cc;\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Gestionare null - Componenta verific\u0103 dac\u0103 Model este null \u00eenainte de randare</li> <li>Dou\u0103 moduri - Afi\u0219eaz\u0103 fie detalii complete, fie mesaj de eroare</li> <li>Localizare - Mesajul de eroare folose\u0219te localizare cu parametru</li> <li>Layout responsive - Folose\u0219te grid Bootstrap pentru afi\u0219are</li> <li>TitleWidth consistent - Toate c\u00e2mpurile folosesc TitleWidth=\"6\" pentru aliniere</li> </ol>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#bune-practici","title":"Bune practici","text":"<ol> <li>Validare model - Verifica\u021bi c\u0103 modelul con\u021bine date valide</li> <li>Mesaje clare - Asigura\u021bi-v\u0103 c\u0103 mesajele de eroare sunt descriptive</li> <li>Format date - P\u0103stra\u021bi un format consistent pentru date</li> <li>Status descriptiv - Folosi\u021bi termeni clari pentru status</li> <li>Tratare null - Gestiona\u021bi cazurile c\u00e2nd propriet\u0103\u021bile sunt null</li> </ol>"},{"location":"fod/componente/FodServiceRequestStatusResponse/#concluzie","title":"Concluzie","text":"<p>FodServiceRequestStatusResponse ofer\u0103 o modalitate clar\u0103 \u0219i consistent\u0103 de a afi\u0219a rezultatele verific\u0103rii statusului. Cu suport pentru ambele scenarii (g\u0103sit/neg\u0103sit) \u0219i formatare automat\u0103, componenta simplific\u0103 afi\u0219area informa\u021biilor de status pentru utilizatori.</p>"},{"location":"fod/componente/FodServiceRequestsStatistics/","title":"FodServiceRequestsStatistics","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#documentatie-pentru-componenta-fodservicerequestsstatistics","title":"Documenta\u021bie pentru componenta FodServiceRequestsStatistics","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodServiceRequestsStatistics</code> este o component\u0103 business specializat\u0103 pentru afi\u0219area statisticilor detaliate despre cererile de servicii. Ofer\u0103 filtrare pe perioad\u0103 de timp \u0219i afi\u0219eaz\u0103 multiple metrici privind starea cererilor.</p> <p>Caracteristici principale: - Filtrare pe interval de date (de la - p\u00e2n\u0103 la) - Afi\u0219are statistici pentru toate st\u0103rile cererilor - Statistici separate pentru MDelivery - Statistici pentru cereri confirmate din frontoffice/backoffice - Statistici pentru cereri de apostilare - Op\u021biune pentru afi\u0219area cererilor suspendate - Actualizare dinamic\u0103 la aplicarea filtrului</p>"},{"location":"fod/componente/FodServiceRequestsStatistics/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#afisare-simpla-de-statistici","title":"Afi\u0219are simpl\u0103 de statistici","text":"<pre><code>&lt;FodServiceRequestsStatistics /&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#cu-afisare-cereri-suspendate","title":"Cu afi\u0219are cereri suspendate","text":"<pre><code>&lt;FodServiceRequestsStatistics ShowSuspendeServiceRequestsStats=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#3-atribute-si-parametri","title":"3. Atribute \u0219i Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>ShowSuspendeServiceRequestsStats</code> <code>bool</code> Afi\u0219eaz\u0103 statistici pentru cereri suspendate <code>false</code>"},{"location":"fod/componente/FodServiceRequestsStatistics/#4-exemple-de-utilizare","title":"4. Exemple de Utilizare","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#dashboard-administrativ","title":"Dashboard administrativ","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Statistici cereri de servicii\n        &lt;/FodText&gt;\n\n        &lt;FodServiceRequestsStatistics ShowSuspendeServiceRequestsStats=\"true\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#pagina-de-raportare","title":"Pagin\u0103 de raportare","text":"<pre><code>@page \"/admin/rapoarte/statistici\"\n\n&lt;FodContainer&gt;\n    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n            &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n                Raport statistici cereri\n            &lt;/FodText&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n            &lt;FodPaper Elevation=\"2\" Class=\"pa-4\"&gt;\n                &lt;FodServiceRequestsStatistics /&gt;\n            &lt;/FodPaper&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n            &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Print\" \n                       OnClick=\"PrintStatistics\"&gt;\n                Printeaz\u0103 raport\n            &lt;/FodButton&gt;\n            &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.GetApp\" \n                       OnClick=\"ExportStatistics\"\n                       Class=\"ml-2\"&gt;\n                Export\u0103 CSV\n            &lt;/FodButton&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private async Task PrintStatistics()\n    {\n        await PrintingService.PrintAsync();\n    }\n\n    private async Task ExportStatistics()\n    {\n        // Logic\u0103 export CSV\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#in-tab-uri-cu-alte-rapoarte","title":"\u00cen tab-uri cu alte rapoarte","text":"<pre><code>&lt;FodTabControl&gt;\n    &lt;FodTabPage Title=\"Statistici generale\"&gt;\n        &lt;FodServiceRequestsStatistics /&gt;\n    &lt;/FodTabPage&gt;\n\n    &lt;FodTabPage Title=\"Statistici pe servicii\"&gt;\n        &lt;!-- Alte statistici --&gt;\n    &lt;/FodTabPage&gt;\n\n    &lt;FodTabPage Title=\"Statistici financiare\"&gt;\n        &lt;!-- Statistici pl\u0103\u021bi --&gt;\n    &lt;/FodTabPage&gt;\n&lt;/FodTabControl&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#cu-perioada-presetata","title":"Cu perioada presetat\u0103","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;\n            Statistici luna curent\u0103\n        &lt;/FodText&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodServiceRequestsStatistics /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    // Componenta poate fi extins\u0103 pentru a preseta perioada\n    protected override void OnInitialized()\n    {\n        // Setare filtru implicit pentru luna curent\u0103\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#5-metrici-afisate","title":"5. Metrici afi\u0219ate","text":"<p>Componenta afi\u0219eaz\u0103 urm\u0103toarele statistici:</p>"},{"location":"fod/componente/FodServiceRequestsStatistics/#statistici-generale","title":"Statistici generale","text":"<ul> <li>Total cereri de servicii - Num\u0103rul total de cereri</li> <li>Cereri \u00een ciorn\u0103 - Cereri \u00eencepute dar nefinalizate</li> <li>Cereri noi - Cereri depuse recent</li> <li>Cereri pl\u0103tite - Cereri cu plata efectuat\u0103</li> <li>Cereri gratuite - Cereri scutite de tax\u0103</li> <li>Cereri \u00een procesare - Cereri \u00een curs de procesare</li> <li>Cereri procesate - Cereri finalizate de operator</li> <li>Cereri emise - Cereri cu documente emise</li> <li>Cereri respinse - Cereri refuzate</li> <li>Cereri suspendate - Cereri temporar oprite (op\u021bional)</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#statistici-confirmare","title":"Statistici confirmare","text":"<ul> <li>Cereri confirmate - Total cereri confirmate</li> <li>Cereri cu r\u0103spuns pe h\u00e2rtie - Livrare fizic\u0103</li> <li>Cereri cu r\u0103spuns electronic - Livrare digital\u0103</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#statistici-mdelivery","title":"Statistici MDelivery","text":"<ul> <li>Cereri MDelivery noi - Cereri pentru livrare prin MDelivery</li> <li>Cereri MDelivery confirmate - Confirmate pentru livrare</li> <li>Cereri MDelivery procesate - \u00cen curs de livrare</li> <li>Cereri MDelivery emise - Livrate prin MDelivery</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#statistici-canale","title":"Statistici canale","text":"<ul> <li>Cereri confirmate frontoffice - Depuse direct la ghi\u0219eu</li> <li>Cereri confirmate backoffice - Procesate intern</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#statistici-speciale","title":"Statistici speciale","text":"<ul> <li>Cereri de apostilare confirmate - Cereri pentru apostil\u0103</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#6-servicii-necesare","title":"6. Servicii necesare","text":"<p>Componenta necesit\u0103 urm\u0103toarele servicii \u00eenregistrate:</p> <pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IServiceRequestStatisticsService, ServiceRequestStatisticsService&gt;();\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#7-modele-de-date","title":"7. Modele de date","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#servicerequeststatisticsfilter","title":"ServiceRequestStatisticsFilter","text":"<pre><code>public class ServiceRequestStatisticsFilter\n{\n    public DateTime? FromDate { get; set; }\n    public DateTime? ToDate { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#servicerequeststatisticsmodel","title":"ServiceRequestStatisticsModel","text":"<pre><code>public class ServiceRequestStatisticsModel\n{\n    public int TotalServiceRequests { get; set; }\n    public int DraftServiceRequests { get; set; }\n    public int NewServiceRequests { get; set; }\n    public int PaidServiceRequests { get; set; }\n    public int FreeServiceRequests { get; set; }\n    public int InProgressServiceRequests { get; set; }\n    public int ProcessedServiceRequests { get; set; }\n    public int IssuedServiceRequests { get; set; }\n    public int RejectedServiceRequests { get; set; }\n    public int SuspendedServiceRequests { get; set; }\n    public int ConfirmedServiceRequests { get; set; }\n    public int ConfirmedServiceRequestsWithResponseOnPaper { get; set; }\n    public int ConfirmedServiceRequestsWithResponseOnElectronicDocument { get; set; }\n    public int NewMDeliveryServiceRequets { get; set; }\n    public int ConfirmedMDeliveryServiceRequests { get; set; }\n    public int ProcessedMdeliveryServiceRequests { get; set; }\n    public int IssuedMDeliveryServiceRequests { get; set; }\n    public int FrontofficeConfirmedServiceRequests { get; set; }\n    public int BackofficeConfirmedServiceRequests { get; set; }\n    public int ConfirmedApostillationRequests { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#8-stilizare","title":"8. Stilizare","text":"<pre><code>/* Stil pentru lista de statistici */\n.statistics-list {\n    list-style: none;\n    padding: 0;\n}\n\n.statistics-list li {\n    padding: 0.5rem 0;\n    border-bottom: 1px solid var(--fod-palette-divider);\n}\n\n.statistics-list li:last-child {\n    border-bottom: none;\n}\n\n/* Eviden\u021biere valori importante */\n.statistics-value {\n    font-weight: bold;\n    color: var(--fod-palette-primary-main);\n}\n\n/* Layout responsive */\n@media (min-width: 768px) {\n    .statistics-grid {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        gap: 1rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#9-localizare","title":"9. Localizare","text":"<p>Componenta folose\u0219te urm\u0103toarele chei de localizare din resursa <code>General</code>:</p> <ul> <li><code>From_Date_Label</code> - Etichet\u0103 pentru data de \u00eenceput</li> <li><code>To_Date_Label</code> - Etichet\u0103 pentru data de sf\u00e2r\u0219it</li> <li><code>Apply_Filter_Label</code> - Text buton aplicare filtru</li> <li><code>Total_Service_Requests_Label</code> - Total cereri</li> <li><code>Draft_Service_Requests_Label</code> - Cereri ciorn\u0103</li> <li>\u0218i toate celelalte etichete pentru fiecare tip de statistic\u0103</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Perioade rezonabile - Nu permite\u021bi intervale prea mari care pot \u00eenc\u0103rca serverul</li> <li>Cache - Considera\u021bi cache pentru perioade frecvent accesate</li> <li>Loading state - Ad\u0103uga\u021bi indicator de \u00eenc\u0103rcare pentru perioade mari</li> <li>Validare date - Valida\u021bi c\u0103 data de \u00eenceput &lt;= data de sf\u00e2r\u0219it</li> <li>Permisiuni - Restric\u021biona\u021bi accesul doar pentru utilizatori autoriza\u021bi</li> <li>Export - Oferi\u021bi op\u021biuni de export pentru raportare</li> </ol>"},{"location":"fod/componente/FodServiceRequestsStatistics/#11-integrare-cu-alte-componente","title":"11. Integrare cu alte componente","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#cu-grafice","title":"Cu grafice","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n        &lt;FodServiceRequestsStatistics /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;Distribu\u021bie pe st\u0103ri&lt;/FodText&gt;\n                &lt;!-- Grafic pie/bar cu distribu\u021bia --&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#in-modal-pentru-detalii","title":"\u00cen modal pentru detalii","text":"<pre><code>&lt;FodModal @bind-IsVisible=\"showStatistics\" Title=\"Statistici detaliate\"&gt;\n    &lt;BodyContent&gt;\n        &lt;FodServiceRequestsStatistics ShowSuspendeServiceRequestsStats=\"true\" /&gt;\n    &lt;/BodyContent&gt;\n    &lt;FooterContent&gt;\n        &lt;FodButton OnClick=\"CloseModal\"&gt;\u00cenchide&lt;/FodButton&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodServiceRequestsStatistics/#12-performanta","title":"12. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi paginare pentru seturi mari de date</li> <li>Implementa\u021bi loading skeleton pentru experien\u021b\u0103 mai bun\u0103</li> <li>Cache rezultate pentru perioade frecvente</li> <li>Considera\u021bi agregare pe server pentru performan\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodServiceRequestsStatistics/#statisticile-nu-se-actualizeaza","title":"Statisticile nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 serviciul este \u00eenregistrat corect</li> <li>Verifica\u021bi conexiunea la baz\u0103 de date</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#filtrele-nu-functioneaza","title":"Filtrele nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi formatarea datelor</li> <li>Verifica\u021bi c\u0103 datele sunt \u00een intervalul valid</li> <li>Verifica\u021bi timezone-ul aplica\u021biei</li> </ul>"},{"location":"fod/componente/FodServiceRequestsStatistics/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodServiceRequestsStatistics</code> ofer\u0103 o vizualizare complet\u0103 a statisticilor pentru cererile de servicii guvernamentale. Cu filtrare flexibil\u0103 \u0219i afi\u0219are detaliat\u0103 a tuturor st\u0103rilor posibile, componenta este esen\u021bial\u0103 pentru monitorizarea \u0219i raportarea activit\u0103\u021bii \u00een sistemul FOD.</p>"},{"location":"fod/componente/FodSpacer/","title":"Spacer","text":""},{"location":"fod/componente/FodSpacer/#documentatie-pentru-componenta-fodspacer","title":"Documenta\u021bie pentru componenta FodSpacer","text":""},{"location":"fod/componente/FodSpacer/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodSpacer</code> este o component\u0103 utilitar\u0103 simpl\u0103 care creeaz\u0103 spa\u021biu flexibil \u00eentre elemente \u00eentr-un container flex. Componenta se extinde automat pentru a ocupa tot spa\u021biul disponibil, \u00eemping\u00e2nd elementele adiacente c\u0103tre marginile containerului.</p> <p>Caracteristici principale: - Creeaz\u0103 spa\u021biu flexibil \u00een containere flex - Se extinde automat pentru a umple spa\u021biul disponibil - Nu necesit\u0103 parametri sau configurare - Bazat pe utilitarul Bootstrap <code>flex-grow-1</code> - Foarte u\u0219or \u0219i performant - Ideal pentru toolbars \u0219i ac\u021biuni - Func\u021bioneaz\u0103 \u00een orice direc\u021bie flex - Zero overhead de configurare</p>"},{"location":"fod/componente/FodSpacer/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodSpacer/#spacer-in-toolbar","title":"Spacer \u00een toolbar","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Menu\"&gt;\n        Meniu\n    &lt;/FodButton&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Search\"&gt;\n        C\u0103utare\n    &lt;/FodButton&gt;\n    &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.AccountCircle\"&gt;\n        Profil\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-card-actions","title":"Spacer \u00een card actions","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Titlu card&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\"&gt;\n            Con\u021binut descriptiv pentru card.\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton Color=\"FodColor.Primary\"&gt;Confirm\u0103&lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-header","title":"Spacer \u00een header","text":"<pre><code>&lt;FodAppBar Position=\"Position.Fixed\" Color=\"FodColor.Primary\"&gt;\n    &lt;FodToolbar&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                       Color=\"FodColor.Inherit\" /&gt;\n\n        &lt;FodText Typo=\"Typo.h6\" Class=\"ms-3\"&gt;\n            Aplica\u021bia Mea\n        &lt;/FodText&gt;\n\n        &lt;FodSpacer /&gt;\n\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\" \n                       Color=\"FodColor.Inherit\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" \n                       Color=\"FodColor.Inherit\" /&gt;\n    &lt;/FodToolbar&gt;\n&lt;/FodAppBar&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#multiple-spacers-pentru-distributie-uniforma","title":"Multiple spacers pentru distribu\u021bie uniform\u0103","text":"<pre><code>&lt;div class=\"d-flex\"&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton&gt;Buton 1&lt;/FodButton&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton&gt;Buton 2&lt;/FodButton&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton&gt;Buton 3&lt;/FodButton&gt;\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-formulare","title":"Spacer \u00een formulare","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;div class=\"d-flex align-items-end\"&gt;\n        &lt;FodTextField @bind-Value=\"model.SearchTerm\" \n                      Label=\"Caut\u0103\"\n                      Style=\"flex: 1\" /&gt;\n\n        &lt;FodSpacer /&gt;\n\n        &lt;FodButton Type=\"ButtonType.Submit\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"ms-3\"&gt;\n            Caut\u0103\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-liste-de-actiuni","title":"Spacer \u00een liste de ac\u021biuni","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex align-items-center w-100\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" Class=\"me-3\" /&gt;\n            &lt;FodText&gt;Profil utilizator&lt;/FodText&gt;\n            &lt;FodSpacer /&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Edit\" \n                           Size=\"FodSize.Small\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n\n    &lt;FodListItem&gt;\n        &lt;div class=\"d-flex align-items-center w-100\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" Class=\"me-3\" /&gt;\n            &lt;FodText&gt;Set\u0103ri&lt;/FodText&gt;\n            &lt;FodSpacer /&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.ChevronRight\" \n                           Size=\"FodSize.Small\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-pentru-aliniere-bottom-in-card","title":"Spacer pentru aliniere bottom \u00een card","text":"<pre><code>&lt;FodCard Style=\"height: 300px;\"&gt;\n    &lt;FodCardContent Class=\"d-flex flex-column h-100\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Card cu \u00een\u0103l\u021bime fix\u0103&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\"&gt;\n            Con\u021binut care poate varia \u00een dimensiune.\n        &lt;/FodText&gt;\n\n        &lt;FodSpacer /&gt;\n\n        &lt;FodButton Color=\"FodColor.Primary\" FullWidth=\"true\"&gt;\n            Ac\u021biune pozi\u021bionat\u0103 jos\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-dialog-footer","title":"Spacer \u00een dialog footer","text":"<pre><code>&lt;FodDialog Show=\"@showDialog\"&gt;\n    &lt;FodDialogTitle&gt;Confirmare \u0219tergere&lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 \u0219terge\u021bi acest element?\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" OnClick=\"CloseDialog\"&gt;\n            Anuleaz\u0103\n        &lt;/FodButton&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton Color=\"FodColor.Error\" OnClick=\"DeleteItem\"&gt;\n            \u0218terge\n        &lt;/FodButton&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodDialog&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-navigation","title":"Spacer \u00een navigation","text":"<pre><code>&lt;nav class=\"d-flex align-items-center\"&gt;\n    &lt;FodLink Href=\"/\"&gt;Acas\u0103&lt;/FodLink&gt;\n    &lt;FodText Class=\"mx-2\"&gt;/&lt;/FodText&gt;\n    &lt;FodLink Href=\"/products\"&gt;Produse&lt;/FodLink&gt;\n    &lt;FodText Class=\"mx-2\"&gt;/&lt;/FodText&gt;\n    &lt;FodText&gt;Detalii produs&lt;/FodText&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodButton Size=\"FodSize.Small\" StartIcon=\"@FodIcons.Material.Filled.Share\"&gt;\n        Distribuie\n    &lt;/FodButton&gt;\n&lt;/nav&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#spacer-in-grid-flexibil","title":"Spacer \u00een grid flexibil","text":"<pre><code>&lt;div class=\"d-flex flex-wrap\"&gt;\n    @foreach (var item in items)\n    {\n        &lt;div class=\"card-item\"&gt;\n            &lt;!-- Con\u021binut card --&gt;\n        &lt;/div&gt;\n    }\n    &lt;FodSpacer /&gt;\n    &lt;!-- Spacer-ul \u00eempinge ultimul r\u00e2nd la st\u00e2nga --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"<p><code>FodSpacer</code> nu are parametri configurabili. Este o component\u0103 complet autonom\u0103.</p>"},{"location":"fod/componente/FodSpacer/#4-cum-functioneaza","title":"4. Cum func\u021bioneaz\u0103","text":"<p>Componenta randeaz\u0103 un simplu <code>&lt;div&gt;</code> cu clasa CSS <code>flex-grow-1</code>, care \u00een Bootstrap este definit\u0103 ca:</p> <pre><code>.flex-grow-1 {\n    flex-grow: 1 !important;\n}\n</code></pre> <p>Aceasta face ca elementul s\u0103 se extind\u0103 pentru a ocupa tot spa\u021biul disponibil \u00een containerul flex.</p>"},{"location":"fod/componente/FodSpacer/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<p>De\u0219i componenta nu accept\u0103 parametri, poate fi stilizat\u0103 prin wrapping:</p> <pre><code>&lt;!-- Spacer cu l\u0103\u021bime minim\u0103 --&gt;\n&lt;div style=\"min-width: 20px;\"&gt;\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n\n&lt;!-- Spacer cu l\u0103\u021bime maxim\u0103 --&gt;\n&lt;div style=\"max-width: 200px;\"&gt;\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n\n&lt;!-- Spacer doar pe desktop --&gt;\n&lt;div class=\"d-none d-md-flex\"&gt;\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#6-alternative-css","title":"6. Alternative CSS","text":"<p>Pentru cazuri specifice, pute\u021bi folosi clase CSS \u00een loc de FodSpacer:</p> <pre><code>&lt;!-- Echivalent cu FodSpacer --&gt;\n&lt;div class=\"flex-grow-1\"&gt;&lt;/div&gt;\n\n&lt;!-- Alternativ\u0103 cu margin auto --&gt;\n&lt;div class=\"ms-auto\"&gt;Element \u00eempins la dreapta&lt;/div&gt;\n\n&lt;!-- Alternativ\u0103 cu justify-content --&gt;\n&lt;div class=\"d-flex justify-content-between\"&gt;\n    &lt;div&gt;St\u00e2nga&lt;/div&gt;\n    &lt;div&gt;Dreapta&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodSpacer/#in-toolbar-complex","title":"\u00cen Toolbar complex","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" /&gt;\n\n    &lt;FodText Typo=\"Typo.h6\" Class=\"ms-3\"&gt;Dashboard&lt;/FodText&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodTextField Placeholder=\"Caut\u0103...\" \n                  Size=\"FodSize.Small\" \n                  Style=\"max-width: 300px;\" /&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodBadge Content=\"3\" Color=\"FodColor.Error\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\" /&gt;\n    &lt;/FodBadge&gt;\n\n    &lt;FodMenu&gt;\n        &lt;ActivatorContent&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.AccountCircle\" /&gt;\n        &lt;/ActivatorContent&gt;\n        &lt;ChildContent&gt;\n            &lt;FodMenuItem&gt;Profil&lt;/FodMenuItem&gt;\n            &lt;FodMenuItem&gt;Set\u0103ri&lt;/FodMenuItem&gt;\n            &lt;FodMenuItem&gt;Deconectare&lt;/FodMenuItem&gt;\n        &lt;/ChildContent&gt;\n    &lt;/FodMenu&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#in-footer","title":"\u00cen Footer","text":"<pre><code>&lt;footer class=\"d-flex align-items-center p-3 border-top\"&gt;\n    &lt;FodText Typo=\"Typo.caption\"&gt;\n        \u00a9 2024 Compania Mea\n    &lt;/FodText&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodLink Href=\"/terms\" Class=\"mx-2\"&gt;Termeni&lt;/FodLink&gt;\n    &lt;FodLink Href=\"/privacy\" Class=\"mx-2\"&gt;Confiden\u021bialitate&lt;/FodLink&gt;\n    &lt;FodLink Href=\"/contact\"&gt;Contact&lt;/FodLink&gt;\n&lt;/footer&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodSpacer/#centrare-cu-spacers","title":"Centrare cu spacers","text":"<pre><code>&lt;div class=\"d-flex\"&gt;\n    &lt;FodSpacer /&gt;\n    &lt;div class=\"content-centered\"&gt;\n        &lt;!-- Con\u021binut centrat --&gt;\n    &lt;/div&gt;\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#distributie-uniforma","title":"Distribu\u021bie uniform\u0103","text":"<pre><code>&lt;div class=\"d-flex\"&gt;\n    @foreach (var action in actions)\n    {\n        &lt;FodSpacer /&gt;\n        &lt;FodButton&gt;@action.Label&lt;/FodButton&gt;\n    }\n    &lt;FodSpacer /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#push-la-margini","title":"Push la margini","text":"<pre><code>&lt;div class=\"d-flex\"&gt;\n    &lt;div&gt;St\u00e2nga&lt;/div&gt;\n    &lt;FodSpacer /&gt;\n    &lt;div&gt;Dreapta&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#9-cazuri-de-utilizare","title":"9. Cazuri de utilizare","text":"<ol> <li>Toolbars - Separarea grupurilor de ac\u021biuni</li> <li>Card actions - Alinierea butoanelor</li> <li>Headers - Spa\u021bierea elementelor de navigare</li> <li>Forms - Alinierea controalelor</li> <li>Lists - Pozi\u021bionarea ac\u021biunilor</li> <li>Dialogs - Organizarea butoanelor</li> <li>Navigation - Distribu\u021bia link-urilor</li> </ol>"},{"location":"fod/componente/FodSpacer/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Zero overhead JavaScript</li> <li>Doar o clas\u0103 CSS aplicat\u0103</li> <li>Nu afecteaz\u0103 performan\u021ba</li> <li>Nu necesit\u0103 re-render</li> </ul>"},{"location":"fod/componente/FodSpacer/#11-compatibilitate","title":"11. Compatibilitate","text":"<ul> <li>Func\u021bioneaz\u0103 \u00een toate containerele flex</li> <li>Compatibil cu toate browser-ele moderne</li> <li>Nu necesit\u0103 polyfills</li> <li>Responsive by default</li> </ul>"},{"location":"fod/componente/FodSpacer/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Container flex - Folosi\u021bi doar \u00een containere cu display flex</li> <li>Direc\u021bie - Func\u021bioneaz\u0103 at\u00e2t orizontal c\u00e2t \u0219i vertical</li> <li>Combina\u021bii - Poate fi combinat cu alte utilitare flex</li> <li>Simplicitate - Nu complica\u021bi - este doar pentru spa\u021biere</li> <li>Alternative - Considera\u021bi CSS grid pentru layout-uri complexe</li> </ol>"},{"location":"fod/componente/FodSpacer/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodSpacer/#spacer-ul-nu-functioneaza","title":"Spacer-ul nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 p\u0103rintele are <code>display: flex</code></li> <li>Verifica\u021bi c\u0103 nu exist\u0103 <code>flex-grow</code> pe alte elemente</li> <li>Verifica\u021bi c\u0103 containerul are spa\u021biu disponibil</li> </ul>"},{"location":"fod/componente/FodSpacer/#spacer-ul-creste-prea-mult","title":"Spacer-ul cre\u0219te prea mult","text":"<ul> <li>Ad\u0103uga\u021bi <code>max-width</code> sau <code>max-height</code> pe container</li> <li>Folosi\u021bi <code>flex-basis</code> pentru control mai fin</li> </ul>"},{"location":"fod/componente/FodSpacer/#spacer-ul-nu-se-vede","title":"Spacer-ul nu se vede","text":"<ul> <li>Normal - este invizibil, doar creeaz\u0103 spa\u021biu</li> <li>Ad\u0103uga\u021bi background temporar pentru debugging</li> </ul>"},{"location":"fod/componente/FodSpacer/#14-limitari","title":"14. Limit\u0103ri","text":"<ul> <li>Func\u021bioneaz\u0103 doar \u00een containere flex</li> <li>Nu accept\u0103 parametri de configurare</li> <li>Nu poate fi stilizat direct</li> <li>Nu are dimensiune minim\u0103 implicit\u0103</li> </ul>"},{"location":"fod/componente/FodSpacer/#15-exemple-avansate","title":"15. Exemple avansate","text":""},{"location":"fod/componente/FodSpacer/#layout-complex-cu-multiple-spacers","title":"Layout complex cu multiple spacers","text":"<pre><code>&lt;div class=\"app-layout d-flex flex-column\" style=\"height: 100vh;\"&gt;\n    &lt;!-- Header --&gt;\n    &lt;header class=\"d-flex p-3 border-bottom\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Logo&lt;/FodText&gt;\n        &lt;FodSpacer /&gt;\n        &lt;nav class=\"d-flex gap-3\"&gt;\n            &lt;FodLink&gt;Home&lt;/FodLink&gt;\n            &lt;FodLink&gt;About&lt;/FodLink&gt;\n            &lt;FodLink&gt;Contact&lt;/FodLink&gt;\n        &lt;/nav&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton&gt;Login&lt;/FodButton&gt;\n    &lt;/header&gt;\n\n    &lt;!-- Main content --&gt;\n    &lt;main class=\"flex-grow-1 d-flex\"&gt;\n        &lt;!-- Sidebar --&gt;\n        &lt;aside class=\"border-end p-3\" style=\"width: 250px;\"&gt;\n            &lt;FodList&gt;\n                &lt;!-- Menu items --&gt;\n            &lt;/FodList&gt;\n        &lt;/aside&gt;\n\n        &lt;!-- Content area --&gt;\n        &lt;div class=\"flex-grow-1 p-4\"&gt;\n            @Body\n        &lt;/div&gt;\n    &lt;/main&gt;\n\n    &lt;!-- Footer --&gt;\n    &lt;footer class=\"d-flex p-3 border-top\"&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;\u00a9 2024&lt;/FodText&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodText Typo=\"Typo.caption\"&gt;v1.0.0&lt;/FodText&gt;\n    &lt;/footer&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodSpacer/#16-concluzie","title":"16. Concluzie","text":"<p><code>FodSpacer</code> este o component\u0103 esen\u021bial\u0103 pentru layout-uri flexibile \u00een aplica\u021bii Blazor. De\u0219i extrem de simpl\u0103 \u00een implementare, ofer\u0103 o solu\u021bie elegant\u0103 pentru una dintre cele mai comune nevoi de layout - distribuirea spa\u021biului \u00eentre elemente. U\u0219urin\u021ba de utilizare \u0219i performan\u021ba excelent\u0103 o fac indispensabil\u0103 \u00een toolbars, card actions \u0219i multe alte scenarii de UI.</p>"},{"location":"fod/componente/FodTFootRow/","title":"FodTFootRow","text":""},{"location":"fod/componente/FodTFootRow/#documentatie-pentru-componenta-fodtfootrow","title":"Documenta\u021bie pentru componenta FodTFootRow","text":""},{"location":"fod/componente/FodTFootRow/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTFootRow</code> reprezint\u0103 un r\u00e2nd de footer \u00eentr-un tabel <code>FodDataTable</code>. Similar cu <code>FodTHeadRow</code>, ofer\u0103 func\u021bionalit\u0103\u021bi automate pentru checkbox-uri, editare \u0219i expandare, dar pentru sec\u021biunea footer a tabelului.</p> <p>Caracteristici principale: - Structur\u0103 identic\u0103 cu FodTHeadRow pentru consisten\u021b\u0103 - Checkbox pentru selec\u021bie \u00een footer - Integrare cu modul editare - Suport pentru expandare - Evenimente click personalizabile - Ajustare automat\u0103 la configura\u021bia tabelului</p>"},{"location":"fod/componente/FodTFootRow/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTFootRow/#footer-simplu-cu-totale","title":"Footer simplu cu totale","text":"<pre><code>&lt;FodDataTable Items=\"sales\" T=\"SaleItem\" ShowFooter=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow&gt;\n            &lt;FodTd&gt;Total&lt;/FodTd&gt;\n            &lt;FodTd&gt;@sales.Sum(s =&gt; s.Quantity)&lt;/FodTd&gt;\n            &lt;FodTd&gt;@sales.Sum(s =&gt; s.Amount).ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#footer-cu-checkbox","title":"Footer cu checkbox","text":"<pre><code>&lt;FodDataTable Items=\"invoices\" T=\"Invoice\" \n              MultiSelection=\"true\" \n              ShowFooter=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow IsCheckable=\"true\"&gt;\n            &lt;FodTd colspan=\"2\"&gt;Total selectat:&lt;/FodTd&gt;\n            &lt;FodTd&gt;@selectedInvoices.Sum(i =&gt; i.Amount).ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>IsCheckable</code> <code>bool</code> Adaug\u0103 checkbox \u00een footer <code>false</code> <code>IgnoreCheckbox</code> <code>bool</code> Nu randeaz\u0103 coloan\u0103 pentru checkbox <code>false</code> <code>IgnoreEditable</code> <code>bool</code> Nu randeaz\u0103 coloan\u0103 pentru editare <code>false</code> <code>IsExpandable</code> <code>bool</code> Adaug\u0103 spa\u021biu pentru expandare <code>false</code> <code>OnRowClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Eveniment click pe r\u00e2nd - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul footer-ului -"},{"location":"fod/componente/FodTFootRow/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodTFootRow/#footer-cu-statistici-multiple","title":"Footer cu statistici multiple","text":"<pre><code>&lt;FodDataTable Items=\"transactions\" T=\"Transaction\" \n              ShowFooter=\"true\"\n              MultiSelection=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow&gt;\n            &lt;FodTd&gt;Statistici&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;div class=\"text-small\"&gt;\n                    &lt;div&gt;Total: @transactions.Count()&lt;/div&gt;\n                    &lt;div&gt;Medie: @transactions.Average(t =&gt; t.Amount).ToString(\"F2\")&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;div class=\"text-small\"&gt;\n                    &lt;div&gt;Min: @transactions.Min(t =&gt; t.Amount).ToString(\"C\")&lt;/div&gt;\n                    &lt;div&gt;Max: @transactions.Max(t =&gt; t.Amount).ToString(\"C\")&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;strong&gt;@transactions.Sum(t =&gt; t.Amount).ToString(\"C\")&lt;/strong&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#footer-conditionat","title":"Footer condi\u021bionat","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\" ShowFooter=\"@showFooter\"&gt;\n    &lt;FooterContent&gt;\n        @if (hasDiscountedItems)\n        {\n            &lt;FodTFootRow Class=\"discount-footer\"&gt;\n                &lt;FodTd colspan=\"2\"&gt;Produse la reducere:&lt;/FodTd&gt;\n                &lt;FodTd&gt;@discountedCount&lt;/FodTd&gt;\n                &lt;FodTd&gt;Economii totale:&lt;/FodTd&gt;\n                &lt;FodTd class=\"text-success\"&gt;\n                    @totalSavings.ToString(\"C\")\n                &lt;/FodTd&gt;\n            &lt;/FodTFootRow&gt;\n        }\n        &lt;FodTFootRow&gt;\n            &lt;FodTd colspan=\"3\"&gt;Total general:&lt;/FodTd&gt;\n            &lt;FodTd colspan=\"2\" class=\"text-end\"&gt;\n                &lt;strong&gt;@grandTotal.ToString(\"C\")&lt;/strong&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool showFooter = true;\n    private bool hasDiscountedItems =&gt; products.Any(p =&gt; p.HasDiscount);\n    private int discountedCount =&gt; products.Count(p =&gt; p.HasDiscount);\n    private decimal totalSavings =&gt; products\n        .Where(p =&gt; p.HasDiscount)\n        .Sum(p =&gt; p.OriginalPrice - p.DiscountedPrice);\n    private decimal grandTotal =&gt; products.Sum(p =&gt; p.FinalPrice);\n}\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#footer-cu-actiuni","title":"Footer cu ac\u021biuni","text":"<pre><code>&lt;FodDataTable Items=\"tasks\" T=\"TaskItem\" \n              ShowFooter=\"true\"\n              MultiSelection=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow OnRowClick=\"HandleFooterClick\"&gt;\n            &lt;FodTd&gt;\n                &lt;FodButton Size=\"FodSize.Small\" \n                           Variant=\"FodVariant.Text\"\n                           OnClick=\"ExportSelected\"&gt;\n                    Export selectate\n                &lt;/FodButton&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd colspan=\"2\"&gt;\n                @($\"{completedTasks}/{totalTasks} completate\")\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodLoadingLinear Value=\"@completionPercentage\" \n                                  FodColor=\"FodColor.Success\" /&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private int completedTasks =&gt; tasks.Count(t =&gt; t.IsCompleted);\n    private int totalTasks =&gt; tasks.Count();\n    private double completionPercentage =&gt; \n        totalTasks &gt; 0 ? (double)completedTasks / totalTasks * 100 : 0;\n}\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#5-footer-cu-multiple-randuri","title":"5. Footer cu Multiple R\u00e2nduri","text":"<pre><code>&lt;FodDataTable Items=\"financialData\" T=\"FinancialRecord\" ShowFooter=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;!-- Subtotaluri --&gt;\n        &lt;FodTFootRow Class=\"subtotal-row\"&gt;\n            &lt;FodTd colspan=\"2\"&gt;Subtotal Venituri:&lt;/FodTd&gt;\n            &lt;FodTd class=\"text-end\"&gt;@incomeSubtotal.ToString(\"C\")&lt;/FodTd&gt;\n            &lt;FodTd colspan=\"2\"&gt;Subtotal Cheltuieli:&lt;/FodTd&gt;\n            &lt;FodTd class=\"text-end\"&gt;@expenseSubtotal.ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n\n        &lt;!-- Totaluri --&gt;\n        &lt;FodTFootRow Class=\"total-row\"&gt;\n            &lt;FodTd colspan=\"4\"&gt;Profit Net:&lt;/FodTd&gt;\n            &lt;FodTd colspan=\"2\" class=\"text-end\"&gt;\n                &lt;strong class=\"@(netProfit &gt;= 0 ? \"text-success\" : \"text-danger\")\"&gt;\n                    @netProfit.ToString(\"C\")\n                &lt;/strong&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#6-stilizare","title":"6. Stilizare","text":"<pre><code>/* Footer distinctiv */\n.fod-table tfoot .fod-table-row {\n    background-color: var(--fod-palette-grey-100);\n    font-weight: 600;\n}\n\n/* Footer cu borduri */\n.fod-table tfoot .fod-table-row {\n    border-top: 2px solid var(--fod-palette-divider);\n}\n\n/* R\u00e2nduri multiple \u00een footer */\n.subtotal-row {\n    background-color: var(--fod-palette-grey-50);\n    font-style: italic;\n}\n\n.total-row {\n    background-color: var(--fod-palette-primary-light);\n    color: var(--fod-palette-primary-contrastText);\n}\n\n/* Footer sticky */\n.sticky-footer tfoot {\n    position: sticky;\n    bottom: 0;\n    background-color: white;\n    box-shadow: 0 -2px 4px rgba(0,0,0,0.1);\n}\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#7-integrare-cu-calcule-dinamice","title":"7. Integrare cu Calcule Dinamice","text":"<pre><code>&lt;FodDataTable Items=\"@orderItems\" T=\"OrderItem\" ShowFooter=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow&gt;\n            &lt;FodTd colspan=\"3\"&gt;\n                &lt;div class=\"d-flex justify-content-between\"&gt;\n                    &lt;span&gt;Subtotal:&lt;/span&gt;\n                    &lt;span&gt;@CalculateSubtotal().ToString(\"C\")&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;div class=\"d-flex justify-content-between\"&gt;\n                    &lt;span&gt;TVA (20%):&lt;/span&gt;\n                    &lt;span&gt;@CalculateTax().ToString(\"C\")&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;div class=\"d-flex justify-content-between mt-2 pt-2 border-top\"&gt;\n                    &lt;strong&gt;Total:&lt;/strong&gt;\n                    &lt;strong&gt;@CalculateTotal().ToString(\"C\")&lt;/strong&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private decimal CalculateSubtotal() =&gt; \n        orderItems.Sum(i =&gt; i.Quantity * i.UnitPrice);\n\n    private decimal CalculateTax() =&gt; \n        CalculateSubtotal() * 0.20m;\n\n    private decimal CalculateTotal() =&gt; \n        CalculateSubtotal() + CalculateTax();\n}\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#8-footer-responsiv","title":"8. Footer Responsiv","text":"<pre><code>&lt;FodDataTable Items=\"reports\" T=\"Report\" ShowFooter=\"true\"&gt;\n    &lt;FooterContent&gt;\n        &lt;FodTFootRow Class=\"responsive-footer\"&gt;\n            &lt;FodTd Class=\"d-none d-md-table-cell\"&gt;\n                Total rapoarte: @reports.Count()\n            &lt;/FodTd&gt;\n            &lt;FodTd Class=\"d-none d-lg-table-cell\"&gt;\n                Pagini totale: @reports.Sum(r =&gt; r.PageCount)\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodChip Size=\"FodSize.Small\" Color=\"FodColor.Primary\"&gt;\n                    @reports.Count(r =&gt; r.Status == \"Completed\") finalizate\n                &lt;/FodChip&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTFootRow&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTFootRow/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Consisten\u021b\u0103 cu header - P\u0103stra\u021bi acela\u0219i num\u0103r de coloane</li> <li>Calcule eficiente - Cache-ui\u021bi rezultatele pentru performan\u021b\u0103</li> <li>Responsive design - Adapta\u021bi footer-ul pentru mobile</li> <li>Vizibilitate clar\u0103 - Folosi\u021bi stilizare distinctiv\u0103</li> <li>Informa\u021bii relevante - Afi\u0219a\u021bi doar date utile \u00een footer</li> </ol>"},{"location":"fod/componente/FodTFootRow/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Calculele se execut\u0103 doar la schimbarea datelor</li> <li>Folosi\u021bi <code>@key</code> pentru optimizare \u00een footer-e complexe</li> <li>Evita\u021bi calcule grele \u00een randare</li> </ul>"},{"location":"fod/componente/FodTFootRow/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Structur\u0103 semantic\u0103 corect\u0103 cu <code>&lt;tfoot&gt;</code></li> <li>Folosi\u021bi <code>colspan</code> pentru layout clar</li> <li>ARIA labels pentru interac\u021biuni</li> </ul>"},{"location":"fod/componente/FodTFootRow/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodTFootRow/#footer-nu-apare","title":"Footer nu apare","text":"<ul> <li>Verifica\u021bi <code>ShowFooter=\"true\"</code> pe DataTable</li> <li>Asigura\u021bi-v\u0103 c\u0103 ave\u021bi FooterContent definit</li> <li>Verifica\u021bi c\u0103 datele sunt \u00eenc\u0103rcate</li> </ul>"},{"location":"fod/componente/FodTFootRow/#aliniere-incorecta","title":"Aliniere incorect\u0103","text":"<ul> <li>Num\u0103ra\u021bi coloanele din header vs footer</li> <li>Include\u021bi coloane pentru checkbox/editare</li> <li>Folosi\u021bi colspan pentru ajustare</li> </ul>"},{"location":"fod/componente/FodTFootRow/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodTFootRow</code> completeaz\u0103 func\u021bionalitatea tabelelor FOD oferind o modalitate consistent\u0103 de afi\u0219are a informa\u021biilor sumare \u0219i ac\u021biunilor \u00een footer. Cu aceea\u0219i flexibilitate ca FodTHeadRow, permite crearea de footer-e informative \u0219i interactive.</p>"},{"location":"fod/componente/FodTHeadRow/","title":"FodTHeadRow","text":""},{"location":"fod/componente/FodTHeadRow/#documentatie-pentru-componenta-fodtheadrow","title":"Documenta\u021bie pentru componenta FodTHeadRow","text":""},{"location":"fod/componente/FodTHeadRow/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTHeadRow</code> reprezint\u0103 un r\u00e2nd de header \u00eentr-un tabel <code>FodDataTable</code>. Componenta gestioneaz\u0103 automat func\u021bionalit\u0103\u021bi precum checkbox pentru selec\u021bie total\u0103, spa\u021bii pentru butoane de editare \u0219i suport pentru r\u00e2nduri expandabile.</p> <p>Caracteristici principale: - Checkbox pentru selectare/deselectare total\u0103 - Integrare automat\u0103 cu modul multi-selec\u021bie - Suport pentru tabele editabile - Spa\u021biere automat\u0103 pentru coloane expandabile - Evenimente click personalizabile - Sincronizare cu starea tabelului</p>"},{"location":"fod/componente/FodTHeadRow/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTHeadRow/#header-simplu","title":"Header simplu","text":"<pre><code>&lt;FodDataTable Items=\"items\" T=\"Item\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Descriere&lt;/FodTh&gt;\n            &lt;FodTh&gt;Pre\u021b&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#header-cu-checkbox-pentru-selectie-totala","title":"Header cu checkbox pentru selec\u021bie total\u0103","text":"<pre><code>&lt;FodDataTable Items=\"users\" T=\"User\" MultiSelection=\"true\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IsCheckable=\"true\"&gt;\n            &lt;FodTh&gt;Utilizator&lt;/FodTh&gt;\n            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n            &lt;FodTh&gt;Rol&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>IsCheckable</code> <code>bool</code> Adaug\u0103 checkbox pentru selectare total\u0103 <code>false</code> <code>IgnoreCheckbox</code> <code>bool</code> Nu randeaz\u0103 coloan\u0103 pentru checkbox <code>false</code> <code>IgnoreEditable</code> <code>bool</code> Nu randeaz\u0103 coloan\u0103 pentru editare <code>false</code> <code>IsExpandable</code> <code>bool</code> Adaug\u0103 spa\u021biu pentru expandare <code>false</code> <code>OnRowClick</code> <code>EventCallback&lt;MouseEventArgs&gt;</code> Eveniment click pe r\u00e2nd - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul header-ului (celule FodTh) -"},{"location":"fod/componente/FodTHeadRow/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodTHeadRow/#header-complex-cu-sortare-si-filtrare","title":"Header complex cu sortare \u0219i filtrare","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\" \n              MultiSelection=\"true\"\n              EditMode=\"DataEditMode.Cell\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IsCheckable=\"true\"&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Product\" SortBy=\"@(p =&gt; p.Name)\"&gt;\n                    Produs\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Product\" SortBy=\"@(p =&gt; p.Category)\"&gt;\n                    Categorie\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Product\" SortBy=\"@(p =&gt; p.Price)\"&gt;\n                    Pre\u021b\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#header-cu-selectie-conditionata","title":"Header cu selec\u021bie condi\u021bionat\u0103","text":"<pre><code>&lt;FodDataTable @ref=\"dataTable\" Items=\"orders\" T=\"Order\" MultiSelection=\"true\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IsCheckable=\"@canSelectAll\" \n                     OnRowClick=\"HandleHeaderClick\"&gt;\n            &lt;FodTh&gt;Nr. Comand\u0103&lt;/FodTh&gt;\n            &lt;FodTh&gt;Client&lt;/FodTh&gt;\n            &lt;FodTh&gt;Status&lt;/FodTh&gt;\n            &lt;FodTh&gt;Total&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private FodDataTable&lt;Order&gt; dataTable;\n    private bool canSelectAll = true;\n\n    private void HandleHeaderClick(MouseEventArgs args)\n    {\n        // Logic\u0103 personalizat\u0103 pentru click pe header\n        Console.WriteLine(\"Header clicked\");\n    }\n\n    protected override void OnInitialized()\n    {\n        // Dezactiveaz\u0103 selec\u021bia total\u0103 pentru anumi\u021bi utilizatori\n        canSelectAll = CurrentUser.HasPermission(\"BulkSelect\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#header-pentru-tabel-expandabil","title":"Header pentru tabel expandabil","text":"<pre><code>&lt;FodDataTable Items=\"categories\" T=\"Category\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IsExpandable=\"true\"&gt;\n            &lt;FodTh&gt;Categorie&lt;/FodTh&gt;\n            &lt;FodTh&gt;Produse&lt;/FodTh&gt;\n            &lt;FodTh&gt;Valoare total\u0103&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsExpandable=\"true\"&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.ProductCount&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.TotalValue.ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n    &lt;ChildRowContent&gt;\n        &lt;!-- Detalii expandate --&gt;\n    &lt;/ChildRowContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#5-integrare-cu-moduri-de-editare","title":"5. Integrare cu Moduri de Editare","text":""},{"location":"fod/componente/FodTHeadRow/#header-pentru-editare-inline","title":"Header pentru editare inline","text":"<pre><code>&lt;FodDataTable Items=\"inventory\" T=\"InventoryItem\" \n              EditMode=\"DataEditMode.Cell\"\n              EditTrigger=\"DataEditTrigger.OnRowClick\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IgnoreEditable=\"false\"&gt;\n            &lt;FodTh&gt;Cod Produs&lt;/FodTh&gt;\n            &lt;FodTh&gt;Denumire&lt;/FodTh&gt;\n            &lt;FodTh&gt;Cantitate&lt;/FodTh&gt;\n            &lt;FodTh&gt;Loca\u021bie&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i Personalizare","text":"<pre><code>/* Header personalizat */\n.custom-header .fod-table-row {\n    background-color: var(--fod-palette-primary-dark);\n    color: white;\n}\n\n/* Checkbox \u00een header */\n.fod-table-row .fod-table-cell-checkbox {\n    padding: 0;\n    margin: 0;\n}\n\n/* Header sticky */\n.sticky-table thead .fod-table-row {\n    position: sticky;\n    top: 0;\n    z-index: 10;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n/* Header cu hover */\n.interactive-header .fod-table-row:hover {\n    background-color: rgba(0,0,0,0.04);\n    cursor: pointer;\n}\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#7-functionalitati-automate","title":"7. Func\u021bionalit\u0103\u021bi Automate","text":""},{"location":"fod/componente/FodTHeadRow/#gestionare-checkbox","title":"Gestionare checkbox","text":"<p>Componenta gestioneaz\u0103 automat: - Afi\u0219area checkbox-ului c\u00e2nd <code>MultiSelection=\"true\"</code> pe tabel - Starea checkbox-ului (checked/unchecked/indeterminate) - Propagarea selec\u021biei c\u0103tre toate r\u00e2ndurile</p>"},{"location":"fod/componente/FodTHeadRow/#spatiere-pentru-editare","title":"Spa\u021biere pentru editare","text":"<p>C\u00e2nd tabelul are <code>EditMode</code> activ: - Adaug\u0103 automat coloane goale pentru butoanele de editare - Respect\u0103 pozi\u021bia butoanelor (Start/End) - Se ajusteaz\u0103 la configura\u021bia tabelului</p>"},{"location":"fod/componente/FodTHeadRow/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Un singur FodTHeadRow - Folosi\u021bi doar unul per HeaderContent</li> <li>IsCheckable cu MultiSelection - Activa\u021bi doar c\u00e2nd tabelul permite selec\u021bie multipl\u0103</li> <li>IgnoreEditable pentru performan\u021b\u0103 - C\u00e2nd nu ave\u021bi nevoie de editare</li> <li>Evenimente la nivel de celul\u0103 - Prefera\u021bi evenimente pe FodTh individual</li> <li>Consisten\u021b\u0103 vizual\u0103 - P\u0103stra\u021bi acela\u0219i stil ca restul tabelului</li> </ol>"},{"location":"fod/componente/FodTHeadRow/#9-scenarii-complexe","title":"9. Scenarii Complexe","text":""},{"location":"fod/componente/FodTHeadRow/#header-cu-actiuni-bulk","title":"Header cu ac\u021biuni bulk","text":"<pre><code>&lt;FodDataTable @ref=\"table\" Items=\"documents\" T=\"Document\" MultiSelection=\"true\"&gt;\n    &lt;ToolBarContent&gt;\n        @if (table?.SelectedItems?.Count() &gt; 0)\n        {\n            &lt;FodButton OnClick=\"BulkDelete\" Color=\"FodColor.Error\"&gt;\n                \u0218terge @table.SelectedItems.Count() documente\n            &lt;/FodButton&gt;\n        }\n    &lt;/ToolBarContent&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow IsCheckable=\"true\"&gt;\n            &lt;FodTh&gt;Nume Document&lt;/FodTh&gt;\n            &lt;FodTh&gt;Tip&lt;/FodTh&gt;\n            &lt;FodTh&gt;Dimensiune&lt;/FodTh&gt;\n            &lt;FodTh&gt;Data&lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTHeadRow/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Structur\u0103 semantic\u0103 corect\u0103 cu <code>&lt;tr&gt;</code> \u00een <code>&lt;thead&gt;</code></li> <li>Suport pentru screen readers</li> <li>Navigare cu tastatur\u0103</li> <li>ARIA labels pentru checkbox</li> </ul>"},{"location":"fod/componente/FodTHeadRow/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodTHeadRow/#checkbox-nu-apare","title":"Checkbox nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 <code>MultiSelection=\"true\"</code> pe DataTable</li> <li>Seta\u021bi <code>IsCheckable=\"true\"</code> pe FodTHeadRow</li> <li>Verifica\u021bi c\u0103 nu ave\u021bi <code>IgnoreCheckbox=\"true\"</code></li> </ul>"},{"location":"fod/componente/FodTHeadRow/#coloane-extra-nedorite","title":"Coloane extra nedorite","text":"<ul> <li>Seta\u021bi <code>IgnoreEditable=\"true\"</code> dac\u0103 nu edita\u021bi</li> <li>Verifica\u021bi configura\u021bia EditMode pe tabel</li> </ul>"},{"location":"fod/componente/FodTHeadRow/#header-nu-se-aliniaza-cu-randuri","title":"Header nu se aliniaz\u0103 cu r\u00e2nduri","text":"<ul> <li>Verifica\u021bi num\u0103rul de FodTh vs FodTd</li> <li>Include\u021bi coloane pentru checkbox/editare</li> </ul>"},{"location":"fod/componente/FodTHeadRow/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodTHeadRow</code> simplific\u0103 crearea header-elor de tabel prin gestionarea automat\u0103 a func\u021bionalit\u0103\u021bilor comune. Cu suport integrat pentru selec\u021bie multipl\u0103 \u0219i editare, componenta asigur\u0103 consisten\u021b\u0103 \u0219i reduce codul boilerplate \u00een aplica\u021biile FOD.</p>"},{"location":"fod/componente/FodTabControl/","title":"Tab Control","text":""},{"location":"fod/componente/FodTabControl/#documentatie-pentru-componentele-fodtabcontrol-si-fodtabpage","title":"Documenta\u021bie pentru componentele FODTabControl \u0219i FODTabPage","text":""},{"location":"fod/componente/FodTabControl/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FODTabControl</code> \u0219i <code>FODTabPage</code> sunt componente pentru crearea de interfe\u021be cu tab-uri \u00een aplica\u021bii Blazor. Permit organizarea con\u021binutului \u00een sec\u021biuni separate accesibile prin butoane de navigare, oferind o experien\u021b\u0103 de utilizare familiar\u0103 \u0219i intuitiv\u0103.</p> <p>Caracteristici principale: - Container pentru multiple tab-uri - Navigare simpl\u0103 \u00eentre sec\u021biuni - Activare automat\u0103 a primului tab - Stilizare bazat\u0103 pe Bootstrap - Gestionare automat\u0103 a st\u0103rii active - Suport pentru con\u021binut dinamic - Design responsive - Integrare u\u0219oar\u0103</p>"},{"location":"fod/componente/FodTabControl/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodTabControl/#tab-uri-simple","title":"Tab-uri simple","text":"<pre><code>&lt;FODTabControl&gt;\n    &lt;FODTabPage Text=\"Informa\u021bii generale\"&gt;\n        &lt;FodText Typo=\"Typo.body1\"&gt;\n            Aceasta este sec\u021biunea cu informa\u021bii generale despre produsul nostru.\n            Tab-urile permit organizarea con\u021binutului \u00een mod logic \u0219i accesibil.\n        &lt;/FodText&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Caracteristici\"&gt;\n        &lt;FodList&gt;\n            &lt;FodListItem&gt;Performan\u021b\u0103 \u00eenalt\u0103&lt;/FodListItem&gt;\n            &lt;FodListItem&gt;Design modern&lt;/FodListItem&gt;\n            &lt;FodListItem&gt;U\u0219or de utilizat&lt;/FodListItem&gt;\n            &lt;FodListItem&gt;Suport tehnic inclus&lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Pre\u021buri\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Plan Basic: 29\u20ac/lun\u0103&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Plan Pro: 59\u20ac/lun\u0103&lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Plan Enterprise: Contacta\u021bi-ne&lt;/FodText&gt;\n    &lt;/FODTabPage&gt;\n&lt;/FODTabControl&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-cu-formulare","title":"Tab-uri cu formulare","text":"<pre><code>&lt;FODTabControl&gt;\n    &lt;FODTabPage Text=\"Date personale\"&gt;\n        &lt;EditForm Model=\"@personalData\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;FodTextField @bind-Value=\"personalData.FirstName\" \n                          Label=\"Prenume\" \n                          Required=\"true\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"personalData.LastName\" \n                          Label=\"Nume\" \n                          Required=\"true\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n\n            &lt;FodDatePicker @bind-Value=\"personalData.BirthDate\" \n                           Label=\"Data na\u0219terii\"\n                           FullWidth=\"true\"\n                           Class=\"mb-3\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Contact\"&gt;\n        &lt;EditForm Model=\"@contactData\"&gt;\n            &lt;FodTextField @bind-Value=\"contactData.Email\" \n                          Label=\"Email\" \n                          Type=\"email\"\n                          Required=\"true\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"contactData.Phone\" \n                          Label=\"Telefon\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"contactData.Address\" \n                          Label=\"Adres\u0103\"\n                          Multiline=\"true\"\n                          Rows=\"3\"\n                          FullWidth=\"true\"\n                          Class=\"mb-3\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Preferin\u021be\"&gt;\n        &lt;FodCheckbox @bind-Checked=\"preferences.Newsletter\" Class=\"mb-2\"&gt;\n            Doresc s\u0103 primesc newsletter\n        &lt;/FodCheckbox&gt;\n\n        &lt;FodCheckbox @bind-Checked=\"preferences.SMS\" Class=\"mb-2\"&gt;\n            Accept notific\u0103ri SMS\n        &lt;/FodCheckbox&gt;\n\n        &lt;FodCheckbox @bind-Checked=\"preferences.Marketing\" Class=\"mb-2\"&gt;\n            Accept comunic\u0103ri de marketing\n        &lt;/FodCheckbox&gt;\n    &lt;/FODTabPage&gt;\n&lt;/FODTabControl&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-cu-cod-si-exemple","title":"Tab-uri cu cod \u0219i exemple","text":"<pre><code>&lt;FODTabControl&gt;\n    &lt;FODTabPage Text=\"Exemplu\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;Card de exemplu&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.body2\"&gt;\n                    Acesta este un exemplu de card cu con\u021binut.\n                &lt;/FodText&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" Class=\"mt-2\"&gt;\n                    Ac\u021biune\n                &lt;/FodButton&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Cod Razor\"&gt;\n        &lt;pre&gt;&lt;code class=\"language-razor\"&gt;@(@\"&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"\"Typo.h6\"\"&gt;Card de exemplu&lt;/FodText&gt;\n        &lt;FodText Typo=\"\"Typo.body2\"\"&gt;\n            Acesta este un exemplu de card cu con\u021binut.\n        &lt;/FodText&gt;\n        &lt;FodButton Color=\"\"FodColor.Primary\"\" Class=\"\"mt-2\"\"&gt;\n            Ac\u021biune\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\")&lt;/code&gt;&lt;/pre&gt;\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Cod C#\"&gt;\n        &lt;pre&gt;&lt;code class=\"language-csharp\"&gt;@(@\"public class CardExample : ComponentBase\n{\n    private string title = \"\"Card de exemplu\"\";\n    private string content = \"\"Acesta este un exemplu de card cu con\u021binut.\"\";\n\n    private void HandleAction()\n    {\n        // Logic\u0103 pentru ac\u021biune\n    }\n}\")&lt;/code&gt;&lt;/pre&gt;\n    &lt;/FODTabPage&gt;\n&lt;/FODTabControl&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-dinamice-din-lista","title":"Tab-uri dinamice din list\u0103","text":"<pre><code>&lt;FODTabControl&gt;\n    @foreach (var category in productCategories)\n    {\n        &lt;FODTabPage Text=\"@category.Name\"&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n                @foreach (var product in category.Products)\n                {\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"4\"&gt;\n                        &lt;FodCard&gt;\n                            &lt;FodCardMedia Image=\"@product.ImageUrl\" \n                                          Title=\"@product.Name\" /&gt;\n                            &lt;FodCardContent&gt;\n                                &lt;FodText Typo=\"Typo.h6\"&gt;@product.Name&lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                                    @product.Description\n                                &lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n                                    @product.Price.ToString(\"C\")\n                                &lt;/FodText&gt;\n                            &lt;/FodCardContent&gt;\n                            &lt;FodCardActions&gt;\n                                &lt;FodButton Size=\"FodSize.Small\"&gt;Detalii&lt;/FodButton&gt;\n                                &lt;FodButton Size=\"FodSize.Small\" Color=\"FodColor.Primary\"&gt;\n                                    Adaug\u0103 \u00een co\u0219\n                                &lt;/FodButton&gt;\n                            &lt;/FodCardActions&gt;\n                        &lt;/FodCard&gt;\n                    &lt;/FodGrid&gt;\n                }\n            &lt;/FodGrid&gt;\n        &lt;/FODTabPage&gt;\n    }\n&lt;/FODTabControl&gt;\n\n@code {\n    private List&lt;ProductCategory&gt; productCategories = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        productCategories = await ProductService.GetCategoriesWithProductsAsync();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-cu-continut-asincron","title":"Tab-uri cu con\u021binut asincron","text":"<pre><code>&lt;FODTabControl&gt;\n    &lt;FODTabPage Text=\"Utilizatori\"&gt;\n        @if (isLoadingUsers)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n        }\n        else\n        {\n            &lt;FodDataTable Items=\"@users\"&gt;\n                &lt;!-- Configurare tabel --&gt;\n            &lt;/FodDataTable&gt;\n        }\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Roluri\"&gt;\n        @if (isLoadingRoles)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n        }\n        else\n        {\n            &lt;FodList&gt;\n                @foreach (var role in roles)\n                {\n                    &lt;FodListItem&gt;\n                        &lt;FodText&gt;@role.Name&lt;/FodText&gt;\n                        &lt;FodText Typo=\"Typo.caption\"&gt;\n                            @role.Description\n                        &lt;/FodText&gt;\n                    &lt;/FodListItem&gt;\n                }\n            &lt;/FodList&gt;\n        }\n    &lt;/FODTabPage&gt;\n\n    &lt;FODTabPage Text=\"Permisiuni\"&gt;\n        @if (isLoadingPermissions)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n        }\n        else\n        {\n            &lt;FodChipSet&gt;\n                @foreach (var permission in permissions)\n                {\n                    &lt;FodChip&gt;@permission.Name&lt;/FodChip&gt;\n                }\n            &lt;/FodChipSet&gt;\n        }\n    &lt;/FODTabPage&gt;\n&lt;/FODTabControl&gt;\n\n@code {\n    private bool isLoadingUsers = true;\n    private bool isLoadingRoles = true;\n    private bool isLoadingPermissions = true;\n\n    private List&lt;User&gt; users = new();\n    private List&lt;Role&gt; roles = new();\n    private List&lt;Permission&gt; permissions = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cenc\u0103rcare paralel\u0103\n        var usersTask = LoadUsers();\n        var rolesTask = LoadRoles();\n        var permissionsTask = LoadPermissions();\n\n        await Task.WhenAll(usersTask, rolesTask, permissionsTask);\n    }\n\n    private async Task LoadUsers()\n    {\n        users = await UserService.GetUsersAsync();\n        isLoadingUsers = false;\n        StateHasChanged();\n    }\n\n    private async Task LoadRoles()\n    {\n        roles = await RoleService.GetRolesAsync();\n        isLoadingRoles = false;\n        StateHasChanged();\n    }\n\n    private async Task LoadPermissions()\n    {\n        permissions = await PermissionService.GetPermissionsAsync();\n        isLoadingPermissions = false;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-pentru-setari","title":"Tab-uri pentru set\u0103ri","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Set\u0103ri aplica\u021bie\n        &lt;/FodText&gt;\n\n        &lt;FODTabControl&gt;\n            &lt;FODTabPage Text=\"General\"&gt;\n                &lt;FodTextField Value=\"@settings.AppName\" \n                              Label=\"Nume aplica\u021bie\"\n                              FullWidth=\"true\"\n                              Class=\"mb-3\" /&gt;\n\n                &lt;FodTextField Value=\"@settings.AppDescription\" \n                              Label=\"Descriere\"\n                              Multiline=\"true\"\n                              Rows=\"3\"\n                              FullWidth=\"true\"\n                              Class=\"mb-3\" /&gt;\n\n                &lt;FodSelect @bind-Value=\"settings.Theme\" \n                           Label=\"Tem\u0103\"\n                           FullWidth=\"true\"&gt;\n                    &lt;FodSelectItem Value=\"light\"&gt;Light&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"dark\"&gt;Dark&lt;/FodSelectItem&gt;\n                    &lt;FodSelectItem Value=\"auto\"&gt;Auto&lt;/FodSelectItem&gt;\n                &lt;/FodSelect&gt;\n            &lt;/FODTabPage&gt;\n\n            &lt;FODTabPage Text=\"Securitate\"&gt;\n                &lt;FodCheckbox @bind-Checked=\"settings.RequireTwoFactor\" Class=\"mb-3\"&gt;\n                    Necesit\u0103 autentificare \u00een doi pa\u0219i\n                &lt;/FodCheckbox&gt;\n\n                &lt;FodCheckbox @bind-Checked=\"settings.SessionTimeout\" Class=\"mb-3\"&gt;\n                    Deconectare automat\u0103 dup\u0103 inactivitate\n                &lt;/FodCheckbox&gt;\n\n                @if (settings.SessionTimeout)\n                {\n                    &lt;FodSelect @bind-Value=\"settings.TimeoutMinutes\" \n                               Label=\"Timp p\u00e2n\u0103 la deconectare\"\n                               FullWidth=\"true\"&gt;\n                        &lt;FodSelectItem Value=\"15\"&gt;15 minute&lt;/FodSelectItem&gt;\n                        &lt;FodSelectItem Value=\"30\"&gt;30 minute&lt;/FodSelectItem&gt;\n                        &lt;FodSelectItem Value=\"60\"&gt;1 or\u0103&lt;/FodSelectItem&gt;\n                        &lt;FodSelectItem Value=\"120\"&gt;2 ore&lt;/FodSelectItem&gt;\n                    &lt;/FodSelect&gt;\n                }\n            &lt;/FODTabPage&gt;\n\n            &lt;FODTabPage Text=\"Notific\u0103ri\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                    Notific\u0103ri Email\n                &lt;/FodText&gt;\n\n                &lt;FodCheckbox @bind-Checked=\"settings.EmailOnLogin\" Class=\"mb-2\"&gt;\n                    Alert\u0103 la autentificare nou\u0103\n                &lt;/FodCheckbox&gt;\n\n                &lt;FodCheckbox @bind-Checked=\"settings.EmailOnChange\" Class=\"mb-2\"&gt;\n                    Alert\u0103 la schimbare parol\u0103\n                &lt;/FodCheckbox&gt;\n\n                &lt;FodCheckbox @bind-Checked=\"settings.EmailWeeklyReport\" Class=\"mb-3\"&gt;\n                    Raport s\u0103pt\u0103m\u00e2nal\n                &lt;/FodCheckbox&gt;\n\n                &lt;FodDivider Class=\"my-3\" /&gt;\n\n                &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                    Notific\u0103ri Push\n                &lt;/FodText&gt;\n\n                &lt;FodCheckbox @bind-Checked=\"settings.PushNotifications\" Class=\"mb-2\"&gt;\n                    Activeaz\u0103 notific\u0103ri push\n                &lt;/FodCheckbox&gt;\n            &lt;/FODTabPage&gt;\n        &lt;/FODTabControl&gt;\n\n        &lt;div class=\"mt-4 d-flex justify-content-end gap-2\"&gt;\n            &lt;FodButton Variant=\"FodVariant.Text\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"SaveSettings\"&gt;\n                Salveaz\u0103 set\u0103ri\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-cu-validare-pe-fiecare-sectiune","title":"Tab-uri cu validare pe fiecare sec\u021biune","text":"<pre><code>&lt;EditForm EditContext=\"@editContext\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;FODTabControl&gt;\n        &lt;FODTabPage Text=\"@($\"Informa\u021bii de baz\u0103 {GetValidationIcon(basicInfoValid)}\")\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.CompanyName\" \n                          Label=\"Nume companie\"\n                          Required=\"true\"\n                          @bind-Value:after=\"ValidateBasicInfo\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; model.CompanyName)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.RegistrationNumber\" \n                          Label=\"CUI\"\n                          Required=\"true\"\n                          @bind-Value:after=\"ValidateBasicInfo\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; model.RegistrationNumber)\" /&gt;\n        &lt;/FODTabPage&gt;\n\n        &lt;FODTabPage Text=\"@($\"Contact {GetValidationIcon(contactInfoValid)}\")\"&gt;\n            &lt;FodTextField @bind-Value=\"model.Email\" \n                          Label=\"Email\"\n                          Type=\"email\"\n                          Required=\"true\"\n                          @bind-Value:after=\"ValidateContactInfo\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; model.Email)\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.Phone\" \n                          Label=\"Telefon\"\n                          Required=\"true\"\n                          @bind-Value:after=\"ValidateContactInfo\" /&gt;\n            &lt;ValidationMessage For=\"@(() =&gt; model.Phone)\" /&gt;\n        &lt;/FODTabPage&gt;\n\n        &lt;FODTabPage Text=\"@($\"Finalizare {GetValidationIcon(allValid)}\")\"&gt;\n            @if (allValid)\n            {\n                &lt;FodAlert Severity=\"Severity.Success\"&gt;\n                    Toate informa\u021biile sunt complete \u0219i valide.\n                &lt;/FodAlert&gt;\n            }\n            else\n            {\n                &lt;FodAlert Severity=\"Severity.Warning\"&gt;\n                    V\u0103 rug\u0103m completa\u021bi toate c\u00e2mpurile obligatorii din tab-urile anterioare.\n                &lt;/FodAlert&gt;\n            }\n\n            &lt;FodButton Type=\"ButtonType.Submit\" \n                       Color=\"FodColor.Primary\"\n                       Disabled=\"@(!allValid)\"\n                       Class=\"mt-3\"&gt;\n                Trimite formularul\n            &lt;/FodButton&gt;\n        &lt;/FODTabPage&gt;\n    &lt;/FODTabControl&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private EditContext editContext;\n    private CompanyRegistrationModel model = new();\n    private bool basicInfoValid = false;\n    private bool contactInfoValid = false;\n    private bool allValid =&gt; basicInfoValid &amp;&amp; contactInfoValid;\n\n    protected override void OnInitialized()\n    {\n        editContext = new EditContext(model);\n    }\n\n    private void ValidateBasicInfo()\n    {\n        var fields = new[] \n        { \n            nameof(model.CompanyName), \n            nameof(model.RegistrationNumber) \n        };\n        basicInfoValid = !fields.Any(f =&gt; \n            editContext.GetValidationMessages(editContext.Field(f)).Any());\n    }\n\n    private void ValidateContactInfo()\n    {\n        var fields = new[] \n        { \n            nameof(model.Email), \n            nameof(model.Phone) \n        };\n        contactInfoValid = !fields.Any(f =&gt; \n            editContext.GetValidationMessages(editContext.Field(f)).Any());\n    }\n\n    private string GetValidationIcon(bool isValid)\n    {\n        return isValid ? \"\u2713\" : \"\u2022\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodTabControl/#fodtabcontrol","title":"FODTabControl","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul (tab pages) - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodTabControl/#fodtabpage","title":"FODTabPage","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul afi\u0219at pe butonul tab-ului - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul tab-ului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code>"},{"location":"fod/componente/FodTabControl/#4-metode-si-proprietati-interne","title":"4. Metode \u0219i propriet\u0103\u021bi interne","text":"<p>Componentele folosesc urm\u0103toarele mecanisme interne: - <code>AddPage(FODTabPage page)</code> - \u00cenregistreaz\u0103 un tab nou - <code>ActivePage</code> - Tracking-ul tab-ului activ - <code>pages</code> - Lista intern\u0103 de tab-uri</p>"},{"location":"fod/componente/FodTabControl/#5-evenimente","title":"5. Evenimente","text":"<p>Componentele nu expun evenimente publice \u00een implementarea curent\u0103, dar pot fi extinse pentru: - <code>OnTabChanged</code> - <code>OnBeforeTabChange</code> - <code>OnAfterTabChange</code></p>"},{"location":"fod/componente/FodTabControl/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Tab-uri cu stil custom */\n.custom-tabs .btn-group {\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.custom-tabs .btn {\n    border: none;\n    padding: 0.75rem 1.5rem;\n    font-weight: 500;\n    transition: all 0.3s ease;\n}\n\n.custom-tabs .btn-primary {\n    background-color: var(--fod-palette-primary-main);\n    color: white;\n}\n\n.custom-tabs .btn-secondary {\n    background-color: transparent;\n    color: var(--fod-palette-text-primary);\n}\n\n.custom-tabs .btn-secondary:hover {\n    background-color: var(--fod-palette-action-hover);\n}\n\n/* Tab-uri verticale */\n.vertical-tabs .btn-group {\n    flex-direction: column;\n    width: 200px;\n}\n\n.vertical-tabs .btn {\n    text-align: left;\n    border-radius: 0;\n}\n\n/* Tab-uri cu iconi\u021be */\n.icon-tabs .btn {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.icon-tabs .material-icons {\n    font-size: 1.2rem;\n}\n\n/* Tab-uri cu badge-uri */\n.badge-tabs .btn {\n    position: relative;\n}\n\n.badge-tabs .badge {\n    position: absolute;\n    top: 0.25rem;\n    right: 0.25rem;\n    background-color: var(--fod-palette-error-main);\n    color: white;\n    border-radius: 10px;\n    padding: 0.2rem 0.5rem;\n    font-size: 0.75rem;\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodTabControl/#in-modal","title":"\u00cen Modal","text":"<pre><code>&lt;FodModal Show=\"@showModal\" Size=\"Size.Large\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Detalii comand\u0103&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FODTabControl&gt;\n                &lt;FODTabPage Text=\"Produse\"&gt;\n                    &lt;!-- Lista produse --&gt;\n                &lt;/FODTabPage&gt;\n                &lt;FODTabPage Text=\"Livrare\"&gt;\n                    &lt;!-- Informa\u021bii livrare --&gt;\n                &lt;/FODTabPage&gt;\n                &lt;FODTabPage Text=\"Plat\u0103\"&gt;\n                    &lt;!-- Detalii plat\u0103 --&gt;\n                &lt;/FODTabPage&gt;\n            &lt;/FODTabControl&gt;\n        &lt;/FodModalBody&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FODTabControl&gt;\n            &lt;FODTabPage Text=\"Prezentare\"&gt;\n                &lt;!-- Con\u021binut prezentare --&gt;\n            &lt;/FODTabPage&gt;\n            &lt;FODTabPage Text=\"Specifica\u021bii\"&gt;\n                &lt;!-- Specifica\u021bii tehnice --&gt;\n            &lt;/FODTabPage&gt;\n            &lt;FODTabPage Text=\"Recenzii\"&gt;\n                &lt;!-- Recenzii utilizatori --&gt;\n            &lt;/FODTabPage&gt;\n        &lt;/FODTabControl&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodTabControl/#dashboard-cu-tab-uri","title":"Dashboard cu tab-uri","text":"<pre><code>&lt;div class=\"dashboard\"&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Dashboard Administrator\n    &lt;/FodText&gt;\n\n    &lt;FODTabControl&gt;\n        &lt;FODTabPage Text=\"Prezentare general\u0103\"&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;StatCard Title=\"Utilizatori\" Value=\"@totalUsers\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;StatCard Title=\"Comenzi\" Value=\"@totalOrders\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;StatCard Title=\"Venituri\" Value=\"@totalRevenue\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;StatCard Title=\"Produse\" Value=\"@totalProducts\" /&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FODTabPage&gt;\n\n        &lt;FODTabPage Text=\"Analiz\u0103\"&gt;\n            &lt;ChartsComponent /&gt;\n        &lt;/FODTabPage&gt;\n\n        &lt;FODTabPage Text=\"Rapoarte\"&gt;\n            &lt;ReportsComponent /&gt;\n        &lt;/FODTabPage&gt;\n    &lt;/FODTabControl&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodTabControl/#tab-uri-cu-lazy-loading","title":"Tab-uri cu lazy loading","text":"<pre><code>&lt;FODTabControl&gt;\n    @foreach (var section in sections)\n    {\n        &lt;FODTabPage Text=\"@section.Title\"&gt;\n            @if (loadedSections.Contains(section.Id))\n            {\n                &lt;DynamicComponent Type=\"@section.ComponentType\" /&gt;\n            }\n            else\n            {\n                &lt;div class=\"text-center py-5\"&gt;\n                    &lt;FodLoadingCircular Indeterminate=\"true\" /&gt;\n                    &lt;FodText Typo=\"Typo.body2\" Class=\"mt-2\"&gt;\n                        Se \u00eencarc\u0103...\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n            }\n        &lt;/FODTabPage&gt;\n    }\n&lt;/FODTabControl&gt;\n\n@code {\n    private HashSet&lt;string&gt; loadedSections = new();\n\n    // \u00cencarc\u0103 con\u021binutul c\u00e2nd tab-ul devine activ\n    private async Task OnTabActivated(string sectionId)\n    {\n        if (!loadedSections.Contains(sectionId))\n        {\n            await LoadSectionContent(sectionId);\n            loadedSections.Add(sectionId);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Tab-urile inactive nu randeaz\u0103 con\u021binutul</li> <li>Folosi\u021bi <code>@key</code> pentru tab-uri generate dinamic</li> <li>Pentru con\u021binut greu, considera\u021bi lazy loading</li> <li>Evita\u021bi re-render prin p\u0103strarea referin\u021belor stabile</li> </ul>"},{"location":"fod/componente/FodTabControl/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Folosi\u021bi texte descriptive pentru tab-uri</li> <li>Asigura\u021bi contrast suficient</li> <li>Tab-urile sunt navigabile cu tastatura</li> <li>Considera\u021bi ARIA labels pentru screen readers</li> </ul>"},{"location":"fod/componente/FodTabControl/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Texte concise - P\u0103stra\u021bi textele tab-urilor scurte \u0219i clare</li> <li>Num\u0103r rezonabil - Nu dep\u0103\u0219i\u021bi 5-7 tab-uri</li> <li>Ordine logic\u0103 - Organiza\u021bi tab-urile \u00een ordine intuitiv\u0103</li> <li>Con\u021binut relevant - Fiecare tab trebuie s\u0103 aib\u0103 scop clar</li> <li>Loading states - Afi\u0219a\u021bi indicatori pentru con\u021binut asincron</li> <li>Responsive - Testa\u021bi pe diferite dimensiuni de ecran</li> </ol>"},{"location":"fod/componente/FodTabControl/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodTabControl/#tab-urile-nu-se-afiseaza","title":"Tab-urile nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FODTabPage este \u00een interiorul FODTabControl</li> <li>Verifica\u021bi c\u0103 parametrul Text este setat</li> </ul>"},{"location":"fod/componente/FodTabControl/#continutul-nu-se-schimba-la-click","title":"Con\u021binutul nu se schimb\u0103 la click","text":"<ul> <li>Verifica\u021bi consol\u0103 pentru erori JavaScript</li> <li>Verifica\u021bi c\u0103 Bootstrap CSS este \u00eenc\u0103rcat</li> </ul>"},{"location":"fod/componente/FodTabControl/#stilizarea-nu-se-aplica","title":"Stilizarea nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 clasele Bootstrap sunt disponibile</li> <li>Verifica\u021bi specificitatea CSS-ului custom</li> </ul>"},{"location":"fod/componente/FodTabControl/#13-limitari-cunoscute","title":"13. Limit\u0103ri cunoscute","text":"<ul> <li>Nu suport\u0103 tab-uri dinamice (ad\u0103ugare/\u0219tergere runtime)</li> <li>Nu are evenimente publice</li> <li>Nu suport\u0103 tab-uri dezactivate</li> <li>Nu are anima\u021bii de tranzi\u021bie</li> <li>Bazat pe Bootstrap pentru stilizare</li> </ul>"},{"location":"fod/componente/FodTabControl/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodTabControl/#tab-uri-cu-stare-in-url","title":"Tab-uri cu stare \u00een URL","text":"<pre><code>@page \"/settings/{activeTab?}\"\n@inject NavigationManager Navigation\n\n&lt;FODTabControl&gt;\n    &lt;FODTabPage Text=\"General\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/FODTabPage&gt;\n    &lt;FODTabPage Text=\"Security\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/FODTabPage&gt;\n    &lt;FODTabPage Text=\"Privacy\"&gt;\n        &lt;!-- Con\u021binut --&gt;\n    &lt;/FODTabPage&gt;\n&lt;/FODTabControl&gt;\n\n@code {\n    [Parameter] public string? ActiveTab { get; set; }\n\n    protected override void OnParametersSet()\n    {\n        // Activeaz\u0103 tab-ul bazat pe URL\n        // Necesit\u0103 extinderea componentei pentru suport\n    }\n\n    private void OnTabChanged(string tabName)\n    {\n        Navigation.NavigateTo($\"/settings/{tabName.ToLower()}\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTabControl/#15-concluzie","title":"15. Concluzie","text":"<p><code>FODTabControl</code> \u0219i <code>FODTabPage</code> ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru organizarea con\u021binutului \u00een tab-uri. Cu integrare u\u0219oar\u0103 \u0219i design bazat pe Bootstrap, acestea sunt ideale pentru interfe\u021be complexe care necesit\u0103 navigare \u00eentre sec\u021biuni multiple de con\u021binut.</p>"},{"location":"fod/componente/FodTableSortLabel/","title":"FodTableSortLabel","text":""},{"location":"fod/componente/FodTableSortLabel/#documentatie-pentru-componenta-fodtablesortlabel","title":"Documenta\u021bie pentru componenta FodTableSortLabel","text":""},{"location":"fod/componente/FodTableSortLabel/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTableSortLabel&lt;T&gt;</code> este o component\u0103 pentru header-ele de tabel care permite sortarea coloanelor. Se integreaz\u0103 automat cu <code>FodDataTable</code> pentru a gestiona sortarea datelor \u00een mod ascendent, descendent sau f\u0103r\u0103 sortare.</p> <p>Caracteristici principale: - Sortare tri-state (None, Ascending, Descending) - Integrare automat\u0103 cu FodDataTable - Iconi\u021be pentru indicarea direc\u021biei de sortare - Suport pentru sortare multipl\u0103 - Func\u021bii de sortare personalizate - Control asupra pozi\u021biei iconi\u021bei - Dezactivare op\u021bional\u0103</p>"},{"location":"fod/componente/FodTableSortLabel/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTableSortLabel/#sortare-simpla-in-datatable","title":"Sortare simpl\u0103 \u00een DataTable","text":"<pre><code>&lt;FodDataTable Items=\"employees\" T=\"Employee\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" SortBy=\"@(e =&gt; e.Name)\"&gt;\n                    Nume\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" SortBy=\"@(e =&gt; e.Department)\"&gt;\n                    Departament\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" SortBy=\"@(e =&gt; e.Salary)\"&gt;\n                    Salariu\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;!-- R\u00e2nduri tabel --&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#sortare-cu-directie-initiala","title":"Sortare cu direc\u021bie ini\u021bial\u0103","text":"<pre><code>&lt;FodTableSortLabel T=\"Product\" \n                   SortBy=\"@(p =&gt; p.Price)\"\n                   InitialDirection=\"SortDirection.Descending\"&gt;\n    Pre\u021b\n&lt;/FodTableSortLabel&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>SortBy</code> <code>Func&lt;T, object&gt;</code> Expresie pentru sortare - <code>InitialDirection</code> <code>SortDirection</code> Direc\u021bia ini\u021bial\u0103 de sortare <code>SortDirection.None</code> <code>Enabled</code> <code>bool</code> Activeaz\u0103 sortarea <code>true</code> <code>SortIcon</code> <code>string</code> Iconi\u021b\u0103 pentru sortare <code>FodIcons.Material.Filled.ArrowUpward</code> <code>AppendIcon</code> <code>bool</code> Plaseaz\u0103 iconi\u021b\u0103 dup\u0103 text <code>false</code> <code>SortLabel</code> <code>string</code> Label pentru accesibilitate - <code>SortDirection</code> <code>SortDirection</code> Direc\u021bia curent\u0103 <code>SortDirection.None</code> <code>SortDirectionChanged</code> <code>EventCallback&lt;SortDirection&gt;</code> Eveniment schimbare direc\u021bie - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut (text/componente) -"},{"location":"fod/componente/FodTableSortLabel/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodTableSortLabel/#sortare-complexa-cu-obiecte-imbricate","title":"Sortare complex\u0103 cu obiecte imbricate","text":"<pre><code>&lt;FodDataTable Items=\"orders\" T=\"Order\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Order\" \n                                   SortBy=\"@(o =&gt; o.OrderNumber)\"\n                                   SortLabel=\"Num\u0103r comand\u0103\"&gt;\n                    Nr. Comand\u0103\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Order\" \n                                   SortBy=\"@(o =&gt; o.Customer.Name)\"\n                                   SortLabel=\"Nume client\"&gt;\n                    Client\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Order\" \n                                   SortBy=\"@(o =&gt; o.Items.Sum(i =&gt; i.Total))\"\n                                   InitialDirection=\"SortDirection.Descending\"&gt;\n                    Total\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Order\" \n                                   SortBy=\"@(o =&gt; o.OrderDate)\"&gt;\n                    Data\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#sortare-cu-iconite-personalizate","title":"Sortare cu iconi\u021be personalizate","text":"<pre><code>&lt;FodTableSortLabel T=\"Task\" \n                   SortBy=\"@(t =&gt; t.Priority)\"\n                   SortIcon=\"@FodIcons.Material.Filled.Sort\"\n                   AppendIcon=\"true\"&gt;\n    &lt;div class=\"d-flex align-items-center\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.PriorityHigh\" \n                 Size=\"FodSize.Small\" \n                 Class=\"me-1\" /&gt;\n        Prioritate\n    &lt;/div&gt;\n&lt;/FodTableSortLabel&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#sortare-conditionata","title":"Sortare condi\u021bionat\u0103","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Product\" \n                                   SortBy=\"@(p =&gt; p.Name)\"\n                                   Enabled=\"@canSortByName\"&gt;\n                    Nume produs\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Product\" \n                                   SortBy=\"@(p =&gt; p.Stock)\"\n                                   Enabled=\"@(userRole == \"Admin\")\"&gt;\n                    Stoc\n                    @if (userRole != \"Admin\")\n                    {\n                        &lt;FodTooltip Text=\"Doar administratorii pot sorta dup\u0103 stoc\"&gt;\n                            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n                                     Size=\"FodSize.Small\" /&gt;\n                        &lt;/FodTooltip&gt;\n                    }\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool canSortByName = true;\n    private string userRole = \"User\";\n}\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#sortare-cu-transformari","title":"Sortare cu transform\u0103ri","text":"<pre><code>&lt;FodTableSortLabel T=\"Employee\" \n                   SortBy=\"@(e =&gt; ParseExperience(e.ExperienceLevel))\"&gt;\n    Experien\u021b\u0103\n&lt;/FodTableSortLabel&gt;\n\n@code {\n    private int ParseExperience(string level)\n    {\n        return level switch\n        {\n            \"Junior\" =&gt; 1,\n            \"Mid\" =&gt; 2,\n            \"Senior\" =&gt; 3,\n            \"Lead\" =&gt; 4,\n            _ =&gt; 0\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#5-integrare-cu-datatable","title":"5. Integrare cu DataTable","text":""},{"location":"fod/componente/FodTableSortLabel/#sortare-multipla","title":"Sortare multipl\u0103","text":"<pre><code>&lt;FodDataTable Items=\"data\" \n              T=\"DataItem\" \n              MultiSort=\"true\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"DataItem\" \n                                   SortBy=\"@(d =&gt; d.Category)\"\n                                   InitialDirection=\"SortDirection.Ascending\"&gt;\n                    Categorie\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"DataItem\" \n                                   SortBy=\"@(d =&gt; d.SubCategory)\"\n                                   InitialDirection=\"SortDirection.Ascending\"&gt;\n                    Subcategorie\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"DataItem\" \n                                   SortBy=\"@(d =&gt; d.Value)\"&gt;\n                    Valoare\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#sortare-server-side","title":"Sortare server-side","text":"<pre><code>&lt;FodDataTable Items=\"serverData\" \n              T=\"ServerItem\"\n              ServerData=\"LoadServerData\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"ServerItem\" \n                                   SortBy=\"@(s =&gt; s.Name)\"\n                                   SortDirectionChanged=\"OnSortChanged\"&gt;\n                    Nume\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private async Task&lt;TableData&lt;ServerItem&gt;&gt; LoadServerData(TableState state)\n    {\n        var sortColumn = state.SortLabel?.SortLabel ?? \"Name\";\n        var sortDirection = state.SortDirection;\n\n        var response = await ApiClient.GetDataAsync(\n            pageNumber: state.Page,\n            pageSize: state.PageSize,\n            sortBy: sortColumn,\n            sortAscending: sortDirection == SortDirection.Ascending\n        );\n\n        return new TableData&lt;ServerItem&gt;\n        {\n            Items = response.Data,\n            TotalItems = response.TotalCount\n        };\n    }\n\n    private async Task OnSortChanged(SortDirection direction)\n    {\n        // Re\u00eencarc\u0103 datele cu noua sortare\n        await dataTable.ReloadServerData();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#6-stilizare-si-teme","title":"6. Stilizare \u0219i Teme","text":"<pre><code>/* Header sortabil eviden\u021biat */\n.fod-table-sort-label {\n    cursor: pointer;\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n}\n\n.fod-table-sort-label:hover {\n    color: var(--fod-palette-primary-main);\n}\n\n/* Iconi\u021b\u0103 activ\u0103 */\n.fod-table-sort-label-icon {\n    transition: transform 0.2s ease-in-out;\n    margin-left: 4px;\n    font-size: 18px;\n}\n\n/* Direc\u021bii de sortare */\n.fod-direction-asc {\n    transform: rotate(0deg);\n    color: var(--fod-palette-primary-main);\n}\n\n.fod-direction-desc {\n    transform: rotate(180deg);\n    color: var(--fod-palette-primary-main);\n}\n\n/* Sortare dezactivat\u0103 */\n.fod-table-sort-label[disabled] {\n    cursor: not-allowed;\n    opacity: 0.5;\n}\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#7-combinatii-cu-alte-componente","title":"7. Combina\u021bii cu alte componente","text":""},{"location":"fod/componente/FodTableSortLabel/#cu-badge-pentru-numar","title":"Cu badge pentru num\u0103r","text":"<pre><code>&lt;FodTableSortLabel T=\"Category\" SortBy=\"@(c =&gt; c.ProductCount)\"&gt;\n    &lt;div class=\"d-flex align-items-center\"&gt;\n        Produse\n        &lt;FodBadge Color=\"FodColor.Primary\" Class=\"ms-2\"&gt;\n            @totalProducts\n        &lt;/FodBadge&gt;\n    &lt;/div&gt;\n&lt;/FodTableSortLabel&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#cu-filtrare-inline","title":"Cu filtrare inline","text":"<pre><code>&lt;FodTh&gt;\n    &lt;div class=\"d-flex flex-column\"&gt;\n        &lt;FodTableSortLabel T=\"Product\" SortBy=\"@(p =&gt; p.Category)\"&gt;\n            Categorie\n        &lt;/FodTableSortLabel&gt;\n        &lt;FodSelect @bind-Value=\"categoryFilter\" \n                   Dense=\"true\"\n                   Margin=\"FodMargin.Dense\"\n                   T=\"string\"&gt;\n            &lt;FodSelectItem Value=\"\"&gt;Toate&lt;/FodSelectItem&gt;\n            @foreach (var cat in categories)\n            {\n                &lt;FodSelectItem Value=\"@cat\"&gt;@cat&lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/div&gt;\n&lt;/FodTh&gt;\n</code></pre>"},{"location":"fod/componente/FodTableSortLabel/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>SortBy clar - Folosi\u021bi expresii simple \u0219i clare</li> <li>Direc\u021bie ini\u021bial\u0103 - Seta\u021bi pentru coloane importante</li> <li>Labels descriptive - Pentru accesibilitate</li> <li>Performan\u021b\u0103 - Evita\u021bi calcule complexe \u00een SortBy</li> <li>Feedback vizual - Iconi\u021be clare pentru direc\u021bie</li> <li>Consisten\u021b\u0103 - Acela\u0219i comportament pentru toate coloanele</li> </ol>"},{"location":"fod/componente/FodTableSortLabel/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Sortarea se face doar la click</li> <li>Pentru date mari, folosi\u021bi sortare server-side</li> <li>Evita\u021bi expresii complexe \u00een SortBy</li> <li>Cache-ui\u021bi rezultatele pentru performan\u021b\u0103</li> </ul>"},{"location":"fod/componente/FodTableSortLabel/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Suport complet pentru tastatur\u0103</li> <li>Atribute ARIA pentru screen readers</li> <li>Focus vizibil pentru navigare</li> <li>SortLabel pentru descriere clar\u0103</li> </ul>"},{"location":"fod/componente/FodTableSortLabel/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodTableSortLabel/#sortarea-nu-functioneaza","title":"Sortarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 DataTable are Items setat</li> <li>Verifica\u021bi c\u0103 SortBy returneaz\u0103 valori comparabile</li> <li>Verifica\u021bi c\u0103 TableContext este disponibil</li> </ul>"},{"location":"fod/componente/FodTableSortLabel/#iconita-nu-se-schimba","title":"Iconi\u021b\u0103 nu se schimb\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Enabled=\"true\"</li> <li>Verifica\u021bi c\u0103 iconi\u021bele sunt \u00eenc\u0103rcate</li> <li>Verifica\u021bi CSS pentru transform\u0103ri</li> </ul>"},{"location":"fod/componente/FodTableSortLabel/#directia-nu-se-pastreaza","title":"Direc\u021bia nu se p\u0103streaz\u0103","text":"<ul> <li>Folosi\u021bi InitialDirection pentru setare ini\u021bial\u0103</li> <li>Verifica\u021bi c\u0103 nu reseta\u021bi DataTable</li> </ul>"},{"location":"fod/componente/FodTableSortLabel/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodTableSortLabel</code> ofer\u0103 o solu\u021bie elegant\u0103 \u0219i intuitiv\u0103 pentru sortarea coloanelor \u00een tabele. Cu integrare automat\u0103 \u00een FodDataTable \u0219i suport pentru scenarii complexe, componenta \u00eembun\u0103t\u0103\u021be\u0219te semnificativ experien\u021ba utilizatorului \u00een lucrul cu date tabulare.</p>"},{"location":"fod/componente/FodTd/","title":"FodTd","text":""},{"location":"fod/componente/FodTd/#documentatie-pentru-componenta-fodtd","title":"Documenta\u021bie pentru componenta FodTd","text":""},{"location":"fod/componente/FodTd/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTd</code> reprezint\u0103 o celul\u0103 de date (table data) \u00eentr-un r\u00e2nd de tabel. Componenta ofer\u0103 suport pentru afi\u0219are responsiv\u0103 cu data labels \u0219i ascundere pe ecrane mici, fiind optimizat\u0103 pentru tabele mobile-friendly.</p> <p>Caracteristici principale: - Data labels pentru afi\u0219are responsiv\u0103 - Ascundere automat\u0103 pe breakpoint-uri mici - Stilizare flexibil\u0103 - Integrare perfect\u0103 cu FodDataTable - Suport pentru con\u021binut complex - Lightweight \u0219i performant\u0103</p>"},{"location":"fod/componente/FodTd/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTd/#celula-simpla","title":"Celul\u0103 simpl\u0103","text":"<pre><code>&lt;FodTable&gt;\n    &lt;tbody&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;Valoare simpl\u0103&lt;/FodTd&gt;\n            &lt;FodTd&gt;Alta valoare&lt;/FodTd&gt;\n            &lt;FodTd&gt;A treia valoare&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/tbody&gt;\n&lt;/FodTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#celula-cu-data-label","title":"Celul\u0103 cu data label","text":"<pre><code>&lt;FodDataTable Items=\"users\" T=\"User\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd DataLabel=\"Nume\"&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd DataLabel=\"Email\"&gt;@context.Email&lt;/FodTd&gt;\n            &lt;FodTd DataLabel=\"Telefon\"&gt;@context.Phone&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#celula-cu-continut-complex","title":"Celul\u0103 cu con\u021binut complex","text":"<pre><code>&lt;FodTd DataLabel=\"Ac\u021biuni\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Edit\" \n                   Size=\"FodSize.Small\"\n                   OnClick=\"@(() =&gt; EditItem(context))\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n                   Size=\"FodSize.Small\"\n                   Color=\"FodColor.Error\"\n                   OnClick=\"@(() =&gt; DeleteItem(context))\" /&gt;\n&lt;/FodTd&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>DataLabel</code> <code>string</code> Label pentru afi\u0219are mobil\u0103 - <code>HideSmall</code> <code>bool</code> Ascunde pe ecrane mici <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul celulei - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale - <code>Style</code> <code>string</code> Stiluri inline -"},{"location":"fod/componente/FodTd/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodTd/#tabel-responsive-cu-data-labels","title":"Tabel responsive cu data labels","text":"<pre><code>&lt;FodDataTable Items=\"orders\" T=\"Order\" Class=\"responsive-table\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;Nr. Comand\u0103&lt;/FodTh&gt;\n            &lt;FodTh&gt;Client&lt;/FodTh&gt;\n            &lt;FodTh HideSmall=\"true\"&gt;Data&lt;/FodTh&gt;\n            &lt;FodTh&gt;Total&lt;/FodTh&gt;\n            &lt;FodTh&gt;Status&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd DataLabel=\"Nr. Comand\u0103\"&gt;\n                &lt;FodLink Href=\"@($\"/orders/{context.Id}\")\"&gt;\n                    @context.OrderNumber\n                &lt;/FodLink&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Client\"&gt;\n                @context.CustomerName\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Data\" HideSmall=\"true\"&gt;\n                @context.OrderDate.ToString(\"dd.MM.yyyy\")\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Total\"&gt;\n                &lt;strong&gt;@context.Total.ToString(\"C\")&lt;/strong&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Status\"&gt;\n                &lt;FodChip Color=\"@GetStatusColor(context.Status)\" \n                         Size=\"FodSize.Small\"&gt;\n                    @context.Status\n                &lt;/FodChip&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private FodColor GetStatusColor(OrderStatus status)\n    {\n        return status switch\n        {\n            OrderStatus.Pending =&gt; FodColor.Warning,\n            OrderStatus.Processing =&gt; FodColor.Info,\n            OrderStatus.Completed =&gt; FodColor.Success,\n            OrderStatus.Cancelled =&gt; FodColor.Error,\n            _ =&gt; FodColor.Default\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTd/#celule-cu-formatare-conditionata","title":"Celule cu formatare condi\u021bionat\u0103","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd DataLabel=\"Produs\"&gt;@context.Name&lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Pre\u021b\" \n                   Class=\"@(context.OnSale ? \"sale-price\" : \"\")\"&gt;\n                @if (context.OnSale)\n                {\n                    &lt;span class=\"original-price\"&gt;@context.OriginalPrice.ToString(\"C\")&lt;/span&gt;\n                    &lt;span class=\"current-price\"&gt;@context.SalePrice.ToString(\"C\")&lt;/span&gt;\n                }\n                else\n                {\n                    @context.Price.ToString(\"C\")\n                }\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Stoc\" \n                   Class=\"@GetStockClass(context.Stock)\"&gt;\n                @context.Stock\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Disponibilitate\"&gt;\n                @if (context.Stock &gt; 0)\n                {\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                             Color=\"FodColor.Success\" \n                             Size=\"FodSize.Small\" /&gt;\n                    &lt;span&gt;\u00cen stoc&lt;/span&gt;\n                }\n                else\n                {\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Close\" \n                             Color=\"FodColor.Error\" \n                             Size=\"FodSize.Small\" /&gt;\n                    &lt;span&gt;Indisponibil&lt;/span&gt;\n                }\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private string GetStockClass(int stock)\n    {\n        return stock switch\n        {\n            0 =&gt; \"out-of-stock\",\n            &lt; 10 =&gt; \"low-stock\",\n            _ =&gt; \"in-stock\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTd/#celule-cu-componente-complexe","title":"Celule cu componente complexe","text":"<pre><code>&lt;FodDataTable Items=\"employees\" T=\"Employee\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd DataLabel=\"Angajat\"&gt;\n                &lt;div class=\"d-flex align-items-center\"&gt;\n                    &lt;FodAvatar Image=\"@context.PhotoUrl\" \n                               Size=\"FodSize.Small\" \n                               Class=\"me-2\" /&gt;\n                    &lt;div&gt;\n                        &lt;FodText Typo=\"Typo.body2\"&gt;@context.FullName&lt;/FodText&gt;\n                        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                            @context.Department\n                        &lt;/FodText&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Contact\"&gt;\n                &lt;div class=\"contact-info\"&gt;\n                    &lt;div&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Email\" \n                                 Size=\"FodSize.Small\" \n                                 Class=\"me-1\" /&gt;\n                        @context.Email\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Phone\" \n                                 Size=\"FodSize.Small\" \n                                 Class=\"me-1\" /&gt;\n                        @context.Phone\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Performan\u021b\u0103\"&gt;\n                &lt;FodRating Value=\"@context.PerformanceRating\" \n                           MaxValue=\"5\" \n                           ReadOnly=\"true\" \n                           Size=\"FodSize.Small\" /&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Ac\u021biuni\"&gt;\n                &lt;FodMenu&gt;\n                    &lt;ActivatorContent&gt;\n                        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" \n                                       Size=\"FodSize.Small\" /&gt;\n                    &lt;/ActivatorContent&gt;\n                    &lt;ChildContent&gt;\n                        &lt;FodMenuItem OnClick=\"@(() =&gt; ViewDetails(context))\"&gt;\n                            Detalii\n                        &lt;/FodMenuItem&gt;\n                        &lt;FodMenuItem OnClick=\"@(() =&gt; EditEmployee(context))\"&gt;\n                            Editeaz\u0103\n                        &lt;/FodMenuItem&gt;\n                        &lt;FodMenuItem OnClick=\"@(() =&gt; SendMessage(context))\"&gt;\n                            Trimite mesaj\n                        &lt;/FodMenuItem&gt;\n                    &lt;/ChildContent&gt;\n                &lt;/FodMenu&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#celule-cu-stari-dinamice","title":"Celule cu st\u0103ri dinamice","text":"<pre><code>&lt;FodDataTable Items=\"tasks\" T=\"TaskItem\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd DataLabel=\"Task\"&gt;\n                &lt;div class=\"@(context.IsCompleted ? \"completed-task\" : \"\")\"&gt;\n                    @context.Title\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Prioritate\"&gt;\n                &lt;FodBadge Color=\"@GetPriorityColor(context.Priority)\" \n                          Dot=\"true\"&gt;\n                    @context.Priority\n                &lt;/FodBadge&gt;\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Deadline\" \n                   Class=\"@(IsOverdue(context) ? \"overdue\" : \"\")\"&gt;\n                @context.Deadline.ToString(\"dd.MM.yyyy\")\n                @if (IsOverdue(context))\n                {\n                    &lt;FodTooltip Text=\"Task \u00eent\u00e2rziat!\"&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Warning\" \n                                 Color=\"FodColor.Error\" \n                                 Size=\"FodSize.Small\" /&gt;\n                    &lt;/FodTooltip&gt;\n                }\n            &lt;/FodTd&gt;\n\n            &lt;FodTd DataLabel=\"Progres\"&gt;\n                &lt;FodLoadingLinear Value=\"@context.Progress\" \n                                  Color=\"@GetProgressColor(context.Progress)\" /&gt;\n                &lt;span class=\"text-caption\"&gt;@context.Progress%&lt;/span&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool IsOverdue(TaskItem task)\n    {\n        return !task.IsCompleted &amp;&amp; task.Deadline &lt; DateTime.Now;\n    }\n\n    private FodColor GetPriorityColor(Priority priority)\n    {\n        return priority switch\n        {\n            Priority.High =&gt; FodColor.Error,\n            Priority.Medium =&gt; FodColor.Warning,\n            Priority.Low =&gt; FodColor.Info,\n            _ =&gt; FodColor.Default\n        };\n    }\n\n    private FodColor GetProgressColor(int progress)\n    {\n        return progress switch\n        {\n            &lt; 25 =&gt; FodColor.Error,\n            &lt; 50 =&gt; FodColor.Warning,\n            &lt; 75 =&gt; FodColor.Info,\n            _ =&gt; FodColor.Success\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTd/#5-stilizare-responsiva","title":"5. Stilizare Responsiv\u0103","text":"<pre><code>/* Stiluri pentru mobile */\n@media (max-width: 768px) {\n    .responsive-table .fod-table-cell {\n        display: block;\n        text-align: right;\n        padding-left: 50%;\n        position: relative;\n    }\n\n    .responsive-table .fod-table-cell::before {\n        content: attr(data-label);\n        position: absolute;\n        left: 6px;\n        width: 45%;\n        text-align: left;\n        font-weight: bold;\n    }\n\n    .responsive-table .fod-table-cell-hide {\n        display: none !important;\n    }\n}\n\n/* Stiluri pentru celule speciale */\n.sale-price .original-price {\n    text-decoration: line-through;\n    color: var(--fod-palette-text-secondary);\n    margin-right: 8px;\n}\n\n.sale-price .current-price {\n    color: var(--fod-palette-error-main);\n    font-weight: bold;\n}\n\n.out-of-stock {\n    color: var(--fod-palette-error-main);\n}\n\n.low-stock {\n    color: var(--fod-palette-warning-main);\n}\n\n.in-stock {\n    color: var(--fod-palette-success-main);\n}\n\n/* Celule cu hover */\n.hoverable-cell:hover {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.08);\n    cursor: pointer;\n}\n\n/* Celule cu con\u021binut dens */\n.compact-cell {\n    padding: 4px 8px;\n    font-size: 0.875rem;\n}\n</code></pre>"},{"location":"fod/componente/FodTd/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodTd/#in-formulare-editabile","title":"\u00cen formulare editabile","text":"<pre><code>&lt;FodTd DataLabel=\"@column.HeaderText\"&gt;\n    @if (IsEditing)\n    {\n        &lt;FodTextField @bind-Value=\"value\" \n                      Immediate=\"true\"\n                      Dense=\"true\"\n                      Margin=\"FodMargin.None\" /&gt;\n    }\n    else\n    {\n        @value\n    }\n&lt;/FodTd&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#cu-validare-inline","title":"Cu validare inline","text":"<pre><code>&lt;FodTd DataLabel=\"Email\"&gt;\n    @if (IsValidEmail(context.Email))\n    {\n        @context.Email\n    }\n    else\n    {\n        &lt;span class=\"text-error\"&gt;\n            @context.Email\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" \n                     Size=\"FodSize.Small\" /&gt;\n        &lt;/span&gt;\n    }\n&lt;/FodTd&gt;\n</code></pre>"},{"location":"fod/componente/FodTd/#7-best-practices","title":"7. Best Practices","text":"<ol> <li>Data Labels - Include\u021bi \u00eentotdeauna pentru tabele responsive</li> <li>Con\u021binut semantic - Folosi\u021bi markup semantic \u00een celule</li> <li>Performan\u021b\u0103 - Evita\u021bi calcule complexe \u00een randare</li> <li>Accesibilitate - Asigura\u021bi contrast suficient pentru text</li> <li>Mobile-first - Testa\u021bi pe dispozitive mobile</li> <li>Consisten\u021b\u0103 - P\u0103stra\u021bi stilizare uniform\u0103 \u00eentre celule</li> </ol>"},{"location":"fod/componente/FodTd/#8-performanta","title":"8. Performan\u021b\u0103","text":"<ul> <li>Componenta este foarte lightweight</li> <li>Evita\u021bi re-render prin folosirea @key</li> <li>Pentru tabele mari, folosi\u021bi virtualizare</li> <li>Minimiza\u021bi DOM-ul pentru con\u021binut complex</li> </ul>"},{"location":"fod/componente/FodTd/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Data labels sunt citite de screen readers</li> <li>Structura tabelar\u0103 p\u0103streaz\u0103 semantica</li> <li>Suport pentru navigare cu tastatura</li> <li>ARIA attributes sunt mo\u0219tenite de la tabel</li> </ul>"},{"location":"fod/componente/FodTd/#10-troubleshooting","title":"10. Troubleshooting","text":""},{"location":"fod/componente/FodTd/#data-label-nu-apare-pe-mobile","title":"Data label nu apare pe mobile","text":"<ul> <li>Verifica\u021bi CSS media queries</li> <li>Asigura\u021bi-v\u0103 c\u0103 DataLabel este setat</li> <li>Verifica\u021bi c\u0103 stilurile responsive sunt \u00eenc\u0103rcate</li> </ul>"},{"location":"fod/componente/FodTd/#celula-nu-se-ascunde-pe-ecrane-mici","title":"Celula nu se ascunde pe ecrane mici","text":"<ul> <li>Seta\u021bi HideSmall=\"true\"</li> <li>Verifica\u021bi breakpoint-urile CSS</li> <li>Asigura\u021bi-v\u0103 c\u0103 clasa CSS este aplicat\u0103</li> </ul>"},{"location":"fod/componente/FodTd/#continutul-depaseste-celula","title":"Con\u021binutul dep\u0103\u0219e\u0219te celula","text":"<ul> <li>Aplica\u021bi <code>overflow: hidden</code> sau <code>text-overflow: ellipsis</code></li> <li>Folosi\u021bi FodTooltip pentru text lung</li> <li>Considera\u021bi un layout diferit pentru mobile</li> </ul>"},{"location":"fod/componente/FodTd/#11-concluzie","title":"11. Concluzie","text":"<p><code>FodTd</code> ofer\u0103 o solu\u021bie simpl\u0103 dar puternic\u0103 pentru celulele de tabel \u00een aplica\u021biile FOD. Cu suport nativ pentru responsive design prin data labels \u0219i flexibilitate maxim\u0103 pentru con\u021binut, componenta asigur\u0103 o experien\u021b\u0103 consistent\u0103 pe toate dispozitivele.</p>"},{"location":"fod/componente/FodText/","title":"Text (Typography)","text":""},{"location":"fod/componente/FodText/#documentatie-pentru-componenta-fodtext","title":"Documenta\u021bie pentru componenta FodText","text":""},{"location":"fod/componente/FodText/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodText</code> este componenta de tipografie fundamental\u0103 din sistemul FOD Components, oferind un mod consistent \u0219i flexibil de afi\u0219are a textului. Componenta implementeaz\u0103 un sistem complet de tipografie bazat pe Material Design, cu 14 variante predefinite \u0219i op\u021biuni extensive de stilizare.</p> <p>Caracteristici principale: - 14 variante de tipografie (h1-h6, body, subtitle, caption, etc.) - Sistem de culori integrat cu tema - Aliniere text flexibil\u0103 - Suport RTL (Right-to-Left) - Mapare automat\u0103 la elemente HTML semantice - Spa\u021biere consistent\u0103 cu GutterBottom - Mod inline pentru text \u00een linie - Personalizare complet\u0103 prin clase CSS</p>"},{"location":"fod/componente/FodText/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodText/#text-de-baza","title":"Text de baz\u0103","text":"<pre><code>&lt;FodText&gt;Text implicit cu stilul body1&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#titluri-si-subtitluri","title":"Titluri \u0219i subtitluri","text":"<pre><code>&lt;!-- Titluri principale --&gt;\n&lt;FodText Typo=\"Typo.h1\"&gt;Titlu Principal (H1)&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.h2\"&gt;Titlu Secundar (H2)&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.h3\"&gt;Titlu Ter\u021biar (H3)&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.h4\"&gt;Titlu H4&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.h5\"&gt;Titlu H5&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.h6\"&gt;Titlu H6&lt;/FodText&gt;\n\n&lt;!-- Subtitluri --&gt;\n&lt;FodText Typo=\"Typo.subtitle1\"&gt;Subtitlu mare pentru sec\u021biuni&lt;/FodText&gt;\n&lt;FodText Typo=\"Typo.subtitle2\"&gt;Subtitlu mai mic pentru subsec\u021biuni&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#variante-de-text-body","title":"Variante de text body","text":"<pre><code>&lt;!-- Text normal (implicit) --&gt;\n&lt;FodText Typo=\"Typo.body1\"&gt;\n    Text body1 - utilizat pentru paragrafe normale \u0219i con\u021binut principal.\n    Este varianta implicit\u0103 pentru FodText.\n&lt;/FodText&gt;\n\n&lt;!-- Text secundar --&gt;\n&lt;FodText Typo=\"Typo.body2\"&gt;\n    Text body2 - utilizat pentru con\u021binut secundar, note \u0219i descrieri mai mici.\n&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#text-specializat","title":"Text specializat","text":"<pre><code>&lt;!-- Text pentru butoane --&gt;\n&lt;FodText Typo=\"Typo.button\"&gt;TEXT BUTON&lt;/FodText&gt;\n\n&lt;!-- Text caption pentru imagini sau tabele --&gt;\n&lt;FodText Typo=\"Typo.caption\"&gt;\n    Figura 1: Descriere imagine sau not\u0103 explicativ\u0103\n&lt;/FodText&gt;\n\n&lt;!-- Text overline pentru etichete --&gt;\n&lt;FodText Typo=\"Typo.overline\"&gt;ETICHET\u0102 SUPERIOAR\u0102&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#text-cu-culori","title":"Text cu culori","text":"<pre><code>&lt;!-- Culori principale --&gt;\n&lt;FodText Color=\"FodColor.Primary\"&gt;Text cu culoare primar\u0103&lt;/FodText&gt;\n&lt;FodText Color=\"FodColor.Secondary\"&gt;Text cu culoare secundar\u0103&lt;/FodText&gt;\n\n&lt;!-- Culori semantice --&gt;\n&lt;FodText Color=\"FodColor.Success\"&gt;Opera\u021biune reu\u0219it\u0103!&lt;/FodText&gt;\n&lt;FodText Color=\"FodColor.Error\"&gt;Mesaj de eroare&lt;/FodText&gt;\n&lt;FodText Color=\"FodColor.Warning\"&gt;Avertisment important&lt;/FodText&gt;\n&lt;FodText Color=\"FodColor.Info\"&gt;Not\u0103 informativ\u0103&lt;/FodText&gt;\n\n&lt;!-- Alte culori --&gt;\n&lt;FodText Color=\"FodColor.Dark\"&gt;Text \u00eentunecat&lt;/FodText&gt;\n&lt;FodText Color=\"FodColor.Inherit\"&gt;Text care mo\u0219tene\u0219te culoarea p\u0103rintelui&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#aliniere-text","title":"Aliniere text","text":"<pre><code>&lt;!-- Aliniere la st\u00e2nga --&gt;\n&lt;FodText Align=\"Align.Left\"&gt;Text aliniat la st\u00e2nga&lt;/FodText&gt;\n\n&lt;!-- Aliniere centrat\u0103 --&gt;\n&lt;FodText Align=\"Align.Center\"&gt;Text centrat&lt;/FodText&gt;\n\n&lt;!-- Aliniere la dreapta --&gt;\n&lt;FodText Align=\"Align.Right\"&gt;Text aliniat la dreapta&lt;/FodText&gt;\n\n&lt;!-- Aliniere justificat\u0103 --&gt;\n&lt;FodText Align=\"Align.Justify\"&gt;\n    Text justificat care se \u00eentinde uniform \u00eentre marginile containerului.\n    Util pentru paragrafe lungi \u00een articole sau documente.\n&lt;/FodText&gt;\n\n&lt;!-- Aliniere responsiv\u0103 (Start/End) --&gt;\n&lt;FodText Align=\"Align.Start\"&gt;Text aliniat la \u00eenceput (LTR: st\u00e2nga, RTL: dreapta)&lt;/FodText&gt;\n&lt;FodText Align=\"Align.End\"&gt;Text aliniat la sf\u00e2r\u0219it (LTR: dreapta, RTL: st\u00e2nga)&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#text-cu-spatiere","title":"Text cu spa\u021biere","text":"<pre><code>&lt;!-- Cu spa\u021biu inferior --&gt;\n&lt;FodText Typo=\"Typo.h3\" GutterBottom=\"true\"&gt;\n    Titlu cu spa\u021biu inferior\n&lt;/FodText&gt;\n&lt;FodText&gt;Text care urmeaz\u0103 dup\u0103 titlu&lt;/FodText&gt;\n\n&lt;!-- F\u0103r\u0103 spa\u021biu inferior --&gt;\n&lt;FodText Typo=\"Typo.h3\" GutterBottom=\"false\"&gt;\n    Titlu f\u0103r\u0103 spa\u021biu inferior\n&lt;/FodText&gt;\n&lt;FodText&gt;Text imediat dup\u0103 titlu&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#text-inline-vs-block","title":"Text inline vs block","text":"<pre><code>&lt;!-- Text inline --&gt;\n&lt;FodText Inline=\"true\"&gt;Text inline&lt;/FodText&gt;\n&lt;FodText Inline=\"true\" Color=\"FodColor.Primary\"&gt; care continu\u0103&lt;/FodText&gt;\n&lt;FodText Inline=\"true\"&gt; pe aceea\u0219i linie.&lt;/FodText&gt;\n\n&lt;!-- Text block (implicit) --&gt;\n&lt;FodText&gt;Acest text&lt;/FodText&gt;\n&lt;FodText&gt;apare pe&lt;/FodText&gt;\n&lt;FodText&gt;linii separate.&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#exemple-practice-complexe","title":"Exemple practice complexe","text":""},{"location":"fod/componente/FodText/#card-de-produs","title":"Card de produs","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Laptop Gaming ROG\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.subtitle2\" Color=\"FodColor.Secondary\" GutterBottom=\"true\"&gt;\n            ASUS ROG Strix G15\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n            Procesor Intel Core i7, 16GB RAM, 512GB SSD, \n            NVIDIA RTX 3060 6GB, Display 15.6\" FHD 144Hz\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Primary\"&gt;\n            4.999 lei\n        &lt;/FodText&gt;\n        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Success\"&gt;\n            \u00cen stoc \u2022 Livrare gratuit\u0103\n        &lt;/FodText&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#sectiune-hero","title":"Sec\u021biune hero","text":"<pre><code>&lt;div class=\"hero-section text-center py-12\"&gt;\n    &lt;FodText Typo=\"Typo.h1\" Color=\"FodColor.Primary\" GutterBottom=\"true\"&gt;\n        Bine a\u021bi venit la FOD\n    &lt;/FodText&gt;\n    &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Secondary\" GutterBottom=\"true\"&gt;\n        Platforma digital\u0103 pentru servicii publice\n    &lt;/FodText&gt;\n    &lt;FodText Typo=\"Typo.body1\" Class=\"mx-auto\" Style=\"max-width: 600px;\"&gt;\n        Accesa\u021bi rapid \u0219i simplu serviciile publice de care ave\u021bi nevoie.\n        Totul \u00eentr-un singur loc, disponibil 24/7.\n    &lt;/FodText&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#lista-cu-pictograme","title":"List\u0103 cu pictograme","text":"<pre><code>&lt;div class=\"features-list\"&gt;\n    &lt;div class=\"d-flex align-items-start mb-3\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" \n                 Color=\"FodColor.Success\" \n                 Class=\"me-3\" /&gt;\n        &lt;div&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                Procesare rapid\u0103\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                Solicit\u0103rile dvs. sunt procesate \u00een maximum 24 ore\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#mesaje-de-stare","title":"Mesaje de stare","text":"<pre><code>@if (isLoading)\n{\n    &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Info\" Align=\"Align.Center\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.HourglassEmpty\" Class=\"me-2\" /&gt;\n        Se \u00eencarc\u0103 datele...\n    &lt;/FodText&gt;\n}\nelse if (hasError)\n{\n    &lt;FodText Typo=\"Typo.body1\" Color=\"FodColor.Error\" Align=\"Align.Center\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" Class=\"me-2\" /&gt;\n        A ap\u0103rut o eroare. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\n    &lt;/FodText&gt;\n}\nelse\n{\n    &lt;FodText Typo=\"Typo.body1\" Color=\"FodColor.Success\" Align=\"Align.Center\"&gt;\n        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" Class=\"me-2\" /&gt;\n        Opera\u021biune finalizat\u0103 cu succes!\n    &lt;/FodText&gt;\n}\n</code></pre>"},{"location":"fod/componente/FodText/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Typo</code> <code>Typo</code> Varianta de tipografie <code>Typo.body1</code> <code>Color</code> <code>FodColor</code> Culoarea textului <code>FodColor.Inherit</code> <code>Align</code> <code>Align</code> Alinierea textului <code>Align.Inherit</code> <code>GutterBottom</code> <code>bool</code> Adaug\u0103 spa\u021biu inferior (0.35em) <code>false</code> <code>Inline</code> <code>bool</code> Afi\u0219are inline \u00een loc de block <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul text - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodText/#4-variante-de-tipografie-typo","title":"4. Variante de tipografie (Typo)","text":"Variant\u0103 Element HTML Utilizare recomandat\u0103 <code>h1</code> <code>&lt;h1&gt;</code> Titlu principal pagin\u0103 <code>h2</code> <code>&lt;h2&gt;</code> Titluri sec\u021biuni majore <code>h3</code> <code>&lt;h3&gt;</code> Subsec\u021biuni <code>h4</code> <code>&lt;h4&gt;</code> Titluri card-uri <code>h5</code> <code>&lt;h5&gt;</code> Titluri mici <code>h6</code> <code>&lt;h6&gt;</code> Cel mai mic titlu <code>subtitle1</code> <code>&lt;h6&gt;</code> Subtitluri mari <code>subtitle2</code> <code>&lt;h6&gt;</code> Subtitluri mici <code>body1</code> <code>&lt;p&gt;</code> Text principal (implicit) <code>body2</code> <code>&lt;p&gt;</code> Text secundar <code>button</code> <code>&lt;span&gt;</code> Text \u00een butoane <code>caption</code> <code>&lt;span&gt;</code> Legende, note mici <code>overline</code> <code>&lt;span&gt;</code> Etichete deasupra <code>inherit</code> <code>&lt;span&gt;</code> Mo\u0219tene\u0219te stilul"},{"location":"fod/componente/FodText/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":""},{"location":"fod/componente/FodText/#variabile-css-pentru-tipografie","title":"Variabile CSS pentru tipografie","text":"<pre><code>/* Personalizare global\u0103 pentru o variant\u0103 */\n:root {\n    --fod-typography-h1-size: 3rem;\n    --fod-typography-h1-weight: 300;\n    --fod-typography-h1-lineheight: 1.2;\n    --fod-typography-h1-letterspacing: -0.01562em;\n\n    --fod-typography-body1-size: 1rem;\n    --fod-typography-body1-family: 'Roboto', sans-serif;\n    --fod-typography-body1-weight: 400;\n    --fod-typography-body1-lineheight: 1.5;\n}\n\n/* Clase CSS utilitare */\n.fod-typography-nowrap {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.fod-typography-paragraph {\n    margin-bottom: 16px;\n}\n\n/* Stiluri personalizate */\n.custom-heading {\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);\n    background: linear-gradient(45deg, #1976d2, #42a5f5);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n}\n</code></pre>"},{"location":"fod/componente/FodText/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodText/#in-formulare","title":"\u00cen formulare","text":"<pre><code>&lt;div class=\"mb-3\"&gt;\n    &lt;FodText Typo=\"Typo.subtitle2\" GutterBottom=\"true\"&gt;\n        Date personale\n    &lt;/FodText&gt;\n    &lt;FodTextField Label=\"Nume complet\" Required=\"true\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#in-liste","title":"\u00cen liste","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemText&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\"&gt;Element principal&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                Descriere secundar\u0103\n            &lt;/FodText&gt;\n        &lt;/FodListItemText&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#in-alerte","title":"\u00cen alerte","text":"<pre><code>&lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n    &lt;FodText Typo=\"Typo.subtitle2\" Inline=\"true\"&gt;Not\u0103:&lt;/FodText&gt;\n    &lt;FodText Typo=\"Typo.body2\" Inline=\"true\" Class=\"ms-1\"&gt;\n        Aceast\u0103 func\u021bionalitate este \u00een dezvoltare.\n    &lt;/FodText&gt;\n&lt;/FodAlert&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#7-suport-rtl-right-to-left","title":"7. Suport RTL (Right-to-Left)","text":"<pre><code>&lt;CascadingValue Value=\"true\" Name=\"RightToLeft\"&gt;\n    &lt;FodText Align=\"Align.Start\"&gt;\n        Text care se aliniaz\u0103 la dreapta \u00een modul RTL\n    &lt;/FodText&gt;\n    &lt;FodText Align=\"Align.End\"&gt;\n        Text care se aliniaz\u0103 la st\u00e2nga \u00een modul RTL\n    &lt;/FodText&gt;\n&lt;/CascadingValue&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#8-combinatii-comune","title":"8. Combina\u021bii comune","text":"<pre><code>&lt;!-- Titlu de pagin\u0103 --&gt;\n&lt;FodText Typo=\"Typo.h1\" \n         Color=\"FodColor.Primary\" \n         Align=\"Align.Center\" \n         GutterBottom=\"true\"&gt;\n    Titlu Principal\n&lt;/FodText&gt;\n\n&lt;!-- Text descriptiv --&gt;\n&lt;FodText Typo=\"Typo.body2\" \n         Color=\"FodColor.Secondary\" \n         Align=\"Align.Justify\"&gt;\n    Descriere detaliat\u0103...\n&lt;/FodText&gt;\n\n&lt;!-- Etichet\u0103 --&gt;\n&lt;FodText Typo=\"Typo.overline\" \n         Color=\"FodColor.Info\"&gt;\n    CATEGORIE\n&lt;/FodText&gt;\n</code></pre>"},{"location":"fod/componente/FodText/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>FodText este o component\u0103 lightweight</li> <li>Folose\u0219te elemente HTML semantice pentru SEO</li> <li>Stilurile sunt aplicate prin clase CSS, nu inline</li> <li>Reutiliza\u021bi variante \u00een loc de stiluri custom</li> </ul>"},{"location":"fod/componente/FodText/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Folose\u0219te elemente HTML semantice (h1-h6, p)</li> <li>Men\u021bine ierarhia corect\u0103 a titlurilor</li> <li>Contrastul culorilor respect\u0103 WCAG 2.0</li> <li>Suport\u0103 screen readers prin structur\u0103 semantic\u0103</li> </ul>"},{"location":"fod/componente/FodText/#11-note-si-observatii","title":"11. Note \u0219i observa\u021bii","text":"<ul> <li><code>Typo.body1</code> este varianta implicit\u0103</li> <li><code>GutterBottom</code> adaug\u0103 doar 0.35em, nu 1em</li> <li>Elementele inline nu pot avea <code>GutterBottom</code></li> <li>Culoarea <code>Inherit</code> preia culoarea p\u0103rintelui</li> </ul>"},{"location":"fod/componente/FodText/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Ierarhie - Respecta\u021bi ordinea h1 \u2192 h6</li> <li>Semantic\u0103 - Folosi\u021bi varianta potrivit\u0103 pentru context</li> <li>Consisten\u021b\u0103 - P\u0103stra\u021bi acelea\u0219i variante pentru elemente similare</li> <li>Culori - Folosi\u021bi culori semantice pentru mesaje</li> <li>Spa\u021biere - Folosi\u021bi GutterBottom pentru titluri</li> <li>Performan\u021b\u0103 - Evita\u021bi stiluri inline pentru text repetat</li> </ol>"},{"location":"fod/componente/FodText/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodText/#textul-nu-se-afiseaza-cu-stilul-dorit","title":"Textul nu se afi\u0219eaz\u0103 cu stilul dorit","text":"<ul> <li>Verifica\u021bi c\u0103 varianta Typo este corect specificat\u0103</li> <li>Verifica\u021bi c\u0103 tema include variabilele CSS necesare</li> </ul>"},{"location":"fod/componente/FodText/#culoarea-nu-se-aplica","title":"Culoarea nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FodColor este valid\u0103</li> <li>Pentru culori custom, folosi\u021bi Class sau Style</li> </ul>"},{"location":"fod/componente/FodText/#alinierea-nu-functioneaza","title":"Alinierea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi l\u0103\u021bimea containerului p\u0103rinte</li> <li>Pentru centrat, containerul trebuie s\u0103 aib\u0103 l\u0103\u021bime definit\u0103</li> </ul>"},{"location":"fod/componente/FodText/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodText</code> este componenta fundamental\u0103 pentru afi\u0219area textului \u00een aplica\u021biile FOD, oferind un sistem complet \u0219i consistent de tipografie. Cu 14 variante predefinite \u0219i op\u021biuni extensive de personalizare, acoper\u0103 toate nevoile de afi\u0219are text, de la titluri la paragrafe \u0219i etichete specializate.</p>"},{"location":"fod/componente/FodTextArea/","title":"TextArea","text":""},{"location":"fod/componente/FodTextArea/#documentatie-pentru-componentele-de-text-multilinie-fodtextarea-si-fodtextfield-cu-lines","title":"Documenta\u021bie pentru componentele de text multilinie (FodTextArea \u0219i FodTextField cu Lines)","text":""},{"location":"fod/componente/FodTextArea/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p>Sistemul FOD Components ofer\u0103 dou\u0103 modalit\u0103\u021bi principale pentru implementarea c\u00e2mpurilor de text multilinie: - <code>FodTextArea</code> - Component\u0103 specializat\u0103 pentru scenarii specifice (feedback) - <code>FodTextField</code> cu parametrul <code>Lines &gt; 1</code> - Solu\u021bia recomandat\u0103 pentru utilizare general\u0103</p> <p>Caracteristici principale: - Suport pentru multiple linii de text - Validare lungime maxim\u0103 cu contor de caractere - Integrare complet\u0103 cu sistemul de formulare Blazor - Stilizare consistent\u0103 cu alte componente FOD - Suport pentru placeholder \u0219i helper text - Validare \u00een timp real - Controlul spell-check - St\u0103ri disabled \u0219i readonly</p>"},{"location":"fod/componente/FodTextArea/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodTextArea/#textarea-de-baza-cu-fodtextfield","title":"TextArea de baz\u0103 cu FodTextField","text":"<pre><code>&lt;FodTextField @bind-Value=\"description\"\n              Lines=\"5\"\n              Label=\"Descriere\"\n              Placeholder=\"Introduce\u021bi o descriere detaliat\u0103...\" /&gt;\n\n@code {\n    private string description = string.Empty;\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-contor-de-caractere","title":"TextArea cu contor de caractere","text":"<pre><code>&lt;FodTextField @bind-Value=\"comment\"\n              Lines=\"4\"\n              Label=\"Comentariu\"\n              Counter=\"500\"\n              HelperText=\"Maxim 500 caractere\" /&gt;\n\n@code {\n    private string comment = string.Empty;\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-validare-in-formular","title":"TextArea cu validare \u00een formular","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodTextField @bind-Value=\"model.Description\"\n                  Lines=\"6\"\n                  Label=\"Descriere proiect\"\n                  Counter=\"1000\"\n                  Required=\"true\"\n                  For=\"@(() =&gt; model.Description)\" /&gt;\n\n    &lt;ValidationMessage For=\"@(() =&gt; model.Description)\" /&gt;\n\n    &lt;FodButton Type=\"submit\" Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        Salveaz\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class ProjectModel\n    {\n        [Required(ErrorMessage = \"Descrierea este obligatorie\")]\n        [MaxLength(1000, ErrorMessage = \"Descrierea nu poate dep\u0103\u0219i 1000 caractere\")]\n        [MinLength(50, ErrorMessage = \"Descrierea trebuie s\u0103 aib\u0103 minim 50 caractere\")]\n        public string Description { get; set; } = string.Empty;\n    }\n\n    private ProjectModel model = new();\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-dimensiuni-diferite","title":"TextArea cu dimensiuni diferite","text":"<pre><code>&lt;!-- TextArea mic\u0103 (3 r\u00e2nduri) --&gt;\n&lt;FodTextField @bind-Value=\"shortNote\"\n              Lines=\"3\"\n              Label=\"Not\u0103 scurt\u0103\"\n              Variant=\"FodVariant.Outlined\" /&gt;\n\n&lt;!-- TextArea medie (5 r\u00e2nduri) --&gt;\n&lt;FodTextField @bind-Value=\"mediumText\"\n              Lines=\"5\"\n              Label=\"Descriere\"\n              Variant=\"FodVariant.Filled\" /&gt;\n\n&lt;!-- TextArea mare (10 r\u00e2nduri) --&gt;\n&lt;FodTextField @bind-Value=\"longText\"\n              Lines=\"10\"\n              Label=\"Con\u021binut articol\"\n              Variant=\"FodVariant.Text\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-stiluri-diferite","title":"TextArea cu stiluri diferite","text":"<pre><code>&lt;!-- Variant Outlined (implicit) --&gt;\n&lt;FodTextField @bind-Value=\"text1\"\n              Lines=\"4\"\n              Label=\"Text cu chenar\"\n              Variant=\"FodVariant.Outlined\" /&gt;\n\n&lt;!-- Variant Filled --&gt;\n&lt;FodTextField @bind-Value=\"text2\"\n              Lines=\"4\"\n              Label=\"Text cu fundal\"\n              Variant=\"FodVariant.Filled\" /&gt;\n\n&lt;!-- Variant Underline --&gt;\n&lt;FodTextField @bind-Value=\"text3\"\n              Lines=\"4\"\n              Label=\"Text cu linie\"\n              Variant=\"FodVariant.Underline\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#fodtextarea-pentru-feedback","title":"FodTextArea pentru feedback","text":"<pre><code>&lt;FodTextArea @bind-Value=\"feedbackMessage\"\n             MaxLength=\"500\"\n             Placeholder=\"\u00cemp\u0103rt\u0103\u0219i\u021bi-ne p\u0103rerea dvs...\"\n             SpellCheck=\"false\"\n             Label=\"Mesajul dvs.\"\n             Class=\"form-control resize-none bg-white-gray rounded-4\"\n             ErrorRawLabel=\"@GetErrorMessage()\" /&gt;\n\n@code {\n    private string feedbackMessage = string.Empty;\n\n    private string GetErrorMessage()\n    {\n        if (feedbackMessage.Length &gt; 500)\n            return $\"A\u021bi dep\u0103\u0219it limita cu {feedbackMessage.Length - 500} caractere&lt;br/&gt;V\u0103 rug\u0103m s\u0103 scurta\u021bi mesajul\";\n        return string.Empty;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-adornments","title":"TextArea cu adornments","text":"<pre><code>&lt;FodTextField @bind-Value=\"address\"\n              Lines=\"3\"\n              Label=\"Adres\u0103 complet\u0103\"\n              Adornment=\"Adornment.Start\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.LocationOn\"\n              HelperText=\"Include\u021bi strada, num\u0103rul, ora\u0219ul \u0219i codul po\u0219tal\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-readonly-si-disabled","title":"TextArea readonly \u0219i disabled","text":"<pre><code>&lt;!-- Readonly - utilizatorul poate selecta textul dar nu-l poate modifica --&gt;\n&lt;FodTextField Value=\"Text readonly care poate fi selectat \u0219i copiat\"\n              Lines=\"4\"\n              Label=\"Termen \u0219i condi\u021bii\"\n              ReadOnly=\"true\" /&gt;\n\n&lt;!-- Disabled - complet dezactivat --&gt;\n&lt;FodTextField Value=\"Text dezactivat\"\n              Lines=\"4\"\n              Label=\"C\u00e2mp inactiv\"\n              Disabled=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-actualizare-imediata","title":"TextArea cu actualizare imediat\u0103","text":"<pre><code>&lt;FodTextField @bind-Value=\"liveText\"\n              Lines=\"4\"\n              Label=\"Text live\"\n              Immediate=\"true\"\n              OnValueChanged=\"@((string value) =&gt; HandleLiveUpdate(value))\" /&gt;\n\n&lt;div class=\"mt-2\"&gt;\n    &lt;small&gt;Caractere: @liveText.Length&lt;/small&gt;\n&lt;/div&gt;\n\n@code {\n    private string liveText = string.Empty;\n\n    private void HandleLiveUpdate(string value)\n    {\n        Console.WriteLine($\"Text actualizat: {value}\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-cu-validare-personalizata","title":"TextArea cu validare personalizat\u0103","text":"<pre><code>&lt;FodTextField @bind-Value=\"customText\"\n              Lines=\"5\"\n              Label=\"Text cu validare special\u0103\"\n              ValidationFunc=\"@ValidateNoUrls\"\n              HelperText=\"Nu sunt permise URL-uri \u00een text\" /&gt;\n\n@code {\n    private string customText = string.Empty;\n\n    private string ValidateNoUrls(string value)\n    {\n        if (string.IsNullOrEmpty(value))\n            return null;\n\n        var urlPattern = @\"https?://|www\\.\";\n        if (System.Text.RegularExpressions.Regex.IsMatch(value, urlPattern))\n            return \"Textul nu poate con\u021bine URL-uri\";\n\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#textarea-in-dialog-modal","title":"TextArea \u00een dialog modal","text":"<pre><code>&lt;FodModal Show=\"showModal\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h5\"&gt;Adaug\u0103 comentariu&lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodTextField @bind-Value=\"modalComment\"\n                          Lines=\"6\"\n                          Label=\"Comentariu\"\n                          Counter=\"300\"\n                          Required=\"true\"\n                          AutoFocus=\"true\" /&gt;\n        &lt;/FodModalBody&gt;\n        &lt;FodModalFooter&gt;\n            &lt;FodButton OnClick=\"SaveComment\" \n                       Variant=\"FodVariant.Filled\" \n                       Color=\"FodColor.Primary\"&gt;\n                Salveaz\u0103\n            &lt;/FodButton&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; showModal = false)\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodModalFooter&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#3-atribute-disponibile","title":"3. Atribute disponibile","text":""},{"location":"fod/componente/FodTextArea/#fodtextfield-cu-lines-1","title":"FodTextField (cu Lines &gt; 1)","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Lines</code> <code>int</code> Num\u0103rul de r\u00e2nduri vizibile <code>1</code> <code>Value</code> <code>string</code> Valoarea textului <code>string.Empty</code> <code>Label</code> <code>string</code> Eticheta c\u00e2mpului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder <code>null</code> <code>HelperText</code> <code>string</code> Text ajut\u0103tor sub c\u00e2mp <code>null</code> <code>Counter</code> <code>int?</code> Afi\u0219eaz\u0103 contor caractere <code>null</code> <code>MaxLength</code> <code>int</code> Lungime maxim\u0103 text <code>524288</code> <code>Required</code> <code>bool</code> C\u00e2mp obligatoriu <code>false</code> <code>Disabled</code> <code>bool</code> Dezactiveaz\u0103 c\u00e2mpul <code>false</code> <code>ReadOnly</code> <code>bool</code> Doar citire <code>false</code> <code>Variant</code> <code>FodVariant</code> Stil vizual <code>Outlined</code> <code>Immediate</code> <code>bool</code> Actualizare la fiecare tast\u0103 <code>false</code> <code>AutoFocus</code> <code>bool</code> Focus automat <code>false</code> <code>SpellCheck</code> <code>bool?</code> Verificare ortografic\u0103 <code>null</code> <code>ValidationFunc</code> <code>Func&lt;string, string&gt;</code> Func\u021bie validare custom <code>null</code>"},{"location":"fod/componente/FodTextArea/#fodtextarea","title":"FodTextArea","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>string</code> Valoarea textului <code>string.Empty</code> <code>Label</code> <code>string</code> Eticheta c\u00e2mpului <code>null</code> <code>Placeholder</code> <code>string</code> Text placeholder <code>null</code> <code>MaxLength</code> <code>int?</code> Lungime maxim\u0103 <code>null</code> <code>SpellCheck</code> <code>bool</code> Verificare ortografic\u0103 <code>true</code> <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>ErrorRawLabel</code> <code>string</code> HTML pentru erori <code>null</code>"},{"location":"fod/componente/FodTextArea/#4-evenimente","title":"4. Evenimente","text":"Eveniment Tip Descriere <code>ValueChanged</code> <code>EventCallback&lt;string&gt;</code> La schimbarea textului <code>OnValueChanged</code> <code>EventCallback&lt;string&gt;</code> Callback dup\u0103 schimbare <code>OnBlur</code> <code>EventCallback&lt;FocusEventArgs&gt;</code> La pierderea focusului <code>OnKeyDown</code> <code>EventCallback&lt;KeyboardEventArgs&gt;</code> La ap\u0103sare tast\u0103 <code>OnKeyUp</code> <code>EventCallback&lt;KeyboardEventArgs&gt;</code> La eliberare tast\u0103"},{"location":"fod/componente/FodTextArea/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* TextArea cu \u00een\u0103l\u021bime fix\u0103 */\n.fixed-height-textarea .fod-input-root-multiline {\n    height: 200px !important;\n    overflow-y: auto;\n}\n\n/* TextArea cu resize vertical */\n.resizable-textarea .fod-input-root-multiline {\n    resize: vertical;\n    min-height: 100px;\n    max-height: 400px;\n}\n\n/* Stil personalizat pentru contor */\n.custom-counter .fod-input-helper-text {\n    text-align: right;\n    font-weight: bold;\n}\n\n/* Highlighting pentru limit\u0103 apropiat\u0103 */\n.custom-counter .fod-input-helper-text {\n    color: var(--fod-warning);\n}\n\n/* TextArea cu font monospaced pentru cod */\n.code-textarea .fod-input-root-multiline {\n    font-family: 'Consolas', 'Monaco', monospace;\n    font-size: 14px;\n    line-height: 1.5;\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#6-validare-avansata","title":"6. Validare avansat\u0103","text":"<pre><code>&lt;EditForm Model=\"model\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;!-- Validare cu atribute --&gt;\n    &lt;FodTextField @bind-Value=\"model.Content\"\n                  Lines=\"8\"\n                  Label=\"Con\u021binut articol\"\n                  Counter=\"2000\"\n                  For=\"@(() =&gt; model.Content)\" /&gt;\n\n    &lt;!-- Validare \u00een timp real --&gt;\n    &lt;FodTextField @bind-Value=\"model.Summary\"\n                  Lines=\"3\"\n                  Label=\"Rezumat\"\n                  ValidationFunc=\"@ValidateSummary\"\n                  HelperText=\"Minim 20, maxim 200 caractere\" /&gt;\n&lt;/EditForm&gt;\n\n@code {\n    public class ArticleModel\n    {\n        [Required(ErrorMessage = \"Con\u021binutul este obligatoriu\")]\n        [MinLength(100, ErrorMessage = \"Minim 100 caractere\")]\n        [MaxLength(2000, ErrorMessage = \"Maxim 2000 caractere\")]\n        public string Content { get; set; } = string.Empty;\n\n        public string Summary { get; set; } = string.Empty;\n    }\n\n    private string ValidateSummary(string value)\n    {\n        if (string.IsNullOrWhiteSpace(value))\n            return \"Rezumatul este obligatoriu\";\n        if (value.Length &lt; 20)\n            return $\"\u00cenc\u0103 {20 - value.Length} caractere\";\n        if (value.Length &gt; 200)\n            return \"Rezumatul este prea lung\";\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextArea/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodTextArea/#in-card","title":"\u00cen Card","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" Class=\"mb-3\"&gt;Las\u0103 o recenzie&lt;/FodText&gt;\n        &lt;FodTextField @bind-Value=\"review.Text\"\n                      Lines=\"6\"\n                      Label=\"P\u0103rerea ta\"\n                      Counter=\"500\"\n                      Placeholder=\"Descrie experien\u021ba ta...\" /&gt;\n        &lt;FodRating @bind-Value=\"review.Rating\" Class=\"mt-3\" /&gt;\n    &lt;/FodCardContent&gt;\n    &lt;FodCardActions&gt;\n        &lt;FodButton OnClick=\"SubmitReview\" \n                   Variant=\"FodVariant.Filled\" \n                   Color=\"FodColor.Primary\"&gt;\n            Trimite recenzia\n        &lt;/FodButton&gt;\n    &lt;/FodCardActions&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodTextArea/#8-diferente-intre-fodtextfield-si-fodtextarea","title":"8. Diferen\u021be \u00eentre FodTextField \u0219i FodTextArea","text":"Caracteristic\u0103 FodTextField (Lines &gt; 1) FodTextArea Utilizare recomandat\u0103 General, toate scenariile Specializat (feedback) Func\u021bionalit\u0103\u021bi Complete Limitate Integrare formular Complet\u0103 De baz\u0103 Contor caractere Da Nu Variante stilizare Toate (Outlined, Filled, etc.) CSS custom Validare Complet\u0103 Doar MaxLength"},{"location":"fod/componente/FodTextArea/#9-note-si-observatii","title":"9. Note \u0219i observa\u021bii","text":"<ul> <li>Pentru utilizare general\u0103, folosi\u021bi <code>FodTextField</code> cu <code>Lines &gt; 1</code></li> <li><code>FodTextArea</code> este specializat pentru scenarii de feedback</li> <li>Contorul de caractere se actualizeaz\u0103 \u00een timp real</li> <li>Resize-ul manual este dezactivat implicit pentru consisten\u021b\u0103</li> <li>MaxLength implicit este foarte mare (524288) pentru a evita limit\u0103ri nedorite</li> </ul>"},{"location":"fod/componente/FodTextArea/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Label-uri asociate corect cu textarea</li> <li>Suport pentru atribute ARIA</li> <li>Navigare cu tastatur\u0103 complet\u0103</li> <li>Anun\u021buri pentru screen readers la dep\u0103\u0219irea limitei</li> </ul>"},{"location":"fod/componente/FodTextArea/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Dimensiune adecvat\u0103 - Seta\u021bi <code>Lines</code> \u00een func\u021bie de con\u021binutul a\u0219teptat</li> <li>Limite rezonabile - Folosi\u021bi <code>Counter</code> \u0219i <code>MaxLength</code> pentru a ghida utilizatorii</li> <li>Helper text - Oferi\u021bi indica\u021bii clare despre con\u021binutul a\u0219teptat</li> <li>Validare util\u0103 - Implementa\u021bi valid\u0103ri care ajut\u0103, nu frustreaz\u0103</li> <li>Placeholder descriptiv - Ajut\u0103 utilizatorii s\u0103 \u00een\u021beleag\u0103 ce s\u0103 scrie</li> <li>Feedback vizual - Folosi\u021bi contorul pentru feedback \u00een timp real</li> </ol>"},{"location":"fod/componente/FodTextArea/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodTextArea/#textarea-nu-afiseaza-toate-randurile","title":"TextArea nu afi\u0219eaz\u0103 toate r\u00e2ndurile","text":"<ul> <li>Verifica\u021bi valoarea parametrului <code>Lines</code></li> <li>Verifica\u021bi c\u0103 nu ave\u021bi CSS care suprascrie \u00een\u0103l\u021bimea</li> </ul>"},{"location":"fod/componente/FodTextArea/#contorul-nu-apare","title":"Contorul nu apare","text":"<ul> <li>Seta\u021bi parametrul <code>Counter</code> cu valoarea maxim\u0103 dorit\u0103</li> <li>Verifica\u021bi c\u0103 nu ave\u021bi CSS care ascunde helper text</li> </ul>"},{"location":"fod/componente/FodTextArea/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Pentru FodTextField, folosi\u021bi <code>For</code> parameter</li> <li>Asigura\u021bi-v\u0103 c\u0103 ave\u021bi <code>DataAnnotationsValidator</code> \u00een EditForm</li> </ul>"},{"location":"fod/componente/FodTextArea/#13-concluzie","title":"13. Concluzie","text":"<p>Sistemul de componente pentru text multilinie ofer\u0103 flexibilitate maxim\u0103 prin <code>FodTextField</code> cu parametrul <code>Lines</code>, acoperind toate scenariile de la simple note p\u00e2n\u0103 la editoare de con\u021binut complex, cu suport complet pentru validare, stilizare \u0219i integrare \u00een formulare.</p>"},{"location":"fod/componente/FodTextField/","title":"FodTextField","text":""},{"location":"fod/componente/FodTextField/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodTextField&lt;T&gt;</code> este o component\u0103 avansat\u0103 de input text \u00een Blazor care extinde func\u021bionalit\u0103\u021bile standard cu suport pentru debouncing, m\u0103\u0219ti de input, validare, adornments \u0219i multe alte caracteristici. Este componenta principal\u0103 pentru majoritatea input-urilor text din aplica\u021biile FOD.</p>"},{"location":"fod/componente/FodTextField/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Generic\u0103 - Suport\u0103 orice tip de date prin convertor</li> <li>Debouncing - \u00cent\u00e2rziere configurabil\u0103 pentru actualizarea valorii</li> <li>M\u0103\u0219ti de input - Suport pentru formatare automat\u0103 (telefon, dat\u0103, etc.)</li> <li>Validare integrat\u0103 - Cu suport pentru EditContext \u0219i DataAnnotations</li> <li>Adornments - Pictograme \u0219i text adi\u021bional</li> <li>Multiple linii - Poate func\u021biona ca textarea</li> <li>Counter - Afi\u0219are num\u0103r caractere</li> <li>Clearable - Buton pentru \u0219tergere rapid\u0103</li> </ul>"},{"location":"fod/componente/FodTextField/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;FodTextField @bind-Value=\"userName\" \n              Label=\"Nume utilizator\" \n              Placeholder=\"Introduce\u021bi numele\" /&gt;\n\n@code {\n    private string userName;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>Value</code> <code>T</code> - Valoarea curent\u0103 <code>ValueChanged</code> <code>EventCallback&lt;T&gt;</code> - Eveniment pentru two-way binding <code>Label</code> <code>string</code> - Eticheta c\u00e2mpului <code>Placeholder</code> <code>string</code> - Text placeholder <code>HelperText</code> <code>string</code> - Text ajut\u0103tor sub c\u00e2mp <code>HelperTextOnFocus</code> <code>bool</code> <code>false</code> Afi\u0219eaz\u0103 helper text doar la focus <code>Variant</code> <code>Variant</code> <code>Text</code> Stilul vizual (Text, Filled, Outlined) <code>Margin</code> <code>Margin</code> <code>None</code> Spa\u021biere margin <code>InputType</code> <code>InputType</code> <code>Text</code> Tipul HTML5 de input <code>Lines</code> <code>int</code> <code>1</code> Num\u0103r de linii pentru textarea <code>MaxLength</code> <code>int?</code> - Lungime maxim\u0103 <code>Counter</code> <code>int?</code> - Afi\u0219eaz\u0103 counter caractere <code>Disabled</code> <code>bool</code> <code>false</code> Dezactiveaz\u0103 c\u00e2mpul <code>ReadOnly</code> <code>bool</code> <code>false</code> Doar citire <code>Required</code> <code>bool</code> <code>false</code> C\u00e2mp obligatoriu <code>Error</code> <code>bool</code> <code>false</code> Stare de eroare <code>ErrorText</code> <code>string</code> - Mesaj de eroare <code>Immediate</code> <code>bool</code> <code>false</code> Actualizare imediat\u0103 (la fiecare tast\u0103) <code>DebounceInterval</code> <code>double</code> <code>0</code> Interval debounce \u00een ms <code>Clearable</code> <code>bool</code> <code>false</code> Afi\u0219eaz\u0103 buton de \u0219tergere <code>Mask</code> <code>IMask</code> - Masc\u0103 de formatare <code>Pattern</code> <code>string</code> - Pattern HTML5 pentru validare <code>Adornment</code> <code>Adornment</code> <code>None</code> Pozi\u021bie adornment (Start/End) <code>AdornmentIcon</code> <code>string</code> - Pictogram\u0103 pentru adornment <code>AdornmentText</code> <code>string</code> - Text pentru adornment <code>AdornmentColor</code> <code>FodColor</code> <code>Default</code> Culoare adornment <code>OnAdornmentClick</code> <code>EventCallback</code> - Click pe adornment <code>TextUpdateSuppression</code> <code>bool</code> <code>true</code> Suprim\u0103 actualizarea \u00een timpul tast\u0103rii <code>OnDebounceIntervalElapsed</code> <code>EventCallback&lt;string&gt;</code> - Callback dup\u0103 debounce"},{"location":"fod/componente/FodTextField/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodTextField/#input-text-simplu","title":"Input Text Simplu","text":"<pre><code>&lt;FodTextField @bind-Value=\"firstName\" \n              Label=\"Prenume\" \n              Required=\"true\" /&gt;\n\n&lt;FodTextField @bind-Value=\"lastName\" \n              Label=\"Nume\" \n              HelperText=\"Introduce\u021bi numele de familie\" /&gt;\n\n@code {\n    private string firstName;\n    private string lastName;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-varianta-si-margin","title":"Input cu Variant\u0103 \u0219i Margin","text":"<pre><code>&lt;FodTextField @bind-Value=\"email\" \n              Label=\"Email\" \n              Variant=\"Variant.Outlined\"\n              Margin=\"Margin.Dense\"\n              InputType=\"InputType.Email\" /&gt;\n\n&lt;FodTextField @bind-Value=\"phone\" \n              Label=\"Telefon\" \n              Variant=\"Variant.Filled\"\n              Margin=\"Margin.Normal\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextField/#textarea-multi-linie","title":"Textarea Multi-linie","text":"<pre><code>&lt;FodTextField @bind-Value=\"description\" \n              Label=\"Descriere\" \n              Lines=\"5\"\n              MaxLength=\"500\"\n              Counter=\"500\"\n              HelperText=\"Maxim 500 caractere\" /&gt;\n\n@code {\n    private string description;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-debouncing","title":"Input cu Debouncing","text":"<pre><code>&lt;FodTextField @bind-Value=\"searchTerm\" \n              Label=\"C\u0103utare\" \n              Placeholder=\"Introduce\u021bi termenii de c\u0103utare...\"\n              DebounceInterval=\"500\"\n              OnDebounceIntervalElapsed=\"@PerformSearch\"\n              Immediate=\"true\" /&gt;\n\n@code {\n    private string searchTerm;\n\n    private async Task PerformSearch(string value)\n    {\n        // Execut\u0103 c\u0103utarea dup\u0103 500ms de la ultima tastare\n        await SearchService.SearchAsync(value);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-masca","title":"Input cu Masc\u0103","text":"<pre><code>&lt;!-- Masc\u0103 pentru telefon --&gt;\n&lt;FodTextField @bind-Value=\"phoneNumber\" \n              Label=\"Num\u0103r telefon\" \n              Mask=\"@(new PatternMask(\"0000 000 000\"))\" /&gt;\n\n&lt;!-- Masc\u0103 pentru dat\u0103 --&gt;\n&lt;FodTextField @bind-Value=\"birthDate\" \n              Label=\"Data na\u0219terii\" \n              Mask=\"@(new DateMask(\"dd/MM/yyyy\"))\" /&gt;\n\n&lt;!-- Masc\u0103 pentru card bancar --&gt;\n&lt;FodTextField @bind-Value=\"cardNumber\" \n              Label=\"Num\u0103r card\" \n              Mask=\"@(new PatternMask(\"0000 0000 0000 0000\"))\" /&gt;\n\n@code {\n    private string phoneNumber;\n    private string birthDate;\n    private string cardNumber;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-adornments","title":"Input cu Adornments","text":"<pre><code>&lt;!-- Adornment la \u00eenceput --&gt;\n&lt;FodTextField @bind-Value=\"amount\" \n              Label=\"Suma\" \n              Adornment=\"Adornment.Start\"\n              AdornmentText=\"MDL\" /&gt;\n\n&lt;!-- Adornment la sf\u00e2r\u0219it cu pictogram\u0103 --&gt;\n&lt;FodTextField @bind-Value=\"password\" \n              Label=\"Parol\u0103\" \n              InputType=\"@passwordInputType\"\n              Adornment=\"Adornment.End\"\n              AdornmentIcon=\"@passwordIcon\"\n              OnAdornmentClick=\"TogglePasswordVisibility\" /&gt;\n\n&lt;!-- Adornment pentru c\u0103utare --&gt;\n&lt;FodTextField @bind-Value=\"search\" \n              Label=\"C\u0103utare\" \n              Adornment=\"Adornment.Start\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n              AdornmentColor=\"FodColor.Primary\" /&gt;\n\n@code {\n    private decimal amount;\n    private string password;\n    private string search;\n    private InputType passwordInputType = InputType.Password;\n    private string passwordIcon = FodIcons.Material.Filled.Visibility;\n\n    private void TogglePasswordVisibility()\n    {\n        if (passwordInputType == InputType.Password)\n        {\n            passwordInputType = InputType.Text;\n            passwordIcon = FodIcons.Material.Filled.VisibilityOff;\n        }\n        else\n        {\n            passwordInputType = InputType.Password;\n            passwordIcon = FodIcons.Material.Filled.Visibility;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-validare","title":"Input cu Validare","text":"<pre><code>&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodTextField @bind-Value=\"model.Email\" \n                  Label=\"Email\" \n                  Required=\"true\"\n                  InputType=\"InputType.Email\" /&gt;\n\n    &lt;FodTextField @bind-Value=\"model.Username\" \n                  Label=\"Nume utilizator\" \n                  Pattern=\"^[a-zA-Z0-9_]{3,20}$\"\n                  HelperText=\"3-20 caractere, litere, cifre \u0219i _\" /&gt;\n\n    &lt;FodTextField @bind-Value=\"model.Age\" \n                  Label=\"V\u00e2rst\u0103\" \n                  InputType=\"InputType.Number\" /&gt;\n\n    &lt;FodButton Type=\"ButtonType.Submit\"&gt;Trimite&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private UserModel model = new();\n\n    public class UserModel\n    {\n        [Required(ErrorMessage = \"Email-ul este obligatoriu\")]\n        [EmailAddress(ErrorMessage = \"Email invalid\")]\n        public string Email { get; set; }\n\n        [Required(ErrorMessage = \"Username-ul este obligatoriu\")]\n        [RegularExpression(\"^[a-zA-Z0-9_]{3,20}$\", \n            ErrorMessage = \"Username invalid\")]\n        public string Username { get; set; }\n\n        [Range(18, 120, ErrorMessage = \"V\u00e2rsta trebuie s\u0103 fie \u00eentre 18 \u0219i 120\")]\n        public int Age { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-clearable","title":"Input Clearable","text":"<pre><code>&lt;FodTextField @bind-Value=\"searchQuery\" \n              Label=\"C\u0103utare rapid\u0103\" \n              Clearable=\"true\"\n              OnClearButtonClick=\"@OnSearchCleared\"\n              Adornment=\"Adornment.Start\"\n              AdornmentIcon=\"@FodIcons.Material.Filled.Search\" /&gt;\n\n@code {\n    private string searchQuery;\n\n    private void OnSearchCleared(MouseEventArgs args)\n    {\n        // Logic\u0103 adi\u021bional\u0103 dup\u0103 \u0219tergere\n        Console.WriteLine(\"C\u0103utarea a fost \u0219tears\u0103\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#formular-complex","title":"Formular Complex","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.FirstName\" \n                      Label=\"Prenume\" \n                      Required=\"true\"\n                      Variant=\"Variant.Outlined\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.LastName\" \n                      Label=\"Nume\" \n                      Required=\"true\"\n                      Variant=\"Variant.Outlined\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.Email\" \n                      Label=\"Email\" \n                      InputType=\"InputType.Email\"\n                      Required=\"true\"\n                      Variant=\"Variant.Outlined\"\n                      HelperText=\"Vom folosi email-ul pentru confirmare\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.Phone\" \n                      Label=\"Telefon\" \n                      Mask=\"@(new PatternMask(\"+373 00 000 000\"))\"\n                      Variant=\"Variant.Outlined\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.BirthDate\" \n                      Label=\"Data na\u0219terii\" \n                      InputType=\"InputType.Date\"\n                      Variant=\"Variant.Outlined\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.Address\" \n                      Label=\"Adres\u0103\" \n                      Lines=\"2\"\n                      Variant=\"Variant.Outlined\" /&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n        &lt;FodTextField @bind-Value=\"contact.Notes\" \n                      Label=\"Note adi\u021bionale\" \n                      Lines=\"4\"\n                      MaxLength=\"1000\"\n                      Counter=\"1000\"\n                      Variant=\"Variant.Outlined\"\n                      HelperTextOnFocus=\"true\"\n                      HelperText=\"Introduce\u021bi orice informa\u021bii relevante\" /&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/FodTextField/#input-cu-focus-programatic","title":"Input cu Focus Programatic","text":"<pre><code>&lt;FodTextField @ref=\"nameField\"\n              @bind-Value=\"name\" \n              Label=\"Nume complet\" /&gt;\n\n&lt;FodButton OnClick=\"FocusNameField\"&gt;\n    Focus pe c\u00e2mpul nume\n&lt;/FodButton&gt;\n\n&lt;FodButton OnClick=\"SelectAllText\"&gt;\n    Selecteaz\u0103 tot textul\n&lt;/FodButton&gt;\n\n@code {\n    private FodTextField&lt;string&gt; nameField;\n    private string name;\n\n    private async Task FocusNameField()\n    {\n        await nameField.FocusAsync();\n    }\n\n    private async Task SelectAllText()\n    {\n        await nameField.SelectAsync();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#different-input-types","title":"Different Input Types","text":"<pre><code>&lt;!-- Numeric --&gt;\n&lt;FodTextField @bind-Value=\"quantity\" \n              Label=\"Cantitate\" \n              InputType=\"InputType.Number\" /&gt;\n\n&lt;!-- URL --&gt;\n&lt;FodTextField @bind-Value=\"website\" \n              Label=\"Website\" \n              InputType=\"InputType.Url\"\n              HelperText=\"ex: https://example.com\" /&gt;\n\n&lt;!-- Color --&gt;\n&lt;FodTextField @bind-Value=\"themeColor\" \n              Label=\"Culoare tem\u0103\" \n              InputType=\"InputType.Color\" /&gt;\n\n&lt;!-- Time --&gt;\n&lt;FodTextField @bind-Value=\"meetingTime\" \n              Label=\"Ora \u00eent\u00e2lnirii\" \n              InputType=\"InputType.Time\" /&gt;\n\n&lt;!-- Month --&gt;\n&lt;FodTextField @bind-Value=\"selectedMonth\" \n              Label=\"Luna\" \n              InputType=\"InputType.Month\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextField/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodTextField/#clase-css-generate","title":"Clase CSS Generate","text":"<pre><code>.fod-textfield\n.fod-input-control\n.fod-input-control-margin-dense\n.fod-input-control-margin-normal\n.fod-input-control-margin-none\n.fod-textfield-error\n.fod-textfield-disabled\n</code></pre>"},{"location":"fod/componente/FodTextField/#personalizare","title":"Personalizare","text":"<pre><code>/* Input personalizat */\n.custom-textfield .fod-input-input {\n    font-family: 'Courier New', monospace;\n    letter-spacing: 2px;\n}\n\n/* Helper text stilizat */\n.custom-textfield .fod-input-helper-text {\n    font-style: italic;\n    color: var(--fod-palette-info-main);\n}\n\n/* Adornment personalizat */\n.custom-textfield .fod-input-adornment {\n    color: var(--fod-palette-primary-main);\n    font-weight: bold;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#functionalitati-avansate","title":"Func\u021bionalit\u0103\u021bi Avansate","text":""},{"location":"fod/componente/FodTextField/#conversie-automata-de-tip","title":"Conversie Automat\u0103 de Tip","text":"<pre><code>&lt;!-- String la num\u0103r --&gt;\n&lt;FodTextField @bind-Value=\"age\" Label=\"V\u00e2rst\u0103\" /&gt;\n\n&lt;!-- String la dat\u0103 --&gt;\n&lt;FodTextField @bind-Value=\"birthDate\" \n              Label=\"Data na\u0219terii\" \n              InputType=\"InputType.Date\" /&gt;\n\n&lt;!-- String la boolean --&gt;\n&lt;FodTextField @bind-Value=\"isActive\" \n              Label=\"Activ (true/false)\" /&gt;\n\n@code {\n    private int age;\n    private DateTime birthDate;\n    private bool isActive;\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#validare-customizata","title":"Validare Customizat\u0103","text":"<pre><code>&lt;FodTextField @bind-Value=\"idnp\" \n              Label=\"IDNP\" \n              Validation=\"@ValidateIDNP\"\n              HelperText=\"13 cifre\" /&gt;\n\n@code {\n    private string idnp;\n\n    private IEnumerable&lt;string&gt; ValidateIDNP(string value)\n    {\n        if (string.IsNullOrEmpty(value))\n            yield return \"IDNP este obligatoriu\";\n        else if (value.Length != 13)\n            yield return \"IDNP trebuie s\u0103 aib\u0103 13 cifre\";\n        else if (!value.All(char.IsDigit))\n            yield return \"IDNP poate con\u021bine doar cifre\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextField/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi Label descriptiv - Ajut\u0103 utilizatorii s\u0103 \u00een\u021beleag\u0103 ce s\u0103 introduc\u0103</li> <li>Ad\u0103uga\u021bi HelperText - Pentru instruc\u021biuni suplimentare</li> <li>Validare clar\u0103 - Mesaje de eroare specifice</li> <li>Debouncing pentru c\u0103utare - Evita\u021bi request-uri excesive</li> <li>M\u0103\u0219ti pentru formate specifice - Telefoane, date, carduri</li> <li>Placeholder doar c\u00e2nd necesar - Nu duplica\u021bi Label-ul</li> </ol>"},{"location":"fod/componente/FodTextField/#accesibilitate","title":"Accesibilitate","text":"<ul> <li>Suport complet pentru screen readers</li> <li>Navigare cu tastatura</li> <li>ARIA labels automate</li> <li>Asociere label-input corect\u0103</li> </ul>"},{"location":"fod/componente/FodTextField/#performanta","title":"Performan\u021b\u0103","text":"<ul> <li>Debouncing reduce re-render-urile</li> <li>TextUpdateSuppression optimizeaz\u0103 actualiz\u0103rile</li> <li>Lazy loading pentru m\u0103\u0219ti complexe</li> </ul>"},{"location":"fod/componente/FodTextField/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodTextField/#valoarea-nu-se-actualizeaza","title":"Valoarea nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi @bind-Value sintaxa</li> <li>Verifica\u021bi tipul de date \u0219i conversia</li> </ul>"},{"location":"fod/componente/FodTextField/#masca-nu-functioneaza","title":"Masca nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi formatul m\u0103\u0219tii</li> <li>Asigura\u021bi-v\u0103 c\u0103 tipul este string</li> </ul>"},{"location":"fod/componente/FodTextField/#validarea-nu-apare","title":"Validarea nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 este \u00eentr-un EditForm</li> <li>Ad\u0103uga\u021bi DataAnnotationsValidator</li> </ul>"},{"location":"fod/componente/FodTextField/#concluzie","title":"Concluzie","text":"<p>FodTextField este componenta fundamental\u0103 pentru input-uri text \u00een aplica\u021biile FOD, oferind func\u021bionalit\u0103\u021bi complete pentru orice scenariu de colectare date text. Cu suport pentru validare, m\u0103\u0219ti, debouncing \u0219i multe alte caracteristici, acoper\u0103 toate nevoile moderne de formulare web.</p>"},{"location":"fod/componente/FodTextbox/","title":"FodTextbox","text":""},{"location":"fod/componente/FodTextbox/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodTextbox</code> este o component\u0103 simpl\u0103 de input text care extinde <code>FODInput</code>. Ofer\u0103 func\u021bionalitatea de baz\u0103 pentru introducerea textului, fiind o alternativ\u0103 minimalist\u0103 la componente mai complexe precum <code>FODInputText</code>.</p>"},{"location":"fod/componente/FodTextbox/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- Textbox simplu --&gt;\n&lt;FodTextbox @bind-Value=\"text\" /&gt;\n\n&lt;!-- Textbox cu label --&gt;\n&lt;FodTextbox @bind-Value=\"name\" Label=\"Nume\" /&gt;\n\n&lt;!-- Textbox cu CSS personalizat --&gt;\n&lt;FodTextbox @bind-Value=\"email\" \n            CssClass=\"custom-input\" \n            Label=\"Email\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextbox/#diferenta-fata-de-fodinputtext","title":"Diferen\u021ba fa\u021b\u0103 de FODInputText","text":"Caracteristic\u0103 FodTextbox FODInputText Complexitate Simpl\u0103 Complet\u0103 Validare integrat\u0103 Nu Da (EditForm) Wrapper Nu FODInputWrapper Localizare erori Nu Da Loading state Nu Da Atribute IDNP/IDNO Nu Da"},{"location":"fod/componente/FodTextbox/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodTextbox/#input-text-simplu","title":"Input Text Simplu","text":"<pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;FodTextbox @bind-Value=\"username\" \n                Label=\"Nume utilizator\" /&gt;\n    &lt;p&gt;Valoare curent\u0103: @username&lt;/p&gt;\n&lt;/div&gt;\n\n@code {\n    private string username = \"\";\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#formular-de-contact","title":"Formular de Contact","text":"<pre><code>&lt;div class=\"contact-form\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"contactName\" \n                    Label=\"Nume complet\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"contactEmail\" \n                    Label=\"Email\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"contactPhone\" \n                    Label=\"Telefon\" /&gt;\n    &lt;/div&gt;\n\n    &lt;button @onclick=\"SubmitContact\" class=\"btn btn-primary\"&gt;\n        Trimite\n    &lt;/button&gt;\n&lt;/div&gt;\n\n@code {\n    private string contactName = \"\";\n    private string contactEmail = \"\";\n    private string contactPhone = \"\";\n\n    private void SubmitContact()\n    {\n        // Procesare date contact\n        Console.WriteLine($\"Contact: {contactName}, {contactEmail}, {contactPhone}\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#input-cu-validare-manuala","title":"Input cu Validare Manual\u0103","text":"<pre><code>&lt;div class=\"validated-input\"&gt;\n    &lt;FodTextbox @bind-Value=\"inputValue\" \n                Label=\"Cod produs\"\n                @bind-Value:after=\"ValidateInput\" /&gt;\n\n    @if (!string.IsNullOrEmpty(validationMessage))\n    {\n        &lt;div class=\"text-danger mt-1\"&gt;@validationMessage&lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string inputValue = \"\";\n    private string validationMessage = \"\";\n\n    private void ValidateInput()\n    {\n        validationMessage = \"\";\n\n        if (string.IsNullOrWhiteSpace(inputValue))\n        {\n            validationMessage = \"Codul este obligatoriu\";\n        }\n        else if (inputValue.Length &lt; 5)\n        {\n            validationMessage = \"Codul trebuie s\u0103 aib\u0103 minim 5 caractere\";\n        }\n        else if (!System.Text.RegularExpressions.Regex.IsMatch(inputValue, @\"^[A-Z0-9]+$\"))\n        {\n            validationMessage = \"Codul poate con\u021bine doar litere mari \u0219i cifre\";\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#cautare-simpla","title":"C\u0103utare Simpl\u0103","text":"<pre><code>&lt;div class=\"search-box\"&gt;\n    &lt;div class=\"input-group\"&gt;\n        &lt;FodTextbox @bind-Value=\"searchTerm\" \n                    CssClass=\"form-control\"\n                    @onkeyup=\"@(async (e) =&gt; { if (e.Key == \"Enter\") await Search(); })\" /&gt;\n        &lt;button class=\"btn btn-primary\" @onclick=\"Search\"&gt;\n            &lt;i class=\"fas fa-search\"&gt;&lt;/i&gt; Caut\u0103\n        &lt;/button&gt;\n    &lt;/div&gt;\n\n    @if (searchResults.Any())\n    {\n        &lt;ul class=\"search-results mt-3\"&gt;\n            @foreach (var result in searchResults)\n            {\n                &lt;li&gt;@result&lt;/li&gt;\n            }\n        &lt;/ul&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string searchTerm = \"\";\n    private List&lt;string&gt; searchResults = new();\n\n    private async Task Search()\n    {\n        if (!string.IsNullOrWhiteSpace(searchTerm))\n        {\n            // Simulare c\u0103utare\n            await Task.Delay(500);\n            searchResults = new List&lt;string&gt;\n            {\n                $\"Rezultat 1 pentru '{searchTerm}'\",\n                $\"Rezultat 2 pentru '{searchTerm}'\",\n                $\"Rezultat 3 pentru '{searchTerm}'\"\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#input-cu-formatare","title":"Input cu Formatare","text":"<pre><code>&lt;div class=\"formatted-inputs\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"upperCaseText\" \n                    Label=\"Text majuscule\"\n                    @bind-Value:after=\"() =&gt; upperCaseText = upperCaseText?.ToUpper()\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"trimmedText\" \n                    Label=\"Text f\u0103r\u0103 spa\u021bii\"\n                    @bind-Value:after=\"() =&gt; trimmedText = trimmedText?.Trim()\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;FodTextbox @bind-Value=\"maskedPhone\" \n                    Label=\"Telefon formatat\"\n                    @bind-Value:after=\"FormatPhone\" /&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string upperCaseText = \"\";\n    private string trimmedText = \"\";\n    private string maskedPhone = \"\";\n\n    private void FormatPhone()\n    {\n        if (!string.IsNullOrEmpty(maskedPhone))\n        {\n            var digits = new string(maskedPhone.Where(char.IsDigit).ToArray());\n            if (digits.Length &gt;= 9)\n            {\n                maskedPhone = $\"+373 {digits.Substring(0, 2)} {digits.Substring(2, 3)} {digits.Substring(5)}\";\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#grupare-de-input-uri","title":"Grupare de Input-uri","text":"<pre><code>&lt;div class=\"address-form\"&gt;\n    &lt;h4&gt;Adresa de livrare&lt;/h4&gt;\n\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-8\"&gt;\n            &lt;FodTextbox @bind-Value=\"address.Street\" \n                        Label=\"Strada\" /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodTextbox @bind-Value=\"address.Number\" \n                        Label=\"Num\u0103r\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"row mt-3\"&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodTextbox @bind-Value=\"address.Block\" \n                        Label=\"Bloc\" /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodTextbox @bind-Value=\"address.Entrance\" \n                        Label=\"Scara\" /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;FodTextbox @bind-Value=\"address.Apartment\" \n                        Label=\"Apartament\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private Address address = new();\n\n    public class Address\n    {\n        public string Street { get; set; } = \"\";\n        public string Number { get; set; } = \"\";\n        public string Block { get; set; } = \"\";\n        public string Entrance { get; set; } = \"\";\n        public string Apartment { get; set; } = \"\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#proprietati-mostenite-de-la-fodinput","title":"Propriet\u0103\u021bi Mo\u0219tenite de la FODInput","text":"<ul> <li><code>Value</code> - Valoarea curent\u0103 (binding two-way)</li> <li><code>Label</code> - Eticheta afi\u0219at\u0103</li> <li><code>Id</code> - ID-ul elementului HTML</li> <li><code>CssClass</code> - Clase CSS pentru stilizare</li> <li><code>OnChange</code> - Eveniment la schimbare valoare</li> <li><code>ValueChanged</code> - EventCallback pentru binding</li> </ul>"},{"location":"fod/componente/FodTextbox/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodTextbox/#css-implicit","title":"CSS Implicit","text":"<pre><code>/* Stilizare de baz\u0103 pentru FodTextbox */\n.fod-textbox {\n    width: 100%;\n    padding: 8px 12px;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.fod-textbox:focus {\n    outline: none;\n    border-color: #80bdff;\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#teme-personalizate","title":"Teme Personalizate","text":"<pre><code>&lt;style&gt;\n    /* Tem\u0103 minimalist\u0103 */\n    .minimal-input {\n        border: none;\n        border-bottom: 2px solid #ddd;\n        border-radius: 0;\n        padding: 5px 0;\n        background: transparent;\n        transition: border-color 0.3s;\n    }\n\n    .minimal-input:focus {\n        border-bottom-color: #007bff;\n        box-shadow: none;\n    }\n\n    /* Tem\u0103 material */\n    .material-input {\n        border: 2px solid #e0e0e0;\n        border-radius: 8px;\n        padding: 12px 16px;\n        font-size: 16px;\n        transition: all 0.3s;\n    }\n\n    .material-input:focus {\n        border-color: #1976d2;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n&lt;/style&gt;\n\n&lt;FodTextbox @bind-Value=\"minimalValue\" \n            CssClass=\"minimal-input\" \n            Label=\"Design minimalist\" /&gt;\n\n&lt;FodTextbox @bind-Value=\"materialValue\" \n            CssClass=\"material-input\" \n            Label=\"Design material\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodTextbox/#cand-sa-folositi-fodtextbox","title":"C\u00e2nd s\u0103 Folosi\u021bi FodTextbox","text":""},{"location":"fod/componente/FodTextbox/#folositi-fodtextbox-cand","title":"Folosi\u021bi FodTextbox c\u00e2nd:","text":"<ul> <li>Ave\u021bi nevoie de un input simplu f\u0103r\u0103 validare complex\u0103</li> <li>Nu folosi\u021bi EditForm</li> <li>Vre\u021bi control total asupra valid\u0103rii</li> <li>Construi\u021bi componente custom</li> <li>Performan\u021ba este critic\u0103</li> </ul>"},{"location":"fod/componente/FodTextbox/#folositi-fodinputtext-cand","title":"Folosi\u021bi FODInputText c\u00e2nd:","text":"<ul> <li>Lucra\u021bi cu EditForm \u0219i DataAnnotations</li> <li>Ave\u021bi nevoie de validare integrat\u0103</li> <li>Folosi\u021bi atribute IDNP/IDNO/IDNV</li> <li>Ave\u021bi nevoie de loading states</li> <li>Vre\u021bi func\u021bionalit\u0103\u021bi complete</li> </ul>"},{"location":"fod/componente/FodTextbox/#integrare-cu-javascript","title":"Integrare cu JavaScript","text":"<pre><code>@inject IJSRuntime JS\n\n&lt;FodTextbox @bind-Value=\"jsValue\" \n            Id=\"jsTextbox\"\n            Label=\"Input cu JS\" /&gt;\n\n&lt;button @onclick=\"FocusInput\"&gt;Focus&lt;/button&gt;\n&lt;button @onclick=\"SelectText\"&gt;Selecteaz\u0103 tot&lt;/button&gt;\n\n@code {\n    private string jsValue = \"\";\n\n    private async Task FocusInput()\n    {\n        await JS.InvokeVoidAsync(\"document.getElementById('jsTextbox').focus\");\n    }\n\n    private async Task SelectText()\n    {\n        await JS.InvokeVoidAsync(\"document.getElementById('jsTextbox').select\");\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTextbox/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Nu are validare integrat\u0103 cu EditForm</li> <li>Nu suport\u0103 mesaje de eroare localizate automat</li> <li>Nu are indicator de loading</li> <li>Nu are wrapper pentru layout consistent</li> <li>Necesit\u0103 implementare manual\u0103 pentru func\u021bii avansate</li> </ul>"},{"location":"fod/componente/FodTextbox/#best-practices","title":"Best Practices","text":"<ol> <li>Folosi\u021bi pentru cazuri simple - Nu complica\u021bi excesiv</li> <li>Ad\u0103uga\u021bi validare c\u00e2nd e nevoie - Implementa\u021bi manual</li> <li>Stilizare consistent\u0103 - Folosi\u021bi clase CSS globale</li> <li>Accessibility - Ad\u0103uga\u021bi aria-label c\u00e2nd lipse\u0219te Label</li> <li>Performan\u021b\u0103 - Evita\u021bi re-render\u0103ri inutile</li> </ol>"},{"location":"fod/componente/FodTextbox/#concluzie","title":"Concluzie","text":"<p>FodTextbox este o component\u0103 lightweight pentru input text, ideal\u0103 pentru situa\u021bii simple unde nu este necesar\u0103 complexitatea complet\u0103 a FODInputText. Ofer\u0103 flexibilitate maxim\u0103 cu overhead minim, fiind perfect\u0103 pentru formulare simple sau componente custom.</p>"},{"location":"fod/componente/FodTh/","title":"FodTh","text":""},{"location":"fod/componente/FodTh/#documentatie-pentru-componenta-fodth","title":"Documenta\u021bie pentru componenta FodTh","text":""},{"location":"fod/componente/FodTh/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTh</code> reprezint\u0103 o celul\u0103 de header (table header) \u00eentr-un tabel. Componenta ofer\u0103 stilizare consistent\u0103 pentru header-ele de tabel \u0219i include automat atributul <code>scope=\"col\"</code> pentru accesibilitate.</p> <p>Caracteristici principale: - Semantic HTML cu <code>&lt;th&gt;</code> element - Atribut <code>scope=\"col\"</code> automat pentru accesibilitate - Stilizare consistent\u0103 cu tema FOD - Suport pentru con\u021binut complex - Integrare cu FodTableSortLabel pentru sortare - Lightweight \u0219i performant</p>"},{"location":"fod/componente/FodTh/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTh/#header-simplu","title":"Header simplu","text":"<pre><code>&lt;FodTable&gt;\n    &lt;thead&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n            &lt;FodTh&gt;Telefon&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/thead&gt;\n&lt;/FodTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#header-cu-stilizare-personalizata","title":"Header cu stilizare personalizat\u0103","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh Class=\"text-center\"&gt;Cod&lt;/FodTh&gt;\n            &lt;FodTh Class=\"text-start\"&gt;Denumire&lt;/FodTh&gt;\n            &lt;FodTh Class=\"text-end\"&gt;Pre\u021b&lt;/FodTh&gt;\n            &lt;FodTh Class=\"text-center\" Style=\"width: 100px;\"&gt;Ac\u021biuni&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul header-ului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale - <code>Style</code> <code>string</code> Stiluri inline -"},{"location":"fod/componente/FodTh/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodTh/#header-cu-sortare","title":"Header cu sortare","text":"<pre><code>&lt;FodDataTable Items=\"employees\" T=\"Employee\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" \n                                   OrderBy=\"@(e =&gt; e.Name)\"&gt;\n                    Nume\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" \n                                   OrderBy=\"@(e =&gt; e.Department)\"&gt;\n                    Departament\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel T=\"Employee\" \n                                   OrderBy=\"@(e =&gt; e.Salary)\"&gt;\n                    Salariu\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#header-cu-iconite-si-tooltip","title":"Header cu iconi\u021be \u0219i tooltip","text":"<pre><code>&lt;FodTr&gt;\n    &lt;FodTh&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" \n                     Size=\"FodSize.Small\" \n                     Class=\"me-1\" /&gt;\n            Utilizator\n        &lt;/div&gt;\n    &lt;/FodTh&gt;\n    &lt;FodTh&gt;\n        &lt;div class=\"d-flex align-items-center\"&gt;\n            Status\n            &lt;FodTooltip Text=\"Indic\u0103 starea curent\u0103 a utilizatorului\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n                         Size=\"FodSize.Small\" \n                         Class=\"ms-1\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/div&gt;\n    &lt;/FodTh&gt;\n    &lt;FodTh&gt;\n        &lt;div class=\"d-flex align-items-center justify-content-end\"&gt;\n            &lt;span&gt;Sold&lt;/span&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AccountBalance\" \n                     Size=\"FodSize.Small\" \n                     Class=\"ms-1\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodTh&gt;\n&lt;/FodTr&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#header-complex-cu-filtre","title":"Header complex cu filtre","text":"<pre><code>&lt;FodDataTable Items=\"orders\" T=\"Order\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh Style=\"vertical-align: top;\"&gt;\n                &lt;div&gt;\n                    &lt;FodTableSortLabel T=\"Order\" OrderBy=\"@(o =&gt; o.OrderNumber)\"&gt;\n                        Nr. Comand\u0103\n                    &lt;/FodTableSortLabel&gt;\n                    &lt;FodTextField @bind-Value=\"orderNumberFilter\" \n                                  Placeholder=\"Caut\u0103...\"\n                                  Dense=\"true\"\n                                  Margin=\"FodMargin.Dense\"\n                                  DebounceInterval=\"300\"\n                                  OnDebounceIntervalElapsed=\"ApplyFilters\" /&gt;\n                &lt;/div&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh Style=\"vertical-align: top;\"&gt;\n                &lt;div&gt;\n                    &lt;FodTableSortLabel T=\"Order\" OrderBy=\"@(o =&gt; o.CustomerName)\"&gt;\n                        Client\n                    &lt;/FodTableSortLabel&gt;\n                    &lt;FodSelect @bind-Value=\"customerFilter\" \n                               T=\"string\"\n                               Dense=\"true\"\n                               Margin=\"FodMargin.Dense\"\n                               ValueChanged=\"ApplyFilters\"&gt;\n                        &lt;FodSelectItem Value=\"@(\"\")\"&gt;To\u021bi&lt;/FodSelectItem&gt;\n                        @foreach (var customer in customers)\n                        {\n                            &lt;FodSelectItem Value=\"@customer\"&gt;@customer&lt;/FodSelectItem&gt;\n                        }\n                    &lt;/FodSelect&gt;\n                &lt;/div&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh Style=\"vertical-align: top;\"&gt;\n                &lt;div&gt;\n                    &lt;FodTableSortLabel T=\"Order\" OrderBy=\"@(o =&gt; o.Total)\"&gt;\n                        Total\n                    &lt;/FodTableSortLabel&gt;\n                    &lt;div class=\"d-flex gap-1\"&gt;\n                        &lt;FodTextField @bind-Value=\"minTotal\" \n                                      Type=\"number\"\n                                      Placeholder=\"Min\"\n                                      Dense=\"true\"\n                                      Style=\"width: 80px;\" /&gt;\n                        &lt;FodTextField @bind-Value=\"maxTotal\" \n                                      Type=\"number\"\n                                      Placeholder=\"Max\"\n                                      Dense=\"true\"\n                                      Style=\"width: 80px;\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private string orderNumberFilter;\n    private string customerFilter = \"\";\n    private decimal? minTotal;\n    private decimal? maxTotal;\n\n    private void ApplyFilters()\n    {\n        // Aplicare filtre\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTh/#header-cu-checkbox-pentru-selectie-totala","title":"Header cu checkbox pentru selec\u021bie total\u0103","text":"<pre><code>&lt;FodDataTable Items=\"items\" T=\"Item\" MultiSelection=\"true\" @ref=\"dataTable\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr&gt;\n            &lt;FodTh Style=\"width: 48px;\"&gt;\n                &lt;FodCheckbox @bind-Checked=\"selectAll\" \n                             CheckedChanged=\"OnSelectAllChanged\" /&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;Denumire&lt;/FodTh&gt;\n            &lt;FodTh&gt;Categorie&lt;/FodTh&gt;\n            &lt;FodTh&gt;Pre\u021b&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private FodDataTable&lt;Item&gt; dataTable;\n    private bool selectAll;\n\n    private void OnSelectAllChanged(bool value)\n    {\n        if (value)\n            dataTable.SelectAll();\n        else\n            dataTable.DeselectAll();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTh/#header-cu-actiuni-bulk","title":"Header cu ac\u021biuni bulk","text":"<pre><code>&lt;FodTr&gt;\n    &lt;FodTh colspan=\"3\"&gt;\n        &lt;div class=\"d-flex align-items-center justify-content-between\"&gt;\n            &lt;span&gt;@selectedItems.Count() elemente selectate&lt;/span&gt;\n            &lt;div&gt;\n                &lt;FodButton Size=\"FodSize.Small\" \n                           Variant=\"FodVariant.Text\"\n                           OnClick=\"ExportSelected\"&gt;\n                    Export\n                &lt;/FodButton&gt;\n                &lt;FodButton Size=\"FodSize.Small\" \n                           Variant=\"FodVariant.Text\"\n                           Color=\"FodColor.Error\"\n                           OnClick=\"DeleteSelected\"&gt;\n                    \u0218terge\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/FodTh&gt;\n&lt;/FodTr&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#5-stilizare-si-teme","title":"5. Stilizare \u0219i Teme","text":"<pre><code>/* Header cu background distinct */\n.custom-header .fod-table-cell {\n    background-color: var(--fod-palette-grey-100);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 0.5px;\n}\n\n/* Header sticky */\n.sticky-header thead th {\n    position: sticky;\n    top: 0;\n    background-color: var(--fod-palette-background-paper);\n    z-index: 10;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n/* Header cu borduri */\n.bordered-header th {\n    border-bottom: 2px solid var(--fod-palette-primary-main);\n    padding-bottom: 12px;\n}\n\n/* Header cu gradient */\n.gradient-header th {\n    background: linear-gradient(135deg, \n        var(--fod-palette-primary-light) 0%, \n        var(--fod-palette-primary-main) 100%);\n    color: white;\n}\n\n/* Header responsive */\n@media (max-width: 768px) {\n    .responsive-header th {\n        padding: 8px 4px;\n        font-size: 0.75rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTh/#6-integrare-cu-componente-fod","title":"6. Integrare cu componente FOD","text":""},{"location":"fod/componente/FodTh/#cu-fodtablesortlabel","title":"Cu FodTableSortLabel","text":"<pre><code>&lt;FodTh&gt;\n    &lt;FodTableSortLabel T=\"Product\" \n                       OrderBy=\"@(p =&gt; p.Name)\"\n                       InitialDirection=\"FodSortDirection.Ascending\"&gt;\n        Nume Produs\n    &lt;/FodTableSortLabel&gt;\n&lt;/FodTh&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#cu-fodmenu-pentru-optiuni","title":"Cu FodMenu pentru op\u021biuni","text":"<pre><code>&lt;FodTh&gt;\n    &lt;div class=\"d-flex align-items-center justify-content-between\"&gt;\n        &lt;span&gt;Coloan\u0103&lt;/span&gt;\n        &lt;FodMenu&gt;\n            &lt;ActivatorContent&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" \n                               Size=\"FodSize.Small\" /&gt;\n            &lt;/ActivatorContent&gt;\n            &lt;ChildContent&gt;\n                &lt;FodMenuItem OnClick=\"SortAscending\"&gt;\n                    Sortare cresc\u0103toare\n                &lt;/FodMenuItem&gt;\n                &lt;FodMenuItem OnClick=\"SortDescending\"&gt;\n                    Sortare descresc\u0103toare\n                &lt;/FodMenuItem&gt;\n                &lt;FodDivider /&gt;\n                &lt;FodMenuItem OnClick=\"HideColumn\"&gt;\n                    Ascunde coloan\u0103\n                &lt;/FodMenuItem&gt;\n            &lt;/ChildContent&gt;\n        &lt;/FodMenu&gt;\n    &lt;/div&gt;\n&lt;/FodTh&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#7-scenarii-comune","title":"7. Scenarii Comune","text":""},{"location":"fod/componente/FodTh/#header-pentru-tabel-financiar","title":"Header pentru tabel financiar","text":"<pre><code>&lt;thead&gt;\n    &lt;FodTr&gt;\n        &lt;FodTh rowspan=\"2\"&gt;Descriere&lt;/FodTh&gt;\n        &lt;FodTh colspan=\"4\" Class=\"text-center\"&gt;Trimestre&lt;/FodTh&gt;\n        &lt;FodTh rowspan=\"2\"&gt;Total&lt;/FodTh&gt;\n    &lt;/FodTr&gt;\n    &lt;FodTr&gt;\n        &lt;FodTh&gt;Q1&lt;/FodTh&gt;\n        &lt;FodTh&gt;Q2&lt;/FodTh&gt;\n        &lt;FodTh&gt;Q3&lt;/FodTh&gt;\n        &lt;FodTh&gt;Q4&lt;/FodTh&gt;\n    &lt;/FodTr&gt;\n&lt;/thead&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#header-cu-indicatori","title":"Header cu indicatori","text":"<pre><code>&lt;FodTh&gt;\n    &lt;div class=\"d-flex align-items-center\"&gt;\n        V\u00e2nz\u0103ri\n        @if (salesTrend &gt; 0)\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.TrendingUp\" \n                     Color=\"FodColor.Success\" \n                     Size=\"FodSize.Small\" \n                     Class=\"ms-1\" /&gt;\n        }\n        else if (salesTrend &lt; 0)\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.TrendingDown\" \n                     Color=\"FodColor.Error\" \n                     Size=\"FodSize.Small\" \n                     Class=\"ms-1\" /&gt;\n        }\n    &lt;/div&gt;\n&lt;/FodTh&gt;\n</code></pre>"},{"location":"fod/componente/FodTh/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Text concis - P\u0103stra\u021bi header-ele scurte \u0219i clare</li> <li>Aliniere consistent\u0103 - Alinia\u021bi cu con\u021binutul coloanei</li> <li>Iconi\u021be descriptive - Folosi\u021bi iconi\u021be pentru claritate</li> <li>Responsive - Adapta\u021bi pentru ecrane mici</li> <li>Accesibilitate - Include\u021bi scope \u0219i ARIA labels</li> <li>Sortare vizibil\u0103 - Indica\u021bi clar coloanele sortabile</li> </ol>"},{"location":"fod/componente/FodTh/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Componenta este foarte lightweight</li> <li>Evita\u021bi calcule \u00een render</li> <li>Pentru header-e complexe, memoiza\u021bi con\u021binutul</li> <li>Folosi\u021bi CSS pentru stilizare, nu style inline excesiv</li> </ul>"},{"location":"fod/componente/FodTh/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li><code>scope=\"col\"</code> aplicat automat</li> <li>Compatibil cu screen readers</li> <li>Suport pentru navigare cu tastatura</li> <li>Contrast adecvat pentru text</li> </ul>"},{"location":"fod/componente/FodTh/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodTh/#header-ul-nu-se-aliniaza","title":"Header-ul nu se aliniaz\u0103","text":"<ul> <li>Verifica\u021bi colspan \u0219i rowspan</li> <li>Asigura\u021bi-v\u0103 c\u0103 num\u0103rul de celule coincide</li> <li>Verifica\u021bi padding \u0219i margin</li> </ul>"},{"location":"fod/componente/FodTh/#sortarea-nu-functioneaza","title":"Sortarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi integrarea cu FodTableSortLabel</li> <li>Asigura\u021bi-v\u0103 c\u0103 DataTable are sortare activat\u0103</li> </ul>"},{"location":"fod/componente/FodTh/#stilizarea-nu-se-aplica","title":"Stilizarea nu se aplic\u0103","text":"<ul> <li>Verifica\u021bi specificitatea CSS</li> <li>Folosi\u021bi Class parameter pentru clase custom</li> <li>Verifica\u021bi c\u0103 stilurile sunt \u00eenc\u0103rcate</li> </ul>"},{"location":"fod/componente/FodTh/#12-concluzie","title":"12. Concluzie","text":"<p><code>FodTh</code> ofer\u0103 o component\u0103 simpl\u0103 dar esen\u021bial\u0103 pentru header-ele de tabel \u00een aplica\u021biile FOD. Cu suport pentru accesibilitate \u0219i flexibilitate pentru con\u021binut complex, faciliteaz\u0103 crearea de tabele profesionale \u0219i u\u0219or de utilizat.</p>"},{"location":"fod/componente/FodToolbar/","title":"Toolbar","text":""},{"location":"fod/componente/FodToolbar/#documentatie-pentru-componenta-fodtoolbar","title":"Documenta\u021bie pentru componenta FodToolbar","text":""},{"location":"fod/componente/FodToolbar/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodToolbar</code> este o component\u0103 container flexibil\u0103 pentru organizarea ac\u021biunilor \u0219i controalelor \u00eentr-o bar\u0103 orizontal\u0103. Este ideal\u0103 pentru crearea de bare de instrumente, antete de sec\u021biuni sau grup\u0103ri de butoane \u0219i controale.</p> <p>Caracteristici principale: - Layout flexibil cu suport pentru spacing - Mod compact (dense) pentru economisirea spa\u021biului - Control asupra padding-ului lateral (gutters) - Integrare perfect\u0103 cu FodSpacer pentru aliniere - Container semantic pentru ac\u021biuni grupate - Design responsive - Suport pentru orice tip de con\u021binut</p>"},{"location":"fod/componente/FodToolbar/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodToolbar/#toolbar-simplu","title":"Toolbar simplu","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" StartIcon=\"@FodIcons.Material.Filled.Add\"&gt;\n        Adaug\u0103\n    &lt;/FodButton&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" StartIcon=\"@FodIcons.Material.Filled.Edit\"&gt;\n        Editeaz\u0103\n    &lt;/FodButton&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" StartIcon=\"@FodIcons.Material.Filled.Delete\"&gt;\n        \u0218terge\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-cu-spacer-pentru-aliniere","title":"Toolbar cu spacer pentru aliniere","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" /&gt;\n    &lt;FodText Typo=\"Typo.h6\" Class=\"mx-3\"&gt;\n        Dashboard\n    &lt;/FodText&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.AccountCircle\" /&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-compact-dense","title":"Toolbar compact (dense)","text":"<pre><code>&lt;FodToolbar Dense=\"true\"&gt;\n    &lt;FodButton Size=\"FodSize.Small\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n    &lt;FodButton Size=\"FodSize.Small\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton Size=\"FodSize.Small\" Color=\"FodColor.Error\"&gt;\n        \u0218terge\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-fara-gutters","title":"Toolbar f\u0103r\u0103 gutters","text":"<pre><code>&lt;FodToolbar DisableGutters=\"true\"&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" FullWidth=\"true\"&gt;\n        Op\u021biunea 1\n    &lt;/FodButton&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" FullWidth=\"true\"&gt;\n        Op\u021biunea 2\n    &lt;/FodButton&gt;\n    &lt;FodButton Variant=\"FodVariant.Text\" FullWidth=\"true\"&gt;\n        Op\u021biunea 3\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-pentru-filtrare-si-cautare","title":"Toolbar pentru filtrare \u0219i c\u0103utare","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodTextField T=\"string\" \n                  Label=\"Caut\u0103\" \n                  Variant=\"FodVariant.Outlined\"\n                  Margin=\"Margin.Dense\"\n                  AdornmentIcon=\"@FodIcons.Material.Filled.Search\"\n                  Adornment=\"Adornment.Start\"\n                  @bind-Value=\"searchText\" /&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodSelect T=\"string\" \n               Label=\"Sorteaz\u0103 dup\u0103\" \n               Variant=\"FodVariant.Outlined\"\n               Margin=\"Margin.Dense\"\n               @bind-Value=\"sortBy\"\n               Style=\"min-width: 150px;\"&gt;\n        &lt;FodSelectItem Value=\"name\"&gt;Nume&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"date\"&gt;Dat\u0103&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"size\"&gt;Dimensiune&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FilterList\" \n                   Color=\"@(showFilters ? FodColor.Primary : FodColor.Default)\"\n                   OnClick=\"@(() =&gt; showFilters = !showFilters)\" /&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private string searchText = \"\";\n    private string sortBy = \"name\";\n    private bool showFilters = false;\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-pentru-navigare-in-pagini","title":"Toolbar pentru navigare \u00een pagini","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodText Typo=\"Typo.body2\"&gt;\n        Afi\u0219are @startItem - @endItem din @totalItems\n    &lt;/FodText&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FirstPage\" \n                   Disabled=\"@(currentPage == 1)\"\n                   OnClick=\"GoToFirstPage\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.ChevronLeft\" \n                   Disabled=\"@(currentPage == 1)\"\n                   OnClick=\"GoToPreviousPage\" /&gt;\n    &lt;FodText Typo=\"Typo.body2\" Class=\"mx-2\"&gt;\n        Pagina @currentPage din @totalPages\n    &lt;/FodText&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.ChevronRight\" \n                   Disabled=\"@(currentPage == totalPages)\"\n                   OnClick=\"GoToNextPage\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.LastPage\" \n                   Disabled=\"@(currentPage == totalPages)\"\n                   OnClick=\"GoToLastPage\" /&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private int currentPage = 1;\n    private int totalPages = 10;\n    private int itemsPerPage = 20;\n    private int totalItems = 200;\n    private int startItem =&gt; (currentPage - 1) * itemsPerPage + 1;\n    private int endItem =&gt; Math.Min(currentPage * itemsPerPage, totalItems);\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-pentru-editor-de-text","title":"Toolbar pentru editor de text","text":"<pre><code>&lt;FodToolbar Dense=\"true\"&gt;\n    &lt;FodButtonGroup Variant=\"FodVariant.Text\" Size=\"FodSize.Small\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatBold\" \n                       Color=\"@(isBold ? FodColor.Primary : FodColor.Default)\"\n                       OnClick=\"@(() =&gt; isBold = !isBold)\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatItalic\" \n                       Color=\"@(isItalic ? FodColor.Primary : FodColor.Default)\"\n                       OnClick=\"@(() =&gt; isItalic = !isItalic)\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatUnderlined\" \n                       Color=\"@(isUnderlined ? FodColor.Primary : FodColor.Default)\"\n                       OnClick=\"@(() =&gt; isUnderlined = !isUnderlined)\" /&gt;\n    &lt;/FodButtonGroup&gt;\n\n    &lt;FodDivider Orientation=\"Orientation.Vertical\" FlexItem=\"true\" Class=\"mx-2\" /&gt;\n\n    &lt;FodButtonGroup Variant=\"FodVariant.Text\" Size=\"FodSize.Small\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatAlignLeft\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatAlignCenter\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatAlignRight\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatAlignJustify\" /&gt;\n    &lt;/FodButtonGroup&gt;\n\n    &lt;FodDivider Orientation=\"Orientation.Vertical\" FlexItem=\"true\" Class=\"mx-2\" /&gt;\n\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatListBulleted\" Size=\"FodSize.Small\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatListNumbered\" Size=\"FodSize.Small\" /&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private bool isBold = false;\n    private bool isItalic = false;\n    private bool isUnderlined = false;\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-pentru-tabel","title":"Toolbar pentru tabel","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodText Typo=\"Typo.h6\"&gt;Utilizatori&lt;/FodText&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton Variant=\"FodVariant.Outlined\" \n               StartIcon=\"@FodIcons.Material.Filled.FileDownload\"&gt;\n        Export\n    &lt;/FodButton&gt;\n    &lt;FodButton Variant=\"FodVariant.Filled\" \n               Color=\"FodColor.Primary\"\n               StartIcon=\"@FodIcons.Material.Filled.Add\"&gt;\n        Adaug\u0103 utilizator\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n\n&lt;FodTable Items=\"@users\" Class=\"mt-4\"&gt;\n    &lt;!-- Con\u021binut tabel --&gt;\n&lt;/FodTable&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-cu-actiuni-contextuale","title":"Toolbar cu ac\u021biuni contextuale","text":"<pre><code>&lt;FodToolbar&gt;\n    @if (selectedItems.Any())\n    {\n        &lt;FodCheckbox Checked=\"@allSelected\" \n                     CheckedChanged=\"ToggleSelectAll\"\n                     Color=\"FodColor.Primary\" /&gt;\n        &lt;FodText Typo=\"Typo.body2\" Class=\"mx-3\"&gt;\n            @selectedItems.Count selectate\n        &lt;/FodText&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" \n                   StartIcon=\"@FodIcons.Material.Filled.Delete\"\n                   Color=\"FodColor.Error\"\n                   OnClick=\"DeleteSelected\"&gt;\n            \u0218terge\n        &lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\" \n                   StartIcon=\"@FodIcons.Material.Filled.Archive\"\n                   OnClick=\"ArchiveSelected\"&gt;\n            Arhiveaz\u0103\n        &lt;/FodButton&gt;\n    }\n    else\n    {\n        &lt;FodText Typo=\"Typo.h6\"&gt;Documente&lt;/FodText&gt;\n    }\n    &lt;FodSpacer /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.ViewList\" \n                   Color=\"@(viewMode == \"list\" ? FodColor.Primary : FodColor.Default)\"\n                   OnClick=\"@(() =&gt; viewMode = \"list\")\" /&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.ViewModule\" \n                   Color=\"@(viewMode == \"grid\" ? FodColor.Primary : FodColor.Default)\"\n                   OnClick=\"@(() =&gt; viewMode = \"grid\")\" /&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private List&lt;int&gt; selectedItems = new();\n    private bool allSelected = false;\n    private string viewMode = \"list\";\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-responsive","title":"Toolbar responsive","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodHidden Breakpoint=\"Breakpoint.SmAndUp\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                       OnClick=\"@(() =&gt; drawerOpen = true)\" /&gt;\n    &lt;/FodHidden&gt;\n\n    &lt;FodText Typo=\"Typo.h6\" Class=\"mx-3\"&gt;\n        Aplica\u021bia Mea\n    &lt;/FodText&gt;\n\n    &lt;FodHidden Breakpoint=\"Breakpoint.Xs\"&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Acas\u0103&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Despre&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Servicii&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Contact&lt;/FodButton&gt;\n    &lt;/FodHidden&gt;\n\n    &lt;FodSpacer /&gt;\n\n    &lt;FodButton Variant=\"FodVariant.Filled\" Color=\"FodColor.Primary\"&gt;\n        \u00cenregistrare\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Dense</code> <code>bool</code> Activeaz\u0103 modul compact cu padding redus <code>false</code> <code>DisableGutters</code> <code>bool</code> Dezactiveaz\u0103 padding-ul lateral <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul toolbar-ului - <code>Class</code> <code>string</code> Clase CSS adi\u021bionale <code>null</code> <code>Style</code> <code>string</code> Stiluri inline <code>null</code> <code>UserAttributes</code> <code>Dictionary&lt;string, object&gt;</code> Atribute HTML adi\u021bionale <code>null</code>"},{"location":"fod/componente/FodToolbar/#4-clase-css-generate","title":"4. Clase CSS generate","text":"Clas\u0103 Condi\u021bie Descriere <code>fod-toolbar</code> \u00centotdeauna Clasa de baz\u0103 <code>fod-toolbar-dense</code> <code>Dense=\"true\"</code> Mod compact <code>fod-toolbar-gutters</code> <code>DisableGutters=\"false\"</code> Padding lateral"},{"location":"fod/componente/FodToolbar/#5-stilizare-si-personalizare","title":"5. Stilizare \u0219i personalizare","text":"<pre><code>/* Toolbar cu \u00een\u0103l\u021bime personalizat\u0103 */\n.custom-height-toolbar {\n    min-height: 48px;\n}\n\n/* Toolbar cu fundal gradient */\n.gradient-toolbar {\n    background: linear-gradient(45deg, #3f51b5, #2196f3);\n    color: white;\n}\n\n.gradient-toolbar .fod-button {\n    color: white;\n}\n\n/* Toolbar cu umbr\u0103 */\n.elevated-toolbar {\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    background-color: white;\n    border-radius: 4px;\n    margin-bottom: 16px;\n}\n\n/* Toolbar sticky */\n.sticky-toolbar {\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    background-color: white;\n    border-bottom: 1px solid rgba(0,0,0,0.12);\n}\n\n/* Toolbar cu separatoare vizuale */\n.sectioned-toolbar &gt; *:not(:last-child) {\n    border-right: 1px solid rgba(0,0,0,0.12);\n    padding-right: 16px;\n    margin-right: 16px;\n}\n\n/* Toolbar transparent */\n.transparent-toolbar {\n    background-color: transparent;\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#6-integrare-cu-alte-componente","title":"6. Integrare cu alte componente","text":""},{"location":"fod/componente/FodToolbar/#in-appbar","title":"\u00cen AppBar","text":"<pre><code>&lt;FodAppBar&gt;\n    &lt;FodToolbar&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                       Edge=\"Edge.Start\"\n                       Color=\"FodColor.Inherit\" /&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;\n            Aplica\u021bia Mea\n        &lt;/FodText&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" \n                       Edge=\"Edge.End\"\n                       Color=\"FodColor.Inherit\" /&gt;\n    &lt;/FodToolbar&gt;\n&lt;/FodAppBar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#in-card-header","title":"\u00cen Card header","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodToolbar Class=\"pa-2\"&gt;\n        &lt;FodAvatar Size=\"FodSize.Small\"&gt;\n            &lt;FodImage Src=\"user-avatar.jpg\" /&gt;\n        &lt;/FodAvatar&gt;\n        &lt;div class=\"ml-3\"&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\"&gt;John Doe&lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                Acum 2 ore\n            &lt;/FodText&gt;\n        &lt;/div&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" Size=\"FodSize.Small\" /&gt;\n    &lt;/FodToolbar&gt;\n    &lt;FodCardContent&gt;\n        &lt;!-- Con\u021binut card --&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#in-dialog-actions","title":"\u00cen Dialog actions","text":"<pre><code>&lt;FodDialog Open=\"@dialogOpen\"&gt;\n    &lt;FodDialogTitle&gt;Confirmare&lt;/FodDialogTitle&gt;\n    &lt;FodDialogContent&gt;\n        Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 \u0219terge\u021bi acest element?\n    &lt;/FodDialogContent&gt;\n    &lt;FodDialogActions&gt;\n        &lt;FodToolbar DisableGutters=\"true\"&gt;\n            &lt;FodCheckbox @bind-Checked=\"dontAskAgain\" \n                         Label=\"Nu \u00eentreba din nou\" /&gt;\n            &lt;FodSpacer /&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; dialogOpen = false)\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Error\" Variant=\"FodVariant.Filled\"&gt;\n                \u0218terge\n            &lt;/FodButton&gt;\n        &lt;/FodToolbar&gt;\n    &lt;/FodDialogActions&gt;\n&lt;/FodDialog&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#7-patterns-comune","title":"7. Patterns comune","text":""},{"location":"fod/componente/FodToolbar/#toolbar-cu-state","title":"Toolbar cu state","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodChipSet @bind-SelectedChip=\"selectedFilter\" Mandatory=\"true\"&gt;\n        &lt;FodChip Value=\"all\"&gt;Toate&lt;/FodChip&gt;\n        &lt;FodChip Value=\"active\"&gt;Active&lt;/FodChip&gt;\n        &lt;FodChip Value=\"completed\"&gt;Finalizate&lt;/FodChip&gt;\n        &lt;FodChip Value=\"archived\"&gt;Arhivate&lt;/FodChip&gt;\n    &lt;/FodChipSet&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodBadge Content=\"@GetItemCount()\" Color=\"FodColor.Primary\" Overlap=\"false\"&gt;\n        &lt;FodText Typo=\"Typo.body2\"&gt;elemente&lt;/FodText&gt;\n    &lt;/FodBadge&gt;\n&lt;/FodToolbar&gt;\n\n@code {\n    private object selectedFilter = \"all\";\n\n    private int GetItemCount()\n    {\n        return selectedFilter switch\n        {\n            \"all\" =&gt; 156,\n            \"active\" =&gt; 89,\n            \"completed\" =&gt; 45,\n            \"archived\" =&gt; 22,\n            _ =&gt; 0\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-cu-actiuni-in-grup","title":"Toolbar cu ac\u021biuni \u00een grup","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodMenu&gt;\n        &lt;ActivatorContent&gt;\n            &lt;FodButton Variant=\"FodVariant.Outlined\" \n                       EndIcon=\"@FodIcons.Material.Filled.ArrowDropDown\"&gt;\n                Ac\u021biuni\n            &lt;/FodButton&gt;\n        &lt;/ActivatorContent&gt;\n        &lt;ChildContent&gt;\n            &lt;FodMenuItem OnClick=\"DuplicateItems\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ContentCopy\" Class=\"mr-2\" /&gt;\n                Duplic\u0103\n            &lt;/FodMenuItem&gt;\n            &lt;FodMenuItem OnClick=\"MoveItems\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.DriveFileMove\" Class=\"mr-2\" /&gt;\n                Mut\u0103\n            &lt;/FodMenuItem&gt;\n            &lt;FodMenuItem OnClick=\"ExportItems\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.FileDownload\" Class=\"mr-2\" /&gt;\n                Export\u0103\n            &lt;/FodMenuItem&gt;\n        &lt;/ChildContent&gt;\n    &lt;/FodMenu&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButtonGroup Variant=\"FodVariant.Outlined\"&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.ViewList\"&gt;List\u0103&lt;/FodButton&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.ViewModule\"&gt;Gril\u0103&lt;/FodButton&gt;\n    &lt;/FodButtonGroup&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#8-accesibilitate","title":"8. Accesibilitate","text":"<ul> <li>Folosi\u021bi <code>role=\"toolbar\"</code> pentru grupuri de controale</li> <li>Grupa\u021bi butoanele \u00eenrudite cu <code>FodButtonGroup</code></li> <li>Asigura\u021bi ordine logic\u0103 de tab pentru navigare cu tastatura</li> <li>Folosi\u021bi etichete descriptive pentru screen readers</li> </ul> <pre><code>&lt;FodToolbar UserAttributes=\"@(new Dictionary&lt;string, object&gt; { [\"role\"] = \"toolbar\" })\"&gt;\n    &lt;FodButtonGroup Variant=\"FodVariant.Text\" \n                    UserAttributes=\"@(new Dictionary&lt;string, object&gt; { [\"aria-label\"] = \"Formatare text\" })\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatBold\" \n                       aria-label=\"Bold\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatItalic\" \n                       aria-label=\"Italic\" /&gt;\n    &lt;/FodButtonGroup&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ol> <li>Layout flexibil - Folose\u0219te CSS Flexbox pentru performan\u021b\u0103</li> <li>Minimal re-renders - Structur\u0103 simpl\u0103 f\u0103r\u0103 state intern</li> <li>CSS classes - Generate o singur\u0103 dat\u0103 la ini\u021bializare</li> </ol>"},{"location":"fod/componente/FodToolbar/#10-bune-practici","title":"10. Bune practici","text":"<ol> <li>Grupare logic\u0103 - Grupa\u021bi controalele \u00eenrudite</li> <li>Spacing consistent - Folosi\u021bi FodSpacer pentru aliniere</li> <li>Dense pentru toolbars secundare - Economisi\u021bi spa\u021biu vertical</li> <li>Responsive design - Ascunde\u021bi/afi\u0219a\u021bi elemente pe diferite ecrane</li> <li>Visual hierarchy - Diferen\u021bia\u021bi ac\u021biunile principale de cele secundare</li> </ol>"},{"location":"fod/componente/FodToolbar/#11-limitari-si-consideratii","title":"11. Limit\u0103ri \u0219i considera\u021bii","text":"<ul> <li>Nu are \u00een\u0103l\u021bime fix\u0103 implicit\u0103 - se adapteaz\u0103 la con\u021binut</li> <li>Nu ofer\u0103 scroll orizontal automat pentru overflow</li> <li>Necesit\u0103 styling manual pentru fundaluri colorate</li> </ul>"},{"location":"fod/componente/FodToolbar/#12-exemple-avansate","title":"12. Exemple avansate","text":""},{"location":"fod/componente/FodToolbar/#toolbar-multi-linie","title":"Toolbar multi-linie","text":"<pre><code>&lt;div&gt;\n    &lt;FodToolbar&gt;\n        &lt;FodText Typo=\"Typo.h5\"&gt;Rapoarte&lt;/FodText&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodButton Variant=\"FodVariant.Outlined\"&gt;Set\u0103ri&lt;/FodButton&gt;\n    &lt;/FodToolbar&gt;\n    &lt;FodToolbar Dense=\"true\" Class=\"mt-2\"&gt;\n        &lt;FodChipSet Filter=\"true\" Mandatory=\"false\" Multiple=\"true\"&gt;\n            &lt;FodChip&gt;V\u00e2nz\u0103ri&lt;/FodChip&gt;\n            &lt;FodChip&gt;Marketing&lt;/FodChip&gt;\n            &lt;FodChip&gt;Financiar&lt;/FodChip&gt;\n            &lt;FodChip&gt;HR&lt;/FodChip&gt;\n        &lt;/FodChipSet&gt;\n        &lt;FodSpacer /&gt;\n        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n            Actualizat: @DateTime.Now.ToString(\"HH:mm\")\n        &lt;/FodText&gt;\n    &lt;/FodToolbar&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#toolbar-adaptiv-cu-collapse","title":"Toolbar adaptiv cu collapse","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodHidden Breakpoint=\"Breakpoint.MdAndUp\" Invert=\"true\"&gt;\n        &lt;!-- Desktop: toate op\u021biunile vizibile --&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Op\u021biune 1&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Op\u021biune 2&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Op\u021biune 3&lt;/FodButton&gt;\n        &lt;FodButton Variant=\"FodVariant.Text\"&gt;Op\u021biune 4&lt;/FodButton&gt;\n    &lt;/FodHidden&gt;\n    &lt;FodHidden Breakpoint=\"Breakpoint.MdAndUp\"&gt;\n        &lt;!-- Mobile: meniu dropdown --&gt;\n        &lt;FodMenu&gt;\n            &lt;ActivatorContent&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" /&gt;\n            &lt;/ActivatorContent&gt;\n            &lt;ChildContent&gt;\n                &lt;FodMenuItem&gt;Op\u021biune 1&lt;/FodMenuItem&gt;\n                &lt;FodMenuItem&gt;Op\u021biune 2&lt;/FodMenuItem&gt;\n                &lt;FodMenuItem&gt;Op\u021biune 3&lt;/FodMenuItem&gt;\n                &lt;FodMenuItem&gt;Op\u021biune 4&lt;/FodMenuItem&gt;\n            &lt;/ChildContent&gt;\n        &lt;/FodMenu&gt;\n    &lt;/FodHidden&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodToolbar/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodToolbar/#elementele-nu-se-aliniaza-corect","title":"Elementele nu se aliniaz\u0103 corect","text":"<ul> <li>Verifica\u021bi c\u0103 folosi\u021bi <code>FodSpacer</code> pentru spacing</li> <li>Verifica\u021bi c\u0103 elementele au <code>display: flex</code> implicit</li> </ul>"},{"location":"fod/componente/FodToolbar/#toolbar-ul-are-prea-mult-spatiu","title":"Toolbar-ul are prea mult spa\u021biu","text":"<ul> <li>Folosi\u021bi <code>Dense=\"true\"</code> pentru padding redus</li> <li>Folosi\u021bi <code>DisableGutters=\"true\"</code> pentru a elimina padding lateral</li> </ul>"},{"location":"fod/componente/FodToolbar/#overflow-pe-ecrane-mici","title":"Overflow pe ecrane mici","text":"<ul> <li>Implementa\u021bi un design responsive cu <code>FodHidden</code></li> <li>Folosi\u021bi meniuri dropdown pentru gruparea op\u021biunilor</li> </ul>"},{"location":"fod/componente/FodToolbar/#14-concluzie","title":"14. Concluzie","text":"<p><code>FodToolbar</code> este o component\u0103 esen\u021bial\u0103 pentru organizarea controalelor \u0219i ac\u021biunilor \u00een interfe\u021be Blazor. Cu op\u021biuni flexibile pentru spacing \u0219i dimensiune, se integreaz\u0103 perfect \u00een diverse contexte - de la bare de aplica\u021bie p\u00e2n\u0103 la sec\u021biuni de filtrare \u0219i controale pentru tabele. Simplitatea sa permite personalizare extensiv\u0103 p\u0103str\u00e2nd \u00een acela\u0219i timp performan\u021ba optim\u0103.</p>"},{"location":"fod/componente/FodTooltip/","title":"FodTooltip","text":""},{"location":"fod/componente/FodTooltip/#documentatie-pentru-componenta-fodtooltip","title":"Documenta\u021bie pentru componenta FodTooltip","text":""},{"location":"fod/componente/FodTooltip/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTooltip</code> este o component\u0103 avansat\u0103 pentru afi\u0219area de informa\u021bii contextuale c\u00e2nd utilizatorii interac\u021bioneaz\u0103 cu un element. Spre deosebire de componenta simpl\u0103 <code>Tooltip</code>, FodTooltip ofer\u0103 control complet asupra pozi\u021bion\u0103rii, stiliz\u0103rii \u0219i comportamentului, folosind sistemul FodPopover pentru randare.</p> <p>Caracteristici principale: - Afi\u0219are pe hover, focus sau click - Pozi\u021bionare flexibil\u0103 cu 6 op\u021biuni - Suport pentru s\u0103geat\u0103 indicator - Anima\u021bii cu durat\u0103 \u0219i \u00eent\u00e2rziere configurabile - Con\u021binut text sau RenderFragment complex - Integrare cu sistemul de culori FOD - Suport RTL (Right-to-Left) - Control programatic al vizibilit\u0103\u021bii</p>"},{"location":"fod/componente/FodTooltip/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/FodTooltip/#tooltip-simplu-cu-text","title":"Tooltip simplu cu text","text":"<pre><code>&lt;FodTooltip Text=\"Informa\u021bie util\u0103 despre acest element\"&gt;\n    &lt;FodButton Variant=\"FodVariant.Filled\"&gt;\n        Hover pentru info\n    &lt;/FodButton&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-cu-pozitionare-personalizata","title":"Tooltip cu pozi\u021bionare personalizat\u0103","text":"<pre><code>&lt;FodTooltip Text=\"Apare deasupra\" Placement=\"Placement.Top\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Info\" /&gt;\n&lt;/FodTooltip&gt;\n\n&lt;FodTooltip Text=\"Apare \u00een dreapta\" Placement=\"Placement.Right\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Help\" /&gt;\n&lt;/FodTooltip&gt;\n\n&lt;FodTooltip Text=\"Apare \u00een st\u00e2nga\" Placement=\"Placement.Left\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.QuestionMark\" /&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-cu-sageata-si-culoare","title":"Tooltip cu s\u0103geat\u0103 \u0219i culoare","text":"<pre><code>&lt;FodTooltip Text=\"Tooltip cu s\u0103geat\u0103 colorat\u0103\" \n            Arrow=\"true\" \n            Color=\"FodColor.Primary\"&gt;\n    &lt;FodChip Color=\"FodColor.Primary\"&gt;\n        Hover pentru detalii\n    &lt;/FodChip&gt;\n&lt;/FodTooltip&gt;\n\n&lt;FodTooltip Text=\"Avertizare important\u0103!\" \n            Arrow=\"true\" \n            Color=\"FodColor.Warning\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Warning\" \n             Color=\"FodColor.Warning\" /&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-cu-continut-complex","title":"Tooltip cu con\u021binut complex","text":"<pre><code>&lt;FodTooltip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodButton Variant=\"FodVariant.Outlined\"&gt;\n            Informa\u021bii detaliate\n        &lt;/FodButton&gt;\n    &lt;/ChildContent&gt;\n    &lt;TooltipContent&gt;\n        &lt;div style=\"max-width: 300px;\"&gt;\n            &lt;FodText Typo=\"Typo.subtitle2\" GutterBottom=\"true\"&gt;\n                Titlu tooltip\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Acesta este un tooltip cu con\u021binut formatat care poate include:\n            &lt;/FodText&gt;\n            &lt;ul style=\"margin: 8px 0; padding-left: 20px;\"&gt;\n                &lt;li&gt;Liste cu puncte&lt;/li&gt;\n                &lt;li&gt;Text formatat&lt;/li&gt;\n                &lt;li&gt;Iconi\u021be \u0219i imagini&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;FodLink Href=\"/help\" Color=\"FodColor.Primary\" Underline=\"Underline.Always\"&gt;\n                Afl\u0103 mai multe\n            &lt;/FodLink&gt;\n        &lt;/div&gt;\n    &lt;/TooltipContent&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-cu-intarziere","title":"Tooltip cu \u00eent\u00e2rziere","text":"<pre><code>&lt;FodTooltip Text=\"Apare dup\u0103 1 secund\u0103\" \n            Delay=\"1000\"&gt;\n    &lt;FodTextField Label=\"C\u00e2mp cu ajutor \u00eent\u00e2rziat\" /&gt;\n&lt;/FodTooltip&gt;\n\n&lt;FodTooltip Text=\"Apare instant dar dispare \u00eencet\" \n            Delay=\"0\"\n            Duration=\"500\"&gt;\n    &lt;FodButton&gt;Hover rapid&lt;/FodButton&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-declansat-pe-click","title":"Tooltip declan\u0219at pe click","text":"<pre><code>&lt;FodTooltip Text=\"Click pentru a afi\u0219a/ascunde\" \n            ShowOnClick=\"true\"\n            ShowOnHover=\"false\"\n            ShowOnFocus=\"false\"&gt;\n    &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.MoreVert\" /&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-controlat-programatic","title":"Tooltip controlat programatic","text":"<pre><code>&lt;FodTooltip @bind-IsVisible=\"tooltipVisible\" \n            Text=\"Tooltip controlat din cod\"\n            ShowOnHover=\"false\"&gt;\n    &lt;FodButton OnClick=\"ToggleTooltip\"&gt;\n        Toggle Tooltip\n    &lt;/FodButton&gt;\n&lt;/FodTooltip&gt;\n\n&lt;FodButton OnClick=\"@(() =&gt; tooltipVisible = true)\" Class=\"ml-2\"&gt;\n    Arat\u0103 Tooltip\n&lt;/FodButton&gt;\n\n&lt;FodButton OnClick=\"@(() =&gt; tooltipVisible = false)\" Class=\"ml-2\"&gt;\n    Ascunde Tooltip\n&lt;/FodButton&gt;\n\n@code {\n    private bool tooltipVisible = false;\n\n    private void ToggleTooltip()\n    {\n        tooltipVisible = !tooltipVisible;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-pentru-elemente-disabled","title":"Tooltip pentru elemente disabled","text":"<pre><code>&lt;!-- Wrapper pentru elemente disabled --&gt;\n&lt;FodTooltip Text=\"Acest buton este dezactivat temporar\"&gt;\n    &lt;span&gt;\n        &lt;FodButton Disabled=\"true\" Style=\"pointer-events: none;\"&gt;\n            Buton dezactivat\n        &lt;/FodButton&gt;\n    &lt;/span&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-inline-vs-block","title":"Tooltip inline vs block","text":"<pre><code>&lt;FodText&gt;\n    Acest text con\u021bine un \n    &lt;FodTooltip Text=\"Defini\u021bie: termen tehnic important\" \n                Inline=\"true\"\n                Color=\"FodColor.Info\"&gt;\n        &lt;span style=\"text-decoration: underline; cursor: help;\"&gt;\n            termen special\n        &lt;/span&gt;\n    &lt;/FodTooltip&gt;\n    care necesit\u0103 explica\u021bie.\n&lt;/FodText&gt;\n\n&lt;!-- Block tooltip pentru containere --&gt;\n&lt;FodTooltip Text=\"\u00centreaga sec\u021biune are informa\u021bii adi\u021bionale\" \n            Inline=\"false\"&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            Con\u021binut card cu tooltip\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-uri-in-formulare","title":"Tooltip-uri \u00een formulare","text":"<pre><code>&lt;FodForm&gt;\n    &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n            &lt;FodTooltip Text=\"Numele complet a\u0219a cum apare \u00een actul de identitate\"&gt;\n                &lt;FodTextField Label=\"Nume complet *\" \n                             Required=\"true\"\n                             FullWidth=\"true\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n            &lt;FodTooltip&gt;\n                &lt;ChildContent&gt;\n                    &lt;FodTextField Label=\"CNP/IDNP *\" \n                                 Required=\"true\"\n                                 FullWidth=\"true\" /&gt;\n                &lt;/ChildContent&gt;\n                &lt;TooltipContent&gt;\n                    &lt;div&gt;\n                        &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                            Cod Numeric Personal format din 13 cifre\n                        &lt;/FodText&gt;\n                        &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                            Exemplu: 1234567890123\n                        &lt;/FodText&gt;\n                    &lt;/div&gt;\n                &lt;/TooltipContent&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodForm&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#3-atribute-disponibile","title":"3. Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul tooltip-ului <code>string.Empty</code> <code>TooltipContent</code> <code>RenderFragment</code> Con\u021binut complex pentru tooltip <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Elementul care declan\u0219eaz\u0103 tooltip-ul - <code>Color</code> <code>FodColor</code> Culoarea tooltip-ului <code>Default</code> <code>Placement</code> <code>Placement</code> Pozi\u021bia tooltip-ului <code>Bottom</code> <code>Arrow</code> <code>bool</code> Afi\u0219eaz\u0103 s\u0103geat\u0103 indicator <code>false</code> <code>Duration</code> <code>double</code> Durata anima\u021biei (ms) <code>251</code> <code>Delay</code> <code>double</code> \u00cent\u00e2rziere \u00eenainte de afi\u0219are (ms) <code>0</code> <code>ShowOnHover</code> <code>bool</code> Afi\u0219are la hover <code>true</code> <code>ShowOnFocus</code> <code>bool</code> Afi\u0219are la focus <code>true</code> <code>ShowOnClick</code> <code>bool</code> Afi\u0219are la click <code>false</code> <code>IsVisible</code> <code>bool</code> Control programatic vizibilitate <code>false</code> <code>IsVisibleChanged</code> <code>EventCallback&lt;bool&gt;</code> Eveniment schimbare vizibilitate - <code>Inline</code> <code>bool</code> Comportament inline <code>true</code> <code>RootClass</code> <code>string</code> Clase CSS pentru container <code>null</code> <code>RootStyle</code> <code>string</code> Stiluri pentru container <code>null</code> <code>Class</code> <code>string</code> Clase CSS pentru tooltip <code>null</code> <code>Style</code> <code>string</code> Stiluri inline pentru tooltip <code>null</code>"},{"location":"fod/componente/FodTooltip/#4-enumerari","title":"4. Enumer\u0103ri","text":""},{"location":"fod/componente/FodTooltip/#placement","title":"Placement","text":"Valoare Descriere <code>Top</code> Deasupra elementului <code>Bottom</code> Sub element <code>Left</code> \u00cen st\u00e2nga elementului <code>Right</code> \u00cen dreapta elementului <code>Start</code> La \u00eenceput (st\u00e2nga \u00een LTR, dreapta \u00een RTL) <code>End</code> La sf\u00e2r\u0219it (dreapta \u00een LTR, st\u00e2nga \u00een RTL)"},{"location":"fod/componente/FodTooltip/#5-evenimente","title":"5. Evenimente","text":"Eveniment Tip Descriere <code>IsVisibleChanged</code> <code>EventCallback&lt;bool&gt;</code> Se declan\u0219eaz\u0103 c\u00e2nd se schimb\u0103 vizibilitatea"},{"location":"fod/componente/FodTooltip/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Tooltip cu fundal gradient */\n.custom-tooltip .fod-tooltip {\n    background: linear-gradient(45deg, #3f51b5, #2196f3);\n    color: white;\n}\n\n/* Tooltip cu umbr\u0103 pronun\u021bat\u0103 */\n.shadow-tooltip .fod-tooltip {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n}\n\n/* S\u0103geat\u0103 personalizat\u0103 */\n.custom-arrow.fod-tooltip-arrow::after {\n    border-width: 8px;\n}\n\n/* Tooltip cu border */\n.bordered-tooltip .fod-tooltip {\n    border: 2px solid var(--fod-palette-primary-main);\n    background: white;\n    color: var(--fod-palette-primary-main);\n}\n\n/* Anima\u021bie personalizat\u0103 */\n.animated-tooltip {\n    animation: tooltipPulse 2s infinite;\n}\n\n@keyframes tooltipPulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n}\n\n/* Tooltip responsiv */\n@media (max-width: 600px) {\n    .fod-tooltip {\n        max-width: 90vw !important;\n        font-size: 0.875rem;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTooltip/#7-integrare-cu-alte-componente","title":"7. Integrare cu alte componente","text":""},{"location":"fod/componente/FodTooltip/#in-tabele","title":"\u00cen tabele","text":"<pre><code>&lt;FodTable&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTh&gt;\n            &lt;FodTooltip Text=\"Sorteaz\u0103 dup\u0103 nume\"&gt;\n                Nume\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ArrowUpward\" \n                         Size=\"FodSize.Small\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodTh&gt;\n        &lt;FodTh&gt;\n            &lt;FodTooltip Text=\"Data ultimei actualiz\u0103ri\"&gt;\n                Modificat\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Info\" \n                         Size=\"FodSize.Small\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodTh&gt;\n    &lt;/HeaderContent&gt;\n&lt;/FodTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#in-liste","title":"\u00cen liste","text":"<pre><code>&lt;FodList&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemIcon&gt;\n            &lt;FodTooltip Text=\"Verificat \u0219i aprobat\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" \n                         Color=\"FodColor.Success\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodListItemIcon&gt;\n        &lt;FodListItemText Primary=\"Document aprobat\" /&gt;\n    &lt;/FodListItem&gt;\n    &lt;FodListItem&gt;\n        &lt;FodListItemIcon&gt;\n            &lt;FodTooltip Text=\"\u00cen a\u0219teptarea verific\u0103rii\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Schedule\" \n                         Color=\"FodColor.Warning\" /&gt;\n            &lt;/FodTooltip&gt;\n        &lt;/FodListItemIcon&gt;\n        &lt;FodListItemText Primary=\"Document \u00een procesare\" /&gt;\n    &lt;/FodListItem&gt;\n&lt;/FodList&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#in-toolbar","title":"\u00cen toolbar","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodTooltip Text=\"Salveaz\u0103 modific\u0103rile\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Save\" /&gt;\n    &lt;/FodTooltip&gt;\n    &lt;FodTooltip Text=\"Anuleaz\u0103 modific\u0103rile\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Undo\" /&gt;\n    &lt;/FodTooltip&gt;\n    &lt;FodTooltip Text=\"Ref\u0103 modific\u0103rile\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Redo\" /&gt;\n    &lt;/FodTooltip&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodTooltip Text=\"\u0218terge permanent\"&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\" \n                       Color=\"FodColor.Error\" /&gt;\n    &lt;/FodTooltip&gt;\n&lt;/FodToolbar&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#8-patterns-comune","title":"8. Patterns comune","text":""},{"location":"fod/componente/FodTooltip/#help-system-integrat","title":"Help system integrat","text":"<pre><code>@code {\n    private bool showDetailedHelp = false;\n}\n\n&lt;FodTooltip ShowOnClick=\"true\" \n            ShowOnHover=\"false\"\n            @bind-IsVisible=\"showDetailedHelp\"&gt;\n    &lt;ChildContent&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.HelpOutline\" \n                       Size=\"FodSize.Small\" /&gt;\n    &lt;/ChildContent&gt;\n    &lt;TooltipContent&gt;\n        &lt;div style=\"max-width: 400px; padding: 8px;\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Ajutor - Completare formular\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                Pentru a completa corect acest formular:\n            &lt;/FodText&gt;\n            &lt;FodList Dense=\"true\"&gt;\n                &lt;FodListItem&gt;\n                    &lt;FodListItemText Primary=\"Completa\u021bi toate c\u00e2mpurile obligatorii (*)\" /&gt;\n                &lt;/FodListItem&gt;\n                &lt;FodListItem&gt;\n                    &lt;FodListItemText Primary=\"Verifica\u021bi formatul datelor introduse\" /&gt;\n                &lt;/FodListItem&gt;\n                &lt;FodListItem&gt;\n                    &lt;FodListItemText Primary=\"Salva\u021bi periodic pentru a nu pierde datele\" /&gt;\n                &lt;/FodListItem&gt;\n            &lt;/FodList&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" \n                       Size=\"FodSize.Small\"\n                       OnClick=\"@(() =&gt; showDetailedHelp = false)\"\n                       Class=\"mt-2\"&gt;\n                Am \u00een\u021beles\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/TooltipContent&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tooltip-cu-continut-dinamic","title":"Tooltip cu con\u021binut dinamic","text":"<pre><code>&lt;FodTooltip&gt;\n    &lt;ChildContent&gt;\n        &lt;FodChip Color=\"@GetStatusColor(item.Status)\"&gt;\n            @item.Status\n        &lt;/FodChip&gt;\n    &lt;/ChildContent&gt;\n    &lt;TooltipContent&gt;\n        &lt;div&gt;\n            &lt;FodText Typo=\"Typo.subtitle2\"&gt;\n                Status: @item.Status\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Ultima actualizare: @item.LastUpdate.ToString(\"dd.MM.yyyy HH:mm\")\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Responsabil: @item.AssignedTo\n            &lt;/FodText&gt;\n            @if (!string.IsNullOrEmpty(item.Notes))\n            {\n                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\" Class=\"mt-1\"&gt;\n                    Note: @item.Notes\n                &lt;/FodText&gt;\n            }\n        &lt;/div&gt;\n    &lt;/TooltipContent&gt;\n&lt;/FodTooltip&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#9-accesibilitate","title":"9. Accesibilitate","text":"<ul> <li>Tooltip-urile sunt citite de screen readers</li> <li>Suport\u0103 navigare cu tastatura (focus triggers)</li> <li>Folosi\u021bi <code>aria-label</code> sau <code>aria-describedby</code> pentru context suplimentar</li> <li>Evita\u021bi informa\u021bii critice doar \u00een tooltip</li> </ul> <pre><code>&lt;FodTooltip Text=\"Format: +373 XX XXX XXX\"&gt;\n    &lt;FodTextField Label=\"Telefon\" \n                  aria-describedby=\"phone-format-hint\" /&gt;\n&lt;/FodTooltip&gt;\n&lt;span id=\"phone-format-hint\" class=\"sr-only\"&gt;\n    Format telefon: +373 urmat de 8 cifre\n&lt;/span&gt;\n</code></pre>"},{"location":"fod/componente/FodTooltip/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ol> <li>Lazy rendering - Tooltip-ul este randat doar c\u00e2nd devine vizibil</li> <li>Shared Popover - Folose\u0219te sistemul FodPopover pentru eficien\u021b\u0103</li> <li>Event delegation - Evenimente gestionate eficient</li> <li>Debouncing - Delay previne afi\u0219\u0103ri/ascunderi rapide</li> </ol>"},{"location":"fod/componente/FodTooltip/#11-bune-practici","title":"11. Bune practici","text":"<ol> <li>Text concis - P\u0103stra\u021bi mesajele scurte \u0219i clare</li> <li>Plasare consistent\u0103 - Folosi\u021bi aceea\u0219i plasare \u00een aplica\u021bie</li> <li>Culori semantice - Folosi\u021bi culori pentru a transmite semnifica\u021bie</li> <li>Evita\u021bi hover-only - Oferi\u021bi alternative pentru touch devices</li> <li>Testare responsive - Verifica\u021bi pe diferite dimensiuni de ecran</li> </ol>"},{"location":"fod/componente/FodTooltip/#12-limitari-si-consideratii","title":"12. Limit\u0103ri \u0219i considera\u021bii","text":"<ul> <li>Nu func\u021bioneaz\u0103 pe elemente cu <code>pointer-events: none</code></li> <li>Necesit\u0103 wrapper pentru elemente disabled</li> <li>Pozi\u021bionarea poate fi afectat\u0103 de overflow containers</li> <li>Pe mobil, hover devine tap</li> </ul>"},{"location":"fod/componente/FodTooltip/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodTooltip/#tooltip-ul-nu-apare","title":"Tooltip-ul nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 elementul copil poate primi evenimente</li> <li>Verifica\u021bi ShowOnHover/Focus/Click settings</li> <li>Verifica\u021bi c\u0103 FodPopoverProvider este prezent</li> </ul>"},{"location":"fod/componente/FodTooltip/#pozitionare-incorecta","title":"Pozi\u021bionare incorect\u0103","text":"<ul> <li>Verifica\u021bi overflow pe container-ele p\u0103rinte</li> <li>Considera\u021bi folosirea placement diferit</li> <li>Verifica\u021bi z-index conflicts</li> </ul>"},{"location":"fod/componente/FodTooltip/#tooltip-ramane-deschis","title":"Tooltip r\u0103m\u00e2ne deschis","text":"<ul> <li>Verifica\u021bi event handlers</li> <li>Folosi\u021bi IsVisible pentru control manual</li> <li>Verifica\u021bi console pentru erori JavaScript</li> </ul>"},{"location":"fod/componente/FodTooltip/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/FodTooltip/#tooltip-cu-validare-in-timp-real","title":"Tooltip cu validare \u00een timp real","text":"<pre><code>&lt;FodTooltip @bind-IsVisible=\"showValidationTooltip\"\n            Color=\"@(isValid ? FodColor.Success : FodColor.Error)\"\n            Arrow=\"true\"&gt;\n    &lt;ChildContent&gt;\n        &lt;FodTextField @bind-Value=\"email\" \n                     @oninput=\"ValidateEmail\"\n                     Label=\"Email\" /&gt;\n    &lt;/ChildContent&gt;\n    &lt;TooltipContent&gt;\n        @if (isValid)\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Check\" /&gt; Email valid\n        }\n        else\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Error\" /&gt; @validationMessage\n        }\n    &lt;/TooltipContent&gt;\n&lt;/FodTooltip&gt;\n\n@code {\n    private string email = \"\";\n    private bool isValid = false;\n    private bool showValidationTooltip = false;\n    private string validationMessage = \"\";\n\n    private void ValidateEmail(ChangeEventArgs e)\n    {\n        email = e.Value?.ToString() ?? \"\";\n        if (string.IsNullOrEmpty(email))\n        {\n            showValidationTooltip = false;\n            return;\n        }\n\n        isValid = Regex.IsMatch(email, @\"^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$\");\n        validationMessage = isValid ? \"\" : \"Format email invalid\";\n        showValidationTooltip = true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTooltip/#tour-interactiv-cu-tooltip-uri","title":"Tour interactiv cu tooltip-uri","text":"<pre><code>@if (showTour)\n{\n    &lt;FodTooltip IsVisible=\"@(tourStep == 1)\"\n                Placement=\"Placement.Bottom\"\n                Color=\"FodColor.Primary\"\n                Arrow=\"true\"&gt;\n        &lt;ChildContent&gt;\n            &lt;FodButton Id=\"tour-step-1\"&gt;Buton principal&lt;/FodButton&gt;\n        &lt;/ChildContent&gt;\n        &lt;TooltipContent&gt;\n            &lt;div style=\"width: 250px;\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle2\" Color=\"FodColor.White\"&gt;\n                    Pasul 1 din 3\n                &lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.White\"&gt;\n                    Acesta este butonul principal pentru ac\u021biuni.\n                &lt;/FodText&gt;\n                &lt;FodButton Size=\"FodSize.Small\" \n                          Color=\"FodColor.White\"\n                          OnClick=\"NextTourStep\"\n                          Class=\"mt-2\"&gt;\n                    Urm\u0103torul\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        &lt;/TooltipContent&gt;\n    &lt;/FodTooltip&gt;\n}\n\n@code {\n    private bool showTour = true;\n    private int tourStep = 1;\n\n    private void NextTourStep()\n    {\n        tourStep++;\n        if (tourStep &gt; 3)\n        {\n            showTour = false;\n            tourStep = 1;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTooltip/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodTooltip</code> este o component\u0103 esen\u021bial\u0103 pentru \u00eembun\u0103t\u0103\u021birea experien\u021bei utilizatorului prin oferirea de informa\u021bii contextuale. Cu suport pentru con\u021binut complex, pozi\u021bionare flexibil\u0103 \u0219i multiple moduri de declan\u0219are, componenta acoper\u0103 toate scenariile comune de utilizare. Integrarea cu FodPopover asigur\u0103 performan\u021b\u0103 optim\u0103 \u0219i consisten\u021b\u0103 vizual\u0103 \u00een aplica\u021bie.</p>"},{"location":"fod/componente/FodTr/","title":"FodTr","text":""},{"location":"fod/componente/FodTr/#documentatie-pentru-componenta-fodtr","title":"Documenta\u021bie pentru componenta FodTr","text":""},{"location":"fod/componente/FodTr/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodTr</code> reprezint\u0103 un r\u00e2nd de tabel \u00een <code>FodDataTable</code>. Componenta gestioneaz\u0103 selec\u021bia, editarea inline, expandarea \u0219i interac\u021biunea cu r\u00e2ndurile, oferind func\u021bionalit\u0103\u021bi avansate pentru tabele interactive.</p> <p>Caracteristici principale: - Selec\u021bie simpl\u0103 \u0219i multipl\u0103 cu checkbox - Editare inline cu validare - Expandare pentru detalii suplimentare - Evenimente click personalizabile - Suport pentru header \u0219i footer rows - Integrare cu sistemul de validare - Commit/Cancel pentru editare - Gestionare automat\u0103 a st\u0103rii</p>"},{"location":"fod/componente/FodTr/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodTr/#rand-simplu-de-tabel","title":"R\u00e2nd simplu de tabel","text":"<pre><code>&lt;FodDataTable Items=\"users\" T=\"User\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\"&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Email&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Role&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;User&gt; users = new();\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#rand-cu-selectie","title":"R\u00e2nd cu selec\u021bie","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\" MultiSelection=\"true\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsCheckable=\"true\"&gt;\n            &lt;FodTd&gt;@context.Code&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Name&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Price.ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTr/#rand-cu-editare","title":"R\u00e2nd cu editare","text":"<pre><code>&lt;FodDataTable Items=\"inventory\" T=\"InventoryItem\" EditMode=\"DataEditMode.Cell\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsEditable=\"true\"&gt;\n            &lt;FodTd&gt;@context.ProductName&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (context == editingItem)\n                {\n                    &lt;FodTextField @bind-Value=\"context.Quantity\" /&gt;\n                }\n                else\n                {\n                    @context.Quantity\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Location&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTr/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Item</code> <code>object</code> Obiectul asociat r\u00e2ndului - <code>IsCheckable</code> <code>bool</code> Afi\u0219eaz\u0103 checkbox pentru selec\u021bie <code>false</code> <code>IsChecked</code> <code>bool</code> Starea de selec\u021bie <code>false</code> <code>IsCheckedChanged</code> <code>EventCallback&lt;bool&gt;</code> Callback schimbare selec\u021bie - <code>IsEditable</code> <code>bool</code> Permite editarea r\u00e2ndului <code>false</code> <code>IsExpandable</code> <code>bool</code> Permite expandarea r\u00e2ndului <code>false</code> <code>IsHeader</code> <code>bool</code> Marcheaz\u0103 ca r\u00e2nd header <code>false</code> <code>IsFooter</code> <code>bool</code> Marcheaz\u0103 ca r\u00e2nd footer <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul r\u00e2ndului -"},{"location":"fod/componente/FodTr/#4-proprietati-din-context","title":"4. Propriet\u0103\u021bi din Context","text":"Proprietate Descriere <code>Context.Table</code> Referin\u021b\u0103 la FodDataTable p\u0103rinte <code>Context.Table.CommitEditIcon</code> Iconi\u021b\u0103 pentru salvare editare <code>Context.Table.CancelEditIcon</code> Iconi\u021b\u0103 pentru anulare editare <code>Context.Table.CommitEditTooltip</code> Tooltip salvare <code>Context.Table.CancelEditTooltip</code> Tooltip anulare <code>Context.Table.CanCancelEdit</code> Permite anularea edit\u0103rii"},{"location":"fod/componente/FodTr/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodTr/#tabel-cu-editare-completa","title":"Tabel cu editare complet\u0103","text":"<pre><code>&lt;FodDataTable @ref=\"dataTable\" Items=\"employees\" T=\"Employee\" \n              EditMode=\"DataEditMode.Cell\"\n              RowEditPreview=\"OnRowEditPreview\"\n              RowEditCommit=\"OnRowEditCommit\"\n              RowEditCancel=\"OnRowEditCancel\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsEditable=\"true\" IsCheckable=\"true\"&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.FirstName\" /&gt;\n                }\n                else\n                {\n                    @context.FirstName\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.LastName\" /&gt;\n                }\n                else\n                {\n                    @context.LastName\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodSelect @bind-Value=\"context.Department\" T=\"string\"&gt;\n                        &lt;FodSelectItem Value=\"@(\"IT\")\"&gt;IT&lt;/FodSelectItem&gt;\n                        &lt;FodSelectItem Value=\"@(\"HR\")\"&gt;HR&lt;/FodSelectItem&gt;\n                        &lt;FodSelectItem Value=\"@(\"Sales\")\"&gt;V\u00e2nz\u0103ri&lt;/FodSelectItem&gt;\n                    &lt;/FodSelect&gt;\n                }\n                else\n                {\n                    @context.Department\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.Salary\" Type=\"number\" /&gt;\n                }\n                else\n                {\n                    @context.Salary.ToString(\"C\")\n                }\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private FodDataTable&lt;Employee&gt; dataTable;\n    private List&lt;Employee&gt; employees = new();\n    private Employee originalEmployee;\n\n    private bool IsEditing(Employee employee)\n    {\n        return dataTable?._editingItem == employee;\n    }\n\n    private void OnRowEditPreview(object item)\n    {\n        var employee = item as Employee;\n        // Salv\u0103m o copie pentru revert\n        originalEmployee = employee.Clone();\n    }\n\n    private async Task OnRowEditCommit(object item)\n    {\n        var employee = item as Employee;\n        // Salv\u0103m \u00een baza de date\n        await EmployeeService.UpdateAsync(employee);\n        await ShowNotification(\"Datele au fost salvate cu succes!\");\n    }\n\n    private void OnRowEditCancel(object item)\n    {\n        var employee = item as Employee;\n        // Revert la valorile originale\n        employee.CopyFrom(originalEmployee);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#tabel-cu-randuri-expandabile","title":"Tabel cu r\u00e2nduri expandabile","text":"<pre><code>&lt;FodDataTable Items=\"orders\" T=\"Order\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsExpandable=\"true\" IsCheckable=\"true\"&gt;\n            &lt;FodTd&gt;@context.OrderNumber&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.CustomerName&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.OrderDate.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Total.ToString(\"C\")&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n\n    &lt;ChildRowContent&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"5\"&gt;\n                &lt;FodCard Elevation=\"0\" Class=\"ma-2\"&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;h5&gt;Detalii comand\u0103 #@context.OrderNumber&lt;/h5&gt;\n                        &lt;FodSimpleTable Dense=\"true\"&gt;\n                            &lt;thead&gt;\n                                &lt;tr&gt;\n                                    &lt;th&gt;Produs&lt;/th&gt;\n                                    &lt;th&gt;Cantitate&lt;/th&gt;\n                                    &lt;th&gt;Pre\u021b unitar&lt;/th&gt;\n                                    &lt;th&gt;Total&lt;/th&gt;\n                                &lt;/tr&gt;\n                            &lt;/thead&gt;\n                            &lt;tbody&gt;\n                                @foreach (var item in context.OrderItems)\n                                {\n                                    &lt;tr&gt;\n                                        &lt;td&gt;@item.ProductName&lt;/td&gt;\n                                        &lt;td&gt;@item.Quantity&lt;/td&gt;\n                                        &lt;td&gt;@item.UnitPrice.ToString(\"C\")&lt;/td&gt;\n                                        &lt;td&gt;@item.Total.ToString(\"C\")&lt;/td&gt;\n                                    &lt;/tr&gt;\n                                }\n                            &lt;/tbody&gt;\n                        &lt;/FodSimpleTable&gt;\n                    &lt;/FodCardContent&gt;\n                &lt;/FodCard&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/ChildRowContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTr/#header-si-footer-personalizate","title":"Header \u0219i Footer personalizate","text":"<pre><code>&lt;FodDataTable Items=\"salesData\" T=\"SalesRecord\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTr IsHeader=\"true\"&gt;\n            &lt;FodTh&gt;Regiune&lt;/FodTh&gt;\n            &lt;FodTh&gt;Q1&lt;/FodTh&gt;\n            &lt;FodTh&gt;Q2&lt;/FodTh&gt;\n            &lt;FodTh&gt;Q3&lt;/FodTh&gt;\n            &lt;FodTh&gt;Q4&lt;/FodTh&gt;\n            &lt;FodTh&gt;Total&lt;/FodTh&gt;\n        &lt;/FodTr&gt;\n    &lt;/HeaderContent&gt;\n\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\"&gt;\n            &lt;FodTd&gt;@context.Region&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Q1.ToString(\"N0\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Q2.ToString(\"N0\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Q3.ToString(\"N0\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Q4.ToString(\"N0\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;strong&gt;@context.Total.ToString(\"N0\")&lt;/strong&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n\n    &lt;FooterContent&gt;\n        &lt;FodTr IsFooter=\"true\"&gt;\n            &lt;FodTd&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/FodTd&gt;\n            &lt;FodTd&gt;&lt;strong&gt;@salesData.Sum(s =&gt; s.Q1).ToString(\"N0\")&lt;/strong&gt;&lt;/FodTd&gt;\n            &lt;FodTd&gt;&lt;strong&gt;@salesData.Sum(s =&gt; s.Q2).ToString(\"N0\")&lt;/strong&gt;&lt;/FodTd&gt;\n            &lt;FodTd&gt;&lt;strong&gt;@salesData.Sum(s =&gt; s.Q3).ToString(\"N0\")&lt;/strong&gt;&lt;/FodTd&gt;\n            &lt;FodTd&gt;&lt;strong&gt;@salesData.Sum(s =&gt; s.Q4).ToString(\"N0\")&lt;/strong&gt;&lt;/FodTd&gt;\n            &lt;FodTd&gt;&lt;strong&gt;@salesData.Sum(s =&gt; s.Total).ToString(\"N0\")&lt;/strong&gt;&lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/FooterContent&gt;\n&lt;/FodDataTable&gt;\n</code></pre>"},{"location":"fod/componente/FodTr/#randuri-cu-validare","title":"R\u00e2nduri cu validare","text":"<pre><code>&lt;FodDataTable Items=\"products\" T=\"Product\" EditMode=\"DataEditMode.Cell\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" IsEditable=\"true\"&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.Name\" \n                                  Required=\"true\"\n                                  Label=\"Nume produs\"\n                                  Error=\"@(!IsValidName(context.Name))\"\n                                  ErrorText=\"Numele este obligatoriu\" /&gt;\n                }\n                else\n                {\n                    @context.Name\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.Price\" \n                                  Type=\"number\"\n                                  Label=\"Pre\u021b\"\n                                  Error=\"@(context.Price &lt; 0)\"\n                                  ErrorText=\"Pre\u021bul nu poate fi negativ\" /&gt;\n                }\n                else\n                {\n                    @context.Price.ToString(\"C\")\n                }\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                @if (IsEditing(context))\n                {\n                    &lt;FodTextField @bind-Value=\"context.Stock\" \n                                  Type=\"number\"\n                                  Label=\"Stoc\"\n                                  Error=\"@(context.Stock &lt; context.MinStock)\"\n                                  ErrorText=\"@($\"Stocul minim este {context.MinStock}\")\" /&gt;\n                }\n                else\n                {\n                    @context.Stock\n                }\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool IsValidName(string name)\n    {\n        return !string.IsNullOrWhiteSpace(name);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#6-evenimente-si-callback-uri","title":"6. Evenimente \u0219i Callback-uri","text":""},{"location":"fod/componente/FodTr/#gestionare-evenimente-rand","title":"Gestionare evenimente r\u00e2nd","text":"<pre><code>&lt;FodDataTable Items=\"documents\" T=\"Document\"\n              OnRowClick=\"OnDocumentClick\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" \n               IsCheckable=\"true\"\n               @onclick=\"@(() =&gt; HandleRowClick(context))\"\n               @onclick:stopPropagation=\"true\"&gt;\n            &lt;FodTd&gt;@context.Title&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Type&lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Size&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Download\"\n                               OnClick=\"@(() =&gt; DownloadDocument(context))\"\n                               @onclick:stopPropagation=\"true\" /&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private async Task OnDocumentClick(DataTableRowClickEventArgs&lt;Document&gt; args)\n    {\n        // Click pe \u00eentregul r\u00e2nd\n        await OpenDocumentPreview(args.Item);\n    }\n\n    private void HandleRowClick(Document doc)\n    {\n        // Click specific pe r\u00e2nd\n        Console.WriteLine($\"Clicked on: {doc.Title}\");\n    }\n\n    private async Task DownloadDocument(Document doc)\n    {\n        // Ac\u021biune specific\u0103 f\u0103r\u0103 propagare\n        await DocumentService.DownloadAsync(doc.Id);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#7-stilizare-si-teme","title":"7. Stilizare \u0219i Teme","text":"<pre><code>/* R\u00e2nduri cu hover personalizat */\n.custom-table .fod-table-row:hover {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.08);\n    cursor: pointer;\n}\n\n/* R\u00e2nd selectat */\n.custom-table .fod-table-row.selected {\n    background-color: rgba(var(--fod-palette-primary-rgb), 0.12);\n    border-left: 3px solid var(--fod-palette-primary-main);\n}\n\n/* R\u00e2nduri editabile */\n.editable-row {\n    position: relative;\n}\n\n.editable-row:hover::after {\n    content: \"Click pentru editare\";\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    font-size: 0.75rem;\n    color: var(--fod-palette-primary-main);\n}\n\n/* R\u00e2nduri cu status */\n.status-active {\n    border-left: 3px solid var(--fod-palette-success-main);\n}\n\n.status-inactive {\n    border-left: 3px solid var(--fod-palette-error-main);\n    opacity: 0.7;\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#8-integrare-cu-datatable","title":"8. Integrare cu DataTable","text":""},{"location":"fod/componente/FodTr/#configurare-completa","title":"Configurare complet\u0103","text":"<pre><code>&lt;FodDataTable @ref=\"table\"\n              Items=\"tasks\"\n              T=\"Task\"\n              MultiSelection=\"true\"\n              EditMode=\"DataEditMode.Cell\"\n              CanCancelEdit=\"true\"\n              CommitEditIcon=\"@FodIcons.Material.Filled.Save\"\n              CancelEditIcon=\"@FodIcons.Material.Filled.Cancel\"\n              CommitEditTooltip=\"Salveaz\u0103 modific\u0103rile\"\n              CancelEditTooltip=\"Anuleaz\u0103 modific\u0103rile\"&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr Item=\"@context\" \n               IsEditable=\"@CanEditTask(context)\"\n               IsCheckable=\"true\"\n               Class=\"@GetRowClass(context)\"&gt;\n            &lt;!-- Celule aici --&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool CanEditTask(Task task)\n    {\n        return task.Status != TaskStatus.Completed &amp;&amp; \n               task.AssignedTo == currentUser.Id;\n    }\n\n    private string GetRowClass(Task task)\n    {\n        return task.Priority switch\n        {\n            Priority.High =&gt; \"priority-high\",\n            Priority.Low =&gt; \"priority-low\",\n            _ =&gt; \"\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodTr/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Item unic - Asigura\u021bi-v\u0103 c\u0103 Item este setat pentru fiecare r\u00e2nd</li> <li>Click handling - Folosi\u021bi stopPropagation pentru ac\u021biuni specifice</li> <li>Validare - Implementa\u021bi validare \u00eenainte de commit</li> <li>State management - P\u0103stra\u021bi copii pentru cancel/revert</li> <li>Performance - Evita\u021bi re-render prin @key \u00een loops</li> <li>Accessibility - Include\u021bi aria-labels pentru ac\u021biuni</li> </ol>"},{"location":"fod/componente/FodTr/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Folosi\u021bi @key pentru r\u00e2nduri \u00een bucle</li> <li>Evita\u021bi calcule complexe \u00een randare</li> <li>Cache-ui\u021bi rezultatele pentru IsEditing checks</li> <li>Implementa\u021bi virtualizare pentru liste mari</li> </ul>"},{"location":"fod/componente/FodTr/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Suport complet pentru navigare cu tastatura</li> <li>ARIA roles aplicate automat</li> <li>Anun\u021buri pentru screen readers la editare</li> <li>Focus management pentru ac\u021biuni</li> </ul>"},{"location":"fod/componente/FodTr/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodTr/#editarea-nu-functioneaza","title":"Editarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi IsEditable=\"true\"</li> <li>Verifica\u021bi EditMode pe DataTable</li> <li>Asigura\u021bi-v\u0103 c\u0103 Item este setat</li> </ul>"},{"location":"fod/componente/FodTr/#selectia-nu-se-actualizeaza","title":"Selec\u021bia nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi MultiSelection pe DataTable</li> <li>Verifica\u021bi IsCheckable=\"true\"</li> <li>Verifica\u021bi two-way binding pentru IsChecked</li> </ul>"},{"location":"fod/componente/FodTr/#click-events-nu-functioneaza","title":"Click events nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi ordinea event handlers</li> <li>Folosi\u021bi stopPropagation unde e necesar</li> <li>Verifica\u021bi c\u0103 r\u00e2ndul nu e disabled</li> </ul>"},{"location":"fod/componente/FodTr/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodTr</code> ofer\u0103 func\u021bionalitate complet\u0103 pentru r\u00e2ndurile de tabel \u00een aplica\u021biile FOD. Cu suport pentru selec\u021bie, editare inline \u0219i evenimente personalizabile, componenta faciliteaz\u0103 crearea de tabele interactive \u0219i user-friendly, integrate perfect cu sistemul de validare \u0219i state management Blazor.</p>"},{"location":"fod/componente/FodUserInfo/","title":"FodUserInfo","text":""},{"location":"fod/componente/FodUserInfo/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodUserInfo</code> este o component\u0103 specializat\u0103 pentru afi\u0219area \u0219i gestionarea informa\u021biilor utilizatorului curent \u00een header-ul aplica\u021biei. Ofer\u0103 func\u021bionalit\u0103\u021bi pentru afi\u0219area contextului activ (personal/organiza\u021bional), schimbarea contextului \u0219i navigarea c\u0103tre autentificare pentru utilizatorii neautentifica\u021bi.</p>"},{"location":"fod/componente/FodUserInfo/#caracteristici-principale","title":"Caracteristici Principale","text":"<ul> <li>Afi\u0219are context - Afi\u0219eaz\u0103 contextul curent al utilizatorului</li> <li>Schimbare context - Permite comutarea \u00eentre contexte disponibile</li> <li>Autentificare - Redirec\u021bionare c\u0103tre login pentru utilizatori neautentifica\u021bi</li> <li>Moduri de afi\u0219are - Dropdown sau modal pentru schimbare context</li> <li>Integrare AuthorizeView - Afi\u0219eaz\u0103 con\u021binut diferit bazat pe starea de autentificare</li> <li>Suport multi-context - Gestioneaz\u0103 contexte personale \u0219i organiza\u021bionale</li> </ul>"},{"location":"fod/componente/FodUserInfo/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>&lt;!-- \u00cen header --&gt;\n&lt;FodHeader&gt;\n    &lt;div class=\"header-content\"&gt;\n        &lt;h1&gt;Aplica\u021bia Mea&lt;/h1&gt;\n        &lt;FodUserInfo /&gt;\n    &lt;/div&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#atribute-si-parametri","title":"Atribute \u0219i Parametri","text":"Parametru Tip Valoare implicit\u0103 Descriere <code>ShowContextSelect</code> <code>bool</code> <code>true</code> Afi\u0219eaz\u0103 dropdown pentru selectare context <code>ShowContextProvider</code> <code>bool</code> <code>false</code> Afi\u0219eaz\u0103 buton pentru modal de selectare context <code>ContextProviderClass</code> <code>string</code> - Clase CSS pentru butonul context provider <code>LoginReturnPath</code> <code>string</code> - URL de redirec\u021bionare dup\u0103 autentificare"},{"location":"fod/componente/FodUserInfo/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/componente/FodUserInfo/#userinfo-simplu-in-header","title":"UserInfo Simplu \u00een Header","text":"<pre><code>&lt;FodHeader Color=\"FodColor.Primary\"&gt;\n    &lt;FodContainer&gt;\n        &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n            &lt;FodText Typo=\"Typo.h6\" Color=\"FodColor.White\"&gt;\n                Portal Servicii\n            &lt;/FodText&gt;\n            &lt;FodUserInfo /&gt;\n        &lt;/div&gt;\n    &lt;/FodContainer&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#userinfo-cu-modal-pentru-context","title":"UserInfo cu Modal pentru Context","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;div class=\"header-wrapper\"&gt;\n        &lt;div class=\"logo-section\"&gt;\n            &lt;img src=\"/logo.png\" alt=\"Logo\" /&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"user-section\"&gt;\n            &lt;FodUserInfo ShowContextProvider=\"true\" \n                        ShowContextSelect=\"false\"\n                        ContextProviderClass=\"context-button-custom\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/FodHeader&gt;\n\n&lt;style&gt;\n    .context-button-custom {\n        background-color: transparent;\n        border: 1px solid white;\n        color: white;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#userinfo-cu-return-path-personalizat","title":"UserInfo cu Return Path Personalizat","text":"<pre><code>&lt;FodUserInfo LoginReturnPath=\"/dashboard\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#header-complet-cu-userinfo","title":"Header Complet cu UserInfo","text":"<pre><code>&lt;FodHeader Color=\"FodColor.Primary\" Fixed=\"true\"&gt;\n    &lt;FodContainer&gt;\n        &lt;div class=\"header-content\"&gt;\n            &lt;!-- Logo \u0219i titlu --&gt;\n            &lt;div class=\"brand\"&gt;\n                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\" \n                              Color=\"FodColor.Inherit\"\n                              OnClick=\"ToggleDrawer\" /&gt;\n                &lt;FodText Typo=\"Typo.h6\" Color=\"FodColor.White\" Class=\"ms-3\"&gt;\n                    Sistemul Electronic\n                &lt;/FodText&gt;\n            &lt;/div&gt;\n\n            &lt;!-- Navigare --&gt;\n            &lt;nav class=\"main-nav\"&gt;\n                &lt;FodButton Color=\"FodColor.Inherit\" Href=\"/servicii\"&gt;\n                    Servicii\n                &lt;/FodButton&gt;\n                &lt;FodButton Color=\"FodColor.Inherit\" Href=\"/ajutor\"&gt;\n                    Ajutor\n                &lt;/FodButton&gt;\n            &lt;/nav&gt;\n\n            &lt;!-- User info --&gt;\n            &lt;FodUserInfo /&gt;\n        &lt;/div&gt;\n    &lt;/FodContainer&gt;\n&lt;/FodHeader&gt;\n\n@code {\n    private void ToggleDrawer()\n    {\n        // Toggle drawer logic\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#userinfo-cu-context-dropdown-stilizat","title":"UserInfo cu Context Dropdown Stilizat","text":"<pre><code>&lt;FodHeader Class=\"custom-header\"&gt;\n    &lt;div class=\"header-container\"&gt;\n        &lt;FodUserInfo ShowContextSelect=\"true\" \n                    ShowContextProvider=\"false\" /&gt;\n    &lt;/div&gt;\n&lt;/FodHeader&gt;\n\n&lt;style&gt;\n    /* Stilizare dropdown */\n    :deep(.dropdown-xs) {\n        min-width: 200px;\n        border-radius: 8px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n\n    :deep(.text-white) {\n        background-color: transparent;\n        border: none;\n    }\n\n    :deep(.text-white:hover) {\n        background-color: rgba(255, 255, 255, 0.1);\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#integrare-cu-sistem-de-notificari","title":"Integrare cu Sistem de Notific\u0103ri","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;div class=\"header-actions\"&gt;\n        &lt;!-- Notific\u0103ri --&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Notifications\"\n                       Color=\"FodColor.Inherit\"&gt;\n            @if (unreadCount &gt; 0)\n            {\n                &lt;FodBadge Content=\"@unreadCount\" \n                         Color=\"FodColor.Error\"\n                         Overlap=\"true\"&gt;\n                &lt;/FodBadge&gt;\n            }\n        &lt;/FodIconButton&gt;\n\n        &lt;!-- User Info --&gt;\n        &lt;FodUserInfo Class=\"ms-2\" /&gt;\n    &lt;/div&gt;\n&lt;/FodHeader&gt;\n\n@code {\n    private int unreadCount = 3;\n}\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#comportament-si-functionalitati","title":"Comportament \u0219i Func\u021bionalit\u0103\u021bi","text":""},{"location":"fod/componente/FodUserInfo/#pentru-utilizatori-autentificati","title":"Pentru Utilizatori Autentifica\u021bi","text":"<ol> <li>Afi\u0219are Context - Afi\u0219eaz\u0103 numele contextului curent (personal sau organiza\u021bie)</li> <li>Schimbare Context - Permite schimbarea \u00eentre contexte disponibile</li> <li>Pictogram\u0103 Person - Indic\u0103 vizual prezen\u021ba utilizatorului</li> </ol>"},{"location":"fod/componente/FodUserInfo/#pentru-utilizatori-neautentificati","title":"Pentru Utilizatori Neautentifica\u021bi","text":"<ol> <li>Buton Login - Afi\u0219eaz\u0103 buton pentru autentificare</li> <li>Redirec\u021bionare - Salveaz\u0103 URL-ul curent pentru return dup\u0103 login</li> <li>Stil Consistent - Men\u021bine aspectul vizual al header-ului</li> </ol>"},{"location":"fod/componente/FodUserInfo/#moduri-de-schimbare-context","title":"Moduri de Schimbare Context","text":""},{"location":"fod/componente/FodUserInfo/#dropdown-mode-showcontextselecttrue","title":"Dropdown Mode (<code>ShowContextSelect=\"true\"</code>)","text":"<p><pre><code>&lt;FodUserInfo ShowContextSelect=\"true\" ShowContextProvider=\"false\" /&gt;\n</code></pre> - Afi\u0219eaz\u0103 un dropdown compact - Click deschide card-uri de context - Ideal pentru spa\u021bii mici</p>"},{"location":"fod/componente/FodUserInfo/#modal-mode-showcontextprovidertrue","title":"Modal Mode (<code>ShowContextProvider=\"true\"</code>)","text":"<p><pre><code>&lt;FodUserInfo ShowContextProvider=\"true\" ShowContextSelect=\"false\" /&gt;\n</code></pre> - Afi\u0219eaz\u0103 un buton care deschide modal - Experien\u021b\u0103 mai ampl\u0103 de selec\u021bie - Ideal pentru aplica\u021bii complexe</p>"},{"location":"fod/componente/FodUserInfo/#evenimente-si-integrari","title":"Evenimente \u0219i Integr\u0103ri","text":""},{"location":"fod/componente/FodUserInfo/#ascultare-schimbare-context","title":"Ascultare Schimbare Context","text":"<pre><code>@code {\n    protected override void OnInitialized()\n    {\n        // Componenta ascult\u0103 automat la schimb\u0103ri de context\n        // prin _contextService.ContextChanged\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#personalizare-navigare-login","title":"Personalizare Navigare Login","text":"<pre><code>&lt;FodUserInfo LoginReturnPath=\"@GetReturnUrl()\" /&gt;\n\n@code {\n    private string GetReturnUrl()\n    {\n        // Logic\u0103 personalizat\u0103 pentru URL de return\n        var currentPath = NavigationManager.Uri;\n        return currentPath.Contains(\"public\") ? \"/dashboard\" : currentPath;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodUserInfo/#clase-css-disponibile","title":"Clase CSS Disponibile","text":"<pre><code>/* Buton header pentru login */\n.fod-button-header\n\n/* Culoare modal */\n.modal-color\n\n/* Text alb */\n.text-white\n\n/* Dropdown mic */\n.dropdown-xs\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#personalizare-aspect","title":"Personalizare Aspect","text":"<pre><code>/* Stil pentru buton context */\n:deep(.context-provider-button) {\n    border: 2px solid white;\n    border-radius: 20px;\n    padding: 0.5rem 1rem;\n}\n\n/* Stil pentru dropdown */\n:deep(.dropdown-toggle) {\n    background-color: transparent !important;\n    border: none !important;\n}\n\n/* Hover effect */\n:deep(.dropdown-toggle:hover) {\n    background-color: rgba(255, 255, 255, 0.2) !important;\n}\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#integrare-cu-alte-componente","title":"Integrare cu Alte Componente","text":""},{"location":"fod/componente/FodUserInfo/#cu-fodheader","title":"Cu FodHeader","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;FodContainer Class=\"d-flex justify-content-between\"&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Logo&lt;/FodText&gt;\n        &lt;FodUserInfo /&gt;\n    &lt;/FodContainer&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/FodUserInfo/#cu-fodcontextselector","title":"Cu FodContextSelector","text":"<p>Componenta integreaz\u0103 automat: - <code>&lt;FodContextSelector /&gt;</code> pentru modal de selec\u021bie - <code>&lt;FodContextProviderCard /&gt;</code> pentru dropdown</p>"},{"location":"fod/componente/FodUserInfo/#cu-authorizeview","title":"Cu AuthorizeView","text":"<p>Folose\u0219te intern <code>AuthorizeView</code> pentru: - Afi\u0219are condi\u021bionat\u0103 bazat\u0103 pe autentificare - Con\u021binut diferit pentru utilizatori autentifica\u021bi/neautentifica\u021bi</p>"},{"location":"fod/componente/FodUserInfo/#best-practices","title":"Best Practices","text":"<ol> <li>Plasare \u00een Header - Pozi\u021biona\u021bi \u00een col\u021bul din dreapta sus</li> <li>Consisten\u021b\u0103 vizual\u0103 - Men\u021bine\u021bi stilul consistent cu header-ul</li> <li>Return Path - Seta\u021bi \u00eentotdeauna pentru experien\u021b\u0103 mai bun\u0103</li> <li>Un singur mod - Nu activa\u021bi ambele moduri simultan</li> <li>Responsive - Testa\u021bi pe ecrane mici</li> </ol>"},{"location":"fod/componente/FodUserInfo/#dependente","title":"Dependen\u021be","text":"<p>Componenta necesit\u0103: - <code>IContextService</code> - Pentru gestionarea contextelor - <code>NavigationManager</code> - Pentru navigare - <code>IStringLocalizer</code> - Pentru localizare - <code>AuthorizeView</code> - Pentru verificare autentificare</p>"},{"location":"fod/componente/FodUserInfo/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/componente/FodUserInfo/#contextul-nu-se-afiseaza","title":"Contextul nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 <code>IContextService</code> este \u00eenregistrat</li> <li>Verifica\u021bi c\u0103 utilizatorul are contexte disponibile</li> </ul>"},{"location":"fod/componente/FodUserInfo/#butonul-de-login-nu-apare","title":"Butonul de login nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 utilizatorul nu este autentificat</li> <li>Verifica\u021bi c\u0103 AuthenticationStateProvider func\u021bioneaz\u0103</li> </ul>"},{"location":"fod/componente/FodUserInfo/#dropdown-ul-nu-se-deschide","title":"Dropdown-ul nu se deschide","text":"<ul> <li>Verifica\u021bi c\u0103 Bootstrap CSS este \u00eenc\u0103rcat</li> <li>Verifica\u021bi conflicte CSS</li> </ul>"},{"location":"fod/componente/FodUserInfo/#concluzie","title":"Concluzie","text":"<p>FodUserInfo este o component\u0103 esen\u021bial\u0103 pentru gestionarea identit\u0103\u021bii utilizatorului \u00een aplica\u021bii, oferind o interfa\u021b\u0103 intuitiv\u0103 pentru autentificare \u0219i schimbare de context. Integrarea sa perfect\u0103 cu sistemul de autentificare \u0219i contexte FOD o face indispensabil\u0103 pentru aplica\u021bii multi-context.</p>"},{"location":"fod/componente/FodValidateExtras/","title":"FodValidateExtras","text":""},{"location":"fod/componente/FodValidateExtras/#documentatie-pentru-componenta-fodvalidateextras","title":"Documenta\u021bie pentru componenta FodValidateExtras","text":""},{"location":"fod/componente/FodValidateExtras/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodValidateExtras</code> este o component\u0103 specializat\u0103 pentru validarea numerelor de extras din documente oficiale. Ofer\u0103 o interfa\u021b\u0103 simpl\u0103 pentru introducerea \u0219i verificarea validit\u0103\u021bii unui num\u0103r de extras prin integrarea cu serviciul <code>IValidateExtrasService</code>.</p> <p>Caracteristici principale: - Validare num\u0103r extras \u00een timp real - Interfa\u021b\u0103 simpl\u0103 cu input \u0219i buton - Afi\u0219are status validare - Integrare cu serviciul de validare extras - Feedback vizual pentru rezultat - Component\u0103 autonom\u0103</p>"},{"location":"fod/componente/FodValidateExtras/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodValidateExtras/#validare-simpla-extras","title":"Validare simpl\u0103 extras","text":"<pre><code>&lt;FodValidateExtras /&gt;\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#integrare-in-formular","title":"Integrare \u00een formular","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Verificare document&lt;/FodText&gt;\n        &lt;FodValidateExtras /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#3-model-validateextrasmodel","title":"3. Model ValidateExtrasModel","text":"<pre><code>public class ValidateExtrasModel\n{\n    public string ExtrasNumber { get; set; }\n    public string Status { get; set; }\n    public bool IsValid { get; set; }\n    public DateTime? ValidationDate { get; set; }\n    public string DocumentType { get; set; }\n    // alte propriet\u0103\u021bi relevante\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#4-exemple-avansate","title":"4. Exemple Avansate","text":""},{"location":"fod/componente/FodValidateExtras/#componenta-extinsa-cu-functionalitati-aditionale","title":"Component\u0103 extins\u0103 cu func\u021bionalit\u0103\u021bi adi\u021bionale","text":"<pre><code>@inherits FodValidateExtras\n\n&lt;div class=\"validate-extras-extended\"&gt;\n    @if (validateExtrasModel == null)\n    {\n        &lt;FodTextField Label=\"Num\u0103rul extrasului\"\n                      @bind-Value=\"ExtrasNumber\"\n                      Placeholder=\"Ex: 123456789\"\n                      HelperText=\"Introduce\u021bi num\u0103rul complet al extrasului\"\n                      Required=\"true\"\n                      Pattern=\"[0-9]{9}\"\n                      OnKeyUp=\"@(async (e) =&gt; { if (e.Key == \"Enter\") await ValidateExtras(); })\" /&gt;\n\n        &lt;div class=\"d-flex justify-content-between align-items-center mt-3\"&gt;\n            &lt;FodButton Color=\"FodColor.Secondary\" \n                       Variant=\"FodVariant.Text\"\n                       OnClick=\"Clear\"&gt;\n                \u0218terge\n            &lt;/FodButton&gt;\n\n            &lt;FodButton Color=\"FodColor.Success\" \n                       Variant=\"FodVariant.Filled\"\n                       OnClick=\"ValidateExtras\"\n                       Disabled=\"@(string.IsNullOrWhiteSpace(ExtrasNumber) || isValidating)\"&gt;\n                @if (isValidating)\n                {\n                    &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt;\n                    &lt;span class=\"ms-2\"&gt;Verificare...&lt;/span&gt;\n                }\n                else\n                {\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.CheckCircle\" /&gt;\n                    &lt;span class=\"ms-2\"&gt;Verific\u0103&lt;/span&gt;\n                }\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    }\n    else\n    {\n        &lt;FodAlert Severity=\"@(validateExtrasModel.IsValid ? FodSeverity.Success : FodSeverity.Error)\"\n                  ShowCloseIcon=\"true\"\n                  OnClose=\"Reset\"&gt;\n            &lt;div class=\"validation-result\"&gt;\n                &lt;strong&gt;Status:&lt;/strong&gt; @validateExtrasModel.Status\n                @if (validateExtrasModel.ValidationDate.HasValue)\n                {\n                    &lt;br /&gt;\n                    &lt;small&gt;Validat la: @validateExtrasModel.ValidationDate.Value.ToString(\"dd.MM.yyyy HH:mm\")&lt;/small&gt;\n                }\n            &lt;/div&gt;\n        &lt;/FodAlert&gt;\n\n        &lt;FodButton Class=\"mt-3\" \n                   Color=\"FodColor.Primary\"\n                   Variant=\"FodVariant.Text\"\n                   OnClick=\"Reset\"&gt;\n            Verific\u0103 alt extras\n        &lt;/FodButton&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private bool isValidating;\n\n    private void Clear()\n    {\n        ExtrasNumber = string.Empty;\n        validateExtrasModel = null;\n    }\n\n    private void Reset()\n    {\n        Clear();\n        StateHasChanged();\n    }\n\n    protected override async Task ValidateExtras()\n    {\n        if (string.IsNullOrWhiteSpace(ExtrasNumber))\n            return;\n\n        isValidating = true;\n        try\n        {\n            await base.ValidateExtras();\n        }\n        finally\n        {\n            isValidating = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#integrare-cu-istoric-validari","title":"Integrare cu istoric valid\u0103ri","text":"<pre><code>&lt;div class=\"extras-validation-container\"&gt;\n    &lt;FodGrid container spacing=\"3\"&gt;\n        &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;Validare extras nou&lt;/FodText&gt;\n                    &lt;FodValidateExtras @ref=\"validator\" /&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid item xs=\"12\" md=\"6\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;Istoric valid\u0103ri&lt;/FodText&gt;\n                    &lt;FodList Dense=\"true\"&gt;\n                        @foreach (var validation in validationHistory)\n                        {\n                            &lt;FodListItem&gt;\n                                &lt;FodListItemText&gt;\n                                    &lt;div class=\"d-flex justify-content-between\"&gt;\n                                        &lt;span&gt;@validation.ExtrasNumber&lt;/span&gt;\n                                        &lt;FodChip Color=\"@(validation.IsValid ? FodColor.Success : FodColor.Error)\"\n                                                 Size=\"FodSize.Small\"&gt;\n                                            @(validation.IsValid ? \"Valid\" : \"Invalid\")\n                                        &lt;/FodChip&gt;\n                                    &lt;/div&gt;\n                                    &lt;small class=\"text-muted\"&gt;\n                                        @validation.ValidationDate.ToString(\"dd.MM.yyyy HH:mm\")\n                                    &lt;/small&gt;\n                                &lt;/FodListItemText&gt;\n                            &lt;/FodListItem&gt;\n                        }\n                    &lt;/FodList&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/div&gt;\n\n@code {\n    private FodValidateExtras validator;\n    private List&lt;ValidateExtrasModel&gt; validationHistory = new();\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            // \u00cencarc\u0103 istoric din local storage sau API\n            validationHistory = await LoadValidationHistory();\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#validare-in-bulk","title":"Validare \u00een bulk","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Validare multipl\u0103 extrase&lt;/FodText&gt;\n\n        &lt;FodTextArea @bind-Value=\"bulkNumbers\"\n                     Label=\"Numere extrase (unul pe linie)\"\n                     Rows=\"5\"\n                     HelperText=\"Introduce\u021bi mai multe numere de extras, c\u00e2te unul pe linie\" /&gt;\n\n        &lt;FodButton Class=\"mt-3\"\n                   Color=\"FodColor.Primary\"\n                   OnClick=\"ValidateBulk\"\n                   Disabled=\"@(string.IsNullOrWhiteSpace(bulkNumbers) || isProcessing)\"&gt;\n            Valideaz\u0103 toate\n        &lt;/FodButton&gt;\n\n        @if (bulkResults.Any())\n        {\n            &lt;FodDivider Class=\"my-3\" /&gt;\n\n            &lt;FodDataTable Items=\"@bulkResults\" Dense=\"true\"&gt;\n                &lt;FodColumn Title=\"Num\u0103r extras\" Field=\"@(r =&gt; r.ExtrasNumber)\" /&gt;\n                &lt;FodColumn Title=\"Status\" Field=\"@(r =&gt; r.Status)\" /&gt;\n                &lt;FodColumn Title=\"Valid\"&gt;\n                    &lt;Template&gt;\n                        &lt;FodIcon Icon=\"@(context.IsValid ? FodIcons.Material.Filled.Check : FodIcons.Material.Filled.Close)\"\n                                 Color=\"@(context.IsValid ? FodColor.Success : FodColor.Error)\" /&gt;\n                    &lt;/Template&gt;\n                &lt;/FodColumn&gt;\n            &lt;/FodDataTable&gt;\n\n            &lt;div class=\"mt-3 text-end\"&gt;\n                &lt;FodButton Color=\"FodColor.Secondary\"\n                           StartIcon=\"@FodIcons.Material.Filled.GetApp\"\n                           OnClick=\"ExportResults\"&gt;\n                    Export\u0103 rezultate\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Inject] private IValidateExtrasService ValidateService { get; set; }\n\n    private string bulkNumbers;\n    private List&lt;ValidateExtrasModel&gt; bulkResults = new();\n    private bool isProcessing;\n\n    private async Task ValidateBulk()\n    {\n        isProcessing = true;\n        bulkResults.Clear();\n\n        var numbers = bulkNumbers.Split('\\n', StringSplitOptions.RemoveEmptyEntries);\n\n        foreach (var number in numbers)\n        {\n            var result = await ValidateService.ValidateExtras(number.Trim());\n            bulkResults.Add(result);\n            StateHasChanged(); // Update progresiv\n        }\n\n        isProcessing = false;\n    }\n\n    private async Task ExportResults()\n    {\n        // Export CSV sau Excel\n        var csv = \"Num\u0103r Extras,Status,Valid\\n\" +\n            string.Join(\"\\n\", bulkResults.Select(r =&gt; \n                $\"{r.ExtrasNumber},{r.Status},{r.IsValid}\"));\n\n        await JSRuntime.InvokeVoidAsync(\"downloadFile\", \n            \"validari-extrase.csv\", csv);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#5-stilizare-css","title":"5. Stilizare CSS","text":"<pre><code>/* Container principal */\n.validate-extras-extended {\n    max-width: 500px;\n    margin: 0 auto;\n}\n\n/* Rezultat validare */\n.validation-result {\n    padding: 1rem;\n    border-radius: 4px;\n}\n\n/* Input num\u0103r extras */\n.validate-extras-extended .fod-text-field {\n    width: 100%;\n    margin-bottom: 1rem;\n}\n\n/* Butoane */\n.validate-extras-extended .fod-button {\n    min-width: 120px;\n}\n\n/* Istoric valid\u0103ri */\n.validation-history-item {\n    border-left: 3px solid;\n    padding-left: 1rem;\n    margin-bottom: 0.5rem;\n}\n\n.validation-history-item.valid {\n    border-color: var(--fod-palette-success-main);\n}\n\n.validation-history-item.invalid {\n    border-color: var(--fod-palette-error-main);\n}\n\n/* Anima\u021bie loading */\n@keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n}\n\n.validating {\n    animation: pulse 1.5s infinite;\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/FodValidateExtras/#implementare-serviciu-validare","title":"Implementare serviciu validare","text":"<pre><code>public interface IValidateExtrasService\n{\n    Task&lt;ValidateExtrasModel&gt; ValidateExtras(string extrasNumber);\n    Task&lt;List&lt;ValidateExtrasModel&gt;&gt; ValidateBatch(List&lt;string&gt; numbers);\n}\n\npublic class ValidateExtrasService : IValidateExtrasService\n{\n    private readonly HttpClient _httpClient;\n\n    public async Task&lt;ValidateExtrasModel&gt; ValidateExtras(string extrasNumber)\n    {\n        var response = await _httpClient.GetAsync(\n            $\"api/validate-extras/{extrasNumber}\");\n\n        if (response.IsSuccessStatusCode)\n        {\n            return await response.Content\n                .ReadFromJsonAsync&lt;ValidateExtrasModel&gt;();\n        }\n\n        return new ValidateExtrasModel\n        {\n            ExtrasNumber = extrasNumber,\n            Status = \"Eroare la validare\",\n            IsValid = false\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#7-scenarii-de-utilizare","title":"7. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodValidateExtras/#formular-cu-validare-obligatorie","title":"Formular cu validare obligatorie","text":"<pre><code>&lt;EditForm Model=\"@documentModel\" OnValidSubmit=\"HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;FodTextField Label=\"Tip document\" \n                  @bind-Value=\"documentModel.DocumentType\" /&gt;\n\n    &lt;div class=\"my-3\"&gt;\n        &lt;FodValidateExtras @ref=\"extrasValidator\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" \n               Color=\"FodColor.Primary\"\n               Disabled=\"@(!IsExtrasValidated)\"&gt;\n        Continu\u0103\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private DocumentModel documentModel = new();\n    private FodValidateExtras extrasValidator;\n\n    private bool IsExtrasValidated =&gt; \n        extrasValidator?.validateExtrasModel?.IsValid ?? false;\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#8-best-practices","title":"8. Best Practices","text":"<ol> <li>Validare format - Verifica\u021bi formatul \u00eenainte de trimitere</li> <li>Debounce - Pentru validare automat\u0103 la tastare</li> <li>Cache rezultate - Evita\u021bi valid\u0103ri repetate</li> <li>Error handling - Trata\u021bi erorile de re\u021bea</li> <li>Loading state - Indica\u021bi procesarea</li> <li>Feedback clar - Mesaje descriptive pentru utilizator</li> </ol>"},{"location":"fod/componente/FodValidateExtras/#9-performanta","title":"9. Performan\u021b\u0103","text":"<ul> <li>Cache rezultate validare pentru 5 minute</li> <li>Implementa\u021bi debounce pentru validare automat\u0103</li> <li>Folosi\u021bi validare local\u0103 pentru format</li> <li>Batch requests pentru valid\u0103ri multiple</li> </ul>"},{"location":"fod/componente/FodValidateExtras/#10-accesibilitate","title":"10. Accesibilitate","text":"<ul> <li>Label clar pentru input</li> <li>Mesaje de eroare descriptive</li> <li>Suport pentru navigare cu tastatura</li> <li>ARIA attributes pentru status</li> </ul>"},{"location":"fod/componente/FodValidateExtras/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/componente/FodValidateExtras/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 serviciul este \u00eenregistrat \u00een DI</li> <li>Verifica\u021bi endpoint-ul API</li> <li>Verifica\u021bi formatul num\u0103rului de extras</li> </ul>"},{"location":"fod/componente/FodValidateExtras/#rezultate-incorecte","title":"Rezultate incorecte","text":"<ul> <li>Verifica\u021bi logica de validare pe server</li> <li>Verifica\u021bi c\u0103 num\u0103rul este complet \u0219i corect</li> <li>Testa\u021bi cu numere cunoscute ca valide</li> </ul>"},{"location":"fod/componente/FodValidateExtras/#12-extensibilitate","title":"12. Extensibilitate","text":"<pre><code>@* ValidateExtrasAdvanced.razor *@\n@inherits FodValidateExtras\n\n&lt;!-- Adaug\u0103 func\u021bionalit\u0103\u021bi suplimentare --&gt;\n&lt;div class=\"validate-extras-advanced\"&gt;\n    @base.BuildRenderTree(__builder)\n\n    @if (validateExtrasModel?.IsValid == true)\n    {\n        &lt;FodButton Color=\"FodColor.Info\"\n                   OnClick=\"ShowDetails\"&gt;\n            Vezi detalii document\n        &lt;/FodButton&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    [Parameter] public EventCallback&lt;ValidateExtrasModel&gt; OnValidationComplete { get; set; }\n\n    protected override async Task ValidateExtras()\n    {\n        await base.ValidateExtras();\n\n        if (validateExtrasModel != null)\n        {\n            await OnValidationComplete.InvokeAsync(validateExtrasModel);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodValidateExtras/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodValidateExtras</code> ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru validarea numerelor de extras din documente oficiale. Cu interfa\u021b\u0103 intuitiv\u0103 \u0219i integrare u\u0219oar\u0103, componenta simplific\u0103 procesul de verificare a autenticit\u0103\u021bii documentelor \u00een aplica\u021biile guvernamentale.</p>"},{"location":"fod/componente/FodVerifyDocument/","title":"FodVerifyDocument","text":""},{"location":"fod/componente/FodVerifyDocument/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodVerifyDocument</code> ofer\u0103 o interfa\u021b\u0103 pentru verificarea autenticit\u0103\u021bii \u0219i validit\u0103\u021bii documentelor emise de institu\u021biile publice. Permite utilizatorilor s\u0103 introduc\u0103 num\u0103rul documentului \u0219i s\u0103 verifice dac\u0103 acesta este valid, anulat sau inexistent \u00een sistemul oficial.</p> <p>Componenta suport\u0103 verificare prin num\u0103r de document \u0219i op\u021bional prin ID MDocs Share pentru acces direct la document.</p>"},{"location":"fod/componente/FodVerifyDocument/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodVerifyDocument/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodVerifyDocument /&gt;\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#cu-numar-de-document-predefinit","title":"Cu num\u0103r de document predefinit","text":"<pre><code>&lt;FodVerifyDocument DocumentNumber=\"DOC-2024-001234\" /&gt;\n\n@code {\n    // Componenta va pre-completa c\u00e2mpul cu num\u0103rul furnizat\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#verificare-automata-cu-mdocs-share-id","title":"Verificare automat\u0103 cu MDocs Share ID","text":"<pre><code>&lt;FodVerifyDocument \n    DocumentNumber=\"DOC-2024-001234\" \n    MDocsShareId=\"@shareId\" /&gt;\n\n@code {\n    private Guid shareId = Guid.Parse(\"123e4567-e89b-12d3-a456-426614174000\");\n    // Va verifica automat documentul la \u00eenc\u0103rcare\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#cu-mesaje-personalizate","title":"Cu mesaje personalizate","text":"<pre><code>&lt;FodVerifyDocument \n    NotFoundMessage=\"Documentul c\u0103utat nu exist\u0103 \u00een baza de date oficial\u0103\"\n    DownloadMessage=\"Pute\u021bi desc\u0103rca documentul verificat de aici:\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#integrare-in-pagina-dedicata","title":"Integrare \u00een pagin\u0103 dedicat\u0103","text":"<pre><code>@page \"/verifica-document\"\n\n&lt;div class=\"container mt-4\"&gt;\n    &lt;h2&gt;Verificare Autenticitate Document&lt;/h2&gt;\n    &lt;p&gt;Introduce\u021bi num\u0103rul documentului pentru a verifica autenticitatea acestuia.&lt;/p&gt;\n\n    &lt;FodVerifyDocument /&gt;\n\n    &lt;div class=\"mt-3\"&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n            Verificarea se face \u00een baza de date oficial\u0103 a institu\u021biilor publice.\n        &lt;/FodAlert&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere DocumentNumber string null Num\u0103rul documentului pentru verificare MDocsShareId Guid? null ID-ul MDocs Share pentru acces direct NotFoundMessage string null Mesaj personalizat c\u00e2nd documentul nu este g\u0103sit DownloadMessage string null Mesaj personalizat pentru desc\u0103rcare document Model VerifyDocumentModel null Model pre-populat pentru verificare Class string - Clase CSS adi\u021bionale Style string - Stiluri inline"},{"location":"fod/componente/FodVerifyDocument/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice.</p>"},{"location":"fod/componente/FodVerifyDocument/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodVerifyDocument/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodVerifyDocumentResponse - Afi\u0219eaz\u0103 rezultatul verific\u0103rii</li> <li>FodCardWrapper - Container pentru interfa\u021ba de verificare</li> <li>FODInputText - C\u00e2mp pentru introducerea num\u0103rului documentului</li> <li>FodButton - Buton pentru declan\u0219area verific\u0103rii</li> <li>FodLoadingLinear - Indicator de \u00eenc\u0103rcare</li> </ul>"},{"location":"fod/componente/FodVerifyDocument/#stilizare","title":"Stilizare","text":"<p>Componenta folose\u0219te stilurile standard FOD \u0219i Bootstrap pentru layout.</p>"},{"location":"fod/componente/FodVerifyDocument/#personalizare","title":"Personalizare","text":"<pre><code>/* Container principal */\n.fod-verify-document .fod-card-wrapper {\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n/* C\u00e2mp input */\n.fod-verify-document .fod-input-text {\n    font-size: 1.1rem;\n}\n\n/* Buton verificare */\n.fod-verify-document .fod-button {\n    min-width: 120px;\n}\n\n/* Indicator \u00eenc\u0103rcare */\n.fod-verify-document .fod-loading-linear {\n    margin: 1rem 0;\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocument/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Serviciu obligatoriu - Necesit\u0103 injectarea <code>IVerifyDocumentService</code></li> <li>Verificare automat\u0103 - Dac\u0103 sunt furnizate DocumentNumber \u0219i MDocsShareId, verificarea se face automat</li> <li>Validare - Folose\u0219te EditContext \u0219i DataAnnotationsValidator pentru validare</li> <li>Loading states - Afi\u0219eaz\u0103 indicatori de \u00eenc\u0103rcare separa\u021bi pentru \u00eenc\u0103rcare ini\u021bial\u0103 \u0219i verificare</li> <li>Mesaje personalizabile - Permite personalizarea mesajelor pentru diferite scenarii</li> </ol>"},{"location":"fod/componente/FodVerifyDocument/#bune-practici","title":"Bune practici","text":"<ol> <li>Format num\u0103r - Instrui\u021bi utilizatorii despre formatul corect al num\u0103rului de document</li> <li>Gestionare erori - Implementa\u021bi tratarea erorilor de re\u021bea sau serviciu</li> <li>Feedback clar - Folosi\u021bi mesaje clare pentru fiecare stare a documentului</li> <li>Securitate - Nu expune\u021bi informa\u021bii sensibile \u00een mesajele de eroare</li> <li>Cache rezultate - Considera\u021bi cache-uirea rezultatelor pentru performan\u021b\u0103</li> </ol>"},{"location":"fod/componente/FodVerifyDocument/#concluzie","title":"Concluzie","text":"<p>FodVerifyDocument ofer\u0103 o solu\u021bie complet\u0103 pentru verificarea autenticit\u0103\u021bii documentelor oficiale. Cu suport pentru verificare automat\u0103, mesaje personalizabile \u0219i integrare cu serviciul MDocs Share, componenta faciliteaz\u0103 procesul de validare a documentelor pentru cet\u0103\u021beni \u0219i institu\u021bii.</p>"},{"location":"fod/componente/FodVerifyDocumentResponse/","title":"FodVerifyDocumentResponse","text":""},{"location":"fod/componente/FodVerifyDocumentResponse/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodVerifyDocumentResponse</code> afi\u0219eaz\u0103 rezultatul verific\u0103rii autenticit\u0103\u021bii unui document. Prezint\u0103 informa\u021bii despre validitatea documentului, detaliile acestuia \u0219i ofer\u0103 op\u021biunea de desc\u0103rcare c\u00e2nd documentul este disponibil \u00een sistemul MDocs Share.</p> <p>Componenta gestioneaz\u0103 trei st\u0103ri principale: document neg\u0103sit, document anulat/invalid \u0219i document valid.</p>"},{"location":"fod/componente/FodVerifyDocumentResponse/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodVerifyDocumentResponse/#exemplu-document-valid","title":"Exemplu - document valid","text":"<pre><code>&lt;FodVerifyDocumentResponse Model=\"@validDocument\" /&gt;\n\n@code {\n    private VerifyDocumentResponseModel validDocument = new()\n    {\n        Found = true,\n        ResponseDataStatus = ResponseDataStatusEnum.Valid,\n        DocumentNumber = \"DOC-2024-001234\",\n        DocumentName = \"Certificat de na\u0219tere\",\n        DocumentIssueDate = DateTime.Now.AddDays(-30),\n        MDocsShareFullLink = \"https://mdocs.gov.md/share/123456\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#exemplu-document-anulat","title":"Exemplu - document anulat","text":"<pre><code>&lt;FodVerifyDocumentResponse Model=\"@canceledDocument\" /&gt;\n\n@code {\n    private VerifyDocumentResponseModel canceledDocument = new()\n    {\n        Found = true,\n        ResponseDataStatus = ResponseDataStatusEnum.Invalid,\n        DocumentNumber = \"DOC-2023-999999\",\n        DocumentName = \"Certificat vechi\",\n        DocumentIssueDate = DateTime.Now.AddYears(-2)\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#exemplu-document-negasit","title":"Exemplu - document neg\u0103sit","text":"<pre><code>&lt;FodVerifyDocumentResponse \n    Model=\"@notFoundDocument\"\n    NotFoundMessage=\"Documentul solicitat nu a fost g\u0103sit \u00een registrul oficial\" /&gt;\n\n@code {\n    private VerifyDocumentResponseModel notFoundDocument = new()\n    {\n        Found = false,\n        DocumentNumber = \"DOC-INVALID-000\"\n    };\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#cu-mesaje-personalizate","title":"Cu mesaje personalizate","text":"<pre><code>&lt;FodVerifyDocumentResponse \n    Model=\"@documentModel\"\n    NotFoundMessage=\"Nu am g\u0103sit documentul \u00een baza de date\"\n    DownloadMessage=\"Click aici pentru a desc\u0103rca documentul verificat:\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere Model VerifyDocumentResponseModel null Modelul cu rezultatul verific\u0103rii NotFoundMessage string null Mesaj personalizat pentru document neg\u0103sit DownloadMessage string null Mesaj personalizat pentru link-ul de desc\u0103rcare"},{"location":"fod/componente/FodVerifyDocumentResponse/#proprietati-verifydocumentresponsemodel","title":"Propriet\u0103\u021bi VerifyDocumentResponseModel","text":"Proprietate Tip Descriere Found bool Indic\u0103 dac\u0103 documentul a fost g\u0103sit ResponseDataStatus ResponseDataStatusEnum Statusul documentului (Valid/Invalid) DocumentNumber string Num\u0103rul documentului verificat DocumentName string Numele/tipul documentului DocumentIssueDate DateTime? Data emiterii documentului MDocsShareFullLink string Link pentru desc\u0103rcarea documentului"},{"location":"fod/componente/FodVerifyDocumentResponse/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente.</p>"},{"location":"fod/componente/FodVerifyDocumentResponse/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodVerifyDocumentResponse/#componente-asociate","title":"Componente asociate","text":"<ul> <li>FodDisplay - Pentru afi\u0219area formatat\u0103 a detaliilor documentului</li> <li>FodVerifyDocument - Componenta p\u0103rinte pentru verificare</li> </ul>"},{"location":"fod/componente/FodVerifyDocumentResponse/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/FodVerifyDocumentResponse/#clase-css-utilizate","title":"Clase CSS utilizate","text":"<ul> <li><code>.service-request-status-response</code> - Container principal</li> <li><code>.alert.alert-danger</code> - Pentru mesaje de eroare \u0219i documente anulate</li> <li><code>.alert.alert-success</code> - Pentru documente valide</li> <li><code>.text-center</code> - Pentru centrarea mesajelor</li> <li><code>.text-black</code> - Pentru text negru pe fundal colorat</li> </ul>"},{"location":"fod/componente/FodVerifyDocumentResponse/#structura-vizuala-document-valid","title":"Structura vizual\u0103 - document valid","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2705 Documentul este valid                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Num\u0103r document: DOC-2024-001234         \u2502\n\u2502 Tip document: Certificat de na\u0219tere     \u2502\n\u2502 Data emiterii: 15.01.2024               \u2502\n\u2502                                         \u2502\n\u2502 Pute\u021bi desc\u0103rca documentul:             \u2502\n\u2502 [Descarc\u0103]                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#structura-vizuala-document-anulat","title":"Structura vizual\u0103 - document anulat","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u274c Document anulat                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Num\u0103r document: DOC-2023-999999         \u2502\n\u2502 Tip document: Certificat vechi          \u2502\n\u2502 Data emiterii: 15.01.2022               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#personalizare","title":"Personalizare","text":"<pre><code>/* Mesaje de status */\n.service-request-status-response .alert {\n    border-radius: 0.5rem;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\n/* Link de desc\u0103rcare */\n.service-request-status-response a {\n    font-weight: bold;\n    text-decoration: none;\n    padding: 0.5rem 1rem;\n    background-color: #007bff;\n    color: white;\n    border-radius: 0.25rem;\n    display: inline-block;\n}\n\n.service-request-status-response a:hover {\n    background-color: #0056b3;\n}\n\n/* Detalii document */\n.service-request-status-response dl.row {\n    background-color: #f8f9fa;\n    padding: 1rem;\n    border-radius: 0.25rem;\n}\n</code></pre>"},{"location":"fod/componente/FodVerifyDocumentResponse/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Trei st\u0103ri - Gestioneaz\u0103 document neg\u0103sit, anulat \u0219i valid</li> <li>Mesaje localizate - Toate mesajele implicite sunt localizate</li> <li>Personalizare flexibil\u0103 - Permite \u00eenlocuirea mesajelor standard</li> <li>Link securizat - Desc\u0103rcarea se deschide \u00een tab nou (target=\"_blank\")</li> <li>Layout responsive - Se adapteaz\u0103 la diferite dimensiuni de ecran</li> </ol>"},{"location":"fod/componente/FodVerifyDocumentResponse/#bune-practici","title":"Bune practici","text":"<ol> <li>Verificare null - Verifica\u021bi c\u0103 Model nu este null \u00eenainte de utilizare</li> <li>Mesaje clare - Folosi\u021bi mesaje descriptive pentru fiecare stare</li> <li>Securitate - Nu expune\u021bi informa\u021bii sensibile \u00een mesaje</li> <li>Accesibilitate - Asigura\u021bi contrast suficient pentru mesaje</li> <li>Feedback vizual - Folosi\u021bi culori \u0219i iconi\u021be pentru claritate</li> </ol>"},{"location":"fod/componente/FodVerifyDocumentResponse/#concluzie","title":"Concluzie","text":"<p>FodVerifyDocumentResponse ofer\u0103 o interfa\u021b\u0103 clar\u0103 \u0219i intuitiv\u0103 pentru afi\u0219area rezultatelor verific\u0103rii documentelor. Cu suport pentru multiple st\u0103ri, mesaje personalizabile \u0219i op\u021biune de desc\u0103rcare integrat\u0103, componenta faciliteaz\u0103 comunicarea statusului documentelor c\u0103tre utilizatori.</p>"},{"location":"fod/componente/FodVirtualize/","title":"FodVirtualize","text":""},{"location":"fod/componente/FodVirtualize/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>FodVirtualize</code> ofer\u0103 un wrapper configurabil peste componenta nativ\u0103 Blazor <code>Virtualize</code>. Permite randarea eficient\u0103 a listelor mari de elemente prin virtualizare, rand\u00e2nd doar elementele vizibile \u00een viewport plus un num\u0103r configurabil de elemente suplimentare (overscan). Componenta poate fi dezactivat\u0103 pentru a randa toate elementele simultan c\u00e2nd este necesar.</p>"},{"location":"fod/componente/FodVirtualize/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/FodVirtualize/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;FodVirtualize Items=\"@products\" IsEnabled=\"true\"&gt;\n    &lt;div class=\"product-item\"&gt;\n        &lt;h4&gt;@context.Name&lt;/h4&gt;\n        &lt;p&gt;@context.Price lei&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/FodVirtualize&gt;\n\n@code {\n    private List&lt;Product&gt; products = GenerateProducts(1000);\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#dezactivare-virtualizare","title":"Dezactivare virtualizare","text":"<pre><code>&lt;FodVirtualize Items=\"@items\" IsEnabled=\"false\"&gt;\n    &lt;FodListItem&gt;\n        @context.Title\n    &lt;/FodListItem&gt;\n&lt;/FodVirtualize&gt;\n\n@code {\n    private List&lt;Item&gt; items = new();\n    // C\u00e2nd IsEnabled=false, toate elementele sunt randate\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#cu-overscan-personalizat","title":"Cu overscan personalizat","text":"<pre><code>&lt;FodVirtualize Items=\"@largeDataSet\" IsEnabled=\"true\" OverscanCount=\"5\"&gt;\n    &lt;div class=\"data-row\"&gt;\n        &lt;span&gt;ID: @context.Id&lt;/span&gt;\n        &lt;span&gt;@context.Description&lt;/span&gt;\n        &lt;span&gt;@context.Date.ToShortDateString()&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/FodVirtualize&gt;\n\n@code {\n    private List&lt;DataItem&gt; largeDataSet = LoadLargeDataSet();\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#in-foddatatable","title":"\u00cen FodDataTable","text":"<pre><code>&lt;FodDataTable&gt;\n    &lt;FodVirtualize Items=\"@tableRows\" IsEnabled=\"@enableVirtualization\"&gt;\n        &lt;tr&gt;\n            &lt;td&gt;@context.Column1&lt;/td&gt;\n            &lt;td&gt;@context.Column2&lt;/td&gt;\n            &lt;td&gt;@context.Column3&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/FodVirtualize&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private bool enableVirtualization = tableRows.Count &gt; 50;\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#cu-componente-complexe","title":"Cu componente complexe","text":"<pre><code>&lt;FodVirtualize Items=\"@complexItems\" IsEnabled=\"true\" OverscanCount=\"2\"&gt;\n    &lt;FodCard Class=\"mb-3\"&gt;\n        &lt;CardContent&gt;\n            &lt;FodCardTitle&gt;@context.Title&lt;/FodCardTitle&gt;\n            &lt;FodCardText&gt;@context.Content&lt;/FodCardText&gt;\n            &lt;FodButton OnClick=\"@(() =&gt; SelectItem(context))\"&gt;\n                Selecteaz\u0103\n            &lt;/FodButton&gt;\n        &lt;/CardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodVirtualize&gt;\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere IsEnabled bool false Activeaz\u0103/dezactiveaz\u0103 virtualizarea Items ICollection null Colec\u021bia de elemente de afi\u0219at ChildContent RenderFragment - Template-ul pentru randarea fiec\u0103rui element OverscanCount int 3 Num\u0103rul de elemente randate \u00een afara viewport-ului"},{"location":"fod/componente/FodVirtualize/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente proprii.</p>"},{"location":"fod/componente/FodVirtualize/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice.</p>"},{"location":"fod/componente/FodVirtualize/#componente-asociate","title":"Componente asociate","text":"<ul> <li>Virtualize - Componenta nativ\u0103 Blazor utilizat\u0103 intern</li> <li>Poate fi folosit\u0103 cu orice component\u0103 FOD pentru afi\u0219are liste</li> </ul>"},{"location":"fod/componente/FodVirtualize/#stilizare","title":"Stilizare","text":"<p>Componenta nu adaug\u0103 stiluri proprii. Stilizarea se aplic\u0103 pe elementele randate prin <code>ChildContent</code>.</p>"},{"location":"fod/componente/FodVirtualize/#exemplu-stilizare","title":"Exemplu stilizare","text":"<pre><code>/* Container pentru virtualizare */\n.virtualize-container {\n    height: 500px;\n    overflow-y: auto;\n}\n\n/* Stilizare elemente */\n.virtualize-container .item {\n    padding: 1rem;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n/* Smooth scrolling */\n.virtualize-container {\n    scroll-behavior: smooth;\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Performance - \u00cembun\u0103t\u0103\u021be\u0219te semnificativ performan\u021ba pentru liste mari</li> <li>\u00cen\u0103l\u021bime fix\u0103 - Containerul trebuie s\u0103 aib\u0103 \u00een\u0103l\u021bime definit\u0103 pentru scrolling</li> <li>Overscan - Valori mai mari reduc flickering dar cresc memoria folosit\u0103</li> <li>Generic type - Componenta este generic\u0103 \u0219i func\u021bioneaz\u0103 cu orice tip de date</li> <li>Fallback - C\u00e2nd IsEnabled=false, folose\u0219te un simplu foreach</li> </ol>"},{"location":"fod/componente/FodVirtualize/#bune-practici","title":"Bune practici","text":"<ol> <li>Prag activare - Activa\u021bi virtualizarea doar pentru liste cu peste 50-100 elemente</li> <li>\u00cen\u0103l\u021bime consistent\u0103 - Elementele ar trebui s\u0103 aib\u0103 \u00een\u0103l\u021bimi similare pentru scrolling fluid</li> <li>OverscanCount - Folosi\u021bi 3-5 pentru majoritatea cazurilor</li> <li>Container height - Seta\u021bi \u00eentotdeauna \u00een\u0103l\u021bimea containerului p\u0103rinte</li> <li>Loading states - Gestiona\u021bi st\u0103rile de \u00eenc\u0103rcare pentru date asincrone</li> </ol>"},{"location":"fod/componente/FodVirtualize/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/FodVirtualize/#cu-incarcare-dinamica","title":"Cu \u00eenc\u0103rcare dinamic\u0103","text":"<pre><code>&lt;div style=\"height: 600px; overflow-y: auto;\"&gt;\n    &lt;FodVirtualize Items=\"@visibleItems\" IsEnabled=\"true\"&gt;\n        @if (context.IsLoading)\n        {\n            &lt;FodLoadingLinear /&gt;\n        }\n        else\n        {\n            &lt;ItemDisplay Item=\"@context\" /&gt;\n        }\n    &lt;/FodVirtualize&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#virtualizare-conditionata","title":"Virtualizare condi\u021bionat\u0103","text":"<pre><code>@if (UseVirtualization)\n{\n    &lt;FodVirtualize Items=\"@allItems\" IsEnabled=\"true\"&gt;\n        &lt;ItemTemplate Context=\"@context\" /&gt;\n    &lt;/FodVirtualize&gt;\n}\nelse\n{\n    &lt;FodPagination Items=\"@allItems\" PageSize=\"20\"&gt;\n        &lt;ItemTemplate Context=\"@context\" /&gt;\n    &lt;/FodPagination&gt;\n}\n\n@code {\n    private bool UseVirtualization =&gt; allItems.Count &gt; 100;\n}\n</code></pre>"},{"location":"fod/componente/FodVirtualize/#concluzie","title":"Concluzie","text":"<p>FodVirtualize ofer\u0103 o solu\u021bie flexibil\u0103 pentru optimizarea performan\u021bei listelor mari \u00een aplica\u021bii Blazor. Cu posibilitatea de a activa/dezactiva virtualizarea \u0219i control asupra parametrilor de overscan, componenta permite dezvoltatorilor s\u0103 balanseze \u00eentre performan\u021b\u0103 \u0219i experien\u021ba utilizatorului.</p>"},{"location":"fod/componente/FodWizard/","title":"FodWizard","text":"<p>Documenta\u021bie pentru componentele <code>FodWizard</code> \u0219i <code>FodWizardStep</code></p>"},{"location":"fod/componente/FodWizard/#descriere-generala","title":"Descriere general\u0103","text":"<p><code>FodWizard</code> este o component\u0103 Blazor de tip \"wizard\" care permite parcurgerea unui proces multi-pas \u00een cadrul aplica\u021biei. Fiecare pas este reprezentat de o component\u0103 <code>FodWizardStep</code>. Acest model modular permite valid\u0103ri, navigare condi\u021bionat\u0103 \u0219i personalizare complet\u0103 a pa\u0219ilor.</p>"},{"location":"fod/componente/FodWizard/#fodwizard_1","title":"FodWizard","text":""},{"location":"fod/componente/FodWizard/#utilizare","title":"Utilizare","text":"<p>Componenta <code>FodWizard</code> trebuie folosit\u0103 ca container pentru unul sau mai multe elemente <code>FodWizardStep</code>. Ea controleaz\u0103 fluxul de navigare \u00eentre pa\u0219i \u0219i expune func\u021bionalit\u0103\u021bi de validare, progres \u0219i control asupra fluxului utilizatorului.</p>"},{"location":"fod/componente/FodWizard/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere ShowProgress <code>bool</code> Afi\u0219eaz\u0103 progresul parcurgerii pa\u0219ilor. Enabled <code>bool</code> Activeaz\u0103 sau dezactiveaz\u0103 componenta. ChildContent <code>RenderFragment</code> Pa\u0219ii (<code>FodWizardStep</code>) inclu\u0219i \u00een wizard. ActiveStep <code>FodWizardStep</code> Pasul activ curent. InitialStep <code>int</code> Indexul pasului cu care s\u0103 se \u00eenceap\u0103. ActiveStepIx <code>int</code> Indexul pasului activ curent. Title <code>string</code> Titlul afi\u0219at pentru wizard. DisableScrollOnTop <code>bool</code> Dac\u0103 este true, dezactiveaz\u0103 scroll-ul automat \u00een top la schimbare. Typo <code>Typo</code> Stil tipografic pentru titlu."},{"location":"fod/componente/FodWizard/#functionalitati-cheie","title":"Func\u021bionalit\u0103\u021bi cheie","text":"<ul> <li>Navigare \u00eentre pa\u0219i cu <code>GoNext()</code>, <code>GoBack()</code>, <code>GoToStep(int)</code>.</li> <li>Activare pas cu <code>SetActive(FodWizardStep)</code>.</li> <li>Control validare pas curent \u0219i navigare condi\u021bionat\u0103 (<code>NextStep</code>, <code>BackStep</code>).</li> <li>Ob\u021binere progres curent (<code>GetProgressValue()</code>).</li> </ul>"},{"location":"fod/componente/FodWizard/#fodwizardstep","title":"FodWizardStep","text":""},{"location":"fod/componente/FodWizard/#descriere","title":"Descriere","text":"<p><code>FodWizardStep</code> reprezint\u0103 un pas individual din cadrul <code>FodWizard</code>. Con\u021bine con\u021binutul vizual \u0219i logica asociat\u0103 pentru validare \u0219i navigare.</p>"},{"location":"fod/componente/FodWizard/#proprietati_1","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Step <code>int</code> Identificator numeric al pasului. Name <code>string</code> Numele afi\u0219at al pasului. ChildContent <code>RenderFragment</code> Con\u021binutul HTML al pasului. ValidateEditContextsOnNext <code>bool</code> Dac\u0103 este true, valideaz\u0103 toate EditContext-urile \u00eenregistrate. OnNext <code>Func&lt;Task&lt;bool&gt;&gt;</code> Func\u021bie apelat\u0103 la click pe Next. Returneaz\u0103 <code>true</code> pentru a continua. NextStep <code>Func&lt;int&gt;</code> Pasul urm\u0103tor c\u0103tre care se face navigarea. OnBack <code>Func&lt;Task&lt;bool&gt;&gt;</code> Func\u021bie apelat\u0103 la click pe Back. Returneaz\u0103 <code>true</code> pentru a reveni. BackStep <code>Func&lt;int&gt;</code> Pasul anterior personalizat. OnActivate <code>Func&lt;Task&gt;</code> Se execut\u0103 c\u00e2nd pasul devine activ. Icon <code>string</code> Icon asociat pasului. EditContext <code>EditContext</code> Context de validare Blazor. Optional <code>bool</code> Marcheaz\u0103 pasul ca fiind op\u021bional. ShowTitle <code>bool</code> Afi\u0219eaz\u0103 titlul pasului \u00een UI. NextButtonText <code>string</code> Text personalizat pentru butonul \u201eNext\u201d. BackButtonText <code>string</code> Text personalizat pentru butonul \u201eBack\u201d. CanGoNext <code>bool</code> Permite navigarea c\u0103tre pasul urm\u0103tor. CanGoBack <code>bool</code> Permite revenirea la pasul anterior."},{"location":"fod/componente/FodWizard/#metode-utile","title":"Metode utile","text":"<ul> <li><code>RegisterEditContext(EditContext)</code>: \u00eenregistreaz\u0103 un context pentru validare.</li> <li><code>Validate()</code>: valideaz\u0103 toate EditContext-urile asociate.</li> </ul>"},{"location":"fod/componente/FodWizard/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<pre><code>&lt;FodWizard ShowProgress=\"true\" Title=\"Asistent de \u00eenregistrare\"&gt;\n    &lt;FodWizardStep Step=\"1\" Name=\"Introducere\"&gt;\n        &lt;p&gt;Pasul 1 - introducere date utilizator.&lt;/p&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Step=\"2\" Name=\"Confirmare\" NextButtonText=\"Continu\u0103\"&gt;\n        &lt;p&gt;Pasul 2 - confirmare date introduse.&lt;/p&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodWizard/#observatii","title":"Observa\u021bii","text":"<ul> <li>Fiecare pas poate con\u021bine valid\u0103ri proprii prin <code>EditContext</code> \u0219i logica suplimentar\u0103 asincron\u0103 (<code>OnNext</code>, <code>OnBack</code>).</li> <li>Componenta ofer\u0103 o experien\u021b\u0103 fluid\u0103 \u0219i modular\u0103 pentru formulare complexe sau pa\u0219i succesivi \u00een aplica\u021bie.</li> </ul>"},{"location":"fod/componente/FodWizardLoadingCircle/","title":"FodWizardLoadingCircle","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#documentatie-pentru-componenta-fodwizardloadingcircle","title":"Documenta\u021bie pentru componenta FodWizardLoadingCircle","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodWizardLoadingCircle</code> este o component\u0103 specializat\u0103 pentru afi\u0219area progresului circular cu valoare procentual\u0103 \u00een centru. Este optimizat\u0103 pentru utilizare \u00een wizard-uri \u0219i procese multi-pas, oferind feedback vizual clar despre progresul curent.</p> <p>Caracteristici principale: - Indicator circular de progres cu SVG - Afi\u0219are procent \u00een centru - Suport pentru moduri determinate \u0219i indeterminate - Dimensiuni configurabile - Grosime linie ajustabil\u0103 - Integrare perfect\u0103 cu FodWizardSteps - Anima\u021bii fluide pentru tranzi\u021bii</p>"},{"location":"fod/componente/FodWizardLoadingCircle/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#indicator-progres-simplu","title":"Indicator progres simplu","text":"<pre><code>&lt;FodWizardLoadingCircle Value=\"75\" /&gt;\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#indicator-cu-personalizare","title":"Indicator cu personalizare","text":"<pre><code>&lt;FodWizardLoadingCircle Value=\"@progressValue\" \n                        FodSize=\"FodSize.Large\"\n                        FodColor=\"primary\"\n                        StrokeWidth=\"5\" /&gt;\n\n@code {\n    private double progressValue = 33;\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>Value</code> <code>double</code> Valoarea progresului (0-100) <code>0</code> <code>FodColor</code> <code>string</code> Culoarea indicatorului - <code>FodSize</code> <code>FodSize</code> Dimensiunea componentei <code>Medium</code> <code>Indeterminate</code> <code>bool</code> Mod progres nedeterminat <code>false</code> <code>Min</code> <code>double</code> Valoare minim\u0103 <code>0.0</code> <code>Max</code> <code>double</code> Valoare maxim\u0103 <code>100.0</code> <code>StrokeWidth</code> <code>int</code> Grosimea liniei cercului <code>3</code>"},{"location":"fod/componente/FodWizardLoadingCircle/#4-calcul-si-randare-svg","title":"4. Calcul \u0219i Randare SVG","text":"<p>Componenta folose\u0219te SVG pentru randare cu: - ViewBox: <code>22 22 44 44</code> - Raz\u0103 cerc: <code>20</code> - Circumferin\u021b\u0103: <code>126</code> (magic number) - Stroke-dasharray \u0219i stroke-dashoffset pentru progres</p>"},{"location":"fod/componente/FodWizardLoadingCircle/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#progress-tracker-pentru-upload","title":"Progress tracker pentru upload","text":"<pre><code>&lt;div class=\"upload-progress-container\"&gt;\n    &lt;FodWizardLoadingCircle Value=\"@uploadProgress\" \n                            FodSize=\"FodSize.Largest\"\n                            FodColor=\"success\"\n                            StrokeWidth=\"4\" /&gt;\n\n    &lt;FodText Typo=\"Typo.h6\" Align=\"FodAlign.Center\" Class=\"mt-3\"&gt;\n        @if (uploadProgress &lt; 100)\n        {\n            &lt;span&gt;Se \u00eencarc\u0103: @currentFileName&lt;/span&gt;\n        }\n        else\n        {\n            &lt;span class=\"text-success\"&gt;\u00cenc\u0103rcare complet\u0103!&lt;/span&gt;\n        }\n    &lt;/FodText&gt;\n\n    &lt;FodText Typo=\"Typo.body2\" Align=\"FodAlign.Center\"&gt;\n        @uploadedFiles fi\u0219iere din @totalFiles\n    &lt;/FodText&gt;\n&lt;/div&gt;\n\n@code {\n    private double uploadProgress = 0;\n    private string currentFileName = \"\";\n    private int uploadedFiles = 0;\n    private int totalFiles = 0;\n\n    private async Task UploadFiles(List&lt;IBrowserFile&gt; files)\n    {\n        totalFiles = files.Count;\n\n        for (int i = 0; i &lt; files.Count; i++)\n        {\n            currentFileName = files[i].Name;\n            uploadProgress = (double)(i * 100) / totalFiles;\n            StateHasChanged();\n\n            await UploadFile(files[i]);\n\n            uploadedFiles = i + 1;\n            uploadProgress = (double)(uploadedFiles * 100) / totalFiles;\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#dashboard-cu-multiple-indicatoare","title":"Dashboard cu multiple indicatoare","text":"<pre><code>&lt;FodGrid container spacing=\"3\" justifyContent=\"Center\"&gt;\n    @foreach (var metric in performanceMetrics)\n    {\n        &lt;FodGrid item xs=\"6\" sm=\"4\" md=\"3\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent Class=\"text-center\"&gt;\n                    &lt;FodWizardLoadingCircle Value=\"@metric.Value\" \n                                            FodColor=\"@GetColorForValue(metric.Value)\"\n                                            FodSize=\"FodSize.Large\"\n                                            StrokeWidth=\"5\" /&gt;\n                    &lt;FodText Typo=\"Typo.h6\" Class=\"mt-2\"&gt;\n                        @metric.Name\n                    &lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.TextSecondary\"&gt;\n                        @metric.Description\n                    &lt;/FodText&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n\n@code {\n    private List&lt;PerformanceMetric&gt; performanceMetrics = new()\n    {\n        new() { Name = \"CPU\", Value = 45, Description = \"Utilizare procesor\" },\n        new() { Name = \"RAM\", Value = 78, Description = \"Memorie utilizat\u0103\" },\n        new() { Name = \"Disk\", Value = 92, Description = \"Spa\u021biu ocupat\" },\n        new() { Name = \"Network\", Value = 23, Description = \"Trafic re\u021bea\" }\n    };\n\n    private string GetColorForValue(double value)\n    {\n        return value switch\n        {\n            &lt; 50 =&gt; \"success\",\n            &lt; 80 =&gt; \"warning\",\n            _ =&gt; \"error\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#animatie-progres-cu-tranzitii","title":"Anima\u021bie progres cu tranzi\u021bii","text":"<pre><code>&lt;div class=\"animated-progress\"&gt;\n    &lt;FodWizardLoadingCircle @ref=\"progressCircle\"\n                            Value=\"@animatedValue\" \n                            FodSize=\"FodSize.Largest\"\n                            FodColor=\"primary\"\n                            StrokeWidth=\"6\" /&gt;\n\n    &lt;div class=\"progress-controls mt-4\"&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"() =&gt; AnimateToValue(0)\"&gt;0%&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"() =&gt; AnimateToValue(25)\"&gt;25%&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"() =&gt; AnimateToValue(50)\"&gt;50%&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"() =&gt; AnimateToValue(75)\"&gt;75%&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" \n                   OnClick=\"() =&gt; AnimateToValue(100)\"&gt;100%&lt;/FodButton&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FodWizardLoadingCircle progressCircle;\n    private double animatedValue = 0;\n    private System.Timers.Timer animationTimer;\n\n    private void AnimateToValue(double targetValue)\n    {\n        animationTimer?.Dispose();\n        animationTimer = new System.Timers.Timer(10);\n\n        animationTimer.Elapsed += (sender, e) =&gt;\n        {\n            InvokeAsync(() =&gt;\n            {\n                var diff = targetValue - animatedValue;\n                if (Math.Abs(diff) &lt; 1)\n                {\n                    animatedValue = targetValue;\n                    animationTimer.Dispose();\n                }\n                else\n                {\n                    animatedValue += diff * 0.1;\n                }\n                StateHasChanged();\n            });\n        };\n\n        animationTimer.Start();\n    }\n\n    public void Dispose()\n    {\n        animationTimer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#6-stilizare-css","title":"6. Stilizare CSS","text":"<pre><code>/* Container principal */\n.fod-progress-circular {\n    display: inline-flex;\n    position: relative;\n}\n\n/* Dimensiuni predefinite */\n.fod-progress-small {\n    width: 32px;\n    height: 32px;\n}\n\n.fod-progress-medium {\n    width: 48px;\n    height: 48px;\n}\n\n.fod-progress-large {\n    width: 64px;\n    height: 64px;\n}\n\n.fod-progress-largest {\n    width: 96px;\n    height: 96px;\n}\n\n/* SVG styling */\n.fod-progress-circular-svg {\n    transform: rotate(-90deg);\n    width: 100%;\n    height: 100%;\n}\n\n/* Circle animations */\n.fod-progress-circular-circle {\n    transition: stroke-dashoffset 0.3s ease-in-out;\n}\n\n.fod-progress-indeterminate {\n    animation: progress-circular-rotate 1.4s linear infinite;\n}\n\n@keyframes progress-circular-rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n/* Text styling */\n.fod-progress-circular text {\n    font-weight: 600;\n    user-select: none;\n}\n\n/* Color variants */\n.fod-primary-text .fod-progress-circular-circle {\n    stroke: var(--fod-palette-primary-main);\n}\n\n.fod-success-text .fod-progress-circular-circle {\n    stroke: var(--fod-palette-success-main);\n}\n\n.fod-warning-text .fod-progress-circular-circle {\n    stroke: var(--fod-palette-warning-main);\n}\n\n.fod-error-text .fod-progress-circular-circle {\n    stroke: var(--fod-palette-error-main);\n}\n\n/* Background circle */\n.fod-progress-circular-circle::before {\n    content: \"\";\n    position: absolute;\n    stroke: currentColor;\n    opacity: 0.1;\n    stroke-dasharray: 126;\n    stroke-dashoffset: 0;\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#7-integrare-cu-fodwizardsteps","title":"7. Integrare cu FodWizardSteps","text":"<pre><code>&lt;FodWizardSteps ShowProgress=\"true\"&gt;\n    &lt;!-- Componenta FodWizardLoadingCircle este inclus\u0103 automat --&gt;\n    &lt;!-- \u0219i actualizat\u0103 pe baza progresului prin pa\u0219i --&gt;\n&lt;/FodWizardSteps&gt;\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#timer-countdown","title":"Timer countdown","text":"<pre><code>&lt;div class=\"countdown-timer text-center\"&gt;\n    &lt;FodWizardLoadingCircle Value=\"@timeRemaining\" \n                            FodSize=\"FodSize.Largest\"\n                            FodColor=\"@GetTimerColor()\"\n                            StrokeWidth=\"8\" /&gt;\n\n    &lt;FodText Typo=\"Typo.h5\" Class=\"mt-3\"&gt;\n        Timp r\u0103mas: @FormatTime(secondsRemaining)\n    &lt;/FodText&gt;\n&lt;/div&gt;\n\n@code {\n    private int totalSeconds = 300; // 5 minute\n    private int secondsRemaining = 300;\n    private double timeRemaining =&gt; (double)secondsRemaining / totalSeconds * 100;\n    private System.Timers.Timer countdownTimer;\n\n    protected override void OnInitialized()\n    {\n        countdownTimer = new System.Timers.Timer(1000);\n        countdownTimer.Elapsed += (s, e) =&gt; \n        {\n            InvokeAsync(() =&gt; \n            {\n                if (secondsRemaining &gt; 0)\n                {\n                    secondsRemaining--;\n                    StateHasChanged();\n                }\n                else\n                {\n                    countdownTimer.Stop();\n                    OnTimerComplete();\n                }\n            });\n        };\n        countdownTimer.Start();\n    }\n\n    private string GetTimerColor()\n    {\n        return timeRemaining switch\n        {\n            &gt; 50 =&gt; \"success\",\n            &gt; 20 =&gt; \"warning\",\n            _ =&gt; \"error\"\n        };\n    }\n\n    private string FormatTime(int seconds)\n    {\n        var minutes = seconds / 60;\n        var secs = seconds % 60;\n        return $\"{minutes:00}:{secs:00}\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardLoadingCircle/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Valori \u00een range - Asigura\u021bi c\u0103 Value este \u00eentre Min \u0219i Max</li> <li>Dimensiuni apropriate - Alege\u021bi FodSize potrivit contextului</li> <li>Culori semnificative - Folosi\u021bi culori care indic\u0103 starea</li> <li>StrokeWidth propor\u021bional - Ajusta\u021bi grosimea cu dimensiunea</li> <li>Actualiz\u0103ri fluide - Evita\u021bi salturi bru\u0219te \u00een valori</li> </ol>"},{"location":"fod/componente/FodWizardLoadingCircle/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>SVG rendering eficient</li> <li>Tranzi\u021bii CSS pentru anima\u021bii fluide</li> <li>Evita\u021bi actualiz\u0103ri prea frecvente (&lt; 10ms)</li> <li>Re-rendare minim\u0103 prin change detection</li> </ul>"},{"location":"fod/componente/FodWizardLoadingCircle/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Role <code>progressbar</code> pentru screen readers</li> <li><code>aria-valuenow</code> actualizat dinamic</li> <li>Text procent vizibil pentru claritate</li> <li>Contrast adecvat pentru text</li> </ul>"},{"location":"fod/componente/FodWizardLoadingCircle/#12-comparatie-cu-alte-loading","title":"12. Compara\u021bie cu alte Loading","text":"Caracteristic\u0103 FodWizardLoadingCircle FodLoadingCircular FodLoadingLinear Form\u0103 Circular cu % Circular Linear Afi\u0219are valoare Da Nu Nu Use case Progress tracking Loading state Progress bar Personalizare Mare Medie Medie"},{"location":"fod/componente/FodWizardLoadingCircle/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodWizardLoadingCircle/#procentul-nu-se-actualizeaza","title":"Procentul nu se actualizeaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Value se schimb\u0103</li> <li>Verifica\u021bi StateHasChanged()</li> <li>Verifica\u021bi range-ul Min/Max</li> </ul>"},{"location":"fod/componente/FodWizardLoadingCircle/#cercul-nu-apare-complet","title":"Cercul nu apare complet","text":"<ul> <li>Verifica\u021bi StrokeWidth nu e prea mare</li> <li>Verifica\u021bi CSS pentru overflow</li> <li>Verifica\u021bi viewBox SVG</li> </ul>"},{"location":"fod/componente/FodWizardLoadingCircle/#14-exemple-codepenjsfiddle","title":"14. Exemple CodePen/JSFiddle","text":"<p>Pentru a testa comportamentul SVG: <pre><code>&lt;svg viewBox=\"22 22 44 44\" width=\"96\" height=\"96\"&gt;\n    &lt;circle cx=\"44\" cy=\"44\" r=\"20\" \n            fill=\"none\" \n            stroke=\"blue\" \n            stroke-width=\"3\"\n            stroke-dasharray=\"126\"\n            stroke-dashoffset=\"31.5\"\n            transform=\"rotate(-90 44 44)\" /&gt;\n&lt;/svg&gt;\n&lt;!-- stroke-dashoffset=\"31.5\" = 75% progress --&gt;\n</code></pre></p>"},{"location":"fod/componente/FodWizardLoadingCircle/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodWizardLoadingCircle</code> ofer\u0103 o modalitate elegant\u0103 \u0219i intuitiv\u0103 de a afi\u0219a progresul \u00een aplica\u021bii. Cu design clar \u0219i personalizare flexibil\u0103, componenta este ideal\u0103 pentru wizard-uri, procese de \u00eenc\u0103rcare \u0219i orice scenariu care necesit\u0103 feedback vizual despre progres.</p>"},{"location":"fod/componente/FodWizardStep/","title":"FodWizardStep","text":""},{"location":"fod/componente/FodWizardStep/#documentatie-pentru-componenta-fodwizardstep","title":"Documenta\u021bie pentru componenta FodWizardStep","text":""},{"location":"fod/componente/FodWizardStep/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodWizardStep</code> reprezint\u0103 un pas individual \u00eentr-un wizard <code>FodWizard</code>. Componenta gestioneaz\u0103 validarea formularelor, navigarea \u00eentre pa\u0219i \u0219i afi\u0219area con\u021binutului specific fiec\u0103rui pas, oferind o experien\u021b\u0103 ghidat\u0103 pentru completarea proceselor multi-pas.</p> <p>Caracteristici principale: - Validare automat\u0103 cu EditContext - Navigare personalizabil\u0103 \u00eenainte/\u00eenapoi - Pa\u0219i op\u021bionali - Evenimente pentru activare \u0219i tranzi\u021bii - Suport pentru iconi\u021be distinctive - Gestionare multiple EditContext - Control granular asupra navig\u0103rii - Integrare complet\u0103 cu FodWizard</p>"},{"location":"fod/componente/FodWizardStep/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodWizardStep/#wizard-simplu-cu-pasi","title":"Wizard simplu cu pa\u0219i","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Date personale\"&gt;\n        &lt;FodTextField @bind-Value=\"model.FirstName\" Label=\"Prenume\" Required=\"true\" /&gt;\n        &lt;FodTextField @bind-Value=\"model.LastName\" Label=\"Nume\" Required=\"true\" /&gt;\n        &lt;FodDatePicker @bind-Value=\"model.BirthDate\" Label=\"Data na\u0219terii\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Date de contact\"&gt;\n        &lt;FodTextField @bind-Value=\"model.Email\" Label=\"Email\" Type=\"email\" /&gt;\n        &lt;FodTextField @bind-Value=\"model.Phone\" Label=\"Telefon\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Confirmare\"&gt;\n        &lt;h4&gt;Verifica\u021bi datele introduse:&lt;/h4&gt;\n        &lt;p&gt;Nume: @model.FirstName @model.LastName&lt;/p&gt;\n        &lt;p&gt;Email: @model.Email&lt;/p&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private UserModel model = new();\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#pasi-cu-validare-editform","title":"Pa\u0219i cu validare EditForm","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Informa\u021bii generale\" EditContext=\"editContext1\"&gt;\n        &lt;EditForm EditContext=\"editContext1\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;ValidationSummary /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.CompanyName\" \n                          Label=\"Numele companiei\" \n                          Required=\"true\" /&gt;\n            &lt;FodTextField @bind-Value=\"model.TaxId\" \n                          Label=\"Cod fiscal\" \n                          Required=\"true\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Adres\u0103\" EditContext=\"editContext2\"&gt;\n        &lt;EditForm EditContext=\"editContext2\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;ValidationSummary /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.Street\" Label=\"Strad\u0103\" /&gt;\n            &lt;FodTextField @bind-Value=\"model.City\" Label=\"Ora\u0219\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private CompanyModel model = new();\n    private EditContext editContext1;\n    private EditContext editContext2;\n\n    protected override void OnInitialized()\n    {\n        editContext1 = new EditContext(model);\n        editContext2 = new EditContext(model);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#3-parametri","title":"3. Parametri","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Name</code> <code>string</code> Numele pasului afi\u0219at \u00een wizard - <code>Icon</code> <code>string</code> Iconi\u021b\u0103 pentru pas - <code>Step</code> <code>int</code> Num\u0103rul pasului - <code>Optional</code> <code>bool</code> Marcheaz\u0103 pasul ca op\u021bional <code>false</code> <code>ShowTitle</code> <code>bool</code> Afi\u0219eaz\u0103 titlul pasului <code>false</code> <code>ValidateEditContextsOnNext</code> <code>bool</code> Valideaz\u0103 toate EditContext la Next <code>true</code> <code>CanGoBack</code> <code>bool</code> Permite navigarea \u00eenapoi <code>true</code> <code>CanGoNext</code> <code>bool</code> Permite navigarea \u00eenainte <code>true</code> <code>NextButtonText</code> <code>string</code> Text personalizat pentru butonul Next - <code>BackButtonText</code> <code>string</code> Text personalizat pentru butonul Back - <code>EditContext</code> <code>EditContext</code> Context principal pentru validare - <code>OnNext</code> <code>Func&lt;Task&lt;bool&gt;&gt;</code> Callback \u00eenainte de urm\u0103torul pas - <code>OnBack</code> <code>Func&lt;Task&lt;bool&gt;&gt;</code> Callback \u00eenainte de pasul anterior - <code>OnActivate</code> <code>Func&lt;Task&gt;</code> Callback la activarea pasului - <code>NextStep</code> <code>Func&lt;int&gt;</code> Determin\u0103 urm\u0103torul pas dinamic - <code>BackStep</code> <code>Func&lt;int&gt;</code> Determin\u0103 pasul anterior dinamic - <code>ChildContent</code> <code>RenderFragment</code> Con\u021binutul pasului -"},{"location":"fod/componente/FodWizardStep/#4-metode-publice","title":"4. Metode Publice","text":"Metod\u0103 Descriere <code>RegisterEditContext(EditContext)</code> \u00cenregistreaz\u0103 un EditContext pentru validare <code>Validate()</code> Valideaz\u0103 toate EditContext \u00eenregistrate"},{"location":"fod/componente/FodWizardStep/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodWizardStep/#wizard-cu-validare-complexa","title":"Wizard cu validare complex\u0103","text":"<pre><code>&lt;FodWizard @ref=\"wizard\"&gt;\n    &lt;FodWizardStep Name=\"Date client\" Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n        &lt;CascadingValue Value=\"@currentStep\" Name=\"WizardStep\"&gt;\n            &lt;EditForm EditContext=\"clientContext\" OnValidSubmit=\"SaveClient\"&gt;\n                &lt;DataAnnotationsValidator /&gt;\n                &lt;ValidationSummary /&gt;\n\n                &lt;FodTextField @bind-Value=\"client.Name\" \n                              Label=\"Nume complet\" \n                              Required=\"true\" /&gt;\n                &lt;FodTextField @bind-Value=\"client.Idnp\" \n                              Label=\"IDNP\" \n                              Required=\"true\"\n                              MaxLength=\"13\" /&gt;\n\n                &lt;FodButton Type=\"submit\" Style=\"display: none;\"&gt;Submit&lt;/FodButton&gt;\n            &lt;/EditForm&gt;\n        &lt;/CascadingValue&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Servicii\" \n                   Icon=\"@FodIcons.Material.Filled.ShoppingCart\"\n                   OnNext=\"ValidateServices\"&gt;\n        &lt;h4&gt;Selecta\u021bi serviciile dorite:&lt;/h4&gt;\n        @foreach (var service in availableServices)\n        {\n            &lt;FodCheckbox @bind-Checked=\"service.Selected\" \n                         Label=\"@($\"{service.Name} - {service.Price} MDL\")\" /&gt;\n        }\n\n        @if (!selectedServices.Any())\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n                Selecta\u021bi cel pu\u021bin un serviciu\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Plat\u0103\" \n                   Icon=\"@FodIcons.Material.Filled.Payment\"\n                   Optional=\"@(totalAmount == 0)\"&gt;\n        &lt;h4&gt;Detalii plat\u0103&lt;/h4&gt;\n        &lt;FodText&gt;Total de plat\u0103: @totalAmount MDL&lt;/FodText&gt;\n\n        &lt;FodRadioGroup @bind-SelectedOption=\"paymentMethod\"&gt;\n            &lt;FodRadio Option=\"@(\"card\")\"&gt;Card bancar&lt;/FodRadio&gt;\n            &lt;FodRadio Option=\"@(\"cash\")\"&gt;Numerar&lt;/FodRadio&gt;\n            &lt;FodRadio Option=\"@(\"transfer\")\"&gt;Transfer bancar&lt;/FodRadio&gt;\n        &lt;/FodRadioGroup&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private FodWizard wizard;\n    private FodWizardStep currentStep;\n    private ClientModel client = new();\n    private EditContext clientContext;\n    private List&lt;ServiceItem&gt; availableServices = new();\n    private string paymentMethod = \"card\";\n\n    private IEnumerable&lt;ServiceItem&gt; selectedServices =&gt; \n        availableServices.Where(s =&gt; s.Selected);\n\n    private decimal totalAmount =&gt; \n        selectedServices.Sum(s =&gt; s.Price);\n\n    protected override void OnInitialized()\n    {\n        clientContext = new EditContext(client);\n        currentStep?.RegisterEditContext(clientContext);\n    }\n\n    private async Task&lt;bool&gt; ValidateServices()\n    {\n        if (!selectedServices.Any())\n        {\n            await ShowNotification(\"Selecta\u021bi cel pu\u021bin un serviciu\", FodSeverity.Error);\n            return false;\n        }\n        return true;\n    }\n\n    private void SaveClient()\n    {\n        // Salvare date client\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#wizard-cu-navigare-conditionata","title":"Wizard cu navigare condi\u021bionat\u0103","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Tip persoan\u0103\" \n                   Icon=\"@FodIcons.Material.Filled.Category\"&gt;\n        &lt;FodRadioGroup @bind-SelectedOption=\"personType\"&gt;\n            &lt;FodRadio Option=\"@(\"individual\")\"&gt;Persoan\u0103 fizic\u0103&lt;/FodRadio&gt;\n            &lt;FodRadio Option=\"@(\"company\")\"&gt;Persoan\u0103 juridic\u0103&lt;/FodRadio&gt;\n        &lt;/FodRadioGroup&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Date individuale\" \n                   Icon=\"@FodIcons.Material.Filled.Person\"\n                   NextStep=\"@(() =&gt; personType == \"individual\" ? 3 : 2)\"&gt;\n        @if (personType == \"individual\")\n        {\n            &lt;FodTextField @bind-Value=\"individual.FirstName\" Label=\"Prenume\" /&gt;\n            &lt;FodTextField @bind-Value=\"individual.LastName\" Label=\"Nume\" /&gt;\n            &lt;FodTextField @bind-Value=\"individual.Idnp\" Label=\"IDNP\" /&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Date companie\" \n                   Icon=\"@FodIcons.Material.Filled.Business\"&gt;\n        @if (personType == \"company\")\n        {\n            &lt;FodTextField @bind-Value=\"company.Name\" Label=\"Denumire\" /&gt;\n            &lt;FodTextField @bind-Value=\"company.Idno\" Label=\"IDNO\" /&gt;\n            &lt;FodTextField @bind-Value=\"company.VatNumber\" Label=\"Cod TVA\" /&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Rezumat\"&gt;\n        &lt;h4&gt;Date introduse:&lt;/h4&gt;\n        @if (personType == \"individual\")\n        {\n            &lt;p&gt;Persoan\u0103 fizic\u0103: @individual.FirstName @individual.LastName&lt;/p&gt;\n        }\n        else\n        {\n            &lt;p&gt;Persoan\u0103 juridic\u0103: @company.Name&lt;/p&gt;\n        }\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private string personType = \"individual\";\n    private IndividualModel individual = new();\n    private CompanyModel company = new();\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#wizard-cu-activare-asincrona","title":"Wizard cu activare asincron\u0103","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Selectare serviciu\" \n                   Icon=\"@FodIcons.Material.Filled.Apps\"&gt;\n        &lt;FodSelect @bind-Value=\"selectedServiceId\" Label=\"Serviciu\"&gt;\n            @foreach (var service in services)\n            {\n                &lt;FodSelectItem Value=\"@service.Id\"&gt;@service.Name&lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Configurare\" \n                   Icon=\"@FodIcons.Material.Filled.Settings\"\n                   OnActivate=\"LoadServiceConfiguration\"&gt;\n        @if (isLoading)\n        {\n            &lt;FodLoadingLinear /&gt;\n        }\n        else if (configuration != null)\n        {\n            &lt;h4&gt;Configurare @configuration.ServiceName&lt;/h4&gt;\n            @foreach (var param in configuration.Parameters)\n            {\n                &lt;FodTextField @bind-Value=\"param.Value\" \n                              Label=\"@param.Label\" \n                              HelperText=\"@param.Description\" /&gt;\n            }\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Previzualizare\" \n                   Icon=\"@FodIcons.Material.Filled.Preview\"\n                   OnActivate=\"GeneratePreview\"&gt;\n        @if (preview != null)\n        {\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    @((MarkupString)preview.Html)\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        }\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private int selectedServiceId;\n    private ServiceConfiguration configuration;\n    private PreviewResult preview;\n    private bool isLoading;\n\n    private async Task LoadServiceConfiguration()\n    {\n        isLoading = true;\n        configuration = await ServiceApi.GetConfiguration(selectedServiceId);\n        isLoading = false;\n    }\n\n    private async Task GeneratePreview()\n    {\n        preview = await ServiceApi.GeneratePreview(configuration);\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#wizard-cu-pasi-multipli-editcontext","title":"Wizard cu pa\u0219i multipli EditContext","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Date principale\" @ref=\"mainDataStep\"&gt;\n        &lt;EditForm EditContext=\"mainContext\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;FodTextField @bind-Value=\"mainData.Title\" Label=\"Titlu\" /&gt;\n        &lt;/EditForm&gt;\n\n        &lt;EditForm EditContext=\"detailsContext\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;FodTextArea @bind-Value=\"details.Description\" Label=\"Descriere\" /&gt;\n        &lt;/EditForm&gt;\n\n        &lt;EditForm EditContext=\"settingsContext\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;FodCheckbox @bind-Checked=\"settings.IsPublic\" Label=\"Public\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private FodWizardStep mainDataStep;\n    private MainData mainData = new();\n    private Details details = new();\n    private Settings settings = new();\n\n    private EditContext mainContext;\n    private EditContext detailsContext;\n    private EditContext settingsContext;\n\n    protected override void OnAfterRender(bool firstRender)\n    {\n        if (firstRender)\n        {\n            mainDataStep.RegisterEditContext(mainContext);\n            mainDataStep.RegisterEditContext(detailsContext);\n            mainDataStep.RegisterEditContext(settingsContext);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#6-integrare-cu-formulare","title":"6. Integrare cu Formulare","text":""},{"location":"fod/componente/FodWizardStep/#cu-validare-server-side","title":"Cu validare server-side","text":"<pre><code>&lt;FodWizard&gt;\n    &lt;FodWizardStep Name=\"Date formular\" \n                   OnNext=\"ValidateWithServer\"&gt;\n        &lt;EditForm EditContext=\"editContext\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;ServerValidator @ref=\"serverValidator\" /&gt;\n            &lt;ValidationSummary /&gt;\n\n            &lt;FodTextField @bind-Value=\"model.Username\" \n                          Label=\"Nume utilizator\" /&gt;\n            &lt;FodTextField @bind-Value=\"model.Email\" \n                          Label=\"Email\" \n                          Type=\"email\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private ServerValidator serverValidator;\n\n    private async Task&lt;bool&gt; ValidateWithServer()\n    {\n        var result = await UserApi.ValidateData(model);\n        if (!result.IsValid)\n        {\n            serverValidator.DisplayErrors(result.Errors);\n            return false;\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#7-stilizare-si-teme","title":"7. Stilizare \u0219i Teme","text":"<pre><code>/* Pas activ personalizat */\n.wizard-steps .nav-link.active {\n    background-color: var(--fod-palette-primary-main);\n    color: white;\n    font-weight: 600;\n}\n\n/* Iconi\u021be colorate pentru pa\u0219i */\n.wizard-step-icon {\n    color: var(--fod-palette-primary-light);\n    margin-right: 8px;\n}\n\n/* Pas op\u021bional cu stil distinct */\n.wizard-step-optional {\n    font-style: italic;\n    opacity: 0.8;\n}\n\n/* Anima\u021bie tranzi\u021bie \u00eentre pa\u0219i */\n.wizard-content {\n    animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n    from { opacity: 0; transform: translateX(20px); }\n    to { opacity: 1; transform: translateX(0); }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#8-scenarii-comune","title":"8. Scenarii Comune","text":""},{"location":"fod/componente/FodWizardStep/#wizard-pentru-inregistrare","title":"Wizard pentru \u00eenregistrare","text":"<pre><code>&lt;FodWizard Title=\"\u00cenregistrare cont nou\"&gt;\n    &lt;FodWizardStep Name=\"Tip cont\" Icon=\"@FodIcons.Material.Filled.AccountBox\"&gt;\n        &lt;FodRadioGroup @bind-SelectedOption=\"accountType\"&gt;\n            &lt;FodRadio Option=\"@(\"personal\")\"&gt;Cont personal&lt;/FodRadio&gt;\n            &lt;FodRadio Option=\"@(\"business\")\"&gt;Cont business&lt;/FodRadio&gt;\n        &lt;/FodRadioGroup&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Date de autentificare\" \n                   Icon=\"@FodIcons.Material.Filled.Security\"\n                   ValidateEditContextsOnNext=\"true\"&gt;\n        &lt;EditForm Model=\"credentials\" OnValidSubmit=\"CheckUsername\"&gt;\n            &lt;DataAnnotationsValidator /&gt;\n            &lt;ValidationSummary /&gt;\n\n            &lt;FodTextField @bind-Value=\"credentials.Username\" \n                          Label=\"Nume utilizator\" \n                          Required=\"true\"\n                          HelperText=\"Minim 3 caractere\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"credentials.Password\" \n                          Label=\"Parol\u0103\" \n                          Type=\"password\"\n                          Required=\"true\" /&gt;\n\n            &lt;FodTextField @bind-Value=\"credentials.ConfirmPassword\" \n                          Label=\"Confirm\u0103 parola\" \n                          Type=\"password\"\n                          Required=\"true\" /&gt;\n        &lt;/EditForm&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Verificare email\" \n                   Icon=\"@FodIcons.Material.Filled.Email\"\n                   OnActivate=\"SendVerificationCode\"&gt;\n        &lt;FodTextField @bind-Value=\"email\" \n                      Label=\"Adres\u0103 email\" \n                      Type=\"email\" /&gt;\n\n        &lt;FodTextField @bind-Value=\"verificationCode\" \n                      Label=\"Cod verificare\"\n                      HelperText=\"Verifica\u021bi email-ul pentru cod\" /&gt;\n\n        &lt;FodButton OnClick=\"ResendCode\" \n                   Variant=\"FodVariant.Text\"\n                   Size=\"FodSize.Small\"&gt;\n            Retrimite cod\n        &lt;/FodButton&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Name=\"Finalizare\" \n                   Icon=\"@FodIcons.Material.Filled.CheckCircle\"\n                   NextButtonText=\"Creeaz\u0103 cont\"&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n            Contul dvs. este gata de creare!\n        &lt;/FodAlert&gt;\n\n        &lt;h4&gt;Rezumat:&lt;/h4&gt;\n        &lt;p&gt;Tip cont: @accountType&lt;/p&gt;\n        &lt;p&gt;Utilizator: @credentials.Username&lt;/p&gt;\n        &lt;p&gt;Email: @email&lt;/p&gt;\n\n        &lt;FodCheckbox @bind-Checked=\"acceptTerms\" \n                     Label=\"Accept termenii \u0219i condi\u021biile\" /&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n</code></pre>"},{"location":"fod/componente/FodWizardStep/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Validare progresiv\u0103 - Valida\u021bi fiecare pas \u00eenainte de continuare</li> <li>Feedback clar - Afi\u0219a\u021bi erori \u0219i mesaje de succes</li> <li>Pa\u0219i op\u021bionali - Marca\u021bi clar pa\u0219ii care pot fi omi\u0219i</li> <li>Salvare progres - Salva\u021bi datele pentru a permite revenire</li> <li>Indicatori vizuali - Folosi\u021bi iconi\u021be pentru claritate</li> <li>Navigare intuitiv\u0103 - Permite\u021bi navigare \u00eenapoi c\u00e2nd e posibil</li> </ol>"},{"location":"fod/componente/FodWizardStep/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>\u00cenc\u0103rca\u021bi date asincron \u00een OnActivate</li> <li>Evita\u021bi valid\u0103ri costisitoare pe fiecare tastare</li> <li>Folosi\u021bi lazy loading pentru con\u021binut complex</li> <li>Cache-ui\u021bi datele \u00eentre pa\u0219i c\u00e2nd e posibil</li> </ul>"},{"location":"fod/componente/FodWizardStep/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Pa\u0219ii sunt marca\u021bi cu ARIA labels</li> <li>Navigarea cu tastatura este suportat\u0103</li> <li>Mesajele de eroare sunt anun\u021bate de screen readers</li> <li>Focus management \u00eentre pa\u0219i</li> </ul>"},{"location":"fod/componente/FodWizardStep/#12-troubleshooting","title":"12. Troubleshooting","text":""},{"location":"fod/componente/FodWizardStep/#validarea-nu-functioneaza","title":"Validarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 EditContext este setat corect</li> <li>Verifica\u021bi ValidateEditContextsOnNext=\"true\"</li> <li>Asigura\u021bi-v\u0103 c\u0103 RegisterEditContext este apelat</li> </ul>"},{"location":"fod/componente/FodWizardStep/#navigarea-nu-functioneaza","title":"Navigarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 FodWizard con\u021bine pa\u0219ii</li> <li>Verifica\u021bi valorile CanGoNext/CanGoBack</li> <li>Verifica\u021bi c\u0103 OnNext returneaz\u0103 true</li> </ul>"},{"location":"fod/componente/FodWizardStep/#continutul-nu-se-afiseaza","title":"Con\u021binutul nu se afi\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 pasul este activ</li> <li>Verifica\u021bi ierarhia CascadingValue</li> <li>Verifica\u021bi c\u0103 ChildContent este definit</li> </ul>"},{"location":"fod/componente/FodWizardStep/#13-concluzie","title":"13. Concluzie","text":"<p><code>FodWizardStep</code> ofer\u0103 o structur\u0103 flexibil\u0103 pentru crearea de procese ghidate \u00een aplica\u021biile FOD. Cu suport pentru validare complex\u0103, navigare condi\u021bionat\u0103 \u0219i integrare complet\u0103 cu sistemul de formulare Blazor, componenta faciliteaz\u0103 implementarea wizard-urilor intuitive \u0219i robuste.</p>"},{"location":"fod/componente/FodWizardSteps/","title":"FodWizardSteps","text":""},{"location":"fod/componente/FodWizardSteps/#documentatie-pentru-componenta-fodwizardsteps","title":"Documenta\u021bie pentru componenta FodWizardSteps","text":""},{"location":"fod/componente/FodWizardSteps/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodWizardSteps</code> este o component\u0103 wizard avansat\u0103 cu navigare lateral\u0103 \u0219i indicator de progres circular. Ofer\u0103 o interfa\u021b\u0103 complex\u0103 pentru procese multi-pas cu sidebar de navigare, validare per pas \u0219i control avansat al fluxului.</p> <p>Caracteristici principale: - Sidebar cu lista pa\u0219ilor \u0219i progres vizual - Indicator circular de progres - Navigare \u00eenainte/\u00eenapoi cu validare - Suport pentru callback-uri per pas - Blocare UI \u00een timpul proces\u0103rii - Layout responsive cu sidebar colapsabil - Integrare cu FodWizard_Step</p>"},{"location":"fod/componente/FodWizardSteps/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/FodWizardSteps/#wizard-simplu-cu-progres","title":"Wizard simplu cu progres","text":"<pre><code>&lt;FodWizardSteps ShowProgress=\"true\"&gt;\n    &lt;FodWizard_Step Name=\"Date personale\" Icon=\"@FodIcons.Material.Filled.Person\"&gt;\n        &lt;FodTextField Label=\"Nume\" @bind-Value=\"model.Name\" /&gt;\n        &lt;FodTextField Label=\"Email\" @bind-Value=\"model.Email\" /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;FodWizard_Step Name=\"Adres\u0103\" Icon=\"@FodIcons.Material.Filled.Home\"&gt;\n        &lt;FodTextField Label=\"Strad\u0103\" @bind-Value=\"model.Street\" /&gt;\n        &lt;FodTextField Label=\"Ora\u0219\" @bind-Value=\"model.City\" /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;FodWizard_Step Name=\"Confirmare\" Icon=\"@FodIcons.Material.Filled.Check\"&gt;\n        &lt;h4&gt;Verifica\u021bi datele:&lt;/h4&gt;\n        &lt;p&gt;Nume: @model.Name&lt;/p&gt;\n        &lt;p&gt;Email: @model.Email&lt;/p&gt;\n    &lt;/FodWizard_Step&gt;\n&lt;/FodWizardSteps&gt;\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>ShowProgress</code> <code>bool</code> Afi\u0219eaz\u0103 sidebar cu progres <code>false</code> <code>Enabled</code> <code>bool</code> Activeaz\u0103 navigarea \u00een sidebar <code>false</code> <code>ChildContent</code> <code>RenderFragment</code> Pa\u0219ii wizard (FodWizard_Step) - <code>ActiveStep</code> <code>FodWizard_Step</code> Pasul activ curent - <code>InitialStep</code> <code>int</code> Indexul pasului ini\u021bial <code>0</code> <code>ActiveStepIx</code> <code>int</code> Index pas activ -"},{"location":"fod/componente/FodWizardSteps/#4-proprietati-si-metode-publice","title":"4. Propriet\u0103\u021bi \u0219i Metode Publice","text":"<ul> <li><code>Steps</code> - Lista tuturor pa\u0219ilor</li> <li><code>PassedSteps</code> - Lista pa\u0219ilor parcur\u0219i</li> <li><code>IsLastStep</code> - Indic\u0103 dac\u0103 e ultimul pas</li> <li><code>GoToStep(int step)</code> - Navigheaz\u0103 la un pas specific</li> <li><code>GoNext()</code> - Mergi la urm\u0103torul pas</li> <li><code>GoBack()</code> - Mergi la pasul anterior</li> <li><code>Cancel()</code> - Revino la primul pas</li> </ul>"},{"location":"fod/componente/FodWizardSteps/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/FodWizardSteps/#wizard-cu-validare-si-callback-uri","title":"Wizard cu validare \u0219i callback-uri","text":"<pre><code>&lt;FodWizardSteps ShowProgress=\"true\" @ref=\"wizardSteps\"&gt;\n    &lt;FodWizard_Step Name=\"Selectare serviciu\" \n                    Icon=\"@FodIcons.Material.Filled.Category\"\n                    OnNext=\"ValidateServiceSelection\"\n                    OnActivate=\"LoadServices\"&gt;\n        &lt;FodSelect T=\"string\" @bind-Value=\"selectedService\" \n                   Label=\"Tip serviciu\"\n                   Required=\"true\"&gt;\n            @foreach (var service in availableServices)\n            {\n                &lt;FodSelectItem Value=\"@service.Code\"&gt;@service.Name&lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;FodWizard_Step Name=\"Detalii cerere\" \n                    Icon=\"@FodIcons.Material.Filled.Description\"\n                    OnNext=\"ValidateRequestDetails\"\n                    CanGoBack=\"true\"&gt;\n        &lt;DynamicFormForService ServiceCode=\"@selectedService\" /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;FodWizard_Step Name=\"\u00cenc\u0103rcare documente\" \n                    Icon=\"@FodIcons.Material.Filled.AttachFile\"\n                    OnNext=\"ValidateDocuments\"\n                    OnBack=\"SaveDraftDocuments\"&gt;\n        &lt;FodInputFile Multiple=\"true\" \n                      Accept=\".pdf,.doc,.docx\"\n                      OnChange=\"HandleFileUpload\" /&gt;\n        &lt;FileList Model=\"@uploadedFiles\" /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;FodWizard_Step Name=\"Plat\u0103\" \n                    Icon=\"@FodIcons.Material.Filled.Payment\"\n                    NextButtonText=\"Finalizeaz\u0103 \u0219i pl\u0103te\u0219te\"\n                    OnNext=\"ProcessPayment\"&gt;\n        &lt;PaymentForm Amount=\"@calculatedAmount\" /&gt;\n    &lt;/FodWizard_Step&gt;\n&lt;/FodWizardSteps&gt;\n\n@code {\n    private FodWizardSteps wizardSteps;\n    private string selectedService;\n    private List&lt;Service&gt; availableServices;\n    private decimal calculatedAmount;\n\n    private async Task LoadServices()\n    {\n        availableServices = await ServiceApi.GetAvailableServices();\n    }\n\n    private async Task&lt;bool&gt; ValidateServiceSelection()\n    {\n        if (string.IsNullOrEmpty(selectedService))\n        {\n            await NotificationService.ShowError(\"Selecta\u021bi un serviciu!\");\n            return false;\n        }\n\n        // Calculeaz\u0103 costul\n        calculatedAmount = await CostService.Calculate(selectedService);\n        return true;\n    }\n\n    private async Task&lt;bool&gt; ProcessPayment()\n    {\n        try\n        {\n            var result = await PaymentService.Process(calculatedAmount);\n            if (result.Success)\n            {\n                await NotificationService.ShowSuccess(\"Plat\u0103 procesat\u0103!\");\n                return true;\n            }\n        }\n        catch (Exception ex)\n        {\n            await NotificationService.ShowError($\"Eroare: {ex.Message}\");\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#wizard-cu-navigare-conditionata","title":"Wizard cu navigare condi\u021bionat\u0103","text":"<pre><code>&lt;FodWizardSteps ShowProgress=\"true\" Enabled=\"false\"&gt;\n    &lt;FodWizard_Step Name=\"Tip persoan\u0103\" \n                    NextStep=\"@GetNextStepAfterPersonType\"&gt;\n        &lt;FodRadioGroup @bind-Value=\"personType\"&gt;\n            &lt;FodRadio Value=\"@(\"individual\")\"&gt;Persoan\u0103 fizic\u0103&lt;/FodRadio&gt;\n            &lt;FodRadio Value=\"@(\"company\")\"&gt;Persoan\u0103 juridic\u0103&lt;/FodRadio&gt;\n        &lt;/FodRadioGroup&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;!-- Pas doar pentru persoane fizice --&gt;\n    &lt;FodWizard_Step Name=\"Date personale\" \n                    Step=\"2\"\n                    @key=\"individual-step\"&gt;\n        &lt;IndividualDataForm /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;!-- Pas doar pentru persoane juridice --&gt;\n    &lt;FodWizard_Step Name=\"Date companie\" \n                    Step=\"3\"\n                    @key=\"company-step\"&gt;\n        &lt;CompanyDataForm /&gt;\n    &lt;/FodWizard_Step&gt;\n\n    &lt;!-- Pas comun --&gt;\n    &lt;FodWizard_Step Name=\"Contact\" Step=\"4\"&gt;\n        &lt;ContactForm /&gt;\n    &lt;/FodWizard_Step&gt;\n&lt;/FodWizardSteps&gt;\n\n@code {\n    private string personType = \"individual\";\n\n    private int GetNextStepAfterPersonType()\n    {\n        return personType == \"individual\" ? 2 : 3;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#6-stilizare-si-layout","title":"6. Stilizare \u0219i Layout","text":"<pre><code>/* Sidebar styling */\n.fod-wizard-steps .bg-white.bg-gradient {\n    background: linear-gradient(to bottom, #ffffff, #f8f9fa) !important;\n    border-right: 1px solid var(--fod-palette-divider);\n}\n\n/* Nav items */\n.fod-wizard-steps .nav-pills .nav-item {\n    margin-bottom: 0.5rem;\n}\n\n.fod-wizard-steps .nav-link {\n    border-radius: 0.25rem;\n    padding: 0.75rem 1rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    transition: all 0.3s ease;\n}\n\n.fod-wizard-steps .nav-link.active {\n    background-color: steelblue !important;\n    color: white !important;\n}\n\n.fod-wizard-steps .nav-link:hover:not(.active) {\n    background-color: rgba(70, 130, 180, 0.1);\n}\n\n/* Content area */\n.fod-wizard-steps .wizard-content {\n    padding: 2rem;\n    min-height: 400px;\n    position: relative;\n}\n\n/* Progress indicator */\n.fod-wizard-loading-circle {\n    margin-top: 2rem;\n}\n\n/* Buttons */\n.fod-wizard-buttons {\n    padding: 1rem 2rem;\n    border-top: 1px solid var(--fod-palette-divider);\n    background-color: #f8f9fa;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n    .fod-wizard-steps .col-auto {\n        min-width: 200px !important;\n    }\n\n    .fod-wizard-buttons {\n        margin-left: 0 !important;\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#7-integrare-cu-fodwizard_step","title":"7. Integrare cu FodWizard_Step","text":"<pre><code>&lt;FodWizard_Step Name=\"Configurare avansat\u0103\" \n                Icon=\"@FodIcons.Material.Filled.Settings\"\n                Color=\"FodColor.Primary\"\n                Size=\"FodSize.Large\"\n                OnNext=\"@ValidateConfiguration\"\n                OnBack=\"@SaveDraft\"\n                OnActivate=\"@LoadConfiguration\"\n                NextButtonText=\"Salveaz\u0103 configura\u021bia\"\n                BackButtonText=\"\u00cenapoi la baz\u0103\"\n                CanGoBack=\"true\"&gt;\n    &lt;!-- Con\u021binut pas --&gt;\n&lt;/FodWizard_Step&gt;\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#8-scenarii-de-utilizare","title":"8. Scenarii de Utilizare","text":""},{"location":"fod/componente/FodWizardSteps/#proces-de-inregistrare-complex","title":"Proces de \u00eenregistrare complex","text":"<pre><code>@page \"/registration\"\n\n&lt;FodWizardSteps @ref=\"registrationWizard\" \n                ShowProgress=\"true\"\n                InitialStep=\"@GetInitialStep()\"&gt;\n    @foreach (var stepConfig in registrationSteps)\n    {\n        &lt;FodWizard_Step Name=\"@stepConfig.Name\" \n                        Icon=\"@stepConfig.Icon\"\n                        OnNext=\"@stepConfig.Validator\"&gt;\n            &lt;DynamicComponent Type=\"@stepConfig.ComponentType\" \n                              Parameters=\"@stepConfig.Parameters\" /&gt;\n        &lt;/FodWizard_Step&gt;\n    }\n&lt;/FodWizardSteps&gt;\n\n@code {\n    private FodWizardSteps registrationWizard;\n    private List&lt;StepConfiguration&gt; registrationSteps;\n\n    private int GetInitialStep()\n    {\n        // Verific\u0103 dac\u0103 utilizatorul are date salvate\n        var savedStep = LocalStorage.GetItem&lt;int&gt;(\"registration-step\");\n        return savedStep &gt; 0 ? savedStep : 0;\n    }\n\n    protected override void OnInitialized()\n    {\n        registrationSteps = new List&lt;StepConfiguration&gt;\n        {\n            new() { \n                Name = \"Tip cont\", \n                Icon = FodIcons.Material.Filled.AccountBox,\n                ComponentType = typeof(AccountTypeSelector),\n                Validator = ValidateAccountType\n            },\n            // alte pa\u0219i...\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Validare per pas - Implementa\u021bi OnNext pentru validare</li> <li>Salvare progres - Salva\u021bi starea pentru revenire</li> <li>Loading states - Folosi\u021bi OnActivate pentru \u00eenc\u0103rcare date</li> <li>Error handling - Trata\u021bi erorile \u00een callback-uri</li> <li>Navigare clar\u0103 - Folosi\u021bi nume descriptive pentru pa\u0219i</li> <li>Responsive design - Testa\u021bi pe ecrane mici</li> </ol>"},{"location":"fod/componente/FodWizardSteps/#10-performanta","title":"10. Performan\u021b\u0103","text":"<ul> <li>Lazy loading pentru con\u021binut pa\u0219i</li> <li>Evita\u021bi re-rand\u0103ri prin folosirea @key</li> <li>Cache date \u00eentre pa\u0219i c\u00e2nd e posibil</li> <li>Minimiza\u021bi valid\u0103rile asincrone</li> </ul>"},{"location":"fod/componente/FodWizardSteps/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Focus management automat \u00eentre pa\u0219i</li> <li>ARIA labels pentru navigare</li> <li>Suport keyboard pentru Next/Previous</li> <li>Anun\u021b\u0103 progresul pentru screen readers</li> </ul>"},{"location":"fod/componente/FodWizardSteps/#12-diferente-fata-de-fodwizard","title":"12. Diferen\u021be fa\u021b\u0103 de FodWizard","text":"Caracteristic\u0103 FodWizard FodWizardSteps Layout Inline/Tab-based Sidebar navigation Progress indicator Linear Circular + sidebar Visual complexity Simplu Complex Space usage Compact Necesit\u0103 mai mult spa\u021biu Use case Formulare simple Procese complexe"},{"location":"fod/componente/FodWizardSteps/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/FodWizardSteps/#sidebar-nu-apare","title":"Sidebar nu apare","text":"<ul> <li>Verifica\u021bi <code>ShowProgress=\"true\"</code></li> <li>Verifica\u021bi c\u0103 exist\u0103 cel pu\u021bin 2 pa\u0219i</li> <li>Verifica\u021bi CSS pentru <code>.bg-white</code></li> </ul>"},{"location":"fod/componente/FodWizardSteps/#navigarea-nu-functioneaza","title":"Navigarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi callback-urile OnNext</li> <li>Asigura\u021bi-v\u0103 c\u0103 returneaz\u0103 <code>true</code></li> <li>Verifica\u021bi consol\u0103 pentru erori</li> </ul>"},{"location":"fod/componente/FodWizardSteps/#layout-rupt-pe-mobile","title":"Layout rupt pe mobile","text":"<ul> <li>Ajusta\u021bi min-width pentru sidebar</li> <li>Considera\u021bi ascunderea sidebar-ului</li> <li>Folosi\u021bi FodWizard pentru mobile</li> </ul>"},{"location":"fod/componente/FodWizardSteps/#14-extensibilitate","title":"14. Extensibilitate","text":"<pre><code>@* ExtendedWizardSteps.razor *@\n@inherits FodWizardSteps\n\n&lt;div class=\"extended-wizard-steps\"&gt;\n    @if (ShowProgressBar)\n    {\n        &lt;FodLoadingLinear Value=\"@((ActiveStepIx + 1) * 100 / Steps.Count)\" /&gt;\n    }\n\n    &lt;base /&gt;\n\n    @if (ShowStepSummary)\n    {\n        &lt;div class=\"step-summary\"&gt;\n            Pas @(ActiveStepIx + 1) din @Steps.Count\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    [Parameter] public bool ShowProgressBar { get; set; }\n    [Parameter] public bool ShowStepSummary { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/FodWizardSteps/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodWizardSteps</code> ofer\u0103 o experien\u021b\u0103 wizard avansat\u0103 cu navigare lateral\u0103 \u0219i feedback vizual bogat. Ideal pentru procese complexe care necesit\u0103 ghidare clar\u0103 \u0219i validare strict\u0103, componenta combin\u0103 func\u021bionalitate robust\u0103 cu design modern pentru a crea fluxuri intuitive \u0219i eficiente.</p>"},{"location":"fod/componente/LanguageSelector/","title":"LanguageSelector","text":""},{"location":"fod/componente/LanguageSelector/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>LanguageSelector</code> ofer\u0103 o interfa\u021b\u0103 dropdown pentru schimbarea limbii/culturii aplica\u021biei. Permite utilizatorilor s\u0103 comute \u00eentre limbile suportate (Rom\u00e2n\u0103, Englez\u0103, Rus\u0103) cu actualizare automat\u0103 a \u00eentregii aplica\u021bii. Componenta folose\u0219te JavaScript interop pentru persistarea selec\u021biei \u0219i re\u00eencarc\u0103 pagina pentru a aplica noua cultur\u0103.</p>"},{"location":"fod/componente/LanguageSelector/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/LanguageSelector/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;LanguageSelector /&gt;\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#in-header-ul-aplicatiei","title":"\u00cen header-ul aplica\u021biei","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;div class=\"header-actions\"&gt;\n        &lt;LanguageSelector /&gt;\n        &lt;UserMenu /&gt;\n    &lt;/div&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#in-meniul-de-navigare","title":"\u00cen meniul de navigare","text":"<pre><code>&lt;nav class=\"navbar\"&gt;\n    &lt;div class=\"navbar-brand\"&gt;\n        &lt;img src=\"logo.png\" alt=\"Logo\" /&gt;\n    &lt;/div&gt;\n    &lt;div class=\"navbar-menu\"&gt;\n        &lt;NavLink href=\"/\"&gt;Acas\u0103&lt;/NavLink&gt;\n        &lt;NavLink href=\"/services\"&gt;Servicii&lt;/NavLink&gt;\n    &lt;/div&gt;\n    &lt;div class=\"navbar-tools\"&gt;\n        &lt;LanguageSelector /&gt;\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#cu-stilizare-personalizata","title":"Cu stilizare personalizat\u0103","text":"<pre><code>&lt;div class=\"custom-language-selector\"&gt;\n    &lt;LanguageSelector /&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n    .custom-language-selector .nav-link {\n        background-color: transparent;\n        border: 1px solid white;\n        border-radius: 4px;\n        padding: 0.5rem 1rem;\n    }\n\n    .custom-language-selector .dropdown-menu {\n        min-width: 200px;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#atribute-disponibile","title":"Atribute disponibile","text":"<p>Componenta nu expune parametri publici. Limbile suportate sunt definite intern.</p>"},{"location":"fod/componente/LanguageSelector/#limbi-suportate","title":"Limbi suportate","text":"Cod cultur\u0103 Limba DisplayName ro-md Rom\u00e2n\u0103 Rom\u00e2n\u0103 (Republica Moldova) en-us Englez\u0103 English (United States) ru-ru Rus\u0103 \u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u0420\u043e\u0441\u0441\u0438\u044f)"},{"location":"fod/componente/LanguageSelector/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice. Schimbarea limbii declan\u0219eaz\u0103 o re\u00eenc\u0103rcare complet\u0103 a paginii.</p>"},{"location":"fod/componente/LanguageSelector/#metode-publice","title":"Metode publice","text":"<p>Componenta nu expune metode publice, dar con\u021bine metoda intern\u0103 <code>changeLanguage</code> pentru gestionarea schimb\u0103rii.</p>"},{"location":"fod/componente/LanguageSelector/#componente-asociate","title":"Componente asociate","text":"<ul> <li>Folose\u0219te JSInterop pentru persistarea culturii</li> <li>NavigationManager pentru re\u00eenc\u0103rcarea paginii</li> </ul>"},{"location":"fod/componente/LanguageSelector/#stilizare","title":"Stilizare","text":""},{"location":"fod/componente/LanguageSelector/#structura-html","title":"Structura HTML","text":"<pre><code>&lt;a class=\"nav-link dropdown-toggle text-white\"&gt;\n    &lt;i class=\"fas fa-globe mr-2\"&gt;&lt;/i&gt; Rom\u00e2n\u0103 (Republica Moldova)\n    &lt;div class=\"dropdown-menu\"&gt;\n        &lt;button&gt;Rom\u00e2n\u0103 (Republica Moldova)&lt;/button&gt;\n        &lt;button&gt;English (United States)&lt;/button&gt;\n        &lt;button&gt;\u0420\u0443\u0441\u0441\u043a\u0438\u0439 (\u0420\u043e\u0441\u0441\u0438\u044f)&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#clase-css-utilizate","title":"Clase CSS utilizate","text":"<ul> <li><code>.nav-link</code> - Link-ul principal</li> <li><code>.dropdown-toggle</code> - Indicator dropdown</li> <li><code>.text-white</code> - Text alb</li> <li><code>.fas.fa-globe</code> - Iconi\u021ba glob</li> <li><code>.dropdown-menu</code> - Meniul dropdown</li> <li><code>.mr-2</code> - Margin dreapta pentru iconi\u021b\u0103</li> </ul>"},{"location":"fod/componente/LanguageSelector/#personalizare","title":"Personalizare","text":"<pre><code>/* Container selector */\n.language-selector-wrapper .nav-link {\n    color: #333 !important;\n    font-weight: 500;\n}\n\n/* Iconi\u021b\u0103 personalizat\u0103 */\n.language-selector-wrapper .fa-globe {\n    color: var(--primary-color);\n}\n\n/* Dropdown menu */\n.language-selector-wrapper .dropdown-menu {\n    background-color: #fff;\n    border: 1px solid #ddd;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* Butoane \u00een dropdown */\n.language-selector-wrapper .dropdown-menu button {\n    display: block;\n    width: 100%;\n    padding: 0.5rem 1rem;\n    border: none;\n    background: none;\n    text-align: left;\n    cursor: pointer;\n}\n\n.language-selector-wrapper .dropdown-menu button:hover {\n    background-color: #f5f5f5;\n}\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>Page reload - Schimbarea limbii for\u021beaz\u0103 re\u00eenc\u0103rcarea complet\u0103 a paginii</li> <li>JS dependency - Necesit\u0103 func\u021bia JavaScript <code>blazorCulture.set</code></li> <li>IJSInProcessRuntime - Folose\u0219te runtime sincron pentru JS</li> <li>Culture persistence - Cultura este salvat\u0103 \u0219i restaurat\u0103 la re\u00eenc\u0103rcare</li> <li>Dropdown nefunc\u021bional - Click handler pe butoane nu este conectat</li> </ol>"},{"location":"fod/componente/LanguageSelector/#probleme-cunoscute","title":"Probleme cunoscute","text":"<ol> <li>Event handler lips\u0103 - Butoanele din dropdown nu au <code>@onclick</code> handler</li> <li>Dropdown control - Nu exist\u0103 logic\u0103 pentru afi\u0219are/ascundere dropdown</li> <li>Culture property - Proprietatea <code>Culture</code> setter nu este folosit\u0103</li> </ol>"},{"location":"fod/componente/LanguageSelector/#implementare-corectata","title":"Implementare corectat\u0103","text":"<pre><code>@using System.Globalization\n@using Microsoft.JSInterop\n@inject IJSRuntime JSRuntime\n@inject NavigationManager Nav\n\n&lt;div class=\"language-selector\"&gt;\n    &lt;a href=\"javascript:void(0)\" \n       class=\"nav-link dropdown-toggle text-white\"\n       @onclick=\"ToggleDropdown\"&gt;\n        &lt;i class=\"fas fa-globe mr-2\"&gt;&lt;/i&gt; @CultureInfo.CurrentCulture.DisplayName\n    &lt;/a&gt;\n\n    @if (isDropdownOpen)\n    {\n        &lt;div class=\"dropdown-menu show\"&gt;\n            @foreach (var culture in supportedCultures)\n            {\n                &lt;button @onclick=\"() =&gt; ChangeLanguage(culture)\"&gt;\n                    @culture.DisplayName\n                &lt;/button&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private bool isDropdownOpen = false;\n\n    private CultureInfo[] supportedCultures = new[]\n    {\n        new CultureInfo(\"ro-MD\"),\n        new CultureInfo(\"en-US\"),\n        new CultureInfo(\"ru-RU\"),\n    };\n\n    private void ToggleDropdown()\n    {\n        isDropdownOpen = !isDropdownOpen;\n    }\n\n    private async Task ChangeLanguage(CultureInfo culture)\n    {\n        if (CultureInfo.CurrentCulture != culture)\n        {\n            await JSRuntime.InvokeVoidAsync(\"blazorCulture.set\", culture.Name);\n            Nav.NavigateTo(Nav.Uri, forceLoad: true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/LanguageSelector/#bune-practici","title":"Bune practici","text":"<ol> <li>Loading state - Afi\u0219a\u021bi un indicator \u00een timpul schimb\u0103rii limbii</li> <li>Confirmation - Pentru date nesalvate, cere\u021bi confirmare \u00eenainte de schimbare</li> <li>Accessibility - Ad\u0103uga\u021bi atribute ARIA pentru screen readers</li> <li>Keyboard navigation - Suporta\u021bi navigare cu tastatura</li> <li>Mobile friendly - Asigura\u021bi func\u021bionare corect\u0103 pe dispozitive mobile</li> </ol>"},{"location":"fod/componente/LanguageSelector/#concluzie","title":"Concluzie","text":"<p>LanguageSelector ofer\u0103 func\u021bionalitate de baz\u0103 pentru schimbarea limbii, dar implementarea actual\u0103 necesit\u0103 \u00eembun\u0103t\u0103\u021biri pentru a fi complet func\u021bional\u0103. Cu ajust\u0103rile sugerate, componenta poate oferi o experien\u021b\u0103 complet\u0103 de selec\u021bie a limbii pentru aplica\u021biile multilingve.</p>"},{"location":"fod/componente/MPayInvoiceButton/","title":"MPayInvoiceButton","text":""},{"location":"fod/componente/MPayInvoiceButton/#documentatie-pentru-componenta-mpayinvoicebutton","title":"Documenta\u021bie pentru componenta MPayInvoiceButton","text":""},{"location":"fod/componente/MPayInvoiceButton/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>MPayInvoiceButton</code> este o component\u0103 specializat\u0103 pentru desc\u0103rcarea \u0219i printarea facturilor din sistemul MPay. Extinde func\u021bionalitatea <code>FodButton</code> ad\u0103ug\u00e2nd capabilit\u0103\u021bi specifice pentru gestionarea facturilor electronice guvernamentale.</p> <p>Caracteristici principale: - Desc\u0103rcare automat\u0103 facturi MPay - Suport pentru printare direct\u0103 - Gestionare facturi standard \u0219i adi\u021bionale - Integrare cu serviciul de printare - URL-uri configurabile pentru diferite medii - Mo\u0219tene\u0219te toate propriet\u0103\u021bile FodButton - Loading state automat \u00een timpul opera\u021biilor</p>"},{"location":"fod/componente/MPayInvoiceButton/#2-utilizare-de-baza","title":"2. Utilizare de Baz\u0103","text":""},{"location":"fod/componente/MPayInvoiceButton/#buton-descarcare-factura-pentru-cerere","title":"Buton desc\u0103rcare factur\u0103 pentru cerere","text":"<pre><code>&lt;MPayInvoiceButton RequestId=\"@requestId\" \n                   DoDownload=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#buton-printare-factura-cu-numar-comanda","title":"Buton printare factur\u0103 cu num\u0103r comand\u0103","text":"<pre><code>&lt;MPayInvoiceButton ServiceCode=\"APOSTILA_01\" \n                   OrderNumber=\"@orderNumber\"\n                   DoPrint=\"true\" /&gt;\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#buton-personalizat-pentru-factura","title":"Buton personalizat pentru factur\u0103","text":"<pre><code>&lt;MPayInvoiceButton RequestId=\"@invoiceRequest.Id\" \n                   Color=\"FodColor.Primary\"\n                   Variant=\"FodVariant.Outlined\"\n                   TooltipText=\"Descarc\u0103 factura PDF\"&gt;\n    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Receipt\" /&gt;\n    Descarc\u0103 Factura\n&lt;/MPayInvoiceButton&gt;\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#3-parametri","title":"3. Parametri","text":"Parametru Tip Descriere Valoare Implicit\u0103 <code>RequestId</code> <code>Guid?</code> ID-ul cererii pentru factur\u0103 <code>null</code> <code>TooltipText</code> <code>string</code> Text tooltip pentru buton - <code>ServiceCode</code> <code>string</code> Codul serviciului - <code>OrderNumber</code> <code>string</code> Num\u0103rul comenzii - <code>DoDownload</code> <code>bool?</code> Activeaz\u0103 desc\u0103rcarea automat\u0103 <code>null</code> <code>DoPrint</code> <code>bool?</code> Activeaz\u0103 printarea automat\u0103 <code>null</code> <code>BaseHref</code> <code>string?</code> URL de baz\u0103 pentru API <code>null</code> <code>IsAdditionalInvoice</code> <code>bool</code> Indic\u0103 factur\u0103 adi\u021bional\u0103 <code>false</code> <code>AdditionalServices</code> <code>MPayService</code> Servicii adi\u021bionale MPay -"},{"location":"fod/componente/MPayInvoiceButton/#4-mostenire-din-fodbutton","title":"4. Mo\u0219tenire din FodButton","text":"<p>Componenta mo\u0219tene\u0219te to\u021bi parametrii din <code>FodButton</code>: - <code>Variant</code>, <code>Color</code>, <code>Size</code>, <code>Disabled</code>, etc.</p>"},{"location":"fod/componente/MPayInvoiceButton/#5-exemple-avansate","title":"5. Exemple Avansate","text":""},{"location":"fod/componente/MPayInvoiceButton/#factura-cu-actiuni-multiple","title":"Factur\u0103 cu ac\u021biuni multiple","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Factura #@invoice.Number&lt;/FodText&gt;\n        &lt;FodText&gt;Suma: @invoice.Amount.ToString(\"C\")&lt;/FodText&gt;\n\n        &lt;FodDivider Class=\"my-3\" /&gt;\n\n        &lt;div class=\"d-flex gap-2\"&gt;\n            &lt;MPayInvoiceButton RequestId=\"@invoice.RequestId\"\n                               DoDownload=\"true\"\n                               Color=\"FodColor.Primary\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Download\" /&gt;\n                Descarc\u0103\n            &lt;/MPayInvoiceButton&gt;\n\n            &lt;MPayInvoiceButton RequestId=\"@invoice.RequestId\"\n                               DoPrint=\"true\"\n                               Color=\"FodColor.Secondary\"\n                               Variant=\"FodVariant.Outlined\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Print\" /&gt;\n                Printeaz\u0103\n            &lt;/MPayInvoiceButton&gt;\n\n            @if (invoice.HasAdditionalServices)\n            {\n                &lt;MPayInvoiceButton RequestId=\"@invoice.RequestId\"\n                                   IsAdditionalInvoice=\"true\"\n                                   DoDownload=\"true\"\n                                   Color=\"FodColor.Info\"&gt;\n                    Factur\u0103 servicii adi\u021bionale\n                &lt;/MPayInvoiceButton&gt;\n            }\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#tabel-cu-facturi-si-actiuni","title":"Tabel cu facturi \u0219i ac\u021biuni","text":"<pre><code>&lt;FodDataTable T=\"Invoice\" Items=\"@invoices\"&gt;\n    &lt;FodColumn Title=\"Num\u0103r\" Field=\"@(i =&gt; i.Number)\" /&gt;\n    &lt;FodColumn Title=\"Data\" Field=\"@(i =&gt; i.Date)\" Format=\"dd.MM.yyyy\" /&gt;\n    &lt;FodColumn Title=\"Suma\" Field=\"@(i =&gt; i.Amount)\" Format=\"C\" /&gt;\n    &lt;FodColumn Title=\"Status\" Field=\"@(i =&gt; i.Status)\"&gt;\n        &lt;Template&gt;\n            &lt;FodChip Color=\"@GetStatusColor(context.Status)\" Size=\"FodSize.Small\"&gt;\n                @context.Status\n            &lt;/FodChip&gt;\n        &lt;/Template&gt;\n    &lt;/FodColumn&gt;\n    &lt;FodColumn Title=\"Ac\u021biuni\"&gt;\n        &lt;Template&gt;\n            @if (context.IsPaid)\n            {\n                &lt;MPayInvoiceButton RequestId=\"@context.RequestId\"\n                                   DoDownload=\"true\"\n                                   Size=\"FodSize.Small\"\n                                   TooltipText=\"Descarc\u0103 PDF\" /&gt;\n            }\n            else\n            {\n                &lt;FodButton Size=\"FodSize.Small\" \n                           Color=\"FodColor.Warning\"\n                           OnClick=\"() =&gt; PayInvoice(context)\"&gt;\n                    Pl\u0103te\u0219te\n                &lt;/FodButton&gt;\n            }\n        &lt;/Template&gt;\n    &lt;/FodColumn&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;Invoice&gt; invoices;\n\n    private FodColor GetStatusColor(string status) =&gt; status switch\n    {\n        \"Pl\u0103tit\u0103\" =&gt; FodColor.Success,\n        \"\u00cen a\u0219teptare\" =&gt; FodColor.Warning,\n        \"Anulat\u0103\" =&gt; FodColor.Error,\n        _ =&gt; FodColor.Default\n    };\n}\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#configurare-pentru-medii-diferite","title":"Configurare pentru medii diferite","text":"<pre><code>@inject IConfiguration Configuration\n\n&lt;MPayInvoiceButton RequestId=\"@requestId\"\n                   BaseHref=\"@GetApiBaseUrl()\"\n                   DoDownload=\"true\"\n                   @onclick:stopPropagation=\"true\"&gt;\n    @if (isDownloading)\n    {\n        &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt;\n    }\n    else\n    {\n        &lt;span&gt;Descarc\u0103 factura&lt;/span&gt;\n    }\n&lt;/MPayInvoiceButton&gt;\n\n@code {\n    private bool isDownloading;\n    private Guid requestId;\n\n    private string GetApiBaseUrl()\n    {\n        var environment = Configuration[\"Environment\"];\n        return environment switch\n        {\n            \"Production\" =&gt; \"https://api.mpay.gov.md/\",\n            \"Staging\" =&gt; \"https://staging-api.mpay.gov.md/\",\n            _ =&gt; \"https://localhost:5001/\"\n        };\n    }\n\n    protected override void OnParametersSet()\n    {\n        // Resetare state la schimbarea parametrilor\n        isDownloading = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#6-integrare-cu-servicii","title":"6. Integrare cu Servicii","text":""},{"location":"fod/componente/MPayInvoiceButton/#handler-pentru-descarcare-cu-notificari","title":"Handler pentru desc\u0103rcare cu notific\u0103ri","text":"<pre><code>&lt;MPayInvoiceButton RequestId=\"@invoice.Id\"\n                   DoDownload=\"@shouldDownload\"\n                   @ref=\"invoiceButton\"&gt;\n    Descarc\u0103 factura\n&lt;/MPayInvoiceButton&gt;\n\n@code {\n    [Inject] private INotificationService NotificationService { get; set; }\n\n    private MPayInvoiceButton invoiceButton;\n    private bool shouldDownload;\n\n    private async Task HandleDownloadWithNotification()\n    {\n        try\n        {\n            shouldDownload = true;\n            StateHasChanged();\n\n            await NotificationService.ShowSuccess(\"Factura se descarc\u0103...\");\n        }\n        catch (Exception ex)\n        {\n            await NotificationService.ShowError($\"Eroare la desc\u0103rcare: {ex.Message}\");\n        }\n        finally\n        {\n            shouldDownload = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#batch-download-pentru-facturi-multiple","title":"Batch download pentru facturi multiple","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Facturi selectate: @selectedInvoices.Count&lt;/FodText&gt;\n\n        &lt;FodButton Color=\"FodColor.Primary\"\n                   Disabled=\"@(!selectedInvoices.Any())\"\n                   OnClick=\"DownloadAllSelected\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.GetApp\" /&gt;\n            Descarc\u0103 toate\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n&lt;div class=\"invoice-list\"&gt;\n    @foreach (var invoice in invoices)\n    {\n        &lt;div class=\"invoice-item\"&gt;\n            &lt;FodCheckbox @bind-Value=\"invoice.IsSelected\" /&gt;\n            &lt;span&gt;@invoice.Number - @invoice.Amount.ToString(\"C\")&lt;/span&gt;\n            &lt;MPayInvoiceButton RequestId=\"@invoice.Id\"\n                               DoDownload=\"true\"\n                               Size=\"FodSize.Small\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;InvoiceModel&gt; invoices;\n    private List&lt;InvoiceModel&gt; selectedInvoices =&gt; \n        invoices?.Where(i =&gt; i.IsSelected).ToList() ?? new();\n\n    private async Task DownloadAllSelected()\n    {\n        foreach (var invoice in selectedInvoices)\n        {\n            // Trigger download pentru fiecare factur\u0103\n            await Task.Delay(500); // Delay pentru a evita blocarea\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#7-javascript-interop","title":"7. JavaScript Interop","text":"<p>Componenta folose\u0219te JavaScript pentru desc\u0103rcare:</p> <pre><code>window.triggerFileDownload = (fileUrl) =&gt; {\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = '';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#8-stilizare-css","title":"8. Stilizare CSS","text":"<pre><code>/* Stiluri pentru butoane factur\u0103 */\n.mpay-invoice-button {\n    min-width: 120px;\n}\n\n.mpay-invoice-button.loading {\n    pointer-events: none;\n    opacity: 0.7;\n}\n\n/* Grup de butoane factur\u0103 */\n.invoice-actions {\n    display: flex;\n    gap: 0.5rem;\n    flex-wrap: wrap;\n}\n\n.invoice-actions .fod-button {\n    flex: 0 0 auto;\n}\n\n/* Responsive */\n@media (max-width: 576px) {\n    .invoice-actions {\n        flex-direction: column;\n    }\n\n    .invoice-actions .fod-button {\n        width: 100%;\n    }\n}\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#9-scenarii-de-utilizare","title":"9. Scenarii de Utilizare","text":""},{"location":"fod/componente/MPayInvoiceButton/#dashboard-facturi-cu-filtrare","title":"Dashboard facturi cu filtrare","text":"<pre><code>@page \"/invoices\"\n\n&lt;FodFilter FilterT=\"InvoiceFilter\" TableId=\"invoices-table\"&gt;\n    &lt;FodDateRangePicker Label=\"Perioad\u0103\" \n                        @bind-StartDate=\"context.StartDate\"\n                        @bind-EndDate=\"context.EndDate\" /&gt;\n    &lt;FodSelect T=\"string\" Label=\"Status\" @bind-Value=\"context.Status\"&gt;\n        &lt;FodSelectItem Value=\"\"&gt;Toate&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"paid\"&gt;Pl\u0103tite&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"pending\"&gt;\u00cen a\u0219teptare&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n&lt;/FodFilter&gt;\n\n&lt;FodFilteredTable T=\"InvoiceViewModel\" \n                  FilterT=\"InvoiceFilter\"\n                  Id=\"invoices-table\"\n                  Items=\"@filteredInvoices\"&gt;\n    &lt;FodColumn Title=\"Ac\u021biuni\"&gt;\n        &lt;Template&gt;\n            &lt;div class=\"btn-group\"&gt;\n                &lt;MPayInvoiceButton RequestId=\"@context.RequestId\"\n                                   DoDownload=\"true\"\n                                   Size=\"FodSize.Small\"\n                                   Color=\"FodColor.Primary\"\n                                   Disabled=\"@(!context.IsPaid)\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.GetApp\" \n                             Size=\"FodSize.Small\" /&gt;\n                &lt;/MPayInvoiceButton&gt;\n\n                &lt;MPayInvoiceButton RequestId=\"@context.RequestId\"\n                                   DoPrint=\"true\"\n                                   Size=\"FodSize.Small\"\n                                   Color=\"FodColor.Secondary\"\n                                   Disabled=\"@(!context.IsPaid)\"\n                                   TooltipText=\"Printeaz\u0103\"&gt;\n                    &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Print\" \n                             Size=\"FodSize.Small\" /&gt;\n                &lt;/MPayInvoiceButton&gt;\n            &lt;/div&gt;\n        &lt;/Template&gt;\n    &lt;/FodColumn&gt;\n&lt;/FodFilteredTable&gt;\n</code></pre>"},{"location":"fod/componente/MPayInvoiceButton/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Validare parametri - Verifica\u021bi RequestId sau ServiceCode/OrderNumber</li> <li>Loading state - Indica\u021bi starea de \u00eenc\u0103rcare pentru opera\u021bii lungi</li> <li>Error handling - Trata\u021bi erorile de desc\u0103rcare/printare</li> <li>Tooltip-uri - Ad\u0103uga\u021bi tooltip-uri descriptive</li> <li>Disable state - Dezactiva\u021bi butoanele c\u00e2nd factura nu e disponibil\u0103</li> <li>Stop propagation - Folosi\u021bi pentru butoane \u00een r\u00e2nduri de tabel</li> </ol>"},{"location":"fod/componente/MPayInvoiceButton/#11-performanta","title":"11. Performan\u021b\u0103","text":"<ul> <li>Evita\u021bi desc\u0103rc\u0103ri simultane multiple</li> <li>Implementa\u021bi debouncing pentru click-uri rapide</li> <li>Cache-ui\u021bi URL-urile generate c\u00e2nd e posibil</li> <li>Folosi\u021bi loading indicators pentru feedback</li> </ul>"},{"location":"fod/componente/MPayInvoiceButton/#12-securitate","title":"12. Securitate","text":"<ul> <li>Valida\u021bi permisiunile \u00eenainte de afi\u0219are</li> <li>Nu expune\u021bi ID-uri sensibile \u00een URL</li> <li>Folosi\u021bi HTTPS pentru toate cererile</li> <li>Implementa\u021bi rate limiting pentru desc\u0103rc\u0103ri</li> </ul>"},{"location":"fod/componente/MPayInvoiceButton/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/MPayInvoiceButton/#factura-nu-se-descarca","title":"Factura nu se descarc\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 RequestId sau ServiceCode/OrderNumber sunt corecte</li> <li>Verifica\u021bi permisiunile utilizatorului</li> <li>Verifica\u021bi configurarea BaseHref</li> <li>Verifica\u021bi blocarea popup-urilor \u00een browser</li> </ul>"},{"location":"fod/componente/MPayInvoiceButton/#printarea-nu-functioneaza","title":"Printarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 IPrintingService este \u00eenregistrat</li> <li>Verifica\u021bi suportul browser pentru printare</li> <li>Verifica\u021bi c\u0103 PDF-ul este valid</li> </ul>"},{"location":"fod/componente/MPayInvoiceButton/#14-concluzie","title":"14. Concluzie","text":"<p><code>MPayInvoiceButton</code> simplific\u0103 integrarea cu sistemul MPay pentru gestionarea facturilor electronice. Cu suport pentru desc\u0103rcare \u0219i printare, configurare flexibil\u0103 \u0219i mo\u0219tenirea complet\u0103 din FodButton, componenta ofer\u0103 o solu\u021bie complet\u0103 pentru necesit\u0103\u021bile de facturare \u00een aplica\u021biile guvernamentale.</p>"},{"location":"fod/componente/OutsideHandleContainer/","title":"OutsideHandleContainer","text":""},{"location":"fod/componente/OutsideHandleContainer/#descriere-generala","title":"Descriere General\u0103","text":"<p>Componenta <code>OutsideHandleContainer</code> detecteaz\u0103 click-urile \u00een afara elementului s\u0103u \u0219i declan\u0219eaz\u0103 o ac\u021biune specificat\u0103. Este util\u0103 pentru \u00eenchiderea meniurilor dropdown, modalelor, sau a altor elemente UI care trebuie s\u0103 se \u00eenchid\u0103 c\u00e2nd utilizatorul face click \u00een alt\u0103 parte a paginii.</p>"},{"location":"fod/componente/OutsideHandleContainer/#ghid-de-utilizare-api","title":"Ghid de Utilizare API","text":""},{"location":"fod/componente/OutsideHandleContainer/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":"<pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@CloseDropdown\"&gt;\n    &lt;div class=\"dropdown @(isOpen ? \"show\" : \"\")\"&gt;\n        &lt;button @onclick=\"ToggleDropdown\"&gt;Meniu&lt;/button&gt;\n        @if (isOpen)\n        {\n            &lt;div class=\"dropdown-menu\"&gt;\n                &lt;a href=\"#\"&gt;Op\u021biune 1&lt;/a&gt;\n                &lt;a href=\"#\"&gt;Op\u021biune 2&lt;/a&gt;\n                &lt;a href=\"#\"&gt;Op\u021biune 3&lt;/a&gt;\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/OutsideHandleContainer&gt;\n\n@code {\n    private bool isOpen = false;\n\n    private void ToggleDropdown()\n    {\n        isOpen = !isOpen;\n    }\n\n    private void CloseDropdown()\n    {\n        isOpen = false;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#pentru-custom-dropdown","title":"Pentru custom dropdown","text":"<pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@(() =&gt; showOptions = false)\"&gt;\n    &lt;div class=\"custom-select\"&gt;\n        &lt;input @onclick=\"@(() =&gt; showOptions = true)\" \n               value=\"@selectedValue\" \n               readonly /&gt;\n\n        @if (showOptions)\n        {\n            &lt;div class=\"options-list\"&gt;\n                @foreach (var option in options)\n                {\n                    &lt;div @onclick=\"@(() =&gt; SelectOption(option))\"&gt;\n                        @option\n                    &lt;/div&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/OutsideHandleContainer&gt;\n\n@code {\n    private bool showOptions = false;\n    private string selectedValue = \"\";\n    private List&lt;string&gt; options = new() { \"Op\u021biune A\", \"Op\u021biune B\", \"Op\u021biune C\" };\n\n    private void SelectOption(string option)\n    {\n        selectedValue = option;\n        showOptions = false;\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#pentru-tooltip-sau-popover","title":"Pentru tooltip sau popover","text":"<pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@HideTooltip\"&gt;\n    &lt;div class=\"tooltip-container\"&gt;\n        &lt;button @onclick=\"ShowTooltip\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Outlined.Info\" /&gt;\n        &lt;/button&gt;\n\n        @if (tooltipVisible)\n        {\n            &lt;div class=\"tooltip-content\"&gt;\n                &lt;h5&gt;Informa\u021bie&lt;/h5&gt;\n                &lt;p&gt;Acesta este un tooltip care se \u00eenchide la click exterior.&lt;/p&gt;\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/OutsideHandleContainer&gt;\n\n@code {\n    private bool tooltipVisible = false;\n\n    private void ShowTooltip()\n    {\n        tooltipVisible = true;\n    }\n\n    private void HideTooltip()\n    {\n        tooltipVisible = false;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#pentru-meniu-contextual","title":"Pentru meniu contextual","text":"<pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@CloseContextMenu\"&gt;\n    &lt;div @oncontextmenu=\"@ShowContextMenu\" @oncontextmenu:preventDefault=\"true\"&gt;\n        Click dreapta pentru meniu\n\n        @if (contextMenuVisible)\n        {\n            &lt;div class=\"context-menu\" style=\"@GetMenuPosition()\"&gt;\n                &lt;div @onclick=\"@Cut\"&gt;Taie&lt;/div&gt;\n                &lt;div @onclick=\"@Copy\"&gt;Copiaz\u0103&lt;/div&gt;\n                &lt;div @onclick=\"@Paste\"&gt;Lipe\u0219te&lt;/div&gt;\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/OutsideHandleContainer&gt;\n\n@code {\n    private bool contextMenuVisible = false;\n    private double menuX, menuY;\n\n    private void ShowContextMenu(MouseEventArgs e)\n    {\n        menuX = e.ClientX;\n        menuY = e.ClientY;\n        contextMenuVisible = true;\n    }\n\n    private void CloseContextMenu()\n    {\n        contextMenuVisible = false;\n        StateHasChanged();\n    }\n\n    private string GetMenuPosition()\n    {\n        return $\"left: {menuX}px; top: {menuY}px;\";\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#atribute-disponibile","title":"Atribute disponibile","text":"Atribut Tip Valoare implicit\u0103 Descriere OnClickOutside Action null Ac\u021biunea executat\u0103 la click \u00een afara containerului ChildContent RenderFragment - Con\u021binutul care va fi monitorizat"},{"location":"fod/componente/OutsideHandleContainer/#evenimente","title":"Evenimente","text":"<p>Componenta nu expune evenimente publice, dar folose\u0219te <code>OnClickOutside</code> ca un callback.</p>"},{"location":"fod/componente/OutsideHandleContainer/#metode-publice","title":"Metode publice","text":"Metod\u0103 Descriere InvokeClickOutside() Metod\u0103 marcat\u0103 [JSInvokable] apelat\u0103 de JavaScript"},{"location":"fod/componente/OutsideHandleContainer/#componente-asociate","title":"Componente asociate","text":"<p>Poate fi folosit\u0103 cu orice component\u0103 FOD care necesit\u0103 \u00eenchidere la click exterior: - FodDropdown - FodSelect - FodPopover - FodTooltip - Meniuri custom</p>"},{"location":"fod/componente/OutsideHandleContainer/#stilizare","title":"Stilizare","text":"<p>Componenta adaug\u0103 doar un <code>div</code> wrapper cu un ID unic generat. Nu aplic\u0103 stiluri proprii.</p>"},{"location":"fod/componente/OutsideHandleContainer/#exemplu-stilizare-pentru-dropdown","title":"Exemplu stilizare pentru dropdown","text":"<pre><code>/* Container dropdown */\n.dropdown {\n    position: relative;\n    display: inline-block;\n}\n\n/* Meniu dropdown */\n.dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    background: white;\n    border: 1px solid #ddd;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n    z-index: 1000;\n}\n\n/* Context menu */\n.context-menu {\n    position: fixed;\n    background: white;\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n    padding: 0.5rem 0;\n    z-index: 9999;\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#note-si-observatii","title":"Note \u0219i observa\u021bii","text":"<ol> <li>JavaScript dependency - Necesit\u0103 func\u021bia JavaScript <code>outsideClickHandler.addEvent</code></li> <li>ID unic - Genereaz\u0103 automat un GUID pentru identificare</li> <li>JSInterop - Folose\u0219te JSInterop pentru comunicare cu JavaScript</li> <li>StateHasChanged - Apela\u021bi manual \u00een callback pentru re-randare</li> <li>Memory management - JavaScript-ul trebuie s\u0103 gestioneze corect event listeners</li> </ol>"},{"location":"fod/componente/OutsideHandleContainer/#bune-practici","title":"Bune practici","text":"<ol> <li>Un singur handler - Folosi\u021bi o singur\u0103 instan\u021b\u0103 pentru fiecare element interactiv</li> <li>StateHasChanged - Apela\u021bi \u00eentotdeauna dup\u0103 modificarea st\u0103rii \u00een callback</li> <li>Cleanup - Asigura\u021bi-v\u0103 c\u0103 JavaScript-ul face cleanup la destroy</li> <li>Z-index - Gestiona\u021bi corect z-index pentru elementele overlay</li> <li>Event bubbling - Opri\u021bi propagarea evenimentelor c\u00e2nd este necesar</li> </ol>"},{"location":"fod/componente/OutsideHandleContainer/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/componente/OutsideHandleContainer/#cu-multiple-containere","title":"Cu multiple containere","text":"<pre><code>@foreach (var item in items)\n{\n    &lt;OutsideHandleContainer OnClickOutside=\"@(() =&gt; CloseItem(item.Id))\"&gt;\n        &lt;div class=\"item-container\"&gt;\n            &lt;button @onclick=\"@(() =&gt; ToggleItem(item.Id))\"&gt;\n                @item.Name\n            &lt;/button&gt;\n            @if (openItems.Contains(item.Id))\n            {\n                &lt;div class=\"item-details\"&gt;\n                    @item.Description\n                &lt;/div&gt;\n            }\n        &lt;/div&gt;\n    &lt;/OutsideHandleContainer&gt;\n}\n\n@code {\n    private HashSet&lt;int&gt; openItems = new();\n\n    private void ToggleItem(int id)\n    {\n        if (openItems.Contains(id))\n            openItems.Remove(id);\n        else\n            openItems.Add(id);\n    }\n\n    private void CloseItem(int id)\n    {\n        openItems.Remove(id);\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#cu-debounce","title":"Cu debounce","text":"<pre><code>&lt;OutsideHandleContainer OnClickOutside=\"@DebouncedClose\"&gt;\n    &lt;div class=\"search-autocomplete\"&gt;\n        &lt;input @bind=\"searchTerm\" @bind:event=\"oninput\" /&gt;\n        @if (showResults &amp;&amp; results.Any())\n        {\n            &lt;div class=\"results\"&gt;\n                @foreach (var result in results)\n                {\n                    &lt;div&gt;@result&lt;/div&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/OutsideHandleContainer&gt;\n\n@code {\n    private System.Timers.Timer debounceTimer;\n\n    private void DebouncedClose()\n    {\n        debounceTimer?.Stop();\n        debounceTimer = new System.Timers.Timer(200);\n        debounceTimer.Elapsed += (s, e) =&gt;\n        {\n            InvokeAsync(() =&gt;\n            {\n                showResults = false;\n                StateHasChanged();\n            });\n        };\n        debounceTimer.Start();\n    }\n}\n</code></pre>"},{"location":"fod/componente/OutsideHandleContainer/#concluzie","title":"Concluzie","text":"<p>OutsideHandleContainer ofer\u0103 o solu\u021bie elegant\u0103 pentru detectarea click-urilor exterioare, esen\u021bial\u0103 pentru crearea de componente UI interactive. Cu integrare simpl\u0103 \u0219i flexibilitate maxim\u0103, permite implementarea pattern-ului \"click outside to close\" pentru diverse scenarii de interfa\u021b\u0103.</p>"},{"location":"fod/componente/Tooltip/","title":"Tooltip","text":""},{"location":"fod/componente/Tooltip/#documentatie-pentru-componenta-tooltip","title":"Documenta\u021bie pentru componenta Tooltip","text":""},{"location":"fod/componente/Tooltip/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>Tooltip</code> este o component\u0103 care afi\u0219eaz\u0103 text informativ c\u00e2nd utilizatorii plaseaz\u0103 cursorul deasupra unei pictograme info. Este util\u0103 pentru a oferi context suplimentar, explica\u021bii sau ajutor f\u0103r\u0103 a \u00eenc\u0103rca interfa\u021ba vizual\u0103.</p> <p>Componenta suport\u0103: - Text simplu sau con\u021binut HTML - Pozi\u021bionare automat\u0103 responsive - Adaptare la diferite dimensiuni de ecran - Integrare cu con\u021binut copil op\u021bional - Stilizare personalizabil\u0103</p>"},{"location":"fod/componente/Tooltip/#2-ghid-de-utilizare-api","title":"2. Ghid de Utilizare API","text":""},{"location":"fod/componente/Tooltip/#tooltip-de-baza","title":"Tooltip de baz\u0103","text":"<pre><code>&lt;Tooltip Text=\"Acesta este un tooltip informativ care ofer\u0103 context suplimentar.\" /&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-cu-text-formatat-html","title":"Tooltip cu text formatat HTML","text":"<pre><code>&lt;Tooltip Text=\"&lt;b&gt;Important:&lt;/b&gt;&lt;br/&gt;Toate c\u00e2mpurile marcate cu * sunt obligatorii.\" /&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-intr-un-context","title":"Tooltip \u00eentr-un context","text":"<pre><code>&lt;FodPaper Class=\"pa-4\"&gt;\n    &lt;FodText&gt;\n        Face\u021bi clic aici pentru mai multe informa\u021bii \n        &lt;Tooltip Text=\"Acest buton v\u0103 va redirec\u021biona c\u0103tre pagina de ajutor unde ve\u021bi g\u0103si informa\u021bii detaliate.\" /&gt;\n    &lt;/FodText&gt;\n&lt;/FodPaper&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-cu-continut-copil","title":"Tooltip cu con\u021binut copil","text":"<pre><code>&lt;div class=\"d-flex align-items-center gap-2\"&gt;\n    &lt;FodText&gt;Taxa de serviciu: 250 MDL&lt;/FodText&gt;\n    &lt;Tooltip Text=\"Aceast\u0103 tax\u0103 include procesarea, verificarea \u0219i livrarea documentelor.\"&gt;\n        &lt;FodBadge Color=\"FodColor.Info\" Class=\"ms-2\"&gt;Include TVA&lt;/FodBadge&gt;\n    &lt;/Tooltip&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-uri-multiple-cu-formatare-complexa","title":"Tooltip-uri multiple cu formatare complex\u0103","text":"<pre><code>&lt;FodGrid&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n        &lt;div class=\"mb-3\"&gt;\n            &lt;FodText&gt;C\u00e2mpuri obligatorii&lt;/FodText&gt;\n            &lt;Tooltip Text=\"&lt;b&gt;Important:&lt;/b&gt;&lt;br/&gt;\u2022 Toate c\u00e2mpurile marcate cu * sunt obligatorii&lt;br/&gt;\u2022 Email-ul trebuie s\u0103 fie valid&lt;br/&gt;\u2022 Num\u0103rul de telefon trebuie s\u0103 includ\u0103 prefixul \u021b\u0103rii\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodItem&gt;\n\n    &lt;FodItem xs=\"12\" sm=\"6\"&gt;\n        &lt;div class=\"mb-3\"&gt;\n            &lt;FodText&gt;Timp de procesare&lt;/FodText&gt;\n            &lt;Tooltip Text=\"&lt;b&gt;Procesare standard:&lt;/b&gt; 3-5 zile lucr\u0103toare&lt;br/&gt;&lt;b&gt;Procesare expres\u0103:&lt;/b&gt; 1-2 zile lucr\u0103toare&lt;br/&gt;&lt;i&gt;Not\u0103: S\u0103rb\u0103torile pot afecta timpii de procesare&lt;/i&gt;\" /&gt;\n        &lt;/div&gt;\n    &lt;/FodItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-pentru-explicarea-statusurilor","title":"Tooltip pentru explicarea statusurilor","text":"<pre><code>&lt;div class=\"d-flex align-items-center gap-2\"&gt;\n    &lt;FodText&gt;Status: \u00cen procesare&lt;/FodText&gt;\n    &lt;Tooltip Text=\"Solicitarea dumneavoastr\u0103 este \u00een curs de procesare de c\u0103tre echipa noastr\u0103. Finalizare estimat\u0103: 2-3 zile lucr\u0103toare.\"&gt;\n        &lt;FodChip Color=\"FodColor.Warning\" Size=\"FodSize.Small\"&gt;\u00cen Progres&lt;/FodChip&gt;\n    &lt;/Tooltip&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#tooltip-in-formulare","title":"Tooltip \u00een formulare","text":"<pre><code>&lt;EditForm Model=\"model\"&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label class=\"d-flex align-items-center gap-2\"&gt;\n            IDNP\n            &lt;Tooltip Text=\"Num\u0103rul de identificare personal format din 13 cifre\" /&gt;\n        &lt;/label&gt;\n        &lt;FODInputText @bind-Value=\"model.Idnp\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label class=\"d-flex align-items-center gap-2\"&gt;\n            Tip document\n            &lt;Tooltip Text=\"Selecta\u021bi tipul de document pe care dori\u021bi s\u0103 \u00eel apostila\u021bi. Pentru documente educa\u021bionale, selecta\u021bi 'Diplom\u0103' sau 'Certificat de studii'.\" /&gt;\n        &lt;/label&gt;\n        &lt;FODInputSelect @bind-Value=\"model.DocumentType\"&gt;\n            &lt;option value=\"\"&gt;Selecta\u021bi...&lt;/option&gt;\n            &lt;option value=\"diploma\"&gt;Diplom\u0103&lt;/option&gt;\n            &lt;option value=\"certificat\"&gt;Certificat&lt;/option&gt;\n        &lt;/FODInputSelect&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#atribute-disponibile","title":"Atribute disponibile","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Text</code> <code>string</code> Textul afi\u0219at \u00een tooltip. Suport\u0103 HTML. <code>null</code> <code>ChildContent</code> <code>RenderFragment</code> Con\u021binut op\u021bional care poate fi afi\u0219at al\u0103turi de pictograma tooltip <code>null</code> <code>CssClass</code> <code>string</code> Clase CSS adi\u021bionale pentru stilizare personalizat\u0103 <code>string.Empty</code>"},{"location":"fod/componente/Tooltip/#3-caracteristici-speciale","title":"3. Caracteristici speciale","text":""},{"location":"fod/componente/Tooltip/#pozitionare-automata","title":"Pozi\u021bionare automat\u0103","text":"<ul> <li>Tooltip-ul se pozi\u021bioneaz\u0103 automat deasupra pictogramei info</li> <li>Pe ecrane mici, pozi\u021bia se ajusteaz\u0103 pentru a r\u0103m\u00e2ne vizibil\u0103</li> </ul>"},{"location":"fod/componente/Tooltip/#responsive-design","title":"Responsive Design","text":"<p>Tooltip-ul \u00ee\u0219i adapteaz\u0103 dimensiunile \u00een func\u021bie de m\u0103rimea ecranului: - Mobile (&lt; 480px): L\u0103\u021bime fix\u0103 de 200px - Tablet\u0103 (481-768px): L\u0103\u021bime maxim\u0103 de 300px - Desktop (&gt; 768px): L\u0103\u021bime maxim\u0103 de 500px</p>"},{"location":"fod/componente/Tooltip/#suport-html","title":"Suport HTML","text":"<p>Textul tooltip-ului poate con\u021bine HTML pentru formatare avansat\u0103: <pre><code>&lt;Tooltip Text=\"&lt;strong&gt;Aten\u021bie!&lt;/strong&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Primul punct&lt;/li&gt;&lt;li&gt;Al doilea punct&lt;/li&gt;&lt;/ul&gt;\" /&gt;\n</code></pre></p>"},{"location":"fod/componente/Tooltip/#4-stilizare","title":"4. Stilizare","text":""},{"location":"fod/componente/Tooltip/#stiluri-implicite","title":"Stiluri implicite","text":"<ul> <li>Pictogram\u0103 info: albastru (<code>#4b6ed2</code>)</li> <li>Fundal tooltip: gri \u00eenchis (<code>#333</code>)</li> <li>Text: alb</li> <li>Border radius: 4px</li> <li>Font size: 13px (12px pe mobile)</li> </ul>"},{"location":"fod/componente/Tooltip/#personalizare-prin-css","title":"Personalizare prin CSS","text":"<pre><code>&lt;Tooltip Text=\"Tooltip personalizat\" CssClass=\"my-custom-tooltip\" /&gt;\n\n&lt;style&gt;\n    .my-custom-tooltip .tooltip-color {\n        color: #ff5722 !important;\n    }\n\n    .my-custom-tooltip .tooltip-text {\n        background-color: #2196f3 !important;\n        font-size: 14px !important;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/componente/Tooltip/#5-integrare-javascript","title":"5. Integrare JavaScript","text":"<p>Componenta folose\u0219te JavaScript pentru ini\u021bializare \u0219i func\u021bionalitate avansat\u0103: - Ini\u021bializare automat\u0103 dup\u0103 render - Gestionare evenimente hover - Calcul pozi\u021bionare dinamic\u0103</p>"},{"location":"fod/componente/Tooltip/#6-note-si-observatii","title":"6. Note \u0219i observa\u021bii","text":"<ul> <li>Tooltip-ul nu se afi\u0219eaz\u0103 dac\u0103 proprietatea <code>Text</code> este goal\u0103 sau null</li> <li>Pentru texte lungi, folosi\u021bi tag-uri HTML pentru o formatare mai bun\u0103</li> <li>Evita\u021bi tooltip-uri prea complexe - pentru informa\u021bii extensive, considera\u021bi folosirea unui modal sau a unei sec\u021biuni dedicate</li> <li>Tooltip-ul este accesibil doar cu mouse hover, nu cu tastatur\u0103 sau touch - pentru accesibilitate complet\u0103, considera\u021bi alternative</li> </ul>"},{"location":"fod/componente/Tooltip/#7-bune-practici","title":"7. Bune practici","text":"<ol> <li>Concizie: P\u0103stra\u021bi textul tooltip-ului scurt \u0219i la obiect</li> <li>Claritate: Folosi\u021bi un limbaj simplu \u0219i direct</li> <li>Formatare: Utiliza\u021bi HTML pentru a structura informa\u021bii complexe</li> <li>Consisten\u021b\u0103: Men\u021bine\u021bi un stil consistent pentru toate tooltip-urile din aplica\u021bie</li> <li>Plasare: Pozi\u021biona\u021bi tooltip-ul l\u00e2ng\u0103 elementul relevant pentru context clar</li> </ol>"},{"location":"fod/componente/Tooltip/#8-concluzie","title":"8. Concluzie","text":"<p><code>Tooltip</code> este o component\u0103 util\u0103 pentru \u00eembun\u0103t\u0103\u021birea experien\u021bei utilizatorului prin furnizarea de informa\u021bii contextuale la cerere, f\u0103r\u0103 a aglomera interfa\u021ba. Este ideal\u0103 pentru explica\u021bii scurte, defini\u021bii sau instruc\u021biuni suplimentare.</p>"},{"location":"fod/componente/business/FodRequestStatus/","title":"Request Status","text":""},{"location":"fod/componente/business/FodRequestStatus/#documentatie-pentru-componentele-fodrequeststatus-si-fodrequeststatusresponse","title":"Documenta\u021bie pentru componentele FodRequestStatus \u0219i FodRequestStatusResponse","text":""},{"location":"fod/componente/business/FodRequestStatus/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FodRequestStatus</code> \u0219i <code>FodRequestStatusResponse</code> sunt componente business specializate pentru sistemul FOD (Furnizor de date \u0219i servicii publice) din Moldova. Acestea permit utilizatorilor s\u0103 verifice statusul cererilor depuse la institu\u021biile publice.</p> <p>Componente: - FodRequestStatus - Formularul principal de c\u0103utare a statusului - FodRequestStatusResponse - Afi\u0219area rezultatelor c\u0103ut\u0103rii cu detalii complete</p> <p>Caracteristici principale: - C\u0103utare dup\u0103 cuv\u00e2nt cheie (num\u0103r cerere, cod serviciu) - Afi\u0219are rezultate paginat\u0103 - Panouri expandabile pentru fiecare cerere - Informa\u021bii despre livrare \u0219i ridicare - Status apostilare pentru documente - Suport pentru localizare (rom\u00e2n\u0103/rus\u0103) - Validare formular integrat\u0103</p>"},{"location":"fod/componente/business/FodRequestStatus/#2-arhitectura-si-dependinte","title":"2. Arhitectur\u0103 \u0219i dependin\u021be","text":"<pre><code>// Servicii necesare\nservices.AddScoped&lt;IRequestStatusService, RequestStatusService&gt;();\n\n// Modele utilizate\npublic class RequestStatusRequestModel\n{\n    [Required]\n    public string Keyword { get; set; }\n}\n\npublic class RequestStatusResponseModel\n{\n    public string OrderNumber { get; set; }\n    public string ServiceProviderNumber { get; set; }\n    public string Status { get; set; }\n    public List&lt;string&gt; Services { get; set; }\n    public string ReceptionMode { get; set; }\n    public bool RequiresResponseOnPaper { get; set; }\n    public bool RequiresDelivery { get; set; }\n    public PickupLocationModel PickupLocation { get; set; }\n    public DeliveryModel Delivery { get; set; }\n    public DateTime SubmissionDate { get; set; }\n    public DateTime? EstimatedResolveDate { get; set; }\n    public bool RequiresApostilation { get; set; }\n    public List&lt;ApostilaDetailsModel&gt; ApostilaDetails { get; set; }\n    public string FodResponsibleDivision { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#3-ghid-de-utilizare-api","title":"3. Ghid de Utilizare API","text":""},{"location":"fod/componente/business/FodRequestStatus/#implementare-simpla","title":"Implementare simpl\u0103","text":"<pre><code>@page \"/verifica-status\"\n\n&lt;FodRequestStatus /&gt;\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#implementare-cu-handler-personalizat","title":"Implementare cu handler personalizat","text":"<pre><code>&lt;FodRequestStatus OnSearchCompleted=\"HandleSearchResults\" /&gt;\n\n@code {\n    private void HandleSearchResults(List&lt;RequestStatusResponseModel&gt; results)\n    {\n        Console.WriteLine($\"S-au g\u0103sit {results.Count} cereri\");\n        // Procesare rezultate\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#implementare-cu-pre-populare","title":"Implementare cu pre-populare","text":"<pre><code>&lt;FodRequestStatus InitialKeyword=\"@orderNumber\" AutoSearch=\"true\" /&gt;\n\n@code {\n    [Parameter]\n    [SupplyParameterFromQuery]\n    public string orderNumber { get; set; }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#4-atribute-disponibile","title":"4. Atribute disponibile","text":""},{"location":"fod/componente/business/FodRequestStatus/#fodrequeststatus","title":"FodRequestStatus","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>InitialKeyword</code> <code>string</code> Cuv\u00e2nt cheie pre-populat <code>null</code> <code>AutoSearch</code> <code>bool</code> Porne\u0219te c\u0103utarea automat <code>false</code> <code>OnSearchStarted</code> <code>EventCallback</code> Eveniment \u00eenceput c\u0103utare - <code>OnSearchCompleted</code> <code>EventCallback&lt;List&lt;RequestStatusResponseModel&gt;&gt;</code> Eveniment finalizare c\u0103utare - <code>ShowAlert</code> <code>bool</code> Afi\u0219eaz\u0103 alerta informativ\u0103 <code>true</code> <code>CustomAlertText</code> <code>string</code> Text personalizat pentru alert\u0103 -"},{"location":"fod/componente/business/FodRequestStatus/#fodrequeststatusresponse","title":"FodRequestStatusResponse","text":"Proprietate Tip Descriere Valoare Implicit\u0103 <code>Model</code> <code>List&lt;RequestStatusResponseModel&gt;</code> Lista rezultatelor - <code>Keyword</code> <code>string</code> Cuv\u00e2ntul cheie c\u0103utat - <code>PageSize</code> <code>int</code> Num\u0103r rezultate per pagin\u0103 <code>10</code> <code>ShowPagination</code> <code>bool</code> Afi\u0219eaz\u0103 paginarea <code>true</code>"},{"location":"fod/componente/business/FodRequestStatus/#5-exemple-de-utilizare","title":"5. Exemple de utilizare","text":""},{"location":"fod/componente/business/FodRequestStatus/#pagina-completa-de-verificare-status","title":"Pagin\u0103 complet\u0103 de verificare status","text":"<pre><code>@page \"/verifica-cerere\"\n@using FOD.Components.Resources\n@inject IStringLocalizer&lt;General&gt; L\n\n&lt;FodContainer MaxWidth=\"MaxWidth.Medium\"&gt;\n    &lt;FodText Typo=\"Typo.h3\" GutterBottom=\"true\"&gt;\n        @L[\"Check_Request_Status\"]\n    &lt;/FodText&gt;\n\n    &lt;FodPaper Class=\"pa-4 mt-4\"&gt;\n        &lt;FodRequestStatus \n            ShowAlert=\"true\"\n            OnSearchCompleted=\"@OnSearchCompleted\" /&gt;\n    &lt;/FodPaper&gt;\n\n    @if (hasResults)\n    {\n        &lt;FodAlert Severity=\"Severity.Success\" Class=\"mt-3\"&gt;\n            &lt;FodAlertTitle&gt;Rezultate g\u0103site&lt;/FodAlertTitle&gt;\n            S-au g\u0103sit @resultCount cereri pentru c\u0103utarea dvs.\n        &lt;/FodAlert&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    private bool hasResults = false;\n    private int resultCount = 0;\n\n    private void OnSearchCompleted(List&lt;RequestStatusResponseModel&gt; results)\n    {\n        hasResults = results.Any();\n        resultCount = results.Count;\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#integrare-in-dashboard","title":"Integrare \u00een dashboard","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardHeader&gt;\n                &lt;FodText Typo=\"Typo.h5\"&gt;\n                    Verificare rapid\u0103 status cerere\n                &lt;/FodText&gt;\n            &lt;/FodCardHeader&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodRequestStatus \n                    ShowAlert=\"false\"\n                    InitialKeyword=\"@lastSearchedKeyword\" /&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                    C\u0103ut\u0103ri recente\n                &lt;/FodText&gt;\n                &lt;FodList&gt;\n                    @foreach (var search in recentSearches)\n                    {\n                        &lt;FodListItem Button=\"true\" OnClick=\"@(() =&gt; SearchAgain(search))\"&gt;\n                            &lt;FodListItemText Primary=\"@search.Keyword\" \n                                           Secondary=\"@search.Date.ToString(\"dd.MM.yyyy HH:mm\")\" /&gt;\n                        &lt;/FodListItem&gt;\n                    }\n                &lt;/FodList&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#customizare-afisare-rezultate","title":"Customizare afi\u0219are rezultate","text":"<pre><code>&lt;!-- Custom response display --&gt;\n@if (searchResults != null)\n{\n    &lt;div class=\"custom-results mt-4\"&gt;\n        @foreach (var result in searchResults)\n        {\n            &lt;FodCard Class=\"mb-3\"&gt;\n                &lt;FodCardHeader&gt;\n                    &lt;div class=\"d-flex justify-content-between align-items-center\"&gt;\n                        &lt;FodText Typo=\"Typo.h6\"&gt;\n                            Cerere: @result.OrderNumber\n                        &lt;/FodText&gt;\n                        &lt;FodChip Color=\"@GetStatusColor(result.Status)\" Size=\"Size.Small\"&gt;\n                            @result.Status\n                        &lt;/FodChip&gt;\n                    &lt;/div&gt;\n                &lt;/FodCardHeader&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n                        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                            &lt;FodText Typo=\"Typo.body2\" Color=\"Color.Secondary\"&gt;\n                                Data depunerii\n                            &lt;/FodText&gt;\n                            &lt;FodText Typo=\"Typo.body1\"&gt;\n                                @result.SubmissionDate.ToString(\"dd MMMM yyyy\")\n                            &lt;/FodText&gt;\n                        &lt;/FodGrid&gt;\n                        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                            &lt;FodText Typo=\"Typo.body2\" Color=\"Color.Secondary\"&gt;\n                                Termen estimat\n                            &lt;/FodText&gt;\n                            &lt;FodText Typo=\"Typo.body1\"&gt;\n                                @result.EstimatedResolveDate?.ToString(\"dd MMMM yyyy\")\n                            &lt;/FodText&gt;\n                        &lt;/FodGrid&gt;\n                    &lt;/FodGrid&gt;\n\n                    @if (result.RequiresDelivery &amp;&amp; result.Delivery != null)\n                    {\n                        &lt;FodAlert Severity=\"Severity.Info\" Class=\"mt-3\"&gt;\n                            &lt;FodAlertTitle&gt;Informa\u021bii livrare&lt;/FodAlertTitle&gt;\n                            Curier: @result.Delivery.CarrierName&lt;br/&gt;\n                            Tracking: @result.Delivery.TrackingId\n                        &lt;/FodAlert&gt;\n                    }\n                &lt;/FodCardContent&gt;\n                &lt;FodCardActions&gt;\n                    &lt;FodButton Color=\"Color.Primary\" OnClick=\"@(() =&gt; ShowDetails(result))\"&gt;\n                        Vezi detalii complete\n                    &lt;/FodButton&gt;\n                &lt;/FodCardActions&gt;\n            &lt;/FodCard&gt;\n        }\n    &lt;/div&gt;\n}\n\n@code {\n    private Color GetStatusColor(string status)\n    {\n        return status switch\n        {\n            \"Finalizat\" =&gt; Color.Success,\n            \"\u00cen procesare\" =&gt; Color.Info,\n            \"\u00cen a\u0219teptare\" =&gt; Color.Warning,\n            \"Respins\" =&gt; Color.Error,\n            _ =&gt; Color.Default\n        };\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#6-stilizare-si-personalizare","title":"6. Stilizare \u0219i personalizare","text":"<pre><code>/* Stiluri pentru componenta de status */\n.service-request-status-response {\n    margin-top: 2rem;\n}\n\n/* Panouri expandabile personalizate */\n.fod-expansion-panel {\n    border-left: 4px solid var(--fod-palette-primary-main);\n    margin-bottom: 1rem;\n}\n\n/* Status badges */\n.status-badge {\n    display: inline-block;\n    padding: 0.25rem 0.75rem;\n    border-radius: 12px;\n    font-size: 0.875rem;\n    font-weight: 500;\n}\n\n.status-badge.completed {\n    background-color: #4caf50;\n    color: white;\n}\n\n.status-badge.processing {\n    background-color: #2196f3;\n    color: white;\n}\n\n.status-badge.waiting {\n    background-color: #ff9800;\n    color: white;\n}\n\n/* Rezultate cu hover effect */\n.result-item:hover {\n    background-color: rgba(0, 0, 0, 0.04);\n    cursor: pointer;\n}\n\n/* Timeline pentru status */\n.status-timeline {\n    position: relative;\n    padding-left: 30px;\n}\n\n.status-timeline::before {\n    content: '';\n    position: absolute;\n    left: 10px;\n    top: 0;\n    bottom: 0;\n    width: 2px;\n    background: #e0e0e0;\n}\n\n.status-timeline-item {\n    position: relative;\n    padding-bottom: 1.5rem;\n}\n\n.status-timeline-item::before {\n    content: '';\n    position: absolute;\n    left: -24px;\n    top: 4px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: #2196f3;\n    border: 2px solid white;\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#7-localizare","title":"7. Localizare","text":"<p>Componentele folosesc sistemul de localizare FOD. Cheile principale:</p> <pre><code>{\n  \"Request_Status\": \"Verificare status cerere\",\n  \"RequestStatus_General_Text\": \"Introduce\u021bi num\u0103rul cererii sau codul serviciului pentru a verifica statusul\",\n  \"Search\": \"Caut\u0103\",\n  \"RequestStatus_Error_Text\": \"Nu s-au g\u0103sit rezultate pentru c\u0103utarea dvs.\",\n  \"OrderNumber\": \"Num\u0103r cerere\",\n  \"ServiceProviderNumber\": \"Cod furnizor serviciu\",\n  \"Status\": \"Status\",\n  \"ServiceName\": \"Nume serviciu\",\n  \"ReceptionMode\": \"Mod recep\u021bionare\",\n  \"Pickup_Location_Name\": \"Loca\u021bie ridicare\",\n  \"Pickup_Location_Address\": \"Adres\u0103\",\n  \"MCabinetRelease\": \"Disponibil \u00een MCabinet\",\n  \"EstimatedResolveDate_Label\": \"Termen estimat rezolvare\",\n  \"SubmissionDate\": \"Data depunerii\"\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#8-integrare-cu-alte-componente","title":"8. Integrare cu alte componente","text":""},{"location":"fod/componente/business/FodRequestStatus/#cu-notificari","title":"Cu notific\u0103ri","text":"<pre><code>@inject ISnackbar Snackbar\n\n&lt;FodRequestStatus OnSearchCompleted=\"HandleSearchCompleted\" /&gt;\n\n@code {\n    private void HandleSearchCompleted(List&lt;RequestStatusResponseModel&gt; results)\n    {\n        if (!results.Any())\n        {\n            Snackbar.Add(\"Nu s-au g\u0103sit rezultate\", Severity.Warning);\n        }\n        else\n        {\n            Snackbar.Add($\"S-au g\u0103sit {results.Count} cereri\", Severity.Success);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#cu-export-date","title":"Cu export date","text":"<pre><code>&lt;FodToolbar&gt;\n    &lt;FodText Typo=\"Typo.h6\"&gt;Rezultate c\u0103utare&lt;/FodText&gt;\n    &lt;FodSpacer /&gt;\n    &lt;FodButton StartIcon=\"@Icons.Material.Filled.FileDownload\"\n               OnClick=\"ExportResults\"&gt;\n        Export CSV\n    &lt;/FodButton&gt;\n&lt;/FodToolbar&gt;\n\n&lt;FodRequestStatusResponse Model=\"@searchResults\" /&gt;\n\n@code {\n    private async Task ExportResults()\n    {\n        var csv = GenerateCsv(searchResults);\n        await JS.InvokeVoidAsync(\"downloadFile\", \"rezultate.csv\", csv);\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#9-validare-si-erori","title":"9. Validare \u0219i erori","text":"<pre><code>&lt;!-- Validare custom --&gt;\n&lt;FodRequestStatus&gt;\n    &lt;ValidationTemplate&gt;\n        &lt;DataAnnotationsValidator /&gt;\n        &lt;CustomValidator @ref=\"customValidator\" /&gt;\n    &lt;/ValidationTemplate&gt;\n&lt;/FodRequestStatus&gt;\n\n@code {\n    private CustomValidator customValidator;\n\n    private class CustomValidator : ComponentBase\n    {\n        [CascadingParameter]\n        private EditContext EditContext { get; set; }\n\n        protected override void OnInitialized()\n        {\n            EditContext.OnValidationRequested += (s, e) =&gt;\n            {\n                var model = EditContext.Model as RequestStatusRequestModel;\n                if (model != null &amp;&amp; model.Keyword?.Length &lt; 3)\n                {\n                    var messages = new ValidationMessageStore(EditContext);\n                    messages.Add(() =&gt; model.Keyword, \n                        \"Cuv\u00e2ntul cheie trebuie s\u0103 aib\u0103 cel pu\u021bin 3 caractere\");\n                    EditContext.NotifyValidationStateChanged();\n                }\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#10-performanta-si-optimizare","title":"10. Performan\u021b\u0103 \u0219i optimizare","text":"<ol> <li>Paginare - Rezultatele sunt paginate automat pentru performan\u021b\u0103</li> <li>Lazy loading - Detaliile sunt \u00eenc\u0103rcate doar c\u00e2nd panoul este expandat</li> <li>Caching - Rezultatele pot fi cache-uite local</li> </ol> <pre><code>// Service cu caching\npublic class CachedRequestStatusService : IRequestStatusService\n{\n    private readonly IMemoryCache _cache;\n    private readonly IRequestStatusService _innerService;\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel request)\n    {\n        var cacheKey = $\"request_status_{request.Keyword}\";\n\n        if (!_cache.TryGetValue(cacheKey, out List&lt;RequestStatusResponseModel&gt; cached))\n        {\n            cached = (await _innerService.Search(request)).ToList();\n            _cache.Set(cacheKey, cached, TimeSpan.FromMinutes(5));\n        }\n\n        return cached;\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#11-accesibilitate","title":"11. Accesibilitate","text":"<ul> <li>Suport pentru screen readers prin atribute ARIA</li> <li>Navigare cu tastatura pentru toate elementele interactive</li> <li>Indicatori vizuali clari pentru starea cererii</li> <li>Contrast adecvat pentru toate textele</li> </ul>"},{"location":"fod/componente/business/FodRequestStatus/#12-bune-practici","title":"12. Bune practici","text":"<ol> <li>Validare input - Valida\u021bi \u00eentotdeauna inputul \u00eenainte de c\u0103utare</li> <li>Feedback vizual - Afi\u0219a\u021bi loading state \u00een timpul c\u0103ut\u0103rii</li> <li>Mesaje clare - Folosi\u021bi mesaje localizate \u0219i descriptive</li> <li>Error handling - Gestiona\u021bi erorile de re\u021bea elegant</li> </ol> <pre><code>@try\n{\n    &lt;FodRequestStatus OnSearchError=\"HandleSearchError\" /&gt;\n}\ncatch (Exception ex)\n{\n    &lt;FodAlert Severity=\"Severity.Error\"&gt;\n        A ap\u0103rut o eroare. V\u0103 rug\u0103m \u00eencerca\u021bi din nou.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private void HandleSearchError(Exception ex)\n    {\n        Logger.LogError(ex, \"Eroare la c\u0103utarea statusului\");\n        // Afi\u0219are mesaj utilizator\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#13-troubleshooting","title":"13. Troubleshooting","text":""},{"location":"fod/componente/business/FodRequestStatus/#cautarea-nu-returneaza-rezultate","title":"C\u0103utarea nu returneaz\u0103 rezultate","text":"<ul> <li>Verifica\u021bi formatul cuv\u00e2ntului cheie</li> <li>Verifica\u021bi conexiunea la serviciul backend</li> <li>Verifica\u021bi c\u0103 serviciul IRequestStatusService este \u00eenregistrat</li> </ul>"},{"location":"fod/componente/business/FodRequestStatus/#paginarea-nu-functioneaza","title":"Paginarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 Model con\u021bine toate rezultatele</li> <li>Verifica\u021bi c\u0103 PageSize este configurat corect</li> </ul>"},{"location":"fod/componente/business/FodRequestStatus/#localizarea-nu-functioneaza","title":"Localizarea nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 resursele de localizare sunt configurate</li> <li>Verifica\u021bi cultura curent\u0103 a aplica\u021biei</li> </ul>"},{"location":"fod/componente/business/FodRequestStatus/#14-exemple-avansate","title":"14. Exemple avansate","text":""},{"location":"fod/componente/business/FodRequestStatus/#monitorizare-automata-status","title":"Monitorizare automat\u0103 status","text":"<pre><code>@implements IDisposable\n\n&lt;FodRequestStatus @ref=\"statusComponent\" /&gt;\n\n@if (isMonitoring)\n{\n    &lt;FodAlert Severity=\"Severity.Info\"&gt;\n        &lt;FodAlertTitle&gt;Monitorizare activ\u0103&lt;/FodAlertTitle&gt;\n        Statusul este verificat automat la fiecare @refreshInterval secunde\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private FodRequestStatus statusComponent;\n    private Timer refreshTimer;\n    private bool isMonitoring = false;\n    private int refreshInterval = 60;\n\n    private void StartMonitoring(string keyword)\n    {\n        isMonitoring = true;\n        refreshTimer = new Timer(async _ =&gt;\n        {\n            await InvokeAsync(async () =&gt;\n            {\n                await statusComponent.SearchAsync(keyword);\n                StateHasChanged();\n            });\n        }, null, TimeSpan.Zero, TimeSpan.FromSeconds(refreshInterval));\n    }\n\n    public void Dispose()\n    {\n        refreshTimer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#integrare-cu-notificari-push","title":"Integrare cu notific\u0103ri push","text":"<pre><code>@inject INotificationService NotificationService\n\n&lt;FodRequestStatus OnSearchCompleted=\"CheckForStatusChanges\" /&gt;\n\n@code {\n    private Dictionary&lt;string, string&gt; previousStatuses = new();\n\n    private async Task CheckForStatusChanges(\n        List&lt;RequestStatusResponseModel&gt; results)\n    {\n        foreach (var result in results)\n        {\n            if (previousStatuses.TryGetValue(result.OrderNumber, out var prevStatus))\n            {\n                if (prevStatus != result.Status)\n                {\n                    await NotificationService.SendNotification(\n                        $\"Statusul cererii {result.OrderNumber} s-a schimbat: {result.Status}\",\n                        NotificationType.StatusChange\n                    );\n                }\n            }\n            previousStatuses[result.OrderNumber] = result.Status;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/componente/business/FodRequestStatus/#15-concluzie","title":"15. Concluzie","text":"<p><code>FodRequestStatus</code> \u0219i <code>FodRequestStatusResponse</code> ofer\u0103 o solu\u021bie complet\u0103 pentru verificarea statusului cererilor \u00een sistemul FOD. Cu suport pentru c\u0103utare, paginare, afi\u0219are detaliat\u0103 \u0219i localizare, aceste componente sunt esen\u021biale pentru transparen\u021ba proceselor administrative \u0219i oferirea de feedback \u00een timp real cet\u0103\u021benilor despre cererile lor.</p>"},{"location":"fod/componente/bussiness/FodRequestCost/","title":"Fod Request Cost","text":"<p>Documenta\u021bie pentru <code>FodRequestCost</code></p>"},{"location":"fod/componente/bussiness/FodRequestCost/#descriere-generala","title":"Descriere general\u0103","text":"<p><code>FodRequestCost</code> este o component\u0103 Blazor utilizat\u0103 pentru afi\u0219area \u0219i gestionarea costurilor asociate unei cereri de servicii. Componenta interac\u021bioneaz\u0103 cu un model de tip <code>FodRequestCostModel</code>, care la r\u00e2ndul s\u0103u con\u021bine o list\u0103 de submodele de tip <code>FodServiceRequestCostModel</code>.</p>"},{"location":"fod/componente/bussiness/FodRequestCost/#functionalitati-principale","title":"Func\u021bionalit\u0103\u021bi principale","text":"<ul> <li>Afi\u0219area unei sec\u021biuni cu costuri pentru servicii cerute.  </li> <li>Posibilitatea de a afi\u0219a un mesaj personalizat c\u00e2nd nu exist\u0103 costuri (<code>NoCostMessage</code>).  </li> <li>Suport pentru localizarea dinamic\u0103 a etichetelor asociate fiec\u0103rui cost prin intermediul atributului <code>[Display]</code> \u0219i <code>IStringLocalizerFactory</code>.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestCost/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Model <code>FodRequestCostModel</code> Modelul principal care con\u021bine lista de costuri. NoCostMessage <code>string</code> Mesajul afi\u0219at c\u00e2nd nu exist\u0103 costuri disponibile."},{"location":"fod/componente/bussiness/FodRequestCost/#functionalitati-interne","title":"Func\u021bionalit\u0103\u021bi interne","text":""},{"location":"fod/componente/bussiness/FodRequestCost/#getlabelsubmodel","title":"<code>GetLabel(submodel)</code>","text":"<ul> <li>Verific\u0103 dac\u0103 proprietatea corespunz\u0103toare <code>ServiceName</code> din <code>FodServiceRequestCostModel</code> are atributul <code>[Display]</code>.</li> <li>Dac\u0103 exist\u0103, afi\u0219eaz\u0103 valoarea din <code>ResourceType</code>, localizat\u0103 prin <code>IStringLocalizerFactory</code>.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestCost/#hasattributetattributesubmodel","title":"<code>HasAttribute&lt;TAttribute&gt;(submodel)</code>","text":"<ul> <li>Verific\u0103 dac\u0103 o proprietate specificat\u0103 are un anumit atribut (ex: <code>DisplayAttribute</code>).</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestCost/#getlocalizedstringtype-string","title":"<code>GetLocalizedString(Type, string)</code>","text":"<ul> <li>Utilizeaz\u0103 <code>IStringLocalizerFactory</code> pentru a accesa \u0219i returna un string localizat dintr-un resource file.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestCost/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<pre><code>@using Fod.Components.Shared.Models.Business\n@using Fod.Components.Shared.Models.Business.Discount\n\n&lt;FodRequestCost Model=\"Exemple\"&gt;&lt;/FodRequestCost&gt;\n\n@code {\n    public FodRequestCostModel Exemple = new FodRequestCostModel()\n    {\n        ServiceRequestCosts = new List&lt;FodServiceRequestCostModel&gt;()\n        {\n            new FodServiceRequestCostModel()\n            {\n                InitialCost = 330,\n                Reason = ServiceCostReasonEnum.Calculated,\n                ServiceName = \"Extras din registrul unit\u0103\u021bilor de drept\",\n                Options = new List&lt;ServiceRequestCostOptionModel&gt;\n                {\n                    new ServiceRequestCostOptionModel{\n                        Title = \"Termenul de execu\u021bie\",\n                        Value = \"3 zile\"\n                    },\n                    new ServiceRequestCostOptionModel{\n                        Title = \"Pentru idno\",\n                        Value = \"1000000000001\",\n                        Options = new List&lt;ServiceRequestCostOptionModel&gt;\n                        {\n                            new ServiceRequestCostOptionModel{\n                                Value = \"Destina\u021bia: la solicitare\",\n                            }\n                        }\n                    }\n                },\n                Discounts = new List&lt;FodDiscountModel&gt;()\n                {\n                    new FodDiscountModel()\n                    {\n                        CalculatedDiscount = 66,\n                        DiscountPercent = 20,\n                        Reason = \"Redurecere pentru pesionari\"\n                    },\n                    new FodDiscountModel()\n                    {\n                        CalculatedDiscount = 33,\n                        DiscountPercent = 10,\n                        Reason = \"Format electronic\"\n                    }\n                },\n                Taxes = new List&lt;FodTaxModel&gt;\n                {\n                    new FodTaxModel()\n                    {\n                        Tax = 10,\n                        Reason = \"Taxa de stat\"\n                    }\n                }\n            },\n            new FodServiceRequestCostModel()\n            {\n                InitialCost = 50,\n                Reason = ServiceCostReasonEnum.Calculated,\n                ServiceName = \"Livrare prin intermediul MDelivery (Fan Curier).\"\n            }\n        }\n    };\n}\n</code></pre>"},{"location":"fod/componente/bussiness/FodRequestCost/#modele-asociate","title":"Modele asociate","text":""},{"location":"fod/componente/bussiness/FodRequestCost/#fodrequestcostmodel","title":"<code>FodRequestCostModel</code>","text":"<p>Modelul <code>FodRequestCostModel</code> este utilizat pentru a reprezenta costurile totale asociate unei cereri de servicii.</p> Proprietate Tip Descriere ServiceRequestCosts <code>IList&lt;FodServiceRequestCostModel&gt;</code> Lista costurilor asociate serviciilor incluse \u00een cerere. Cost <code>decimal</code> Costul final calculat al \u00eentregii cereri, \u00eensum\u00e2nd toate serviciile."},{"location":"fod/componente/bussiness/FodRequestCost/#fodservicerequestcostmodel","title":"<code>FodServiceRequestCostModel</code>","text":"<p>Modelul <code>FodServiceRequestCostModel</code> con\u021bine detalii despre costurile unui anumit serviciu solicitat.</p> Proprietate Tip Descriere InitialCost <code>decimal</code> Costul ini\u021bial al serviciului \u00eenainte de reduceri sau taxe. Cost <code>decimal</code> Costul final calculat (<code>InitialCost \u2013 Discounts + Taxes</code>). Discounts <code>IList&lt;FodDiscountModel&gt;</code> Lista de reduceri aplicate serviciului. Taxes <code>IList&lt;FodTaxModel&gt;</code> Lista de taxe aplicate serviciului. Options <code>IList&lt;ServiceRequestCostOptionModel&gt;</code> Op\u021biuni suplimentare pentru costul serviciului. Reason <code>ServiceCostReasonEnum</code> Motivul definirii costului serviciului. ServiceName <code>string</code> Numele serviciului (utilizat \u0219i pentru localizare)."},{"location":"fod/componente/bussiness/FodRequestCost/#servicerequestcostoptionmodel","title":"<code>ServiceRequestCostOptionModel</code>","text":"<p>Modelul <code>ServiceRequestCostOptionModel</code> reprezint\u0103 op\u021biuni de configurare pentru costuri individuale.</p> Proprietate Tip Descriere Title <code>string</code> Titlul op\u021biunii. Value <code>string</code> Valoarea op\u021biunii. Options <code>IList&lt;ServiceRequestCostOptionModel&gt;</code> Subop\u021biuni pentru structuri ierarhice complexe."},{"location":"fod/componente/bussiness/FodRequestCost/#observatii","title":"Observa\u021bii","text":"<ul> <li>Componenta este par\u021bial\u0103 \u0219i folose\u0219te un fi\u0219ier <code>code-behind</code> (<code>FodRequestCost.razor.cs</code>) pentru logic\u0103.  </li> <li>Este compatibil\u0103 cu infrastructura de localizare a Blazor \u0219i .NET prin <code>DisplayAttribute</code> \u0219i <code>ResourceType</code>.  </li> <li>Necesit\u0103 ca numele serviciului (<code>ServiceName</code>) din fiecare submodel s\u0103 corespund\u0103 cu o proprietate validat\u0103 prin reflec\u021bie.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestor/","title":"FodRequestor Component Documentation","text":""},{"location":"fod/componente/bussiness/FodRequestor/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodRequestor</code> este un component Razor care ofer\u0103 un formular pentru completarea \u0219i validarea datelor referitoare la solicitant (persoan\u0103 fizic\u0103 sau juridic\u0103). Este folosit \u00een aplica\u021biile FOD pentru colectarea detaliilor despre utilizatorul care ini\u021biaz\u0103 o solicitare sau ac\u021bioneaz\u0103 \u00een numele altuia. Componenta suport\u0103 scenarii precum: - Completarea datelor pe baza IDNP/IDNO. - Selectarea statutului solicitantului. - Validarea automat\u0103 a rela\u021biilor de reprezentare. - Personalizarea comportamentului prin diverse op\u021biuni.</p>"},{"location":"fod/componente/bussiness/FodRequestor/#proprietati-publice","title":"Propriet\u0103\u021bi Publice","text":"Proprietate Tip Descriere AuthorizationErrorMessage <code>string</code> Mesaj de eroare afi\u0219at \u00een cazul unei autoriz\u0103ri e\u0219uate. HideOnBehalfOn <code>bool</code> Ascunde sec\u021biunea \"\u00een numele altuia\" din formular. RequestorIdnpLoading <code>bool</code> Indic\u0103 dac\u0103 datele pentru IDNP sunt \u00een curs de \u00eenc\u0103rcare. VerifyEntityRelationship <code>bool</code> Specific\u0103 dac\u0103 trebuie verificat automat raportul dintre utilizator \u0219i entitate. AutoPopulateNameByIdnp <code>bool</code> Activeaz\u0103 completarea automat\u0103 a numelui pe baza IDNP. RequestorFirstNameLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea prenumelui solicitantului. ShowRequestorIndividualDetails <code>bool</code> Afi\u0219eaz\u0103 detalii specifice pentru persoan\u0103 fizic\u0103. OnRequestorFirstNameChanged <code>EventCallback&lt;string&gt;</code> Eveniment declan\u0219at la modificarea prenumelui. OnRequestorIdnoChanged <code>EventCallback&lt;string&gt;</code> Eveniment pentru schimbarea IDNO. OnBehalfOnFirstOptionText <code>string</code> Text personalizat pentru prima op\u021biune \"\u00een numele altuia\". OnBehalfOfPosition <code>LabelPosition</code> Pozi\u021bia etichetei pentru sec\u021biunea \"\u00een numele altuia\". IsPhoneRequired <code>bool</code> Specific\u0103 dac\u0103 num\u0103rul de telefon este obligatoriu. AutoPopulateOrganizationNameByIdno <code>bool</code> Completeaz\u0103 automat numele organiza\u021biei pe baza IDNO. LoadFromContext <code>bool</code> \u00cencarc\u0103 automat datele din contextul utilizatorului. OnRequestorCompanyNameChanged <code>EventCallback&lt;string&gt;</code> Eveniment declan\u0219at la modificarea denumirii companiei. ShowOnBehalfOf <code>bool</code> Afi\u0219eaz\u0103 op\u021biunea de a ac\u021biona \u00een numele altuia. ValidateNameByIdnp <code>bool</code> Activeaz\u0103 validarea numelui pe baza IDNP. DisableRequestorType <code>bool</code> Dezactiveaz\u0103 selectarea tipului solicitantului. DisableRequestorIdno <code>bool</code> Dezactiveaz\u0103 editarea IDNO. OnRequestorPhoneChanged <code>EventCallback&lt;string&gt;</code> Eveniment pentru schimbarea num\u0103rului de telefon. LoadPersonTypeFromContext <code>bool</code> \u00cencarc\u0103 tipul persoanei (fizic\u0103/juridic\u0103) din context. RequestorCompanyNameLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea denumirii companiei. IsReadonly <code>bool</code> Seteaz\u0103 formularul ca doar pentru citire. OnBehalfOnChanged <code>EventCallback&lt;OnBehalfOnEnum&gt;</code> Eveniment declan\u0219at la schimbarea op\u021biunii \"\u00een numele altuia\". HideRequestorOrganisation <code>bool</code> Ascunde sec\u021biunea pentru organiza\u021bie. OnRequestorIdnpChanged <code>EventCallback&lt;string&gt;</code> Eveniment pentru schimbarea IDNP. isLoadingMPower <code>bool</code> Afi\u0219eaz\u0103 indicatorul de \u00eenc\u0103rcare pentru autoriza\u021biile MPower. HideRequestorIndividual <code>bool</code> Ascunde complet sec\u021biunea pentru persoan\u0103 fizic\u0103. ConnectionExist <code>bool</code> Informa\u021bie despre existen\u021ba conexiunii cu entitatea. Model <code>IRequestor</code> Modelul de date pentru solicitant. OnBehalfOnSecondOptionText <code>string</code> Textul pentru a doua op\u021biune \"\u00een numele altuia\". RequestorLastNameLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea numelui de familie. HideRequestorIdnp <code>bool</code> Ascunde c\u00e2mpul IDNP din formular. DisableReadOnlyOnInvalid <code>bool</code> Permite editarea chiar \u0219i \u00een caz de date invalide. HideAuthorization <code>bool</code> Ascunde sec\u021biunea de autorizare MPower. PhonePlaceholder <code>string</code> Textul afi\u0219at ca placeholder pentru c\u00e2mpul de telefon. OnRequestorLastNameChanged <code>EventCallback&lt;string&gt;</code> Eveniment pentru schimbarea numelui de familie. RequestorEmailLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea emailului. HideRequestorIndividualDetails <code>bool</code> Ascunde detaliile personale ale solicitantului. OnChangeSelectedAuthorization <code>EventCallback&lt;MPowerAuthorization&gt;</code> Eveniment declan\u0219at la selectarea unei autoriza\u021bii MPower. IsNameValidating <code>bool</code> Indicator pentru procesul de validare a numelui. HideRequestorType <code>bool</code> Ascunde selectarea tipului solicitantului. AdministratorIsInvalid <code>bool</code> Semnalizeaz\u0103 o eroare pentru datele administratorului. RequestorIdnoLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea IDNO. OnEntityRelationshipVerified <code>EventCallback&lt;bool&gt;</code> Eveniment declan\u0219at c\u00e2nd rela\u021bia este validat\u0103. NameIsInvalid <code>bool</code> Semnaleaz\u0103 o problem\u0103 de validare a numelui. IsEmailRequired <code>bool</code> Specific\u0103 dac\u0103 emailul este obligatoriu. OnRequestorTypeChanged <code>EventCallback&lt;PersonType&gt;</code> Eveniment la schimbarea tipului de persoan\u0103. MPowerAuthorizations <code>List&lt;MPowerAuthorization&gt;</code> Lista autoriza\u021biilor disponibile prin MPower. OnChanged <code>EventCallback</code> Eveniment generic declan\u0219at la orice schimbare din formular. OnRequestorEmailChanged <code>EventCallback&lt;string&gt;</code> Eveniment pentru schimbarea emailului. RequestorPhoneLoading <code>bool</code> Indicator pentru \u00eenc\u0103rcarea telefonului. HasMultipleRequestorStatute <code>bool</code> Specific\u0103 dac\u0103 exist\u0103 mai multe statute posibile. DisableOnBehalfOn <code>bool</code> Dezactiveaz\u0103 op\u021biunea \"\u00een numele altuia\". DisableRequestorCompanyName <code>bool</code> Dezactiveaz\u0103 editarea denumirii companiei. isInvalid <code>bool</code> Stare de validare global\u0103 pentru formular."},{"location":"fod/componente/bussiness/FodRequestor/#metode-publice","title":"Metode Publice","text":"Semn\u0103tur\u0103 Descriere <code>async void PersonTypeChanged(PersonType e)</code> Declan\u0219at la schimbarea tipului de persoan\u0103. <code>async void MPowerOnChanged(MPowerAuthorization e)</code> Gestioneaz\u0103 schimbarea autoriza\u021biei MPower. <code>async Task RequestorFirstNameChanged(string e)</code> Gestioneaz\u0103 modificarea prenumelui. <code>async Task OnInitializedAsync()</code> Ini\u021bializeaz\u0103 componenta la \u00eenc\u0103rcare. <code>async Task RequestorIdnpChanged(string e)</code> Gestioneaz\u0103 modificarea IDNP. <code>async Task CheckEntityStatus()</code> Verific\u0103 statutul entit\u0103\u021bii din context. <code>async Task RequestorStatuteChanged(FodRequestorStatuteModel value)</code> Gestioneaz\u0103 schimbarea statutului solicitantului. <code>async Task RequestorLastNameChanged(string e)</code> Gestioneaz\u0103 modificarea numelui de familie. <code>async void InitFromContext(object sender, UserContext currentContext)</code> Ini\u021bializeaz\u0103 componenta din contextul curent. <code>async Task ValidateAdministrator()</code> Valideaz\u0103 datele administratorului. <code>async void RequestorCompanyNameChanged(string e)</code> Gestioneaz\u0103 modificarea numelui companiei. <code>async Task PopulateOrganizationName()</code> Completeaz\u0103 automat denumirea organiza\u021biei. <code>async Task RequestorIdnoChanged(string e)</code> Gestioneaz\u0103 modificarea IDNO. <code>async void RequestorEmailChanged(string e)</code> Gestioneaz\u0103 modificarea emailului. <code>async void RequestorPhoneChanged(string e)</code> Gestioneaz\u0103 modificarea telefonului. <code>async Task PopulateName()</code> Completeaz\u0103 automat numele pe baza IDNP. <code>async Task ValidateName()</code> Valideaz\u0103 datele introduse. <code>async void BehalfOnChanged(OnBehalfOnEnum e)</code> Gestioneaz\u0103 schimbarea op\u021biunii \"\u00een numele altuia\"."},{"location":"fod/componente/bussiness/FodRequestor/#evenimente-callbacks","title":"Evenimente / Callbacks","text":"Declan\u0219ator Descriere <code>OnValueChanged=\"RequestorFirstNameChanged\"</code> C\u00e2nd este modificat prenumele solicitantului. <code>OnValueChanged=\"RequestorPhoneChanged\"</code> C\u00e2nd este modificat num\u0103rul de telefon. <code>OnValueChanged=\"RequestorIdnoChanged\"</code> C\u00e2nd este modificat IDNO. <code>OnValueChanged=\"PersonTypeChanged\"</code> C\u00e2nd este schimbat tipul persoanei. <code>OnValueChanged=\"MPowerOnChanged\"</code> C\u00e2nd este modificat\u0103 autoriza\u021bia MPower. <code>OnValueChanged=\"RequestorCompanyNameChanged\"</code> C\u00e2nd este modificat numele companiei. <code>OnValueChanged=\"RequestorEmailChanged\"</code> C\u00e2nd este modificat emailul. <code>OnValueChanged=\"(value) =&gt; RequestorStatuteChanged(value)\"</code> C\u00e2nd este selectat un nou statut. <code>OnValueChanged=\"BehalfOnChanged\"</code> C\u00e2nd este schimbat\u0103 op\u021biunea \"\u00een numele altuia\". <code>OnValueChanged=\"RequestorLastNameChanged\"</code> C\u00e2nd este modificat numele de familie. <code>OnValueChanged=\"RequestorIdnpChanged\"</code> C\u00e2nd este modificat IDNP-ul."},{"location":"fod/componente/bussiness/FodRequestor/#functionalitati-cheie","title":"Func\u021bionalit\u0103\u021bi Cheie","text":"<ul> <li>Validare automat\u0103 a identit\u0103\u021bii: pe baza IDNP/IDNO se poate completa automat numele sau compania.</li> <li>Control granular asupra afi\u0219\u0103rii c\u00e2mpurilor: folosind propriet\u0103\u021bi precum <code>HideRequestorType</code>, <code>ShowOnBehalfOf</code>, <code>DisableRequestorIdnp</code> etc.</li> <li>Interac\u021biuni cu serviciile externe: utilizarea <code>IRequestorComponentService</code> \u0219i <code>IContextService</code> pentru valid\u0103ri \u0219i ini\u021bializ\u0103ri.</li> <li>Localizare: mesaje \u0219i op\u021biuni localizate prin <code>IStringLocalizer</code>.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestor/#dependente-injectate","title":"Dependen\u021be Injectate","text":"Serviciu Descriere <code>IRequestorComponentService</code> Pentru logica business legat\u0103 de solicitant. <code>IContextService</code> Pentru accesarea contextului utilizatorului. <code>INameService</code> Pentru completarea automat\u0103 a numelui prin IDNP. <code>IStringLocalizer&lt;&gt;</code> Pentru localizarea textelor \u0219i mesajelor."},{"location":"fod/componente/bussiness/FodRequestor/#configurare-appsettingsjson","title":"Configurare <code>appsettings.json</code>","text":"<p>Pentru ca <code>FodRequestor</code> s\u0103 func\u021bioneze corect, este necesar\u0103 configurarea fi\u0219ierului <code>appsettings.json</code> cu urm\u0103toarele op\u021biuni \u00een sec\u021biunea <code>Components:Requestor</code>:</p> Cheie Tip Descriere <code>AllowGetRequestorData</code> <code>bool</code> Permite extragerea automat\u0103 a datelor solicitantului (nume, prenume) pe baza IDNP. <code>AllowGetOrganizationData</code> <code>bool</code> Permite extragerea denumirii organiza\u021biei pe baza IDNO. <code>BlurName</code> <code>bool</code> Specific\u0103 dac\u0103 numele/prenumele s\u0103 fie mascate par\u021bial (ex. M*** \u00een loc de Maria). <code>AllowFullName</code> <code>bool</code> Dac\u0103 este activat, permite afi\u0219area complet\u0103 a numelui f\u0103r\u0103 mascarea acestuia. <code>MConnectReason</code> <code>string</code> Motivul transmis \u00een cadrul cererii c\u0103tre serviciul MConnect, utilizat pentru audit. <p>Exemplu: <pre><code>\"Components\": {\n  \"Requestor\": {\n    \"AllowGetRequestorData\": true,\n    \"AllowGetOrganizationData\": true,\n    \"BlurName\": true,\n    \"AllowFullName\": false,\n    \"MConnectReason\": \"Extragerea datelor solicitantului, pentru prestarea serviciului 'Solicitare cazier judiciar, cazier contraven\u021bional \u0219i alte certificate'\"\n  }\n}\n</code></pre></p>"},{"location":"fod/componente/bussiness/FodRequestor/#observatii","title":"Observa\u021bii","text":"<p>Aceast\u0103 component\u0103 este proiectat\u0103 pentru reutilizare \u0219i poate fi personalizat\u0103 extensiv prin parametrii \u0219i evenimentele disponibile. Recomand\u0103m utilizarea acesteia \u00een paginile de ini\u021biere a solicit\u0103rilor sau completarea automat\u0103 a informa\u021biilor despre utilizatori sau entit\u0103\u021bi juridice.</p>"},{"location":"fod/componente/bussiness/FodRequestorDisplay/","title":"FodRequestorDisplay Component Documentation","text":""},{"location":"fod/componente/bussiness/FodRequestorDisplay/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodRequestorDisplay</code> este un component Razor folosit pentru afi\u0219area datelor solicitantului \u00eentr-un format structurat, utiliz\u00e2nd <code>FodDisplay</code>. Acesta afi\u0219eaz\u0103 condi\u021bionat c\u00e2mpuri din modelul <code>IRequestor</code>, cum ar fi IDNP, nume complet, IDNO, denumirea companiei, email, telefon etc., \u00een func\u021bie de tipul solicitantului (persoan\u0103 fizic\u0103 sau juridic\u0103) \u0219i de configur\u0103rile de afi\u0219are.</p>"},{"location":"fod/componente/bussiness/FodRequestorDisplay/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>Model</code> <code>IRequestor</code> Modelul de date al solicitantului, pe baza c\u0103ruia se face afi\u0219area c\u00e2mpurilor. <code>PropertyExcluded(string)</code> <code>Func&lt;string, bool&gt;</code> Metod\u0103 mo\u0219tenit\u0103 folosit\u0103 pentru a verifica dac\u0103 o proprietate este exclus\u0103 din afi\u0219are."},{"location":"fod/componente/bussiness/FodRequestorDisplay/#functionalitati","title":"Func\u021bionalit\u0103\u021bi","text":"<ul> <li>Afi\u0219eaz\u0103 tipul solicitantului (<code>RequestorType</code>) mereu dac\u0103 nu este exclus.</li> <li>Afi\u0219eaz\u0103 <code>RequestorIdno</code> \u0219i <code>RequestorCompanyName</code> doar dac\u0103 tipul este <code>Organization</code>.</li> <li>Afi\u0219eaz\u0103 <code>RequestorIdnp</code>, <code>FullName</code>, <code>RequestorPhone</code>, <code>RequestorEmail</code> \u0219i <code>MPowerAuthorization</code> doar dac\u0103 nu sunt nule/gole \u0219i nu sunt excluse.</li> <li>Folose\u0219te <code>FodDisplay</code> pentru fiecare c\u00e2mp, ceea ce presupune o afi\u0219are uniformizat\u0103 \u00een aplica\u021bie.</li> <li>Eticheta pentru <code>MPowerAuthorization.AuthorizingPartyName</code> este determinat\u0103 dinamic prin metoda <code>GetAuthorizingPartyNameLabel()</code>.</li> </ul>"},{"location":"fod/componente/bussiness/FodRequestorDisplay/#dependente-injectate","title":"Dependen\u021be Injectate","text":"Serviciu Descriere <code>IStringLocalizer&lt;FodSharedResources&gt;</code> Utilizat pentru localizarea etichetelor afi\u0219ate \u00een component\u0103."},{"location":"fod/componente/bussiness/FodRequestorDisplay/#observatii","title":"Observa\u021bii","text":"<p>Aceast\u0103 component\u0103 este util\u0103 pentru afi\u0219area \u00eentr-un mod controlat \u0219i localizat a datelor despre solicitant \u00een interfa\u021ba de utilizator. Afi\u0219area c\u00e2mpurilor se face condi\u021bionat, oferind flexibilitate mare prin metoda <code>PropertyExcluded</code>.</p>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/","title":"Configurarea limbilor disponibile \u00een proiectul FOD","text":""},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#introducere","title":"Introducere","text":"<p>Aceast\u0103 documenta\u021bie descrie modul \u00een care se configureaz\u0103 limbile disponibile \u00een proiect prin intermediul fi\u0219ierului <code>appsettings.json</code>. Aceast\u0103 configura\u021bie permite ad\u0103ugarea \u0219i gestionarea limbilor \u00een care portalul este disponibil pentru utilizatori.</p>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#configurarea-in-appsettingsjson","title":"Configurarea \u00een <code>appsettings.json</code>","text":"<p>Fi\u0219ierul de configurare <code>appsettings.json</code> con\u021bine o sec\u021biune dedicat\u0103 pentru gestionarea limbilor disponibile. Structura general\u0103 este urm\u0103toarea:</p> <pre><code>\"Fod\": {\n  \"Application\": {\n    \"Languages\": [\n      {\n        \"Iso2\": \"ro\",\n        \"Name\": \"Rom\u00e2n\u0103\"\n      },\n      {\n        \"Iso2\": \"ru\",\n        \"Name\": \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\"\n      },\n      {\n        \"Iso2\": \"en\",\n        \"Name\": \"English\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#explicatie","title":"Explica\u021bie","text":"<p>Aceast\u0103 configura\u021bie define\u0219te lista de limbi suportate de aplica\u021bie. Fiecare limb\u0103 este specificat\u0103 printr-un obiect care con\u021bine urm\u0103toarele propriet\u0103\u021bi:</p> <ul> <li>Iso2: Codul ISO 639-1 al limbii. Acest cod este utilizat pentru a identifica limba \u00een aplica\u021bie.</li> <li>Name: Numele afi\u0219at al limbii \u00een interfa\u021ba utilizatorului.</li> </ul> <p>\u00cen exemplul de mai sus, aplica\u021bia suport\u0103 urm\u0103toarele limbi:</p> <ul> <li>Rom\u00e2n\u0103 (<code>ro</code>)</li> <li>\u0420\u0443\u0441\u0441\u043a\u0438\u0439 (<code>ru</code>)</li> <li>English (<code>en</code>)</li> </ul>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#utilizare-in-cod","title":"Utilizare \u00een cod","text":""},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#accesarea-listei-de-limbi-in-c","title":"Accesarea listei de limbi \u00een C","text":"<p>Pentru a citi lista de limbi din <code>appsettings.json</code>, se poate utiliza <code>IConfiguration</code> \u00een ASP.NET Core:</p> <pre><code>using Microsoft.Extensions.Configuration;\nusing System.Collections.Generic;\n\npublic class LanguageService\n{\n    private readonly List&lt;Language&gt; _languages;\n\n    public LanguageService(IConfiguration configuration)\n    {\n        _languages = configuration.GetSection(\"Fod:Application:Languages\").Get&lt;List&lt;Language&gt;&gt;();\n    }\n\n    public IEnumerable&lt;Language&gt; GetAvailableLanguages()\n    {\n        return _languages;\n    }\n}\n\npublic class Language\n{\n    public string Iso2 { get; set; }\n    public string Name { get; set; }\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#integrarea-cu-interfata-blazor","title":"Integrarea cu interfa\u021ba Blazor","text":"<p>\u00centr-o aplica\u021bie Blazor, aceast\u0103 list\u0103 de limbi poate fi utilizat\u0103 pentru a permite utilizatorilor s\u0103 selecteze limba preferat\u0103 dintr-un meniu derulant:</p> <pre><code>@inject LanguageService LanguageService\n\n&lt;select @bind=\"selectedLanguage\"&gt;\n    @foreach (var lang in LanguageService.GetAvailableLanguages())\n    {\n        &lt;option value=\"@lang.Iso2\"&gt;@lang.Name&lt;/option&gt;\n    }\n&lt;/select&gt;\n\n@code {\n    private string selectedLanguage = \"ro\";\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#configurarea-automata-a-culturii-in-aplicatie","title":"Configurarea automat\u0103 a culturii \u00een aplica\u021bie","text":"<p>At\u00e2t aplica\u021bia client, c\u00e2t \u0219i cea server, vor prelua automat configura\u021bia limbilor din <code>appsettings.json</code> \u0219i vor configura cultura aplica\u021biei \u00een func\u021bie de limba selectat\u0103 de utilizator. Acest proces asigur\u0103 traducerea corect\u0103 a interfe\u021bei \u0219i utilizarea formatelor locale corespunz\u0103toare (ex. dat\u0103, or\u0103, moned\u0103 etc.).</p> <p>Dac\u0103 utilizatorul nu a selectat o limb\u0103, atunci implicit se va seta limba Rom\u00e2n\u0103 (<code>ro</code>).</p>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#configurarea-culturii-pe-server","title":"Configurarea culturii pe server","text":"<p>Pentru a implementa aceast\u0103 func\u021bionalitate, serverul poate seta cultura folosind middleware-ul de localizare \u00een ASP.NET Core:</p> <pre><code>using Microsoft.AspNetCore.Localization;\nusing System.Globalization;\n\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n{\n    var supportedCultures = new List&lt;CultureInfo&gt;\n    {\n        new CultureInfo(\"ro\"),\n        new CultureInfo(\"ru\"),\n        new CultureInfo(\"en\")\n    };\n\n    var localizationOptions = new RequestLocalizationOptions\n    {\n        DefaultRequestCulture = new RequestCulture(\"ro\"),\n        SupportedCultures = supportedCultures,\n        SupportedUICultures = supportedCultures\n    };\n\n    app.UseRequestLocalization(localizationOptions);\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#configurarea-culturii-pe-client-blazor","title":"Configurarea culturii pe client Blazor","text":"<p>\u00cen aplica\u021bia client Blazor, cultura poate fi setat\u0103 folosind <code>CultureInfo</code> \u0219i <code>JSInterop</code> pentru a sincroniza cultura cu navigatorul utilizatorului:</p> <pre><code>@inject IJSRuntime JSRuntime\n\n@code {\n    protected override async Task OnInitializedAsync()\n    {\n        var culture = await JSRuntime.InvokeAsync&lt;string&gt;(\"navigator.language\");\n        CultureInfo.DefaultThreadCurrentCulture = new CultureInfo(culture);\n        CultureInfo.DefaultThreadCurrentUICulture = new CultureInfo(culture);\n    }\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20limbilor%20disponibile/#concluzie","title":"Concluzie","text":"<p>Configurarea limbilor disponibile prin <code>appsettings.json</code> ofer\u0103 o metod\u0103 flexibil\u0103 de gestionare a limbilor \u00een aplica\u021bie. At\u00e2t clientul, c\u00e2t \u0219i serverul vor prelua automat configura\u021bia \u0219i vor seta cultura aplica\u021biei \u00een func\u021bie de limba selectat\u0103, asigur\u00e2nd o experien\u021b\u0103 coerent\u0103 pentru utilizatori. \u00cen cazul \u00een care utilizatorul nu a selectat o limb\u0103, aplica\u021bia va utiliza implicit limba Rom\u00e2n\u0103 (<code>ro</code>).</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/","title":"Configurarea contextelor implicite","text":""},{"location":"fod/configurare/configurare%20roluri%20implicite/#configurarea-contextelor-in-appsettingsjson","title":"Configurarea contextelor \u00een <code>appsettings.json</code>","text":"<p>\u00cen cadrul sec\u021biunii <code>Fod.Services.DefaultContexts</code> din fi\u0219ierul <code>appsettings.json</code>, exist\u0103 mai multe op\u021biuni care permit activarea sau dezactivarea gener\u0103rii anumitor contexte \u00een aplica\u021bie. Aceste op\u021biuni ofer\u0103 control asupra contextelor utilizate, \u00een func\u021bie de necesit\u0103\u021bile specifice.</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#proprietati-disponibile","title":"Propriet\u0103\u021bi disponibile:","text":"<ul> <li> <p>IgnoreIndividualContext (<code>boolean</code>)   Dac\u0103 este setat la <code>true</code>, contextul persoanelor fizice nu va fi generat. Acest lucru este util \u00een cazul \u00een care aplica\u021bia nu trebuie s\u0103 gestioneze contexte pentru utilizatori individuali.</p> </li> <li> <p>IgnoreOrganizationContexts (<code>boolean</code>)   Dac\u0103 este setat la <code>true</code>, contextul persoanelor juridice va fi ignorat. Acest parametru este util dac\u0103 aplica\u021bia nu are nevoie de contexte pentru organiza\u021bii.</p> </li> <li> <p>IgnoreCupsContexts (<code>boolean</code>)   Dac\u0103 este setat la <code>true</code>, contextul Operator CUPS nu va fi generat. Aceast\u0103 setare trebuie utilizat\u0103 dac\u0103 acest tip de context nu este necesar \u00een fluxurile aplica\u021biei.</p> </li> </ul>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#cerinte-pentru-generarea-contextelor","title":"Cerin\u021be pentru generarea contextelor","text":""},{"location":"fod/configurare/configurare%20roluri%20implicite/#atribute-generale-necesare-in-mpass","title":"Atribute generale necesare \u00een MPass","text":"<p>Pentru a permite generarea oric\u0103ruia dintre aceste contexte, este necesar ca \u00een MPass s\u0103 fie configurate urm\u0103toarele atribute pentru utilizatorul autentificat:</p> <ul> <li><code>Username</code> \u2013 de obicei, IDNP-ul persoanei autentificate.</li> <li><code>FirstName</code> \u2013 prenumele utilizatorului.</li> <li><code>LastName</code> \u2013 numele de familie al utilizatorului.</li> </ul> <p>Dac\u0103 aceste atribute nu sunt configurate corect, aplica\u021bia nu va putea genera niciun context.</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#generarea-contextului-persoanei-juridice","title":"Generarea contextului persoanei juridice","text":"<p>Pentru a permite generarea contextului persoanei juridice, este necesar ca la configurarea serviciului \u00een MPass s\u0103 fie prezent atributul:</p> <ul> <li><code>AdministeredLegalEntity</code>, cu formatul: <code>Nume COMPANIE SRL 1234567890123</code></li> </ul> <p>Unde:</p> <ul> <li><code>Nume COMPANIE SRL</code> \u2013 reprezint\u0103 denumirea organiza\u021biei.</li> <li><code>1234567890123</code> \u2013 reprezint\u0103 IDNO-ul organiza\u021biei.</li> </ul> <p>Dac\u0103 acest atribut nu este prezent sau nu respect\u0103 formatul specificat, aplica\u021bia nu va putea genera contextul persoanei juridice.</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#generarea-contextului-operator-cups","title":"Generarea contextului Operator CUPS","text":"<p>Pentru a permite generarea contextului Operator CUPS, este necesar ca utilizatorul autentificat \u00een MPass s\u0103 aib\u0103 setat atributul:</p> <ul> <li><code>Specialist CUPS</code></li> </ul> <p>Dac\u0103 acest atribut nu este configurat, aplica\u021bia nu va putea genera acest context.</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#modificarea-configuratiei-in-appsettingsjson","title":"Modificarea configura\u021biei \u00een <code>appsettings.json</code>","text":"<p>Dac\u0103 un programator dore\u0219te s\u0103 ajusteze comportamentul aplica\u021biei \u0219i s\u0103 previn\u0103 generarea anumitor contexte, poate modifica valorile acestor op\u021biuni \u00een <code>appsettings.json</code>.</p>"},{"location":"fod/configurare/configurare%20roluri%20implicite/#exemplu-de-configurare","title":"Exemplu de configurare:","text":"<pre><code>\"Fod\": {\n  \"Services\": {\n    \"DefaultContexts\": {\n      \"IgnoreIndividualContext\": false,\n      \"IgnoreOrganizationContexts\": false,\n      \"IgnoreCupsContexts\": false\n    }\n  }\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20roluri%20particularizate/","title":"Configurare roluri particularizate","text":""},{"location":"fod/configurare/configurare%20roluri%20particularizate/#configurare-roluri-si-contexte-particularizate","title":"Configurare roluri \u0219i contexte particularizate","text":""},{"location":"fod/configurare/configurare%20roluri%20particularizate/#descriere","title":"Descriere","text":"<p>FOD ofer\u0103 un model dinamic pentru generarea contextelor utilizatorului, permi\u021b\u00e2nd personalizarea acestora \u00een func\u021bie de cerin\u021bele aplica\u021biei. Prin implementarea interfe\u021bei <code>IUserContextProvider</code>, dezvoltatorii pot adapta informa\u021biile utilizatorilor pentru a respecta diferite scenarii opera\u021bionale, cum ar fi administrarea tehnic\u0103, gestionarea organiza\u021biilor \u0219i rolurile de execu\u021bie.</p>"},{"location":"fod/configurare/configurare%20roluri%20particularizate/#implementare","title":"Implementare","text":""},{"location":"fod/configurare/configurare%20roluri%20particularizate/#1-crearea-clasei-customusercontextprovider","title":"1. Crearea clasei <code>CustomUserContextProvider</code>","text":"<p>Pentru a personaliza contextul utilizatorului \u00een FOD, este necesar\u0103 crearea unei clase care implementeaz\u0103 <code>IUserContextProvider</code>. Aceasta trebuie s\u0103 defineasc\u0103 metoda asincron\u0103:</p> <pre><code>Task&lt;IEnumerable&lt;UserContext&gt;&gt; Get();\n</code></pre> <p>Mai jos este un exemplu de implementare a acestei interfe\u021be \u00eentr-o clas\u0103 numit\u0103 <code>CustomUserContextProvider</code>, care extrage contextul utilizatorului pe baza revendic\u0103rilor (Claims) disponibile \u00een <code>HttpContext</code>.</p> <pre><code>public class CustomUserContextProvider : IUserContextProvider\n{\n    private readonly string ORGANIZATION_EXECUTOR_TYPE = \"Executor\";\n    private readonly string ORGANIZATION_PA_ADMINISTRATOR_TYPE = \"Administrator Autoritate Publica\";\n    private const int IDNO_LENGTH = 13;\n    private readonly IHttpContextAccessor _httpContextAccessor;\n\n    public CustomUserContextProvider(IHttpContextAccessor httpContextAccessor)\n    {\n        _httpContextAccessor = httpContextAccessor;\n    }\n\n    public async Task&lt;IEnumerable&lt;UserContext&gt;&gt; Get()\n    {\n        var user = _httpContextAccessor?.HttpContext?.User;\n        var result = new List&lt;UserContext&gt;();\n        result.AddRange(ExtractTechnicalAdministrator(user));\n        result.AddRange(ExtractPAAdministrators(user));\n        result.AddRange(ExtractExecutors(user));\n        return await Task.FromResult(result);\n    }\n\n    private IEnumerable&lt;UserContext&gt; ExtractExecutors(ClaimsPrincipal principal)\n    {\n        var organizationClaims = principal.Claims.Where(sr =&gt; sr.Type == ORGANIZATION_EXECUTOR_TYPE || sr.Type == \"Executor AP\");\n        return organizationClaims.Select(sr =&gt;\n        {\n            var organization = ExtractOrganizationIDNO(sr.Value);\n            var userContext = new UserContext()\n            {\n                ContextId = organization.IDNO + \"_Executor\",\n                ContextType = UserContextType.System,\n                ContextName = organization.Organization,\n                ContextRole = \"Executor\",\n                UserId = principal.FindFirst(\"Username\")?.Value,\n                UserFirstName = principal.FindFirst(\"FirstName\")?.Value,\n                UserLastName = principal.FindFirst(\"LastName\")?.Value,\n                Role = \"Executor\"\n            };\n            userContext.Attributes.Add(new KeyValuePair&lt;string, string&gt;(\"IDNO\", organization.IDNO));\n            userContext.Attributes.Add(new KeyValuePair&lt;string, string&gt;(\"OrganizationName\", organization.Organization));\n            return userContext;\n        });\n    }\n\n    private IEnumerable&lt;UserContext&gt; ExtractTechnicalAdministrator(ClaimsPrincipal principal)\n    {\n        var organizationClaims = principal.Claims.Where(sr =&gt; sr.Type == \"Role\" &amp;&amp; sr.Value == \"AdministratorTehnic\");\n        return organizationClaims.Select(sr =&gt;\n        {\n            return new UserContext()\n            {\n                ContextId = \"AdministratorTehnic\",\n                ContextType = UserContextType.System,\n                ContextName = \"Administrator Tehnic\",\n                ContextRole = \"Administrator Tehnic\",\n                UserId = principal.FindFirst(\"Username\")?.Value,\n                UserFirstName = principal.FindFirst(\"FirstName\")?.Value,\n                UserLastName = principal.FindFirst(\"LastName\")?.Value,\n                Role = \"AdministratorTehnic\"\n            };\n        });\n    }\n\n    private IEnumerable&lt;UserContext&gt; ExtractPAAdministrators(ClaimsPrincipal principal)\n    {\n        var organizationClaims = principal.Claims.Where(sr =&gt; sr.Type == ORGANIZATION_PA_ADMINISTRATOR_TYPE || sr.Type == \"Administrator AP\");\n        return organizationClaims.Select(sr =&gt;\n        {\n            var organization = ExtractOrganizationIDNO(sr.Value);\n            var userContext = new UserContext()\n            {\n                ContextId = organization.IDNO + \"_Administrator\",\n                ContextType = UserContextType.System,\n                ContextName = organization.Organization,\n                ContextRole = \"Administrator Autoritate Publica\",\n                UserId = principal.FindFirst(\"Username\")?.Value,\n                UserFirstName = principal.FindFirst(\"FirstName\")?.Value,\n                UserLastName = principal.FindFirst(\"LastName\")?.Value,\n                Role = \"AdministratorAP\"\n            };\n            userContext.Attributes.Add(new KeyValuePair&lt;string, string&gt;(\"IDNO\", organization.IDNO));\n            userContext.Attributes.Add(new KeyValuePair&lt;string, string&gt;(\"OrganizationName\", organization.Organization));\n            return userContext;\n        });\n    }\n\n    private (string Organization, string IDNO) ExtractOrganizationIDNO(string claimValue)\n    {\n        if (claimValue.Contains(\":\"))\n        {\n            var arr = claimValue.Split(\":\");\n            return (arr[1], arr[0]);\n        }\n        var organization = claimValue.Substring(0, claimValue.Length - IDNO_LENGTH - 1);\n        var idno = claimValue.Substring(claimValue.Length - IDNO_LENGTH);\n        return (organization, idno);\n    }\n}\n</code></pre>"},{"location":"fod/configurare/configurare%20roluri%20particularizate/#2-inregistrarea-customusercontextprovider-in-containerul-de-dependente","title":"2. \u00cenregistrarea <code>CustomUserContextProvider</code> \u00een containerul de dependen\u021be","text":"<p>\u00cen <code>Startup.cs</code> sau \u00een configurarea serviciilor aplica\u021biei, trebuie \u00eenregistrat\u0103 implementarea <code>IUserContextProvider</code>:</p> <pre><code>services.AddScoped&lt;IUserContextProvider, CustomUserContextProvider&gt;();\n</code></pre>"},{"location":"fod/configurare/configurare%20roluri%20particularizate/#concluzie","title":"Concluzie","text":"<p>Prin implementarea unui <code>IUserContextProvider</code> personalizat, aplica\u021bia poate genera \u0219i gestiona contexte variate ale utilizatorilor \u00een mod flexibil, asigur\u00e2nd integrarea acestora \u00een ecosistemul FOD. Aceast\u0103 solu\u021bie permite personalizarea accesului \u0219i gestionarea rolurilor utilizatorilor \u00eentr-un mod scalabil \u0219i eficient.</p>"},{"location":"fod/configurare/mpass/","title":"Configurarea Serviciului MPass pentru Integrarea cu FOD","text":""},{"location":"fod/configurare/mpass/#1-certificatul-serviciului","title":"1. Certificatul Serviciului","text":"<p>Pentru a permite integrarea serviciului FOD cu MPass, este necesar un certificat de serviciu \u00eempreun\u0103 cu parola acestuia. Acest certificat este utilizat pentru autentificare \u0219i semnare digital\u0103 \u00een procesul de login.</p> <p>Ob\u021binerea certificatului poate fi realizat\u0103 de c\u0103tre persoana responsabil\u0103 sau administratorul serviciului \u00een MPass. Dup\u0103 ob\u021binere, certificatul trebuie configurat corespunz\u0103tor \u00een aplica\u021bia FOD.</p>"},{"location":"fod/configurare/mpass/#2-atributele-necesare-pentru-autentificare","title":"2. Atributele Necesare pentru Autentificare","text":"<p>La autentificare, MPass poate furniza mai multe atribute c\u0103tre serviciul integrat. Componentele FOD sunt configurate s\u0103 proceseze urm\u0103toarele atribute primite de la MPass:</p> <ul> <li>NameIdentifier \u2013 ID-ul utilizatorului autentificat (IDNP-ul persoanei). Sursa: MPass</li> <li>FirstName \u2013 Prenumele utilizatorului autentificat. Sursa: MPass</li> <li>LastName \u2013 Numele de familie al utilizatorului autentificat. Sursa: MPass</li> <li>MobilePhone \u2013 Num\u0103rul de telefon al utilizatorului autentificat (dac\u0103 acesta \u0219i-a completat profilul \u00een MNotify). Sursa: MNotify</li> <li>EmailAddress \u2013 Adresa de email a utilizatorului autentificat (dac\u0103 aceasta este setat\u0103 \u00een MNotify). Sursa: MNotify</li> <li>AdministeredLegalEntity (Op\u021bional) \u2013 Lista entit\u0103\u021bilor juridice administrate de utilizator. Sursa: MPass</li> <li>OperatorCUPS (Op\u021bional) \u2013 Atribut specific pentru servicii prestate de un operator CUPS.</li> </ul> <p>Dac\u0103 este necesar, pot fi ad\u0103ugate \u0219i alte atribute, cum ar fi sexul, data na\u0219terii etc. Acestea trebuie configurate de c\u0103tre administratorul serviciului \u00een MPass.</p>"},{"location":"fod/configurare/mpass/#3-configurarea-certificatului-de-serviciu","title":"3. Configurarea Certificatului de Serviciu","text":""},{"location":"fod/configurare/mpass/#31-adaugarea-configuratiei-in-appsettingsjson","title":"3.1. Ad\u0103ugarea configura\u021biei \u00een <code>appsettings.json</code>","text":"<pre><code>\"Certificate\": {\n    \"Path\": \"Files/Certificates/nume-certificat-receptionat.pfx\",\n    \"Password\": \"parola\"\n}\n</code></pre>"},{"location":"fod/configurare/mpass/#32-injectarea-certificatului-in-aplicatie","title":"3.2. Injectarea certificatului \u00een aplica\u021bie","text":"<p>\u00cen <code>Program.cs</code>:</p> <pre><code>builder.Services.AddSystemCertificate(builder.Configuration.GetSection(\"Certificate\"));\n</code></pre>"},{"location":"fod/configurare/mpass/#4-configurarea-endpoint-ului-pentru-datele-utilizatorului","title":"4. Configurarea Endpoint-ului pentru Datele Utilizatorului","text":"<p>Endpoint-ul <code>/me</code> este utilizat pentru interogarea datelor utilizatorului autentificat.</p>"},{"location":"fod/configurare/mpass/#41-modificarea-middleware-urilor-si-endpoint-urilor","title":"4.1. Modificarea Middleware-urilor \u0219i Endpoint-urilor","text":"<p>\u00cen <code>Program.cs</code>:</p> <pre><code>app.UseAuthentication();\napp.UseAuthorization();\napp.UseRouting();\napp.UseEndpoints(endpoints =&gt;\n{\n    endpoints.MapMPassSaml(options =&gt;\n    {\n        // options.DefaultReturnUrl = \"${BaseRoute.Url}/cerere\";\n    });\n    app.MapRazorPages();\n    app.MapControllers();\n    app.MapFallbackToFile(\"index.html\");\n});\n</code></pre> <p>Dup\u0103 repornirea aplica\u021biei, o cerere c\u0103tre <code>/me</code> va returna HTTP 204 dac\u0103 utilizatorul nu este autentificat.</p>"},{"location":"fod/configurare/mpass/#5-autentificare-utilizand-mpass","title":"5. Autentificare utiliz\u00e2nd MPass","text":"<p>\u00cen <code>Program.cs</code>, ad\u0103ug\u0103m:</p> <pre><code>builder.Services.AddAuthentication(sharedOptions =&gt;\n{\n    sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n    sharedOptions.DefaultChallengeScheme = MPassSamlDefaults.AuthenticationScheme;\n})\n.AddCookie(options =&gt;\n{\n    options.Cookie.Name = \"auth\";\n    //options.Cookie.Path = BaseRoute.Url;\n    options.LoginPath = \"/account/login\";\n    options.LogoutPath = \"/account/logout\";\n    options.Cookie.SameSite = SameSiteMode.None;\n    options.Cookie.SecurePolicy = CookieSecurePolicy.Always;\n    options.ExpireTimeSpan = TimeSpan.FromMinutes(30);\n})\n.AddMPassSaml(builder.Configuration.GetSection(\"MPass\"), options =&gt;\n{\n    //options.SignedOutRedirectUri = \"${BaseRoute.Url}/cerere/GHID1\";\n});\n</code></pre>"},{"location":"fod/configurare/mpass/#51-configurarea-in-appsettingsjson","title":"5.1. Configurarea \u00een <code>appsettings.json</code>","text":"<pre><code>\"MPass\": {\n   \"SamlRequestIssuer\": \"ghid-fod.localhost.egov.md\",\n   \"IdentityProviderCertificatePath\": \"Files/Certificates/mpass.staging.egov.md.cer\",\n   \"SamlLoginDestination\": \"https://mpass.staging.egov.md/login/saml\",\n   \"SamlLogoutDestination\": \"https://mpass.staging.egov.md/logout/saml\",\n   \"ServiceRootUrl\": \"http://localhost:5113\"\n}\n</code></pre> <p>Prin ace\u0219ti pa\u0219i, aplica\u021bia FOD este configurat\u0103 pentru a permite autentificarea utilizatorilor prin MPass \u0219i interogarea datelor acestora.</p> <p>\u00cen acest moment, dac\u0103 aplica\u021bia va fi repornit\u0103 \u0219i vom analiza cererea c\u0103tre endpoint-ul <code>/me</code>, vom observa c\u0103 este returnat un rezultat cu codul HTTP 204, ceea ce semnific\u0103 un r\u0103spuns gol, adic\u0103 nu sunt date despre utilizator, respectiv nu este autentificat.</p>"},{"location":"fod/configurare/roluri%20implicite/","title":"Roluri \u0219i context implicite","text":""},{"location":"fod/configurare/roluri%20implicite/#roluri-si-contexte-implicite","title":"Roluri \u0219i contexte implicite","text":"<p>Aplica\u021bia FOD utilizeaz\u0103 un mecanism numit contextul utilizatorului. \u00cen momentul autentific\u0103rii, aplica\u021bia creeaz\u0103 automat o list\u0103 de contexte asociate utilizatorului.</p> <p>Implicit, se genereaz\u0103 urm\u0103toarele trei tipuri de contexte:</p> <ul> <li> <p>Contextul Persoanei Fizice   Atunci c\u00e2nd utilizatorul ac\u021bioneaz\u0103 \u00een nume propriu.</p> </li> <li> <p>Contextul Persoanei Juridice   Atunci c\u00e2nd utilizatorul ac\u021bioneaz\u0103 \u00een numele unei persoane juridice.</p> </li> <li> <p>Contextul Operatorului CUPS   Atunci c\u00e2nd utilizatorul, \u00een calitate de operator CUPS, ac\u021bioneaz\u0103 \u00een numele unei persoane fizice ter\u021be.</p> </li> </ul>"},{"location":"fod/database/","title":"Baza de Date FOD","text":""},{"location":"fod/database/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Sistemul FOD (Front Office Digital) utilizeaz\u0103 Entity Framework Core pentru gestionarea datelor. Baza de date este structurat\u0103 pentru a suporta procesarea cererilor digitale pentru serviciile guvernamentale din Moldova.</p>"},{"location":"fod/database/#arhitectura","title":"Arhitectura","text":""},{"location":"fod/database/#context-principal","title":"Context Principal","text":"<ul> <li>FodDbContext - Context-ul principal Entity Framework care gestioneaz\u0103 toate entit\u0103\u021bile</li> <li>IFodDbContext - Interfa\u021ba pentru dependency injection \u0219i testare</li> </ul>"},{"location":"fod/database/#entitate-de-baza","title":"Entitate de Baz\u0103","text":"<p>Toate entit\u0103\u021bile mo\u0219tenesc din BaseEntity care ofer\u0103 c\u00e2mpuri comune de audit: - <code>Id</code> (Guid) - Identificator unic - <code>CreateDate</code> - Data cre\u0103rii - <code>UpdateDate</code> - Data ultimei actualiz\u0103ri - <code>CreateUserId</code> - ID utilizator care a creat \u00eenregistrarea - <code>UpdateUserId</code> - ID utilizator care a actualizat ultima dat\u0103 - <code>CreateUserName</code> - Nume utilizator creator - <code>UpdateUserName</code> - Nume utilizator actualizator</p>"},{"location":"fod/database/#categorii-de-entitati","title":"Categorii de Entit\u0103\u021bi","text":""},{"location":"fod/database/#1-entitati-principale-de-cereri","title":"1. Entit\u0103\u021bi Principale de Cereri","text":"<ul> <li>FodRequest - Cererea principal\u0103 depus\u0103 de cet\u0103\u021bean</li> <li>FodServiceRequest - Cereri individuale de servicii \u00een cadrul unei cereri principale</li> <li>FodRequestType - Tipuri de cereri disponibile</li> <li>FodAdditionalRequest - Cereri adi\u021bionale</li> </ul>"},{"location":"fod/database/#2-entitati-de-servicii","title":"2. Entit\u0103\u021bi de Servicii","text":"<ul> <li>FodService - Serviciile disponibile \u00een sistem</li> <li>FodServiceProvider - Furnizorii de servicii</li> <li>FodServiceDocumentType - Tipuri de documente necesare per serviciu</li> </ul>"},{"location":"fod/database/#3-entitati-de-utilizatori-si-profile","title":"3. Entit\u0103\u021bi de Utilizatori \u0219i Profile","text":"<ul> <li>UserProfile - Profiluri de utilizatori</li> <li>FodUserProfileOrganization - Asocieri utilizator-organiza\u021bie</li> <li>FodUserProfileRole - Roluri utilizatori</li> </ul>"},{"location":"fod/database/#4-entitati-de-documente","title":"4. Entit\u0103\u021bi de Documente","text":"<ul> <li>File - Metadate fi\u0219iere</li> <li>FileContent - Con\u021binut fi\u0219iere</li> <li>SignableDocument - Documente ce pot fi semnate</li> <li>FodResponseDocument - Documente r\u0103spuns</li> </ul>"},{"location":"fod/database/#5-entitati-de-plati","title":"5. Entit\u0103\u021bi de Pl\u0103\u021bi","text":"<ul> <li>FodRequestPayment - Pl\u0103\u021bi pentru cereri</li> <li>FodAdditionalInvoice - Facturi adi\u021bionale</li> <li>ServiceRequestDiscount - Reduceri aplicate</li> </ul>"},{"location":"fod/database/#6-entitati-de-livrare","title":"6. Entit\u0103\u021bi de Livrare","text":"<ul> <li>ServiceRequestDelivery - Detalii livrare</li> <li>ServiceRequestDeliveryStatusLog - Istoric status livrare</li> <li>FodPickupLocation - Loca\u021bii de ridicare</li> </ul>"},{"location":"fod/database/#7-entitati-de-semnaturi","title":"7. Entit\u0103\u021bi de Semn\u0103turi","text":"<ul> <li>FodSignature - Semn\u0103turi digitale</li> <li>FodUserSignature - Semn\u0103turi utilizatori</li> <li>FodRequestJsonSignature - Semn\u0103turi JSON</li> </ul>"},{"location":"fod/database/#8-entitati-de-date-aditionale","title":"8. Entit\u0103\u021bi de Date Adi\u021bionale","text":"<ul> <li>FodAdditionalData - Date adi\u021bionale generice</li> <li>FodAdditionalDataTypeValue - Valori pentru tipuri de date</li> <li>JsonSchema - Scheme JSON pentru validare</li> </ul>"},{"location":"fod/database/#9-entitati-specializate","title":"9. Entit\u0103\u021bi Specializate","text":"<ul> <li>FodApostilationDetails - Detalii apostilare</li> <li>FodNotificationType - Tipuri de notific\u0103ri</li> <li>WorkingProgram - Program de lucru</li> <li>ExceptionWorkingProgram - Excep\u021bii program lucru</li> </ul>"},{"location":"fod/database/#diagrama-relatiilor-principale","title":"Diagrama Rela\u021biilor Principale","text":"<pre><code>FodRequest (Cerere Principal\u0103)\n    \u2502\n    \u251c\u2500\u2500 FodServiceRequest (Cereri de Servicii)\n    \u2502   \u251c\u2500\u2500 FodService (Serviciu)\n    \u2502   \u251c\u2500\u2500 FodServiceProvider (Furnizor)\n    \u2502   \u2514\u2500\u2500 FodResponseDocument (Documente R\u0103spuns)\n    \u2502\n    \u251c\u2500\u2500 FodRequestPayment (Pl\u0103\u021bi)\n    \u2502   \u2514\u2500\u2500 FodAdditionalInvoice (Facturi)\n    \u2502\n    \u251c\u2500\u2500 ServiceRequestDelivery (Livrare)\n    \u2502   \u2514\u2500\u2500 ServiceRequestDeliveryStatusLog (Istoric)\n    \u2502\n    \u2514\u2500\u2500 FodRequestFile (Fi\u0219iere Ata\u0219ate)\n        \u2514\u2500\u2500 File (Metadate)\n            \u2514\u2500\u2500 FileContent (Con\u021binut)\n</code></pre>"},{"location":"fod/database/#enumerari-importante","title":"Enumer\u0103ri Importante","text":""},{"location":"fod/database/#status-uri-cereri","title":"Status-uri Cereri","text":"<ul> <li>FodRequestStatus - Status-uri pentru cererea principal\u0103</li> <li>FodServiceRequestStatus - Status-uri pentru cereri de servicii</li> <li>PaymentStatus - Status-uri pl\u0103\u021bi</li> <li>DeliveryStatus - Status-uri livrare</li> </ul>"},{"location":"fod/database/#tipuri","title":"Tipuri","text":"<ul> <li>PersonType - Tip persoan\u0103 (fizic\u0103/juridic\u0103)</li> <li>OnBehalfOnEnum - \u00cen numele cui se depune cererea</li> <li>AdditionalDataType - Tipuri de date adi\u021bionale</li> <li>DocumentTypeEnum - Tipuri de documente</li> </ul>"},{"location":"fod/database/#conventii-si-bune-practici","title":"Conven\u021bii \u0219i Bune Practici","text":"<ol> <li>Naming Convention</li> <li>Entit\u0103\u021bile \u00eencep cu prefix <code>Fod</code> pentru entit\u0103\u021bi specifice FOD</li> <li>Propriet\u0103\u021bile folosesc PascalCase</li> <li> <p>Foreign Key-urile se termin\u0103 cu <code>Id</code></p> </li> <li> <p>Rela\u021bii</p> </li> <li>Folose\u0219te atribute <code>[ForeignKey]</code> pentru rela\u021bii explicite</li> <li>Colec\u021biile folosesc <code>IList</code> sau <code>ICollection</code></li> <li> <p>Navigare bidirec\u021bional\u0103 unde este necesar</p> </li> <li> <p>Audit Trail</p> </li> <li>Toate entit\u0103\u021bile mo\u0219tenesc din <code>BaseEntity</code></li> <li> <p>C\u00e2mpurile de audit sunt populate automat</p> </li> <li> <p>Validare</p> </li> <li>Validarea se face la nivel de aplica\u021bie</li> <li>Constr\u00e2ngerile de baz\u0103 sunt definite \u00een entit\u0103\u021bi</li> </ol>"},{"location":"fod/database/#migratii","title":"Migra\u021bii","text":"<p>Migra\u021biile Entity Framework nu sunt stocate \u00een repository. Pentru actualiz\u0103ri de schem\u0103: 1. Genereaz\u0103 migr\u0103ri local folosind <code>dotnet ef migrations add</code> 2. Aplic\u0103 migr\u0103rile \u00een mediile de deployment 3. Documenteaz\u0103 schimb\u0103rile majore de schem\u0103</p>"},{"location":"fod/database/#performanta","title":"Performan\u021b\u0103","text":"<p>Pentru optimizare: - Folose\u0219te <code>Include()</code> pentru eager loading - Implementeaz\u0103 paginare pentru liste mari - Folose\u0219te proiec\u021bii pentru query-uri read-only - Indexeaz\u0103 c\u00e2mpurile folosite frecvent \u00een filtr\u0103ri</p>"},{"location":"fod/database/#securitate","title":"Securitate","text":"<ul> <li>Nu expune direct entit\u0103\u021bile \u00een API-uri</li> <li>Folose\u0219te DTO-uri pentru transfer de date</li> <li>Implementeaz\u0103 row-level security unde este necesar</li> <li>Auditeaz\u0103 toate opera\u021biile CRUD</li> </ul>"},{"location":"fod/database/entities/BaseEntity/","title":"BaseEntity","text":""},{"location":"fod/database/entities/BaseEntity/#descriere","title":"Descriere","text":"<p>Clasa de baz\u0103 pentru majoritatea entit\u0103\u021bilor din sistemul FOD. Ofer\u0103 c\u00e2mpuri comune de audit \u0219i tracking pentru toate entit\u0103\u021bile care mo\u0219tenesc din ea, asigur\u00e2nd o abordare consistent\u0103 pentru urm\u0103rirea modific\u0103rilor \u00een sistem.</p>"},{"location":"fod/database/entities/BaseEntity/#context-de-business","title":"Context de Business","text":"<p>BaseEntity implementeaz\u0103 cerin\u021bele fundamentale de audit \u0219i conformitate pentru sistemele guvernamentale: - Trasabilitate Complet\u0103: Conform cerin\u021belor legale pentru sistemele publice, toate modific\u0103rile trebuie s\u0103 fie trasabile - Responsabilitate: Identificarea clar\u0103 a persoanelor responsabile pentru fiecare opera\u021biune - Conformitate GDPR: Suport\u0103 cerin\u021bele de audit pentru protec\u021bia datelor personale - Integritate Referen\u021bial\u0103: Asigur\u0103 c\u0103 toate entit\u0103\u021bile au identificatori unici globali</p>"},{"location":"fod/database/entities/BaseEntity/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic universal pentru entitate Primary Key CreateDate DateTime? Data \u0219i ora c\u00e2nd a fost creat\u0103 \u00eenregistrarea - UpdateDate DateTime? Data \u0219i ora ultimei actualiz\u0103ri a \u00eenregistr\u0103rii - CreateUserId string? ID-ul utilizatorului care a creat \u00eenregistrarea - UpdateUserId string? ID-ul utilizatorului care a f\u0103cut ultima actualizare - CreateUserName string? Numele utilizatorului care a creat \u00eenregistrarea - UpdateUserName string? Numele utilizatorului care a f\u0103cut ultima actualizare -"},{"location":"fod/database/entities/BaseEntity/#utilizare","title":"Utilizare","text":"<p>BaseEntity este mo\u0219tenit\u0103 de majoritatea entit\u0103\u021bilor care necesit\u0103 audit trail: - FodRequest - FodServiceProvider - File - FileContent - \u0218i multe altele</p>"},{"location":"fod/database/entities/BaseEntity/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/BaseEntity/#mostenire-in-entitati","title":"Mo\u0219tenire \u00een Entit\u0103\u021bi","text":"<pre><code>public class FodRequest : BaseEntity\n{\n    // Propriet\u0103\u021bile specifice ale cererii\n    public string RequestNumber { get; set; }\n    // ...alte propriet\u0103\u021bi\n}\n</code></pre>"},{"location":"fod/database/entities/BaseEntity/#populare-automata-a-campurilor-de-audit","title":"Populare Automat\u0103 a C\u00e2mpurilor de Audit","text":"<pre><code>// \u00cen DbContext sau Repository\npublic override async Task&lt;int&gt; SaveChangesAsync()\n{\n    var entries = ChangeTracker.Entries&lt;BaseEntity&gt;();\n    var currentUserId = GetCurrentUserId();\n    var currentUserName = GetCurrentUserName();\n    var now = DateTime.UtcNow;\n\n    foreach (var entry in entries)\n    {\n        if (entry.State == EntityState.Added)\n        {\n            entry.Entity.CreateDate = now;\n            entry.Entity.CreateUserId = currentUserId;\n            entry.Entity.CreateUserName = currentUserName;\n        }\n        else if (entry.State == EntityState.Modified)\n        {\n            entry.Entity.UpdateDate = now;\n            entry.Entity.UpdateUserId = currentUserId;\n            entry.Entity.UpdateUserName = currentUserName;\n        }\n    }\n\n    return await base.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/BaseEntity/#query-cu-informatii-de-audit","title":"Query cu Informa\u021bii de Audit","text":"<pre><code>var recentlyModified = await context.FodRequests\n    .Where(r =&gt; r.UpdateDate &gt;= DateTime.UtcNow.AddDays(-7))\n    .OrderByDescending(r =&gt; r.UpdateDate)\n    .Select(r =&gt; new \n    {\n        r.RequestNumber,\n        r.UpdateDate,\n        r.UpdateUserName\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/BaseEntity/#interogare-istoricul-complet-de-audit","title":"Interogare Istoricul Complet de Audit","text":"<pre><code>public async Task&lt;AuditHistory&gt; GetAuditHistoryAsync(Guid entityId)\n{\n    var entity = await context.FodRequests\n        .AsNoTracking()\n        .FirstOrDefaultAsync(r =&gt; r.Id == entityId);\n\n    if (entity == null) return null;\n\n    return new AuditHistory\n    {\n        EntityId = entity.Id,\n        CreatedBy = $\"{entity.CreateUserName} ({entity.CreateUserId})\",\n        CreatedOn = entity.CreateDate,\n        LastModifiedBy = $\"{entity.UpdateUserName} ({entity.UpdateUserId})\",\n        LastModifiedOn = entity.UpdateDate,\n        // Pentru istoric complet, folosi\u021bi Audit.NET sau EF Core Audit\n    };\n}\n</code></pre>"},{"location":"fod/database/entities/BaseEntity/#gestiunea-erorilor-in-audit","title":"Gestiunea Erorilor \u00een Audit","text":"<pre><code>public override async Task&lt;int&gt; SaveChangesAsync()\n{\n    try\n    {\n        var entries = ChangeTracker.Entries&lt;BaseEntity&gt;();\n        var currentUserId = GetCurrentUserId();\n\n        if (string.IsNullOrEmpty(currentUserId))\n        {\n            throw new SecurityException(\"Utilizator neautentificat nu poate efectua modific\u0103ri\");\n        }\n\n        // Populare audit fields...\n\n        return await base.SaveChangesAsync();\n    }\n    catch (DbUpdateException ex)\n    {\n        _logger.LogError(ex, \"Eroare la salvarea modific\u0103rilor cu audit trail\");\n        throw new DataException(\"Nu s-au putut salva modific\u0103rile. Verifica\u021bi jurnalul pentru detalii.\", ex);\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/BaseEntity/#note","title":"Note","text":"<ol> <li>Audit Trail Automat:</li> <li>Toate entit\u0103\u021bile care mo\u0219tenesc BaseEntity beneficiaz\u0103 automat de audit trail</li> <li>C\u00e2mpurile sunt populate automat la SaveChanges</li> <li>P\u0103streaz\u0103 istoricul complet al modific\u0103rilor</li> <li> <p>Pentru istoric detaliat, considera\u021bi implementarea Audit.NET sau EF Core Audit</p> </li> <li> <p>Identificare Unic\u0103:</p> </li> <li>Folose\u0219te GUID pentru a asigura unicitate global\u0103</li> <li>Evit\u0103 conflicte \u00een scenarii de sincronizare sau import/export</li> <li> <p>Faciliteaz\u0103 integrarea cu sisteme externe</p> </li> <li> <p>Best Practices:</p> </li> <li>Nu modifica\u021bi manual c\u00e2mpurile de audit</li> <li>Folosi\u021bi interceptori EF Core pentru populare automat\u0103</li> <li>Considera\u021bi timezone-ul pentru datele de audit (UTC recomandat)</li> <li> <p>Implementa\u021bi soft delete pentru p\u0103strarea istoricului complet</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Indexa\u021bi UpdateDate pentru query-uri pe modific\u0103ri recente</li> <li>Considera\u021bi arhivarea pentru entit\u0103\u021bi cu multe modific\u0103ri</li> <li>Folosi\u021bi proiec\u021bii pentru a exclude c\u00e2mpurile de audit c\u00e2nd nu sunt necesare</li> <li> <p>Recomand\u0103ri de indexare:      <pre><code>CREATE INDEX IX_BaseEntity_UpdateDate ON [TableName] (UpdateDate DESC);\nCREATE INDEX IX_BaseEntity_CreateUserId ON [TableName] (CreateUserId);\n</code></pre></p> </li> <li> <p>Securitate:</p> </li> <li>C\u00e2mpurile de audit nu trebuie expuse \u00een API-uri publice pentru modificare</li> <li>Valida\u021bi c\u0103 UserId \u0219i UserName corespund utilizatorului autentificat</li> <li>P\u0103stra\u021bi audit trail pentru conformitate \u0219i securitate</li> <li> <p>Implementa\u021bi row-level security bazat pe CreateUserId pentru date sensibile</p> </li> <li> <p>Conformitate \u0219i Reglement\u0103ri:</p> </li> <li>Audit trail-ul satisface cerin\u021bele Legii 133/2011 privind protec\u021bia datelor cu caracter personal</li> <li>Suport\u0103 cerin\u021bele de trasabilitate pentru HG 128/2024 privind serviciile publice electronice</li> <li> <p>Permite raportarea conform\u0103 cu standardele de audit guvernamental</p> </li> <li> <p>Migrare \u0219i Evolu\u021bie:</p> </li> <li>La ad\u0103ugarea BaseEntity la entit\u0103\u021bi existente, popula\u021bi c\u00e2mpurile retroactiv</li> <li>P\u0103stra\u021bi compatibilitatea cu sistemele legacy prin nullable fields</li> <li>Documenta\u021bi orice schimb\u0103ri \u00een politica de audit</li> </ol>"},{"location":"fod/database/entities/ExceptionWorkingProgram/","title":"ExceptionWorkingProgram","text":""},{"location":"fod/database/entities/ExceptionWorkingProgram/#descriere","title":"Descriere","text":"<p>Entitatea <code>ExceptionWorkingProgram</code> reprezint\u0103 excep\u021biile de la programul de lucru standard, definind zile speciale cu orar diferit sau zile libere. Aceasta permite configurarea flexibil\u0103 a orarului pentru s\u0103rb\u0103tori, evenimente speciale sau alte situa\u021bii excep\u021bionale.</p>"},{"location":"fod/database/entities/ExceptionWorkingProgram/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>Date</code> <code>DateTime</code> Data pentru care se aplic\u0103 excep\u021bia <code>OpenHours</code> <code>int?</code> Ora de deschidere (format 24h, nullable pentru zile \u00eenchise) <code>OpenMinutes</code> <code>int?</code> Minutele pentru ora de deschidere <code>CloseHours</code> <code>int?</code> Ora de \u00eenchidere (format 24h) <code>CloseMinutes</code> <code>int?</code> Minutele pentru ora de \u00eenchidere"},{"location":"fod/database/entities/ExceptionWorkingProgram/#relatii","title":"Rela\u021bii","text":"<ul> <li>WorkingProgram - Program de lucru principal pentru care se define\u0219te excep\u021bia</li> <li>Department - Departamentul care aplic\u0103 aceast\u0103 excep\u021bie de orar</li> </ul>"},{"location":"fod/database/entities/ExceptionWorkingProgram/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/ExceptionWorkingProgram/#exemplu-de-definire-a-unei-zile-libere","title":"Exemplu de definire a unei zile libere","text":"<pre><code>var exceptie = new ExceptionWorkingProgram\n{\n    Date = new DateTime(2024, 12, 25), // Cr\u0103ciun\n    OpenHours = null,    // \u00cenchis\n    OpenMinutes = null,\n    CloseHours = null,\n    CloseMinutes = null\n};\n</code></pre>"},{"location":"fod/database/entities/ExceptionWorkingProgram/#exemplu-de-definire-a-unui-orar-special","title":"Exemplu de definire a unui orar special","text":"<pre><code>var exceptie = new ExceptionWorkingProgram\n{\n    Date = new DateTime(2024, 12, 24), // Ajun de Cr\u0103ciun\n    OpenHours = 9,\n    OpenMinutes = 0,\n    CloseHours = 14,     // \u00cenchidere devreme\n    CloseMinutes = 0\n};\n</code></pre>"},{"location":"fod/database/entities/ExceptionWorkingProgram/#note-importante","title":"Note importante","text":"<ul> <li>Valorile <code>null</code> pentru orele de deschidere indic\u0103 o zi liber\u0103</li> <li>Excep\u021biile au prioritate fa\u021b\u0103 de programul de lucru standard</li> <li>Este recomandat s\u0103 se verifice existen\u021ba excep\u021biilor \u00eenainte de afi\u0219area orarului standard</li> <li>Data excep\u021biei trebuie s\u0103 fie unic\u0103 pentru fiecare program de lucru</li> </ul>"},{"location":"fod/database/entities/File/","title":"File","text":""},{"location":"fod/database/entities/File/#descriere","title":"Descriere","text":"<p>Entitate care stocheaz\u0103 metadatele fi\u0219ierelor \u00eenc\u0103rcate \u00een sistemul FOD. Separ\u0103 informa\u021biile despre fi\u0219ier (nume, tip, etc.) de con\u021binutul efectiv, permi\u021b\u00e2nd o gestionare eficient\u0103 a documentelor ata\u0219ate la cereri \u0219i r\u0103spunsuri.</p>"},{"location":"fod/database/entities/File/#context-de-business","title":"Context de Business","text":"<ul> <li>Documenta\u021bie Legal\u0103: Stocheaz\u0103 documentele justificative necesare pentru serviciile publice electronice</li> <li>Optimizare Performan\u021b\u0103: Separarea metadatelor de con\u021binut permite \u00eenc\u0103rcarea rapid\u0103 a listelor de documente</li> <li>Integrare RSSP: Sincronizare cu Registrul de Stat al Serviciilor Publice pentru documentele oficiale</li> <li>Conformitate GDPR: Suport\u0103 \u0219tergerea selectiv\u0103 \u0219i controlul accesului la documente cu date personale</li> </ul>"},{"location":"fod/database/entities/File/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Valid\u0103ri Id Guid Identificator unic al fi\u0219ierului Primary Key, mo\u0219tenit din BaseEntity - File_Name string Numele original al fi\u0219ierului Obligatoriu Max 255 caractere, caractere valide pentru sistem de fi\u0219iere File_Type string Tipul MIME al fi\u0219ierului (ex: application/pdf) Obligatoriu Trebuie s\u0103 fie din lista tipurilor acceptate FileContentId Guid? Referin\u021b\u0103 c\u0103tre con\u021binutul efectiv al fi\u0219ierului Foreign Key c\u0103tre FileContent - RSSPS_Title string? Titlul documentului \u00een Registrul de Stat al Serviciilor Publice - Max 500 caractere CreateDate DateTime? Data \u00eenc\u0103rc\u0103rii fi\u0219ierului Mo\u0219tenit din BaseEntity - UpdateDate DateTime? Data ultimei modific\u0103ri Mo\u0219tenit din BaseEntity - CreateUserId string? ID-ul utilizatorului care a \u00eenc\u0103rcat fi\u0219ierul Mo\u0219tenit din BaseEntity - UpdateUserId string? ID-ul utilizatorului care a modificat ultima dat\u0103 Mo\u0219tenit din BaseEntity - CreateUserName string? Numele utilizatorului care a \u00eenc\u0103rcat Mo\u0219tenit din BaseEntity - UpdateUserName string? Numele utilizatorului care a modificat Mo\u0219tenit din BaseEntity -"},{"location":"fod/database/entities/File/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/File/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>FileContent (<code>FileContent</code>) - Con\u021binutul efectiv al fi\u0219ierului prin FileContentId</li> </ul>"},{"location":"fod/database/entities/File/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>FodRequestFile - Asocierea cu cererile principale</li> <li>FodServiceRequestFile - Asocierea cu cererile de servicii</li> <li>FodServiceRequestResponseData - Fi\u0219iere \u00een r\u0103spunsuri</li> <li>FodResponseDocument - Documente generate ca r\u0103spuns</li> </ul>"},{"location":"fod/database/entities/File/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/File/#incarcare-fisier-nou","title":"\u00cenc\u0103rcare Fi\u0219ier Nou","text":"<pre><code>// Creare con\u021binut fi\u0219ier\nvar fileContent = new FileContent\n{\n    File_Content = fileBytes // byte array cu con\u021binutul\n};\n\n// Creare metadate fi\u0219ier\nvar file = new File\n{\n    File_Name = \"cerere_identitate.pdf\",\n    File_Type = \"application/pdf\",\n    FileContentId = fileContent.Id,\n    RSSPS_Title = \"Cerere eliberare act de identitate\"\n};\n\ncontext.FileContents.Add(fileContent);\ncontext.Files.Add(file);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/File/#atasare-fisier-la-cerere","title":"Ata\u0219are Fi\u0219ier la Cerere","text":"<pre><code>var requestFile = new FodRequestFile\n{\n    RequestId = fodRequestId,\n    FileId = file.Id,\n    DocumentTypeId = documentTypeId\n};\n\ncontext.FodRequestFiles.Add(requestFile);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/File/#descarcare-fisier","title":"Desc\u0103rcare Fi\u0219ier","text":"<pre><code>var fileData = await context.Files\n    .Include(f =&gt; f.FileContent)\n    .Where(f =&gt; f.Id == fileId)\n    .Select(f =&gt; new \n    {\n        FileName = f.File_Name,\n        ContentType = f.File_Type,\n        Content = f.FileContent.File_Content\n    })\n    .FirstOrDefaultAsync();\n\n// Returnare fi\u0219ier \u00een controller\nreturn File(fileData.Content, fileData.ContentType, fileData.FileName);\n</code></pre>"},{"location":"fod/database/entities/File/#listare-fisiere-pentru-cerere","title":"Listare Fi\u0219iere pentru Cerere","text":"<pre><code>var requestFiles = await context.FodRequestFiles\n    .Include(rf =&gt; rf.File)\n    .Include(rf =&gt; rf.DocumentType)\n    .Where(rf =&gt; rf.RequestId == requestId)\n    .Select(rf =&gt; new \n    {\n        FileId = rf.File.Id,\n        FileName = rf.File.File_Name,\n        FileType = rf.File.File_Type,\n        DocumentType = rf.DocumentType.Name,\n        UploadDate = rf.File.CreateDate,\n        UploadedBy = rf.File.CreateUserName\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/File/#validare-si-upload-securizat","title":"Validare \u0219i Upload Securizat","text":"<pre><code>public async Task&lt;File&gt; UploadFileAsync(IFormFile formFile, string userId)\n{\n    // Valid\u0103ri de securitate\n    var allowedTypes = new[] { \"application/pdf\", \"image/jpeg\", \"image/png\" };\n    if (!allowedTypes.Contains(formFile.ContentType))\n    {\n        throw new ValidationException($\"Tipul de fi\u0219ier {formFile.ContentType} nu este permis\");\n    }\n\n    if (formFile.Length &gt; 10 * 1024 * 1024) // 10MB\n    {\n        throw new ValidationException(\"Fi\u0219ierul dep\u0103\u0219e\u0219te limita de 10MB\");\n    }\n\n    // Validare nume fi\u0219ier\n    var fileName = Path.GetFileNameWithoutExtension(formFile.FileName);\n    var fileExtension = Path.GetExtension(formFile.FileName);\n    var safeFileName = $\"{Regex.Replace(fileName, @\"[^\\w\\d-]\", \"_\")}{fileExtension}\";\n\n    // Citire con\u021binut\n    using var memoryStream = new MemoryStream();\n    await formFile.CopyToAsync(memoryStream);\n\n    // Scanare antivirus (exemplu)\n    if (!await _antivirusService.ScanFileAsync(memoryStream.ToArray()))\n    {\n        throw new SecurityException(\"Fi\u0219ierul nu a trecut verificarea de securitate\");\n    }\n\n    // Salvare \u00een baza de date\n    var fileContent = new FileContent { File_Content = memoryStream.ToArray() };\n    var file = new File\n    {\n        File_Name = safeFileName,\n        File_Type = formFile.ContentType,\n        FileContentId = fileContent.Id\n    };\n\n    context.FileContents.Add(fileContent);\n    context.Files.Add(file);\n    await context.SaveChangesAsync();\n\n    return file;\n}\n</code></pre>"},{"location":"fod/database/entities/File/#stergere-conforma-gdpr","title":"\u0218tergere Conform\u0103 GDPR","text":"<pre><code>public async Task DeleteFileWithGDPRAsync(Guid fileId, string reason)\n{\n    var file = await context.Files\n        .Include(f =&gt; f.FileContent)\n        .FirstOrDefaultAsync(f =&gt; f.Id == fileId);\n\n    if (file != null)\n    {\n        // Audit pentru GDPR\n        _logger.LogInformation(\n            \"GDPR Delete: FileId={FileId}, FileName={FileName}, Reason={Reason}, DeletedBy={User}\",\n            fileId, file.File_Name, reason, _currentUser.Id);\n\n        // \u0218tergere con\u021binut\n        if (file.FileContent != null)\n        {\n            context.FileContents.Remove(file.FileContent);\n        }\n\n        // \u0218tergere metadate\n        context.Files.Remove(file);\n\n        await context.SaveChangesAsync();\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/File/#note","title":"Note","text":"<ol> <li>Separarea Metadate/Con\u021binut:</li> <li>Design pattern pentru optimizare performan\u021b\u0103</li> <li>Permite \u00eenc\u0103rcarea metadatelor f\u0103r\u0103 con\u021binut</li> <li> <p>Reduce memoria pentru list\u0103ri</p> </li> <li> <p>Tipuri de Fi\u0219iere Suportate:</p> </li> <li>PDF pentru documente oficiale</li> <li>JPEG/PNG pentru imagini (fotografii, copii acte)</li> <li>DOCX/DOC pentru template-uri editabile</li> <li> <p>XML/JSON pentru date structurate</p> </li> <li> <p>Valid\u0103ri Recomandate:</p> </li> <li>Verificare tip MIME vs. extensie fi\u0219ier</li> <li>Limitare dimensiune fi\u0219ier</li> <li>Scanare antivirus \u00eenainte de stocare</li> <li> <p>Validare format pentru documente oficiale</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Nu \u00eenc\u0103rca\u021bi FileContent pentru list\u0103ri</li> <li>Folosi\u021bi streaming pentru fi\u0219iere mari</li> <li>Considera\u021bi stocare extern\u0103 (blob storage) pentru scalabilitate</li> <li> <p>Implementa\u021bi cache pentru fi\u0219iere accesate frecvent</p> </li> <li> <p>Securitate:</p> </li> <li>Valida\u021bi permisiuni \u00eenainte de download</li> <li>Nu expune\u021bi path-uri reale \u00een API</li> <li>Implementa\u021bi rate limiting pentru download</li> <li> <p>Logga\u021bi toate acces\u0103rile pentru audit</p> </li> <li> <p>RSSPS Integration:</p> </li> <li>RSSPS_Title folosit pentru sincronizare cu Registrul de Stat</li> <li>Permite mapping \u00eentre documentele FOD \u0219i cele din registrul na\u021bional</li> <li> <p>Faciliteaz\u0103 schimbul de documente \u00eentre institu\u021bii publice</p> </li> <li> <p>Tipuri MIME Acceptate:    <pre><code>public static class AllowedFileTypes\n{\n    public static readonly Dictionary&lt;string, string[]&gt; MimeTypes = new()\n    {\n        [\"application/pdf\"] = new[] { \".pdf\" },\n        [\"image/jpeg\"] = new[] { \".jpg\", \".jpeg\" },\n        [\"image/png\"] = new[] { \".png\" },\n        [\"application/msword\"] = new[] { \".doc\" },\n        [\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"] = new[] { \".docx\" },\n        [\"application/xml\"] = new[] { \".xml\" },\n        [\"application/json\"] = new[] { \".json\" }\n    };\n}\n</code></pre></p> </li> <li> <p>Strategii de Stocare:</p> </li> <li>Sub 1MB: Stocare direct\u0103 \u00een baza de date</li> <li>1-10MB: Considera\u021bi compresie \u00eenainte de stocare</li> <li>Peste 10MB: Recomand\u0103m Azure Blob Storage sau similar</li> <li> <p>Documente temporare: Implementa\u021bi cleanup automat dup\u0103 24 ore</p> </li> <li> <p>Indexare Recomandat\u0103:    <pre><code>CREATE INDEX IX_File_CreateDate ON Files (CreateDate DESC);\nCREATE INDEX IX_File_FileType ON Files (File_Type);\nCREATE INDEX IX_File_RSSPS_Title ON Files (RSSPS_Title) WHERE RSSPS_Title IS NOT NULL;\n</code></pre></p> </li> </ol>"},{"location":"fod/database/entities/FileContent/","title":"FileContent","text":""},{"location":"fod/database/entities/FileContent/#descriere","title":"Descriere","text":"<p>Entitate care stocheaz\u0103 con\u021binutul efectiv (binary) al fi\u0219ierelor \u00een sistemul FOD. Separat\u0103 de metadatele fi\u0219ierului pentru optimizarea performan\u021bei \u0219i pentru a permite \u00eenc\u0103rcarea informa\u021biilor despre fi\u0219iere f\u0103r\u0103 a \u00eenc\u0103rca con\u021binutul lor \u00een memorie.</p>"},{"location":"fod/database/entities/FileContent/#context-de-business","title":"Context de Business","text":"<ul> <li>Optimizare Resurse: Separarea permite listarea rapid\u0103 a documentelor f\u0103r\u0103 \u00eenc\u0103rcarea con\u021binutului</li> <li>Scalabilitate: Design pregatit pentru migrare c\u0103tre solu\u021bii de stocare extern\u0103 (blob storage)</li> <li>Securitate: Permite aplicarea diferit\u0103 a politicilor de securitate pentru metadate vs. con\u021binut</li> <li>Performan\u021b\u0103: Reduce semnificativ memoria utilizat\u0103 pentru opera\u021biuni de listare \u0219i c\u0103utare</li> </ul>"},{"location":"fod/database/entities/FileContent/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Consider\u0103ri Tehnice Id Guid Identificator unic al con\u021binutului Primary Key, mo\u0219tenit din BaseEntity - File_Content byte[] Con\u021binutul binar al fi\u0219ierului Obligatoriu Max 2GB (limita varbinary(max)), recomandare: max 50MB CreateDate DateTime? Data \u00eenc\u0103rc\u0103rii con\u021binutului Mo\u0219tenit din BaseEntity Folosit pentru politici de reten\u021bie UpdateDate DateTime? Data ultimei modific\u0103ri Mo\u0219tenit din BaseEntity - CreateUserId string? ID-ul utilizatorului care a \u00eenc\u0103rcat Mo\u0219tenit din BaseEntity - UpdateUserId string? ID-ul utilizatorului care a modificat Mo\u0219tenit din BaseEntity - CreateUserName string? Numele utilizatorului care a \u00eenc\u0103rcat Mo\u0219tenit din BaseEntity - UpdateUserName string? Numele utilizatorului care a modificat Mo\u0219tenit din BaseEntity -"},{"location":"fod/database/entities/FileContent/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FileContent/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>File - Metadatele fi\u0219ierelor care referen\u021biaz\u0103 acest con\u021binut</li> </ul>"},{"location":"fod/database/entities/FileContent/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FileContent/#incarcare-fisier-cu-continut","title":"\u00cenc\u0103rcare Fi\u0219ier cu Con\u021binut","text":"<pre><code>using (var stream = uploadedFile.OpenReadStream())\n{\n    var buffer = new byte[stream.Length];\n    await stream.ReadAsync(buffer, 0, buffer.Length);\n\n    var fileContent = new FileContent\n    {\n        File_Content = buffer\n    };\n\n    var file = new File\n    {\n        File_Name = uploadedFile.FileName,\n        File_Type = uploadedFile.ContentType,\n        FileContentId = fileContent.Id\n    };\n\n    context.FileContents.Add(fileContent);\n    context.Files.Add(file);\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FileContent/#streaming-pentru-fisiere-mari","title":"Streaming pentru Fi\u0219iere Mari","text":"<pre><code>// Pentru fi\u0219iere mari, folosi\u021bi streaming \u00een loc de \u00eenc\u0103rcarea complet\u0103 \u00een memorie\npublic async Task&lt;IActionResult&gt; DownloadLargeFile(Guid fileId)\n{\n    var file = await context.Files\n        .Where(f =&gt; f.Id == fileId)\n        .Select(f =&gt; new { f.File_Name, f.File_Type, f.FileContentId })\n        .FirstOrDefaultAsync();\n\n    if (file == null) return NotFound();\n\n    // Stream direct din baza de date\n    var stream = new FileContentStream(context, file.FileContentId.Value);\n\n    return File(stream, file.File_Type, file.File_Name);\n}\n</code></pre>"},{"location":"fod/database/entities/FileContent/#stergere-continut-orfelinat","title":"\u0218tergere Con\u021binut Orfelinat","text":"<pre><code>// G\u0103se\u0219te con\u021binut f\u0103r\u0103 referin\u021be \u00een File\nvar orphanedContent = await context.FileContents\n    .Where(fc =&gt; !context.Files.Any(f =&gt; f.FileContentId == fc.Id))\n    .ToListAsync();\n\ncontext.FileContents.RemoveRange(orphanedContent);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FileContent/#compresie-continut","title":"Compresie Con\u021binut","text":"<pre><code>using System.IO.Compression;\n\n// Compresie \u00eenainte de stocare\nbyte[] CompressContent(byte[] content)\n{\n    using (var output = new MemoryStream())\n    {\n        using (var gzip = new GZipStream(output, CompressionLevel.Optimal))\n        {\n            gzip.Write(content, 0, content.Length);\n        }\n        return output.ToArray();\n    }\n}\n\n// Decompresie la citire\nbyte[] DecompressContent(byte[] compressedContent)\n{\n    using (var input = new MemoryStream(compressedContent))\n    using (var gzip = new GZipStream(input, CompressionMode.Decompress))\n    using (var output = new MemoryStream())\n    {\n        gzip.CopyTo(output);\n        return output.ToArray();\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/FileContent/#verificare-integritate-cu-hash","title":"Verificare Integritate cu Hash","text":"<pre><code>using System.Security.Cryptography;\n\npublic class SecureFileContent : FileContent\n{\n    public string ContentHash { get; set; }\n\n    public void SetContentWithHash(byte[] content)\n    {\n        File_Content = content;\n\n        // Calculare SHA256 hash\n        using (var sha256 = SHA256.Create())\n        {\n            var hashBytes = sha256.ComputeHash(content);\n            ContentHash = Convert.ToBase64String(hashBytes);\n        }\n    }\n\n    public bool VerifyIntegrity()\n    {\n        using (var sha256 = SHA256.Create())\n        {\n            var currentHash = Convert.ToBase64String(\n                sha256.ComputeHash(File_Content));\n            return currentHash == ContentHash;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/FileContent/#criptare-continut-sensibil","title":"Criptare Con\u021binut Sensibil","text":"<pre><code>public class EncryptedFileContent\n{\n    private readonly IDataProtector _protector;\n\n    public EncryptedFileContent(IDataProtectionProvider provider)\n    {\n        _protector = provider.CreateProtector(\"FileContent.Encryption\");\n    }\n\n    public FileContent EncryptContent(byte[] plainContent)\n    {\n        var encryptedBytes = _protector.Protect(plainContent);\n        return new FileContent { File_Content = encryptedBytes };\n    }\n\n    public byte[] DecryptContent(FileContent encrypted)\n    {\n        return _protector.Unprotect(encrypted.File_Content);\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/FileContent/#note","title":"Note","text":"<ol> <li>Design Pattern - Separare Metadate/Con\u021binut:</li> <li>Permite query-uri rapide pe metadate f\u0103r\u0103 \u00eenc\u0103rcarea con\u021binutului</li> <li>Reduce utilizarea memoriei pentru opera\u021bii de listare</li> <li> <p>Faciliteaz\u0103 caching-ul separat pentru metadate \u0219i con\u021binut</p> </li> <li> <p>Considera\u021bii de Stocare:</p> </li> <li>Pentru fi\u0219iere &gt; 1MB considera\u021bi stocare extern\u0103 (Azure Blob, AWS S3)</li> <li>Implementa\u021bi compresie pentru tipuri de fi\u0219iere necomprimate</li> <li> <p>Monitoriza\u021bi cre\u0219terea bazei de date</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Folosi\u021bi lazy loading pentru FileContent</li> <li>Implementa\u021bi streaming pentru fi\u0219iere mari</li> <li>Nu \u00eenc\u0103rca\u021bi con\u021binutul \u00een query-uri de listare</li> <li> <p>Considera\u021bi partitionarea tabelei pentru volume mari</p> </li> <li> <p>Limite \u0219i Constr\u00e2ngeri:</p> </li> <li>SQL Server: max 2GB per c\u00e2mp varbinary(max)</li> <li>Considera\u021bi chunking pentru fi\u0219iere foarte mari</li> <li> <p>Implementa\u021bi limite de dimensiune la upload</p> </li> <li> <p>Securitate:</p> </li> <li>Nu stoca\u021bi fi\u0219iere executabile</li> <li>Implementa\u021bi scanare antivirus \u00eenainte de stocare</li> <li>Cripta\u021bi con\u021binutul sensibil</li> <li> <p>Verifica\u021bi integritatea folosind hash-uri</p> </li> <li> <p>Backup \u0219i Recovery:</p> </li> <li>Con\u021binutul fi\u0219ierelor poate cre\u0219te semnificativ dimensiunea backup-urilor</li> <li>Considera\u021bi backup incremental sau diferen\u021bial</li> <li> <p>Testa\u021bi periodic restaurarea fi\u0219ierelor</p> </li> <li> <p>Migrare c\u0103tre Stocare Extern\u0103:    <pre><code>// Exemplu migrare c\u0103tre blob storage\npublic async Task MigrateToBlob(FileContent content)\n{\n    var blobUrl = await blobService.UploadAsync(content.File_Content);\n\n    // \u00cenlocuie\u0219te con\u021binutul cu referin\u021b\u0103 blob\n    content.File_Content = Encoding.UTF8.GetBytes(blobUrl);\n    await context.SaveChangesAsync();\n}\n</code></pre></p> </li> <li> <p>Politici de Reten\u021bie:</p> </li> <li>Documente temporare: \u0218tergere automat\u0103 dup\u0103 24-48 ore</li> <li>Documente procesate: Arhivare dup\u0103 30 zile</li> <li>Documente oficiale: P\u0103strare minim 5 ani conform legisla\u021biei</li> <li> <p>Date personale: \u0218tergere conform GDPR la cerere</p> </li> <li> <p>Monitorizare \u0219i Alerte:    <pre><code>public class FileContentMonitor\n{\n    public async Task&lt;StorageMetrics&gt; GetMetricsAsync()\n    {\n        return new StorageMetrics\n        {\n            TotalFiles = await context.FileContents.CountAsync(),\n            TotalSizeGB = await context.FileContents\n                .SumAsync(fc =&gt; fc.File_Content.Length) / (1024.0 * 1024 * 1024),\n            LargeFiles = await context.FileContents\n                .CountAsync(fc =&gt; fc.File_Content.Length &gt; 10 * 1024 * 1024),\n            OldestFile = await context.FileContents\n                .MinAsync(fc =&gt; fc.CreateDate)\n        };\n    }\n}\n</code></pre></p> </li> <li> <p>Optimiz\u0103ri pentru Entity Framework:     <pre><code>// Configurare \u00een DbContext\nprotected override void OnModelCreating(ModelBuilder modelBuilder)\n{\n    modelBuilder.Entity&lt;FileContent&gt;(entity =&gt;\n    {\n        // Exclude din query-uri by default\n        entity.Property(e =&gt; e.File_Content)\n            .HasColumnType(\"varbinary(max)\")\n            .ValueGeneratedNever();\n\n        // Index pentru cleanup\n        entity.HasIndex(e =&gt; e.CreateDate)\n            .HasDatabaseName(\"IX_FileContent_CreateDate\");\n    });\n}\n</code></pre></p> </li> </ol>"},{"location":"fod/database/entities/FodAdditionalData/","title":"FodAdditionalData","text":""},{"location":"fod/database/entities/FodAdditionalData/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodAdditionalData</code> define\u0219te c\u00e2mpurile adi\u021bionale personalizabile pentru servicii \u0219i cereri. Aceasta permite extinderea dinamic\u0103 a formularelor cu c\u00e2mpuri specifice fiec\u0103rui serviciu, f\u0103r\u0103 a modifica structura bazei de date.</p>"},{"location":"fod/database/entities/FodAdditionalData/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>Name</code> <code>string?</code> Numele tehnic al c\u00e2mpului adi\u021bional <code>AdditionalInformation</code> <code>string?</code> Informa\u021bii suplimentare sau descriere detaliat\u0103 <code>IsRequired</code> <code>bool?</code> Indic\u0103 dac\u0103 c\u00e2mpul este obligatoriu <code>OrderNumber</code> <code>decimal?</code> Ordinea de afi\u0219are \u00een formular <code>Type</code> <code>AdditionalDataType?</code> Tipul de date (text, num\u0103r, dat\u0103, etc.) <code>TypeValues</code> <code>ICollection&lt;FodAdditionalDataTypeValue&gt;</code> Valorile posibile pentru c\u00e2mpuri de tip list\u0103"},{"location":"fod/database/entities/FodAdditionalData/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodAdditionalDataTypeValue - Colec\u021bie de valori posibile pentru c\u00e2mpuri de tip dropdown/select</li> <li>FodService - Serviciul pentru care se define\u0219te c\u00e2mpul adi\u021bional</li> <li>FodServiceAdditionalData - Leg\u0103tura many-to-many cu serviciile</li> </ul>"},{"location":"fod/database/entities/FodAdditionalData/#enum-additionaldatatype","title":"Enum AdditionalDataType","text":"<pre><code>public enum AdditionalDataType\n{\n    Text = 1,\n    Number = 2,\n    Date = 3,\n    Boolean = 4,\n    Select = 5,\n    MultiSelect = 6,\n    File = 7,\n    Email = 8,\n    Phone = 9\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalData/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodAdditionalData/#exemplu-de-creare-camp-text-obligatoriu","title":"Exemplu de creare c\u00e2mp text obligatoriu","text":"<pre><code>var campAdi\u021bional = new FodAdditionalData\n{\n    Name = \"CNP\",\n    AdditionalInformation = \"Codul numeric personal al solicitantului\",\n    IsRequired = true,\n    OrderNumber = 1,\n    Type = AdditionalDataType.Text\n};\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalData/#exemplu-de-creare-camp-dropdown","title":"Exemplu de creare c\u00e2mp dropdown","text":"<pre><code>var campSelectie = new FodAdditionalData\n{\n    Name = \"TipDocument\",\n    AdditionalInformation = \"Selecta\u021bi tipul de document solicitat\",\n    IsRequired = true,\n    OrderNumber = 2,\n    Type = AdditionalDataType.Select,\n    TypeValues = new List&lt;FodAdditionalDataTypeValue&gt;\n    {\n        new() { Value = \"CI\", Label = \"Carte de identitate\" },\n        new() { Value = \"PS\", Label = \"Pa\u0219aport\" },\n        new() { Value = \"PN\", Label = \"Permis de conducere\" }\n    }\n};\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalData/#exemplu-de-validare-dinamica","title":"Exemplu de validare dinamic\u0103","text":"<pre><code>public bool ValidateAdditionalData(Dictionary&lt;string, object&gt; values)\n{\n    foreach (var field in additionalDataFields)\n    {\n        if (field.IsRequired == true &amp;&amp; !values.ContainsKey(field.Name))\n        {\n            throw new ValidationException($\"C\u00e2mpul '{field.Name}' este obligatoriu\");\n        }\n\n        // Validare specific\u0103 pe tip\n        if (values.TryGetValue(field.Name, out var value))\n        {\n            switch (field.Type)\n            {\n                case AdditionalDataType.Email:\n                    if (!IsValidEmail(value.ToString()))\n                        throw new ValidationException($\"Email invalid pentru c\u00e2mpul '{field.Name}'\");\n                    break;\n                case AdditionalDataType.Phone:\n                    if (!IsValidPhone(value.ToString()))\n                        throw new ValidationException($\"Telefon invalid pentru c\u00e2mpul '{field.Name}'\");\n                    break;\n            }\n        }\n    }\n    return true;\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalData/#note-importante","title":"Note importante","text":"<ul> <li>C\u00e2mpurile adi\u021bionale permit personalizarea formularelor f\u0103r\u0103 modific\u0103ri de cod</li> <li>Ordinea de afi\u0219are este controlat\u0103 prin <code>OrderNumber</code></li> <li>Pentru c\u00e2mpuri de tip Select/MultiSelect, valorile sunt stocate \u00een <code>TypeValues</code></li> <li>Validarea trebuie implementat\u0103 dinamic \u00een func\u021bie de tipul c\u00e2mpului</li> <li>Numele c\u00e2mpului trebuie s\u0103 fie unic \u00een cadrul unui serviciu</li> </ul>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/","title":"FodAdditionalDataTypeValue","text":""},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodAdditionalDataTypeValue</code> stocheaz\u0103 valorile posibile pentru c\u00e2mpurile adi\u021bionale de tip list\u0103 (dropdown, select multiplu). Aceasta permite definirea op\u021biunilor disponibile pentru c\u00e2mpurile de selec\u021bie \u00een mod dinamic.</p>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>Value</code> <code>string?</code> Valoarea tehnic\u0103/intern\u0103 a op\u021biunii <code>Label</code> <code>string?</code> Eticheta afi\u0219at\u0103 utilizatorului"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodAdditionalData - C\u00e2mpul adi\u021bional p\u0103rinte pentru care se definesc valorile</li> </ul>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#exemplu-de-definire-valori-pentru-dropdown","title":"Exemplu de definire valori pentru dropdown","text":"<pre><code>var valoriTipDocument = new List&lt;FodAdditionalDataTypeValue&gt;\n{\n    new FodAdditionalDataTypeValue { Value = \"CI\", Label = \"Carte de identitate\" },\n    new FodAdditionalDataTypeValue { Value = \"PS\", Label = \"Pa\u0219aport\" },\n    new FodAdditionalDataTypeValue { Value = \"PN\", Label = \"Permis de conducere\" },\n    new FodAdditionalDataTypeValue { Value = \"CN\", Label = \"Certificat de na\u0219tere\" }\n};\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#exemplu-de-utilizare-in-formular","title":"Exemplu de utilizare \u00een formular","text":"<pre><code>&lt;FodSelect @bind-Value=\"selectedValue\" Label=\"Tip document\"&gt;\n    @foreach (var option in additionalData.TypeValues)\n    {\n        &lt;FodSelectItem Value=\"@option.Value\"&gt;@option.Label&lt;/FodSelectItem&gt;\n    }\n&lt;/FodSelect&gt;\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#exemplu-de-adaugare-valori-dinamice","title":"Exemplu de ad\u0103ugare valori dinamice","text":"<pre><code>public void AddTypeValue(FodAdditionalData field, string value, string label)\n{\n    if (field.Type != AdditionalDataType.Select &amp;&amp; \n        field.Type != AdditionalDataType.MultiSelect)\n    {\n        throw new InvalidOperationException(\"Valorile pot fi ad\u0103ugate doar pentru c\u00e2mpuri de tip Select\");\n    }\n\n    field.TypeValues.Add(new FodAdditionalDataTypeValue\n    {\n        Value = value,\n        Label = label\n    });\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalDataTypeValue/#note-importante","title":"Note importante","text":"<ul> <li>Folosit exclusiv pentru c\u00e2mpuri de tip Select sau MultiSelect</li> <li>Valoarea tehnic\u0103 (<code>Value</code>) este cea stocat\u0103 \u00een baza de date</li> <li>Eticheta (<code>Label</code>) este cea afi\u0219at\u0103 utilizatorului</li> <li>Permite traducerea etichetelor f\u0103r\u0103 a afecta valorile stocate</li> <li>Ordinea valorilor este determinat\u0103 de ordinea din colec\u021bie</li> </ul>"},{"location":"fod/database/entities/FodAdditionalInvoice/","title":"FodAdditionalInvoice","text":""},{"location":"fod/database/entities/FodAdditionalInvoice/#descriere","title":"Descriere","text":"<p>Entitatea care gestioneaz\u0103 facturile adi\u021bionale asociate unei cereri \u00een sistemul Front Office Digital. Aceast\u0103 entitate permite ad\u0103ugarea de costuri suplimentare care apar \u00een timpul proces\u0103rii unei cereri, cum ar fi taxe pentru servicii expres, apostilare, livrare sau alte servicii op\u021bionale.</p>"},{"location":"fod/database/entities/FodAdditionalInvoice/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodAdditionalInvoice/#identificare-si-detalii","title":"Identificare \u0219i Detalii","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al facturii adi\u021bionale Primary Key RequestNumber string Num\u0103rul cererii asociate Obligatoriu, referin\u021b\u0103 pentru tracking Amount decimal Suma facturii adi\u021bionale Obligatoriu, valoare pozitiv\u0103 Title string? Titlul/Descrierea facturii Op\u021bional, descrie serviciul facturat RequestId Guid ID-ul cererii principale Foreign Key c\u0103tre FodRequest"},{"location":"fod/database/entities/FodAdditionalInvoice/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodAdditionalInvoice/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>Request (<code>FodRequest</code>) - Cererea principal\u0103 c\u0103reia \u00eei apar\u021bine aceast\u0103 factur\u0103 adi\u021bional\u0103</li> </ul>"},{"location":"fod/database/entities/FodAdditionalInvoice/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodAdditionalInvoice/#adaugare-factura-aditionala","title":"Ad\u0103ugare Factur\u0103 Adi\u021bional\u0103","text":"<pre><code>var additionalInvoice = new FodAdditionalInvoice\n{\n    Id = Guid.NewGuid(),\n    RequestId = requestId,\n    RequestNumber = \"FOD-2024-000123\",\n    Amount = 150.00m,\n    Title = \"Tax\u0103 urgen\u021b\u0103 - procesare \u00een 24 ore\"\n};\n\ncontext.FodAdditionalInvoices.Add(additionalInvoice);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalInvoice/#calculare-cost-total-cu-facturi-aditionale","title":"Calculare Cost Total cu Facturi Adi\u021bionale","text":"<pre><code>var request = await context.FodRequests\n    .Include(r =&gt; r.FodAdditionalInvoices)\n    .FirstOrDefaultAsync(r =&gt; r.Id == requestId);\n\nvar baseCost = request.Cost ?? 0;\nvar additionalCosts = request.FodAdditionalInvoices.Sum(ai =&gt; ai.Amount);\nvar totalCost = baseCost + additionalCosts;\n\nConsole.WriteLine($\"Cost de baz\u0103: {baseCost} MDL\");\nConsole.WriteLine($\"Costuri adi\u021bionale: {additionalCosts} MDL\");\nConsole.WriteLine($\"Cost total: {totalCost} MDL\");\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalInvoice/#listare-facturi-aditionale-pentru-o-cerere","title":"Listare Facturi Adi\u021bionale pentru o Cerere","text":"<pre><code>var additionalInvoices = await context.FodAdditionalInvoices\n    .Where(ai =&gt; ai.RequestId == requestId)\n    .Select(ai =&gt; new\n    {\n        ai.Id,\n        ai.Title,\n        ai.Amount,\n        ai.RequestNumber\n    })\n    .OrderBy(ai =&gt; ai.Title)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalInvoice/#raport-venituri-din-servicii-aditionale","title":"Raport Venituri din Servicii Adi\u021bionale","text":"<pre><code>var revenueReport = await context.FodAdditionalInvoices\n    .Where(ai =&gt; ai.Request.PaymentDate &gt;= startDate \n                 &amp;&amp; ai.Request.PaymentDate &lt;= endDate)\n    .GroupBy(ai =&gt; ai.Title)\n    .Select(g =&gt; new\n    {\n        ServiceType = g.Key,\n        TotalAmount = g.Sum(ai =&gt; ai.Amount),\n        Count = g.Count()\n    })\n    .OrderByDescending(r =&gt; r.TotalAmount)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalInvoice/#tipuri-comune-de-facturi-aditionale","title":"Tipuri Comune de Facturi Adi\u021bionale","text":"<ol> <li>Taxe de Urgen\u021b\u0103:</li> <li>Procesare expres\u0103 (24-48 ore)</li> <li> <p>Procesare super-urgent\u0103 (\u00een aceea\u0219i zi)</p> </li> <li> <p>Servicii de Livrare:</p> </li> <li>Livrare standard</li> <li>Livrare expres\u0103</li> <li> <p>Livrare interna\u021bional\u0103</p> </li> <li> <p>Servicii de Apostilare:</p> </li> <li>Apostilare standard</li> <li> <p>Apostilare urgent\u0103</p> </li> <li> <p>Alte Servicii:</p> </li> <li>Copii suplimentare</li> <li>Traduceri autorizate</li> <li>Legaliz\u0103ri notariale</li> </ol>"},{"location":"fod/database/entities/FodAdditionalInvoice/#note-importante","title":"Note Importante","text":"<ol> <li>Transparen\u021b\u0103 Financiar\u0103:</li> <li>Toate costurile adi\u021bionale trebuie comunicate clar solicitantului</li> <li>Titlul facturii trebuie s\u0103 descrie clar serviciul oferit</li> <li> <p>Suma trebuie s\u0103 corespund\u0103 tarifelor oficiale</p> </li> <li> <p>Rela\u021bie cu Plata Principal\u0103:</p> </li> <li>Facturile adi\u021bionale se pl\u0103tesc \u00eempreun\u0103 cu costul principal</li> <li>RequestNumber permite identificarea rapid\u0103 \u00een sistemele de plat\u0103</li> <li> <p>Statutul pl\u0103\u021bii se urm\u0103re\u0219te prin cererea principal\u0103</p> </li> <li> <p>Audit \u0219i Raportare:</p> </li> <li>Toate facturile adi\u021bionale sunt incluse \u00een rapoartele financiare</li> <li>Permit analiza veniturilor pe tipuri de servicii</li> <li> <p>Esen\u021biale pentru reconciliere cu sistemele contabile</p> </li> <li> <p>Valid\u0103ri de Business:</p> </li> <li>Amount trebuie s\u0103 fie pozitiv</li> <li>Nu se permit facturi adi\u021bionale dup\u0103 finalizarea cererii</li> <li> <p>Modific\u0103rile necesit\u0103 aprobare \u0219i audit trail</p> </li> <li> <p>Integrare cu MPay:</p> </li> <li>Facturile adi\u021bionale sunt incluse \u00een totalul trimis c\u0103tre MPay</li> <li>Se genereaz\u0103 o singur\u0103 tranzac\u021bie pentru toate costurile</li> <li>Detaliile sunt disponibile \u00een extrasul de plat\u0103</li> </ol>"},{"location":"fod/database/entities/FodAdditionalRequest/","title":"FodAdditionalRequest","text":""},{"location":"fod/database/entities/FodAdditionalRequest/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodAdditionalRequest</code> reprezint\u0103 o cerere suplimentar\u0103 asociat\u0103 unei cereri principale. Aceasta permite ata\u0219area de cereri adi\u021bionale sau documente complementare la o cerere existent\u0103, facilit\u00e2nd gestionarea cererilor complexe care necesit\u0103 mai multe etape sau documente.</p>"},{"location":"fod/database/entities/FodAdditionalRequest/#proprietati","title":"Propriet\u0103\u021bi","text":"<p>Aceast\u0103 entitate nu expune propriet\u0103\u021bi publice direct, func\u021bion\u00e2nd ca o entitate de leg\u0103tur\u0103 \u00eentre cererea principal\u0103 \u0219i cererile adi\u021bionale asociate.</p>"},{"location":"fod/database/entities/FodAdditionalRequest/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodRequest - Cererea principal\u0103 la care se ata\u0219eaz\u0103 cererea adi\u021bional\u0103</li> <li>FodService - Serviciul pentru care se face cererea adi\u021bional\u0103</li> <li>FodRequestStatus - Statusul cererii adi\u021bionale</li> </ul>"},{"location":"fod/database/entities/FodAdditionalRequest/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodAdditionalRequest/#exemplu-de-adaugare-cerere-aditionala","title":"Exemplu de ad\u0103ugare cerere adi\u021bional\u0103","text":"<pre><code>public async Task AdaugaCerereAditionala(int requestId, int serviceId)\n{\n    var cerereAditionala = new FodAdditionalRequest\n    {\n        RequestId = requestId,\n        ServiceId = serviceId,\n        Status = RequestStatus.InAsteptare,\n        CreatedDate = DateTime.Now\n    };\n\n    await context.FodAdditionalRequests.AddAsync(cerereAditionala);\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalRequest/#exemplu-de-verificare-cereri-aditionale","title":"Exemplu de verificare cereri adi\u021bionale","text":"<pre><code>public async Task&lt;bool&gt; AreCereriAditionale(int requestId)\n{\n    return await context.FodAdditionalRequests\n        .AnyAsync(ar =&gt; ar.RequestId == requestId);\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalRequest/#exemplu-de-obtinere-cereri-aditionale-cu-detalii","title":"Exemplu de ob\u021binere cereri adi\u021bionale cu detalii","text":"<pre><code>public async Task&lt;List&lt;AdditionalRequestInfo&gt;&gt; GetCereriAditionale(int requestId)\n{\n    return await context.FodAdditionalRequests\n        .Where(ar =&gt; ar.RequestId == requestId)\n        .Include(ar =&gt; ar.Service)\n        .Include(ar =&gt; ar.Status)\n        .Select(ar =&gt; new AdditionalRequestInfo\n        {\n            ServiceName = ar.Service.Name,\n            Status = ar.Status.Name,\n            CreatedDate = ar.CreatedDate\n        })\n        .ToListAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalRequest/#note-importante","title":"Note importante","text":"<ul> <li>Cererea adi\u021bional\u0103 mo\u0219tene\u0219te contextul cererii principale</li> <li>Poate avea propriul flux de aprobare independent</li> <li>Statusul cererii principale poate depinde de finalizarea cererilor adi\u021bionale</li> <li>Folosit\u0103 frecvent pentru cereri care necesit\u0103 documente de la alte institu\u021bii</li> </ul>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/","title":"FodAdditionalServiceRequest","text":""},{"location":"fod/database/entities/FodAdditionalServiceRequest/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodAdditionalServiceRequest</code> reprezint\u0103 leg\u0103tura dintre servicii \u0219i cererile adi\u021bionale asociate. Aceasta permite definirea serviciilor suplimentare care pot fi solicitate \u00een contextul unei cereri principale, facilit\u00e2nd procesarea cererilor complexe care necesit\u0103 servicii complementare.</p>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#proprietati","title":"Propriet\u0103\u021bi","text":"<p>Aceast\u0103 entitate func\u021bioneaz\u0103 ca o tabel\u0103 de leg\u0103tur\u0103 many-to-many \u0219i nu expune propriet\u0103\u021bi publice direct.</p>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodService - Serviciul principal care poate avea cereri adi\u021bionale</li> <li>FodAdditionalService - Serviciul adi\u021bional care poate fi solicitat</li> <li>FodRequest - Cererea \u00een care se folosesc serviciile adi\u021bionale</li> </ul>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodAdditionalServiceRequest/#exemplu-de-configurare-servicii-aditionale","title":"Exemplu de configurare servicii adi\u021bionale","text":"<pre><code>public async Task ConfigureazaServiciiAditionale(int servicePrincipalId, List&lt;int&gt; serviciiAditionale)\n{\n    foreach (var serviceAdditionalId in serviciiAditionale)\n    {\n        var legatura = new FodAdditionalServiceRequest\n        {\n            ServiceId = servicePrincipalId,\n            AdditionalServiceId = serviceAdditionalId,\n            IsOptional = true,\n            DisplayOrder = 1\n        };\n\n        await context.FodAdditionalServiceRequests.AddAsync(legatura);\n    }\n\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#exemplu-de-obtinere-servicii-aditionale-disponibile","title":"Exemplu de ob\u021binere servicii adi\u021bionale disponibile","text":"<pre><code>public async Task&lt;List&lt;ServiceInfo&gt;&gt; GetServiciiAditionaleDisponibile(int serviceId)\n{\n    return await context.FodAdditionalServiceRequests\n        .Where(asr =&gt; asr.ServiceId == serviceId)\n        .Include(asr =&gt; asr.AdditionalService)\n        .Select(asr =&gt; new ServiceInfo\n        {\n            ServiceId = asr.AdditionalServiceId,\n            ServiceName = asr.AdditionalService.Name,\n            IsOptional = asr.IsOptional,\n            Price = asr.AdditionalService.Price\n        })\n        .OrderBy(s =&gt; s.DisplayOrder)\n        .ToListAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#exemplu-de-validare-servicii-aditionale-selectate","title":"Exemplu de validare servicii adi\u021bionale selectate","text":"<pre><code>public async Task&lt;bool&gt; ValidateServiciiAditionale(int serviceId, List&lt;int&gt; selectedServices)\n{\n    var serviciiObligatorii = await context.FodAdditionalServiceRequests\n        .Where(asr =&gt; asr.ServiceId == serviceId &amp;&amp; !asr.IsOptional)\n        .Select(asr =&gt; asr.AdditionalServiceId)\n        .ToListAsync();\n\n    // Verific\u0103 dac\u0103 toate serviciile obligatorii sunt selectate\n    return serviciiObligatorii.All(so =&gt; selectedServices.Contains(so));\n}\n</code></pre>"},{"location":"fod/database/entities/FodAdditionalServiceRequest/#note-importante","title":"Note importante","text":"<ul> <li>Permite definirea serviciilor op\u021bionale \u0219i obligatorii</li> <li>Ordinea de afi\u0219are poate fi controlat\u0103 pentru o experien\u021b\u0103 utilizator optim\u0103</li> <li>Serviciile adi\u021bionale pot avea propriile tarife \u0219i condi\u021bii</li> <li>Validarea trebuie s\u0103 \u021bin\u0103 cont de serviciile obligatorii</li> <li>Poate fi folosit\u0103 pentru pachete de servicii sau servicii complementare</li> </ul>"},{"location":"fod/database/entities/FodApostilationDetails/","title":"FodApostilationDetails","text":""},{"location":"fod/database/entities/FodApostilationDetails/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodApostilationDetails</code> stocheaz\u0103 informa\u021bii despre \u021b\u0103rile \u0219i detaliile necesare pentru procesul de apostilare a documentelor. Aceasta con\u021bine date despre acordurile bilaterale \u0219i excep\u021biile specifice fiec\u0103rei \u021b\u0103ri pentru validarea interna\u021bional\u0103 a documentelor oficiale.</p>"},{"location":"fod/database/entities/FodApostilationDetails/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>CountryId</code> <code>string</code> Codul unic al \u021b\u0103rii (ISO sau intern) <code>CountryName</code> <code>string</code> Numele oficial al \u021b\u0103rii <code>CountryHasBilateralTreaty</code> <code>bool</code> Indic\u0103 dac\u0103 exist\u0103 tratat bilateral cu \u021bara respectiv\u0103 <code>CountryExceptDocuments</code> <code>string?</code> Lista documentelor exceptate de la apostilare pentru aceast\u0103 \u021bar\u0103"},{"location":"fod/database/entities/FodApostilationDetails/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodRequest - Cererile care necesit\u0103 apostilare pentru \u021bara specificat\u0103</li> <li>FodService - Serviciile de apostilare disponibile pentru \u021bar\u0103</li> </ul>"},{"location":"fod/database/entities/FodApostilationDetails/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodApostilationDetails/#exemplu-de-verificare-tratat-bilateral","title":"Exemplu de verificare tratat bilateral","text":"<pre><code>public async Task&lt;bool&gt; VerificaTratatBilateral(string countryId)\n{\n    var detalii = await context.FodApostilationDetails\n        .FirstOrDefaultAsync(ad =&gt; ad.CountryId == countryId);\n\n    return detalii?.CountryHasBilateralTreaty ?? false;\n}\n</code></pre>"},{"location":"fod/database/entities/FodApostilationDetails/#exemplu-de-obtinere-tari-cu-tratate-bilaterale","title":"Exemplu de ob\u021binere \u021b\u0103ri cu tratate bilaterale","text":"<pre><code>public async Task&lt;List&lt;CountryInfo&gt;&gt; GetTariCuTratate()\n{\n    return await context.FodApostilationDetails\n        .Where(ad =&gt; ad.CountryHasBilateralTreaty)\n        .Select(ad =&gt; new CountryInfo\n        {\n            Id = ad.CountryId,\n            Name = ad.CountryName,\n            HasTreaty = true\n        })\n        .OrderBy(c =&gt; c.Name)\n        .ToListAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodApostilationDetails/#exemplu-de-verificare-documente-exceptate","title":"Exemplu de verificare documente exceptate","text":"<pre><code>public bool EsteDocumentExceptat(FodApostilationDetails detalii, string tipDocument)\n{\n    if (string.IsNullOrEmpty(detalii.CountryExceptDocuments))\n        return false;\n\n    var documenteExceptate = detalii.CountryExceptDocuments\n        .Split(',', StringSplitOptions.RemoveEmptyEntries)\n        .Select(d =&gt; d.Trim());\n\n    return documenteExceptate.Contains(tipDocument);\n}\n</code></pre>"},{"location":"fod/database/entities/FodApostilationDetails/#exemplu-de-procesare-cerere-apostilare","title":"Exemplu de procesare cerere apostilare","text":"<pre><code>public async Task&lt;ApostilareResult&gt; ProceseazaCerereApostilare(string countryId, string tipDocument)\n{\n    var detalii = await context.FodApostilationDetails\n        .FirstOrDefaultAsync(ad =&gt; ad.CountryId == countryId);\n\n    if (detalii == null)\n        return new ApostilareResult { Success = false, Message = \"\u021aara nu este configurat\u0103\" };\n\n    if (EsteDocumentExceptat(detalii, tipDocument))\n        return new ApostilareResult { Success = false, Message = \"Documentul este exceptat pentru aceast\u0103 \u021bar\u0103\" };\n\n    if (detalii.CountryHasBilateralTreaty)\n    {\n        return new ApostilareResult \n        { \n            Success = true, \n            RequiresApostille = false,\n            Message = \"Exist\u0103 tratat bilateral - nu este necesar\u0103 apostila\" \n        };\n    }\n\n    return new ApostilareResult \n    { \n        Success = true, \n        RequiresApostille = true,\n        Message = \"Apostila este necesar\u0103\" \n    };\n}\n</code></pre>"},{"location":"fod/database/entities/FodApostilationDetails/#note-importante","title":"Note importante","text":"<ul> <li>Conven\u021bia de la Haga din 1961 reglementeaz\u0103 apostilarea documentelor</li> <li>\u021a\u0103rile cu tratate bilaterale pot avea proceduri simplificate</li> <li>Documentele exceptate variaz\u0103 \u00een func\u021bie de acordurile specifice</li> <li>Lista \u021b\u0103rilor \u0219i excep\u021biilor trebuie actualizat\u0103 periodic</li> <li>Codul \u021b\u0103rii trebuie s\u0103 respecte standardele interna\u021bionale (ISO 3166)</li> </ul>"},{"location":"fod/database/entities/FodDocumentType/","title":"FodDocumentType","text":""},{"location":"fod/database/entities/FodDocumentType/#descriere","title":"Descriere","text":"<p>Entitatea care define\u0219te tipurile de documente disponibile \u00een sistemul Front Office Digital. Aceast\u0103 entitate con\u021bine catalogul tuturor tipurilor de documente care pot fi solicitate, \u00eempreun\u0103 cu caracteristicile lor specifice precum necesitatea apostil\u0103rii sau livr\u0103rii.</p>"},{"location":"fod/database/entities/FodDocumentType/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodDocumentType/#informatii-de-baza","title":"Informa\u021bii de Baz\u0103","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al tipului de document Primary Key, mo\u0219tenit din BaseEntity Name string Denumirea tipului de document Obligatoriu Code string Codul unic al tipului de document Obligatoriu, folosit pentru identificare \u00een sistem RequiresApostilation bool Indic\u0103 dac\u0103 documentul necesit\u0103 apostilare Default: false RequiresDelivery bool Indic\u0103 dac\u0103 documentul necesit\u0103 livrare Default: false"},{"location":"fod/database/entities/FodDocumentType/#metadate-mostenite-din-baseentity","title":"Metadate (mo\u0219tenite din BaseEntity)","text":"Proprietate Tip Descriere Constr\u00e2ngeri CreatedDate DateTime Data cre\u0103rii \u00eenregistr\u0103rii Setat\u0103 automat ModifiedDate DateTime Data ultimei modific\u0103ri Actualizat\u0103 automat CreatedBy string? Identificatorul utilizatorului care a creat \u00eenregistrarea - ModifiedBy string? Identificatorul utilizatorului care a modificat ultima dat\u0103 - Version byte[] Versiunea \u00eenregistr\u0103rii pentru concurrency control Rowversion TenantId string? ID-ul tenant-ului pentru multi-tenancy -"},{"location":"fod/database/entities/FodDocumentType/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodDocumentType/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>DocumentTypeServices (<code>ICollection&lt;FodServiceDocumentType&gt;</code>) - Serviciile care pot emite acest tip de document</li> </ul>"},{"location":"fod/database/entities/FodDocumentType/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodDocumentType/#creare-tip-document-nou","title":"Creare Tip Document Nou","text":"<pre><code>var documentType = new FodDocumentType\n{\n    Name = \"Certificat de na\u0219tere\",\n    Code = \"CERT_NASTERE\",\n    RequiresApostilation = true,\n    RequiresDelivery = true\n};\n\ncontext.FodDocumentTypes.Add(documentType);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodDocumentType/#listare-tipuri-de-documente","title":"Listare Tipuri de Documente","text":"<pre><code>var documentTypes = await context.FodDocumentTypes\n    .OrderBy(dt =&gt; dt.Name)\n    .Select(dt =&gt; new\n    {\n        dt.Id,\n        dt.Name,\n        dt.Code,\n        dt.RequiresApostilation,\n        dt.RequiresDelivery\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodDocumentType/#cautare-dupa-cod","title":"C\u0103utare dup\u0103 Cod","text":"<pre><code>var certificatNastere = await context.FodDocumentTypes\n    .FirstOrDefaultAsync(dt =&gt; dt.Code == \"CERT_NASTERE\");\n\nif (certificatNastere.RequiresApostilation)\n{\n    // Logic\u0103 pentru procesare apostilare\n}\n</code></pre>"},{"location":"fod/database/entities/FodDocumentType/#documente-care-necesita-livrare","title":"Documente care Necesit\u0103 Livrare","text":"<pre><code>var documentsForDelivery = await context.FodDocumentTypes\n    .Where(dt =&gt; dt.RequiresDelivery)\n    .Include(dt =&gt; dt.DocumentTypeServices)\n        .ThenInclude(dts =&gt; dts.Service)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodDocumentType/#note-importante","title":"Note Importante","text":"<ol> <li> <p>Coduri Unice: C\u00e2mpul <code>Code</code> trebuie s\u0103 fie unic \u00een sistem \u0219i este folosit pentru identificarea tipului de document \u00een integr\u0103ri \u0219i proces\u0103ri automate.</p> </li> <li> <p>Caracteristici Importante:</p> </li> <li><code>RequiresApostilation</code> determin\u0103 dac\u0103 documentul necesit\u0103 proces de apostilare interna\u021bional\u0103</li> <li> <p><code>RequiresDelivery</code> indic\u0103 dac\u0103 documentul poate fi livrat la domiciliu</p> </li> <li> <p>Rela\u021bie cu Servicii:</p> </li> <li>Un tip de document poate fi emis de multiple servicii</li> <li> <p>Rela\u021bia este gestionat\u0103 prin entitatea intermediar\u0103 <code>FodServiceDocumentType</code></p> </li> <li> <p>Catalog Centralizat:</p> </li> <li>Aceast\u0103 entitate serve\u0219te ca un catalog centralizat pentru toate tipurile de documente</li> <li> <p>Modific\u0103rile se reflect\u0103 automat \u00een toate serviciile care emit aceste documente</p> </li> <li> <p>Considera\u021bii de Business:</p> </li> <li>Tipurile de documente sunt de obicei configurate la instalarea sistemului</li> <li>Modific\u0103rile necesit\u0103 aprobare \u0219i pot afecta fluxurile existente</li> <li>Codul documentului nu ar trebui schimbat dup\u0103 ce a fost utilizat \u00een produc\u021bie</li> </ol>"},{"location":"fod/database/entities/FodExecutionTerm/","title":"FodExecutionTerm","text":""},{"location":"fod/database/entities/FodExecutionTerm/#descriere","title":"Descriere","text":"<p>Define\u0219te termenii de execu\u021bie pentru serviciile din sistemul FOD, inclusiv costurile, taxele de stat \u0219i timpul necesar pentru procesare. Aceast\u0103 entitate permite configurarea flexibil\u0103 a termenelor \u00een func\u021bie de tipul de persoan\u0103 \u0219i specificul serviciului.</p>"},{"location":"fod/database/entities/FodExecutionTerm/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al termenului de execu\u021bie Primary Key Text string Descrierea termenului de execu\u021bie Obligatoriu Cost decimal? Costul serviciului Column: decimal(18,2) HoursValue int? Num\u0103rul de ore necesare pentru execu\u021bie - PersonType PersonType? Tipul de persoan\u0103 (fizic\u0103/juridic\u0103) Enum: PersonType StateTax decimal? Taxa de stat aplicabil\u0103 Column: decimal(18,2) ServiceId Guid? ID-ul serviciului asociat Foreign Key c\u0103tre FodService"},{"location":"fod/database/entities/FodExecutionTerm/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodExecutionTerm/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>Service (<code>FodService</code>) - Serviciul pentru care se aplic\u0103 acest termen</li> </ul>"},{"location":"fod/database/entities/FodExecutionTerm/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>FodRequest - Cererile care folosesc acest termen de execu\u021bie</li> <li>FodServiceRequest - Cererile de serviciu cu acest termen</li> </ul>"},{"location":"fod/database/entities/FodExecutionTerm/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodExecutionTerm/#definire-termeni-pentru-serviciu","title":"Definire Termeni pentru Serviciu","text":"<pre><code>// Termen standard\nvar termenStandard = new FodExecutionTerm\n{\n    ServiceId = certificatNastereId,\n    Text = \"Eliberare \u00een termen de 5 zile lucr\u0103toare\",\n    Cost = 100.00m,\n    StateTax = 20.00m,\n    HoursValue = 120, // 5 zile * 24 ore\n    PersonType = PersonType.Physical\n};\n\n// Termen urgent\nvar termenUrgent = new FodExecutionTerm\n{\n    ServiceId = certificatNastereId,\n    Text = \"Eliberare urgent\u0103 \u00een 24 ore\",\n    Cost = 200.00m,\n    StateTax = 40.00m,\n    HoursValue = 24,\n    PersonType = PersonType.Physical\n};\n\ncontext.FodExecutionTerms.AddRange(termenStandard, termenUrgent);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodExecutionTerm/#calcul-cost-total","title":"Calcul Cost Total","text":"<pre><code>public decimal CalculateTotalCost(FodExecutionTerm term)\n{\n    return (term.Cost ?? 0) + (term.StateTax ?? 0);\n}\n\n// Aplicare reduceri pentru anumite categorii\npublic decimal CalculateFinalCost(FodExecutionTerm term, bool isPensioner, bool hasDisability)\n{\n    var totalCost = CalculateTotalCost(term);\n\n    // 50% reducere pentru pensionari\n    if (isPensioner)\n        totalCost *= 0.5m;\n\n    // Scutire complet\u0103 pentru persoane cu dizabilit\u0103\u021bi\n    if (hasDisability)\n        totalCost = 0;\n\n    return totalCost;\n}\n</code></pre>"},{"location":"fod/database/entities/FodExecutionTerm/#obtinere-termeni-disponibili","title":"Ob\u021binere Termeni Disponibili","text":"<pre><code>var availableTerms = await context.FodExecutionTerms\n    .Where(et =&gt; et.ServiceId == serviceId &amp;&amp;\n                 (et.PersonType == null || et.PersonType == requestorType))\n    .OrderBy(et =&gt; et.Cost)\n    .Select(et =&gt; new\n    {\n        et.Id,\n        et.Text,\n        TotalCost = (et.Cost ?? 0) + (et.StateTax ?? 0),\n        WorkingDays = et.HoursValue.HasValue ? et.HoursValue.Value / 24 : 0,\n        IsUrgent = et.HoursValue &lt;= 24\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodExecutionTerm/#calcul-data-estimata-finalizare","title":"Calcul Dat\u0103 Estimat\u0103 Finalizare","text":"<pre><code>public DateTime CalculateEstimatedCompletionDate(FodExecutionTerm term, DateTime startDate)\n{\n    if (!term.HoursValue.HasValue)\n        return startDate.AddDays(30); // Default 30 zile\n\n    var hours = term.HoursValue.Value;\n    var endDate = startDate;\n\n    // Converte\u0219te ore \u00een zile lucr\u0103toare (8 ore/zi)\n    var workingDays = Math.Ceiling(hours / 8.0);\n\n    // Adaug\u0103 zile lucr\u0103toare, s\u0103rind weekend-urile\n    while (workingDays &gt; 0)\n    {\n        endDate = endDate.AddDays(1);\n        if (endDate.DayOfWeek != DayOfWeek.Saturday &amp;&amp; \n            endDate.DayOfWeek != DayOfWeek.Sunday)\n        {\n            workingDays--;\n        }\n    }\n\n    return endDate;\n}\n</code></pre>"},{"location":"fod/database/entities/FodExecutionTerm/#raport-termeni-populari","title":"Raport Termeni Populari","text":"<pre><code>var popularTerms = await context.FodServiceRequests\n    .Include(sr =&gt; sr.FodExecutionTerm)\n    .Where(sr =&gt; sr.FodExecutionTermId != null)\n    .GroupBy(sr =&gt; new \n    { \n        sr.FodExecutionTermId,\n        sr.FodExecutionTerm.Text,\n        sr.FodExecutionTerm.Cost\n    })\n    .Select(g =&gt; new\n    {\n        TermId = g.Key.FodExecutionTermId,\n        Description = g.Key.Text,\n        Cost = g.Key.Cost,\n        UsageCount = g.Count(),\n        TotalRevenue = g.Sum(sr =&gt; sr.FinalCost)\n    })\n    .OrderByDescending(t =&gt; t.UsageCount)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodExecutionTerm/#note","title":"Note","text":"<ol> <li>Structura Costurilor:</li> <li>Cost = tariful serviciului</li> <li>StateTax = taxa de stat obligatorie</li> <li> <p>Cost total = Cost + StateTax</p> </li> <li> <p>Timp de Execu\u021bie:</p> </li> <li>HoursValue pentru calcule precise</li> <li>Considerat \u00een ore pentru flexibilitate</li> <li> <p>Convertit \u00een zile lucr\u0103toare pentru afi\u0219are</p> </li> <li> <p>Personalizare per Tip Persoan\u0103:</p> </li> <li>PersonType permite tarife diferen\u021biate</li> <li>null = aplicabil pentru toate tipurile</li> <li> <p>Verifica\u021bi \u00eentotdeauna compatibilitatea</p> </li> <li> <p>Termeni Speciali:</p> </li> <li>Urgent: HoursValue &lt;= 24</li> <li>Express: HoursValue &lt;= 48</li> <li> <p>Standard: HoursValue &gt; 48</p> </li> <li> <p>Valid\u0103ri Recomandate:</p> </li> <li>Cost &gt;= 0 (poate fi 0 pentru servicii gratuite)</li> <li>StateTax &gt;= 0</li> <li>HoursValue &gt; 0 c\u00e2nd specificat</li> <li> <p>Text s\u0103 fie descriptiv \u0219i clar</p> </li> <li> <p>Best Practices:</p> </li> <li>Defini\u021bi termeni clari \u0219i distincti</li> <li>Evita\u021bi suprapuneri de condi\u021bii</li> <li>Actualiza\u021bi Text c\u00e2nd modifica\u021bi termenii</li> <li>P\u0103stra\u021bi istoric pentru audit financiar</li> </ol>"},{"location":"fod/database/entities/FodMDocsDocumentShare/","title":"FodMDocsDocumentShare","text":""},{"location":"fod/database/entities/FodMDocsDocumentShare/#descriere","title":"Descriere","text":"<p>Entitatea <code>FodMDocsDocumentShare</code> gestioneaz\u0103 partajarea documentelor prin sistemul MDocs, permi\u021b\u00e2nd schimbul securizat de documente \u00eentre institu\u021bii \u0219i cet\u0103\u021beni. Aceasta faciliteaz\u0103 accesul controlat la documente oficiale \u00een format digital.</p>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#proprietati","title":"Propriet\u0103\u021bi","text":"<p>Aceast\u0103 entitate nu expune propriet\u0103\u021bi publice direct, func\u021bion\u00e2nd ca o entitate de gestionare a partaj\u0103rilor de documente.</p>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#relatii","title":"Rela\u021bii","text":"<ul> <li>FodRequest - Cererea asociat\u0103 cu documentul partajat</li> <li>FodUser - Utilizatorul care partajeaz\u0103 sau prime\u0219te documentul</li> <li>MDocsDocument - Documentul din sistemul MDocs care este partajat</li> <li>FodDepartment - Departamentul care gestioneaz\u0103 partajarea</li> </ul>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#utilizare","title":"Utilizare","text":""},{"location":"fod/database/entities/FodMDocsDocumentShare/#exemplu-de-creare-partajare-document","title":"Exemplu de creare partajare document","text":"<pre><code>public async Task&lt;Guid&gt; PartajeazaDocument(Guid documentId, string userIdDestinatar, int departmentId)\n{\n    var partajare = new FodMDocsDocumentShare\n    {\n        Id = Guid.NewGuid(),\n        DocumentId = documentId,\n        SharedWithUserId = userIdDestinatar,\n        SharedByDepartmentId = departmentId,\n        ShareDate = DateTime.UtcNow,\n        ExpiryDate = DateTime.UtcNow.AddDays(30),\n        IsActive = true\n    };\n\n    await context.FodMDocsDocumentShares.AddAsync(partajare);\n    await context.SaveChangesAsync();\n\n    return partajare.Id;\n}\n</code></pre>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#exemplu-de-verificare-acces-la-document","title":"Exemplu de verificare acces la document","text":"<pre><code>public async Task&lt;bool&gt; VerificaAccesDocument(Guid documentId, string userId)\n{\n    return await context.FodMDocsDocumentShares\n        .AnyAsync(ds =&gt; ds.DocumentId == documentId \n                     &amp;&amp; ds.SharedWithUserId == userId \n                     &amp;&amp; ds.IsActive \n                     &amp;&amp; ds.ExpiryDate &gt; DateTime.UtcNow);\n}\n</code></pre>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#exemplu-de-revocare-acces","title":"Exemplu de revocare acces","text":"<pre><code>public async Task RevocaAcces(Guid shareId)\n{\n    var partajare = await context.FodMDocsDocumentShares\n        .FirstOrDefaultAsync(ds =&gt; ds.Id == shareId);\n\n    if (partajare != null)\n    {\n        partajare.IsActive = false;\n        partajare.RevokedDate = DateTime.UtcNow;\n        await context.SaveChangesAsync();\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#exemplu-de-obtinere-documente-partajate","title":"Exemplu de ob\u021binere documente partajate","text":"<pre><code>public async Task&lt;List&lt;SharedDocumentInfo&gt;&gt; GetDocumentePartajate(string userId)\n{\n    return await context.FodMDocsDocumentShares\n        .Where(ds =&gt; ds.SharedWithUserId == userId \n                  &amp;&amp; ds.IsActive \n                  &amp;&amp; ds.ExpiryDate &gt; DateTime.UtcNow)\n        .Include(ds =&gt; ds.Document)\n        .Include(ds =&gt; ds.SharedByDepartment)\n        .Select(ds =&gt; new SharedDocumentInfo\n        {\n            DocumentName = ds.Document.Name,\n            SharedBy = ds.SharedByDepartment.Name,\n            ShareDate = ds.ShareDate,\n            ExpiryDate = ds.ExpiryDate,\n            DocumentType = ds.Document.Type\n        })\n        .OrderByDescending(d =&gt; d.ShareDate)\n        .ToListAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodMDocsDocumentShare/#note-importante","title":"Note importante","text":"<ul> <li>Documentele partajate au o perioad\u0103 de valabilitate limitat\u0103</li> <li>Accesul poate fi revocat \u00een orice moment</li> <li>Sistemul MDocs asigur\u0103 autenticitatea \u0219i integritatea documentelor</li> <li>Partajarea este auditat\u0103 pentru conformitate</li> <li>Suport\u0103 partajare \u00eentre cet\u0103\u021beni \u0219i institu\u021bii guvernamentale</li> </ul>"},{"location":"fod/database/entities/FodNotificationType/","title":"FodNotificationType","text":"<p>Description: </p> Property Type Id Guid TemplateId string NotificationType NotificationTypeEnum"},{"location":"fod/database/entities/FodPickupLocation/","title":"FodPickupLocation","text":"<p>Description: </p> Property Type Address string? Name string? IsActive bool? FodServiceProvider FodServiceProvider FodServiceProviderId Guid?"},{"location":"fod/database/entities/FodPictures/","title":"FodPictures","text":"<p>Description: </p> Property Type Id Guid"},{"location":"fod/database/entities/FodRequest/","title":"FodRequest","text":""},{"location":"fod/database/entities/FodRequest/#descriere","title":"Descriere","text":"<p>Entitatea principal\u0103 care reprezint\u0103 o cerere depus\u0103 \u00een sistemul Front Office Digital. Aceast\u0103 entitate con\u021bine toate informa\u021biile despre solicitant, tipul cererii, statusul proces\u0103rii \u0219i leg\u0103turile c\u0103tre serviciile solicitate.</p>"},{"location":"fod/database/entities/FodRequest/#context-de-business","title":"Context de Business","text":"<ul> <li>Punct Central de Interac\u021biune: Reprezint\u0103 cererea cet\u0103\u021beanului pentru servicii publice electronice</li> <li>Conformitate Legal\u0103: Implementeaz\u0103 cerin\u021bele HG 128/2024 privind prestarea serviciilor publice prin intermediul Portalului Serviciilor Publice</li> <li>Integrare Multi-Sistem: Asigur\u0103 conexiunea \u00eentre cet\u0103\u021bean, institu\u021biile publice \u0219i sistemele de plat\u0103/livrare</li> <li>Trasabilitate Complet\u0103: Ofer\u0103 istoric complet al interac\u021biunilor pentru audit \u0219i analiz\u0103</li> </ul>"},{"location":"fod/database/entities/FodRequest/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodRequest/#identificare-si-tipologie","title":"Identificare \u0219i Tipologie","text":"<p>| Proprietate | Tip | Descriere | Constr\u00e2ngeri | Valid\u0103ri | | Id | Guid | Identificator unic al cererii | Primary Key, mo\u0219tenit din BaseEntity | - | | FodRequestTypeId | Guid | ID-ul tipului de cerere | Foreign Key c\u0103tre FodRequestType | Obligatoriu | | RequestNumber | string? | Num\u0103rul unic al cererii generat de sistem | Format: FOD-YYYY-NNNNNN | Generat automat, unic | | ServiceProviderNumber | string? | Num\u0103rul cererii primit de la furnizorul de servicii | - | Max 50 caractere |</p>"},{"location":"fod/database/entities/FodRequest/#date-solicitant","title":"Date Solicitant","text":"Proprietate Tip Descriere Constr\u00e2ngeri RequestorType PersonType Tipul solicitantului (fizic/juridic) Enum: PersonType RequestorFirstName string Prenumele solicitantului Obligatoriu RequestorLastName string Numele solicitantului Obligatoriu RequestorCompanyName string? Denumirea companiei (pentru persoane juridice) - RequestorIdnp string IDNP-ul solicitantului Obligatoriu, 13 caractere RequestorIdno string? IDNO pentru persoane juridice - RequestorRole string? Rolul solicitantului \u00een cadrul organiza\u021biei - RequestorEmail string? Email-ul solicitantului Format email valid RequestorPhone string? Telefonul solicitantului - RequestorBirthDate DateTime? Data na\u0219terii solicitantului - RequestorResidence string? Re\u0219edin\u021ba solicitantului - NonRezidentDocumentNumber string? Num\u0103rul documentului pentru nereziden\u021bi - RequestorIsAuthenticated bool Indic\u0103 dac\u0103 solicitantul s-a autentificat Default: false"},{"location":"fod/database/entities/FodRequest/#autorizare-mpower","title":"Autorizare MPower","text":"Proprietate Tip Descriere Constr\u00e2ngeri RequestorMPowerAuthorization string? Codul de autorizare MPower - MPowerAuthorizationCode string? Codul de autorizare MPower - MPowerAuthorizingPartyName string? Numele p\u0103r\u021bii care autorizeaz\u0103 - MPowerAuthorizingIdn string? IDNP-ul p\u0103r\u021bii care autorizeaz\u0103 - MPowerFullName string? Numele complet din MPower - AuthorizingPartyType int? Tipul p\u0103r\u021bii care autorizeaz\u0103 - OnBehalfOn OnBehalfOnEnum \u00cen numele cui se depune cererea Enum: OnBehalfOnEnum"},{"location":"fod/database/entities/FodRequest/#cups-centrul-unic-de-prestare-a-serviciilor","title":"CUPS (Centrul Unic de Prestare a Serviciilor)","text":"Proprietate Tip Descriere Constr\u00e2ngeri IsCups bool Indic\u0103 dac\u0103 cererea este depus\u0103 prin CUPS Default: false CupsIdn string? IDNP-ul reprezentantului CUPS - CupsFirstName string? Prenumele reprezentantului CUPS - CupsLastName string? Numele reprezentantului CUPS - CupsMPowerNumber string? Num\u0103rul MPower al reprezentantului CUPS -"},{"location":"fod/database/entities/FodRequest/#status-si-procesare","title":"Status \u0219i Procesare","text":"Proprietate Tip Descriere Constr\u00e2ngeri Status RequestStatus Status-ul vechi al cererii Obsolete, folose\u0219te FodStatus FodStatus FodRequestStatus? Status-ul actual al cererii Enum: FodRequestStatus SubmissionDate DateTime? Data depunerii cererii - ProcessingDate DateTime? Data proces\u0103rii cererii - EstimatedResolveDate DateTime? Data estimat\u0103 de rezolvare pentru serviciile primare - FinalEstimatedResolveDate DateTime? Data final\u0103 estimat\u0103 inclusiv apostilare/livrare - IsFromBackOffice bool Indic\u0103 dac\u0103 cererea vine din back-office Default: false"},{"location":"fod/database/entities/FodRequest/#plati","title":"Pl\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri PaidStatus PaymentStatus Status-ul pl\u0103\u021bii Enum: PaymentStatus PaymentDate DateTime? Data efectu\u0103rii pl\u0103\u021bii - PaymentConfirmDate DateTime? Data confirm\u0103rii pl\u0103\u021bii - PaymentInvoiceId string? ID-ul facturii de plat\u0103 - PaymentMethod string? Metoda de plat\u0103 utilizat\u0103 - Cost decimal? Costul total al cererii - MPayServiceId string? ID-ul serviciului MPay - MPayNumber string? Num\u0103rul tranzac\u021biei MPay -"},{"location":"fod/database/entities/FodRequest/#livrare-si-ridicare","title":"Livrare \u0219i Ridicare","text":"Proprietate Tip Descriere Constr\u00e2ngeri RequiresDelivery bool Indic\u0103 dac\u0103 necesit\u0103 livrare Default: false DeliveryId Guid? ID-ul detaliilor de livrare Foreign Key c\u0103tre ServiceRequestDelivery FodPickupLocationId string? ID-ul loca\u021biei de ridicare - FodPickupLocationName string? Numele loca\u021biei de ridicare - FodPickupLocationAdress string? Adresa loca\u021biei de ridicare -"},{"location":"fod/database/entities/FodRequest/#apostilare-si-documente","title":"Apostilare \u0219i Documente","text":"Proprietate Tip Descriere Constr\u00e2ngeri RequiresApostilation bool Indic\u0103 dac\u0103 necesit\u0103 apostilare Default: false ApostilationDetailsId Guid? ID-ul detaliilor de apostilare Foreign Key c\u0103tre FodApostilationDetails RequiresResponseOnPaper bool Indic\u0103 dac\u0103 r\u0103spunsul este solicitat pe h\u00e2rtie Default: false RequestSignableDocumentId Guid? ID-ul documentului semnabil al cererii Foreign Key c\u0103tre SignableDocument"},{"location":"fod/database/entities/FodRequest/#alte-proprietati","title":"Alte Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri JsonId Guid? ID-ul datelor JSON asociate Foreign Key c\u0103tre FodRequestJson ExecutionTermsId Guid? ID-ul termenilor de execu\u021bie Foreign Key c\u0103tre FodExecutionTerm ResponsibleUserId Guid? ID-ul utilizatorului responsabil Foreign Key c\u0103tre UserProfile FodResponsibleDivision string? Divizia responsabil\u0103 - TermsAndConditionsAccepted bool Acceptarea termenilor \u0219i condi\u021biilor Default: false RetireeWithAnAgeLimit bool Indic\u0103 dac\u0103 solicitantul este pensionar cu limit\u0103 de v\u00e2rst\u0103 Default: false PersonWithDisability bool Indic\u0103 dac\u0103 solicitantul are dizabilit\u0103\u021bi Default: false RequestorStatuteId Guid? ID-ul statutului solicitantului Foreign Key c\u0103tre FodRequestorStatute PictureId Guid? ID-ul pozei asociate Foreign Key c\u0103tre FodPictures ReasonCancel ReasonCancelEnum? Motivul anul\u0103rii cererii Enum: ReasonCancelEnum"},{"location":"fod/database/entities/FodRequest/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodRequest/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>FodServiceRequests (<code>IList&lt;FodServiceRequest&gt;</code>) - Lista cererilor de servicii asociate acestei cereri principale</li> <li>FodAdditionalInvoices (<code>IList&lt;FodAdditionalInvoice&gt;</code>) - Facturile adi\u021bionale asociate cererii</li> <li>AdditionalRequests (<code>ICollection&lt;FodAdditionalRequest&gt;</code>) - Cererile adi\u021bionale asociate</li> <li>Attachments (<code>ICollection&lt;FodRequestFile&gt;</code>) - Fi\u0219ierele ata\u0219ate la cerere</li> </ul>"},{"location":"fod/database/entities/FodRequest/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>Type (<code>FodRequestType</code>) - Tipul cererii prin FodRequestTypeId</li> <li>Delivery (<code>ServiceRequestDelivery</code>) - Detaliile de livrare prin DeliveryId</li> <li>ResponsibleUser (<code>UserProfile</code>) - Utilizatorul responsabil prin ResponsibleUserId</li> <li>RequestSignableDocument (<code>SignableDocument</code>) - Documentul semnabil al cererii</li> <li>Json (<code>FodRequestJson</code>) - Datele JSON asociate prin JsonId</li> <li>ApostilationDetails (<code>FodApostilationDetails</code>) - Detaliile de apostilare</li> <li>ExecutionTerms (<code>FodExecutionTerm</code>) - Termenii de execu\u021bie</li> <li>RequestorStatute (<code>FodRequestorStatute</code>) - Statutul solicitantului</li> <li>Picture (<code>FodPictures</code>) - Poza asociat\u0103</li> </ul>"},{"location":"fod/database/entities/FodRequest/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodRequest/#creare-cerere-noua","title":"Creare Cerere Nou\u0103","text":"<pre><code>var fodRequest = new FodRequest\n{\n    FodRequestTypeId = requestTypeId,\n    RequestorType = PersonType.Physical,\n    RequestorFirstName = \"Ion\",\n    RequestorLastName = \"Popescu\",\n    RequestorIdnp = \"2000000000001\",\n    RequestorEmail = \"ion.popescu@email.md\",\n    FodStatus = FodRequestStatus.Draft,\n    SubmissionDate = DateTime.UtcNow,\n    TermsAndConditionsAccepted = true\n};\n</code></pre>"},{"location":"fod/database/entities/FodRequest/#interogare-cereri-cu-servicii","title":"Interogare Cereri cu Servicii","text":"<pre><code>var requestsWithServices = await context.FodRequests\n    .Include(r =&gt; r.FodServiceRequests)\n        .ThenInclude(sr =&gt; sr.Service)\n    .Include(r =&gt; r.Type)\n    .Where(r =&gt; r.FodStatus == FodRequestStatus.InProgress)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequest/#verificare-status-plata","title":"Verificare Status Plat\u0103","text":"<pre><code>var paidRequests = await context.FodRequests\n    .Where(r =&gt; r.PaidStatus == PaymentStatus.Paid)\n    .OrderByDescending(r =&gt; r.PaymentDate)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequest/#procesare-cereri-cups","title":"Procesare Cereri CUPS","text":"<pre><code>public async Task&lt;FodRequest&gt; CreateCupsRequestAsync(CupsRequestDto dto)\n{\n    var request = new FodRequest\n    {\n        // Date solicitant\n        RequestorType = dto.RequestorType,\n        RequestorFirstName = dto.RequestorFirstName,\n        RequestorLastName = dto.RequestorLastName,\n        RequestorIdnp = dto.RequestorIdnp,\n\n        // Marcare ca cerere CUPS\n        IsCups = true,\n        CupsIdn = dto.CupsRepresentativeIdnp,\n        CupsFirstName = dto.CupsRepresentativeFirstName,\n        CupsLastName = dto.CupsRepresentativeLastName,\n        CupsMPowerNumber = dto.CupsMPowerNumber,\n\n        // Autorizare MPower pentru reprezentant\n        MPowerAuthorizationCode = dto.MPowerAuthCode,\n        OnBehalfOn = OnBehalfOnEnum.Individual,\n\n        FodStatus = FodRequestStatus.Submitted,\n        SubmissionDate = DateTime.UtcNow\n    };\n\n    context.FodRequests.Add(request);\n    await context.SaveChangesAsync();\n\n    // Generare num\u0103r cerere\n    request.RequestNumber = $\"FOD-{DateTime.Now.Year}-{request.Id.ToString(\"N\").Substring(0, 6).ToUpper()}\";\n    await context.SaveChangesAsync();\n\n    return request;\n}\n</code></pre>"},{"location":"fod/database/entities/FodRequest/#calcul-termen-final-cu-apostilare-si-livrare","title":"Calcul Termen Final cu Apostilare \u0219i Livrare","text":"<pre><code>public async Task UpdateFinalEstimatedDateAsync(Guid requestId)\n{\n    var request = await context.FodRequests\n        .Include(r =&gt; r.FodServiceRequests)\n            .ThenInclude(sr =&gt; sr.Service)\n        .Include(r =&gt; r.ExecutionTerms)\n        .FirstOrDefaultAsync(r =&gt; r.Id == requestId);\n\n    if (request == null) return;\n\n    // Calcul termen maxim servicii\n    var maxServiceDays = request.FodServiceRequests\n        .Max(sr =&gt; sr.Service.ExecutionDays ?? 0);\n\n    // Ad\u0103ugare zile pentru apostilare\n    if (request.RequiresApostilation)\n        maxServiceDays += 5; // 5 zile lucr\u0103toare pentru apostilare\n\n    // Ad\u0103ugare zile pentru livrare\n    if (request.RequiresDelivery)\n        maxServiceDays += 3; // 3 zile lucr\u0103toare pentru livrare\n\n    // Calcul dat\u0103 final\u0103 (exclus weekenduri)\n    request.FinalEstimatedResolveDate = CalculateWorkingDays(\n        request.SubmissionDate ?? DateTime.Now, \n        maxServiceDays);\n\n    await context.SaveChangesAsync();\n}\n\nprivate DateTime CalculateWorkingDays(DateTime startDate, int workingDays)\n{\n    var date = startDate;\n    while (workingDays &gt; 0)\n    {\n        date = date.AddDays(1);\n        if (date.DayOfWeek != DayOfWeek.Saturday &amp;&amp; \n            date.DayOfWeek != DayOfWeek.Sunday)\n        {\n            workingDays--;\n        }\n    }\n    return date;\n}\n</code></pre>"},{"location":"fod/database/entities/FodRequest/#note","title":"Note","text":"<ol> <li>Valid\u0103ri Importante:</li> <li>IDNP-ul trebuie s\u0103 fie valid (13 caractere cu validare algoritm)</li> <li>Email-ul trebuie s\u0103 aib\u0103 format valid</li> <li>RequestorFirstName \u0219i RequestorLastName sunt obligatorii</li> <li>Pentru persoane juridice, RequestorCompanyName devine obligatoriu</li> <li> <p>Validare IDNP:      <pre><code>public static bool ValidateIdnp(string idnp)\n{\n    if (string.IsNullOrEmpty(idnp) || idnp.Length != 13)\n        return false;\n\n    // Algoritm de validare IDNP Moldova\n    int[] weights = {7, 3, 1, 7, 3, 1, 7, 3, 1, 7, 3, 1};\n    int sum = 0;\n\n    for (int i = 0; i &lt; 12; i++)\n    {\n        if (!char.IsDigit(idnp[i])) return false;\n        sum += (idnp[i] - '0') * weights[i];\n    }\n\n    int checkDigit = (sum % 10 == 0) ? 0 : 10 - (sum % 10);\n    return checkDigit == (idnp[12] - '0');\n}\n</code></pre></p> </li> <li> <p>Fluxul de Status:</p> </li> <li>Draft \u2192 Submitted \u2192 InProgress \u2192 Completed/Rejected/Cancelled</li> <li>Statusul vechi (RequestStatus) este deprecat, folose\u0219te FodStatus</li> <li> <p>Diagrama de tranzi\u021bie:      <pre><code>Draft ----[Submit]----&gt; Submitted\n  |                          |\n  +------[Cancel]-----+      v\n                      |   InProgress\n                      |      |\n                      v      +---[Complete]---&gt; Completed\n                   Cancelled |                      |\n                             +---[Reject]-----&gt; Rejected\n</code></pre></p> </li> <li> <p>Considera\u021bii de Performan\u021b\u0103:</p> </li> <li>Pentru list\u0103ri mari, folose\u0219te paginare</li> <li>Include doar rela\u021biile necesare pentru a evita over-fetching</li> <li>Pentru rapoarte, consider\u0103 folosirea de view-uri sau stored procedures</li> <li> <p>Indexare recomandat\u0103:      <pre><code>CREATE INDEX IX_FodRequest_FodStatus ON FodRequests (FodStatus);\nCREATE INDEX IX_FodRequest_SubmissionDate ON FodRequests (SubmissionDate DESC);\nCREATE INDEX IX_FodRequest_RequestorIdnp ON FodRequests (RequestorIdnp);\nCREATE INDEX IX_FodRequest_RequestNumber ON FodRequests (RequestNumber);\n</code></pre></p> </li> <li> <p>Securitate:</p> </li> <li>Datele personale (IDNP, email, telefon) trebuie protejate</li> <li>Implementeaz\u0103 audit trail pentru modific\u0103ri</li> <li>Verific\u0103 permisiunile \u00eenainte de a permite modific\u0103ri</li> <li> <p>Cripteaz\u0103 datele sensibile \u00een repaus</p> </li> <li> <p>Integrare cu Sisteme Externe:</p> </li> <li>MPower: Autentificare \u0219i autorizare pentru ac\u021biuni \u00een numele altcuiva</li> <li>MPay: Procesare pl\u0103\u021bi electronice guvernamentale</li> <li>MDelivery: Livrare documente prin Po\u0219ta Moldovei</li> <li> <p>RSSP: Sincronizare cu Registrul de Stat al Serviciilor Publice</p> </li> <li> <p>Enum-uri Utilizate:    <pre><code>public enum PersonType \n{\n    Physical = 1,\n    Juridical = 2\n}\n\npublic enum FodRequestStatus\n{\n    Draft = 1,\n    Submitted = 2,\n    InProgress = 3,\n    Completed = 4,\n    Rejected = 5,\n    Cancelled = 6\n}\n\npublic enum PaymentStatus\n{\n    NotRequired = 0,\n    Pending = 1,\n    Paid = 2,\n    Failed = 3\n}\n\npublic enum OnBehalfOnEnum\n{\n    Self = 1,\n    Individual = 2,\n    Company = 3\n}\n\npublic enum ReasonCancelEnum\n{\n    UserRequest = 1,\n    PaymentTimeout = 2,\n    DocumentsIncomplete = 3,\n    SystemError = 4\n}\n</code></pre></p> </li> <li> <p>Gestiunea Erorilor:    <pre><code>public class FodRequestValidator\n{\n    public ValidationResult Validate(FodRequest request)\n    {\n        var errors = new List&lt;string&gt;();\n\n        if (!ValidateIdnp(request.RequestorIdnp))\n            errors.Add(\"IDNP invalid\");\n\n        if (!string.IsNullOrEmpty(request.RequestorEmail) &amp;&amp; \n            !Regex.IsMatch(request.RequestorEmail, @\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"))\n            errors.Add(\"Format email invalid\");\n\n        if (request.RequestorType == PersonType.Juridical &amp;&amp; \n            string.IsNullOrEmpty(request.RequestorCompanyName))\n            errors.Add(\"Denumirea companiei este obligatorie pentru persoane juridice\");\n\n        return new ValidationResult { IsValid = errors.Count == 0, Errors = errors };\n    }\n}\n</code></pre></p> </li> <li> <p>Migrare \u0219i Evolu\u021bie:</p> </li> <li>C\u00e2mpul <code>Status</code> este deprecat, utiliza\u021bi <code>FodStatus</code></li> <li>La migr\u0103ri, asigura\u021bi maparea corect\u0103 \u00eentre vechile \u0219i noile valori de status</li> <li>P\u0103stra\u021bi compatibilitatea cu sistemele legacy prin API versioning</li> </ol>"},{"location":"fod/database/entities/FodRequestDelivery/","title":"FodRequestDelivery","text":"<p>Description: </p> <p>No public properties found.</p>"},{"location":"fod/database/entities/FodRequestDeliveryStatusLog/","title":"FodRequestDeliveryStatusLog","text":"<p>Description: </p> Property Type Status DeliveryStatus Message string? CarrierName string? TrackingId string?"},{"location":"fod/database/entities/FodRequestFile/","title":"FodRequestFile","text":""},{"location":"fod/database/entities/FodRequestFile/#descriere","title":"Descriere","text":"<p>Entitatea de leg\u0103tur\u0103 care asociaz\u0103 fi\u0219ierele ata\u0219ate cu cererile din sistemul Front Office Digital. Aceast\u0103 entitate implementeaz\u0103 rela\u021bia many-to-many \u00eentre cereri \u0219i fi\u0219iere, permi\u021b\u00e2nd ata\u0219area de documente justificative, acte de identitate, procuri \u0219i alte documente necesare proces\u0103rii cererii.</p>"},{"location":"fod/database/entities/FodRequestFile/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodRequestFile/#chei-de-legatura","title":"Chei de Leg\u0103tur\u0103","text":"Proprietate Tip Descriere Constr\u00e2ngeri FileId Guid ID-ul fi\u0219ierului ata\u0219at Primary Key (parte), Foreign Key c\u0103tre File RequestId Guid ID-ul cererii asociate Primary Key (parte), Foreign Key c\u0103tre FodRequest"},{"location":"fod/database/entities/FodRequestFile/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodRequestFile/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>File (<code>File</code>) - Fi\u0219ierul ata\u0219at prin FileId</li> <li>Request (<code>FodRequest</code>) - Cererea la care este ata\u0219at fi\u0219ierul prin RequestId</li> </ul>"},{"location":"fod/database/entities/FodRequestFile/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodRequestFile/#atasare-fisier-la-cerere","title":"Ata\u0219are Fi\u0219ier la Cerere","text":"<pre><code>// Mai \u00eent\u00e2i salv\u0103m fi\u0219ierul\nvar file = new File\n{\n    Id = Guid.NewGuid(),\n    FileName = \"buletin_identitate.pdf\",\n    ContentType = \"application/pdf\",\n    Size = fileBytes.Length,\n    Content = fileBytes\n};\ncontext.Files.Add(file);\n\n// Apoi cre\u0103m asocierea\nvar requestFile = new FodRequestFile\n{\n    FileId = file.Id,\n    RequestId = requestId\n};\ncontext.FodRequestFiles.Add(requestFile);\n\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestFile/#obtinere-fisiere-pentru-o-cerere","title":"Ob\u021binere Fi\u0219iere pentru o Cerere","text":"<pre><code>var requestFiles = await context.FodRequestFiles\n    .Include(rf =&gt; rf.File)\n    .Where(rf =&gt; rf.RequestId == requestId)\n    .Select(rf =&gt; new\n    {\n        rf.File.FileName,\n        rf.File.ContentType,\n        rf.File.Size,\n        rf.FileId,\n        UploadDate = rf.File.CreatedDate\n    })\n    .OrderBy(f =&gt; f.UploadDate)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestFile/#verificare-documente-obligatorii","title":"Verificare Documente Obligatorii","text":"<pre><code>var request = await context.FodRequests\n    .Include(r =&gt; r.Attachments)\n        .ThenInclude(a =&gt; a.File)\n    .FirstOrDefaultAsync(r =&gt; r.Id == requestId);\n\nvar hasIdentityDocument = request.Attachments\n    .Any(a =&gt; a.File.FileName.Contains(\"buletin\") || \n              a.File.FileName.Contains(\"pasaport\"));\n\nvar hasPowerOfAttorney = request.Attachments\n    .Any(a =&gt; a.File.FileName.Contains(\"procura\"));\n\nif (!hasIdentityDocument)\n{\n    errors.Add(\"Lipse\u0219te documentul de identitate\");\n}\n\nif (request.OnBehalfOn == OnBehalfOnEnum.Other &amp;&amp; !hasPowerOfAttorney)\n{\n    errors.Add(\"Lipse\u0219te procura pentru reprezentare\");\n}\n</code></pre>"},{"location":"fod/database/entities/FodRequestFile/#stergere-atasament","title":"\u0218tergere Ata\u0219ament","text":"<pre><code>var requestFile = await context.FodRequestFiles\n    .FirstOrDefaultAsync(rf =&gt; rf.RequestId == requestId &amp;&amp; rf.FileId == fileId);\n\nif (requestFile != null)\n{\n    context.FodRequestFiles.Remove(requestFile);\n\n    // Op\u021bional: \u0219tergem \u0219i fi\u0219ierul dac\u0103 nu mai e folosit\n    var fileUsedElsewhere = await context.FodRequestFiles\n        .AnyAsync(rf =&gt; rf.FileId == fileId &amp;&amp; rf.RequestId != requestId);\n\n    if (!fileUsedElsewhere)\n    {\n        var file = await context.Files.FindAsync(fileId);\n        if (file != null)\n            context.Files.Remove(file);\n    }\n\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodRequestFile/#tipuri-comune-de-atasamente","title":"Tipuri Comune de Ata\u0219amente","text":"<ol> <li>Documente de Identitate:</li> <li>Buletin de identitate</li> <li>Pa\u0219aport</li> <li> <p>Permis de \u0219edere</p> </li> <li> <p>Documente de Reprezentare:</p> </li> <li>Procur\u0103 notarial\u0103</li> <li>Delega\u021bie</li> <li> <p>Ordin de numire</p> </li> <li> <p>Documente Justificative:</p> </li> <li>Certificate (na\u0219tere, c\u0103s\u0103torie, deces)</li> <li>Diplome \u0219i atestate</li> <li> <p>Contracte \u0219i acte de proprietate</p> </li> <li> <p>Documente Speciale:</p> </li> <li>Certificat de dizabilitate</li> <li>Legitima\u021bie de pensionar</li> <li>Carnet de veteran</li> </ol>"},{"location":"fod/database/entities/FodRequestFile/#note-importante","title":"Note Importante","text":"<ol> <li>Chei Compuse:</li> <li>Entitatea folose\u0219te o cheie primar\u0103 compus\u0103 din (FileId, RequestId)</li> <li> <p>Aceasta previne ata\u0219area aceluia\u0219i fi\u0219ier de mai multe ori la aceea\u0219i cerere</p> </li> <li> <p>Gestionarea Fi\u0219ierelor:</p> </li> <li>Fi\u0219ierele pot fi partajate \u00eentre mai multe cereri</li> <li>\u0218tergerea unei asocieri nu \u0219terge automat fi\u0219ierul</li> <li> <p>Implementa\u021bi logic\u0103 de cur\u0103\u021bare pentru fi\u0219iere orfane</p> </li> <li> <p>Valid\u0103ri \u0219i Limite:</p> </li> <li>Verifica\u021bi tipul \u0219i dimensiunea fi\u0219ierelor \u00eenainte de ata\u0219are</li> <li>Implementa\u021bi limite pentru num\u0103rul de ata\u0219amente per cerere</li> <li> <p>Valida\u021bi formatul fi\u0219ierelor (PDF, JPG, PNG, etc.)</p> </li> <li> <p>Securitate:</p> </li> <li>Verifica\u021bi permisiunile \u00eenainte de a permite accesul la fi\u0219iere</li> <li>Fi\u0219ierele con\u021bin date personale sensibile</li> <li> <p>Implementa\u021bi audit trail pentru acces \u0219i modific\u0103ri</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Pentru liste mari de ata\u0219amente, folosi\u021bi paginare</li> <li>Considera\u021bi stocarea fi\u0219ierelor \u00een blob storage pentru scalabilitate</li> <li>Implementa\u021bi caching pentru metadate frecvent accesate</li> </ol>"},{"location":"fod/database/entities/FodRequestJson/","title":"FodRequestJson","text":"<p>Description: </p> Property Type Json string"},{"location":"fod/database/entities/FodRequestJsonSignature/","title":"FodRequestJsonSignature","text":"<p>Description: </p> Property Type FodRequestJsonId Guid FodRequestJson FodRequestJson"},{"location":"fod/database/entities/FodRequestPayment/","title":"FodRequestPayment","text":""},{"location":"fod/database/entities/FodRequestPayment/#descriere","title":"Descriere","text":"<p>Reprezint\u0103 o plat\u0103 efectuat\u0103 pentru o cerere \u00een sistemul FOD. Aceast\u0103 entitate \u00eenregistreaz\u0103 detaliile pl\u0103\u021bilor efectuate de cet\u0103\u021beni pentru serviciile solicitate, permi\u021b\u00e2nd tracking-ul complet al tranzac\u021biilor financiare asociate cu cererile.</p>"},{"location":"fod/database/entities/FodRequestPayment/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al pl\u0103\u021bii Primary Key RequestId Guid ID-ul cererii pentru care s-a efectuat plata Foreign Key c\u0103tre FodRequest PaymentDate DateTime Data \u0219i ora efectu\u0103rii pl\u0103\u021bii Obligatoriu Amount decimal Suma pl\u0103tit\u0103 Column: decimal(18,2), Obligatoriu"},{"location":"fod/database/entities/FodRequestPayment/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodRequestPayment/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>Request (<code>FodRequest</code>) - Cererea pentru care s-a efectuat plata (prin RequestId)</li> </ul>"},{"location":"fod/database/entities/FodRequestPayment/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodRequestPayment/#inregistrare-plata-noua","title":"\u00cenregistrare Plat\u0103 Nou\u0103","text":"<pre><code>var payment = new FodRequestPayment\n{\n    RequestId = fodRequestId,\n    PaymentDate = DateTime.UtcNow,\n    Amount = 150.00m\n};\n\ncontext.FodRequestPayments.Add(payment);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestPayment/#calculare-total-plati-pentru-cerere","title":"Calculare Total Pl\u0103\u021bi pentru Cerere","text":"<pre><code>var totalPaid = await context.FodRequestPayments\n    .Where(p =&gt; p.RequestId == requestId)\n    .SumAsync(p =&gt; p.Amount);\n</code></pre>"},{"location":"fod/database/entities/FodRequestPayment/#verificare-plati-recente","title":"Verificare Pl\u0103\u021bi Recente","text":"<pre><code>var recentPayments = await context.FodRequestPayments\n    .Where(p =&gt; p.PaymentDate &gt;= DateTime.UtcNow.AddDays(-7))\n    .OrderByDescending(p =&gt; p.PaymentDate)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestPayment/#raport-plati-pe-perioada","title":"Raport Pl\u0103\u021bi pe Perioad\u0103","text":"<pre><code>var paymentReport = await context.FodRequestPayments\n    .Where(p =&gt; p.PaymentDate &gt;= startDate &amp;&amp; p.PaymentDate &lt;= endDate)\n    .GroupBy(p =&gt; p.PaymentDate.Date)\n    .Select(g =&gt; new \n    {\n        Date = g.Key,\n        TotalAmount = g.Sum(p =&gt; p.Amount),\n        PaymentCount = g.Count()\n    })\n    .OrderBy(r =&gt; r.Date)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestPayment/#verificare-status-plata-completa","title":"Verificare Status Plat\u0103 Complet\u0103","text":"<pre><code>// Verific\u0103 dac\u0103 cererea este pl\u0103tit\u0103 complet\nvar request = await context.FodRequests\n    .Include(r =&gt; r.FodServiceRequests)\n    .FirstOrDefaultAsync(r =&gt; r.Id == requestId);\n\nvar totalCost = request.FodServiceRequests.Sum(sr =&gt; sr.FinalCost);\nvar totalPaid = await context.FodRequestPayments\n    .Where(p =&gt; p.RequestId == requestId)\n    .SumAsync(p =&gt; p.Amount);\n\nvar isFullyPaid = totalPaid &gt;= totalCost;\n</code></pre>"},{"location":"fod/database/entities/FodRequestPayment/#note","title":"Note","text":"<ol> <li>Tracking Financiar:</li> <li>Permite \u00eenregistrarea pl\u0103\u021bilor multiple pentru aceea\u0219i cerere</li> <li>Util pentru pl\u0103\u021bi par\u021biale sau \u00een rate</li> <li> <p>PaymentDate \u00eenregistreaz\u0103 momentul exact al tranzac\u021biei</p> </li> <li> <p>Integrare cu Sisteme de Plat\u0103:</p> </li> <li>De\u0219i entitatea este simpl\u0103, se integreaz\u0103 cu MPay \u0219i alte sisteme</li> <li>Detaliile tranzac\u021biei (num\u0103r MPay, metod\u0103) sunt \u00een FodRequest</li> <li> <p>Aceast\u0103 entitate p\u0103streaz\u0103 doar esen\u021bialul pentru audit</p> </li> <li> <p>Considera\u021bii de Design:</p> </li> <li>Amount folose\u0219te decimal(18,2) pentru precizie monetar\u0103</li> <li>Nu stocheaz\u0103 detalii sensibile ale c\u0103r\u021bilor sau conturilor</li> <li> <p>Permite reconcilierea cu sistemele externe de plat\u0103</p> </li> <li> <p>Valid\u0103ri Recomandate:</p> </li> <li>Amount trebuie s\u0103 fie &gt; 0</li> <li>PaymentDate nu poate fi \u00een viitor</li> <li> <p>Verific\u0103 c\u0103 RequestId exist\u0103 \u00eenainte de inserare</p> </li> <li> <p>Best Practices:</p> </li> <li>Folose\u0219te tranzac\u021bii c\u00e2nd \u00eenregistrezi pl\u0103\u021bi</li> <li>Actualizeaz\u0103 FodRequest.PaidStatus dup\u0103 \u00eenregistrarea pl\u0103\u021bii</li> <li> <p>Implementeaz\u0103 audit trail pentru toate opera\u021biunile</p> </li> <li> <p>Raportare \u0219i Reconciliere:</p> </li> <li>Indexeaz\u0103 PaymentDate pentru query-uri rapide pe perioade</li> <li>Consider\u0103 view-uri materializate pentru rapoarte complexe</li> <li>P\u0103streaz\u0103 log-uri detaliate pentru audit financiar</li> </ol>"},{"location":"fod/database/entities/FodRequestType/","title":"FodRequestType","text":""},{"location":"fod/database/entities/FodRequestType/#descriere","title":"Descriere","text":"<p>Define\u0219te tipurile de cereri disponibile \u00een sistemul FOD cu toate configur\u0103rile \u0219i regulile specifice. Fiecare tip de cerere reprezint\u0103 o categorie de servicii (ex: acte de identitate, certificate, autoriza\u021bii) cu set\u0103ri proprii privind autentificarea, documentele necesare \u0219i modul de procesare.</p>"},{"location":"fod/database/entities/FodRequestType/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al tipului de cerere Primary Key Name string Denumirea tipului de cerere Obligatoriu Code string Codul unic al tipului de cerere Obligatoriu, Unic MPayCode string? Codul pentru integrare cu sistemul MPay - HideOnInitialPage bool Ascunde acest tip pe pagina ini\u021bial\u0103 Default: false IsEnabled bool Indic\u0103 dac\u0103 tipul este activ Default: true AllowMultipleServices bool Permite selectarea mai multor servicii Default: false PersonType RequestPersonType? Tipul de persoane care pot depune (fizic/juridic) Enum: RequestPersonType AuthentificationStatus AuthentificationStatus? Nivelul de autentificare necesar Enum: AuthentificationStatus AvailableMPowerAuthorization bool Disponibilitate autorizare MPower Default: false MPowerAuthorizationCodes string[]? Codurile de autorizare MPower permise Array JSON ServiceProviderId Guid? ID-ul furnizorului de servicii Foreign Key c\u0103tre FodServiceProvider AllowsElectronicDocument bool Permite documente electronice Default: true AllowsResponseOnPaper bool Permite r\u0103spuns pe h\u00e2rtie Default: false AllowsDelivery bool Permite livrare la domiciliu Default: false AllowsPickup bool Permite ridicare de la ghi\u0219eu Default: true SaveBirthDate bool Salveaz\u0103 data na\u0219terii solicitantului Default: false SaveResidence bool Salveaz\u0103 re\u0219edin\u021ba solicitantului Default: false SaveLastPhoto bool Salveaz\u0103 ultima fotografie Default: false RequestTypePhone string? Telefon de contact specific tipului - RequestTypeEmail string? Email de contact specific tipului - RequestorPhoneRequired bool Telefon solicitant obligatoriu Default: false RequestorEmailRequired bool Email solicitant obligatoriu Default: false InformativeMessage string? Mesaj informativ pentru utilizatori - ReceptionModeType ReceptionModeType Modul de recep\u021bionare a r\u0103spunsului Enum: ReceptionModeType ReceptionModeStaticMessage string? Mesaj static pentru modul de recep\u021bionare - ShowRequestingAsType bool Afi\u0219eaz\u0103 op\u021biunea \"\u00cen numele cui\" Default: false"},{"location":"fod/database/entities/FodRequestType/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodRequestType/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>ServiceProvider (<code>FodServiceProvider</code>) - Furnizorul care proceseaz\u0103 acest tip de cereri</li> </ul>"},{"location":"fod/database/entities/FodRequestType/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>Services (<code>ICollection&lt;FodRequestTypeService&gt;</code>) - Serviciile disponibile pentru acest tip</li> <li>TermsAndConditions (<code>IList&lt;FodTermsAndCondition&gt;</code>) - Termenii \u0219i condi\u021biile asociate</li> <li>RequestorStatute (<code>ICollection&lt;FodRequestorStatute&gt;</code>) - Statuturile speciale ale solicitan\u021bilor</li> <li>NotificationTypes (<code>ICollection&lt;FodNotificationType&gt;</code>) - Tipurile de notific\u0103ri configurate</li> </ul>"},{"location":"fod/database/entities/FodRequestType/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodRequestType/#creare-tip-de-cerere-nou","title":"Creare Tip de Cerere Nou","text":"<pre><code>var requestType = new FodRequestType\n{\n    Name = \"Eliberare certificate de stare civil\u0103\",\n    Code = \"CERT_STARE_CIVILA\",\n    MPayCode = \"CSC001\",\n    ServiceProviderId = aspServiceProviderId,\n    IsEnabled = true,\n    AllowMultipleServices = true,\n    PersonType = RequestPersonType.Physical,\n    AuthentificationStatus = AuthentificationStatus.Required,\n    AllowsElectronicDocument = true,\n    AllowsDelivery = true,\n    AllowsPickup = true,\n    RequestorEmailRequired = true,\n    InformativeMessage = \"Certificatele se elibereaz\u0103 \u00een termen de 3 zile lucr\u0103toare\"\n};\n\ncontext.FodRequestTypes.Add(requestType);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestType/#configurare-servicii-pentru-tip","title":"Configurare Servicii pentru Tip","text":"<pre><code>// Adaug\u0103 servicii disponibile\nvar services = new List&lt;FodRequestTypeService&gt;\n{\n    new FodRequestTypeService \n    { \n        RequestTypeId = requestType.Id, \n        ServiceId = certificatNastereId \n    },\n    new FodRequestTypeService \n    { \n        RequestTypeId = requestType.Id, \n        ServiceId = certificatCasatorieId \n    },\n    new FodRequestTypeService \n    { \n        RequestTypeId = requestType.Id, \n        ServiceId = certificatDecesId \n    }\n};\n\ncontext.FodRequestTypeServices.AddRange(services);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestType/#listare-tipuri-active-cu-servicii","title":"Listare Tipuri Active cu Servicii","text":"<pre><code>var activeTypes = await context.FodRequestTypes\n    .Include(rt =&gt; rt.Services)\n        .ThenInclude(rts =&gt; rts.Service)\n    .Include(rt =&gt; rt.ServiceProvider)\n    .Where(rt =&gt; rt.IsEnabled &amp;&amp; !rt.HideOnInitialPage)\n    .Select(rt =&gt; new\n    {\n        rt.Id,\n        rt.Name,\n        rt.Code,\n        Provider = rt.ServiceProvider.Name,\n        ServiceCount = rt.Services.Count(s =&gt; s.Service.Enabled),\n        RequiresAuth = rt.AuthentificationStatus == AuthentificationStatus.Required\n    })\n    .OrderBy(rt =&gt; rt.Name)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestType/#verificare-permisiuni-pentru-tip","title":"Verificare Permisiuni pentru Tip","text":"<pre><code>public bool CanUserAccessRequestType(FodRequestType requestType, UserContext user)\n{\n    // Verific\u0103 tipul de persoan\u0103\n    if (requestType.PersonType.HasValue)\n    {\n        if (requestType.PersonType == RequestPersonType.Physical &amp;&amp; user.IsCompany)\n            return false;\n        if (requestType.PersonType == RequestPersonType.Juridical &amp;&amp; !user.IsCompany)\n            return false;\n    }\n\n    // Verific\u0103 autentificarea\n    if (requestType.AuthentificationStatus == AuthentificationStatus.Required &amp;&amp; !user.IsAuthenticated)\n        return false;\n\n    // Verific\u0103 MPower dac\u0103 este necesar\n    if (requestType.AvailableMPowerAuthorization &amp;&amp; \n        requestType.MPowerAuthorizationCodes?.Any() == true)\n    {\n        return user.MPowerCodes.Any(code =&gt; \n            requestType.MPowerAuthorizationCodes.Contains(code));\n    }\n\n    return true;\n}\n</code></pre>"},{"location":"fod/database/entities/FodRequestType/#adaugare-termeni-si-conditii","title":"Ad\u0103ugare Termeni \u0219i Condi\u021bii","text":"<pre><code>var termsAndConditions = new FodTermsAndCondition\n{\n    RequestTypeId = requestType.Id,\n    Version = \"1.0\",\n    Content = \"Termenii \u0219i condi\u021biile pentru serviciul...\",\n    EffectiveDate = DateTime.UtcNow,\n    IsActive = true\n};\n\ncontext.FodTermsAndConditions.Add(termsAndConditions);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodRequestType/#note","title":"Note","text":"<ol> <li>Configurare \u0219i Activare:</li> <li>IsEnabled = false dezactiveaz\u0103 complet tipul</li> <li>HideOnInitialPage ascunde dar permite acces direct prin link</li> <li> <p>Verifica\u021bi toate serviciile asociate \u00eenainte de dezactivare</p> </li> <li> <p>Autentificare \u0219i Autorizare:</p> </li> <li>AuthentificationStatus determin\u0103 necesitatea autentific\u0103rii</li> <li>PersonType restric\u021bioneaz\u0103 accesul pe tip de persoan\u0103</li> <li> <p>MPower permite delegarea autorit\u0103\u021bii</p> </li> <li> <p>Moduri de Livrare:</p> </li> <li>AllowsElectronicDocument - desc\u0103rcare online</li> <li>AllowsResponseOnPaper - r\u0103spuns fizic</li> <li>AllowsDelivery - livrare prin curier</li> <li> <p>AllowsPickup - ridicare de la ghi\u0219eu</p> </li> <li> <p>Date Adi\u021bionale:</p> </li> <li>SaveBirthDate, SaveResidence, SaveLastPhoto - pentru servicii specifice</li> <li>Folosite pentru pre-completare \u00een cereri ulterioare</li> <li> <p>Respecta\u021bi GDPR la colectare</p> </li> <li> <p>Comunicare:</p> </li> <li>RequestTypePhone/Email - contact specific pentru tip</li> <li>RequestorPhoneRequired/EmailRequired - valid\u0103ri obligatorii</li> <li> <p>InformativeMessage - informa\u021bii importante pentru utilizatori</p> </li> <li> <p>Best Practices:</p> </li> <li>Folosi\u021bi coduri descriptive \u0219i unice</li> <li>Configura\u021bi corect toate op\u021biunile \u00eenainte de activare</li> <li>Testa\u021bi fluxul complet pentru fiecare tip nou</li> <li>Documenta\u021bi schimb\u0103rile de configurare</li> </ol>"},{"location":"fod/database/entities/FodRequestTypeService/","title":"FodRequestTypeService","text":"<p>Description: </p> <p>No public properties found.</p>"},{"location":"fod/database/entities/FodRequestorStatute/","title":"FodRequestorStatute","text":"<p>Description: </p> Property Type Code string? Order int Statute string Template int"},{"location":"fod/database/entities/FodResponseDataMDocsDocument/","title":"FodResponseDataMDocsDocument","text":"<p>Description: </p> <p>No public properties found.</p>"},{"location":"fod/database/entities/FodResponseDocument/","title":"FodResponseDocument","text":"<p>Description: </p> <p>No public properties found.</p>"},{"location":"fod/database/entities/FodResponseJson/","title":"FodResponseJson","text":"<p>Description: </p> Property Type Id Guid Json string"},{"location":"fod/database/entities/FodResponseJsonSignature/","title":"FodResponseJsonSignature","text":"<p>Description: </p> Property Type FodResponseJsonId Guid ResponseJson FodResponseJson"},{"location":"fod/database/entities/FodService/","title":"FodService","text":""},{"location":"fod/database/entities/FodService/#descriere","title":"Descriere","text":"<p>Reprezint\u0103 un serviciu disponibil \u00een sistemul FOD care poate fi solicitat de cet\u0103\u021beni. Aceast\u0103 entitate define\u0219te caracteristicile serviciului, cerin\u021bele de autentificare, tipurile de documente necesare \u0219i configur\u0103rile specifice pentru procesarea cererilor.</p>"},{"location":"fod/database/entities/FodService/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodService/#identificare-si-informatii-de-baza","title":"Identificare \u0219i Informa\u021bii de Baz\u0103","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al serviciului Primary Key Code string Codul unic al serviciului \u00een sistemul FOD Obligatoriu, Unic Name string Denumirea serviciului Obligatoriu RsspaCode string Codul serviciului \u00een Registrul de Stat al Serviciilor Publice Administrative Obligatoriu Enabled bool Indic\u0103 dac\u0103 serviciul este activ \u0219i disponibil Default: true"},{"location":"fod/database/entities/FodService/#configurare-comportament","title":"Configurare Comportament","text":"Proprietate Tip Descriere Constr\u00e2ngeri AllowMultipleSelection bool Permite selectarea multipl\u0103 a acestui serviciu \u00eentr-o cerere Default: false RequiresResponseDataFile bool Indic\u0103 dac\u0103 r\u0103spunsul necesit\u0103 un fi\u0219ier ata\u0219at Default: false RequiresResponseDataFileSignature bool Indic\u0103 dac\u0103 fi\u0219ierul de r\u0103spuns necesit\u0103 semn\u0103tur\u0103 Default: false"},{"location":"fod/database/entities/FodService/#autentificare-si-autorizare","title":"Autentificare \u0219i Autorizare","text":"Proprietate Tip Descriere Constr\u00e2ngeri PersonType RequestPersonType? Tipul de persoan\u0103 care poate solicita serviciul Enum: RequestPersonType AuthentificationStatus AuthentificationStatus? Nivelul de autentificare necesar Enum: AuthentificationStatus MPowerAuthorizationTypeCode string? Codul tipului de autorizare MPower necesar - MPowerAuthorizationTypeCustomFieldCode string? Codul c\u00e2mpului personalizat pentru autorizare MPower -"},{"location":"fod/database/entities/FodService/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodService/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>RequestTypes (<code>ICollection&lt;FodRequestTypeService&gt;</code>) - Tipurile de cereri care pot include acest serviciu</li> <li>ExecutionTerms (<code>ICollection&lt;FodExecutionTerm&gt;</code>) - Termenii de execu\u021bie defini\u021bi pentru serviciu</li> <li>DocumentTypes (<code>ICollection&lt;FodServiceDocumentType&gt;</code>) - Tipurile de documente necesare pentru serviciu</li> <li>AdditionalDatas (<code>ICollection&lt;FodServiceAdditionalData&gt;</code>) - Datele adi\u021bionale specifice serviciului</li> </ul>"},{"location":"fod/database/entities/FodService/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodService/#definire-serviciu-nou","title":"Definire Serviciu Nou","text":"<pre><code>var service = new FodService\n{\n    Code = \"CERT_NASTERE\",\n    Name = \"Certificat de na\u0219tere\",\n    RsspaCode = \"RS001\",\n    Enabled = true,\n    PersonType = RequestPersonType.Both,\n    AuthentificationStatus = AuthentificationStatus.Required,\n    RequiresResponseDataFile = true,\n    RequiresResponseDataFileSignature = true\n};\n</code></pre>"},{"location":"fod/database/entities/FodService/#configurare-documente-necesare","title":"Configurare Documente Necesare","text":"<pre><code>// Adaug\u0103 tipuri de documente necesare\nservice.DocumentTypes.Add(new FodServiceDocumentType\n{\n    ServiceId = service.Id,\n    DocumentTypeId = buletinTypeId,\n    IsMandatory = true,\n    MaxFiles = 1\n});\n</code></pre>"},{"location":"fod/database/entities/FodService/#interogare-servicii-active-cu-documente","title":"Interogare Servicii Active cu Documente","text":"<pre><code>var activeServices = await context.FodServices\n    .Include(s =&gt; s.DocumentTypes)\n        .ThenInclude(dt =&gt; dt.DocumentType)\n    .Include(s =&gt; s.AdditionalDatas)\n    .Where(s =&gt; s.Enabled)\n    .OrderBy(s =&gt; s.Name)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodService/#verificare-servicii-care-necesita-autentificare","title":"Verificare Servicii care Necesit\u0103 Autentificare","text":"<pre><code>var authenticatedServices = await context.FodServices\n    .Where(s =&gt; s.AuthentificationStatus == AuthentificationStatus.Required)\n    .Select(s =&gt; new { s.Code, s.Name, s.MPowerAuthorizationTypeCode })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodService/#servicii-cu-selectie-multipla","title":"Servicii cu Selec\u021bie Multipl\u0103","text":"<pre><code>var multiSelectServices = await context.FodServices\n    .Where(s =&gt; s.AllowMultipleSelection &amp;&amp; s.Enabled)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodService/#note","title":"Note","text":"<ol> <li>Coduri \u0219i Identificare:</li> <li><code>Code</code> este folosit intern \u00een sistemul FOD</li> <li><code>RsspaCode</code> asigur\u0103 compatibilitatea cu Registrul de Stat</li> <li> <p>Ambele coduri trebuie s\u0103 fie unice</p> </li> <li> <p>Autentificare \u0219i Autorizare:</p> </li> <li><code>AuthentificationStatus</code> determin\u0103 dac\u0103 utilizatorul trebuie s\u0103 fie autentificat</li> <li><code>PersonType</code> restric\u021bioneaz\u0103 cine poate solicita serviciul (fizic/juridic/ambele)</li> <li> <p>MPower fields permit delegarea autoriz\u0103rii</p> </li> <li> <p>Configur\u0103ri Importante:</p> </li> <li><code>AllowMultipleSelection</code> = true permite solicitarea aceluia\u0219i serviciu de mai multe ori \u00eentr-o cerere</li> <li><code>RequiresResponseDataFile</code> indic\u0103 necesitatea unui document oficial ca r\u0103spuns</li> <li> <p><code>RequiresResponseDataFileSignature</code> adaug\u0103 cerin\u021ba de semn\u0103tur\u0103 digital\u0103</p> </li> <li> <p>Rela\u021bii cu Alte Entit\u0103\u021bi:</p> </li> <li>Un serviciu poate fi inclus \u00een multiple tipuri de cereri (FodRequestType)</li> <li>Fiecare serviciu poate avea termene de execu\u021bie diferite</li> <li> <p>Documentele necesare sunt configurabile per serviciu</p> </li> <li> <p>Best Practices:</p> </li> <li>Verifica\u021bi \u00eentotdeauna <code>Enabled</code> \u00eenainte de a permite selectarea</li> <li>Include\u021bi rela\u021biile necesare pentru a evita query-uri multiple</li> <li> <p>Folosi\u021bi proiec\u021bii pentru liste \u00een UI pentru performan\u021b\u0103 optim\u0103</p> </li> <li> <p>Valid\u0103ri Recomandate:</p> </li> <li>Code \u0219i RsspaCode trebuie s\u0103 fie unice</li> <li>Dac\u0103 RequiresResponseDataFileSignature = true, atunci RequiresResponseDataFile trebuie s\u0103 fie true</li> <li>PersonType \u0219i AuthentificationStatus trebuie verificate la crearea cererii</li> </ol>"},{"location":"fod/database/entities/FodServiceAdditionalData/","title":"FodServiceAdditionalData","text":"<p>Description: </p> Property Type AdditionalData FodAdditionalData?"},{"location":"fod/database/entities/FodServiceDocumentType/","title":"FodServiceDocumentType","text":"<p>Description: </p> <p>No public properties found.</p>"},{"location":"fod/database/entities/FodServiceProvider/","title":"FodServiceProvider","text":""},{"location":"fod/database/entities/FodServiceProvider/#descriere","title":"Descriere","text":"<p>Reprezint\u0103 furnizorii de servicii publice - institu\u021biile guvernamentale care proceseaz\u0103 \u0219i ofer\u0103 serviciile solicitate prin sistemul FOD. Ace\u0219tia pot fi ministere, agen\u021bii, prim\u0103rii sau alte institu\u021bii publice care presteaz\u0103 servicii pentru cet\u0103\u021beni.</p>"},{"location":"fod/database/entities/FodServiceProvider/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al furnizorului Primary Key, mo\u0219tenit din BaseEntity Idno string? Codul fiscal (IDNO) al institu\u021biei Unic c\u00e2nd specificat Name string? Denumirea oficial\u0103 a institu\u021biei - Enabled bool Indic\u0103 dac\u0103 furnizorul este activ \u00een sistem Default: true BankAccount string? Contul bancar pentru \u00eencasarea pl\u0103\u021bilor Format IBAN BankCode string? Codul b\u0103ncii - Phone string? Num\u0103r de telefon de contact - Email string? Adresa de email oficial\u0103 Format email valid CreateDate DateTime? Data \u00eenregistr\u0103rii \u00een sistem Mo\u0219tenit din BaseEntity UpdateDate DateTime? Data ultimei actualiz\u0103ri Mo\u0219tenit din BaseEntity CreateUserId string? ID-ul utilizatorului care a \u00eenregistrat Mo\u0219tenit din BaseEntity UpdateUserId string? ID-ul utilizatorului care a actualizat Mo\u0219tenit din BaseEntity CreateUserName string? Numele utilizatorului care a \u00eenregistrat Mo\u0219tenit din BaseEntity UpdateUserName string? Numele utilizatorului care a actualizat Mo\u0219tenit din BaseEntity"},{"location":"fod/database/entities/FodServiceProvider/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodServiceProvider/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>FodRequestType - Tipurile de cereri asociate cu acest furnizor</li> <li>WorkingProgram - Programul de lucru al furnizorului</li> <li>ExceptionWorkingProgram - Excep\u021biile de la programul normal</li> </ul>"},{"location":"fod/database/entities/FodServiceProvider/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodServiceProvider/#inregistrare-furnizor-nou","title":"\u00cenregistrare Furnizor Nou","text":"<pre><code>var serviceProvider = new FodServiceProvider\n{\n    Idno = \"1003600000000\",\n    Name = \"Agen\u021bia Servicii Publice\",\n    Enabled = true,\n    BankAccount = \"MD00XX000000000000000000\",\n    BankCode = \"AGRNMD2X\",\n    Phone = \"+373 22 123456\",\n    Email = \"contact@asp.gov.md\"\n};\n\ncontext.FodServiceProviders.Add(serviceProvider);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceProvider/#asociere-cu-tip-de-cerere","title":"Asociere cu Tip de Cerere","text":"<pre><code>var requestType = new FodRequestType\n{\n    Name = \"Eliberare acte de identitate\",\n    Code = \"ACTE_IDENTITATE\",\n    ServiceProviderId = serviceProvider.Id,\n    IsEnabled = true\n};\n\ncontext.FodRequestTypes.Add(requestType);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceProvider/#listare-furnizori-activi","title":"Listare Furnizori Activi","text":"<pre><code>var activeProviders = await context.FodServiceProviders\n    .Where(sp =&gt; sp.Enabled)\n    .OrderBy(sp =&gt; sp.Name)\n    .Select(sp =&gt; new\n    {\n        sp.Id,\n        sp.Name,\n        sp.Email,\n        sp.Phone,\n        RequestTypesCount = context.FodRequestTypes\n            .Count(rt =&gt; rt.ServiceProviderId == sp.Id &amp;&amp; rt.IsEnabled)\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceProvider/#configurare-program-de-lucru","title":"Configurare Program de Lucru","text":"<pre><code>// Program standard luni-vineri\nfor (int day = 1; day &lt;= 5; day++)\n{\n    context.WorkingPrograms.Add(new WorkingProgram\n    {\n        ServiceProviderId = serviceProvider.Id,\n        DayOfWeek = day,\n        StartTime = new TimeSpan(8, 0, 0),\n        EndTime = new TimeSpan(17, 0, 0),\n        IsWorkingDay = true\n    });\n}\n\n// Weekend - \u00eenchis\nfor (int day = 6; day &lt;= 7; day++)\n{\n    context.WorkingPrograms.Add(new WorkingProgram\n    {\n        ServiceProviderId = serviceProvider.Id,\n        DayOfWeek = day,\n        IsWorkingDay = false\n    });\n}\n</code></pre>"},{"location":"fod/database/entities/FodServiceProvider/#raport-plati-per-furnizor","title":"Raport Pl\u0103\u021bi per Furnizor","text":"<pre><code>var paymentReport = await context.FodRequests\n    .Include(r =&gt; r.Type)\n    .Where(r =&gt; r.Type.ServiceProviderId == providerId &amp;&amp; \n                r.PaidStatus == PaymentStatus.Paid)\n    .GroupBy(r =&gt; new { r.PaymentDate.Value.Year, r.PaymentDate.Value.Month })\n    .Select(g =&gt; new\n    {\n        Year = g.Key.Year,\n        Month = g.Key.Month,\n        TotalAmount = g.Sum(r =&gt; r.Cost ?? 0),\n        RequestCount = g.Count()\n    })\n    .OrderByDescending(r =&gt; r.Year)\n    .ThenByDescending(r =&gt; r.Month)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceProvider/#note","title":"Note","text":"<ol> <li>Identificare \u0219i Validare:</li> <li>IDNO este codul fiscal unic al institu\u021biei</li> <li>Verifica\u021bi validitatea IDNO conform standardelor na\u021bionale</li> <li> <p>Numele trebuie s\u0103 corespund\u0103 cu denumirea oficial\u0103 din registre</p> </li> <li> <p>Informa\u021bii Bancare:</p> </li> <li>BankAccount trebuie s\u0103 fie un IBAN valid</li> <li>Folosit pentru virarea taxelor colectate</li> <li> <p>Actualiza\u021bi periodic pentru a evita erori de plat\u0103</p> </li> <li> <p>Status \u0219i Disponibilitate:</p> </li> <li>Enabled = false dezactiveaz\u0103 toate serviciile furnizorului</li> <li>Verifica\u021bi impactul \u00eenainte de dezactivare</li> <li> <p>P\u0103stra\u021bi istoric pentru audit</p> </li> <li> <p>Integrare cu Servicii:</p> </li> <li>Un furnizor poate oferi multiple tipuri de cereri</li> <li>Fiecare tip de cerere are un singur furnizor</li> <li> <p>Serviciile sunt configurate separat per tip de cerere</p> </li> <li> <p>Program de Lucru:</p> </li> <li>Gestionat prin entit\u0103\u021bile WorkingProgram \u0219i ExceptionWorkingProgram</li> <li>Afecteaz\u0103 disponibilitatea serviciilor online</li> <li> <p>Important pentru calculul termenelor de procesare</p> </li> <li> <p>Best Practices:</p> </li> <li>Men\u021bine\u021bi datele de contact actualizate</li> <li>Implementa\u021bi notific\u0103ri pentru schimb\u0103ri importante</li> <li>Verifica\u021bi periodic furnizorii inactivi</li> <li>Arhiva\u021bi \u00een loc s\u0103 \u0219terge\u021bi pentru p\u0103strarea istoricului</li> </ol>"},{"location":"fod/database/entities/FodServiceRequest/","title":"FodServiceRequest","text":""},{"location":"fod/database/entities/FodServiceRequest/#descriere","title":"Descriere","text":"<p>Reprezint\u0103 o cerere individual\u0103 de serviciu \u00een cadrul unei cereri principale (FodRequest). O cerere principal\u0103 poate con\u021bine multiple cereri de servicii, fiecare reprezent\u00e2nd un serviciu specific solicitat de cet\u0103\u021bean. Aceast\u0103 entitate gestioneaz\u0103 costurile, statusul \u0219i toate datele asociate cu prestarea unui serviciu individual.</p>"},{"location":"fod/database/entities/FodServiceRequest/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodServiceRequest/#identificare-si-relatii","title":"Identificare \u0219i Rela\u021bii","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al cererii de serviciu Primary Key ServiceId Guid ID-ul serviciului solicitat Foreign Key c\u0103tre FodService RequestId Guid? ID-ul cererii principale Foreign Key c\u0103tre FodRequest Number string? Num\u0103rul unic al cererii de serviciu Format specific serviciului ServiceProviderNumber string? Num\u0103rul atribuit de furnizorul de servicii - ExternalBackofficeServiceRequestNumber string? Num\u0103rul din sistemul backoffice extern -"},{"location":"fod/database/entities/FodServiceRequest/#informatii-serviciu","title":"Informa\u021bii Serviciu","text":"Proprietate Tip Descriere Constr\u00e2ngeri ServiceName string? Numele serviciului (copie local\u0103 pentru istoric) - Status ServiceRequestStatus Statusul cererii de serviciu Enum: ServiceRequestStatus, Default: New"},{"location":"fod/database/entities/FodServiceRequest/#costuri-si-taxe","title":"Costuri \u0219i Taxe","text":"Proprietate Tip Descriere Constr\u00e2ngeri Cost decimal Costul serviciului - StateTax decimal Taxa de stat asociat\u0103 - InitialCost decimal Costul ini\u021bial \u00eenainte de reduceri Column: decimal(18,2) FinalCost decimal Costul final dup\u0103 aplicarea reducerilor Column: decimal(18,2) HasDelayedPayment bool Indic\u0103 dac\u0103 plata poate fi am\u00e2nat\u0103 Default: false HasDynamicFee bool Indic\u0103 dac\u0103 taxa este dinamic\u0103 Default: false"},{"location":"fod/database/entities/FodServiceRequest/#apostilare","title":"Apostilare","text":"Proprietate Tip Descriere Constr\u00e2ngeri ApostilationServiceRequestNumber string? Num\u0103rul cererii de apostilare - ApostilaStatus FodServiceRequestStatus Statusul apostil\u0103rii Enum: FodServiceRequestStatus SentToApostillation bool Indic\u0103 dac\u0103 a fost trimis la apostilare Default: false SentToApostillationDate DateTime? Data trimiterii la apostilare -"},{"location":"fod/database/entities/FodServiceRequest/#date-raspuns-si-termene","title":"Date R\u0103spuns \u0219i Termene","text":"Proprietate Tip Descriere Constr\u00e2ngeri ServiceRequestResponseDataId Guid? ID-ul datelor de r\u0103spuns principale Foreign Key c\u0103tre FodServiceRequestResponseData JsonResponseId Guid? ID-ul r\u0103spunsului JSON Foreign Key c\u0103tre FodResponseJson FodExecutionTermId Guid? ID-ul termenelor de execu\u021bie FOD Foreign Key c\u0103tre FodExecutionTerm RsspaExecutionTermsId Guid? ID-ul termenelor de execu\u021bie RSSPA Foreign Key c\u0103tre RSSPAExecutionTerm"},{"location":"fod/database/entities/FodServiceRequest/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodServiceRequest/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>Service (<code>FodService</code>) - Serviciul solicitat prin ServiceId</li> <li>Request (<code>FodRequest</code>) - Cererea principal\u0103 prin RequestId</li> <li>ResponseData (<code>FodServiceRequestResponseData</code>) - Datele de r\u0103spuns principale</li> <li>JsonResponse (<code>FodResponseJson</code>) - R\u0103spunsul \u00een format JSON</li> <li>FodExecutionTerm (<code>FodExecutionTerm</code>) - Termenii de execu\u021bie FOD</li> <li>RsspaExecutionTerm (<code>RSSPAExecutionTerm</code>) - Termenii de execu\u021bie RSSPA</li> </ul>"},{"location":"fod/database/entities/FodServiceRequest/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>ResponseDatas (<code>ICollection&lt;FodServiceRequestResponseData&gt;</code>) - Toate datele de r\u0103spuns asociate</li> <li>Discounts (<code>ICollection&lt;ServiceRequestDiscount&gt;</code>) - Reducerile aplicate</li> <li>Attachments (<code>ICollection&lt;FodServiceRequestFile&gt;</code>) - Fi\u0219ierele ata\u0219ate</li> <li>AdditionalDatas (<code>ICollection&lt;FodServiceRequestAdditionalData&gt;</code>) - Date adi\u021bionale specifice serviciului</li> </ul>"},{"location":"fod/database/entities/FodServiceRequest/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodServiceRequest/#creare-cerere-de-serviciu","title":"Creare Cerere de Serviciu","text":"<pre><code>var serviceRequest = new FodServiceRequest\n{\n    ServiceId = serviceId,\n    RequestId = fodRequestId,\n    ServiceName = \"Certificat de na\u0219tere\",\n    Cost = 100.00m,\n    StateTax = 20.00m,\n    InitialCost = 120.00m,\n    FinalCost = 120.00m,\n    Status = ServiceRequestStatus.New\n};\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequest/#aplicare-reduceri","title":"Aplicare Reduceri","text":"<pre><code>// Calculeaz\u0103 costul final dup\u0103 reduceri\nvar totalDiscount = serviceRequest.Discounts.Sum(d =&gt; d.Amount);\nserviceRequest.FinalCost = serviceRequest.InitialCost - totalDiscount;\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequest/#interogare-cereri-cu-date-aditionale","title":"Interogare Cereri cu Date Adi\u021bionale","text":"<pre><code>var serviceRequests = await context.FodServiceRequests\n    .Include(sr =&gt; sr.Service)\n    .Include(sr =&gt; sr.AdditionalDatas)\n        .ThenInclude(ad =&gt; ad.AdditionalData)\n    .Include(sr =&gt; sr.Discounts)\n    .Where(sr =&gt; sr.RequestId == requestId)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequest/#verificare-status-apostilare","title":"Verificare Status Apostilare","text":"<pre><code>var apostilationPending = await context.FodServiceRequests\n    .Where(sr =&gt; sr.SentToApostillation &amp;&amp; \n                 sr.ApostilaStatus != FodServiceRequestStatus.Completed)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequest/#note","title":"Note","text":"<ol> <li>Fluxul de Status:</li> <li>New \u2192 InProgress \u2192 WaitingPayment \u2192 Paid \u2192 Processing \u2192 Completed/Rejected</li> <li> <p>Pentru apostilare: se folose\u0219te ApostilaStatus separat</p> </li> <li> <p>Calculul Costurilor:</p> </li> <li>InitialCost = Cost + StateTax</li> <li>FinalCost = InitialCost - Sum(Discounts)</li> <li> <p>HasDynamicFee indic\u0103 dac\u0103 costul poate varia \u00een func\u021bie de date adi\u021bionale</p> </li> <li> <p>Considera\u021bii de Design:</p> </li> <li>ServiceName este stocat local pentru a p\u0103stra istoricul chiar dac\u0103 serviciul se modific\u0103</li> <li>Poate exista f\u0103r\u0103 RequestId pentru cereri create \u00een backoffice</li> <li> <p>ResponseDatas permite multiple r\u0103spunsuri (versiuni, actualiz\u0103ri)</p> </li> <li> <p>Performan\u021b\u0103:</p> </li> <li>Pentru liste mari de cereri, folose\u0219te paginare</li> <li>Include selectiv rela\u021biile necesare</li> <li> <p>Pentru raportare, consider\u0103 indexuri pe Status \u0219i ServiceId</p> </li> <li> <p>Integrare cu Sisteme Externe:</p> </li> <li>ExternalBackofficeServiceRequestNumber pentru sincronizare cu sisteme legacy</li> <li>ServiceProviderNumber pentru tracking la furnizori externi</li> <li>ApostilationServiceRequestNumber pentru sistemul de apostilare</li> </ol>"},{"location":"fod/database/entities/FodServiceRequestAdditionalData/","title":"FodServiceRequestAdditionalData","text":"<p>Description: </p> Property Type TextValue string? BoolValue bool? SelectedDropdownValueId Guid? SelectedDropdownValue FodAdditionalDataTypeValue? AdditionalData FodAdditionalData? ServiceRequest FodServiceRequest?"},{"location":"fod/database/entities/FodServiceRequestFile/","title":"FodServiceRequestFile","text":""},{"location":"fod/database/entities/FodServiceRequestFile/#descriere","title":"Descriere","text":"<p>Entitatea de leg\u0103tur\u0103 care asociaz\u0103 fi\u0219ierele cu cererile de servicii din sistemul Front Office Digital. Aceast\u0103 entitate permite ata\u0219area de documente specifice fiec\u0103rui serviciu solicitat, cum ar fi rezultate ale proces\u0103rii, certificate generate, sau alte documente produse de furnizorul de servicii.</p>"},{"location":"fod/database/entities/FodServiceRequestFile/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/FodServiceRequestFile/#identificare-si-relatii","title":"Identificare \u0219i Rela\u021bii","text":"Proprietate Tip Descriere Constr\u00e2ngeri FileId Guid ID-ul fi\u0219ierului ata\u0219at Primary Key, Foreign Key c\u0103tre File ServiceRequestId Guid ID-ul cererii de serviciu asociate Primary Key (implicit), Foreign Key c\u0103tre FodServiceRequest"},{"location":"fod/database/entities/FodServiceRequestFile/#metadate-mostenite-din-baseentity-daca-aplicabil","title":"Metadate (mo\u0219tenite din BaseEntity - dac\u0103 aplicabil)","text":"Proprietate Tip Descriere Constr\u00e2ngeri CreatedDate DateTime Data ata\u0219\u0103rii fi\u0219ierului Setat\u0103 automat ModifiedDate DateTime Data ultimei modific\u0103ri Actualizat\u0103 automat CreatedBy string? Utilizatorul care a ata\u0219at fi\u0219ierul - ModifiedBy string? Utilizatorul care a modificat ultima dat\u0103 -"},{"location":"fod/database/entities/FodServiceRequestFile/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/FodServiceRequestFile/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>File (<code>File</code>) - Fi\u0219ierul ata\u0219at prin FileId</li> <li>ServiceRequest (<code>FodServiceRequest</code>) - Cererea de serviciu asociat\u0103 (rela\u021bie implicit\u0103)</li> </ul>"},{"location":"fod/database/entities/FodServiceRequestFile/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/FodServiceRequestFile/#atasare-document-rezultat","title":"Ata\u0219are Document Rezultat","text":"<pre><code>// Salvare fi\u0219ier rezultat\nvar resultFile = new File\n{\n    Id = Guid.NewGuid(),\n    FileName = \"certificat_nastere_12345.pdf\",\n    ContentType = \"application/pdf\",\n    Size = pdfBytes.Length,\n    Content = pdfBytes\n};\ncontext.Files.Add(resultFile);\n\n// Creare asociere cu cererea de serviciu\nvar serviceRequestFile = new FodServiceRequestFile\n{\n    FileId = resultFile.Id,\n    ServiceRequestId = serviceRequestId,\n    CreatedDate = DateTime.UtcNow,\n    CreatedBy = currentUserId\n};\ncontext.FodServiceRequestFiles.Add(serviceRequestFile);\n\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequestFile/#obtinere-documente-generate-pentru-un-serviciu","title":"Ob\u021binere Documente Generate pentru un Serviciu","text":"<pre><code>var serviceFiles = await context.FodServiceRequestFiles\n    .Include(srf =&gt; srf.File)\n    .Where(srf =&gt; srf.ServiceRequestId == serviceRequestId)\n    .Select(srf =&gt; new\n    {\n        srf.File.FileName,\n        srf.File.ContentType,\n        srf.File.Size,\n        srf.FileId,\n        srf.CreatedDate,\n        IsResult = srf.File.FileName.Contains(\"certificat\") || \n                   srf.File.FileName.Contains(\"extras\")\n    })\n    .OrderByDescending(f =&gt; f.CreatedDate)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequestFile/#verificare-completare-serviciu","title":"Verificare Completare Serviciu","text":"<pre><code>var serviceRequest = await context.FodServiceRequests\n    .Include(sr =&gt; sr.Files)\n        .ThenInclude(f =&gt; f.File)\n    .FirstOrDefaultAsync(sr =&gt; sr.Id == serviceRequestId);\n\nvar hasResultDocument = serviceRequest.Files\n    .Any(f =&gt; f.File.ContentType == \"application/pdf\" &amp;&amp; \n              f.CreatedDate &gt;= serviceRequest.ProcessingStartDate);\n\nif (hasResultDocument)\n{\n    serviceRequest.Status = ServiceRequestStatus.Completed;\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequestFile/#arhivare-documente-serviciu","title":"Arhivare Documente Serviciu","text":"<pre><code>var documentsToArchive = await context.FodServiceRequestFiles\n    .Include(srf =&gt; srf.File)\n    .Include(srf =&gt; srf.ServiceRequest)\n    .Where(srf =&gt; srf.ServiceRequest.CompletionDate &lt; DateTime.UtcNow.AddYears(-1))\n    .ToListAsync();\n\nforeach (var doc in documentsToArchive)\n{\n    // Mutare \u00een arhiv\u0103\n    var archivedFile = new ArchivedFile\n    {\n        OriginalFileId = doc.FileId,\n        FileName = doc.File.FileName,\n        ArchivedDate = DateTime.UtcNow,\n        ServiceRequestNumber = doc.ServiceRequest.Request.RequestNumber\n    };\n\n    context.ArchivedFiles.Add(archivedFile);\n}\n\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/FodServiceRequestFile/#tipuri-de-fisiere-asociate","title":"Tipuri de Fi\u0219iere Asociate","text":"<ol> <li>Documente Rezultat:</li> <li>Certificate emise</li> <li>Extrase oficiale</li> <li>Adeverin\u021be</li> <li> <p>Rapoarte generate</p> </li> <li> <p>Documente Intermediare:</p> </li> <li>Confirm\u0103ri de procesare</li> <li>Notific\u0103ri de status</li> <li> <p>Documente de verificare</p> </li> <li> <p>Documente Suport:</p> </li> <li>Instruc\u021biuni de ridicare</li> <li>Chitan\u021be de plat\u0103</li> <li>Confirm\u0103ri de livrare</li> </ol>"},{"location":"fod/database/entities/FodServiceRequestFile/#note-importante","title":"Note Importante","text":"<ol> <li>Diferen\u021ba fa\u021b\u0103 de FodRequestFile:</li> <li>FodRequestFile: documente \u00eenc\u0103rcate de solicitant</li> <li>FodServiceRequestFile: documente generate de sistem/furnizor</li> <li> <p>Aceast\u0103 separare permite gestionarea clar\u0103 a fluxului documentelor</p> </li> <li> <p>Ciclu de Via\u021b\u0103:</p> </li> <li>Documentele sunt generate dup\u0103 procesarea serviciului</li> <li>Pot fi actualizate \u00een cazul corec\u021biilor</li> <li> <p>Necesit\u0103 arhivare conform politicilor de reten\u021bie</p> </li> <li> <p>Securitate \u0219i Acces:</p> </li> <li>Accesul la documente necesit\u0103 verificarea permisiunilor</li> <li>Documentele con\u021bin date personale protejate</li> <li> <p>Implementa\u021bi watermarking pentru documente oficiale</p> </li> <li> <p>Integrare cu Furnizori:</p> </li> <li>Documentele pot fi primite prin API de la furnizori</li> <li>Formatul \u0219i structura depind de tipul serviciului</li> <li> <p>Valida\u021bi integritatea documentelor primite</p> </li> <li> <p>Optimizare Stocare:</p> </li> <li>Considera\u021bi compresie pentru documente mari</li> <li>Implementa\u021bi politici de arhivare pentru documente vechi</li> <li>Folosi\u021bi CDN pentru distribu\u021bie eficient\u0103</li> </ol>"},{"location":"fod/database/entities/FodServiceRequestResponseData/","title":"FodServiceRequestResponseData","text":"<p>Description: </p> Property Type FileId Guid? File File? JsonFile string? AdditionalInformation string? ResponseDataStatus ResponseDataStatus InvalidateReason string?"},{"location":"fod/database/entities/FodSignature/","title":"FodSignature","text":"<p>Description: </p> Property Type Id Guid"},{"location":"fod/database/entities/FodTermsAndCondition/","title":"FodTermsAndCondition","text":"<p>Description: </p> Property Type Id Guid Version string Terms string CreateDate DateTime CreatedByUserId Guid? CreatedByUser UserProfile? IsActiveVersion bool"},{"location":"fod/database/entities/FodUserProfileOrganization/","title":"FodUserProfileOrganization","text":"<p>Description: </p> Property Type Code string? Name string?"},{"location":"fod/database/entities/FodUserProfileRole/","title":"FodUserProfileRole","text":"<p>Description: </p> Property Type Role string? UserProfileOrganizations ICollection"},{"location":"fod/database/entities/FodUserSignature/","title":"FodUserSignature","text":"<p>Description: </p> Property Type Name string? SerialNumber string? State string? TelephoneNumber string?"},{"location":"fod/database/entities/JsonSchema/","title":"JsonSchema","text":"<p>Description: </p> Property Type Id Guid Name string Schema string"},{"location":"fod/database/entities/RSSPAExecutionTerm/","title":"RSSPAExecutionTerm","text":"<p>Description: </p> Property Type RsspsHoursValue int"},{"location":"fod/database/entities/ServiceRequestDelivery/","title":"ServiceRequestDelivery","text":""},{"location":"fod/database/entities/ServiceRequestDelivery/#descriere","title":"Descriere","text":"<p>Gestioneaz\u0103 informa\u021biile de livrare pentru documentele rezultate din procesarea cererilor. Aceast\u0103 entitate urm\u0103re\u0219te statusul livr\u0103rii, costurile asociate \u0219i integrarea cu serviciile de curierat pentru livrarea fizic\u0103 a documentelor oficiale c\u0103tre solicitan\u021bi.</p>"},{"location":"fod/database/entities/ServiceRequestDelivery/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al livr\u0103rii Primary Key Status DeliveryStatus Statusul curent al livr\u0103rii Enum: DeliveryStatus NotifyStatusChange bool Notific\u0103 la schimbarea statusului Default: true Cost decimal Costul serviciului de livrare Column: decimal(18,2) TrackingId string? Num\u0103rul de urm\u0103rire (AWB) de la curier - CarrierEstimatedDeliveryStart DateTime? Data estimat\u0103 \u00eenceput livrare - CarrierEstimatedDeliveryEnd DateTime? Data estimat\u0103 sf\u00e2r\u0219it livrare - CarrierName string? Numele companiei de curierat -"},{"location":"fod/database/entities/ServiceRequestDelivery/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/ServiceRequestDelivery/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>Logs (<code>ICollection&lt;ServiceRequestDeliveryStatusLog&gt;</code>) - Istoricul schimb\u0103rilor de status</li> </ul>"},{"location":"fod/database/entities/ServiceRequestDelivery/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>FodRequest - Cererea care solicit\u0103 livrarea</li> </ul>"},{"location":"fod/database/entities/ServiceRequestDelivery/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/ServiceRequestDelivery/#creare-livrare-noua","title":"Creare Livrare Nou\u0103","text":"<pre><code>var delivery = new ServiceRequestDelivery\n{\n    Status = DeliveryStatus.Pending,\n    NotifyStatusChange = true,\n    Cost = 25.00m,\n    CarrierName = \"Posta Moldovei\"\n};\n\ncontext.ServiceRequestDeliveries.Add(delivery);\nawait context.SaveChangesAsync();\n\n// Asociere cu cererea\nfodRequest.DeliveryId = delivery.Id;\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDelivery/#actualizare-status-cu-tracking","title":"Actualizare Status cu Tracking","text":"<pre><code>public async Task UpdateDeliveryStatus(Guid deliveryId, string trackingId, DeliveryStatus newStatus)\n{\n    var delivery = await context.ServiceRequestDeliveries\n        .Include(d =&gt; d.Logs)\n        .FirstOrDefaultAsync(d =&gt; d.Id == deliveryId);\n\n    if (delivery == null) return;\n\n    var oldStatus = delivery.Status;\n    delivery.Status = newStatus;\n    delivery.TrackingId = trackingId;\n\n    // Adaug\u0103 log pentru schimbare\n    var log = new ServiceRequestDeliveryStatusLog\n    {\n        DeliveryId = delivery.Id,\n        Status = newStatus,\n        Message = $\"Status schimbat din {oldStatus} \u00een {newStatus}\",\n        LogDate = DateTime.UtcNow\n    };\n\n    delivery.Logs.Add(log);\n    await context.SaveChangesAsync();\n\n    // Trimite notificare dac\u0103 este activat\u0103\n    if (delivery.NotifyStatusChange)\n    {\n        await NotifyDeliveryStatusChange(delivery);\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDelivery/#integrare-cu-api-curier","title":"Integrare cu API Curier","text":"<pre><code>public async Task&lt;bool&gt; SendToCourier(ServiceRequestDelivery delivery, AddressInfo address)\n{\n    var courierRequest = new CourierShipmentRequest\n    {\n        SenderName = \"Agen\u021bia Servicii Publice\",\n        SenderAddress = \"str. Alexandr Pu\u0219kin 42\",\n        RecipientName = address.FullName,\n        RecipientAddress = address.FullAddress,\n        RecipientPhone = address.Phone,\n        PackageWeight = 0.1m, // 100g pentru documente\n        PackageType = \"Document\",\n        CashOnDelivery = delivery.Cost\n    };\n\n    var response = await courierApi.CreateShipment(courierRequest);\n\n    if (response.Success)\n    {\n        delivery.TrackingId = response.TrackingNumber;\n        delivery.Status = DeliveryStatus.SentToCourier;\n        delivery.CarrierEstimatedDeliveryStart = response.EstimatedDeliveryStart;\n        delivery.CarrierEstimatedDeliveryEnd = response.EstimatedDeliveryEnd;\n\n        await context.SaveChangesAsync();\n        return true;\n    }\n\n    return false;\n}\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDelivery/#monitorizare-livrari-active","title":"Monitorizare Livr\u0103ri Active","text":"<pre><code>var activeDeliveries = await context.ServiceRequestDeliveries\n    .Include(d =&gt; d.Logs)\n    .Where(d =&gt; d.Status != DeliveryStatus.Delivered &amp;&amp; \n                d.Status != DeliveryStatus.Cancelled)\n    .Select(d =&gt; new\n    {\n        d.Id,\n        d.TrackingId,\n        d.Status,\n        d.CarrierName,\n        DaysInTransit = (DateTime.UtcNow - d.Logs\n            .Where(l =&gt; l.Status == DeliveryStatus.SentToCourier)\n            .OrderBy(l =&gt; l.LogDate)\n            .Select(l =&gt; l.LogDate)\n            .FirstOrDefault()).TotalDays,\n        LastUpdate = d.Logs.Max(l =&gt; l.LogDate)\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDelivery/#raport-costuri-livrare","title":"Raport Costuri Livrare","text":"<pre><code>var deliveryReport = await context.ServiceRequestDeliveries\n    .Where(d =&gt; d.Status == DeliveryStatus.Delivered)\n    .GroupBy(d =&gt; new { d.CarrierName, Month = d.Logs\n        .Where(l =&gt; l.Status == DeliveryStatus.Delivered)\n        .Select(l =&gt; l.LogDate.Month)\n        .FirstOrDefault() })\n    .Select(g =&gt; new\n    {\n        Carrier = g.Key.CarrierName,\n        Month = g.Key.Month,\n        TotalDeliveries = g.Count(),\n        TotalCost = g.Sum(d =&gt; d.Cost),\n        AverageCost = g.Average(d =&gt; d.Cost)\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDelivery/#note","title":"Note","text":"<ol> <li>Fluxul de Status:</li> <li>Pending \u2192 SentToCourier \u2192 InTransit \u2192 OutForDelivery \u2192 Delivered</li> <li>Alternativ: \u2192 Returned \u2192 Cancelled</li> <li> <p>Fiecare schimbare genereaz\u0103 un log</p> </li> <li> <p>Integrare Curieri:</p> </li> <li>TrackingId permite urm\u0103rirea extern\u0103</li> <li>CarrierName identific\u0103 compania</li> <li> <p>API-uri diferite per curier</p> </li> <li> <p>Notific\u0103ri:</p> </li> <li>NotifyStatusChange controleaz\u0103 notific\u0103rile</li> <li>SMS/Email la schimb\u0103ri importante</li> <li> <p>Respect\u0103 preferin\u021bele utilizatorului</p> </li> <li> <p>Costuri:</p> </li> <li>Cost poate include TVA</li> <li>Poate fi 0 pentru livrare gratuit\u0103</li> <li> <p>Facturare separat\u0103 sau inclus\u0103 \u00een cerere</p> </li> <li> <p>Estim\u0103ri de Livrare:</p> </li> <li>CarrierEstimatedDeliveryStart/End - interval estimat</li> <li>Actualizat de la curier prin API</li> <li> <p>Afi\u0219at utilizatorului pentru transparen\u021b\u0103</p> </li> <li> <p>Best Practices:</p> </li> <li>Sincroniza\u021bi statusul regulat cu curierul</li> <li>P\u0103stra\u021bi logs detaliate pentru dispute</li> <li>Implementa\u021bi retry pentru erori API</li> <li>Monitoriza\u021bi livr\u0103rile blocate/\u00eent\u00e2rziate</li> </ol>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/","title":"ServiceRequestDeliveryStatusLog","text":""},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#descriere","title":"Descriere","text":"<p>Entitatea care \u00eenregistreaz\u0103 istoricul statusurilor de livrare pentru cererile de servicii. Aceast\u0103 entitate permite urm\u0103rirea complet\u0103 a procesului de livrare, \u00eenregistr\u00e2nd fiecare schimbare de status \u00eempreun\u0103 cu mesaje detaliate \u0219i informa\u021bii despre transportator.</p>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#informatii-status","title":"Informa\u021bii Status","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al log-ului Primary Key, mo\u0219tenit din BaseEntity Status DeliveryStatus Statusul livr\u0103rii Enum: DeliveryStatus Message string? Mesaj descriptiv despre schimbarea statusului Op\u021bional CarrierName string? Numele transportatorului/curierului Op\u021bional TrackingId string? ID-ul de urm\u0103rire al livr\u0103rii Op\u021bional"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#metadate-mostenite-din-baseentity","title":"Metadate (mo\u0219tenite din BaseEntity)","text":"Proprietate Tip Descriere Constr\u00e2ngeri CreatedDate DateTime Data cre\u0103rii \u00eenregistr\u0103rii Setat\u0103 automat ModifiedDate DateTime Data ultimei modific\u0103ri Actualizat\u0103 automat CreatedBy string? Identificatorul utilizatorului care a creat \u00eenregistrarea - ModifiedBy string? Identificatorul utilizatorului care a modificat ultima dat\u0103 - Version byte[] Versiunea \u00eenregistr\u0103rii pentru concurrency control Rowversion TenantId string? ID-ul tenant-ului pentru multi-tenancy -"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>ServiceRequestDelivery - Cererea de livrare p\u0103rinte (rela\u021bie implicit\u0103 prin foreign key)</li> </ul>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#enum-uri-utilizate","title":"Enum-uri Utilizate","text":""},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#deliverystatus","title":"DeliveryStatus","text":"<p>Posibile valori pentru statusul livr\u0103rii: - <code>Pending</code> - \u00cen a\u0219teptare - <code>Picked</code> - Ridicat de curier - <code>InTransit</code> - \u00cen tranzit - <code>Delivered</code> - Livrat - <code>Failed</code> - E\u0219uat - <code>Returned</code> - Returnat - <code>Cancelled</code> - Anulat</p>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#inregistrare-status-nou","title":"\u00cenregistrare Status Nou","text":"<pre><code>var statusLog = new ServiceRequestDeliveryStatusLog\n{\n    Status = DeliveryStatus.Picked,\n    Message = \"Coletul a fost ridicat de la expeditor\",\n    CarrierName = \"Posta Moldovei\",\n    TrackingId = \"MD123456789\",\n    CreatedDate = DateTime.UtcNow\n};\n\ncontext.ServiceRequestDeliveryStatusLogs.Add(statusLog);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#urmarire-istoric-livrare","title":"Urm\u0103rire Istoric Livrare","text":"<pre><code>var deliveryHistory = await context.ServiceRequestDeliveryStatusLogs\n    .Where(log =&gt; log.TrackingId == \"MD123456789\")\n    .OrderBy(log =&gt; log.CreatedDate)\n    .ToListAsync();\n\nforeach (var log in deliveryHistory)\n{\n    Console.WriteLine($\"{log.CreatedDate}: {log.Status} - {log.Message}\");\n}\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#verificare-status-curent","title":"Verificare Status Curent","text":"<pre><code>var currentStatus = await context.ServiceRequestDeliveryStatusLogs\n    .Where(log =&gt; log.TrackingId == trackingId)\n    .OrderByDescending(log =&gt; log.CreatedDate)\n    .FirstOrDefaultAsync();\n\nif (currentStatus?.Status == DeliveryStatus.Delivered)\n{\n    // Procesare pentru livrare complet\u0103\n}\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDeliveryStatusLog/#note-importante","title":"Note Importante","text":"<ol> <li> <p>Istoricul Complet: Aceast\u0103 entitate p\u0103streaz\u0103 istoricul complet al statusurilor, nu doar statusul curent. Fiecare schimbare de status creeaz\u0103 o nou\u0103 \u00eenregistrare.</p> </li> <li> <p>Tracking \u0219i Monitorizare:</p> </li> <li>TrackingId permite urm\u0103rirea extern\u0103 prin sistemele transportatorilor</li> <li>CarrierName identific\u0103 transportatorul responsabil</li> <li> <p>Message ofer\u0103 detalii specifice despre fiecare etap\u0103</p> </li> <li> <p>Integrare cu Sisteme Externe:</p> </li> <li>Poate fi populat\u0103 automat prin webhook-uri de la transportatori</li> <li>Permite sincronizare cu sisteme de tracking externe</li> <li> <p>Suport\u0103 multiple transportatori prin c\u00e2mpul CarrierName</p> </li> <li> <p>Audit \u0219i Raportare:</p> </li> <li>CreatedDate permite reconstituirea exact\u0103 a timeline-ului livr\u0103rii</li> <li>Util pentru generarea de rapoarte despre performan\u021ba livr\u0103rilor</li> <li>Permite identificarea problemelor \u00een procesul de livrare</li> </ol>"},{"location":"fod/database/entities/ServiceRequestDiscount/","title":"ServiceRequestDiscount","text":""},{"location":"fod/database/entities/ServiceRequestDiscount/#descriere","title":"Descriere","text":"<p>Entitatea care gestioneaz\u0103 reducerile aplicate asupra cererilor de servicii \u00een sistemul Front Office Digital. Aceast\u0103 entitate permite aplicarea de reduceri bazate pe diferite criterii precum statutul solicitantului (pensionar, persoan\u0103 cu dizabilit\u0103\u021bi), campanii promo\u021bionale sau alte motive de business.</p>"},{"location":"fod/database/entities/ServiceRequestDiscount/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/ServiceRequestDiscount/#identificare-si-calcul","title":"Identificare \u0219i Calcul","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al reducerii Primary Key ServiceRequestId Guid ID-ul cererii de serviciu Foreign Key c\u0103tre FodServiceRequest CalculatedDiscount decimal Suma calculat\u0103 a reducerii \u00een MDL Valoare pozitiv\u0103 Percent decimal Procentul de reducere aplicat \u00centre 0 \u0219i 100 Name string? Denumirea reducerii Op\u021bional Reason string? Motivul acord\u0103rii reducerii Op\u021bional"},{"location":"fod/database/entities/ServiceRequestDiscount/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/ServiceRequestDiscount/#relatii-many-to-one-parinti","title":"Rela\u021bii Many-to-One (P\u0103rin\u021bi)","text":"<ul> <li>ServiceRequest (<code>FodServiceRequest</code>) - Cererea de serviciu c\u0103reia i se aplic\u0103 reducerea</li> </ul>"},{"location":"fod/database/entities/ServiceRequestDiscount/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/ServiceRequestDiscount/#aplicare-reducere-pentru-pensionari","title":"Aplicare Reducere pentru Pensionari","text":"<pre><code>var discount = new ServiceRequestDiscount\n{\n    Id = Guid.NewGuid(),\n    ServiceRequestId = serviceRequestId,\n    Percent = 50,\n    CalculatedDiscount = originalPrice * 0.5m,\n    Name = \"Reducere pensionari\",\n    Reason = \"Solicitant pensionar cu limit\u0103 de v\u00e2rst\u0103\"\n};\n\ncontext.ServiceRequestDiscounts.Add(discount);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDiscount/#calculare-pret-final-cu-reduceri","title":"Calculare Pre\u021b Final cu Reduceri","text":"<pre><code>var serviceRequest = await context.FodServiceRequests\n    .Include(sr =&gt; sr.Discounts)\n    .FirstOrDefaultAsync(sr =&gt; sr.Id == serviceRequestId);\n\nvar originalPrice = serviceRequest.Service.Price;\nvar totalDiscount = serviceRequest.Discounts.Sum(d =&gt; d.CalculatedDiscount);\nvar finalPrice = originalPrice - totalDiscount;\n\nConsole.WriteLine($\"Pre\u021b original: {originalPrice} MDL\");\nConsole.WriteLine($\"Total reduceri: {totalDiscount} MDL\");\nConsole.WriteLine($\"Pre\u021b final: {finalPrice} MDL\");\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDiscount/#aplicare-reduceri-multiple","title":"Aplicare Reduceri Multiple","text":"<pre><code>// Reducere pentru persoan\u0103 cu dizabilit\u0103\u021bi\nvar disabilityDiscount = new ServiceRequestDiscount\n{\n    ServiceRequestId = serviceRequestId,\n    Percent = 75,\n    CalculatedDiscount = basePrice * 0.75m,\n    Name = \"Reducere persoane cu dizabilit\u0103\u021bi\",\n    Reason = \"Solicitant cu grad de dizabilitate\"\n};\n\n// Reducere promo\u021bional\u0103\nvar promoDiscount = new ServiceRequestDiscount\n{\n    ServiceRequestId = serviceRequestId,\n    Percent = 10,\n    CalculatedDiscount = (basePrice - disabilityDiscount.CalculatedDiscount) * 0.1m,\n    Name = \"Campanie promo\u021bional\u0103\",\n    Reason = \"Reducere 10% servicii online - Decembrie 2024\"\n};\n\ncontext.ServiceRequestDiscounts.AddRange(disabilityDiscount, promoDiscount);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDiscount/#raport-reduceri-acordate","title":"Raport Reduceri Acordate","text":"<pre><code>var discountReport = await context.ServiceRequestDiscounts\n    .Where(d =&gt; d.ServiceRequest.Request.SubmissionDate &gt;= startDate\n                &amp;&amp; d.ServiceRequest.Request.SubmissionDate &lt;= endDate)\n    .GroupBy(d =&gt; d.Name)\n    .Select(g =&gt; new\n    {\n        DiscountType = g.Key,\n        TotalAmount = g.Sum(d =&gt; d.CalculatedDiscount),\n        Count = g.Count(),\n        AveragePercent = g.Average(d =&gt; d.Percent)\n    })\n    .OrderByDescending(r =&gt; r.TotalAmount)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/ServiceRequestDiscount/#tipuri-comune-de-reduceri","title":"Tipuri Comune de Reduceri","text":"<ol> <li>Reduceri Sociale:</li> <li>Pensionari (50%)</li> <li>Persoane cu dizabilit\u0103\u021bi (75%)</li> <li>Veterani (100%)</li> <li> <p>Familii numeroase (30%)</p> </li> <li> <p>Reduceri Promo\u021bionale:</p> </li> <li>Campanii sezoniere</li> <li>Reduceri pentru servicii online</li> <li> <p>Prima utilizare a platformei</p> </li> <li> <p>Reduceri de Volum:</p> </li> <li>Cereri multiple</li> <li>Pachete de servicii</li> </ol>"},{"location":"fod/database/entities/ServiceRequestDiscount/#note-importante","title":"Note Importante","text":"<ol> <li>Calcul \u0219i Aplicare:</li> <li>CalculatedDiscount reprezint\u0103 suma absolut\u0103 a reducerii</li> <li>Percent este folosit pentru transparen\u021b\u0103 \u0219i raportare</li> <li> <p>Reducerile multiple se pot cumula conform regulilor de business</p> </li> <li> <p>Valid\u0103ri de Business:</p> </li> <li>Percent nu poate dep\u0103\u0219i 100%</li> <li>CalculatedDiscount nu poate fi mai mare dec\u00e2t pre\u021bul serviciului</li> <li> <p>Unele reduceri pot fi exclusive (nu se cumuleaz\u0103)</p> </li> <li> <p>Audit \u0219i Transparen\u021b\u0103:</p> </li> <li>Name \u0219i Reason ofer\u0103 transparen\u021b\u0103 asupra reducerilor acordate</li> <li>Esen\u021bial pentru audit \u0219i verific\u0103ri ulterioare</li> <li> <p>Ajut\u0103 la generarea de documente justificative</p> </li> <li> <p>Integrare cu Facturare:</p> </li> <li>Reducerile sunt reflectate \u00een factura final\u0103</li> <li>Fiecare reducere apare ca linie separat\u0103</li> <li> <p>Total reduceri este eviden\u021biat clar</p> </li> <li> <p>Reguli de Eligibilitate:</p> </li> <li>Verificarea eligibilit\u0103\u021bii se face \u00eenainte de aplicare</li> <li>Documentele justificative pot fi cerute</li> <li>Reducerile expirate sunt marcate sau eliminate</li> </ol>"},{"location":"fod/database/entities/SignableDocument/","title":"SignableDocument","text":""},{"location":"fod/database/entities/SignableDocument/#descriere","title":"Descriere","text":"<p>Entitatea care gestioneaz\u0103 documentele ce necesit\u0103 semn\u0103tur\u0103 electronic\u0103 \u00een sistemul Front Office Digital. Aceast\u0103 entitate stocheaz\u0103 documentele \u00een format XML/JSON, urm\u0103re\u0219te procesul de semnare \u0219i p\u0103streaz\u0103 semn\u0103tura digital\u0103 final\u0103 \u00eempreun\u0103 cu hash-ul documentului pentru verificarea integrit\u0103\u021bii.</p>"},{"location":"fod/database/entities/SignableDocument/#proprietati","title":"Propriet\u0103\u021bi","text":""},{"location":"fod/database/entities/SignableDocument/#identificare-si-continut","title":"Identificare \u0219i Con\u021binut","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al documentului semnabil Primary Key SignRequestId string ID-ul cererii de semnare Obligatoriu, pentru tracking extern Xml string? Con\u021binutul documentului \u00een format XML Op\u021bional Json string? Con\u021binutul documentului \u00een format JSON Op\u021bional Hash byte[]? Hash-ul documentului pentru verificarea integrit\u0103\u021bii Op\u021bional, calculat automat Type DocumentTypeEnum Tipul documentului Enum: DocumentTypeEnum"},{"location":"fod/database/entities/SignableDocument/#status-semnare","title":"Status Semnare","text":"Proprietate Tip Descriere Constr\u00e2ngeri Status SignRequestStatus Statusul procesului de semnare Enum: SignRequestStatus Signature byte[]? Semn\u0103tura digital\u0103 a documentului Populat dup\u0103 semnare Message string? Mesaj asociat cu procesul de semnare Pentru erori sau confirm\u0103ri ResponseDate DateTime? Data primirii r\u0103spunsului de semnare -"},{"location":"fod/database/entities/SignableDocument/#enum-uri-utilizate","title":"Enum-uri Utilizate","text":""},{"location":"fod/database/entities/SignableDocument/#documenttypeenum","title":"DocumentTypeEnum","text":"<p>Tipurile de documente semnabile: - <code>Request</code> - Cerere - <code>Contract</code> - Contract - <code>Declaration</code> - Declara\u021bie - <code>Certificate</code> - Certificat - <code>Other</code> - Altele</p>"},{"location":"fod/database/entities/SignableDocument/#signrequeststatus","title":"SignRequestStatus","text":"<p>Statusurile procesului de semnare: - <code>Pending</code> - \u00cen a\u0219teptare - <code>InProgress</code> - \u00cen proces de semnare - <code>Signed</code> - Semnat cu succes - <code>Failed</code> - Semnare e\u0219uat\u0103 - <code>Cancelled</code> - Anulat - <code>Expired</code> - Expirat</p>"},{"location":"fod/database/entities/SignableDocument/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/SignableDocument/#relatii-one-to-one","title":"Rela\u021bii One-to-One","text":"<ul> <li>FodRequest - Cererea asociat\u0103 (prin RequestSignableDocumentId \u00een FodRequest)</li> <li>FodServiceRequest - Cererea de serviciu asociat\u0103 (prin RequestSignableDocumentId \u00een FodServiceRequest)</li> </ul>"},{"location":"fod/database/entities/SignableDocument/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/SignableDocument/#creare-document-pentru-semnare","title":"Creare Document pentru Semnare","text":"<pre><code>var signableDoc = new SignableDocument\n{\n    Id = Guid.NewGuid(),\n    SignRequestId = \"SIGN-2024-000123\",\n    Type = DocumentTypeEnum.Request,\n    Xml = xmlContent,\n    Hash = ComputeHash(xmlContent),\n    Status = SignRequestStatus.Pending\n};\n\ncontext.SignableDocuments.Add(signableDoc);\nawait context.SaveChangesAsync();\n</code></pre>"},{"location":"fod/database/entities/SignableDocument/#procesare-raspuns-semnare","title":"Procesare R\u0103spuns Semnare","text":"<pre><code>var document = await context.SignableDocuments\n    .FirstOrDefaultAsync(d =&gt; d.SignRequestId == signRequestId);\n\nif (document != null)\n{\n    document.Status = SignRequestStatus.Signed;\n    document.Signature = signatureBytes;\n    document.ResponseDate = DateTime.UtcNow;\n    document.Message = \"Document semnat cu succes\";\n\n    await context.SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/database/entities/SignableDocument/#verificare-integritate-document","title":"Verificare Integritate Document","text":"<pre><code>var document = await context.SignableDocuments\n    .FirstOrDefaultAsync(d =&gt; d.Id == documentId);\n\nif (document != null &amp;&amp; document.Hash != null)\n{\n    var currentHash = ComputeHash(document.Xml ?? document.Json);\n    var isValid = currentHash.SequenceEqual(document.Hash);\n\n    if (!isValid)\n    {\n        // Document modificat dup\u0103 creare\n        throw new InvalidOperationException(\"Integritatea documentului compromis\u0103\");\n    }\n}\n</code></pre>"},{"location":"fod/database/entities/SignableDocument/#monitorizare-documente-in-asteptare","title":"Monitorizare Documente \u00een A\u0219teptare","text":"<pre><code>var pendingDocuments = await context.SignableDocuments\n    .Where(d =&gt; d.Status == SignRequestStatus.Pending \n                &amp;&amp; d.CreatedDate &lt; DateTime.UtcNow.AddHours(-24))\n    .Select(d =&gt; new\n    {\n        d.Id,\n        d.SignRequestId,\n        d.Type,\n        Age = DateTime.UtcNow - d.CreatedDate\n    })\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/SignableDocument/#note-importante","title":"Note Importante","text":"<ol> <li>Formate Suportate:</li> <li>Documentele pot fi stocate \u00een format XML sau JSON</li> <li>De obicei se folose\u0219te un singur format per document</li> <li> <p>Formatul depinde de cerin\u021bele sistemului de semnare electronic\u0103</p> </li> <li> <p>Securitate \u0219i Integritate:</p> </li> <li>Hash-ul documentului asigur\u0103 detectarea modific\u0103rilor neautorizate</li> <li>Semn\u0103tura digital\u0103 garanteaz\u0103 autenticitatea \u0219i non-repudierea</li> <li> <p>SignRequestId permite urm\u0103rirea \u00een sistemul extern de semnare</p> </li> <li> <p>Ciclu de Via\u021b\u0103:</p> </li> <li>Document creat \u2192 Trimis pentru semnare \u2192 \u00cen proces \u2192 Semnat/E\u0219uat</li> <li>Documentele expirate necesit\u0103 retrimitere</li> <li> <p>Documentele anulate nu pot fi reactivate</p> </li> <li> <p>Integrare cu Servicii de Semnare:</p> </li> <li>SignRequestId face leg\u0103tura cu sistemul extern</li> <li>ResponseDate marcheaz\u0103 momentul primirii r\u0103spunsului</li> <li> <p>Message poate con\u021bine detalii despre erori sau valid\u0103ri</p> </li> <li> <p>Considera\u021bii de Stocare:</p> </li> <li>Documentele XML/JSON pot fi mari - considera\u021bi compresie</li> <li>Semn\u0103turile digitale trebuie p\u0103strate integral</li> <li>Hash-urile sunt esen\u021biale pentru audit \u0219i verificare</li> </ol>"},{"location":"fod/database/entities/UserProfile/","title":"UserProfile","text":""},{"location":"fod/database/entities/UserProfile/#descriere","title":"Descriere","text":"<p>Reprezint\u0103 profilul unui utilizator \u00een sistemul FOD. Aceast\u0103 entitate stocheaz\u0103 informa\u021biile de baz\u0103 ale utilizatorilor care pot fi responsabili pentru procesarea cererilor, administratori de sistem sau al\u021bi angaja\u021bi ai institu\u021biilor guvernamentale care interac\u021bioneaz\u0103 cu sistemul.</p>"},{"location":"fod/database/entities/UserProfile/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere Constr\u00e2ngeri Id Guid Identificator unic al profilului Primary Key Idnp string IDNP-ul utilizatorului Obligatoriu, 13 caractere FirstName string? Prenumele utilizatorului - LastName string? Numele utilizatorului -"},{"location":"fod/database/entities/UserProfile/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/database/entities/UserProfile/#relatii-one-to-many-copii","title":"Rela\u021bii One-to-Many (Copii)","text":"<ul> <li>UserProfileRoles (<code>ICollection&lt;FodUserProfileRole&gt;</code>) - Rolurile atribuite utilizatorului \u00een sistem</li> </ul>"},{"location":"fod/database/entities/UserProfile/#relatii-inverse-unde-este-referentiat","title":"Rela\u021bii Inverse (unde este referen\u021biat)","text":"<ul> <li>FodRequest.ResponsibleUser - Cererile pentru care utilizatorul este responsabil</li> <li>FodUserProfileOrganization - Organiza\u021biile asociate cu utilizatorul</li> </ul>"},{"location":"fod/database/entities/UserProfile/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/database/entities/UserProfile/#creare-profil-utilizator","title":"Creare Profil Utilizator","text":"<pre><code>var userProfile = new UserProfile\n{\n    Idnp = \"2000000000001\",\n    FirstName = \"Maria\",\n    LastName = \"Ionescu\"\n};\n</code></pre>"},{"location":"fod/database/entities/UserProfile/#atribuire-roluri","title":"Atribuire Roluri","text":"<pre><code>// Adaug\u0103 rol de operator\nuserProfile.UserProfileRoles.Add(new FodUserProfileRole\n{\n    UserProfileId = userProfile.Id,\n    RoleId = operatorRoleId,\n    AssignedDate = DateTime.UtcNow\n});\n\n// Adaug\u0103 rol de supervizor\nuserProfile.UserProfileRoles.Add(new FodUserProfileRole\n{\n    UserProfileId = userProfile.Id,\n    RoleId = supervisorRoleId,\n    AssignedDate = DateTime.UtcNow\n});\n</code></pre>"},{"location":"fod/database/entities/UserProfile/#interogare-utilizatori-cu-roluri","title":"Interogare Utilizatori cu Roluri","text":"<pre><code>var usersWithRoles = await context.UserProfiles\n    .Include(u =&gt; u.UserProfileRoles)\n        .ThenInclude(r =&gt; r.Role)\n    .OrderBy(u =&gt; u.LastName)\n    .ThenBy(u =&gt; u.FirstName)\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/UserProfile/#gasire-utilizatori-responsabili","title":"G\u0103sire Utilizatori Responsabili","text":"<pre><code>// Utilizatori cu cereri active\nvar activeResponsibles = await context.FodRequests\n    .Where(r =&gt; r.FodStatus == FodRequestStatus.InProgress)\n    .Select(r =&gt; r.ResponsibleUser)\n    .Distinct()\n    .ToListAsync();\n</code></pre>"},{"location":"fod/database/entities/UserProfile/#verificare-rol-specific","title":"Verificare Rol Specific","text":"<pre><code>var hasAdminRole = await context.UserProfiles\n    .Where(u =&gt; u.Id == userId)\n    .SelectMany(u =&gt; u.UserProfileRoles)\n    .AnyAsync(r =&gt; r.Role.Code == \"ADMIN\");\n</code></pre>"},{"location":"fod/database/entities/UserProfile/#note","title":"Note","text":"<ol> <li>Identificare \u0219i Autentificare:</li> <li>IDNP-ul este identificatorul principal pentru matching cu sistemele externe</li> <li>Autentificarea efectiv\u0103 se face prin sisteme externe (MPass, etc.)</li> <li> <p>UserProfile stocheaz\u0103 doar datele necesare pentru operare \u00een FOD</p> </li> <li> <p>Gestiunea Rolurilor:</p> </li> <li>Un utilizator poate avea multiple roluri simultan</li> <li>Rolurile determin\u0103 permisiunile \u0219i ac\u021biunile disponibile</li> <li> <p>Verificarea rolurilor se face prin UserProfileRoles</p> </li> <li> <p>Rela\u021bia cu Cereri:</p> </li> <li>Utilizatorii pot fi responsabili pentru procesarea cererilor</li> <li>ResponsibleUserId \u00een FodRequest face leg\u0103tura</li> <li> <p>Permite tracking-ul \u0219i distribuirea sarcinilor</p> </li> <li> <p>Considera\u021bii de Design:</p> </li> <li>Entitate simpl\u0103, p\u0103streaz\u0103 doar datele esen\u021biale</li> <li>Detalii adi\u021bionale pot fi ob\u021binute din sistemele externe</li> <li> <p>Optimizat pentru query-uri frecvente de verificare permisiuni</p> </li> <li> <p>Best Practices:</p> </li> <li>Cache profilurile utilizatorilor activi pentru performan\u021b\u0103</li> <li>Include rolurile c\u00e2nd \u00eencarci profilul pentru a evita lazy loading</li> <li> <p>Verific\u0103 \u00eentotdeauna existen\u021ba rolului \u00eenainte de a permite ac\u021biuni</p> </li> <li> <p>Securitate:</p> </li> <li>IDNP-ul trebuie protejat ca date personale</li> <li>Audit trail pentru schimb\u0103ri de roluri</li> <li>Verificare periodic\u0103 a rolurilor active vs. necesare</li> </ol>"},{"location":"fod/database/entities/WorkingProgram/","title":"WorkingProgram","text":"<p>Description: </p> Property Type Id Guid Day DayEnum OpenHours int? OpenMinutes int? CloseHours int? CloseMinutes int? PauseHoursStart int? PauseMinutesStart int? PauseHoursEnd int? PauseMinutesEnd int?"},{"location":"fod/ghiduri/aplicatie-noua/","title":"Crearea unei Aplica\u021bii Noi","text":"<p>Aceast\u0103 pagin\u0103 descrie cum s\u0103 crea\u021bi o aplica\u021bie nou\u0103.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/aplicatie-noua/#cerinte","title":"Cerin\u021be","text":""},{"location":"fod/ghiduri/aplicatie-noua/#pasi-de-creare","title":"Pa\u0219i de creare","text":""},{"location":"fod/ghiduri/aplicatie-noua/#configurare-initiala","title":"Configurare ini\u021bial\u0103","text":""},{"location":"fod/ghiduri/best-practices/","title":"Best Practices","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine cele mai bune practici.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/best-practices/#conventii-de-cod","title":"Conven\u021bii de cod","text":""},{"location":"fod/ghiduri/best-practices/#performanta","title":"Performan\u021b\u0103","text":""},{"location":"fod/ghiduri/best-practices/#securitate","title":"Securitate","text":""},{"location":"fod/ghiduri/formulare-complexe/","title":"Formulare Complexe","text":"<p>Aceast\u0103 pagin\u0103 descrie crearea formularelor complexe.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/formulare-complexe/#componente-formular","title":"Componente formular","text":""},{"location":"fod/ghiduri/formulare-complexe/#validare","title":"Validare","text":""},{"location":"fod/ghiduri/formulare-complexe/#exemple-avansate","title":"Exemple avansate","text":""},{"location":"fod/ghiduri/integrare-mpass/","title":"Integrare MPass","text":"<p>Aceast\u0103 pagin\u0103 descrie integrarea cu MPass.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/integrare-mpass/#configurare","title":"Configurare","text":""},{"location":"fod/ghiduri/integrare-mpass/#flux-de-autentificare","title":"Flux de autentificare","text":""},{"location":"fod/ghiduri/integrare-mpass/#gestionare-sesiuni","title":"Gestionare sesiuni","text":""},{"location":"fod/ghiduri/integrare-mpay/","title":"Integrare MPay","text":"<p>Aceast\u0103 pagin\u0103 descrie integrarea cu MPay.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/integrare-mpay/#configurare","title":"Configurare","text":""},{"location":"fod/ghiduri/integrare-mpay/#procesare-plati","title":"Procesare pl\u0103\u021bi","text":""},{"location":"fod/ghiduri/integrare-mpay/#webhook-uri","title":"Webhook-uri","text":""},{"location":"fod/ghiduri/quick-start/","title":"Quick Start","text":"<p>Aceast\u0103 pagin\u0103 ofer\u0103 un ghid rapid de \u00eenceput.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/quick-start/#instalare","title":"Instalare","text":""},{"location":"fod/ghiduri/quick-start/#prima-aplicatie","title":"Prima aplica\u021bie","text":""},{"location":"fod/ghiduri/quick-start/#pasii-urmatori","title":"Pa\u0219ii urm\u0103tori","text":""},{"location":"fod/ghiduri/teme/","title":"Teme \u0219i Personalizare","text":"<p>Aceast\u0103 pagin\u0103 descrie personalizarea temelor.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/teme/#variabile-css","title":"Variabile CSS","text":""},{"location":"fod/ghiduri/teme/#creare-tema-noua","title":"Creare tem\u0103 nou\u0103","text":""},{"location":"fod/ghiduri/teme/#dark-mode","title":"Dark mode","text":""},{"location":"fod/ghiduri/testare/","title":"Testare","text":"<p>Aceast\u0103 pagin\u0103 descrie strategiile de testare.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/ghiduri/testare/#unit-testing","title":"Unit testing","text":""},{"location":"fod/ghiduri/testare/#integration-testing","title":"Integration testing","text":""},{"location":"fod/ghiduri/testare/#e2e-testing","title":"E2E testing","text":""},{"location":"fod/integrari/","title":"Integr\u0103ri Servicii Guvernamentale","text":""},{"location":"fod/integrari/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Platforma FOD.Components ofer\u0103 integr\u0103ri robuste cu principalele servicii guvernamentale digitale din Republica Moldova. Aceste integr\u0103ri permit aplica\u021biilor s\u0103 beneficieze de serviciile centralizate ale guvernului, asigur\u00e2nd o experien\u021b\u0103 uniform\u0103 \u0219i sigur\u0103 pentru cet\u0103\u021beni.</p>"},{"location":"fod/integrari/#servicii-integrate","title":"Servicii Integrate","text":""},{"location":"fod/integrari/#mpass-serviciul-de-autentificare","title":"\ud83d\udd10 MPass - Serviciul de Autentificare","text":"<p>MPass este serviciul na\u021bional de autentificare care permite cet\u0103\u021benilor s\u0103 acceseze toate serviciile publice digitale cu o singur\u0103 identitate digital\u0103.</p> <p>Caracteristici principale: - Autentificare unificat\u0103 pentru toate serviciile publice - Suport pentru multiple metode de autentificare (ID mobil, semn\u0103tur\u0103 digital\u0103) - Single Sign-On (SSO) pentru aplica\u021biile guvernamentale - Gestionare centralizat\u0103 a sesiunilor</p> <p>Documenta\u021bie detaliat\u0103 MPass \u2192</p>"},{"location":"fod/integrari/#mpay-serviciul-de-plati-electronice","title":"\ud83d\udcb3 MPay - Serviciul de Pl\u0103\u021bi Electronice","text":"<p>MPay ofer\u0103 o platform\u0103 centralizat\u0103 pentru efectuarea pl\u0103\u021bilor c\u0103tre institu\u021biile publice, integr\u00e2nd multiple metode de plat\u0103.</p> <p>Caracteristici principale: - Pl\u0103\u021bi online securizate - Integrare cu b\u0103ncile comerciale - Generare automat\u0103 a facturilor - Monitorizare \u00een timp real a tranzac\u021biilor</p> <p>Documenta\u021bie detaliat\u0103 MPay \u2192</p>"},{"location":"fod/integrari/#mdelivery-serviciul-de-livrare-documente","title":"\ud83d\udce6 MDelivery - Serviciul de Livrare Documente","text":"<p>MDelivery faciliteaz\u0103 livrarea electronic\u0103 \u0219i fizic\u0103 a documentelor oficiale c\u0103tre cet\u0103\u021beni.</p> <p>Caracteristici principale: - Livrare electronic\u0103 prin cabinet personal - Integrare cu serviciile po\u0219tale pentru livrare fizic\u0103 - Tracking \u00een timp real al livr\u0103rilor - Confirmare electronic\u0103 de primire</p> <p>Documenta\u021bie detaliat\u0103 MDelivery \u2192</p>"},{"location":"fod/integrari/#mpower-serviciul-de-imputerniciri","title":"\ud83c\udfdb\ufe0f MPower - Serviciul de \u00cemputerniciri","text":"<p>MPower permite delegarea electronic\u0103 a drepturilor de reprezentare \u00eentre persoane fizice \u0219i juridice.</p> <p>Caracteristici principale: - Creare \u0219i gestionare \u00eemputerniciri electronice - Verificare \u00een timp real a validit\u0103\u021bii - Istoric complet al deleg\u0103rilor - Integrare cu registrele de stat</p> <p>Documenta\u021bie detaliat\u0103 MPower \u2192</p>"},{"location":"fod/integrari/#mconnect-platforma-de-interoperabilitate","title":"\ud83d\udd17 MConnect - Platforma de Interoperabilitate","text":"<p>MConnect asigur\u0103 schimbul securizat de date \u00eentre sistemele informa\u021bionale ale institu\u021biilor publice.</p> <p>Caracteristici principale: - Schimb standardizat de date - Protocoale de securitate avansate - Monitorizare \u0219i audit - API-uri unificate</p> <p>Documenta\u021bie detaliat\u0103 MConnect \u2192</p>"},{"location":"fod/integrari/#sgari-sistemul-de-gestiune-a-actelor-de-stare-civila","title":"\ud83d\udc64 SGARI - Sistemul de Gestiune a Actelor de Stare Civil\u0103","text":"<p>SGARI ofer\u0103 acces la datele din registrele de stare civil\u0103 \u0219i popula\u021bie.</p> <p>Caracteristici principale: - Verificare date personale - Acces la acte de stare civil\u0103 - Validare IDNP - Istoric modific\u0103ri</p> <p>Documenta\u021bie detaliat\u0103 SGARI \u2192</p>"},{"location":"fod/integrari/#psp-portalul-serviciilor-publice","title":"\ud83c\udf10 PSP - Portalul Serviciilor Publice","text":"<p>PSP reprezint\u0103 catalogul centralizat al tuturor serviciilor publice disponibile electronic.</p> <p>Caracteristici principale: - Catalog complet de servicii - Informa\u021bii detaliate despre cerin\u021be - Ghiduri pas cu pas - Integrare cu alte platforme</p> <p>Documenta\u021bie detaliat\u0103 PSP \u2192</p>"},{"location":"fod/integrari/#docstore-depozitul-electronic-de-documente","title":"\ud83d\udcc4 DocStore - Depozitul Electronic de Documente","text":"<p>DocStore ofer\u0103 stocare securizat\u0103 \u0219i gestionare centralizat\u0103 a documentelor electronice.</p> <p>Caracteristici principale: - Stocare criptat\u0103 - Versionare documente - Semnare digital\u0103 integrat\u0103 - Partajare securizat\u0103</p> <p>Documenta\u021bie detaliat\u0103 DocStore \u2192</p>"},{"location":"fod/integrari/#apostila-serviciul-de-apostilare","title":"\ud83c\udfdb\ufe0f Apostila - Serviciul de Apostilare","text":"<p>Serviciul electronic de apostilare a documentelor pentru utilizare interna\u021bional\u0103.</p> <p>Caracteristici principale: - Apostilare electronic\u0103 - Verificare online a apostilelor - Integrare cu conven\u021bia de la Haga - Reducere semnificativ\u0103 a timpilor</p> <p>Documenta\u021bie detaliat\u0103 Apostila \u2192</p>"},{"location":"fod/integrari/#arhitectura-de-integrare","title":"Arhitectur\u0103 de Integrare","text":""},{"location":"fod/integrari/#principii-de-design","title":"Principii de Design","text":"<ol> <li>Modularitate - Fiecare integrare este implementat\u0103 ca un modul independent</li> <li>Reutilizabilitate - Componente \u0219i servicii comune pentru toate integr\u0103rile</li> <li>Securitate - Protocoale de securitate standardizate \u0219i audit complet</li> <li>Performan\u021b\u0103 - Optimiz\u0103ri pentru r\u0103spuns rapid \u0219i scalabilitate</li> </ol>"},{"location":"fod/integrari/#model-de-integrare","title":"Model de Integrare","text":"<pre><code>graph LR\n    A[Aplica\u021bie FOD] --&gt; B[FOD.Components]\n    B --&gt; C[Servicii de Integrare]\n    C --&gt; D[MPass]\n    C --&gt; E[MPay]\n    C --&gt; F[MDelivery]\n    C --&gt; G[Alte Servicii]\n</code></pre>"},{"location":"fod/integrari/#configurare-generala","title":"Configurare General\u0103","text":""},{"location":"fod/integrari/#1-inregistrarea-serviciilor","title":"1. \u00cenregistrarea Serviciilor","text":"<p>Toate integr\u0103rile se \u00eenregistreaz\u0103 \u00een <code>Program.cs</code>:</p> <pre><code>// MPass\nbuilder.Services.AddMPassAuthentication(options =&gt;\n{\n    options.ClientId = configuration[\"MPass:ClientId\"];\n    options.ClientSecret = configuration[\"MPass:ClientSecret\"];\n});\n\n// MPay\nbuilder.Services.AddMPayIntegration(options =&gt;\n{\n    options.MerchantId = configuration[\"MPay:MerchantId\"];\n    options.ApiKey = configuration[\"MPay:ApiKey\"];\n});\n\n// MDelivery\nbuilder.Services.AddMDeliveryService(options =&gt;\n{\n    options.ServiceUrl = configuration[\"MDelivery:ServiceUrl\"];\n});\n</code></pre>"},{"location":"fod/integrari/#2-configurare-appsettings","title":"2. Configurare AppSettings","text":"<pre><code>{\n  \"MPass\": {\n    \"ClientId\": \"your-client-id\",\n    \"ClientSecret\": \"your-client-secret\",\n    \"Authority\": \"https://mpass.gov.md\"\n  },\n  \"MPay\": {\n    \"MerchantId\": \"your-merchant-id\",\n    \"ApiKey\": \"your-api-key\",\n    \"Environment\": \"Production\"\n  },\n  \"MDelivery\": {\n    \"ServiceUrl\": \"https://mdelivery.gov.md/api\",\n    \"ApiKey\": \"your-api-key\"\n  }\n}\n</code></pre>"},{"location":"fod/integrari/#securitate-si-conformitate","title":"Securitate \u0219i Conformitate","text":""},{"location":"fod/integrari/#standarde-de-securitate","title":"Standarde de Securitate","text":"<ul> <li>OAuth 2.0 / OpenID Connect pentru autentificare</li> <li>TLS 1.2+ pentru toate comunica\u021biile</li> <li>Semn\u0103tur\u0103 digital\u0103 pentru documente oficiale</li> <li>Criptare end-to-end pentru date sensibile</li> </ul>"},{"location":"fod/integrari/#conformitate-legala","title":"Conformitate Legal\u0103","text":"<ul> <li>Respectarea GDPR \u0219i legisla\u021biei na\u021bionale</li> <li>Audit trail complet pentru toate opera\u021biunile</li> <li>P\u0103strarea datelor conform cerin\u021belor legale</li> <li>Acces controlat pe baz\u0103 de roluri</li> </ul>"},{"location":"fod/integrari/#monitorizare-si-logging","title":"Monitorizare \u0219i Logging","text":""},{"location":"fod/integrari/#metrici-importante","title":"Metrici Importante","text":"<ul> <li>Timp de r\u0103spuns pentru fiecare serviciu</li> <li>Rata de succes/eroare</li> <li>Volum de tranzac\u021bii</li> <li>Disponibilitate servicii</li> </ul>"},{"location":"fod/integrari/#configurare-logging","title":"Configurare Logging","text":"<pre><code>builder.Services.AddLogging(config =&gt;\n{\n    config.AddConfiguration(configuration.GetSection(\"Logging\"));\n    config.AddConsole();\n    config.AddDebug();\n    config.AddEventSourceLogger();\n});\n</code></pre>"},{"location":"fod/integrari/#tratare-erori","title":"Tratare Erori","text":""},{"location":"fod/integrari/#strategii-de-resilience","title":"Strategii de Resilience","text":"<ol> <li>Retry Policies - Re\u00eencercare automat\u0103 \u00een caz de erori temporare</li> <li>Circuit Breaker - Protec\u021bie \u00eempotriva serviciilor indisponibile</li> <li>Timeout Management - Gestionare timeout-uri pentru fiecare serviciu</li> <li>Fallback Mechanisms - Comportament alternativ \u00een caz de eroare</li> </ol>"},{"location":"fod/integrari/#exemplu-implementare","title":"Exemplu Implementare","text":"<pre><code>services.AddHttpClient&lt;IMPayService&gt;()\n    .AddPolicyHandler(GetRetryPolicy())\n    .AddPolicyHandler(GetCircuitBreakerPolicy());\n\nstatic IAsyncPolicy&lt;HttpResponseMessage&gt; GetRetryPolicy()\n{\n    return HttpPolicyExtensions\n        .HandleTransientHttpError()\n        .WaitAndRetryAsync(\n            3,\n            retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)),\n            onRetry: (outcome, timespan, retryCount, context) =&gt;\n            {\n                // Log retry attempt\n            });\n}\n</code></pre>"},{"location":"fod/integrari/#suport-si-resurse","title":"Suport \u0219i Resurse","text":""},{"location":"fod/integrari/#documentatie-oficiala","title":"Documenta\u021bie Oficial\u0103","text":"<ul> <li>MPass Documentation</li> <li>MPay Integration Guide</li> <li>MConnect API Reference</li> </ul>"},{"location":"fod/integrari/#contacte-suport","title":"Contacte Suport","text":"<ul> <li>Suport Tehnic: support@egov.md</li> <li>\u00centreb\u0103ri Comerciale: business@egov.md</li> <li>Raportare Probleme: GitHub Issues</li> </ul>"},{"location":"fod/integrari/#roadmap","title":"Roadmap","text":""},{"location":"fod/integrari/#planificate-pentru-2024","title":"Planificate pentru 2024","text":"<ul> <li>Integrare cu MSign pentru semn\u0103tur\u0103 mobil\u0103</li> <li>Suport pentru MNotify - notific\u0103ri push</li> <li>API unificat pentru toate serviciile</li> <li>Dashboard de monitorizare integrat</li> </ul>"},{"location":"fod/integrari/#in-dezvoltare","title":"\u00cen Dezvoltare","text":"<ul> <li>Componente React pentru integr\u0103ri</li> <li>SDK-uri pentru alte limbaje</li> <li>Documenta\u021bie interactiv\u0103</li> <li>Exemple de cod extinse</li> </ul>"},{"location":"fod/integrari/#concluzie","title":"Concluzie","text":"<p>Integr\u0103rile cu serviciile guvernamentale reprezint\u0103 fundamentul pentru dezvoltarea aplica\u021biilor de e-guvernare moderne. FOD.Components ofer\u0103 toate instrumentele necesare pentru o integrare rapid\u0103 \u0219i sigur\u0103 cu ecosistemul digital guvernamental din Moldova.</p> <p>Pentru asisten\u021b\u0103 suplimentar\u0103 sau \u00eentreb\u0103ri specifice, consulta\u021bi documenta\u021bia detaliat\u0103 pentru fiecare serviciu sau contacta\u021bi echipa de suport.</p>"},{"location":"fod/integrari/apostila/","title":"Apostila","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea Apostila.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/apostila/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Apostila ofer\u0103 servicii de apostilare electronic\u0103.</p>"},{"location":"fod/integrari/apostila/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Cerere</li> <li>Status</li> </ul>"},{"location":"fod/integrari/apostila/cerere/","title":"Cerere Apostil\u0103","text":"<p>Aceast\u0103 pagin\u0103 descrie crearea cererilor de apostilare.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/apostila/cerere/#tipuri-de-documente","title":"Tipuri de documente","text":""},{"location":"fod/integrari/apostila/cerere/#completare-cerere","title":"Completare cerere","text":""},{"location":"fod/integrari/apostila/cerere/#trimitere","title":"Trimitere","text":""},{"location":"fod/integrari/apostila/status/","title":"Status Apostil\u0103","text":"<p>Aceast\u0103 pagin\u0103 descrie verificarea statusului apostil\u0103rii.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/apostila/status/#stari-posibile","title":"St\u0103ri posibile","text":""},{"location":"fod/integrari/apostila/status/#verificare-status","title":"Verificare status","text":""},{"location":"fod/integrari/apostila/status/#descarcare-apostila","title":"Desc\u0103rcare apostil\u0103","text":""},{"location":"fod/integrari/clients-api/","title":"Clients API","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru Clients API.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/clients-api/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Clients API ofer\u0103 acces la datele clien\u021bilor.</p>"},{"location":"fod/integrari/clients-api/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Cabinet</li> </ul>"},{"location":"fod/integrari/clients-api/cabinet/","title":"Cabinet Personal","text":"<p>Aceast\u0103 pagin\u0103 descrie func\u021bionalit\u0103\u021bile cabinetului personal.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/clients-api/cabinet/#date-profil","title":"Date profil","text":""},{"location":"fod/integrari/clients-api/cabinet/#servicii-disponibile","title":"Servicii disponibile","text":""},{"location":"fod/integrari/clients-api/cabinet/#istoric","title":"Istoric","text":""},{"location":"fod/integrari/docstore/","title":"DocStore","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea DocStore.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/docstore/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>DocStore ofer\u0103 stocare \u0219i gestionare documente.</p>"},{"location":"fod/integrari/docstore/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Upload</li> <li>Semnare</li> </ul>"},{"location":"fod/integrari/docstore/semnare/","title":"Semnare Electronic\u0103","text":"<p>Aceast\u0103 pagin\u0103 descrie semnarea electronic\u0103 a documentelor.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/docstore/semnare/#tipuri-de-semnaturi","title":"Tipuri de semn\u0103turi","text":""},{"location":"fod/integrari/docstore/semnare/#flux-de-semnare","title":"Flux de semnare","text":""},{"location":"fod/integrari/docstore/semnare/#validare-semnaturi","title":"Validare semn\u0103turi","text":""},{"location":"fod/integrari/docstore/upload/","title":"Upload Documente","text":"<p>Aceast\u0103 pagin\u0103 descrie \u00eenc\u0103rcarea documentelor \u00een DocStore.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/docstore/upload/#tipuri-acceptate","title":"Tipuri acceptate","text":""},{"location":"fod/integrari/docstore/upload/#limitari","title":"Limit\u0103ri","text":""},{"location":"fod/integrari/docstore/upload/#api-upload","title":"API upload","text":""},{"location":"fod/integrari/mconnect/","title":"MConnect","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea MConnect.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mconnect/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>MConnect ofer\u0103 acces la diverse servicii guvernamentale.</p>"},{"location":"fod/integrari/mconnect/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Generic</li> </ul>"},{"location":"fod/integrari/mconnect/generic/","title":"MConnect Generic","text":"<p>Aceast\u0103 pagin\u0103 descrie integrarea generic\u0103 MConnect.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mconnect/generic/#configurare-servicii","title":"Configurare servicii","text":""},{"location":"fod/integrari/mconnect/generic/#apelare-metode","title":"Apelare metode","text":""},{"location":"fod/integrari/mconnect/generic/#gestionare-raspunsuri","title":"Gestionare r\u0103spunsuri","text":""},{"location":"fod/integrari/mdelivery/","title":"MDelivery","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea MDelivery.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mdelivery/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>MDelivery permite trimiterea notific\u0103rilor \u0219i documentelor.</p>"},{"location":"fod/integrari/mdelivery/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Configurare</li> <li>Trimitere</li> <li>Status</li> </ul>"},{"location":"fod/integrari/mdelivery/configurare/","title":"Configurare MDelivery","text":"<p>Aceast\u0103 pagin\u0103 descrie configurarea MDelivery.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mdelivery/configurare/#parametri-de-configurare","title":"Parametri de configurare","text":""},{"location":"fod/integrari/mdelivery/configurare/#autentificare","title":"Autentificare","text":""},{"location":"fod/integrari/mdelivery/configurare/#testare-conexiune","title":"Testare conexiune","text":""},{"location":"fod/integrari/mdelivery/status/","title":"Status Livrare","text":"<p>Aceast\u0103 pagin\u0103 descrie verificarea statusului livr\u0103rilor.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mdelivery/status/#interogare-status","title":"Interogare status","text":""},{"location":"fod/integrari/mdelivery/status/#webhook-uri","title":"Webhook-uri","text":""},{"location":"fod/integrari/mdelivery/status/#rapoarte","title":"Rapoarte","text":""},{"location":"fod/integrari/mdelivery/trimitere/","title":"Trimitere Notific\u0103ri","text":"<p>Aceast\u0103 pagin\u0103 descrie trimiterea notific\u0103rilor prin MDelivery.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mdelivery/trimitere/#tipuri-de-notificari","title":"Tipuri de notific\u0103ri","text":""},{"location":"fod/integrari/mdelivery/trimitere/#format-mesaje","title":"Format mesaje","text":""},{"location":"fod/integrari/mdelivery/trimitere/#prioritati","title":"Priorit\u0103\u021bi","text":""},{"location":"fod/integrari/mpass/","title":"MPass - Serviciul de Autentificare","text":""},{"location":"fod/integrari/mpass/#introducere","title":"Introducere","text":"<p>MPass este serviciul na\u021bional de autentificare electronic\u0103 al Republicii Moldova, care ofer\u0103 o solu\u021bie unificat\u0103 pentru accesarea tuturor serviciilor publice digitale. Integrarea MPass \u00een aplica\u021biile FOD permite cet\u0103\u021benilor s\u0103 se autentifice o singur\u0103 dat\u0103 \u0219i s\u0103 acceseze multiple servicii guvernamentale f\u0103r\u0103 a fi nevoi\u021bi s\u0103 se re-autentifice.</p>"},{"location":"fod/integrari/mpass/#caracteristici-principale","title":"Caracteristici Principale","text":""},{"location":"fod/integrari/mpass/#metode-de-autentificare-suportate","title":"\ud83d\udd10 Metode de Autentificare Suportate","text":"<ol> <li>Semn\u0103tur\u0103 Digital\u0103 - Utiliz\u00e2nd certificate digitale calificate</li> <li>ID Mobil - Autentificare prin telefon mobil</li> <li>Nume utilizator \u0219i parol\u0103 - Pentru servicii mai pu\u021bin critice</li> <li>Semn\u0103tur\u0103 Mobil\u0103 - \u00cen dezvoltare</li> </ol>"},{"location":"fod/integrari/mpass/#beneficii","title":"\ud83c\udf1f Beneficii","text":"<ul> <li>Single Sign-On (SSO) - O singur\u0103 autentificare pentru toate serviciile</li> <li>Securitate sporit\u0103 - Protocoale moderne de securitate</li> <li>Experien\u021b\u0103 uniform\u0103 - Interfa\u021b\u0103 consistent\u0103 pentru toate aplica\u021biile</li> <li>Gestionare centralizat\u0103 - Administrare unificat\u0103 a utilizatorilor</li> </ul>"},{"location":"fod/integrari/mpass/#arhitectura-tehnica","title":"Arhitectur\u0103 Tehnic\u0103","text":""},{"location":"fod/integrari/mpass/#flux-de-autentificare","title":"Flux de Autentificare","text":"<pre><code>sequenceDiagram\n    participant U as Utilizator\n    participant A as Aplica\u021bie FOD\n    participant M as MPass\n    participant I as Identity Provider\n\n    U-&gt;&gt;A: Acceseaz\u0103 aplica\u021bia\n    A-&gt;&gt;M: Redirec\u021bionare pentru autentificare\n    M-&gt;&gt;U: Afi\u0219eaz\u0103 op\u021biuni de autentificare\n    U-&gt;&gt;M: Selecteaz\u0103 metod\u0103 \u0219i se autentific\u0103\n    M-&gt;&gt;I: Valideaz\u0103 creden\u021biale\n    I-&gt;&gt;M: Confirm\u0103 identitatea\n    M-&gt;&gt;A: Returneaz\u0103 token de acces\n    A-&gt;&gt;U: Permite acces la aplica\u021bie\n</code></pre>"},{"location":"fod/integrari/mpass/#componente-principale","title":"Componente Principale","text":"<ol> <li>Fod.Integrations.MPass - Libr\u0103ria principal\u0103 de integrare</li> <li>MPassAuthenticationHandler - Handler pentru procesarea autentific\u0103rii</li> <li>MPassOptions - Configur\u0103ri pentru serviciul MPass</li> <li>MPassClaimsTransformation - Transformarea claim-urilor \u00een context utilizator</li> </ol>"},{"location":"fod/integrari/mpass/#configurare-si-instalare","title":"Configurare \u0219i Instalare","text":""},{"location":"fod/integrari/mpass/#1-instalare-pachet-nuget","title":"1. Instalare Pachet NuGet","text":"<pre><code>dotnet add package Fod.Integrations.MPass\n</code></pre>"},{"location":"fod/integrari/mpass/#2-configurare-in-programcs","title":"2. Configurare \u00een Program.cs","text":"<pre><code>using Fod.Integrations.MPass;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Adaug\u0103 serviciile MPass\nbuilder.Services.AddAuthentication(options =&gt;\n{\n    options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n    options.DefaultChallengeScheme = MPassDefaults.AuthenticationScheme;\n})\n.AddCookie()\n.AddMPass(options =&gt;\n{\n    options.ClientId = builder.Configuration[\"MPass:ClientId\"];\n    options.ClientSecret = builder.Configuration[\"MPass:ClientSecret\"];\n    options.Authority = builder.Configuration[\"MPass:Authority\"];\n    options.CallbackPath = \"/signin-mpass\";\n    options.SignedOutCallbackPath = \"/signout-callback-mpass\";\n\n    // Configur\u0103ri adi\u021bionale\n    options.SaveTokens = true;\n    options.GetClaimsFromUserInfoEndpoint = true;\n\n    // Scope-uri necesare\n    options.Scope.Add(\"openid\");\n    options.Scope.Add(\"profile\");\n    options.Scope.Add(\"email\");\n    options.Scope.Add(\"phone\");\n});\n\n// Adaug\u0103 serviciile FOD pentru MPass\nbuilder.Services.AddMPassIntegration();\n\nvar app = builder.Build();\n\n// Activeaz\u0103 autentificarea\napp.UseAuthentication();\napp.UseAuthorization();\n</code></pre>"},{"location":"fod/integrari/mpass/#3-configurare-appsettings","title":"3. Configurare AppSettings","text":"<pre><code>{\n  \"MPass\": {\n    \"ClientId\": \"your-application-client-id\",\n    \"ClientSecret\": \"your-application-client-secret\",\n    \"Authority\": \"https://mpass.gov.md\",\n    \"ResponseType\": \"code\",\n    \"SaveTokens\": true,\n    \"RequireHttpsMetadata\": true,\n    \"ValidateIssuer\": true,\n    \"ValidateAudience\": true,\n    \"NameClaimType\": \"name\",\n    \"RoleClaimType\": \"role\"\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#utilizare-in-componente","title":"Utilizare \u00een Componente","text":""},{"location":"fod/integrari/mpass/#1-componenta-de-login","title":"1. Componenta de Login","text":"<pre><code>@page \"/login\"\n@using Microsoft.AspNetCore.Authentication\n@inject NavigationManager Navigation\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;h2&gt;Autentificare MPass&lt;/h2&gt;\n        &lt;p&gt;Pentru a accesa serviciile, v\u0103 rug\u0103m s\u0103 v\u0103 autentifica\u021bi folosind MPass.&lt;/p&gt;\n\n        &lt;FodButton OnClick=\"Login\" Variant=\"primary\" FullWidth=\"true\"&gt;\n            &lt;FodIcon Name=\"mpass-logo\" /&gt; Autentificare cu MPass\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private async Task Login()\n    {\n        var authProps = new AuthenticationProperties\n        {\n            RedirectUri = \"/\",\n            IsPersistent = true\n        };\n\n        Navigation.NavigateTo($\"/authentication/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}\", true);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#2-afisare-informatii-utilizator","title":"2. Afi\u0219are Informa\u021bii Utilizator","text":"<pre><code>@page \"/profile\"\n@using System.Security.Claims\n@inject AuthenticationStateProvider AuthenticationStateProvider\n\n&lt;AuthorizeView&gt;\n    &lt;Authorized&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;h3&gt;Profil Utilizator&lt;/h3&gt;\n                &lt;dl&gt;\n                    &lt;dt&gt;Nume:&lt;/dt&gt;\n                    &lt;dd&gt;@context.User.FindFirst(ClaimTypes.Name)?.Value&lt;/dd&gt;\n\n                    &lt;dt&gt;Email:&lt;/dt&gt;\n                    &lt;dd&gt;@context.User.FindFirst(ClaimTypes.Email)?.Value&lt;/dd&gt;\n\n                    &lt;dt&gt;IDNP:&lt;/dt&gt;\n                    &lt;dd&gt;@context.User.FindFirst(\"idnp\")?.Value&lt;/dd&gt;\n\n                    &lt;dt&gt;Tip Autentificare:&lt;/dt&gt;\n                    &lt;dd&gt;@context.User.FindFirst(\"auth_method\")?.Value&lt;/dd&gt;\n                &lt;/dl&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/Authorized&gt;\n    &lt;NotAuthorized&gt;\n        &lt;FodAlert Type=\"info\"&gt;\n            Trebuie s\u0103 v\u0103 autentifica\u021bi pentru a vedea profilul.\n        &lt;/FodAlert&gt;\n    &lt;/NotAuthorized&gt;\n&lt;/AuthorizeView&gt;\n</code></pre>"},{"location":"fod/integrari/mpass/#3-protejare-pagini","title":"3. Protejare Pagini","text":"<pre><code>@page \"/servicii-protejate\"\n@attribute [Authorize]\n\n&lt;h1&gt;Servicii Protejate&lt;/h1&gt;\n&lt;p&gt;Aceast\u0103 pagin\u0103 este accesibil\u0103 doar utilizatorilor autentifica\u021bi.&lt;/p&gt;\n</code></pre>"},{"location":"fod/integrari/mpass/#gestionare-roluri-si-permisiuni","title":"Gestionare Roluri \u0219i Permisiuni","text":""},{"location":"fod/integrari/mpass/#1-configurare-roluri","title":"1. Configurare Roluri","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.ClaimActions.MapJsonKey(\"role\", \"role\");\n    options.ClaimActions.MapJsonKey(\"permissions\", \"permissions\");\n    options.ClaimActions.MapJsonKey(\"organization\", \"organization\");\n});\n</code></pre>"},{"location":"fod/integrari/mpass/#2-verificare-roluri-in-componente","title":"2. Verificare Roluri \u00een Componente","text":"<pre><code>@page \"/admin\"\n@attribute [Authorize(Roles = \"Administrator\")]\n\n&lt;h1&gt;Panou Administrare&lt;/h1&gt;\n\n&lt;AuthorizeView Roles=\"Administrator,Manager\"&gt;\n    &lt;Authorized&gt;\n        &lt;p&gt;Ave\u021bi acces la func\u021biile administrative.&lt;/p&gt;\n    &lt;/Authorized&gt;\n    &lt;NotAuthorized&gt;\n        &lt;FodAlert Type=\"error\"&gt;\n            Nu ave\u021bi permisiunile necesare pentru aceast\u0103 pagin\u0103.\n        &lt;/FodAlert&gt;\n    &lt;/NotAuthorized&gt;\n&lt;/AuthorizeView&gt;\n</code></pre>"},{"location":"fod/integrari/mpass/#servicii-auxiliare","title":"Servicii Auxiliare","text":""},{"location":"fod/integrari/mpass/#1-impassuserservice","title":"1. IMPassUserService","text":"<pre><code>public interface IMPassUserService\n{\n    Task&lt;MPassUser&gt; GetCurrentUserAsync();\n    Task&lt;bool&gt; HasPermissionAsync(string permission);\n    Task&lt;IEnumerable&lt;string&gt;&gt; GetUserRolesAsync();\n    Task&lt;string&gt; GetUserOrganizationAsync();\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#2-utilizare-in-cod","title":"2. Utilizare \u00een Cod","text":"<pre><code>@inject IMPassUserService UserService\n\n@code {\n    private MPassUser currentUser;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentUser = await UserService.GetCurrentUserAsync();\n\n        if (!await UserService.HasPermissionAsync(\"view_sensitive_data\"))\n        {\n            Navigation.NavigateTo(\"/unauthorized\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#gestionare-token-uri","title":"Gestionare Token-uri","text":""},{"location":"fod/integrari/mpass/#1-refresh-token","title":"1. Refresh Token","text":"<pre><code>public class MPassTokenService : IMPassTokenService\n{\n    public async Task&lt;string&gt; GetAccessTokenAsync()\n    {\n        var authenticateResult = await _httpContextAccessor.HttpContext\n            .AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\n\n        if (authenticateResult?.Properties?.Items != null &amp;&amp; \n            authenticateResult.Properties.Items.TryGetValue(\".Token.access_token\", out var token))\n        {\n            return token;\n        }\n\n        return null;\n    }\n\n    public async Task&lt;bool&gt; RefreshTokenAsync()\n    {\n        // Implementare refresh token\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#2-interceptor-pentru-api-calls","title":"2. Interceptor pentru API Calls","text":"<pre><code>public class MPassAuthorizationMessageHandler : DelegatingHandler\n{\n    private readonly IMPassTokenService _tokenService;\n\n    protected override async Task&lt;HttpResponseMessage&gt; SendAsync(\n        HttpRequestMessage request, \n        CancellationToken cancellationToken)\n    {\n        var token = await _tokenService.GetAccessTokenAsync();\n\n        if (!string.IsNullOrEmpty(token))\n        {\n            request.Headers.Authorization = \n                new AuthenticationHeaderValue(\"Bearer\", token);\n        }\n\n        return await base.SendAsync(request, cancellationToken);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#logout-si-session-management","title":"Logout \u0219i Session Management","text":""},{"location":"fod/integrari/mpass/#1-implementare-logout","title":"1. Implementare Logout","text":"<pre><code>@page \"/logout\"\n@inject NavigationManager Navigation\n\n@code {\n    protected override void OnInitialized()\n    {\n        Navigation.NavigateTo(\"/authentication/logout\", true);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#2-session-timeout","title":"2. Session Timeout","text":"<pre><code>builder.Services.ConfigureApplicationCookie(options =&gt;\n{\n    options.ExpireTimeSpan = TimeSpan.FromMinutes(30);\n    options.SlidingExpiration = true;\n    options.Events.OnRedirectToLogin = context =&gt;\n    {\n        context.Response.StatusCode = 401;\n        return Task.CompletedTask;\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/#tratare-erori","title":"Tratare Erori","text":""},{"location":"fod/integrari/mpass/#1-handler-pentru-erori-de-autentificare","title":"1. Handler pentru Erori de Autentificare","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.Events.OnRemoteFailure = context =&gt;\n    {\n        context.Response.Redirect($\"/authentication/error?message={context.Failure.Message}\");\n        context.HandleResponse();\n        return Task.CompletedTask;\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/#2-pagina-de-eroare","title":"2. Pagin\u0103 de Eroare","text":"<pre><code>@page \"/authentication/error\"\n\n&lt;FodAlert Type=\"error\"&gt;\n    &lt;h4&gt;Eroare de Autentificare&lt;/h4&gt;\n    &lt;p&gt;@ErrorMessage&lt;/p&gt;\n    &lt;FodButton OnClick=\"@(() =&gt; Navigation.NavigateTo(\"/\"))\"&gt;\n        \u00cenapoi la Pagina Principal\u0103\n    &lt;/FodButton&gt;\n&lt;/FodAlert&gt;\n\n@code {\n    [Parameter]\n    [SupplyParameterFromQuery]\n    public string ErrorMessage { get; set; }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#logging-si-monitorizare","title":"Logging \u0219i Monitorizare","text":""},{"location":"fod/integrari/mpass/#1-configurare-logging","title":"1. Configurare Logging","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.Events.OnTokenValidated = context =&gt;\n    {\n        var logger = context.HttpContext.RequestServices\n            .GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();\n\n        logger.LogInformation(\"User {UserId} authenticated successfully\", \n            context.Principal.FindFirst(\"sub\")?.Value);\n\n        return Task.CompletedTask;\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/#2-audit-trail","title":"2. Audit Trail","text":"<pre><code>public class MPassAuditService\n{\n    public async Task LogAuthenticationAsync(ClaimsPrincipal user, string action)\n    {\n        var auditEntry = new AuditEntry\n        {\n            UserId = user.FindFirst(\"sub\")?.Value,\n            UserName = user.Identity?.Name,\n            Action = action,\n            Timestamp = DateTime.UtcNow,\n            IpAddress = GetClientIpAddress(),\n            UserAgent = GetUserAgent()\n        };\n\n        await _auditRepository.AddAsync(auditEntry);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#testare","title":"Testare","text":""},{"location":"fod/integrari/mpass/#1-mediu-de-test","title":"1. Mediu de Test","text":"<pre><code>{\n  \"MPass\": {\n    \"Authority\": \"https://test-mpass.gov.md\",\n    \"ClientId\": \"test-client-id\",\n    \"ClientSecret\": \"test-client-secret\",\n    \"UseTestUsers\": true\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/#2-mock-authentication-pentru-development","title":"2. Mock Authentication pentru Development","text":"<pre><code>#if DEBUG\nbuilder.Services.AddAuthentication(\"Test\")\n    .AddScheme&lt;TestAuthenticationSchemeOptions, TestAuthenticationHandler&gt;(\n        \"Test\", options =&gt; { });\n#endif\n</code></pre>"},{"location":"fod/integrari/mpass/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/integrari/mpass/#probleme-comune","title":"Probleme Comune","text":"<ol> <li>\"Invalid redirect_uri\"</li> <li>Verifica\u021bi c\u0103 CallbackPath este \u00eenregistrat \u00een MPass</li> <li> <p>Asigura\u021bi-v\u0103 c\u0103 URL-ul aplica\u021biei este corect</p> </li> <li> <p>\"Access denied\"</p> </li> <li>Verifica\u021bi scope-urile solicitate</li> <li> <p>Confirma\u021bi c\u0103 aplica\u021bia are permisiunile necesare</p> </li> <li> <p>Token expirat</p> </li> <li>Implementa\u021bi refresh token</li> <li>Configura\u021bi corect sliding expiration</li> </ol>"},{"location":"fod/integrari/mpass/#debug-mode","title":"Debug Mode","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.Events.OnMessageReceived = context =&gt;\n    {\n        _logger.LogDebug(\"Message received: {Message}\", \n            JsonSerializer.Serialize(context.Request.Query));\n        return Task.CompletedTask;\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/#resurse-aditionale","title":"Resurse Adi\u021bionale","text":"<ul> <li>Documenta\u021bie Oficial\u0103 MPass</li> <li>Exemple de Cod</li> <li>API Reference</li> <li>Ghid de Migrare</li> </ul>"},{"location":"fod/integrari/mpass/#concluzie","title":"Concluzie","text":"<p>Integrarea MPass ofer\u0103 o solu\u021bie robust\u0103 \u0219i sigur\u0103 pentru autentificarea utilizatorilor \u00een aplica\u021biile guvernamentale. Prin utilizarea componentelor \u0219i serviciilor FOD, dezvoltatorii pot implementa rapid autentificarea MPass, beneficiind de toate avantajele unui sistem centralizat de identitate digital\u0103.</p>"},{"location":"fod/integrari/mpass/autentificare/","title":"Autentificare MPass","text":"<p>Aceast\u0103 pagin\u0103 descrie procesul de autentificare MPass.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpass/autentificare/#flux-oauth","title":"Flux OAuth","text":""},{"location":"fod/integrari/mpass/autentificare/#tokenuri","title":"Tokenuri","text":""},{"location":"fod/integrari/mpass/autentificare/#gestionare-erori","title":"Gestionare erori","text":""},{"location":"fod/integrari/mpass/configurare/","title":"Configurare MPass","text":""},{"location":"fod/integrari/mpass/configurare/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Aceast\u0103 pagin\u0103 detaliaz\u0103 procesul complet de configurare a integr\u0103rii MPass \u00een aplica\u021biile FOD, incluz\u00e2nd \u00eenregistrarea aplica\u021biei, configurarea parametrilor \u0219i set\u0103rile de securitate.</p>"},{"location":"fod/integrari/mpass/configurare/#inregistrare-aplicatie","title":"\u00cenregistrare Aplica\u021bie","text":""},{"location":"fod/integrari/mpass/configurare/#1-obtinere-credentiale","title":"1. Ob\u021binere Creden\u021biale","text":"<p>Pentru a integra MPass, trebuie s\u0103 ob\u021bine\u021bi creden\u021bialele de la administratorul MPass:</p> <ol> <li>Accesa\u021bi portalul de administrare MPass</li> <li>Crea\u021bi o aplica\u021bie nou\u0103</li> <li>Ob\u021bine\u021bi:</li> <li>Client ID</li> <li>Client Secret</li> <li>Redirect URIs permise</li> </ol>"},{"location":"fod/integrari/mpass/configurare/#2-configurare-redirect-uris","title":"2. Configurare Redirect URIs","text":"<pre><code>https://yourdomain.com/signin-mpass\nhttps://yourdomain.com/signout-callback-mpass\nhttps://localhost:5000/signin-mpass (pentru development)\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-aplicatie","title":"Configurare Aplica\u021bie","text":""},{"location":"fod/integrari/mpass/configurare/#1-appsettingsjson","title":"1. AppSettings.json","text":"<pre><code>{\n  \"MPass\": {\n    \"Authority\": \"https://mpass.gov.md\",\n    \"ClientId\": \"your-client-id\",\n    \"ClientSecret\": \"your-client-secret\",\n    \"ResponseType\": \"code\",\n    \"SaveTokens\": true,\n    \"GetClaimsFromUserInfoEndpoint\": true,\n    \"RequireHttpsMetadata\": true,\n    \"CallbackPath\": \"/signin-mpass\",\n    \"SignedOutCallbackPath\": \"/signout-callback-mpass\",\n    \"RemoteSignOutPath\": \"/signout-mpass\",\n    \"Scope\": [\n      \"openid\",\n      \"profile\",\n      \"email\",\n      \"phone\",\n      \"idnp\"\n    ],\n    \"Events\": {\n      \"OnRemoteFailure\": {\n        \"RedirectPath\": \"/authentication/error\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-configurare-pentru-medii-multiple","title":"2. Configurare pentru Medii Multiple","text":"<pre><code>// appsettings.Development.json\n{\n  \"MPass\": {\n    \"Authority\": \"https://test-mpass.gov.md\",\n    \"RequireHttpsMetadata\": false,\n    \"ValidateIssuer\": false\n  }\n}\n\n// appsettings.Production.json\n{\n  \"MPass\": {\n    \"Authority\": \"https://mpass.gov.md\",\n    \"RequireHttpsMetadata\": true,\n    \"ValidateIssuer\": true\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-in-programcs","title":"Configurare \u00een Program.cs","text":""},{"location":"fod/integrari/mpass/configurare/#1-configurare-de-baza","title":"1. Configurare de Baz\u0103","text":"<pre><code>using Fod.Integrations.MPass;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Configurare autentificare\nbuilder.Services.AddAuthentication(options =&gt;\n{\n    options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n    options.DefaultChallengeScheme = MPassDefaults.AuthenticationScheme;\n})\n.AddCookie(options =&gt;\n{\n    options.LoginPath = \"/Account/Login\";\n    options.LogoutPath = \"/Account/Logout\";\n    options.ExpireTimeSpan = TimeSpan.FromMinutes(60);\n    options.SlidingExpiration = true;\n})\n.AddMPass(options =&gt;\n{\n    builder.Configuration.GetSection(\"MPass\").Bind(options);\n});\n\n// Adaug\u0103 serviciile MPass\nbuilder.Services.AddMPassServices();\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-configurare-avansata","title":"2. Configurare Avansat\u0103","text":"<pre><code>.AddMPass(options =&gt;\n{\n    // Configur\u0103ri de baz\u0103\n    options.ClientId = configuration[\"MPass:ClientId\"];\n    options.ClientSecret = configuration[\"MPass:ClientSecret\"];\n    options.Authority = configuration[\"MPass:Authority\"];\n\n    // Configur\u0103ri de securitate\n    options.RequireHttpsMetadata = !environment.IsDevelopment();\n    options.SaveTokens = true;\n    options.TokenValidationParameters = new TokenValidationParameters\n    {\n        NameClaimType = \"name\",\n        RoleClaimType = \"role\",\n        ValidateIssuer = true,\n        ValidIssuer = configuration[\"MPass:Authority\"]\n    };\n\n    // Configurare events\n    options.Events = new OpenIdConnectEvents\n    {\n        OnTokenValidated = async context =&gt;\n        {\n            var userService = context.HttpContext.RequestServices\n                .GetRequiredService&lt;IUserService&gt;();\n\n            await userService.SyncUserFromMPassAsync(context.Principal);\n        },\n\n        OnRemoteFailure = context =&gt;\n        {\n            context.Response.Redirect(\"/authentication/error\");\n            context.HandleResponse();\n            return Task.CompletedTask;\n        },\n\n        OnRedirectToIdentityProvider = context =&gt;\n        {\n            // Adaug\u0103 parametri custom\n            context.ProtocolMessage.SetParameter(\"ui_locales\", \"ro\");\n            return Task.CompletedTask;\n        }\n    };\n\n    // Claim mappings\n    options.ClaimActions.MapJsonKey(\"idnp\", \"idnp\");\n    options.ClaimActions.MapJsonKey(\"phone\", \"phone_number\");\n    options.ClaimActions.MapJsonKey(\"organization\", \"organization\");\n});\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-claim-transformation","title":"Configurare Claim Transformation","text":""},{"location":"fod/integrari/mpass/configurare/#1-custom-claims-transformation","title":"1. Custom Claims Transformation","text":"<pre><code>public class MPassClaimsTransformation : IClaimsTransformation\n{\n    private readonly IUserService _userService;\n\n    public MPassClaimsTransformation(IUserService userService)\n    {\n        _userService = userService;\n    }\n\n    public async Task&lt;ClaimsPrincipal&gt; TransformAsync(ClaimsPrincipal principal)\n    {\n        var claimsIdentity = principal.Identity as ClaimsIdentity;\n\n        if (claimsIdentity?.IsAuthenticated ?? false)\n        {\n            var idnp = principal.FindFirst(\"idnp\")?.Value;\n\n            if (!string.IsNullOrEmpty(idnp))\n            {\n                // Adaug\u0103 roluri din baza de date local\u0103\n                var user = await _userService.GetUserByIdnpAsync(idnp);\n\n                foreach (var role in user.Roles)\n                {\n                    claimsIdentity.AddClaim(new Claim(ClaimTypes.Role, role));\n                }\n\n                // Adaug\u0103 claim-uri custom\n                claimsIdentity.AddClaim(new Claim(\"department\", user.Department));\n                claimsIdentity.AddClaim(new Claim(\"employee_id\", user.EmployeeId));\n            }\n        }\n\n        return principal;\n    }\n}\n\n// \u00cenregistrare \u00een Program.cs\nbuilder.Services.AddScoped&lt;IClaimsTransformation, MPassClaimsTransformation&gt;();\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-cors","title":"Configurare CORS","text":"<p>Pentru aplica\u021bii SPA sau API-uri:</p> <pre><code>builder.Services.AddCors(options =&gt;\n{\n    options.AddPolicy(\"MPassPolicy\", policy =&gt;\n    {\n        policy.WithOrigins(\n                \"https://mpass.gov.md\",\n                \"https://test-mpass.gov.md\"\n            )\n            .AllowAnyHeader()\n            .AllowAnyMethod()\n            .AllowCredentials();\n    });\n});\n\napp.UseCors(\"MPassPolicy\");\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-pentru-blazor","title":"Configurare pentru Blazor","text":""},{"location":"fod/integrari/mpass/configurare/#1-blazor-server","title":"1. Blazor Server","text":"<pre><code>// Program.cs\nbuilder.Services.AddServerSideBlazor();\nbuilder.Services.AddHttpContextAccessor();\n\n// Adaug\u0103 AuthenticationStateProvider custom\nbuilder.Services.AddScoped&lt;AuthenticationStateProvider, MPassAuthenticationStateProvider&gt;();\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-blazor-webassembly","title":"2. Blazor WebAssembly","text":"<pre><code>// Program.cs (Client)\nbuilder.Services.AddOidcAuthentication(options =&gt;\n{\n    builder.Configuration.Bind(\"MPass\", options.ProviderOptions);\n    options.ProviderOptions.ResponseType = \"code\";\n});\n\n// Program.cs (Server)\nbuilder.Services.AddAuthentication()\n    .AddIdentityServerJwt();\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#configurare-proxy-si-firewall","title":"Configurare Proxy \u0219i Firewall","text":""},{"location":"fod/integrari/mpass/configurare/#1-configurare-pentru-proxy","title":"1. Configurare pentru Proxy","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.BackchannelHttpHandler = new HttpClientHandler\n    {\n        Proxy = new WebProxy(\"http://proxy.company.com:8080\")\n        {\n            Credentials = new NetworkCredential(\"user\", \"password\")\n        },\n        UseProxy = true\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-liste-albe-pentru-firewall","title":"2. Liste Albe pentru Firewall","text":"<p>Adrese IP care trebuie permise: - Production: <code>185.181.229.0/24</code> - Test: <code>185.181.230.0/24</code></p> <p>Porturi necesare: - HTTPS: 443 - HTTP: 80 (doar pentru redirect)</p>"},{"location":"fod/integrari/mpass/configurare/#monitorizare-si-logging","title":"Monitorizare \u0219i Logging","text":""},{"location":"fod/integrari/mpass/configurare/#1-configurare-logging-detaliat","title":"1. Configurare Logging Detaliat","text":"<pre><code>builder.Services.Configure&lt;MPassOptions&gt;(options =&gt;\n{\n    options.Events = new OpenIdConnectEvents\n    {\n        OnAuthenticationFailed = context =&gt;\n        {\n            var logger = context.HttpContext.RequestServices\n                .GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();\n\n            logger.LogError(context.Exception, \n                \"Authentication failed for user {User}\", \n                context.Principal?.Identity?.Name);\n\n            return Task.CompletedTask;\n        },\n\n        OnTokenResponseReceived = context =&gt;\n        {\n            var logger = context.HttpContext.RequestServices\n                .GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();\n\n            logger.LogInformation(\n                \"Token received for user {User}\", \n                context.Principal?.FindFirst(\"sub\")?.Value);\n\n            return Task.CompletedTask;\n        }\n    };\n});\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-health-checks","title":"2. Health Checks","text":"<pre><code>builder.Services.AddHealthChecks()\n    .AddUrlGroup(\n        new Uri($\"{configuration[\"MPass:Authority\"]}/.well-known/openid-configuration\"),\n        name: \"mpass\",\n        failureStatus: HealthStatus.Degraded);\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#securitate-aditionala","title":"Securitate Adi\u021bional\u0103","text":""},{"location":"fod/integrari/mpass/configurare/#1-anti-forgery-token","title":"1. Anti-Forgery Token","text":"<pre><code>builder.Services.AddAntiforgery(options =&gt;\n{\n    options.HeaderName = \"X-XSRF-TOKEN\";\n    options.Cookie.Name = \"XSRF-TOKEN\";\n    options.Cookie.HttpOnly = false;\n});\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#2-content-security-policy","title":"2. Content Security Policy","text":"<pre><code>app.Use(async (context, next) =&gt;\n{\n    context.Response.Headers.Add(\n        \"Content-Security-Policy\",\n        \"default-src 'self'; \" +\n        \"connect-src 'self' https://mpass.gov.md; \" +\n        \"frame-src 'self' https://mpass.gov.md;\");\n\n    await next();\n});\n</code></pre>"},{"location":"fod/integrari/mpass/configurare/#troubleshooting-configurare","title":"Troubleshooting Configurare","text":""},{"location":"fod/integrari/mpass/configurare/#probleme-comune","title":"Probleme Comune","text":"<ol> <li>\"Invalid redirect_uri\"</li> <li>Verifica\u021bi c\u0103 URI-ul este \u00eenregistrat exact \u00een MPass</li> <li> <p>Verifica\u021bi majuscule/minuscule \u0219i trailing slash</p> </li> <li> <p>\"Unable to obtain configuration\"</p> </li> <li>Verifica\u021bi conectivitatea la MPass</li> <li>Verifica\u021bi set\u0103rile proxy/firewall</li> <li> <p>Valida\u021bi Authority URL</p> </li> <li> <p>Certificate errors <pre><code>// Doar pentru development!\noptions.BackchannelHttpHandler = new HttpClientHandler\n{\n    ServerCertificateCustomValidationCallback = \n        HttpClientHandler.DangerousAcceptAnyServerCertificateValidator\n};\n</code></pre></p> </li> </ol>"},{"location":"fod/integrari/mpass/configurare/#concluzie","title":"Concluzie","text":"<p>Configurarea corect\u0103 a MPass este esen\u021bial\u0103 pentru securitatea \u0219i func\u021bionalitatea aplica\u021biei. Urma\u021bi aceste ghiduri \u0219i adapta\u021bi configur\u0103rile la nevoile specifice ale aplica\u021biei dvs.</p>"},{"location":"fod/integrari/mpass/exemple/","title":"Exemple MPass","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine exemple de integrare MPass.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpass/exemple/#exemplu-de-baza","title":"Exemplu de baz\u0103","text":""},{"location":"fod/integrari/mpass/exemple/#scenarii-avansate","title":"Scenarii avansate","text":""},{"location":"fod/integrari/mpass/exemple/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/integrari/mpay/","title":"MPay - Serviciul de Pl\u0103\u021bi Electronice","text":""},{"location":"fod/integrari/mpay/#introducere","title":"Introducere","text":"<p>MPay este serviciul guvernamental unificat de pl\u0103\u021bi electronice al Republicii Moldova, care permite cet\u0103\u021benilor \u0219i agen\u021bilor economici s\u0103 efectueze pl\u0103\u021bi c\u0103tre institu\u021biile publice \u00eentr-un mod sigur \u0219i convenabil. Platforma FOD.Components ofer\u0103 integrare complet\u0103 cu MPay prin multiple modalit\u0103\u021bi: API REST, SOAP \u0219i Generic Provider.</p>"},{"location":"fod/integrari/mpay/#caracteristici-principale","title":"Caracteristici Principale","text":""},{"location":"fod/integrari/mpay/#metode-de-plata-suportate","title":"\ud83d\udcb3 Metode de Plat\u0103 Suportate","text":"<ol> <li>Card bancar - Visa, Mastercard, pl\u0103\u021bi locale</li> <li>Internet Banking - Toate b\u0103ncile comerciale din Moldova</li> <li>Terminale de plat\u0103 - Re\u021beaua na\u021bional\u0103 de terminale</li> <li>Portofel electronic - MPay Wallet</li> <li>Transfer bancar - Pentru pl\u0103\u021bi corporate</li> </ol>"},{"location":"fod/integrari/mpay/#functionalitati","title":"\ud83c\udf1f Func\u021bionalit\u0103\u021bi","text":"<ul> <li>Pl\u0103\u021bi \u00een timp real - Procesare instantanee</li> <li>Facturi electronice - Generare \u0219i gestionare automat\u0103</li> <li>Ramburs\u0103ri - Proces simplificat de returnare</li> <li>Raportare - Dashboard complet pentru tranzac\u021bii</li> <li>Notific\u0103ri - Webhook-uri pentru status pl\u0103\u021bi</li> </ul>"},{"location":"fod/integrari/mpay/#arhitectura-si-integrari","title":"Arhitectur\u0103 \u0219i Integr\u0103ri","text":""},{"location":"fod/integrari/mpay/#tipuri-de-integrare-disponibile","title":"Tipuri de Integrare Disponibile","text":"<pre><code>graph TD\n    A[Aplica\u021bie FOD] --&gt; B{Tip Integrare}\n    B --&gt; C[MPay API REST]\n    B --&gt; D[MPay SOAP]\n    B --&gt; E[MPay Generic Provider]\n\n    C --&gt; F[Fod.Integrations.MPay.API]\n    D --&gt; G[MPaySoap]\n    E --&gt; H[Fod.Integrations.MPay.Generic]\n</code></pre>"},{"location":"fod/integrari/mpay/#flux-de-plata","title":"Flux de Plat\u0103","text":"<pre><code>sequenceDiagram\n    participant U as Utilizator\n    participant A as Aplica\u021bie FOD\n    participant M as MPay Service\n    participant B as Banc\u0103/Procesor\n\n    U-&gt;&gt;A: Ini\u021biaz\u0103 plata\n    A-&gt;&gt;M: Creare factur\u0103\n    M-&gt;&gt;A: Returneaz\u0103 ID factur\u0103\n    A-&gt;&gt;U: Redirec\u021bionare la MPay\n    U-&gt;&gt;M: Selecteaz\u0103 metod\u0103 de plat\u0103\n    U-&gt;&gt;B: Efectueaz\u0103 plata\n    B-&gt;&gt;M: Confirm\u0103 plata\n    M-&gt;&gt;A: Notificare webhook\n    A-&gt;&gt;U: Confirmare plat\u0103\n</code></pre>"},{"location":"fod/integrari/mpay/#configurare-si-instalare","title":"Configurare \u0219i Instalare","text":""},{"location":"fod/integrari/mpay/#1-instalare-pachete-nuget","title":"1. Instalare Pachete NuGet","text":"<p>Pentru API REST: <pre><code>dotnet add package Fod.Integrations.MPay.API\n</code></pre></p> <p>Pentru SOAP: <pre><code>dotnet add package MPaySoap\n</code></pre></p> <p>Pentru Generic Provider: <pre><code>dotnet add package Fod.Integrations.MPay.Generic\n</code></pre></p>"},{"location":"fod/integrari/mpay/#2-configurare-in-programcs","title":"2. Configurare \u00een Program.cs","text":""},{"location":"fod/integrari/mpay/#api-rest-integration","title":"API REST Integration","text":"<pre><code>using Fod.Integrations.MPay.API;\n\nbuilder.Services.AddMPayApiIntegration(options =&gt;\n{\n    options.BaseUrl = builder.Configuration[\"MPay:ApiUrl\"];\n    options.MerchantId = builder.Configuration[\"MPay:MerchantId\"];\n    options.ApiKey = builder.Configuration[\"MPay:ApiKey\"];\n    options.SecretKey = builder.Configuration[\"MPay:SecretKey\"];\n    options.Environment = MPayEnvironment.Production;\n    options.Timeout = TimeSpan.FromSeconds(30);\n});\n\n// \u00cenregistrare servicii\nbuilder.Services.AddScoped&lt;IMPayApiService, MPayApiService&gt;();\nbuilder.Services.AddScoped&lt;IMPayInvoiceService, MPayInvoiceService&gt;();\n</code></pre>"},{"location":"fod/integrari/mpay/#soap-integration","title":"SOAP Integration","text":"<pre><code>using MPaySoap;\n\nbuilder.Services.AddMPaySoapIntegration(options =&gt;\n{\n    options.ServiceUrl = builder.Configuration[\"MPay:SoapUrl\"];\n    options.Username = builder.Configuration[\"MPay:Username\"];\n    options.Password = builder.Configuration[\"MPay:Password\"];\n    options.CertificatePath = builder.Configuration[\"MPay:CertificatePath\"];\n});\n</code></pre>"},{"location":"fod/integrari/mpay/#generic-provider","title":"Generic Provider","text":"<pre><code>using Fod.Integrations.MPay.Generic;\n\nbuilder.Services.AddMPayGenericProvider(options =&gt;\n{\n    options.ProviderId = builder.Configuration[\"MPay:ProviderId\"];\n    options.ProviderKey = builder.Configuration[\"MPay:ProviderKey\"];\n    options.CallbackUrl = builder.Configuration[\"MPay:CallbackUrl\"];\n});\n</code></pre>"},{"location":"fod/integrari/mpay/#3-configurare-appsettings","title":"3. Configurare AppSettings","text":"<pre><code>{\n  \"MPay\": {\n    \"ApiUrl\": \"https://api.mpay.gov.md\",\n    \"SoapUrl\": \"https://soap.mpay.gov.md/PaymentService\",\n    \"MerchantId\": \"your-merchant-id\",\n    \"ApiKey\": \"your-api-key\",\n    \"SecretKey\": \"your-secret-key\",\n    \"Username\": \"soap-username\",\n    \"Password\": \"soap-password\",\n    \"CertificatePath\": \"./certificates/mpay.pfx\",\n    \"Environment\": \"Production\",\n    \"CallbackUrl\": \"https://yourdomain.com/mpay/callback\",\n    \"SuccessUrl\": \"https://yourdomain.com/payment/success\",\n    \"FailureUrl\": \"https://yourdomain.com/payment/failure\"\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#utilizare-in-componente","title":"Utilizare \u00een Componente","text":""},{"location":"fod/integrari/mpay/#1-componenta-de-plata","title":"1. Componenta de Plat\u0103","text":"<pre><code>@page \"/payment\"\n@inject IMPayApiService MPayService\n@inject NavigationManager Navigation\n\n&lt;FodCard&gt;\n    &lt;FodCardHeader&gt;\n        &lt;h3&gt;Achitare Serviciu&lt;/h3&gt;\n    &lt;/FodCardHeader&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText&gt;Serviciu: @ServiceName&lt;/FodText&gt;\n        &lt;FodText&gt;Suma: @Amount MDL&lt;/FodText&gt;\n\n        &lt;FodButton OnClick=\"InitiatePayment\" Variant=\"primary\"&gt;\n            &lt;FodIcon Name=\"credit-card\" /&gt; Achit\u0103 cu MPay\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Parameter] public string ServiceId { get; set; }\n    [Parameter] public decimal Amount { get; set; }\n    [Parameter] public string ServiceName { get; set; }\n\n    private async Task InitiatePayment()\n    {\n        try\n        {\n            var invoice = new MPayInvoice\n            {\n                Amount = Amount,\n                Currency = \"MDL\",\n                Description = $\"Plat\u0103 pentru {ServiceName}\",\n                OrderId = Guid.NewGuid().ToString(),\n                CustomerEmail = currentUser.Email,\n                CustomerPhone = currentUser.Phone,\n                Language = \"ro\",\n                ExpiryTime = DateTime.UtcNow.AddHours(24),\n                SuccessUrl = $\"{Navigation.BaseUri}payment/success\",\n                FailureUrl = $\"{Navigation.BaseUri}payment/failure\",\n                CallbackUrl = $\"{Navigation.BaseUri}api/mpay/callback\"\n            };\n\n            var result = await MPayService.CreateInvoiceAsync(invoice);\n\n            if (result.Success)\n            {\n                // Salveaz\u0103 invoice ID pentru verificare ulterioar\u0103\n                await SaveInvoiceId(result.InvoiceId);\n\n                // Redirec\u021bioneaz\u0103 la MPay\n                Navigation.NavigateTo(result.PaymentUrl, true);\n            }\n            else\n            {\n                await ShowError(result.ErrorMessage);\n            }\n        }\n        catch (Exception ex)\n        {\n            await ShowError($\"Eroare la ini\u021bializarea pl\u0103\u021bii: {ex.Message}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-verificare-status-plata","title":"2. Verificare Status Plat\u0103","text":"<pre><code>@page \"/payment/status/{InvoiceId}\"\n@inject IMPayApiService MPayService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        @if (isLoading)\n        {\n            &lt;FodLoadingCircular /&gt;\n        }\n        else\n        {\n            &lt;FodAlert Type=\"@GetAlertType()\"&gt;\n                &lt;h4&gt;@GetStatusTitle()&lt;/h4&gt;\n                &lt;p&gt;@GetStatusMessage()&lt;/p&gt;\n            &lt;/FodAlert&gt;\n\n            @if (paymentStatus?.Status == PaymentStatus.Success)\n            {\n                &lt;FodButton OnClick=\"DownloadReceipt\"&gt;\n                    &lt;FodIcon Name=\"download\" /&gt; Descarc\u0103 Chitan\u021ba\n                &lt;/FodButton&gt;\n            }\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Parameter] public string InvoiceId { get; set; }\n\n    private PaymentStatusResponse paymentStatus;\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await CheckPaymentStatus();\n    }\n\n    private async Task CheckPaymentStatus()\n    {\n        try\n        {\n            paymentStatus = await MPayService.GetPaymentStatusAsync(InvoiceId);\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    private string GetAlertType() =&gt; paymentStatus?.Status switch\n    {\n        PaymentStatus.Success =&gt; \"success\",\n        PaymentStatus.Failed =&gt; \"error\",\n        PaymentStatus.Pending =&gt; \"warning\",\n        _ =&gt; \"info\"\n    };\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#3-istoricul-platilor","title":"3. Istoricul Pl\u0103\u021bilor","text":"<pre><code>@page \"/payments/history\"\n@inject IMPayApiService MPayService\n\n&lt;FodDataTable TItem=\"PaymentHistory\" \n              Items=\"payments\" \n              ShowPagination=\"true\"\n              RowsPerPage=\"10\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTh&gt;Data&lt;/FodTh&gt;\n        &lt;FodTh&gt;Serviciu&lt;/FodTh&gt;\n        &lt;FodTh&gt;Suma&lt;/FodTh&gt;\n        &lt;FodTh&gt;Status&lt;/FodTh&gt;\n        &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTd&gt;@context.PaymentDate.ToString(\"dd.MM.yyyy HH:mm\")&lt;/FodTd&gt;\n        &lt;FodTd&gt;@context.ServiceName&lt;/FodTd&gt;\n        &lt;FodTd&gt;@context.Amount MDL&lt;/FodTd&gt;\n        &lt;FodTd&gt;\n            &lt;FodBadge Color=\"@GetStatusColor(context.Status)\"&gt;\n                @context.Status\n            &lt;/FodBadge&gt;\n        &lt;/FodTd&gt;\n        &lt;FodTd&gt;\n            &lt;FodIconButton Icon=\"receipt\" \n                          OnClick=\"@(() =&gt; ViewReceipt(context.InvoiceId))\"\n                          Title=\"Vezi chitan\u021ba\" /&gt;\n        &lt;/FodTd&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;PaymentHistory&gt; payments = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        var filter = new PaymentHistoryFilter\n        {\n            StartDate = DateTime.Now.AddMonths(-6),\n            EndDate = DateTime.Now,\n            UserId = currentUser.Id\n        };\n\n        payments = await MPayService.GetPaymentHistoryAsync(filter);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#servicii-mpay","title":"Servicii MPay","text":""},{"location":"fod/integrari/mpay/#1-impayapiservice","title":"1. IMPayApiService","text":"<pre><code>public interface IMPayApiService\n{\n    // Facturi\n    Task&lt;CreateInvoiceResponse&gt; CreateInvoiceAsync(MPayInvoice invoice);\n    Task&lt;InvoiceDetails&gt; GetInvoiceAsync(string invoiceId);\n    Task&lt;bool&gt; CancelInvoiceAsync(string invoiceId);\n\n    // Status pl\u0103\u021bi\n    Task&lt;PaymentStatusResponse&gt; GetPaymentStatusAsync(string invoiceId);\n    Task&lt;List&lt;PaymentHistory&gt;&gt; GetPaymentHistoryAsync(PaymentHistoryFilter filter);\n\n    // Ramburs\u0103ri\n    Task&lt;RefundResponse&gt; InitiateRefundAsync(RefundRequest request);\n    Task&lt;RefundStatus&gt; GetRefundStatusAsync(string refundId);\n\n    // Rapoarte\n    Task&lt;TransactionReport&gt; GetTransactionReportAsync(ReportFilter filter);\n    Task&lt;byte[]&gt; DownloadReceiptAsync(string transactionId);\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-impayinvoiceservice","title":"2. IMPayInvoiceService","text":"<pre><code>public interface IMPayInvoiceService\n{\n    Task&lt;MPayInvoiceButton&gt; GeneratePaymentButtonAsync(decimal amount, string description);\n    Task&lt;string&gt; GeneratePaymentLinkAsync(MPayInvoice invoice);\n    Task&lt;QRCodeData&gt; GeneratePaymentQRCodeAsync(string invoiceId);\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#webhook-integration","title":"Webhook Integration","text":""},{"location":"fod/integrari/mpay/#1-controller-pentru-callback","title":"1. Controller pentru Callback","text":"<pre><code>[ApiController]\n[Route(\"api/mpay\")]\npublic class MPayCallbackController : ControllerBase\n{\n    private readonly IMPayWebhookService _webhookService;\n    private readonly IPaymentService _paymentService;\n\n    [HttpPost(\"callback\")]\n    public async Task&lt;IActionResult&gt; HandleCallback([FromBody] MPayCallback callback)\n    {\n        // Verific\u0103 semn\u0103tura\n        if (!_webhookService.ValidateSignature(callback, Request.Headers[\"X-MPay-Signature\"]))\n        {\n            return Unauthorized();\n        }\n\n        // Proceseaz\u0103 callback\n        try\n        {\n            await _paymentService.ProcessPaymentCallbackAsync(callback);\n            return Ok(new { status = \"success\" });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Error processing MPay callback\");\n            return StatusCode(500);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-procesare-webhook","title":"2. Procesare Webhook","text":"<pre><code>public class PaymentService : IPaymentService\n{\n    public async Task ProcessPaymentCallbackAsync(MPayCallback callback)\n    {\n        var payment = await _repository.GetPaymentByInvoiceIdAsync(callback.InvoiceId);\n\n        if (payment == null)\n        {\n            throw new PaymentNotFoundException(callback.InvoiceId);\n        }\n\n        // Actualizeaz\u0103 status\n        payment.Status = callback.Status;\n        payment.TransactionId = callback.TransactionId;\n        payment.UpdatedAt = DateTime.UtcNow;\n\n        await _repository.UpdatePaymentAsync(payment);\n\n        // Notific\u0103 utilizatorul\n        if (callback.Status == PaymentStatus.Success)\n        {\n            await _notificationService.SendPaymentSuccessNotificationAsync(payment);\n        }\n\n        // Trigger evenimente\n        await _eventBus.PublishAsync(new PaymentStatusChangedEvent\n        {\n            PaymentId = payment.Id,\n            OldStatus = payment.Status,\n            NewStatus = callback.Status\n        });\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#componente-mpay-specializate","title":"Componente MPay Specializate","text":""},{"location":"fod/integrari/mpay/#1-mpayinvoicebutton","title":"1. MPayInvoiceButton","text":"<pre><code>@page \"/demo/mpay-button\"\n\n&lt;h3&gt;Exemplu MPay Invoice Button&lt;/h3&gt;\n\n&lt;MPayInvoiceButton Amount=\"100.00\" \n                   Description=\"Test Payment\"\n                   ServiceId=\"12345\"\n                   OnPaymentComplete=\"HandlePaymentComplete\"\n                   ShowAmount=\"true\"\n                   ButtonText=\"Achit\u0103 100 MDL\" /&gt;\n\n@code {\n    private async Task HandlePaymentComplete(PaymentResult result)\n    {\n        if (result.Success)\n        {\n            await ShowNotification(\"Plata a fost efectuat\u0103 cu succes!\");\n            Navigation.NavigateTo($\"/receipt/{result.TransactionId}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-generare-qr-code-pentru-plata","title":"2. Generare QR Code pentru Plat\u0103","text":"<pre><code>@inject IMPayInvoiceService InvoiceService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;h4&gt;Scana\u021bi QR Code pentru plat\u0103&lt;/h4&gt;\n        @if (qrCodeData != null)\n        {\n            &lt;img src=\"@qrCodeData.DataUrl\" alt=\"MPay QR Code\" /&gt;\n            &lt;FodText&gt;Suma: @Amount MDL&lt;/FodText&gt;\n            &lt;FodText Size=\"small\" Color=\"muted\"&gt;\n                QR Code valabil p\u00e2n\u0103 la: @qrCodeData.ExpiryDate\n            &lt;/FodText&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private QRCodeData qrCodeData;\n\n    protected override async Task OnInitializedAsync()\n    {\n        qrCodeData = await InvoiceService.GeneratePaymentQRCodeAsync(InvoiceId);\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#securitate","title":"Securitate","text":""},{"location":"fod/integrari/mpay/#1-validare-semnatura","title":"1. Validare Semn\u0103tur\u0103","text":"<pre><code>public class MPaySecurityService\n{\n    public bool ValidateSignature(string payload, string signature, string secretKey)\n    {\n        var computedSignature = ComputeHmacSha256(payload, secretKey);\n        return signature.Equals(computedSignature, StringComparison.OrdinalIgnoreCase);\n    }\n\n    private string ComputeHmacSha256(string message, string secret)\n    {\n        var encoding = new UTF8Encoding();\n        byte[] keyByte = encoding.GetBytes(secret);\n        byte[] messageBytes = encoding.GetBytes(message);\n\n        using (var hmacsha256 = new HMACSHA256(keyByte))\n        {\n            byte[] hashmessage = hmacsha256.ComputeHash(messageBytes);\n            return Convert.ToBase64String(hashmessage);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-criptare-date-sensibile","title":"2. Criptare Date Sensibile","text":"<pre><code>builder.Services.Configure&lt;MPayOptions&gt;(options =&gt;\n{\n    options.EncryptSensitiveData = true;\n    options.DataProtectionPurpose = \"MPay.SensitiveData\";\n});\n</code></pre>"},{"location":"fod/integrari/mpay/#raportare-si-monitorizare","title":"Raportare \u0219i Monitorizare","text":""},{"location":"fod/integrari/mpay/#1-dashboard-plati","title":"1. Dashboard Pl\u0103\u021bi","text":"<pre><code>@page \"/admin/payments/dashboard\"\n@inject IMPayApiService MPayService\n\n&lt;FodGrid&gt;\n    &lt;FodGridItem xs=\"12\" md=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Variant=\"h6\"&gt;Total Pl\u0103\u021bi Azi&lt;/FodText&gt;\n                &lt;FodText Variant=\"h4\"&gt;@todayStats.TotalAmount MDL&lt;/FodText&gt;\n                &lt;FodText Color=\"success\"&gt;@todayStats.SuccessfulPayments pl\u0103\u021bi reu\u0219ite&lt;/FodText&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGridItem&gt;\n\n    &lt;FodGridItem xs=\"12\" md=\"9\"&gt;\n        &lt;FodCard&gt;\n            &lt;FodCardContent&gt;\n                &lt;PaymentChart Data=\"chartData\" /&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodGridItem&gt;\n&lt;/FodGrid&gt;\n</code></pre>"},{"location":"fod/integrari/mpay/#2-export-rapoarte","title":"2. Export Rapoarte","text":"<pre><code>public async Task&lt;byte[]&gt; ExportTransactionsAsync(ExportFilter filter)\n{\n    var transactions = await _mPayService.GetTransactionReportAsync(filter);\n\n    using var workbook = new XLWorkbook();\n    var worksheet = workbook.Worksheets.Add(\"Tranzac\u021bii MPay\");\n\n    // Headers\n    worksheet.Cell(1, 1).Value = \"Data\";\n    worksheet.Cell(1, 2).Value = \"ID Tranzac\u021bie\";\n    worksheet.Cell(1, 3).Value = \"Suma\";\n    worksheet.Cell(1, 4).Value = \"Status\";\n    // ... alte coloane\n\n    // Date\n    var row = 2;\n    foreach (var transaction in transactions.Items)\n    {\n        worksheet.Cell(row, 1).Value = transaction.Date;\n        worksheet.Cell(row, 2).Value = transaction.Id;\n        worksheet.Cell(row, 3).Value = transaction.Amount;\n        worksheet.Cell(row, 4).Value = transaction.Status;\n        row++;\n    }\n\n    using var stream = new MemoryStream();\n    workbook.SaveAs(stream);\n    return stream.ToArray();\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#testare","title":"Testare","text":""},{"location":"fod/integrari/mpay/#1-mediu-de-test","title":"1. Mediu de Test","text":"<pre><code>{\n  \"MPay\": {\n    \"Environment\": \"Sandbox\",\n    \"SandboxUrl\": \"https://sandbox.mpay.gov.md\",\n    \"TestMerchantId\": \"test-merchant\",\n    \"TestCards\": {\n      \"Success\": \"4111111111111111\",\n      \"Declined\": \"4111111111111112\",\n      \"Insufficient\": \"4111111111111113\"\n    }\n  }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-mock-service-pentru-development","title":"2. Mock Service pentru Development","text":"<pre><code>public class MockMPayService : IMPayApiService\n{\n    public Task&lt;CreateInvoiceResponse&gt; CreateInvoiceAsync(MPayInvoice invoice)\n    {\n        return Task.FromResult(new CreateInvoiceResponse\n        {\n            Success = true,\n            InvoiceId = Guid.NewGuid().ToString(),\n            PaymentUrl = $\"https://localhost/mock-payment/{invoice.OrderId}\"\n        });\n    }\n\n    // Alte metode mock...\n}\n\n// \u00cen Program.cs pentru development\n#if DEBUG\nbuilder.Services.AddScoped&lt;IMPayApiService, MockMPayService&gt;();\n#endif\n</code></pre>"},{"location":"fod/integrari/mpay/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/integrari/mpay/#probleme-comune","title":"Probleme Comune","text":"<ol> <li> <p>\"Invalid merchant credentials\" <pre><code>// Verifica\u021bi configurarea\nvar config = Configuration.GetSection(\"MPay\");\nlogger.LogDebug(\"MerchantId: {MerchantId}\", config[\"MerchantId\"]);\n</code></pre></p> </li> <li> <p>\"Signature validation failed\" <pre><code>// Activa\u021bi logging detaliat\nbuilder.Services.Configure&lt;MPayOptions&gt;(o =&gt; o.EnableDetailedLogging = true);\n</code></pre></p> </li> <li> <p>Timeout la creare factur\u0103 <pre><code>// M\u0103ri\u021bi timeout\nbuilder.Services.Configure&lt;MPayOptions&gt;(o =&gt; o.Timeout = TimeSpan.FromSeconds(60));\n</code></pre></p> </li> </ol>"},{"location":"fod/integrari/mpay/#performanta-si-optimizari","title":"Performan\u021b\u0103 \u0219i Optimiz\u0103ri","text":""},{"location":"fod/integrari/mpay/#1-caching","title":"1. Caching","text":"<pre><code>public class CachedMPayService : IMPayApiService\n{\n    private readonly IMemoryCache _cache;\n    private readonly IMPayApiService _innerService;\n\n    public async Task&lt;PaymentStatusResponse&gt; GetPaymentStatusAsync(string invoiceId)\n    {\n        return await _cache.GetOrCreateAsync($\"mpay_status_{invoiceId}\", \n            async entry =&gt;\n            {\n                entry.SlidingExpiration = TimeSpan.FromMinutes(1);\n                return await _innerService.GetPaymentStatusAsync(invoiceId);\n            });\n    }\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#2-batch-processing","title":"2. Batch Processing","text":"<pre><code>public async Task ProcessBulkPaymentsAsync(List&lt;BulkPayment&gt; payments)\n{\n    var batches = payments.Chunk(50); // MPay suport\u0103 max 50 per batch\n\n    await Parallel.ForEachAsync(batches, async (batch, ct) =&gt;\n    {\n        await _mPayService.CreateBulkInvoicesAsync(batch, ct);\n    });\n}\n</code></pre>"},{"location":"fod/integrari/mpay/#resurse-aditionale","title":"Resurse Adi\u021bionale","text":"<ul> <li>Documenta\u021bie Oficial\u0103 MPay</li> <li>API Reference</li> <li>Sandbox Testing Guide</li> <li>Integration Examples</li> <li>Support Portal</li> </ul>"},{"location":"fod/integrari/mpay/#concluzie","title":"Concluzie","text":"<p>Integrarea MPay \u00een aplica\u021biile FOD ofer\u0103 o solu\u021bie complet\u0103 pentru procesarea pl\u0103\u021bilor electronice c\u0103tre institu\u021biile publice. Cu suport pentru multiple metode de integrare, componente specializate \u0219i servicii robuste, dezvoltatorii pot implementa rapid func\u021bionalit\u0103\u021bi de plat\u0103 sigure \u0219i conforme cu standardele na\u021bionale.</p>"},{"location":"fod/integrari/mpay/api/","title":"MPay API","text":"<p>Aceast\u0103 pagin\u0103 descrie API-ul MPay.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpay/api/#endpoint-uri","title":"Endpoint-uri","text":""},{"location":"fod/integrari/mpay/api/#autentificare","title":"Autentificare","text":""},{"location":"fod/integrari/mpay/api/#raspunsuri","title":"R\u0103spunsuri","text":""},{"location":"fod/integrari/mpay/exemple/","title":"Exemple MPay","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine exemple de integrare MPay.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpay/exemple/#plata-simpla","title":"Plat\u0103 simpl\u0103","text":""},{"location":"fod/integrari/mpay/exemple/#plati-recurente","title":"Pl\u0103\u021bi recurente","text":""},{"location":"fod/integrari/mpay/exemple/#rambursari","title":"Ramburs\u0103ri","text":""},{"location":"fod/integrari/mpay/generic/","title":"MPay Generic","text":"<p>Aceast\u0103 pagin\u0103 descrie integrarea generic\u0103 MPay.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpay/generic/#configurare","title":"Configurare","text":""},{"location":"fod/integrari/mpay/generic/#procesare-plati","title":"Procesare pl\u0103\u021bi","text":""},{"location":"fod/integrari/mpay/generic/#callback-uri","title":"Callback-uri","text":""},{"location":"fod/integrari/mpay/soap/","title":"MPay SOAP","text":"<p>Aceast\u0103 pagin\u0103 descrie integrarea SOAP cu MPay.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpay/soap/#configurare-wsdl","title":"Configurare WSDL","text":""},{"location":"fod/integrari/mpay/soap/#operatiuni","title":"Opera\u021biuni","text":""},{"location":"fod/integrari/mpay/soap/#exemple-soap","title":"Exemple SOAP","text":""},{"location":"fod/integrari/mpower/","title":"MPower","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea MPower.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpower/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>MPower ofer\u0103 func\u021bionalit\u0103\u021bi de autorizare \u0219i delegare.</p>"},{"location":"fod/integrari/mpower/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Autorizare</li> <li>Delegare</li> </ul>"},{"location":"fod/integrari/mpower/autorizare/","title":"Autorizare MPower","text":"<p>Aceast\u0103 pagin\u0103 descrie procesul de autorizare MPower.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpower/autorizare/#tipuri-de-autorizari","title":"Tipuri de autoriz\u0103ri","text":""},{"location":"fod/integrari/mpower/autorizare/#flux-de-autorizare","title":"Flux de autorizare","text":""},{"location":"fod/integrari/mpower/autorizare/#verificare-permisiuni","title":"Verificare permisiuni","text":""},{"location":"fod/integrari/mpower/delegare/","title":"Delegare MPower","text":"<p>Aceast\u0103 pagin\u0103 descrie func\u021bionalitatea de delegare.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/mpower/delegare/#creare-delegare","title":"Creare delegare","text":""},{"location":"fod/integrari/mpower/delegare/#gestionare-delegari","title":"Gestionare deleg\u0103ri","text":""},{"location":"fod/integrari/mpower/delegare/#revocare","title":"Revocare","text":""},{"location":"fod/integrari/psp/","title":"PSP - Portal Servicii Publice","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea PSP.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/psp/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>PSP ofer\u0103 acces la catalogul de servicii publice.</p>"},{"location":"fod/integrari/psp/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Catalog</li> <li>Cereri</li> </ul>"},{"location":"fod/integrari/psp/catalog/","title":"Catalog Servicii PSP","text":"<p>Aceast\u0103 pagin\u0103 descrie accesul la catalogul de servicii.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/psp/catalog/#structura-catalog","title":"Structura catalog","text":""},{"location":"fod/integrari/psp/catalog/#cautare-servicii","title":"C\u0103utare servicii","text":""},{"location":"fod/integrari/psp/catalog/#detalii-serviciu","title":"Detalii serviciu","text":""},{"location":"fod/integrari/psp/cereri/","title":"Cereri PSP","text":"<p>Aceast\u0103 pagin\u0103 descrie gestionarea cererilor PSP.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/psp/cereri/#creare-cerere","title":"Creare cerere","text":""},{"location":"fod/integrari/psp/cereri/#urmarire-status","title":"Urm\u0103rire status","text":""},{"location":"fod/integrari/psp/cereri/#atasamente","title":"Ata\u0219amente","text":""},{"location":"fod/integrari/sgari/","title":"SGARI","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru integrarea SGARI.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/sgari/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>SGARI ofer\u0103 acces la date din registrele de stat.</p>"},{"location":"fod/integrari/sgari/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Date Personale</li> <li>Registru Civil</li> </ul>"},{"location":"fod/integrari/sgari/date-personale/","title":"Date Personale SGARI","text":"<p>Aceast\u0103 pagin\u0103 descrie accesul la date personale prin SGARI.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/sgari/date-personale/#tipuri-de-date","title":"Tipuri de date","text":""},{"location":"fod/integrari/sgari/date-personale/#cereri-de-date","title":"Cereri de date","text":""},{"location":"fod/integrari/sgari/date-personale/#protectia-datelor","title":"Protec\u021bia datelor","text":""},{"location":"fod/integrari/sgari/registru-civil/","title":"Registru Civil SGARI","text":"<p>Aceast\u0103 pagin\u0103 descrie accesul la registrul civil.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/integrari/sgari/registru-civil/#date-disponibile","title":"Date disponibile","text":""},{"location":"fod/integrari/sgari/registru-civil/#metode-de-acces","title":"Metode de acces","text":""},{"location":"fod/integrari/sgari/registru-civil/#formate-de-date","title":"Formate de date","text":""},{"location":"fod/modele/IRequestor/","title":"Documenta\u021bie pentru Interfa\u021ba <code>IRequestor</code>","text":""},{"location":"fod/modele/IRequestor/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>IRequestor</code> este o interfa\u021b\u0103 care define\u0219te structura de baz\u0103 a unui solicitant (persoan\u0103 fizic\u0103 sau juridic\u0103) utilizat \u00een cadrul aplica\u021biilor FOD. Aceasta ofer\u0103 toate atributele necesare pentru identificarea \u0219i contactarea solicitantului, precum \u0219i detalii despre modul \u00eence care acesta ac\u021bioneaz\u0103 (\u00een nume propriu sau \u00een numele altei entit\u0103\u021bi).</p>"},{"location":"fod/modele/IRequestor/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>RequestorType</code> <code>PersonType</code> Tipul solicitantului: persoan\u0103 fizic\u0103 sau organiza\u021bie. <code>RequestorIdnp</code> <code>string?</code> Codul numeric personal (IDNP) al solicitantului. Relevant pentru persoane fizice. <code>RequestorIdno</code> <code>string?</code> Codul de \u00eenregistrare al organiza\u021biei (IDNO). Relevant pentru persoane juridice. <code>RequestorFirstName</code> <code>string?</code> Prenumele solicitantului. <code>RequestorLastName</code> <code>string?</code> Numele de familie al solicitantului. <code>RequestorCompanyName</code> <code>string?</code> Denumirea organiza\u021biei solicitante. <code>RequestorPhone</code> <code>string?</code> Num\u0103rul de telefon al solicitantului. <code>RequestorEmail</code> <code>string?</code> Adresa de email a solicitantului. <code>MPowerAuthorizationNumber</code> <code>string?</code> Num\u0103rul autoriza\u021biei MPower (dac\u0103 este cazul). <code>OnBehalfOn</code> <code>OnBehalfOnEnum</code> Specific\u0103 dac\u0103 solicitantul ac\u021bioneaz\u0103 \u00een nume propriu sau \u00een numele altuia. <code>MPowerAuthorization</code> <code>MPowerAuthorization?</code> Obiectul care con\u021bine detalii despre autoriza\u021bia MPower. <code>RequestorStatuteModel</code> <code>FodRequestorStatuteModel</code> Informa\u021bii despre statutul legal al solicitantului (ex. reprezentant legal, delegat etc.). <code>FullName</code> (readonly) <code>string?</code> Numele complet al solicitantului, compus din <code>RequestorFirstName</code> \u0219i <code>RequestorLastName</code>."},{"location":"fod/modele/IRequestor/#enum-onbehalfonenum","title":"Enum: <code>OnBehalfOnEnum</code>","text":"Valoare Descriere <code>Personal (1)</code> Solicitantul ac\u021bioneaz\u0103 \u00een nume propriu. <code>MPowerAuthorization (2)</code> Solicitantul ac\u021bioneaz\u0103 \u00een baza unei autoriza\u021bii MPower. <code>Custom (3)</code> Alt tip de reprezentare (definit de implementare)."},{"location":"fod/modele/IRequestor/#observatii","title":"Observa\u021bii","text":"<ul> <li>Aceast\u0103 interfa\u021b\u0103 este folosit\u0103 extensiv \u00een componentele vizuale \u0219i \u00een serviciile backend pentru a reprezenta datele unui solicitant.</li> <li>Proprietatea <code>FullName</code> este doar cu get \u0219i returneaz\u0103 concatenarea prenumelui \u0219i numelui de familie.</li> <li>Enum-ul <code>OnBehalfOnEnum</code> este localizat, ceea ce \u00eenseamn\u0103 c\u0103 etichetele sale sunt afi\u0219ate \u00een func\u021bie de resursele de localizare definite.</li> </ul>"},{"location":"fod/modele/IRequestor/#documentatie-pentru-clasa-fodrequestormodel","title":"Documenta\u021bie pentru Clasa <code>FodRequestorModel</code>","text":""},{"location":"fod/modele/IRequestor/#descriere-generala_1","title":"Descriere General\u0103","text":"<p><code>FodRequestorModel</code> este o implementare a interfe\u021bei <code>IRequestor</code> care define\u0219te modelul complet al unui solicitant \u00een aplica\u021biile FOD. Clasa include at\u00e2t valid\u0103ri personalizate c\u00e2t \u0219i suport pentru localizare prin atributele <code>Display</code> \u0219i <code>Required</code>.</p>"},{"location":"fod/modele/IRequestor/#proprietati_1","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere <code>RequestorType</code> <code>PersonType</code> Tipul solicitantului (persoan\u0103 fizic\u0103 sau organiza\u021bie). Implicit este <code>Individual</code>. <code>RequestorIdnp</code> <code>string?</code> Codul numeric personal. Este obligatoriu \u0219i validat cu atributul <code>[IDNP]</code>. <code>RequestorIdno</code> <code>string?</code> Codul de \u00eenregistrare al organiza\u021biei. Este obligatoriu doar pentru persoane juridice. <code>RequestorCompanyName</code> <code>string?</code> Denumirea companiei. Este obligatorie pentru persoane juridice. <code>RequestorFirstName</code> <code>string?</code> Prenumele solicitantului. Este obligatoriu. <code>RequestorLastName</code> <code>string?</code> Numele de familie al solicitantului. Este obligatoriu. <code>IsRequestorPhoneRequired</code> <code>bool</code> Indic\u0103 dac\u0103 telefonul este obligatoriu. <code>RequestorPhone</code> <code>string?</code> Num\u0103r de telefon. Devine obligatoriu dac\u0103 <code>IsRequestorPhoneRequired</code> este <code>true</code>. <code>IsRequestorEmailRequired</code> <code>bool</code> Indic\u0103 dac\u0103 emailul este obligatoriu. <code>RequestorEmail</code> <code>string?</code> Adres\u0103 email. Devine obligatorie dac\u0103 <code>IsRequestorEmailRequired</code> este <code>true</code>. <code>MPowerAuthorizationNumber</code> <code>string?</code> Num\u0103rul autoriza\u021biei MPower, dac\u0103 este aplicabil. <code>OnBehalfOn</code> <code>OnBehalfOnEnum</code> Indic\u0103 dac\u0103 ac\u021bioneaz\u0103 \u00een nume propriu, prin MPower sau custom. <code>FullName</code> (readonly) <code>string?</code> Returneaz\u0103 numele complet: <code>Prenume + Nume</code>. <code>MPowerAuthorization</code> <code>MPowerAuthorization?</code> Detalii despre autoriza\u021bia MPower selectat\u0103. <code>HasMultipleRequestorStatute</code> <code>bool</code> Specific\u0103 dac\u0103 sunt disponibile mai multe statute de solicitant. <code>RequestorStatuteModel</code> <code>FodRequestorStatuteModel</code> Modelul ce descrie statutul solicitantului. Obligatoriu dac\u0103 exist\u0103 mai multe statute."},{"location":"fod/modele/IRequestor/#validari","title":"Valid\u0103ri","text":"<ul> <li><code>RequestorIdnp</code>, <code>RequestorFirstName</code>, <code>RequestorLastName</code> sunt \u00eentotdeauna obligatorii.</li> <li><code>RequestorIdno</code> \u0219i <code>RequestorCompanyName</code> sunt obligatorii doar dac\u0103 <code>RequestorType</code> este <code>Organization</code>.</li> <li><code>RequestorPhone</code> \u0219i <code>RequestorEmail</code> sunt condi\u021bionat obligatorii pe baza propriet\u0103\u021bilor <code>IsRequestorPhoneRequired</code> \u0219i <code>IsRequestorEmailRequired</code>.</li> <li><code>RequestorStatuteModel</code> este obligatoriu dac\u0103 <code>HasMultipleRequestorStatute</code> este <code>true</code>.</li> </ul>"},{"location":"fod/modele/IRequestor/#observatii_1","title":"Observa\u021bii","text":"<ul> <li>Clasa utilizeaz\u0103 atributul <code>[RequiredIf]</code> pentru a permite valid\u0103ri condi\u021bionale flexibile.</li> <li>Localizarea este realizat\u0103 prin atributele <code>Display</code> \u0219i <code>ErrorMessageResourceName</code> care se bazeaz\u0103 pe <code>FodSharedResources</code>.</li> <li>Aceast\u0103 clas\u0103 este utilizat\u0103 \u00een mod direct \u00een formulare pentru introducerea datelor despre solicitant.</li> </ul>"},{"location":"fod/modele/UserContext/","title":"UserContext","text":"<p>Documenta\u021bie pentru <code>UserContext</code></p>"},{"location":"fod/modele/UserContext/#descriere-generala","title":"Descriere general\u0103","text":"<p>Aceast\u0103 clas\u0103 este utilizat\u0103 \u0219i pentru a genera roluri \u0219i contexte personalizate ale utilizatorului, fiind baza logicii dinamice de construire a permisiunilor \u0219i a vizibilit\u0103\u021bii func\u021bionalit\u0103\u021bilor \u00een cadrul aplica\u021biei.</p>"},{"location":"fod/modele/UserContext/#proprietati","title":"Propriet\u0103\u021bi","text":"Proprietate Tip Descriere UserId <code>string?</code> ID-ul unic al utilizatorului. UserFirstName <code>string?</code> Prenumele utilizatorului. UserLastName <code>string?</code> Numele de familie al utilizatorului. ContextName <code>string?</code> Numele contextului activ. ContextId <code>string?</code> ID-ul contextului activ. ContextRole <code>string?</code> Rolul utilizatorului \u00een contextul activ. Role <code>string?</code> Rolul global al utilizatorului. RoleName <code>string?</code> Numele complet al rolului. Attributes <code>List&lt;KeyValuePair&lt;string, string&gt;&gt;</code> List\u0103 de atribute suplimentare legate de utilizator (ex: email, departament). ContextType <code>UserContextType</code> Tipul contextului activ (ex: <code>Individual</code>, <code>Organization</code>)."},{"location":"fod/modele/UserContext/#enum-usercontexttype","title":"Enum: <code>UserContextType</code>","text":"<p><code>UserContextType</code> este un enum care indic\u0103 tipul contextului activ:</p> <pre><code>public enum UserContextType\n{\n    Individual,\n    Organization,\n    CUPSOperator,\n    System\n}\n</code></pre>"},{"location":"fod/modele/UserContext/#utilizare","title":"Utilizare","text":"<p>Acest model este esen\u021bial \u00een aplica\u021biile multi-contextuale, permi\u021b\u00e2nd: - afi\u0219area de informa\u021bii relevante despre utilizator; - aplicarea permisiunilor \u0219i rolurilor; - personalizarea experien\u021bei utilizatorului \u00een func\u021bie de context.</p>"},{"location":"fod/modele/UserContext/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<p>```csharp UserContext? context = await contextService.GetUserContext(); if (context?.ContextType == UserContextType.Organization) {     Console.WriteLine($\"Organiza\u021bia curent\u0103: {context.ContextName}\"); }</p>"},{"location":"fod/servicii/ApostilaComponentService/","title":"ApostilaComponentService","text":""},{"location":"fod/servicii/ApostilaComponentService/#documentatie-pentru-serviciul-apostilacomponentservice","title":"Documenta\u021bie pentru serviciul ApostilaComponentService","text":""},{"location":"fod/servicii/ApostilaComponentService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ApostilaComponentService</code> este un serviciu specializat pentru calcularea datelor estimate de finalizare pentru serviciile de apostilare. Apostila este o certificare oficial\u0103 care autentific\u0103 documentele pentru utilizare interna\u021bional\u0103 conform Conven\u021biei de la Haga.</p> <p>Caracteristici principale: - Calculeaz\u0103 data estimat\u0103 de finalizare pentru apostilare - Integreaz\u0103 cu serviciul extern de apostilare - \u021aine cont de termenele de execu\u021bie selectate - Valideaz\u0103 dac\u0103 calculul poate fi efectuat - Suport pentru diferite tipuri de persoane (fizice/juridice)</p>"},{"location":"fod/servicii/ApostilaComponentService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Pentru server-side cu integrare apostil\u0103\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\nbuilder.Services.AddApostilaIntegration(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IApostilaComponentService, ApostilaComponentService&gt;();\nbuilder.Services.AddHttpClient&lt;IApostilaComponentService, ApostilaComponentService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#3-interfata-iapostilacomponentservice","title":"3. Interfa\u021ba IApostilaComponentService","text":"<pre><code>namespace Fod.Components.Shared.Business.Apostila\n{\n    public interface IApostilaComponentService\n    {\n        Task&lt;ApostilaEstimateResolveDateResponse&gt; CalculateEstimateResolveDate(\n            ApostilaEstimateResolveDateRequest request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>CalculateEstimateResolveDate</code> <code>ApostilaEstimateResolveDateRequest request</code> <code>Task&lt;ApostilaEstimateResolveDateResponse&gt;</code> Calculeaz\u0103 data estimat\u0103 de finalizare"},{"location":"fod/servicii/ApostilaComponentService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/ApostilaComponentService/#apostilaestimateresolvedaterequest","title":"ApostilaEstimateResolveDateRequest","text":"<pre><code>public class ApostilaEstimateResolveDateRequest\n{\n    // Data estimat\u0103 de finalizare a serviciului principal\n    public DateTime ServiceEstimateResolveDate { get; set; }\n\n    // ID-ul termenului de execu\u021bie selectat\n    // Not\u0103: Exist\u0103 un typo \u00een numele propriet\u0103\u021bii (ExecturionTermId)\n    public string ExecturionTermId { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#apostilaestimateresolvedateresponse","title":"ApostilaEstimateResolveDateResponse","text":"<pre><code>public class ApostilaEstimateResolveDateResponse\n{\n    // Indic\u0103 dac\u0103 calculul poate fi efectuat\n    public bool CanBeCalculated { get; set; }\n\n    // Data estimat\u0103 de finalizare (null dac\u0103 nu poate fi calculat\u0103)\n    public DateTime? EstimateResolveDate { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/ApostilaComponentService/#calculare-simpla-data-estimata","title":"Calculare simpl\u0103 dat\u0103 estimat\u0103","text":"<pre><code>@inject IApostilaComponentService ApostilaService\n@inject IFodNotificationService NotificationService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Calculator Termen Apostilare\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodDatePicker @bind-Date=\"serviceCompletionDate\" \n                               Label=\"Data finaliz\u0103rii serviciului principal\"\n                               MinDate=\"DateTime.Today\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodSelect @bind-Value=\"selectedExecutionTerm\" \n                           Label=\"Termen de execu\u021bie\"\n                           Items=\"@executionTerms\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodButton OnClick=\"CalculateApostilleDate\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"\n                   Disabled=\"@(!serviceCompletionDate.HasValue || string.IsNullOrEmpty(selectedExecutionTerm))\"&gt;\n            Calculeaz\u0103\n        &lt;/FodButton&gt;\n\n        @if (estimatedDate.HasValue)\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"mt-3\"&gt;\n                &lt;FodAlertTitle&gt;Dat\u0103 estimat\u0103 apostilare&lt;/FodAlertTitle&gt;\n                Documentele apostilate vor fi disponibile aproximativ la: \n                &lt;strong&gt;@estimatedDate.Value.ToString(\"dd MMMM yyyy\")&lt;/strong&gt;\n            &lt;/FodAlert&gt;\n        }\n        else if (calculationAttempted &amp;&amp; !canCalculate)\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Warning\" Class=\"mt-3\"&gt;\n                Data de finalizare nu poate fi calculat\u0103 pentru termenul selectat.\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DateTime? serviceCompletionDate = DateTime.Today.AddDays(5);\n    private string selectedExecutionTerm;\n    private DateTime? estimatedDate;\n    private bool canCalculate;\n    private bool calculationAttempted = false;\n\n    private List&lt;SelectableItem&gt; executionTerms = new()\n    {\n        new(\"standard\", \"Standard (5 zile lucr\u0103toare)\"),\n        new(\"urgent\", \"Urgent (2 zile lucr\u0103toare)\"),\n        new(\"very-urgent\", \"Foarte urgent (1 zi lucr\u0103toare)\")\n    };\n\n    private async Task CalculateApostilleDate()\n    {\n        if (!serviceCompletionDate.HasValue || string.IsNullOrEmpty(selectedExecutionTerm))\n            return;\n\n        calculationAttempted = true;\n\n        var request = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = serviceCompletionDate.Value,\n            ExecturionTermId = selectedExecutionTerm\n        };\n\n        try\n        {\n            var response = await ApostilaService.CalculateEstimateResolveDate(request);\n\n            canCalculate = response.CanBeCalculated;\n            estimatedDate = response.EstimateResolveDate;\n\n            if (!canCalculate)\n            {\n                NotificationService.Warning(\"Calculul nu poate fi efectuat pentru acest termen.\");\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la calculare: {ex.Message}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#integrare-cu-componenta-fodapostila","title":"Integrare cu componenta FodApostila","text":"<pre><code>@page \"/servicii/apostilare\"\n@inject IApostilaComponentService ApostilaService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Serviciu de Apostilare Documente\n    &lt;/FodText&gt;\n\n    &lt;!-- Date serviciu principal --&gt;\n    &lt;FodCard Class=\"mb-3\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Informa\u021bii Serviciu Principal\n            &lt;/FodText&gt;\n            &lt;FodText&gt;\n                Data estimat\u0103 finalizare: @mainServiceDate.ToString(\"dd.MM.yyyy\")\n            &lt;/FodText&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    &lt;!-- Componenta apostilare --&gt;\n    &lt;FodApostila \n        Model=\"@apostilaModel\"\n        Options=\"@apostilaOptions\"\n        OnExecutionTermChanged=\"OnExecutionTermChanged\"\n        ShowEstimatedDate=\"true\" /&gt;\n\n    @if (apostilleEstimatedDate.HasValue)\n    {\n        &lt;FodPaper Elevation=\"2\" Class=\"mt-3 p-3\"&gt;\n            &lt;FodGrid Container=\"true\" AlignItems=\"Align.Center\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"auto\"&gt;\n                    &lt;FodIcon Color=\"FodColor.Success\"&gt;\n                        @FodIcons.Material.Filled.Schedule\n                    &lt;/FodIcon&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"true\"&gt;\n                    &lt;FodText&gt;\n                        Documentele apostilate vor fi disponibile la: \n                        &lt;strong&gt;@apostilleEstimatedDate.Value.ToString(\"dd MMMM yyyy\")&lt;/strong&gt;\n                    &lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;\n                        Termen calculat pe baza datei de finalizare a serviciului principal \n                        \u0219i termenului de execu\u021bie selectat\n                    &lt;/FodText&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodPaper&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    private FodApostilaModel apostilaModel = new();\n    private FodApostilaOptionsModel apostilaOptions;\n    private DateTime mainServiceDate = DateTime.Today.AddDays(7);\n    private DateTime? apostilleEstimatedDate;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 op\u021biunile de apostilare\n        apostilaOptions = await LoadApostilaOptions();\n    }\n\n    private async Task OnExecutionTermChanged(string executionTermId)\n    {\n        if (string.IsNullOrEmpty(executionTermId))\n        {\n            apostilleEstimatedDate = null;\n            return;\n        }\n\n        var request = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = mainServiceDate,\n            ExecturionTermId = executionTermId\n        };\n\n        var response = await ApostilaService.CalculateEstimateResolveDate(request);\n\n        if (response.CanBeCalculated)\n        {\n            apostilleEstimatedDate = response.EstimateResolveDate;\n        }\n        else\n        {\n            apostilleEstimatedDate = null;\n            // Afi\u0219eaz\u0103 mesaj c\u0103 termenul nu poate fi calculat\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#calculator-avansat-cu-zile-lucratoare","title":"Calculator avansat cu zile lucr\u0103toare","text":"<pre><code>public class ApostilleCalculatorService\n{\n    private readonly IApostilaComponentService _apostilaService;\n    private readonly IExceptionDaysService _exceptionDaysService;\n    private readonly ILogger&lt;ApostilleCalculatorService&gt; _logger;\n\n    public async Task&lt;ApostilleCalculationResult&gt; CalculateWithDetails(\n        DateTime serviceDate, \n        string executionTermId)\n    {\n        var result = new ApostilleCalculationResult();\n\n        // Calculeaz\u0103 data standard\n        var response = await _apostilaService.CalculateEstimateResolveDate(\n            new ApostilaEstimateResolveDateRequest\n            {\n                ServiceEstimateResolveDate = serviceDate,\n                ExecturionTermId = executionTermId\n            });\n\n        if (!response.CanBeCalculated || !response.EstimateResolveDate.HasValue)\n        {\n            result.Success = false;\n            result.ErrorMessage = \"Calculul nu poate fi efectuat pentru acest termen\";\n            return result;\n        }\n\n        result.EstimatedDate = response.EstimateResolveDate.Value;\n        result.Success = true;\n\n        // Calculeaz\u0103 zilele lucr\u0103toare\n        result.WorkingDays = await CalculateWorkingDays(\n            serviceDate, \n            result.EstimatedDate);\n\n        // Verific\u0103 dac\u0103 sunt zile nelucr\u0103toare \u00een interval\n        result.NonWorkingDays = await GetNonWorkingDays(\n            serviceDate, \n            result.EstimatedDate);\n\n        // Ajusteaz\u0103 pentru weekend-uri \u0219i s\u0103rb\u0103tori\n        if (result.NonWorkingDays.Any())\n        {\n            result.AdjustedDate = await AdjustForNonWorkingDays(\n                result.EstimatedDate, \n                result.NonWorkingDays.Count);\n        }\n\n        return result;\n    }\n\n    private async Task&lt;int&gt; CalculateWorkingDays(DateTime start, DateTime end)\n    {\n        var days = 0;\n        var current = start.AddDays(1);\n\n        while (current &lt;= end)\n        {\n            if (current.DayOfWeek != DayOfWeek.Saturday &amp;&amp; \n                current.DayOfWeek != DayOfWeek.Sunday)\n            {\n                // Verific\u0103 dac\u0103 nu e s\u0103rb\u0103toare\n                var isHoliday = await IsHoliday(current);\n                if (!isHoliday)\n                {\n                    days++;\n                }\n            }\n            current = current.AddDays(1);\n        }\n\n        return days;\n    }\n}\n\npublic class ApostilleCalculationResult\n{\n    public bool Success { get; set; }\n    public string ErrorMessage { get; set; }\n    public DateTime EstimatedDate { get; set; }\n    public DateTime? AdjustedDate { get; set; }\n    public int WorkingDays { get; set; }\n    public List&lt;DateTime&gt; NonWorkingDays { get; set; } = new();\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#batch-processing-pentru-apostilare","title":"Batch processing pentru apostilare","text":"<pre><code>@inject IApostilaComponentService ApostilaService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Calculare \u00een Mas\u0103 - Termene Apostilare\n        &lt;/FodText&gt;\n\n        &lt;FodDataTable @ref=\"dataTable\" \n                      Items=\"@serviceRequests\"\n                      ShowPagination=\"true\"\n                      PageSize=\"10\"&gt;\n            &lt;HeaderContent&gt;\n                &lt;FodTHeadRow&gt;\n                    &lt;FodTh&gt;Nr. Cerere&lt;/FodTh&gt;\n                    &lt;FodTh&gt;Serviciu&lt;/FodTh&gt;\n                    &lt;FodTh&gt;Data Finalizare&lt;/FodTh&gt;\n                    &lt;FodTh&gt;Termen Apostilare&lt;/FodTh&gt;\n                    &lt;FodTh&gt;Data Estimat\u0103 Apostil\u0103&lt;/FodTh&gt;\n                    &lt;FodTh&gt;Status&lt;/FodTh&gt;\n                &lt;/FodTHeadRow&gt;\n            &lt;/HeaderContent&gt;\n            &lt;RowTemplate&gt;\n                &lt;FodTr&gt;\n                    &lt;FodTd&gt;@context.RequestNumber&lt;/FodTd&gt;\n                    &lt;FodTd&gt;@context.ServiceName&lt;/FodTd&gt;\n                    &lt;FodTd&gt;@context.CompletionDate.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n                    &lt;FodTd&gt;\n                        &lt;FodSelect Value=\"@context.ExecutionTermId\"\n                                   ValueChanged=\"(value) =&gt; OnExecutionTermChanged(context, value)\"\n                                   Items=\"@executionTerms\"\n                                   Dense=\"true\" /&gt;\n                    &lt;/FodTd&gt;\n                    &lt;FodTd&gt;\n                        @if (context.ApostilleDate.HasValue)\n                        {\n                            &lt;FodText Color=\"FodColor.Success\"&gt;\n                                @context.ApostilleDate.Value.ToString(\"dd.MM.yyyy\")\n                            &lt;/FodText&gt;\n                        }\n                        else if (context.CalculationAttempted)\n                        {\n                            &lt;FodText Color=\"FodColor.Error\"&gt;\n                                Nu poate fi calculat\n                            &lt;/FodText&gt;\n                        }\n                        else\n                        {\n                            &lt;FodText Color=\"FodColor.Secondary\"&gt;\n                                Selecta\u021bi termen\n                            &lt;/FodText&gt;\n                        }\n                    &lt;/FodTd&gt;\n                    &lt;FodTd&gt;\n                        @if (context.IsProcessing)\n                        {\n                            &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt;\n                        }\n                        else if (context.ApostilleDate.HasValue)\n                        {\n                            &lt;FodChip Color=\"FodColor.Success\" Size=\"FodSize.Small\"&gt;\n                                Calculat\n                            &lt;/FodChip&gt;\n                        }\n                        else if (context.CalculationAttempted)\n                        {\n                            &lt;FodChip Color=\"FodColor.Error\" Size=\"FodSize.Small\"&gt;\n                                Eroare\n                            &lt;/FodChip&gt;\n                        }\n                    &lt;/FodTd&gt;\n                &lt;/FodTr&gt;\n            &lt;/RowTemplate&gt;\n        &lt;/FodDataTable&gt;\n\n        &lt;div class=\"mt-3\"&gt;\n            &lt;FodButton OnClick=\"CalculateAll\" \n                       Color=\"FodColor.Primary\"\n                       StartIcon=\"@FodIcons.Material.Filled.Calculate\"&gt;\n                Calculeaz\u0103 Toate\n            &lt;/FodButton&gt;\n            &lt;FodButton OnClick=\"ExportResults\" \n                       Color=\"FodColor.Default\"\n                       StartIcon=\"@FodIcons.Material.Filled.GetApp\"\n                       Class=\"ms-2\"&gt;\n                Export Excel\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private FodDataTable&lt;ServiceRequestViewModel&gt; dataTable;\n    private List&lt;ServiceRequestViewModel&gt; serviceRequests = new();\n    private List&lt;SelectableItem&gt; executionTerms = new();\n\n    private async Task OnExecutionTermChanged(ServiceRequestViewModel request, string termId)\n    {\n        request.ExecutionTermId = termId;\n        request.IsProcessing = true;\n        StateHasChanged();\n\n        try\n        {\n            var response = await ApostilaService.CalculateEstimateResolveDate(\n                new ApostilaEstimateResolveDateRequest\n                {\n                    ServiceEstimateResolveDate = request.CompletionDate,\n                    ExecturionTermId = termId\n                });\n\n            request.CalculationAttempted = true;\n            request.ApostilleDate = response.CanBeCalculated \n                ? response.EstimateResolveDate \n                : null;\n        }\n        finally\n        {\n            request.IsProcessing = false;\n            StateHasChanged();\n        }\n    }\n\n    private async Task CalculateAll()\n    {\n        var tasks = serviceRequests\n            .Where(r =&gt; !string.IsNullOrEmpty(r.ExecutionTermId) &amp;&amp; !r.ApostilleDate.HasValue)\n            .Select(r =&gt; OnExecutionTermChanged(r, r.ExecutionTermId))\n            .ToList();\n\n        await Task.WhenAll(tasks);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#7-monitorizare-si-cache","title":"7. Monitorizare \u0219i Cache","text":"<pre><code>public class CachedApostilaComponentService : IApostilaComponentService\n{\n    private readonly IApostilaComponentService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedApostilaComponentService&gt; _logger;\n\n    public async Task&lt;ApostilaEstimateResolveDateResponse&gt; CalculateEstimateResolveDate(\n        ApostilaEstimateResolveDateRequest request)\n    {\n        // Cache key bazat pe dat\u0103 \u0219i termen\n        var cacheKey = $\"apostila_{request.ServiceEstimateResolveDate:yyyyMMdd}_{request.ExecturionTermId}\";\n\n        if (_cache.TryGetValue&lt;ApostilaEstimateResolveDateResponse&gt;(cacheKey, out var cached))\n        {\n            _logger.LogDebug(\"Returnare din cache pentru {CacheKey}\", cacheKey);\n            return cached;\n        }\n\n        var stopwatch = Stopwatch.StartNew();\n\n        try\n        {\n            var result = await _innerService.CalculateEstimateResolveDate(request);\n\n            // Cache doar rezultatele pozitive pentru 1 or\u0103\n            if (result.CanBeCalculated)\n            {\n                _cache.Set(cacheKey, result, TimeSpan.FromHours(1));\n            }\n\n            _logger.LogInformation(\n                \"Calculat termen apostilare: {ServiceDate} + {TermId} = {EstimateDate} \u00een {Duration}ms\",\n                request.ServiceEstimateResolveDate,\n                request.ExecturionTermId,\n                result.EstimateResolveDate,\n                stopwatch.ElapsedMilliseconds);\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \n                \"Eroare la calcularea termenului de apostilare pentru {ServiceDate} \u0219i {TermId}\",\n                request.ServiceEstimateResolveDate,\n                request.ExecturionTermId);\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#8-validare-si-business-rules","title":"8. Validare \u0219i Business Rules","text":"<pre><code>public class ValidatedApostilaComponentService : IApostilaComponentService\n{\n    private readonly IApostilaComponentService _innerService;\n    private readonly ILogger&lt;ValidatedApostilaComponentService&gt; _logger;\n\n    public async Task&lt;ApostilaEstimateResolveDateResponse&gt; CalculateEstimateResolveDate(\n        ApostilaEstimateResolveDateRequest request)\n    {\n        // Validare input\n        if (request.ServiceEstimateResolveDate &lt; DateTime.Today)\n        {\n            _logger.LogWarning(\"Data serviciului nu poate fi \u00een trecut\");\n            return new ApostilaEstimateResolveDateResponse\n            {\n                CanBeCalculated = false,\n                EstimateResolveDate = null\n            };\n        }\n\n        if (string.IsNullOrWhiteSpace(request.ExecturionTermId))\n        {\n            _logger.LogWarning(\"Termen de execu\u021bie lips\u0103\");\n            return new ApostilaEstimateResolveDateResponse\n            {\n                CanBeCalculated = false,\n                EstimateResolveDate = null\n            };\n        }\n\n        // Validare business rules\n        if (request.ServiceEstimateResolveDate &gt; DateTime.Today.AddYears(1))\n        {\n            _logger.LogWarning(\"Data serviciului prea \u00eendep\u0103rtat\u0103 \u00een viitor\");\n            return new ApostilaEstimateResolveDateResponse\n            {\n                CanBeCalculated = false,\n                EstimateResolveDate = null\n            };\n        }\n\n        var result = await _innerService.CalculateEstimateResolveDate(request);\n\n        // Validare rezultat\n        if (result.CanBeCalculated &amp;&amp; result.EstimateResolveDate.HasValue)\n        {\n            // Verific\u0103 c\u0103 data apostilei este dup\u0103 data serviciului\n            if (result.EstimateResolveDate.Value &lt; request.ServiceEstimateResolveDate)\n            {\n                _logger.LogError(\n                    \"Data apostilei ({ApostilleDate}) nu poate fi \u00eenainte de data serviciului ({ServiceDate})\",\n                    result.EstimateResolveDate.Value,\n                    request.ServiceEstimateResolveDate);\n\n                return new ApostilaEstimateResolveDateResponse\n                {\n                    CanBeCalculated = false,\n                    EstimateResolveDate = null\n                };\n            }\n        }\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#9-integrare-cu-notificari","title":"9. Integrare cu notific\u0103ri","text":"<pre><code>public class NotifyingApostilaService\n{\n    private readonly IApostilaComponentService _apostilaService;\n    private readonly INotificationService _notificationService;\n    private readonly IEmailService _emailService;\n\n    public async Task NotifyApostilleReadyDate(\n        string userEmail, \n        string requestNumber,\n        DateTime serviceDate, \n        string executionTermId)\n    {\n        var response = await _apostilaService.CalculateEstimateResolveDate(\n            new ApostilaEstimateResolveDateRequest\n            {\n                ServiceEstimateResolveDate = serviceDate,\n                ExecturionTermId = executionTermId\n            });\n\n        if (response.CanBeCalculated &amp;&amp; response.EstimateResolveDate.HasValue)\n        {\n            // Trimite email\n            await _emailService.SendAsync(new EmailMessage\n            {\n                To = userEmail,\n                Subject = $\"Data estimat\u0103 apostilare - Cerere {requestNumber}\",\n                Body = GenerateEmailBody(requestNumber, response.EstimateResolveDate.Value),\n                IsHtml = true\n            });\n\n            // Programare notificare cu 1 zi \u00eenainte\n            var reminderDate = response.EstimateResolveDate.Value.AddDays(-1);\n            if (reminderDate &gt; DateTime.Now)\n            {\n                await _notificationService.ScheduleNotification(new ScheduledNotification\n                {\n                    UserId = userEmail,\n                    Title = \"Reminder apostilare\",\n                    Message = $\"Documentele apostilate pentru cererea {requestNumber} vor fi disponibile m\u00e2ine\",\n                    ScheduledFor = reminderDate,\n                    Type = NotificationType.Reminder\n                });\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#10-testare","title":"10. Testare","text":"<pre><code>[TestClass]\npublic class ApostilaComponentServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IApostilaComponentService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.example.com/\")\n        };\n\n        _service = new ApostilaComponentService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task CalculateEstimateResolveDate_ValidInput_ReturnsDate()\n    {\n        // Arrange\n        var request = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = DateTime.Today.AddDays(5),\n            ExecturionTermId = \"standard\"\n        };\n\n        var expectedResponse = new ApostilaEstimateResolveDateResponse\n        {\n            CanBeCalculated = true,\n            EstimateResolveDate = DateTime.Today.AddDays(10)\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.CalculateEstimateResolveDate(request);\n\n        // Assert\n        Assert.IsTrue(result.CanBeCalculated);\n        Assert.IsNotNull(result.EstimateResolveDate);\n        Assert.AreEqual(DateTime.Today.AddDays(10), result.EstimateResolveDate.Value);\n    }\n\n    [TestMethod]\n    public async Task CalculateEstimateResolveDate_InvalidTerm_CannotCalculate()\n    {\n        // Arrange\n        var request = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = DateTime.Today.AddDays(5),\n            ExecturionTermId = \"invalid-term\"\n        };\n\n        var expectedResponse = new ApostilaEstimateResolveDateResponse\n        {\n            CanBeCalculated = false,\n            EstimateResolveDate = null\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.CalculateEstimateResolveDate(request);\n\n        // Assert\n        Assert.IsFalse(result.CanBeCalculated);\n        Assert.IsNull(result.EstimateResolveDate);\n    }\n\n    [TestMethod]\n    public async Task CalculateEstimateResolveDate_UrgentTerm_ReturnsSoonerDate()\n    {\n        // Arrange\n        var serviceDate = DateTime.Today.AddDays(5);\n\n        var standardRequest = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = serviceDate,\n            ExecturionTermId = \"standard\"\n        };\n\n        var urgentRequest = new ApostilaEstimateResolveDateRequest\n        {\n            ServiceEstimateResolveDate = serviceDate,\n            ExecturionTermId = \"urgent\"\n        };\n\n        // Act\n        var standardResult = await _service.CalculateEstimateResolveDate(standardRequest);\n        var urgentResult = await _service.CalculateEstimateResolveDate(urgentRequest);\n\n        // Assert\n        Assert.IsTrue(standardResult.CanBeCalculated);\n        Assert.IsTrue(urgentResult.CanBeCalculated);\n        Assert.IsTrue(urgentResult.EstimateResolveDate &lt; standardResult.EstimateResolveDate);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Validare date - Verifica\u021bi c\u0103 data serviciului este valid\u0103 \u0219i \u00een viitor</li> <li>Cache rezultate - Cache-ui\u021bi calculele pentru acelea\u0219i parametri</li> <li>Tratare erori - Gestiona\u021bi cazurile c\u00e2nd calculul nu poate fi efectuat</li> <li>Monitorizare - Urm\u0103ri\u021bi rata de succes a calculelor</li> <li>Notific\u0103ri - Informa\u021bi utilizatorii despre datele estimate</li> <li>Audit - \u00cenregistra\u021bi toate calculele pentru trasabilitate</li> </ol>"},{"location":"fod/servicii/ApostilaComponentService/#12-integrare-completa-in-workflow","title":"12. Integrare complet\u0103 \u00een workflow","text":"<pre><code>@page \"/workflow/apostilare\"\n@inject IApostilaComponentService ApostilaService\n@inject IServiceRequestService ServiceRequestService\n\n&lt;FodWizard @ref=\"wizard\"&gt;\n    &lt;FodWizardStep Title=\"Date Serviciu\"&gt;\n        &lt;!-- Detalii serviciu principal --&gt;\n        &lt;ServiceRequestForm @bind-Model=\"serviceRequest\" /&gt;\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Apostilare\"&gt;\n        &lt;FodApostila @bind-Model=\"apostilaModel\"\n                     Options=\"@apostilaOptions\"\n                     OnChange=\"OnApostilaChanged\" /&gt;\n\n        @if (apostilleEstimate != null &amp;&amp; apostilleEstimate.CanBeCalculated)\n        {\n            &lt;FodTimeline Class=\"mt-4\"&gt;\n                &lt;FodTimelineItem&gt;\n                    &lt;FodTimelineContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\"&gt;Ast\u0103zi&lt;/FodText&gt;\n                        &lt;FodText&gt;Depunere cerere&lt;/FodText&gt;\n                    &lt;/FodTimelineContent&gt;\n                &lt;/FodTimelineItem&gt;\n                &lt;FodTimelineItem&gt;\n                    &lt;FodTimelineContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\"&gt;\n                            @serviceRequest.EstimatedCompletionDate.ToString(\"dd MMM\")\n                        &lt;/FodText&gt;\n                        &lt;FodText&gt;Finalizare serviciu principal&lt;/FodText&gt;\n                    &lt;/FodTimelineContent&gt;\n                &lt;/FodTimelineItem&gt;\n                &lt;FodTimelineItem Color=\"FodColor.Primary\"&gt;\n                    &lt;FodTimelineContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\"&gt;\n                            @apostilleEstimate.EstimateResolveDate?.ToString(\"dd MMM\")\n                        &lt;/FodText&gt;\n                        &lt;FodText&gt;Documente apostilate disponibile&lt;/FodText&gt;\n                    &lt;/FodTimelineContent&gt;\n                &lt;/FodTimelineItem&gt;\n            &lt;/FodTimeline&gt;\n        }\n    &lt;/FodWizardStep&gt;\n\n    &lt;FodWizardStep Title=\"Confirmare\"&gt;\n        &lt;!-- Sumar final cu toate datele --&gt;\n        &lt;ConfirmationSummary \n            ServiceRequest=\"@serviceRequest\"\n            ApostilaModel=\"@apostilaModel\"\n            EstimatedApostilleDate=\"@apostilleEstimate?.EstimateResolveDate\" /&gt;\n    &lt;/FodWizardStep&gt;\n&lt;/FodWizard&gt;\n\n@code {\n    private FodWizard wizard;\n    private ServiceRequestModel serviceRequest = new();\n    private FodApostilaModel apostilaModel = new();\n    private FodApostilaOptionsModel apostilaOptions;\n    private ApostilaEstimateResolveDateResponse apostilleEstimate;\n\n    private async Task OnApostilaChanged()\n    {\n        if (!string.IsNullOrEmpty(apostilaModel.FodApostilaExecutionTermId) &amp;&amp; \n            serviceRequest.EstimatedCompletionDate.HasValue)\n        {\n            apostilleEstimate = await ApostilaService.CalculateEstimateResolveDate(\n                new ApostilaEstimateResolveDateRequest\n                {\n                    ServiceEstimateResolveDate = serviceRequest.EstimatedCompletionDate.Value,\n                    ExecturionTermId = apostilaModel.FodApostilaExecutionTermId\n                });\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApostilaComponentService/#13-concluzie","title":"13. Concluzie","text":"<p><code>ApostilaComponentService</code> ofer\u0103 func\u021bionalitate esen\u021bial\u0103 pentru calcularea termenelor de apostilare \u00een sistemul FOD. Cu suport pentru diferite termene de execu\u021bie, validare robust\u0103 \u0219i integrare u\u0219oar\u0103 cu componentele UI, serviciul asigur\u0103 c\u0103 utilizatorii primesc estim\u0103ri precise pentru disponibilitatea documentelor apostilate, facilit\u00e2nd planificarea \u0219i gestionarea cererilor interna\u021bionale.</p>"},{"location":"fod/servicii/ApplicationModelLoader/","title":"ApplicationModelLoader","text":""},{"location":"fod/servicii/ApplicationModelLoader/#documentatie-pentru-serviciul-applicationmodelloader","title":"Documenta\u021bie pentru serviciul ApplicationModelLoader","text":""},{"location":"fod/servicii/ApplicationModelLoader/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ApplicationModelLoader</code> este un serviciu client-side care \u00eencarc\u0103 modelul aplica\u021biei de la server. Acest model con\u021bine configur\u0103ri esen\u021biale pentru func\u021bionarea aplica\u021biei, inclusiv set\u0103ri de limb\u0103, culturi disponibile, configur\u0103ri de UI \u0219i alte metadate necesare pentru ini\u021bializarea corect\u0103 a aplica\u021biei.</p> <p>Caracteristici principale: - \u00cenc\u0103rcare asincron\u0103 a configura\u021biei aplica\u021biei - Cache intern pentru evitarea apelurilor repetate - Gestionare erori pentru probleme de re\u021bea \u0219i JSON - Interfa\u021b\u0103 simpl\u0103 cu o singur\u0103 metod\u0103 - Utilizat de componenta FodApplicationModelLoader</p>"},{"location":"fod/servicii/ApplicationModelLoader/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":""},{"location":"fod/servicii/ApplicationModelLoader/#inregistrare-in-programcs-blazor-webassembly","title":"\u00cenregistrare \u00een Program.cs (Blazor WebAssembly)","text":"<pre><code>var builder = WebAssemblyHostBuilder.CreateDefault(args);\n\n// Configurare HttpClient pentru aplica\u021bie\nbuilder.Services.AddScoped(sp =&gt; new HttpClient \n{ \n    BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) \n});\n\n// \u00cenregistrare ApplicationModelLoader\nbuilder.Services.AddScoped&lt;IApplicationModelLoader, ApplicationModelLoader&gt;();\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#inregistrare-in-blazor-server","title":"\u00cenregistrare \u00een Blazor Server","text":"<pre><code>// \u00cen Startup.cs sau Program.cs\nbuilder.Services.AddHttpClient&lt;IApplicationModelLoader, ApplicationModelLoader&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(\"https://your-api-base-url/\");\n    client.Timeout = TimeSpan.FromSeconds(30);\n});\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#3-interfata-iapplicationmodelloader","title":"3. Interfa\u021ba IApplicationModelLoader","text":"<pre><code>namespace Fod.Components.Shared.Services.Application\n{\n    public interface IApplicationModelLoader\n    {\n        /// &lt;summary&gt;\n        /// \u00cencarc\u0103 modelul aplica\u021biei de la server\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;ApplicationModel sau null \u00een caz de eroare&lt;/returns&gt;\n        Task&lt;ApplicationModel?&gt; Load();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#4-model-applicationmodel","title":"4. Model ApplicationModel","text":"<pre><code>public class ApplicationModel\n{\n    // Set\u0103ri de localizare\n    public string DefaultCulture { get; set; }\n    public List&lt;CultureInfo&gt; SupportedCultures { get; set; }\n    public string DefaultLanguage { get; set; }\n    public List&lt;Language&gt; AvailableLanguages { get; set; }\n\n    // Configur\u0103ri UI\n    public ThemeConfiguration Theme { get; set; }\n    public NavigationConfiguration Navigation { get; set; }\n\n    // Set\u0103ri aplica\u021bie\n    public string ApplicationName { get; set; }\n    public string ApplicationVersion { get; set; }\n    public string Environment { get; set; }\n\n    // Feature flags\n    public Dictionary&lt;string, bool&gt; Features { get; set; }\n\n    // Configur\u0103ri API\n    public ApiEndpoints Endpoints { get; set; }\n\n    // Alte configur\u0103ri\n    public Dictionary&lt;string, object&gt; CustomSettings { get; set; }\n}\n\npublic class Language\n{\n    public string Code { get; set; }\n    public string Name { get; set; }\n    public string NativeName { get; set; }\n    public bool IsRTL { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#5-utilizare-de-baza","title":"5. Utilizare de Baz\u0103","text":""},{"location":"fod/servicii/ApplicationModelLoader/#in-componente-blazor","title":"\u00cen componente Blazor","text":"<pre><code>@inject IApplicationModelLoader AppModelLoader\n\n@if (appModel == null)\n{\n    &lt;FodLoadingCircular /&gt;\n}\nelse\n{\n    &lt;div&gt;\n        &lt;h1&gt;@appModel.ApplicationName&lt;/h1&gt;\n        &lt;p&gt;Versiune: @appModel.ApplicationVersion&lt;/p&gt;\n\n        &lt;FodSelect T=\"string\" @bind-Value=\"selectedLanguage\" Label=\"Limb\u0103\"&gt;\n            @foreach (var lang in appModel.AvailableLanguages)\n            {\n                &lt;FodSelectItem Value=\"@lang.Code\"&gt;@lang.NativeName&lt;/FodSelectItem&gt;\n            }\n        &lt;/FodSelect&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private ApplicationModel appModel;\n    private string selectedLanguage;\n\n    protected override async Task OnInitializedAsync()\n    {\n        appModel = await AppModelLoader.Load();\n        selectedLanguage = appModel?.DefaultLanguage ?? \"ro\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#6-exemple-avansate","title":"6. Exemple Avansate","text":""},{"location":"fod/servicii/ApplicationModelLoader/#service-extins-cu-evenimente","title":"Service extins cu evenimente","text":"<pre><code>public class ExtendedApplicationModelLoader : IApplicationModelLoader\n{\n    private readonly HttpClient _httpClient;\n    private readonly ILogger&lt;ExtendedApplicationModelLoader&gt; _logger;\n    private ApplicationModel? _cachedModel;\n\n    public event EventHandler&lt;ApplicationModel&gt;? ModelLoaded;\n    public event EventHandler&lt;Exception&gt;? LoadError;\n\n    public ExtendedApplicationModelLoader(\n        HttpClient httpClient,\n        ILogger&lt;ExtendedApplicationModelLoader&gt; logger)\n    {\n        _httpClient = httpClient;\n        _logger = logger;\n    }\n\n    public async Task&lt;ApplicationModel?&gt; Load()\n    {\n        if (_cachedModel != null)\n            return _cachedModel;\n\n        try\n        {\n            _logger.LogInformation(\"Loading application model...\");\n\n            _cachedModel = await _httpClient\n                .GetFromJsonAsync&lt;ApplicationModel&gt;(\"api/application\");\n\n            if (_cachedModel != null)\n            {\n                _logger.LogInformation(\"Application model loaded successfully\");\n                ModelLoaded?.Invoke(this, _cachedModel);\n            }\n\n            return _cachedModel;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Failed to load application model\");\n            LoadError?.Invoke(this, ex);\n            return null;\n        }\n    }\n\n    public void ClearCache()\n    {\n        _cachedModel = null;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#wrapper-cu-retry-logic","title":"Wrapper cu retry logic","text":"<pre><code>public class ResilientApplicationModelLoader : IApplicationModelLoader\n{\n    private readonly IApplicationModelLoader _innerLoader;\n    private readonly int _maxRetries;\n    private readonly TimeSpan _retryDelay;\n\n    public ResilientApplicationModelLoader(\n        IApplicationModelLoader innerLoader,\n        int maxRetries = 3,\n        int retryDelaySeconds = 2)\n    {\n        _innerLoader = innerLoader;\n        _maxRetries = maxRetries;\n        _retryDelay = TimeSpan.FromSeconds(retryDelaySeconds);\n    }\n\n    public async Task&lt;ApplicationModel?&gt; Load()\n    {\n        Exception lastException = null;\n\n        for (int i = 0; i &lt; _maxRetries; i++)\n        {\n            try\n            {\n                var result = await _innerLoader.Load();\n                if (result != null)\n                    return result;\n            }\n            catch (Exception ex)\n            {\n                lastException = ex;\n\n                if (i &lt; _maxRetries - 1)\n                {\n                    await Task.Delay(_retryDelay);\n                }\n            }\n        }\n\n        if (lastException != null)\n            throw new ApplicationException(\n                $\"Failed to load application model after {_maxRetries} attempts\", \n                lastException);\n\n        return null;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#7-integrare-cu-fodapplicationmodelloader-component","title":"7. Integrare cu FodApplicationModelLoader Component","text":"<pre><code>&lt;!-- Utilizare simpl\u0103 --&gt;\n&lt;FodApplicationModelLoader&gt;\n    &lt;ChildContent&gt;\n        &lt;!-- Con\u021binutul aplica\u021biei dup\u0103 \u00eenc\u0103rcarea modelului --&gt;\n        &lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n            &lt;Found Context=\"routeData\"&gt;\n                &lt;RouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(MainLayout)\" /&gt;\n            &lt;/Found&gt;\n            &lt;NotFound&gt;\n                &lt;PageNotFound /&gt;\n            &lt;/NotFound&gt;\n        &lt;/Router&gt;\n    &lt;/ChildContent&gt;\n    &lt;LoadingContent&gt;\n        &lt;div class=\"app-loading\"&gt;\n            &lt;FodLoadingCircular Size=\"FodSize.Large\" /&gt;\n            &lt;p&gt;Se \u00eencarc\u0103 aplica\u021bia...&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/LoadingContent&gt;\n    &lt;ErrorContent&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n            Nu s-a putut \u00eenc\u0103rca configura\u021bia aplica\u021biei. \n            V\u0103 rug\u0103m re\u00eenc\u0103rca\u021bi pagina.\n        &lt;/FodAlert&gt;\n    &lt;/ErrorContent&gt;\n&lt;/FodApplicationModelLoader&gt;\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#8-utilizare-pentru-configurare-globala","title":"8. Utilizare pentru Configurare Global\u0103","text":"<pre><code>// AppState.cs\npublic class AppState\n{\n    private ApplicationModel _model;\n\n    public ApplicationModel Model \n    { \n        get =&gt; _model;\n        set\n        {\n            _model = value;\n            NotifyStateChanged();\n        }\n    }\n\n    public event Action OnChange;\n\n    private void NotifyStateChanged() =&gt; OnChange?.Invoke();\n}\n\n// Program.cs\nbuilder.Services.AddSingleton&lt;AppState&gt;();\n\n// \u00cen App.razor\n@inject IApplicationModelLoader ModelLoader\n@inject AppState AppState\n\n@code {\n    protected override async Task OnInitializedAsync()\n    {\n        var model = await ModelLoader.Load();\n        if (model != null)\n        {\n            AppState.Model = model;\n\n            // Configurare global\u0103 bazat\u0103 pe model\n            await ConfigureApplication(model);\n        }\n    }\n\n    private async Task ConfigureApplication(ApplicationModel model)\n    {\n        // Setare cultur\u0103 implicit\u0103\n        var culture = new CultureInfo(model.DefaultCulture);\n        CultureInfo.DefaultThreadCurrentCulture = culture;\n        CultureInfo.DefaultThreadCurrentUICulture = culture;\n\n        // Aplicare tem\u0103\n        await JSRuntime.InvokeVoidAsync(\"applyTheme\", model.Theme);\n\n        // Alte configur\u0103ri...\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#9-gestionare-cache-si-refresh","title":"9. Gestionare Cache \u0219i Refresh","text":"<pre><code>public class CacheableApplicationModelLoader : IApplicationModelLoader\n{\n    private readonly HttpClient _httpClient;\n    private readonly ILocalStorageService _localStorage;\n    private readonly TimeSpan _cacheExpiration;\n    private const string CacheKey = \"app-model-cache\";\n\n    public async Task&lt;ApplicationModel?&gt; Load()\n    {\n        // Verific\u0103 cache local\n        var cached = await _localStorage.GetItemAsync&lt;CachedModel&gt;(CacheKey);\n\n        if (cached != null &amp;&amp; cached.ExpiresAt &gt; DateTime.UtcNow)\n        {\n            return cached.Model;\n        }\n\n        // \u00cencarc\u0103 de la server\n        var model = await LoadFromServer();\n\n        if (model != null)\n        {\n            // Salveaz\u0103 \u00een cache\n            await _localStorage.SetItemAsync(CacheKey, new CachedModel\n            {\n                Model = model,\n                ExpiresAt = DateTime.UtcNow.Add(_cacheExpiration)\n            });\n        }\n\n        return model;\n    }\n\n    public async Task&lt;ApplicationModel?&gt; ForceRefresh()\n    {\n        await _localStorage.RemoveItemAsync(CacheKey);\n        return await Load();\n    }\n\n    private class CachedModel\n    {\n        public ApplicationModel Model { get; set; }\n        public DateTime ExpiresAt { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Cache Strategy: Implementa\u021bi cache pentru a evita apeluri repetate</li> <li>Error Handling: Trata\u021bi toate tipurile de erori posibile</li> <li>Retry Logic: Implementa\u021bi retry pentru rezilien\u021b\u0103</li> <li>Logging: Loga\u021bi \u00eenc\u0103rc\u0103rile \u0219i erorile</li> <li>Timeout: Seta\u021bi timeout-uri rezonabile</li> <li>Fallback: Ave\u021bi valori implicite pentru configur\u0103ri critice</li> </ol>"},{"location":"fod/servicii/ApplicationModelLoader/#11-troubleshooting","title":"11. Troubleshooting","text":""},{"location":"fod/servicii/ApplicationModelLoader/#modelul-nu-se-incarca","title":"Modelul nu se \u00eencarc\u0103","text":"<ul> <li>Verifica\u021bi URL-ul endpoint-ului</li> <li>Verifica\u021bi c\u0103 serverul returneaz\u0103 JSON valid</li> <li>Verifica\u021bi permisiunile CORS</li> <li>Verifica\u021bi logurile pentru erori</li> </ul>"},{"location":"fod/servicii/ApplicationModelLoader/#cache-nu-functioneaza","title":"Cache nu func\u021bioneaz\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 nu apela\u021bi Load() de mai multe ori simultan</li> <li>Folosi\u021bi un singleton pentru serviciu</li> <li>Implementa\u021bi thread-safety pentru cache</li> </ul>"},{"location":"fod/servicii/ApplicationModelLoader/#12-securitate","title":"12. Securitate","text":"<pre><code>public class SecureApplicationModelLoader : IApplicationModelLoader\n{\n    private readonly HttpClient _httpClient;\n    private readonly ITokenService _tokenService;\n\n    public async Task&lt;ApplicationModel?&gt; Load()\n    {\n        // Adaug\u0103 token de autentificare\n        var token = await _tokenService.GetTokenAsync();\n        _httpClient.DefaultRequestHeaders.Authorization = \n            new AuthenticationHeaderValue(\"Bearer\", token);\n\n        var response = await _httpClient.GetAsync(\"api/application\");\n\n        if (response.StatusCode == HttpStatusCode.Unauthorized)\n        {\n            // Handle unauthorized\n            await _tokenService.RefreshTokenAsync();\n            // Retry...\n        }\n\n        // Continue with normal flow...\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ApplicationModelLoader/#13-concluzie","title":"13. Concluzie","text":"<p><code>ApplicationModelLoader</code> este un serviciu esen\u021bial pentru ini\u021bializarea aplica\u021biilor Blazor cu configura\u021bii dinamice de la server. Prin implementarea de cache, gestionare erori \u0219i integrare str\u00e2ns\u0103 cu componentele FOD, serviciul asigur\u0103 o experien\u021b\u0103 de \u00eenc\u0103rcare fluent\u0103 \u0219i configurare consistent\u0103 a aplica\u021biei.</p>"},{"location":"fod/servicii/AttributeHandlerService/","title":"AttributeHandlerService","text":""},{"location":"fod/servicii/AttributeHandlerService/#documentatie-pentru-serviciul-attributehandlerservice","title":"Documenta\u021bie pentru serviciul AttributeHandlerService","text":""},{"location":"fod/servicii/AttributeHandlerService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>AttributeHandlerService</code> este un serviciu utilitar care gestioneaz\u0103 extragerea \u0219i localizarea etichetelor pentru valorile enum folosind atributul <code>DisplayAttribute</code>. Serviciul faciliteaz\u0103 generarea automat\u0103 de op\u021biuni pentru componente de selec\u021bie cu suport complet pentru localizare.</p> <p>Caracteristici principale: - Extragere etichete din atributul Display - Suport pentru localizare prin ResourceType - Fallback automat la numele enum - Integrare cu sistemul de localizare Blazor - Cache intern pentru performan\u021b\u0103 - Suport pentru toate tipurile de enum</p>"},{"location":"fod/servicii/AttributeHandlerService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IAttributeHandlerService, AttributeHandlerService&gt;();\n\n// Asigura\u021bi-v\u0103 c\u0103 localizarea este configurat\u0103\nbuilder.Services.AddLocalization(options =&gt; \n{\n    options.ResourcesPath = \"Resources\";\n});\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#3-interfata-iattributehandlerservice","title":"3. Interfa\u021ba IAttributeHandlerService","text":"<pre><code>namespace FOD.Components.Services\n{\n    public interface IAttributeHandlerService\n    {\n        string GetEnumLabel(object enumValue);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>GetEnumLabel</code> <code>object enumValue</code> <code>string</code> Ob\u021bine eticheta localizat\u0103 pentru o valoare enum"},{"location":"fod/servicii/AttributeHandlerService/#5-utilizare-cu-atribute","title":"5. Utilizare cu Atribute","text":""},{"location":"fod/servicii/AttributeHandlerService/#definire-enum-cu-display-attribute","title":"Definire Enum cu Display Attribute","text":"<pre><code>public enum RequestorType\n{\n    [Display(Name = \"Individual_Enum_Label\", ResourceType = typeof(FodSharedResources))]\n    Individual = 1,\n\n    [Display(Name = \"Organization_Enum_Label\", ResourceType = typeof(FodSharedResources))]\n    Organization = 2,\n\n    [Display(Name = \"Reprezentant legal\")]  // F\u0103r\u0103 localizare\n    LegalRepresentative = 3,\n\n    OnBehalfOf = 4  // F\u0103r\u0103 atribut Display\n}\n\npublic enum DocumentStatus\n{\n    [Display(Name = \"DocumentStatus_Draft\", ResourceType = typeof(DocumentResources))]\n    Draft,\n\n    [Display(Name = \"DocumentStatus_InProgress\", ResourceType = typeof(DocumentResources))]\n    InProgress,\n\n    [Display(Name = \"DocumentStatus_Completed\", ResourceType = typeof(DocumentResources))]\n    Completed,\n\n    [Display(Name = \"DocumentStatus_Rejected\", ResourceType = typeof(DocumentResources))]\n    Rejected\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/AttributeHandlerService/#utilizare-directa-in-componente","title":"Utilizare direct\u0103 \u00een componente","text":"<pre><code>@inject IAttributeHandlerService AttributeHandler\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Status Document: @AttributeHandler.GetEnumLabel(DocumentStatus.InProgress)\n        &lt;/FodText&gt;\n\n        &lt;!-- Afi\u0219are toate valorile enum --&gt;\n        &lt;FodList&gt;\n            @foreach (var status in Enum.GetValues&lt;DocumentStatus&gt;())\n            {\n                &lt;FodListItem&gt;\n                    &lt;FodListItemIcon&gt;\n                        &lt;FodIcon Color=\"@GetStatusColor(status)\"&gt;\n                            @GetStatusIcon(status)\n                        &lt;/FodIcon&gt;\n                    &lt;/FodListItemIcon&gt;\n                    &lt;FodListItemText&gt;\n                        @AttributeHandler.GetEnumLabel(status)\n                    &lt;/FodListItemText&gt;\n                &lt;/FodListItem&gt;\n            }\n        &lt;/FodList&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private FodColor GetStatusColor(DocumentStatus status)\n    {\n        return status switch\n        {\n            DocumentStatus.Draft =&gt; FodColor.Default,\n            DocumentStatus.InProgress =&gt; FodColor.Warning,\n            DocumentStatus.Completed =&gt; FodColor.Success,\n            DocumentStatus.Rejected =&gt; FodColor.Error,\n            _ =&gt; FodColor.Default\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#integrare-cu-selectableitemsservice","title":"Integrare cu SelectableItemsService","text":"<pre><code>public class EnumOptionsGenerator\n{\n    private readonly IAttributeHandlerService _attributeHandler;\n\n    public List&lt;SelectableItem&gt; GenerateOptions&lt;TEnum&gt;() where TEnum : Enum\n    {\n        return Enum.GetValues&lt;TEnum&gt;()\n            .Select(value =&gt; new SelectableItem\n            {\n                Value = value,\n                Text = _attributeHandler.GetEnumLabel(value)\n            })\n            .ToList();\n    }\n\n    public List&lt;SelectableItem&gt; GenerateOptionsWithFilter&lt;TEnum&gt;(\n        Func&lt;TEnum, bool&gt; filter) where TEnum : Enum\n    {\n        return Enum.GetValues&lt;TEnum&gt;()\n            .Where(filter)\n            .Select(value =&gt; new SelectableItem\n            {\n                Value = value,\n                Text = _attributeHandler.GetEnumLabel(value)\n            })\n            .ToList();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#componente-personalizate-cu-enum","title":"Componente personalizate cu enum","text":"<pre><code>@typeparam TEnum where TEnum : Enum\n@inject IAttributeHandlerService AttributeHandler\n\n&lt;FodSelect @bind-Value=\"SelectedValue\" Label=\"@Label\"&gt;\n    @foreach (var value in GetEnumValues())\n    {\n        &lt;FodOption Value=\"@value\"&gt;\n            @AttributeHandler.GetEnumLabel(value)\n        &lt;/FodOption&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    [Parameter] public TEnum SelectedValue { get; set; }\n    [Parameter] public EventCallback&lt;TEnum&gt; SelectedValueChanged { get; set; }\n    [Parameter] public string Label { get; set; }\n    [Parameter] public Func&lt;TEnum, bool&gt; Filter { get; set; }\n\n    private IEnumerable&lt;TEnum&gt; GetEnumValues()\n    {\n        var values = Enum.GetValues&lt;TEnum&gt;();\n        return Filter != null ? values.Where(Filter) : values;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#7-serviciu-extins-cu-cache","title":"7. Serviciu extins cu cache","text":"<pre><code>public class CachedAttributeHandlerService : IAttributeHandlerService\n{\n    private readonly IAttributeHandlerService _innerService;\n    private readonly ConcurrentDictionary&lt;string, string&gt; _cache = new();\n\n    public string GetEnumLabel(object enumValue)\n    {\n        if (enumValue == null)\n            return string.Empty;\n\n        var key = $\"{enumValue.GetType().FullName}_{enumValue}\";\n\n        return _cache.GetOrAdd(key, _ =&gt; _innerService.GetEnumLabel(enumValue));\n    }\n}\n\n// \u00cenregistrare\nservices.AddScoped&lt;IAttributeHandlerService&gt;(provider =&gt;\n{\n    var innerService = new AttributeHandlerService(\n        provider.GetRequiredService&lt;IStringLocalizerFactory&gt;());\n    return new CachedAttributeHandlerService(innerService);\n});\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#8-localizare-avansata","title":"8. Localizare avansat\u0103","text":"<pre><code>public class EnhancedAttributeHandlerService : IAttributeHandlerService\n{\n    private readonly IStringLocalizerFactory _localizerFactory;\n    private readonly ILogger&lt;EnhancedAttributeHandlerService&gt; _logger;\n    private readonly IOptions&lt;LocalizationOptions&gt; _localizationOptions;\n\n    public string GetEnumLabel(object enumValue)\n    {\n        if (enumValue == null)\n            return string.Empty;\n\n        var type = enumValue.GetType();\n        if (!type.IsEnum)\n        {\n            _logger.LogWarning(\"GetEnumLabel called with non-enum type: {Type}\", type);\n            return enumValue.ToString();\n        }\n\n        var memberInfo = type.GetMember(enumValue.ToString()).FirstOrDefault();\n        if (memberInfo == null)\n            return enumValue.ToString();\n\n        var displayAttribute = memberInfo.GetCustomAttribute&lt;DisplayAttribute&gt;();\n        if (displayAttribute == null)\n            return FormatEnumName(enumValue.ToString());\n\n        // Localizare cu fallback\n        if (displayAttribute.ResourceType != null &amp;&amp; !string.IsNullOrEmpty(displayAttribute.Name))\n        {\n            try\n            {\n                var localizer = _localizerFactory.Create(displayAttribute.ResourceType);\n                var localizedString = localizer[displayAttribute.Name];\n\n                if (!localizedString.ResourceNotFound)\n                {\n                    return localizedString.Value;\n                }\n\n                _logger.LogWarning(\n                    \"Resource not found: {ResourceKey} in {ResourceType}\", \n                    displayAttribute.Name, \n                    displayAttribute.ResourceType);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \n                    \"Error localizing enum value {EnumValue}\", \n                    enumValue);\n            }\n        }\n\n        // Fallback la Display.Name sau nume formatat\n        return !string.IsNullOrEmpty(displayAttribute.Name) \n            ? displayAttribute.Name \n            : FormatEnumName(enumValue.ToString());\n    }\n\n    private string FormatEnumName(string enumName)\n    {\n        // Converte\u0219te PascalCase \u00een text lizibil\n        // Ex: \"InProgress\" -&gt; \"In Progress\"\n        return Regex.Replace(enumName, \"([a-z])([A-Z])\", \"$1 $2\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#9-utilizare-in-formulare-dinamice","title":"9. Utilizare \u00een formulare dinamice","text":"<pre><code>@inject IAttributeHandlerService AttributeHandler\n@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Formular Dinamic\n        &lt;/FodText&gt;\n\n        @foreach (var field in formFields)\n        {\n            &lt;div class=\"mb-3\"&gt;\n                @if (field.FieldType.IsEnum)\n                {\n                    &lt;FodSelect @bind-Value=\"field.Value\" \n                               Label=\"@field.DisplayName\"\n                               Items=\"@GetEnumOptions(field.FieldType)\"\n                               Required=\"@field.IsRequired\" /&gt;\n                }\n                else if (field.FieldType == typeof(bool))\n                {\n                    &lt;FodCheckbox @bind-Value=\"field.Value\" \n                                 Label=\"@field.DisplayName\" /&gt;\n                }\n                else\n                {\n                    &lt;FodInput @bind-Value=\"field.Value\" \n                              Label=\"@field.DisplayName\"\n                              Required=\"@field.IsRequired\" /&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private List&lt;DynamicFormField&gt; formFields = new();\n\n    private List&lt;SelectableItem&gt; GetEnumOptions(Type enumType)\n    {\n        if (SelectableItemsService.TryGetEnumSelectableItems(enumType, out var items))\n        {\n            return items.ToList();\n        }\n\n        // Fallback manual\n        return Enum.GetValues(enumType)\n            .Cast&lt;object&gt;()\n            .Select(value =&gt; new SelectableItem\n            {\n                Value = value,\n                Text = AttributeHandler.GetEnumLabel(value)\n            })\n            .ToList();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#10-grupare-enum-uri","title":"10. Grupare enum-uri","text":"<pre><code>public class GroupedEnumService\n{\n    private readonly IAttributeHandlerService _attributeHandler;\n\n    public List&lt;GroupedSelectableItem&gt; GetGroupedEnumOptions&lt;TEnum&gt;() where TEnum : Enum\n    {\n        var grouped = new Dictionary&lt;string, List&lt;SelectableItem&gt;&gt;();\n\n        foreach (var value in Enum.GetValues&lt;TEnum&gt;())\n        {\n            var memberInfo = typeof(TEnum).GetMember(value.ToString()).First();\n            var categoryAttribute = memberInfo.GetCustomAttribute&lt;CategoryAttribute&gt;();\n            var category = categoryAttribute?.Category ?? \"General\";\n\n            if (!grouped.ContainsKey(category))\n            {\n                grouped[category] = new List&lt;SelectableItem&gt;();\n            }\n\n            grouped[category].Add(new SelectableItem\n            {\n                Value = value,\n                Text = _attributeHandler.GetEnumLabel(value)\n            });\n        }\n\n        return grouped.Select(g =&gt; new GroupedSelectableItem\n        {\n            GroupName = g.Key,\n            Items = g.Value\n        }).ToList();\n    }\n}\n\n// Utilizare\npublic enum ServiceType\n{\n    [Display(Name = \"Birth_Certificate\", ResourceType = typeof(Resources))]\n    [Category(\"Documente de Stare Civil\u0103\")]\n    BirthCertificate,\n\n    [Display(Name = \"Marriage_Certificate\", ResourceType = typeof(Resources))]\n    [Category(\"Documente de Stare Civil\u0103\")]\n    MarriageCertificate,\n\n    [Display(Name = \"Business_License\", ResourceType = typeof(Resources))]\n    [Category(\"Licen\u021be \u0219i Autoriza\u021bii\")]\n    BusinessLicense,\n\n    [Display(Name = \"Building_Permit\", ResourceType = typeof(Resources))]\n    [Category(\"Licen\u021be \u0219i Autoriza\u021bii\")]\n    BuildingPermit\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#11-extensie-pentru-descrieri","title":"11. Extensie pentru descrieri","text":"<pre><code>public interface IExtendedAttributeHandlerService : IAttributeHandlerService\n{\n    string GetEnumDescription(object enumValue);\n    string GetEnumShortName(object enumValue);\n    int? GetEnumOrder(object enumValue);\n}\n\npublic class ExtendedAttributeHandlerService : AttributeHandlerService, IExtendedAttributeHandlerService\n{\n    public ExtendedAttributeHandlerService(IStringLocalizerFactory stringLocalizerFactory) \n        : base(stringLocalizerFactory)\n    {\n    }\n\n    public string GetEnumDescription(object enumValue)\n    {\n        var memberInfo = GetMemberInfo(enumValue);\n        var attribute = memberInfo?.GetCustomAttribute&lt;DisplayAttribute&gt;();\n\n        if (attribute?.ResourceType != null &amp;&amp; !string.IsNullOrEmpty(attribute.Description))\n        {\n            var localizer = StringLocalizerFactory.Create(attribute.ResourceType);\n            var localized = localizer[attribute.Description];\n            if (!localized.ResourceNotFound)\n                return localized.Value;\n        }\n\n        return attribute?.Description ?? string.Empty;\n    }\n\n    public string GetEnumShortName(object enumValue)\n    {\n        var memberInfo = GetMemberInfo(enumValue);\n        var attribute = memberInfo?.GetCustomAttribute&lt;DisplayAttribute&gt;();\n\n        if (attribute?.ResourceType != null &amp;&amp; !string.IsNullOrEmpty(attribute.ShortName))\n        {\n            var localizer = StringLocalizerFactory.Create(attribute.ResourceType);\n            var localized = localizer[attribute.ShortName];\n            if (!localized.ResourceNotFound)\n                return localized.Value;\n        }\n\n        return attribute?.ShortName ?? enumValue.ToString();\n    }\n\n    public int? GetEnumOrder(object enumValue)\n    {\n        var memberInfo = GetMemberInfo(enumValue);\n        var attribute = memberInfo?.GetCustomAttribute&lt;DisplayAttribute&gt;();\n        return attribute?.GetOrder();\n    }\n\n    private MemberInfo GetMemberInfo(object enumValue)\n    {\n        if (enumValue == null) return null;\n\n        var type = enumValue.GetType();\n        if (!type.IsEnum) return null;\n\n        return type.GetMember(enumValue.ToString()).FirstOrDefault();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#12-testare","title":"12. Testare","text":"<pre><code>[TestClass]\npublic class AttributeHandlerServiceTests\n{\n    private IAttributeHandlerService _service;\n    private Mock&lt;IStringLocalizerFactory&gt; _localizerFactoryMock;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _localizerFactoryMock = new Mock&lt;IStringLocalizerFactory&gt;();\n        _service = new AttributeHandlerService(_localizerFactoryMock.Object);\n    }\n\n    [TestMethod]\n    public void GetEnumLabel_WithDisplayAttribute_ReturnsDisplayName()\n    {\n        // Arrange\n        var enumValue = TestEnum.WithDisplay;\n\n        // Act\n        var result = _service.GetEnumLabel(enumValue);\n\n        // Assert\n        Assert.AreEqual(\"Display Name\", result);\n    }\n\n    [TestMethod]\n    public void GetEnumLabel_WithLocalization_ReturnsLocalizedText()\n    {\n        // Arrange\n        var enumValue = TestEnum.WithLocalization;\n        var localizerMock = new Mock&lt;IStringLocalizer&gt;();\n        localizerMock.Setup(l =&gt; l[\"TestKey\"])\n            .Returns(new LocalizedString(\"TestKey\", \"Localized Text\"));\n\n        _localizerFactoryMock.Setup(f =&gt; f.Create(It.IsAny&lt;Type&gt;()))\n            .Returns(localizerMock.Object);\n\n        // Act\n        var result = _service.GetEnumLabel(enumValue);\n\n        // Assert\n        Assert.AreEqual(\"Localized Text\", result);\n    }\n\n    [TestMethod]\n    public void GetEnumLabel_WithoutDisplay_ReturnsEnumName()\n    {\n        // Arrange\n        var enumValue = TestEnum.NoDisplay;\n\n        // Act\n        var result = _service.GetEnumLabel(enumValue);\n\n        // Assert\n        Assert.AreEqual(\"NoDisplay\", result);\n    }\n\n    private enum TestEnum\n    {\n        [Display(Name = \"Display Name\")]\n        WithDisplay,\n\n        [Display(Name = \"TestKey\", ResourceType = typeof(TestResources))]\n        WithLocalization,\n\n        NoDisplay\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AttributeHandlerService/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Folosi\u021bi Display Attribute - Defini\u021bi \u00eentotdeauna Display pentru enum-uri UI</li> <li>Localizare consistent\u0103 - Folosi\u021bi ResourceType pentru texte multilingve</li> <li>Cache rezultate - Implementa\u021bi cache pentru performan\u021b\u0103</li> <li>Fallback graceful - Asigura\u021bi afi\u0219are corect\u0103 chiar f\u0103r\u0103 atribute</li> <li>Validare tip - Verifica\u021bi c\u0103 parametrul este enum</li> <li>Logging - \u00cenregistra\u021bi erori de localizare pentru debugging</li> <li>Conven\u021bii nume - Folosi\u021bi conven\u021bii consistente pentru chei de resurse</li> </ol>"},{"location":"fod/servicii/AttributeHandlerService/#14-concluzie","title":"14. Concluzie","text":"<p><code>AttributeHandlerService</code> este un serviciu esen\u021bial pentru gestionarea etichetelor enum \u00een aplica\u021biile FOD, oferind suport complet pentru localizare \u0219i integrare seamless cu componentele UI. Prin abstractizarea logicii de extragere a etichetelor, serviciul faciliteaz\u0103 dezvoltarea rapid\u0103 de interfe\u021be multilingve \u0219i mentenabile.</p>"},{"location":"fod/servicii/AuthenticationService/","title":"AuthenticationService (Client-Side)","text":""},{"location":"fod/servicii/AuthenticationService/#documentatie-pentru-serviciul-authenticationservice","title":"Documenta\u021bie pentru serviciul AuthenticationService","text":""},{"location":"fod/servicii/AuthenticationService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>AuthenticationService</code> este un serviciu client-side care gestioneaz\u0103 ob\u021binerea informa\u021biilor despre utilizatorul curent autentificat \u00een aplica\u021biile Blazor. Serviciul comunic\u0103 cu API-ul server pentru a recupera claims-urile utilizatorului \u0219i starea de autentificare.</p> <p>Caracteristici principale: - Ob\u021binere informa\u021bii utilizator curent - Parsare claims din r\u0103spuns JSON - Suport pentru claims cu valori multiple - Gestionare stare neautentificat - Integrare cu HttpClient</p>"},{"location":"fod/servicii/AuthenticationService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs (Blazor WebAssembly)\nbuilder.Services.AddScoped&lt;IAuthenticationService, AuthenticationService&gt;();\n\n// Sau prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Configurare HttpClient\nbuilder.Services.AddScoped(sp =&gt; new HttpClient \n{ \n    BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) \n});\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IAuthenticationService\n{\n    Task&lt;CurrentUser&gt; CurrentUserInfo();\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#4-model-currentuser","title":"4. Model CurrentUser","text":"<pre><code>public class CurrentUser\n{\n    public bool IsAuthenticated { get; set; }\n    public IEnumerable&lt;KeyValuePair&lt;string, string&gt;&gt; Claims { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#5-metoda-disponibila","title":"5. Metod\u0103 Disponibil\u0103","text":""},{"location":"fod/servicii/AuthenticationService/#currentuserinfo","title":"CurrentUserInfo","text":"<p>Ob\u021bine informa\u021biile despre utilizatorul curent autentificat.</p> <p>Parametri: Niciun parametru</p> <p>Returneaz\u0103: - <code>Task&lt;CurrentUser&gt;</code> - Informa\u021bii despre utilizator, inclusiv claims</p> <p>Comportament: - Apeleaz\u0103 endpoint-ul <code>account/me</code> - Dac\u0103 r\u0103spunsul este NoContent (204), returneaz\u0103 utilizator neautentificat - Parseaz\u0103 JSON-ul r\u0103spunsului \u00een claims - Suport\u0103 claims cu valori multiple (array)</p>"},{"location":"fod/servicii/AuthenticationService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/AuthenticationService/#verificare-autentificare-simpla","title":"Verificare autentificare simpl\u0103","text":"<pre><code>@page \"/profile\"\n@inject IAuthenticationService AuthService\n\n&lt;h3&gt;Profil Utilizator&lt;/h3&gt;\n\n@if (currentUser?.IsAuthenticated == true)\n{\n    &lt;p&gt;Bine a\u021bi venit!&lt;/p&gt;\n    &lt;h4&gt;Claims:&lt;/h4&gt;\n    &lt;ul&gt;\n        @foreach (var claim in currentUser.Claims)\n        {\n            &lt;li&gt;@claim.Key: @claim.Value&lt;/li&gt;\n        }\n    &lt;/ul&gt;\n}\nelse\n{\n    &lt;p&gt;Nu sunte\u021bi autentificat.&lt;/p&gt;\n}\n\n@code {\n    private CurrentUser currentUser;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentUser = await AuthService.CurrentUserInfo();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#extragere-claims-specifice","title":"Extragere claims specifice","text":"<pre><code>public class UserService\n{\n    private readonly IAuthenticationService _authService;\n\n    public UserService(IAuthenticationService authService)\n    {\n        _authService = authService;\n    }\n\n    public async Task&lt;UserInfo&gt; GetUserDetails()\n    {\n        var currentUser = await _authService.CurrentUserInfo();\n\n        if (!currentUser.IsAuthenticated)\n        {\n            return null;\n        }\n\n        var userInfo = new UserInfo();\n\n        // Extragere claims\n        foreach (var claim in currentUser.Claims)\n        {\n            switch (claim.Key)\n            {\n                case \"name\":\n                    userInfo.Name = claim.Value;\n                    break;\n                case \"email\":\n                    userInfo.Email = claim.Value;\n                    break;\n                case \"sub\":\n                    userInfo.UserId = claim.Value;\n                    break;\n                case \"role\":\n                    userInfo.Roles.Add(claim.Value);\n                    break;\n            }\n        }\n\n        return userInfo;\n    }\n}\n\npublic class UserInfo\n{\n    public string UserId { get; set; }\n    public string Name { get; set; }\n    public string Email { get; set; }\n    public List&lt;string&gt; Roles { get; set; } = new();\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#component-cu-autorizare","title":"Component cu autorizare","text":"<pre><code>@inject IAuthenticationService AuthService\n@inject NavigationManager Navigation\n\n&lt;div class=\"user-menu\"&gt;\n    @if (isAuthenticated)\n    {\n        &lt;FodMenu&gt;\n            &lt;FodMenuItem OnClick=\"GoToProfile\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Person\" /&gt;\n                @userName\n            &lt;/FodMenuItem&gt;\n            &lt;FodMenuItem OnClick=\"GoToSettings\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Settings\" /&gt;\n                Set\u0103ri\n            &lt;/FodMenuItem&gt;\n            &lt;FodMenuItem OnClick=\"Logout\"&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Logout\" /&gt;\n                Ie\u0219ire\n            &lt;/FodMenuItem&gt;\n        &lt;/FodMenu&gt;\n    }\n    else\n    {\n        &lt;FodButton OnClick=\"Login\"&gt;Autentificare&lt;/FodButton&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private bool isAuthenticated;\n    private string userName;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await CheckAuthentication();\n    }\n\n    private async Task CheckAuthentication()\n    {\n        var user = await AuthService.CurrentUserInfo();\n        isAuthenticated = user.IsAuthenticated;\n\n        if (isAuthenticated)\n        {\n            userName = user.Claims\n                .FirstOrDefault(c =&gt; c.Key == \"name\")?.Value \n                ?? \"Utilizator\";\n        }\n    }\n\n    private void Login()\n    {\n        Navigation.NavigateTo(\"/authentication/login\");\n    }\n\n    private void Logout()\n    {\n        Navigation.NavigateTo(\"/authentication/logout\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#7-guard-pentru-rute-protejate","title":"7. Guard pentru rute protejate","text":"<pre><code>public class AuthorizedRouteView : ComponentBase\n{\n    [Inject] private IAuthenticationService AuthService { get; set; }\n    [Inject] private NavigationManager Navigation { get; set; }\n\n    [Parameter] public RenderFragment Authorized { get; set; }\n    [Parameter] public RenderFragment NotAuthorized { get; set; }\n    [Parameter] public string RequiredRole { get; set; }\n\n    private bool isAuthenticated;\n    private bool hasRequiredRole;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var user = await AuthService.CurrentUserInfo();\n        isAuthenticated = user.IsAuthenticated;\n\n        if (isAuthenticated &amp;&amp; !string.IsNullOrEmpty(RequiredRole))\n        {\n            hasRequiredRole = user.Claims\n                .Any(c =&gt; c.Key == \"role\" &amp;&amp; c.Value == RequiredRole);\n        }\n        else\n        {\n            hasRequiredRole = true; // No role required\n        }\n\n        if (!isAuthenticated || !hasRequiredRole)\n        {\n            Navigation.NavigateTo(\"/authentication/login\");\n        }\n    }\n\n    protected override void BuildRenderTree(RenderTreeBuilder builder)\n    {\n        if (isAuthenticated &amp;&amp; hasRequiredRole)\n        {\n            builder.AddContent(0, Authorized);\n        }\n        else\n        {\n            builder.AddContent(0, NotAuthorized);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#8-cache-pentru-performanta","title":"8. Cache pentru performan\u021b\u0103","text":"<pre><code>public class CachedAuthenticationService : IAuthenticationService\n{\n    private readonly IAuthenticationService _innerService;\n    private readonly IMemoryCache _cache;\n    private const string CacheKey = \"current_user\";\n    private readonly TimeSpan _cacheExpiration = TimeSpan.FromMinutes(5);\n\n    public CachedAuthenticationService(\n        AuthenticationService innerService,\n        IMemoryCache cache)\n    {\n        _innerService = innerService;\n        _cache = cache;\n    }\n\n    public async Task&lt;CurrentUser&gt; CurrentUserInfo()\n    {\n        return await _cache.GetOrCreateAsync(CacheKey, async entry =&gt;\n        {\n            entry.AbsoluteExpirationRelativeToNow = _cacheExpiration;\n            return await _innerService.CurrentUserInfo();\n        });\n    }\n\n    public void InvalidateCache()\n    {\n        _cache.Remove(CacheKey);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#9-integrare-cu-componente-fod","title":"9. Integrare cu componente FOD","text":"<pre><code>@page \"/admin\"\n@inject IAuthenticationService AuthService\n\n&lt;FodContainer&gt;\n    &lt;FodHeader&gt;\n        &lt;FodText Typo=\"Typo.h4\"&gt;Panou Administrare&lt;/FodText&gt;\n    &lt;/FodHeader&gt;\n\n    &lt;FodAuthCheck Service=\"@AuthService\" RequiredClaim=\"role\" RequiredValue=\"admin\"&gt;\n        &lt;Authorized&gt;\n            &lt;FodGrid&gt;\n                &lt;FodItem xs=\"12\" md=\"6\"&gt;\n                    &lt;FodCard&gt;\n                        &lt;FodCardContent&gt;\n                            &lt;FodText Typo=\"Typo.h6\"&gt;Utilizatori&lt;/FodText&gt;\n                            &lt;FodText&gt;Gestionare utilizatori sistem&lt;/FodText&gt;\n                        &lt;/FodCardContent&gt;\n                        &lt;FodCardActions&gt;\n                            &lt;FodButton Href=\"/admin/users\"&gt;Administrare&lt;/FodButton&gt;\n                        &lt;/FodCardActions&gt;\n                    &lt;/FodCard&gt;\n                &lt;/FodItem&gt;\n            &lt;/FodGrid&gt;\n        &lt;/Authorized&gt;\n        &lt;NotAuthorized&gt;\n            &lt;FodAlert Severity=\"Severity.Warning\"&gt;\n                Nu ave\u021bi permisiuni de administrator.\n            &lt;/FodAlert&gt;\n        &lt;/NotAuthorized&gt;\n    &lt;/FodAuthCheck&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    // Component helper pentru verificare autorizare\n    public class FodAuthCheck : ComponentBase\n    {\n        [Parameter] public IAuthenticationService Service { get; set; }\n        [Parameter] public string RequiredClaim { get; set; }\n        [Parameter] public string RequiredValue { get; set; }\n        [Parameter] public RenderFragment Authorized { get; set; }\n        [Parameter] public RenderFragment NotAuthorized { get; set; }\n\n        private bool isAuthorized;\n\n        protected override async Task OnInitializedAsync()\n        {\n            var user = await Service.CurrentUserInfo();\n\n            if (!user.IsAuthenticated)\n            {\n                isAuthorized = false;\n                return;\n            }\n\n            if (string.IsNullOrEmpty(RequiredClaim))\n            {\n                isAuthorized = true;\n                return;\n            }\n\n            isAuthorized = user.Claims.Any(c =&gt; \n                c.Key == RequiredClaim &amp;&amp; \n                (string.IsNullOrEmpty(RequiredValue) || c.Value == RequiredValue));\n        }\n\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\n        {\n            builder.AddContent(0, isAuthorized ? Authorized : NotAuthorized);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#10-monitorizare-si-logging","title":"10. Monitorizare \u0219i logging","text":"<pre><code>public class LoggingAuthenticationService : IAuthenticationService\n{\n    private readonly IAuthenticationService _innerService;\n    private readonly ILogger&lt;LoggingAuthenticationService&gt; _logger;\n\n    public LoggingAuthenticationService(\n        IAuthenticationService innerService,\n        ILogger&lt;LoggingAuthenticationService&gt; logger)\n    {\n        _innerService = innerService;\n        _logger = logger;\n    }\n\n    public async Task&lt;CurrentUser&gt; CurrentUserInfo()\n    {\n        try\n        {\n            _logger.LogInformation(\"Fetching current user info\");\n\n            var stopwatch = Stopwatch.StartNew();\n            var user = await _innerService.CurrentUserInfo();\n            stopwatch.Stop();\n\n            _logger.LogInformation(\n                \"User info fetched in {ElapsedMs}ms. Authenticated: {IsAuthenticated}, Claims count: {ClaimsCount}\",\n                stopwatch.ElapsedMilliseconds,\n                user.IsAuthenticated,\n                user.Claims?.Count() ?? 0);\n\n            return user;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Error fetching current user info\");\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#11-testing","title":"11. Testing","text":"<pre><code>[TestClass]\npublic class AuthenticationServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _mockHandler;\n    private HttpClient _httpClient;\n    private AuthenticationService _authService;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _mockHandler = new Mock&lt;HttpMessageHandler&gt;();\n        _httpClient = new HttpClient(_mockHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://test.com/\")\n        };\n        _authService = new AuthenticationService(_httpClient);\n    }\n\n    [TestMethod]\n    public async Task CurrentUserInfo_Authenticated_ReturnsClaims()\n    {\n        // Arrange\n        var responseData = new Dictionary&lt;string, object&gt;\n        {\n            [\"name\"] = \"Test User\",\n            [\"email\"] = \"test@example.com\",\n            [\"role\"] = new[] { \"user\", \"admin\" }\n        };\n\n        _mockHandler.Protected()\n            .Setup&lt;Task&lt;HttpResponseMessage&gt;&gt;(\n                \"SendAsync\",\n                ItExpr.IsAny&lt;HttpRequestMessage&gt;(),\n                ItExpr.IsAny&lt;CancellationToken&gt;())\n            .ReturnsAsync(new HttpResponseMessage\n            {\n                StatusCode = HttpStatusCode.OK,\n                Content = new StringContent(\n                    JsonSerializer.Serialize(responseData),\n                    Encoding.UTF8,\n                    \"application/json\")\n            });\n\n        // Act\n        var result = await _authService.CurrentUserInfo();\n\n        // Assert\n        Assert.IsTrue(result.IsAuthenticated);\n        Assert.AreEqual(4, result.Claims.Count()); // name, email, role x2\n        Assert.IsTrue(result.Claims.Any(c =&gt; c.Key == \"name\" &amp;&amp; c.Value == \"Test User\"));\n    }\n\n    [TestMethod]\n    public async Task CurrentUserInfo_NotAuthenticated_ReturnsEmpty()\n    {\n        // Arrange\n        _mockHandler.Protected()\n            .Setup&lt;Task&lt;HttpResponseMessage&gt;&gt;(\n                \"SendAsync\",\n                ItExpr.IsAny&lt;HttpRequestMessage&gt;(),\n                ItExpr.IsAny&lt;CancellationToken&gt;())\n            .ReturnsAsync(new HttpResponseMessage\n            {\n                StatusCode = HttpStatusCode.NoContent\n            });\n\n        // Act\n        var result = await _authService.CurrentUserInfo();\n\n        // Assert\n        Assert.IsFalse(result.IsAuthenticated);\n        Assert.IsNull(result.Claims);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#12-tratare-erori","title":"12. Tratare erori","text":"<pre><code>public class ResilientAuthenticationService : IAuthenticationService\n{\n    private readonly IAuthenticationService _innerService;\n    private readonly ILogger&lt;ResilientAuthenticationService&gt; _logger;\n    private readonly int _maxRetries = 3;\n\n    public async Task&lt;CurrentUser&gt; CurrentUserInfo()\n    {\n        for (int i = 0; i &lt; _maxRetries; i++)\n        {\n            try\n            {\n                return await _innerService.CurrentUserInfo();\n            }\n            catch (HttpRequestException ex) when (i &lt; _maxRetries - 1)\n            {\n                _logger.LogWarning(\n                    \"Failed to get user info (attempt {Attempt}/{MaxRetries}): {Message}\",\n                    i + 1, _maxRetries, ex.Message);\n\n                await Task.Delay(TimeSpan.FromSeconds(Math.Pow(2, i))); // Exponential backoff\n            }\n            catch (TaskCanceledException)\n            {\n                _logger.LogWarning(\"Request timeout getting user info\");\n                return new CurrentUser { IsAuthenticated = false };\n            }\n        }\n\n        // Final fallback\n        return new CurrentUser { IsAuthenticated = false };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Cache rezultate: Pentru a evita apeluri repetitive la server</li> <li>Tratare erori: \u00centotdeauna gestiona\u021bi erorile de re\u021bea</li> <li>Logging: Monitoriza\u021bi apelurile pentru debugging</li> <li>Null checks: Verifica\u021bi \u00eentotdeauna IsAuthenticated \u00eenainte de a accesa Claims</li> <li>Timeout: Seta\u021bi timeout rezonabil pentru HttpClient</li> <li>Refresh: Implementa\u021bi mecanism de refresh pentru date vechi</li> </ol>"},{"location":"fod/servicii/AuthenticationService/#14-integrare-cu-authenticationstateprovider","title":"14. Integrare cu AuthenticationStateProvider","text":"<pre><code>public class FodAuthenticationStateProvider : AuthenticationStateProvider\n{\n    private readonly IAuthenticationService _authService;\n\n    public FodAuthenticationStateProvider(IAuthenticationService authService)\n    {\n        _authService = authService;\n    }\n\n    public override async Task&lt;AuthenticationState&gt; GetAuthenticationStateAsync()\n    {\n        var currentUser = await _authService.CurrentUserInfo();\n\n        if (!currentUser.IsAuthenticated)\n        {\n            return new AuthenticationState(\n                new ClaimsPrincipal(new ClaimsIdentity()));\n        }\n\n        var claims = currentUser.Claims\n            .Select(kvp =&gt; new Claim(kvp.Key, kvp.Value))\n            .ToList();\n\n        var identity = new ClaimsIdentity(claims, \"serverauth\");\n        var principal = new ClaimsPrincipal(identity);\n\n        return new AuthenticationState(principal);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/AuthenticationService/#15-concluzie","title":"15. Concluzie","text":"<p><code>AuthenticationService</code> ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i eficient\u0103 pentru ob\u021binerea informa\u021biilor despre utilizatorul autentificat \u00een aplica\u021biile Blazor. Cu suport pentru claims multiple \u0219i integrare u\u0219oar\u0103 cu componentele FOD, serviciul faciliteaz\u0103 implementarea logicii de autorizare \u0219i personalizarea experien\u021bei utilizatorului pe baza rolurilor \u0219i permisiunilor.</p>"},{"location":"fod/servicii/BreakpointService/","title":"BreakpointService","text":""},{"location":"fod/servicii/BreakpointService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>BreakpointService</code> este serviciul responsabil pentru detectarea \u0219i monitorizarea dimensiunii ferestrei browserului \u0219i a breakpoint-urilor responsive \u00een aplica\u021bii Blazor. Permite componentelor s\u0103 reac\u021bioneze la schimb\u0103ri de dimensiune \u0219i s\u0103 adapteze interfa\u021ba \u00een func\u021bie de breakpoint-ul curent (Xs, Sm, Md, Lg, Xl).</p>"},{"location":"fod/servicii/BreakpointService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/BreakpointService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IBreakpointService, BreakpointService&gt;();\nbuilder.Services.AddScoped&lt;IBrowserWindowSizeProvider, BrowserWindowSizeProvider&gt;();\n\n// Cu op\u021biuni personalizate\nbuilder.Services.Configure&lt;ResizeOptions&gt;(options =&gt;\n{\n    options.ReportRate = 100; // ms\n    options.EnableLogging = false;\n    options.SuppressInitEvent = true;\n    options.NotifyOnBreakpointOnly = true;\n});\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#javascript-necesar","title":"JavaScript necesar","text":"<pre><code>// Inclus automat \u00een FodComponents.js\nwindow.fodResizeListenerFactory = {\n    listeners: {},\n\n    listenForResize: function(dotnetRef, options, id) {\n        if (!this.listeners[id]) {\n            this.listeners[id] = new FodResizeListener(id);\n        }\n        this.listeners[id].listenForResize(dotnetRef, options);\n    },\n\n    cancelListener: function(id) {\n        if (this.listeners[id]) {\n            this.listeners[id].cancelListener();\n            delete this.listeners[id];\n        }\n    }\n};\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#interfata-ibreakpointservice","title":"Interfa\u021ba IBreakpointService","text":"<pre><code>public interface IBreakpointService : IAsyncDisposable\n{\n    Task&lt;bool&gt; IsMediaSize(Breakpoint breakpoint);\n    bool IsMediaSize(Breakpoint breakpoint, Breakpoint reference);\n    Task&lt;Breakpoint&gt; GetBreakpoint();\n    Task&lt;BreakpointServiceSubscribeResult&gt; Subscribe(Action&lt;Breakpoint&gt; callback);\n    Task&lt;BreakpointServiceSubscribeResult&gt; Subscribe(Action&lt;Breakpoint&gt; callback, ResizeOptions options);\n    Task&lt;bool&gt; Unsubscribe(Guid subscriptionId);\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#enum-uri-si-clase-asociate","title":"Enum-uri \u0219i clase asociate","text":""},{"location":"fod/servicii/BreakpointService/#breakpoint-enum","title":"Breakpoint Enum","text":"<pre><code>public enum Breakpoint\n{\n    Xs,          // Extra small\n    Sm,          // Small\n    Md,          // Medium\n    Lg,          // Large\n    Xl,          // Extra large\n    Xxl,         // Extra extra large\n    SmAndDown,   // Small \u0219i mai mic\n    MdAndDown,   // Medium \u0219i mai mic\n    LgAndDown,   // Large \u0219i mai mic\n    XlAndDown,   // Extra large \u0219i mai mic\n    SmAndUp,     // Small \u0219i mai mare\n    MdAndUp,     // Medium \u0219i mai mare\n    LgAndUp,     // Large \u0219i mai mare\n    XlAndUp,     // Extra large \u0219i mai mare\n    None,        // Niciunul\n    Always       // \u00centotdeauna\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#resizeoptions","title":"ResizeOptions","text":"<pre><code>public class ResizeOptions\n{\n    public int ReportRate { get; set; } = 100; // Rate \u00een ms\n    public bool EnableLogging { get; set; } = false;\n    public bool SuppressInitEvent { get; set; } = true;\n    public bool NotifyOnBreakpointOnly { get; set; } = true;\n    public Dictionary&lt;string, int&gt; BreakpointDefinitions { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#browserwindowsize","title":"BrowserWindowSize","text":"<pre><code>public class BrowserWindowSize\n{\n    public int Height { get; set; }\n    public int Width { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/BreakpointService/#getbreakpoint","title":"GetBreakpoint","text":"<p>Ob\u021bine breakpoint-ul curent al ferestrei.</p> <p>Parametri: Niciun parametru</p> <p>Returneaz\u0103: <code>Task&lt;Breakpoint&gt;</code> - Breakpoint-ul curent</p> <p>Breakpoint-uri default: - Xl: \u2265 1920px - Lg: \u2265 1280px - Md: \u2265 960px - Sm: \u2265 600px - Xs: &lt; 600px</p>"},{"location":"fod/servicii/BreakpointService/#ismediasize","title":"IsMediaSize","text":"<p>Verific\u0103 dac\u0103 breakpoint-ul curent se potrive\u0219te cu cel specificat.</p> <p>Parametri: - <code>breakpoint: Breakpoint</code> - Breakpoint-ul de verificat</p> <p>Returneaz\u0103: <code>Task&lt;bool&gt;</code> - True dac\u0103 se potrive\u0219te</p>"},{"location":"fod/servicii/BreakpointService/#ismediasize-overload","title":"IsMediaSize (overload)","text":"<p>Verific\u0103 dac\u0103 un breakpoint se potrive\u0219te cu o referin\u021b\u0103.</p> <p>Parametri: - <code>breakpoint: Breakpoint</code> - Breakpoint-ul de verificat - <code>reference: Breakpoint</code> - Breakpoint-ul de referin\u021b\u0103</p> <p>Returneaz\u0103: <code>bool</code> - True dac\u0103 se potrive\u0219te</p>"},{"location":"fod/servicii/BreakpointService/#subscribe","title":"Subscribe","text":"<p>Aboneaz\u0103 la schimb\u0103ri de breakpoint.</p> <p>Parametri: - <code>callback: Action&lt;Breakpoint&gt;</code> - Func\u021bia apelat\u0103 la schimbare - <code>options: ResizeOptions</code> - Op\u021biuni (op\u021bional)</p> <p>Returneaz\u0103: <code>Task&lt;BreakpointServiceSubscribeResult&gt;</code> - ID subscrip\u021bie \u0219i breakpoint curent</p>"},{"location":"fod/servicii/BreakpointService/#unsubscribe","title":"Unsubscribe","text":"<p>Dezaboneaz\u0103 de la schimb\u0103ri.</p> <p>Parametri: - <code>subscriptionId: Guid</code> - ID-ul subscrip\u021biei</p> <p>Returneaz\u0103: <code>Task&lt;bool&gt;</code> - True dac\u0103 s-a dezabonat cu succes</p>"},{"location":"fod/servicii/BreakpointService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/BreakpointService/#layout-responsive-simplu","title":"Layout responsive simplu","text":"<pre><code>@inject IBreakpointService BreakpointService\n@implements IAsyncDisposable\n\n&lt;div class=\"@GetLayoutClass()\"&gt;\n    @if (isMobile)\n    {\n        &lt;MobileNavigation /&gt;\n    }\n    else\n    {\n        &lt;DesktopNavigation /&gt;\n    }\n\n    &lt;main class=\"content\"&gt;\n        @Body\n    &lt;/main&gt;\n&lt;/div&gt;\n\n@code {\n    private Breakpoint currentBreakpoint = Breakpoint.Md;\n    private bool isMobile;\n    private Guid subscriptionId;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var result = await BreakpointService.Subscribe(OnBreakpointChanged);\n        subscriptionId = result.SubscriptionId;\n        currentBreakpoint = result.Breakpoint;\n        UpdateLayoutState();\n    }\n\n    private void OnBreakpointChanged(Breakpoint breakpoint)\n    {\n        currentBreakpoint = breakpoint;\n        UpdateLayoutState();\n        InvokeAsync(StateHasChanged);\n    }\n\n    private void UpdateLayoutState()\n    {\n        isMobile = BreakpointService.IsMediaSize(Breakpoint.SmAndDown, currentBreakpoint);\n    }\n\n    private string GetLayoutClass()\n    {\n        return currentBreakpoint switch\n        {\n            Breakpoint.Xs =&gt; \"layout-xs\",\n            Breakpoint.Sm =&gt; \"layout-sm\",\n            Breakpoint.Md =&gt; \"layout-md\",\n            Breakpoint.Lg =&gt; \"layout-lg\",\n            Breakpoint.Xl =&gt; \"layout-xl\",\n            _ =&gt; \"layout-default\"\n        };\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        await BreakpointService.Unsubscribe(subscriptionId);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#grid-responsive","title":"Grid responsive","text":"<pre><code>@inject IBreakpointService BreakpointService\n\n&lt;FodGrid&gt;\n    &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\"&gt;\n        &lt;FodCard&gt;\n            &lt;CardContent&gt;\n                &lt;h5&gt;Card 1&lt;/h5&gt;\n                &lt;p&gt;Breakpoint curent: @currentBreakpoint&lt;/p&gt;\n            &lt;/CardContent&gt;\n        &lt;/FodCard&gt;\n    &lt;/FodItem&gt;\n\n    @foreach (var item in items)\n    {\n        &lt;FodItem xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\"&gt;\n            &lt;ProductCard Product=\"item\" /&gt;\n        &lt;/FodItem&gt;\n    }\n&lt;/FodGrid&gt;\n\n@code {\n    private Breakpoint currentBreakpoint;\n    private List&lt;Product&gt; items = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentBreakpoint = await BreakpointService.GetBreakpoint();\n\n        var subscription = await BreakpointService.Subscribe((bp) =&gt;\n        {\n            currentBreakpoint = bp;\n            StateHasChanged();\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#drawer-responsive","title":"Drawer responsive","text":"<pre><code>@inject IBreakpointService BreakpointService\n\n&lt;FodDrawer @bind-Open=\"drawerOpen\" \n           Variant=\"@GetDrawerVariant()\"\n           Anchor=\"@GetDrawerAnchor()\"&gt;\n    &lt;DrawerContent&gt;\n        &lt;NavMenu /&gt;\n    &lt;/DrawerContent&gt;\n&lt;/FodDrawer&gt;\n\n&lt;FodMain&gt;\n    &lt;FodToolbar&gt;\n        @if (showMenuButton)\n        {\n            &lt;FodIconButton Icon=\"menu\" @onclick=\"ToggleDrawer\" /&gt;\n        }\n        &lt;FodSpacer /&gt;\n        &lt;AppTitle /&gt;\n    &lt;/FodToolbar&gt;\n\n    @Body\n&lt;/FodMain&gt;\n\n@code {\n    private bool drawerOpen = true;\n    private bool showMenuButton;\n    private Breakpoint currentBreakpoint;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var result = await BreakpointService.Subscribe(OnBreakpointChanged);\n        OnBreakpointChanged(result.Breakpoint);\n    }\n\n    private void OnBreakpointChanged(Breakpoint breakpoint)\n    {\n        currentBreakpoint = breakpoint;\n        showMenuButton = BreakpointService.IsMediaSize(Breakpoint.MdAndDown, breakpoint);\n        drawerOpen = !showMenuButton;\n        InvokeAsync(StateHasChanged);\n    }\n\n    private FodDrawerVariant GetDrawerVariant()\n    {\n        return showMenuButton ? FodDrawerVariant.Temporary : FodDrawerVariant.Persistent;\n    }\n\n    private FodDrawerAnchor GetDrawerAnchor()\n    {\n        return currentBreakpoint == Breakpoint.Xs ? FodDrawerAnchor.Bottom : FodDrawerAnchor.Left;\n    }\n\n    private void ToggleDrawer() =&gt; drawerOpen = !drawerOpen;\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#componente-adaptive","title":"Componente adaptive","text":"<pre><code>@inject IBreakpointService BreakpointService\n\n@if (isDesktop)\n{\n    &lt;FodDataTable Items=\"@items\" Dense=\"false\"&gt;\n        &lt;FodColumn Title=\"Nume\" Field=\"@nameof(Item.Name)\" /&gt;\n        &lt;FodColumn Title=\"Descriere\" Field=\"@nameof(Item.Description)\" /&gt;\n        &lt;FodColumn Title=\"Pre\u021b\" Field=\"@nameof(Item.Price)\" /&gt;\n        &lt;FodColumn Title=\"Stoc\" Field=\"@nameof(Item.Stock)\" /&gt;\n    &lt;/FodDataTable&gt;\n}\nelse\n{\n    &lt;div class=\"mobile-list\"&gt;\n        @foreach (var item in items)\n        {\n            &lt;FodCard Class=\"mb-2\"&gt;\n                &lt;CardContent&gt;\n                    &lt;h6&gt;@item.Name&lt;/h6&gt;\n                    &lt;p class=\"text-muted\"&gt;@item.Description&lt;/p&gt;\n                    &lt;div class=\"d-flex justify-content-between\"&gt;\n                        &lt;span&gt;Pre\u021b: @item.Price.ToString(\"C\")&lt;/span&gt;\n                        &lt;span&gt;Stoc: @item.Stock&lt;/span&gt;\n                    &lt;/div&gt;\n                &lt;/CardContent&gt;\n            &lt;/FodCard&gt;\n        }\n    &lt;/div&gt;\n}\n\n@code {\n    private List&lt;Item&gt; items = new();\n    private bool isDesktop = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var result = await BreakpointService.Subscribe(OnBreakpointChanged);\n        UpdateDisplay(result.Breakpoint);\n    }\n\n    private void OnBreakpointChanged(Breakpoint breakpoint)\n    {\n        UpdateDisplay(breakpoint);\n        InvokeAsync(StateHasChanged);\n    }\n\n    private void UpdateDisplay(Breakpoint breakpoint)\n    {\n        isDesktop = BreakpointService.IsMediaSize(Breakpoint.MdAndUp, breakpoint);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#service-extins-cu-cache","title":"Service extins cu cache","text":"<pre><code>public interface ICachedBreakpointService : IBreakpointService\n{\n    Breakpoint? CachedBreakpoint { get; }\n    event EventHandler&lt;Breakpoint&gt; BreakpointChanged;\n}\n\npublic class CachedBreakpointService : ICachedBreakpointService\n{\n    private readonly IBreakpointService _innerService;\n    private Breakpoint? _cachedBreakpoint;\n\n    public Breakpoint? CachedBreakpoint =&gt; _cachedBreakpoint;\n    public event EventHandler&lt;Breakpoint&gt; BreakpointChanged;\n\n    public CachedBreakpointService(IBreakpointService innerService)\n    {\n        _innerService = innerService;\n        _ = InitializeAsync();\n    }\n\n    private async Task InitializeAsync()\n    {\n        var result = await _innerService.Subscribe(OnBreakpointChanged);\n        _cachedBreakpoint = result.Breakpoint;\n    }\n\n    private void OnBreakpointChanged(Breakpoint breakpoint)\n    {\n        _cachedBreakpoint = breakpoint;\n        BreakpointChanged?.Invoke(this, breakpoint);\n    }\n\n    public async Task&lt;Breakpoint&gt; GetBreakpoint()\n    {\n        if (_cachedBreakpoint.HasValue)\n            return _cachedBreakpoint.Value;\n\n        return await _innerService.GetBreakpoint();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#hook-personalizat","title":"Hook personalizat","text":"<pre><code>public static class BreakpointHooks\n{\n    public static async Task&lt;BreakpointInfo&gt; UseBreakpoint(\n        this ComponentBase component, \n        IBreakpointService breakpointService)\n    {\n        var info = new BreakpointInfo();\n\n        var result = await breakpointService.Subscribe((bp) =&gt;\n        {\n            info.Current = bp;\n            info.IsMobile = breakpointService.IsMediaSize(Breakpoint.SmAndDown, bp);\n            info.IsTablet = breakpointService.IsMediaSize(Breakpoint.Md, bp);\n            info.IsDesktop = breakpointService.IsMediaSize(Breakpoint.LgAndUp, bp);\n\n            component.InvokeAsync(component.StateHasChanged);\n        });\n\n        info.SubscriptionId = result.SubscriptionId;\n        info.Current = result.Breakpoint;\n\n        return info;\n    }\n}\n\npublic class BreakpointInfo\n{\n    public Breakpoint Current { get; set; }\n    public bool IsMobile { get; set; }\n    public bool IsTablet { get; set; }\n    public bool IsDesktop { get; set; }\n    public Guid SubscriptionId { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/BreakpointService/#service-cu-fallback","title":"Service cu fallback","text":"<pre><code>public class SafeBreakpointService : IBreakpointService\n{\n    private readonly IBreakpointService _innerService;\n    private readonly ILogger&lt;SafeBreakpointService&gt; _logger;\n\n    public async Task&lt;Breakpoint&gt; GetBreakpoint()\n    {\n        try\n        {\n            return await _innerService.GetBreakpoint();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Failed to get breakpoint\");\n            return Breakpoint.Md; // Default fallback\n        }\n    }\n\n    public async Task&lt;BreakpointServiceSubscribeResult&gt; Subscribe(\n        Action&lt;Breakpoint&gt; callback)\n    {\n        try\n        {\n            return await _innerService.Subscribe(callback);\n        }\n        catch (JSException)\n        {\n            // Fallback pentru SSR sau JS disabled\n            return new BreakpointServiceSubscribeResult(\n                Guid.Empty, \n                Breakpoint.Md\n            );\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Throttling - Evenimentele resize sunt limitate la ReportRate (default 100ms)</li> <li>Breakpoint only - Poate notifica doar la schimbarea breakpoint-ului</li> <li>Memory management - Important s\u0103 dezabona\u021bi \u00een Dispose</li> <li>SSR compatibility - Necesit\u0103 verific\u0103ri pentru server-side rendering</li> <li>Performance - Folosi\u021bi NotifyOnBreakpointOnly pentru performan\u021b\u0103</li> </ol>"},{"location":"fod/servicii/BreakpointService/#configurari-personalizate","title":"Configur\u0103ri personalizate","text":""},{"location":"fod/servicii/BreakpointService/#breakpoint-uri-custom","title":"Breakpoint-uri custom","text":"<pre><code>builder.Services.Configure&lt;ResizeOptions&gt;(options =&gt;\n{\n    options.BreakpointDefinitions = new Dictionary&lt;string, int&gt;\n    {\n        [\"Xs\"] = 0,\n        [\"Sm\"] = 576,\n        [\"Md\"] = 768,\n        [\"Lg\"] = 992,\n        [\"Xl\"] = 1200,\n        [\"Xxl\"] = 1400\n    };\n});\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#optiuni-per-subscriptie","title":"Op\u021biuni per subscrip\u021bie","text":"<pre><code>@code {\n    private async Task SubscribeWithCustomOptions()\n    {\n        var customOptions = new ResizeOptions\n        {\n            ReportRate = 250, // Mai pu\u021bin frecvent\n            EnableLogging = true, // Debug \u00een consol\u0103\n            NotifyOnBreakpointOnly = false // Notific\u0103 la orice resize\n        };\n\n        await BreakpointService.Subscribe(OnResize, customOptions);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/BreakpointService/#bune-practici","title":"Bune practici","text":"<ol> <li>Unsubscribe - \u00centotdeauna dezabona\u021bi \u00een DisposeAsync</li> <li>Cache results - Cache-ui\u021bi breakpoint-ul pentru acces sincron</li> <li>Debounce - Folosi\u021bi debouncing pentru ac\u021biuni costisitoare</li> <li>Mobile first - Proiecta\u021bi pentru mobile \u0219i adapta\u021bi pentru desktop</li> <li>Test resize - Testa\u021bi toate breakpoint-urile \u00een development</li> <li>Performance - Evita\u021bi re-render-uri inutile</li> </ol>"},{"location":"fod/servicii/BreakpointService/#concluzie","title":"Concluzie","text":"<p>BreakpointService ofer\u0103 o solu\u021bie robust\u0103 pentru gestionarea responsive design \u00een aplica\u021bii Blazor. Cu suport pentru monitorizare \u00een timp real, breakpoint-uri personalizabile \u0219i performan\u021b\u0103 optimizat\u0103, serviciul faciliteaz\u0103 crearea de interfe\u021be adaptive care ofer\u0103 experien\u021be excelente pe toate dispozitivele.</p>"},{"location":"fod/servicii/CaptchaCallbackService/","title":"CaptchaCallbackService","text":""},{"location":"fod/servicii/CaptchaCallbackService/#documentatie-pentru-serviciul-captchacallbackservice","title":"Documenta\u021bie pentru serviciul CaptchaCallbackService","text":""},{"location":"fod/servicii/CaptchaCallbackService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>CaptchaCallbackService</code> este un serviciu care gestioneaz\u0103 callback-urile pentru componentele reCAPTCHA, permi\u021b\u00e2nd altor componente s\u0103 se aboneze la evenimentele de succes sau expirare ale valid\u0103rii captcha. De\u0219i \u00eenregistrat \u00een DI, implementarea actual\u0103 folose\u0219te <code>RecaptchaService</code> pentru validare direct\u0103.</p> <p>Caracteristici principale: - Gestionare evenimente captcha succes/expirare - Pattern Observer pentru notific\u0103ri globale - Integrare cu Google reCAPTCHA v2 - Suport pentru multiple componente captcha - Decuplare \u00eentre componente \u0219i logica captcha</p>"},{"location":"fod/servicii/CaptchaCallbackService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;ICaptchaCallBackService, CaptchaCallbackService&gt;();\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#3-interfata-icaptchacallbackservice","title":"3. Interfa\u021ba ICaptchaCallBackService","text":"<pre><code>namespace FOD.Components.Services\n{\n    public interface ICaptchaCallBackService\n    {\n        EventHandler&lt;CaptchaSuccessEventArgs&gt; SuccessCallBack { get; set; }\n        EventHandler&lt;CaptchaTimeOutEventArgs&gt; TimeOutCallBack { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#4-evenimente-si-modele","title":"4. Evenimente \u0219i Modele","text":""},{"location":"fod/servicii/CaptchaCallbackService/#captchasuccesseventargs","title":"CaptchaSuccessEventArgs","text":"<pre><code>public class CaptchaSuccessEventArgs : EventArgs\n{\n    public string Response { get; set; }\n\n    public CaptchaSuccessEventArgs(string response)\n    {\n        Response = response;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#captchatimeouteventargs","title":"CaptchaTimeOutEventArgs","text":"<pre><code>public class CaptchaTimeOutEventArgs : EventArgs\n{\n    public DateTime ExpiredAt { get; set; }\n\n    public CaptchaTimeOutEventArgs()\n    {\n        ExpiredAt = DateTime.Now;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/CaptchaCallbackService/#utilizare-basic-cu-callback","title":"Utilizare basic cu callback","text":"<pre><code>@page \"/formular-cu-captcha\"\n@inject ICaptchaCallBackService CaptchaCallbackService\n@inject IFodNotificationService NotificationService\n@implements IDisposable\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Formular cu Protec\u021bie Captcha\n            &lt;/FodText&gt;\n\n            &lt;form @onsubmit=\"HandleSubmit\" @onsubmit:preventDefault=\"true\"&gt;\n                &lt;!-- C\u00e2mpuri formular --&gt;\n                &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                        &lt;FodInput @bind-Value=\"model.Name\" \n                                  Label=\"Nume complet\"\n                                  Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                        &lt;FodInput @bind-Value=\"model.Email\" \n                                  Label=\"Email\"\n                                  Type=\"email\"\n                                  Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                        &lt;FodTextArea @bind-Value=\"model.Message\" \n                                     Label=\"Mesaj\"\n                                     Rows=\"4\"\n                                     Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                &lt;/FodGrid&gt;\n\n                &lt;!-- Componenta reCAPTCHA --&gt;\n                &lt;div class=\"mt-3\"&gt;\n                    &lt;FodRecaptcha @ref=\"recaptcha\" /&gt;\n                &lt;/div&gt;\n\n                &lt;!-- Buton submit --&gt;\n                &lt;FodButton Type=\"submit\" \n                           Color=\"FodColor.Primary\"\n                           Class=\"mt-3\"\n                           Disabled=\"@(!isCaptchaValid || isSubmitting)\"&gt;\n                    @if (isSubmitting)\n                    {\n                        &lt;FodLoadingButton /&gt;\n                    }\n                    else\n                    {\n                        &lt;text&gt;Trimite&lt;/text&gt;\n                    }\n                &lt;/FodButton&gt;\n            &lt;/form&gt;\n\n            @if (!string.IsNullOrEmpty(captchaToken))\n            {\n                &lt;FodAlert Severity=\"FodSeverity.Success\" Class=\"mt-3\"&gt;\n                    Captcha validat cu succes!\n                &lt;/FodAlert&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private ContactFormModel model = new();\n    private FodRecaptcha recaptcha;\n    private string captchaToken;\n    private bool isCaptchaValid;\n    private bool isSubmitting;\n\n    protected override void OnInitialized()\n    {\n        // Abonare la evenimente captcha\n        CaptchaCallbackService.SuccessCallBack += OnCaptchaSuccess;\n        CaptchaCallbackService.TimeOutCallBack += OnCaptchaTimeout;\n    }\n\n    private void OnCaptchaSuccess(object sender, CaptchaSuccessEventArgs e)\n    {\n        captchaToken = e.Response;\n        isCaptchaValid = true;\n        NotificationService.Success(\"Captcha validat cu succes!\");\n        StateHasChanged();\n    }\n\n    private void OnCaptchaTimeout(object sender, CaptchaTimeOutEventArgs e)\n    {\n        captchaToken = null;\n        isCaptchaValid = false;\n        NotificationService.Warning(\"Captcha a expirat. V\u0103 rug\u0103m s\u0103 re\u00eencerca\u021bi.\");\n        StateHasChanged();\n    }\n\n    private async Task HandleSubmit()\n    {\n        if (!isCaptchaValid || string.IsNullOrEmpty(captchaToken))\n        {\n            NotificationService.Error(\"V\u0103 rug\u0103m completa\u021bi captcha!\");\n            return;\n        }\n\n        isSubmitting = true;\n\n        try\n        {\n            // Trimite formularul cu token captcha\n            await ContactService.SendMessage(model, captchaToken);\n            NotificationService.Success(\"Mesaj trimis cu succes!\");\n\n            // Reset formular\n            model = new();\n            captchaToken = null;\n            isCaptchaValid = false;\n            await recaptcha.ResetAsync();\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare: {ex.Message}\");\n        }\n        finally\n        {\n            isSubmitting = false;\n        }\n    }\n\n    public void Dispose()\n    {\n        // Dezabonare de la evenimente\n        CaptchaCallbackService.SuccessCallBack -= OnCaptchaSuccess;\n        CaptchaCallbackService.TimeOutCallBack -= OnCaptchaTimeout;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#manager-global-pentru-captcha","title":"Manager global pentru captcha","text":"<pre><code>public class CaptchaManager\n{\n    private readonly ICaptchaCallBackService _captchaCallbackService;\n    private readonly ILogger&lt;CaptchaManager&gt; _logger;\n    private readonly List&lt;CaptchaSubscriber&gt; _subscribers = new();\n    private string _currentToken;\n    private DateTime? _tokenExpiry;\n\n    public CaptchaManager(ICaptchaCallBackService captchaCallbackService, \n                         ILogger&lt;CaptchaManager&gt; logger)\n    {\n        _captchaCallbackService = captchaCallbackService;\n        _logger = logger;\n\n        // Configurare handlers globali\n        _captchaCallbackService.SuccessCallBack += OnGlobalCaptchaSuccess;\n        _captchaCallbackService.TimeOutCallBack += OnGlobalCaptchaTimeout;\n    }\n\n    public string CurrentToken =&gt; _currentToken;\n    public bool IsTokenValid =&gt; !string.IsNullOrEmpty(_currentToken) &amp;&amp; \n                                _tokenExpiry &gt; DateTime.Now;\n\n    public void Subscribe(string componentId, Action&lt;string&gt; onSuccess, \n                         Action onTimeout = null)\n    {\n        _subscribers.Add(new CaptchaSubscriber\n        {\n            ComponentId = componentId,\n            OnSuccess = onSuccess,\n            OnTimeout = onTimeout\n        });\n    }\n\n    public void Unsubscribe(string componentId)\n    {\n        _subscribers.RemoveAll(s =&gt; s.ComponentId == componentId);\n    }\n\n    private void OnGlobalCaptchaSuccess(object sender, CaptchaSuccessEventArgs e)\n    {\n        _currentToken = e.Response;\n        _tokenExpiry = DateTime.Now.AddMinutes(2); // reCAPTCHA token valid 2 minute\n\n        _logger.LogInformation(\"Captcha token received and cached\");\n\n        // Notific\u0103 to\u021bi subscriberii\n        foreach (var subscriber in _subscribers)\n        {\n            try\n            {\n                subscriber.OnSuccess?.Invoke(e.Response);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error notifying subscriber {ComponentId}\", \n                    subscriber.ComponentId);\n            }\n        }\n    }\n\n    private void OnGlobalCaptchaTimeout(object sender, CaptchaTimeOutEventArgs e)\n    {\n        _currentToken = null;\n        _tokenExpiry = null;\n\n        _logger.LogWarning(\"Captcha token expired at {ExpiredAt}\", e.ExpiredAt);\n\n        // Notific\u0103 to\u021bi subscriberii\n        foreach (var subscriber in _subscribers)\n        {\n            try\n            {\n                subscriber.OnTimeout?.Invoke();\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error notifying subscriber {ComponentId} of timeout\", \n                    subscriber.ComponentId);\n            }\n        }\n    }\n\n    private class CaptchaSubscriber\n    {\n        public string ComponentId { get; set; }\n        public Action&lt;string&gt; OnSuccess { get; set; }\n        public Action OnTimeout { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#implementare-alternativa-cu-recaptchaservice","title":"Implementare alternativ\u0103 cu RecaptchaService","text":"<pre><code>@* Implementarea actual\u0103 folose\u0219te RecaptchaService direct *@\n@inject IRecaptchaService RecaptchaService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodRecaptcha @ref=\"recaptcha\" /&gt;\n\n        &lt;FodButton OnClick=\"ValidateCaptcha\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"&gt;\n            Valideaz\u0103\n        &lt;/FodButton&gt;\n\n        @if (!string.IsNullOrEmpty(token))\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Success\" Class=\"mt-3\"&gt;\n                Token ob\u021binut: @token.Substring(0, 20)...\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private FodRecaptcha recaptcha;\n    private string token;\n\n    private async Task ValidateCaptcha()\n    {\n        try\n        {\n            // Metod\u0103 direct\u0103 f\u0103r\u0103 callback\n            token = await RecaptchaService.Execute();\n\n            if (!string.IsNullOrEmpty(token))\n            {\n                NotificationService.Success(\"Captcha validat!\");\n                // Procesare token\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare captcha: {ex.Message}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#6-integrare-cu-componente-multiple","title":"6. Integrare cu componente multiple","text":"<pre><code>@* Pagin\u0103 cu multiple formulare protejate *@\n@inject ICaptchaCallBackService CaptchaCallbackService\n@inject CaptchaManager CaptchaManager\n\n&lt;FodContainer&gt;\n    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n        &lt;!-- Formular 1 --&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;ContactForm Id=\"contact-form\" /&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;!-- Formular 2 --&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n            &lt;FeedbackForm Id=\"feedback-form\" /&gt;\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n\n    &lt;!-- Captcha centralizat --&gt;\n    &lt;FodCard Class=\"mt-4\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Verificare Securitate\n            &lt;/FodText&gt;\n            &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                Completa\u021bi captcha pentru a activa formularele\n            &lt;/FodText&gt;\n            &lt;FodRecaptcha /&gt;\n\n            @if (CaptchaManager.IsTokenValid)\n            {\n                &lt;FodChip Color=\"FodColor.Success\" \n                         Icon=\"@FodIcons.Material.Filled.CheckCircle\"\n                         Class=\"mt-2\"&gt;\n                    Verificare complet\u0103 - formularele sunt active\n                &lt;/FodChip&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#7-wrapper-pentru-captcha-invisible","title":"7. Wrapper pentru captcha invisible","text":"<pre><code>public class InvisibleCaptchaService\n{\n    private readonly ICaptchaCallBackService _callbackService;\n    private readonly IJSRuntime _jsRuntime;\n    private TaskCompletionSource&lt;string&gt; _pendingValidation;\n\n    public InvisibleCaptchaService(ICaptchaCallBackService callbackService, \n                                  IJSRuntime jsRuntime)\n    {\n        _callbackService = callbackService;\n        _jsRuntime = jsRuntime;\n\n        _callbackService.SuccessCallBack += OnCaptchaSuccess;\n        _callbackService.TimeOutCallBack += OnCaptchaTimeout;\n    }\n\n    public async Task&lt;string&gt; ExecuteAsync(string action = \"submit\")\n    {\n        _pendingValidation = new TaskCompletionSource&lt;string&gt;();\n\n        // Declan\u0219eaz\u0103 captcha invisible\n        await _jsRuntime.InvokeVoidAsync(\"executeInvisibleCaptcha\", action);\n\n        // A\u0219teapt\u0103 callback cu timeout\n        using var cts = new CancellationTokenSource(TimeSpan.FromSeconds(30));\n        cts.Token.Register(() =&gt; _pendingValidation.TrySetCanceled());\n\n        return await _pendingValidation.Task;\n    }\n\n    private void OnCaptchaSuccess(object sender, CaptchaSuccessEventArgs e)\n    {\n        _pendingValidation?.TrySetResult(e.Response);\n    }\n\n    private void OnCaptchaTimeout(object sender, CaptchaTimeOutEventArgs e)\n    {\n        _pendingValidation?.TrySetException(\n            new TimeoutException(\"Captcha validation timed out\"));\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#8-monitorizare-si-metrici","title":"8. Monitorizare \u0219i metrici","text":"<pre><code>public class MonitoredCaptchaCallbackService : ICaptchaCallBackService\n{\n    private readonly CaptchaCallbackService _innerService;\n    private readonly IMetricsCollector _metrics;\n    private readonly ILogger&lt;MonitoredCaptchaCallbackService&gt; _logger;\n\n    public EventHandler&lt;CaptchaSuccessEventArgs&gt; SuccessCallBack\n    {\n        get =&gt; _innerService.SuccessCallBack;\n        set\n        {\n            _innerService.SuccessCallBack = value;\n            _innerService.SuccessCallBack += OnSuccessCallback;\n        }\n    }\n\n    public EventHandler&lt;CaptchaTimeOutEventArgs&gt; TimeOutCallBack\n    {\n        get =&gt; _innerService.TimeOutCallBack;\n        set\n        {\n            _innerService.TimeOutCallBack = value;\n            _innerService.TimeOutCallBack += OnTimeoutCallback;\n        }\n    }\n\n    private void OnSuccessCallback(object sender, CaptchaSuccessEventArgs e)\n    {\n        _metrics.RecordCounter(\"captcha_success_total\", 1);\n        _logger.LogInformation(\"Captcha validation successful\");\n    }\n\n    private void OnTimeoutCallback(object sender, CaptchaTimeOutEventArgs e)\n    {\n        _metrics.RecordCounter(\"captcha_timeout_total\", 1);\n        _logger.LogWarning(\"Captcha timeout at {ExpiredAt}\", e.ExpiredAt);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#9-testare","title":"9. Testare","text":"<pre><code>[TestClass]\npublic class CaptchaCallbackServiceTests\n{\n    private ICaptchaCallBackService _service;\n    private bool _successCallbackInvoked;\n    private bool _timeoutCallbackInvoked;\n    private string _receivedToken;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _service = new CaptchaCallbackService();\n        _successCallbackInvoked = false;\n        _timeoutCallbackInvoked = false;\n        _receivedToken = null;\n\n        _service.SuccessCallBack += (sender, e) =&gt;\n        {\n            _successCallbackInvoked = true;\n            _receivedToken = e.Response;\n        };\n\n        _service.TimeOutCallBack += (sender, e) =&gt;\n        {\n            _timeoutCallbackInvoked = true;\n        };\n    }\n\n    [TestMethod]\n    public void SuccessCallback_WhenInvoked_NotifiesSubscribers()\n    {\n        // Arrange\n        var token = \"test-captcha-token\";\n        var args = new CaptchaSuccessEventArgs(token);\n\n        // Act\n        _service.SuccessCallBack?.Invoke(this, args);\n\n        // Assert\n        Assert.IsTrue(_successCallbackInvoked);\n        Assert.AreEqual(token, _receivedToken);\n    }\n\n    [TestMethod]\n    public void TimeoutCallback_WhenInvoked_NotifiesSubscribers()\n    {\n        // Arrange\n        var args = new CaptchaTimeOutEventArgs();\n\n        // Act\n        _service.TimeOutCallBack?.Invoke(this, args);\n\n        // Assert\n        Assert.IsTrue(_timeoutCallbackInvoked);\n        Assert.IsFalse(_successCallbackInvoked);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#10-javascript-integration","title":"10. JavaScript Integration","text":"<pre><code>// ReCaptcha.js - Integrare cu callback service\nwindow.fodCaptcha = {\n    dotNetRef: null,\n\n    init: function(dotNetReference) {\n        this.dotNetRef = dotNetReference;\n    },\n\n    onSuccess: function(token) {\n        if (this.dotNetRef) {\n            this.dotNetRef.invokeMethodAsync('CallbackOnSuccess', token)\n                .catch(err =&gt; console.error('Error invoking success callback:', err));\n        }\n    },\n\n    onExpired: function() {\n        if (this.dotNetRef) {\n            this.dotNetRef.invokeMethodAsync('CallbackOnExpired')\n                .catch(err =&gt; console.error('Error invoking timeout callback:', err));\n        }\n    },\n\n    executeInvisible: function(action) {\n        grecaptcha.execute(window.fodRecaptchaSiteKey, { action: action });\n    }\n};\n</code></pre>"},{"location":"fod/servicii/CaptchaCallbackService/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Dezabonare obligatorie - \u00centotdeauna dezabona\u021bi-v\u0103 \u00een Dispose()</li> <li>Validare token - Verifica\u021bi \u00eentotdeauna validitatea token-ului</li> <li>Timeout handling - Gestiona\u021bi expirarea token-ului (2 minute)</li> <li>Error handling - Trata\u021bi erorile de callback</li> <li>Centralizare - Folosi\u021bi un manager pentru multiple componente</li> <li>Logging - \u00cenregistra\u021bi toate evenimentele captcha</li> <li>Fallback - Ave\u021bi strategie alternativ\u0103 la e\u0219ec</li> </ol>"},{"location":"fod/servicii/CaptchaCallbackService/#12-concluzie","title":"12. Concluzie","text":"<p><code>CaptchaCallbackService</code> ofer\u0103 un mecanism flexibil pentru gestionarea evenimentelor reCAPTCHA \u00een aplica\u021biile Blazor. De\u0219i implementarea curent\u0103 folose\u0219te <code>RecaptchaService</code> pentru validare direct\u0103, serviciul de callback permite scenarii mai complexe cu notific\u0103ri globale \u0219i gestionare centralizat\u0103 a valid\u0103rii captcha pentru multiple componente.</p>"},{"location":"fod/servicii/ConfigurationService/","title":"ConfigurationService","text":""},{"location":"fod/servicii/ConfigurationService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>ConfigurationService</code> este un serviciu esen\u021bial pentru gestionarea configura\u021biilor client-side \u00een aplica\u021biile FOD. Ofer\u0103 acces centralizat la configur\u0103rile aplica\u021biei, inclusiv set\u0103ri pentru ReCAPTCHA, dimensiuni maxime pentru ata\u0219amente, numele aplica\u021biei \u0219i logo-ul organiza\u021biei. Serviciul implementeaz\u0103 caching pentru optimizarea performan\u021bei.</p>"},{"location":"fod/servicii/ConfigurationService/#inregistrare","title":"\u00cenregistrare","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;IConfigurationService, ConfigurationService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(builder.HostEnvironment.BaseAddress);\n});\n\n// Sau cu configurare personalizat\u0103\nbuilder.Services.AddScoped&lt;IConfigurationService, ConfigurationService&gt;();\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#interfata-iconfigurationservice","title":"Interfa\u021ba IConfigurationService","text":"<pre><code>public interface IConfigurationService\n{\n    Task&lt;FodClientConfiguration&gt; Get(bool force = true);\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#model-fodclientconfiguration","title":"Model FodClientConfiguration","text":"<pre><code>public class FodClientConfiguration\n{\n    public ReCaptchaOptions ReCaptcha { set; get; }\n    public long AttachmentSize { set; get; }\n    public string ApplicationName { set; get; }\n    public string OrganizationLogo { set; get; }\n}\n\npublic class ReCaptchaOptions\n{\n    public string SiteKey { set; get; }\n    public ReCaptchaVersion Version { set; get; }\n    public bool ValidateAuthenticated { set; get; }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n@code {\n    private FodClientConfiguration configuration;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/servicii/ConfigurationService/#obtinere-configuratie","title":"Ob\u021binere Configura\u021bie","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n&lt;div class=\"app-header\"&gt;\n    @if (configuration != null)\n    {\n        &lt;img src=\"@configuration.OrganizationLogo\" alt=\"Logo\" /&gt;\n        &lt;h1&gt;@configuration.ApplicationName&lt;/h1&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private FodClientConfiguration configuration;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Ob\u021bine configura\u021bia cu cache\n        configuration = await ConfigurationService.Get();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#reincarcare-fortata-a-configuratiei","title":"Re\u00eenc\u0103rcare For\u021bat\u0103 a Configura\u021biei","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n&lt;FodButton @onclick=\"ReloadConfiguration\"&gt;\n    Re\u00eencarc\u0103 Configura\u021bia\n&lt;/FodButton&gt;\n\n@code {\n    private FodClientConfiguration configuration;\n\n    private async Task ReloadConfiguration()\n    {\n        // For\u021beaz\u0103 re\u00eenc\u0103rcarea, ignor\u00e2nd cache-ul\n        configuration = await ConfigurationService.Get(force: true);\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#verificare-dimensiune-atasamente","title":"Verificare Dimensiune Ata\u0219amente","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n&lt;FodInputFile OnChange=\"@HandleFileSelected\" /&gt;\n\n@if (!string.IsNullOrEmpty(errorMessage))\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;@errorMessage&lt;/FodAlert&gt;\n}\n\n@code {\n    private FodClientConfiguration configuration;\n    private string errorMessage;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n    }\n\n    private async Task HandleFileSelected(InputFileChangeEventArgs e)\n    {\n        var file = e.File;\n\n        if (file.Size &gt; configuration.AttachmentSize)\n        {\n            errorMessage = $\"Fi\u0219ierul dep\u0103\u0219e\u0219te dimensiunea maxim\u0103 permis\u0103 de {FormatFileSize(configuration.AttachmentSize)}\";\n            return;\n        }\n\n        // Proceseaz\u0103 fi\u0219ierul\n        await ProcessFile(file);\n    }\n\n    private string FormatFileSize(long bytes)\n    {\n        string[] sizes = { \"B\", \"KB\", \"MB\", \"GB\" };\n        double len = bytes;\n        int order = 0;\n        while (len &gt;= 1024 &amp;&amp; order &lt; sizes.Length - 1)\n        {\n            order++;\n            len = len / 1024;\n        }\n        return $\"{len:0.##} {sizes[order]}\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#configurare-recaptcha","title":"Configurare ReCAPTCHA","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n@if (showRecaptcha)\n{\n    &lt;FodRecaptcha SiteKey=\"@configuration?.ReCaptcha?.SiteKey\"\n                  Version=\"@(configuration?.ReCaptcha?.Version ?? ReCaptchaVersion.V2)\"\n                  OnCallback=\"@HandleRecaptchaCallback\" /&gt;\n}\n\n@code {\n    private FodClientConfiguration configuration;\n    private bool showRecaptcha;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n\n        // Afi\u0219eaz\u0103 ReCAPTCHA doar dac\u0103 e configurat\n        showRecaptcha = !string.IsNullOrEmpty(configuration?.ReCaptcha?.SiteKey);\n\n        // Verific\u0103 dac\u0103 trebuie validat pentru utilizatori autentifica\u021bi\n        if (showRecaptcha &amp;&amp; IsAuthenticated &amp;&amp; !configuration.ReCaptcha.ValidateAuthenticated)\n        {\n            showRecaptcha = false;\n        }\n    }\n\n    private void HandleRecaptchaCallback(string token)\n    {\n        // Proceseaz\u0103 token-ul ReCAPTCHA\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#component-header-personalizat","title":"Component Header Personalizat","text":"<pre><code>@inject IConfigurationService ConfigurationService\n\n&lt;div class=\"custom-header\"&gt;\n    &lt;div class=\"logo-section\"&gt;\n        @if (!string.IsNullOrEmpty(configuration?.OrganizationLogo))\n        {\n            &lt;img src=\"@configuration.OrganizationLogo\" \n                 alt=\"@configuration?.ApplicationName\" \n                 class=\"org-logo\" /&gt;\n        }\n        else\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Business\" Size=\"FodSize.Large\" /&gt;\n        }\n    &lt;/div&gt;\n\n    &lt;div class=\"title-section\"&gt;\n        &lt;h1&gt;@(configuration?.ApplicationName ?? \"Aplica\u021bie FOD\")&lt;/h1&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private FodClientConfiguration configuration;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#manager-de-incarcare-fisiere","title":"Manager de \u00cenc\u0103rcare Fi\u0219iere","text":"<pre><code>@inject IConfigurationService ConfigurationService\n@inject IFodNotificationService NotificationService\n\n&lt;div class=\"file-uploader\"&gt;\n    &lt;FodInputFile Multiple=\"true\" OnChange=\"@HandleFilesSelected\" /&gt;\n\n    &lt;div class=\"file-info\"&gt;\n        &lt;p&gt;Dimensiune maxim\u0103 per fi\u0219ier: @FormatFileSize(maxSize)&lt;/p&gt;\n    &lt;/div&gt;\n\n    @if (files.Any())\n    {\n        &lt;div class=\"file-list\"&gt;\n            @foreach (var file in files)\n            {\n                &lt;div class=\"file-item\"&gt;\n                    &lt;span&gt;@file.Name&lt;/span&gt;\n                    &lt;span&gt;@FormatFileSize(file.Size)&lt;/span&gt;\n                    @if (file.Size &gt; maxSize)\n                    {\n                        &lt;FodBadge Color=\"FodColor.Error\"&gt;Prea mare&lt;/FodBadge&gt;\n                    }\n                &lt;/div&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private FodClientConfiguration configuration;\n    private long maxSize;\n    private List&lt;IBrowserFile&gt; files = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n        maxSize = configuration?.AttachmentSize ?? 10485760; // 10MB implicit\n    }\n\n    private void HandleFilesSelected(InputFileChangeEventArgs e)\n    {\n        files.Clear();\n        var oversizedFiles = new List&lt;string&gt;();\n\n        foreach (var file in e.GetMultipleFiles())\n        {\n            files.Add(file);\n\n            if (file.Size &gt; maxSize)\n            {\n                oversizedFiles.Add(file.Name);\n            }\n        }\n\n        if (oversizedFiles.Any())\n        {\n            NotificationService.Add(\n                $\"Urm\u0103toarele fi\u0219iere dep\u0103\u0219esc limita: {string.Join(\", \", oversizedFiles)}\", \n                FodSeverity.Warning\n            );\n        }\n    }\n\n    private string FormatFileSize(long bytes)\n    {\n        string[] sizes = { \"B\", \"KB\", \"MB\", \"GB\" };\n        double len = bytes;\n        int order = 0;\n        while (len &gt;= 1024 &amp;&amp; order &lt; sizes.Length - 1)\n        {\n            order++;\n            len = len / 1024;\n        }\n        return $\"{len:0.##} {sizes[order]}\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#configurare-conditionata","title":"Configurare Condi\u021bionat\u0103","text":"<pre><code>@inject IConfigurationService ConfigurationService\n@inject AuthenticationStateProvider AuthenticationStateProvider\n\n&lt;div class=\"conditional-features\"&gt;\n    @if (HasRecaptcha())\n    {\n        &lt;div class=\"recaptcha-section\"&gt;\n            @if (ShouldShowRecaptcha())\n            {\n                &lt;FodRecaptcha SiteKey=\"@configuration.ReCaptcha.SiteKey\"\n                            Version=\"@configuration.ReCaptcha.Version\" /&gt;\n            }\n            else\n            {\n                &lt;p class=\"text-muted\"&gt;ReCAPTCHA nu este necesar pentru utilizatori autentifica\u021bi.&lt;/p&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private FodClientConfiguration configuration;\n    private bool isAuthenticated;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n\n        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();\n        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;\n    }\n\n    private bool HasRecaptcha()\n    {\n        return configuration?.ReCaptcha != null &amp;&amp; \n               !string.IsNullOrEmpty(configuration.ReCaptcha.SiteKey);\n    }\n\n    private bool ShouldShowRecaptcha()\n    {\n        if (!HasRecaptcha()) return false;\n\n        // Verific\u0103 dac\u0103 trebuie afi\u0219at pentru utilizatori autentifica\u021bi\n        if (isAuthenticated &amp;&amp; !configuration.ReCaptcha.ValidateAuthenticated)\n        {\n            return false;\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#provider-global-de-configuratie","title":"Provider Global de Configura\u021bie","text":"<pre><code>@* \u00cen App.razor sau un component de nivel \u00eenalt *@\n@inject IConfigurationService ConfigurationService\n\n&lt;CascadingValue Value=\"@configuration\" Name=\"AppConfiguration\"&gt;\n    @ChildContent\n&lt;/CascadingValue&gt;\n\n@code {\n    [Parameter] public RenderFragment ChildContent { get; set; }\n\n    private FodClientConfiguration configuration;\n\n    protected override async Task OnInitializedAsync()\n    {\n        configuration = await ConfigurationService.Get();\n    }\n}\n\n@* \u00cen componente copil *@\n&lt;div class=\"child-component\"&gt;\n    &lt;h2&gt;@AppConfig?.ApplicationName&lt;/h2&gt;\n&lt;/div&gt;\n\n@code {\n    [CascadingParameter(Name = \"AppConfiguration\")] \n    public FodClientConfiguration AppConfig { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#gestionare-erori","title":"Gestionare Erori","text":"<pre><code>@inject IConfigurationService ConfigurationService\n@inject ILogger&lt;MyComponent&gt; Logger\n\n@if (loadError)\n{\n    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n        Nu s-a putut \u00eenc\u0103rca configura\u021bia. Folosim valori implicite.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private FodClientConfiguration configuration;\n    private bool loadError;\n\n    protected override async Task OnInitializedAsync()\n    {\n        try\n        {\n            configuration = await ConfigurationService.Get();\n        }\n        catch (HttpRequestException ex)\n        {\n            Logger.LogError(ex, \"Eroare la \u00eenc\u0103rcarea configura\u021biei\");\n            loadError = true;\n\n            // Folose\u0219te configura\u021bie implicit\u0103\n            configuration = new FodClientConfiguration\n            {\n                ApplicationName = \"Aplica\u021bie FOD\",\n                AttachmentSize = 10485760, // 10MB\n                ReCaptcha = null\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#caching-si-performanta","title":"Caching \u0219i Performan\u021b\u0103","text":"<p>Serviciul implementeaz\u0103 caching intern pentru a evita apeluri repetate la server:</p> <pre><code>// Prima apelare - face request la server\nvar config1 = await ConfigurationService.Get();\n\n// Apel\u0103ri ulterioare - returneaz\u0103 din cache\nvar config2 = await ConfigurationService.Get();\n\n// For\u021beaz\u0103 re\u00eenc\u0103rcarea de la server\nvar config3 = await ConfigurationService.Get(force: true);\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#endpoint-api","title":"Endpoint API","text":"<p>Serviciul face request la: <pre><code>GET /api/fod/configuration\n</code></pre></p> <p>R\u0103spunsuri posibile: - 200 OK - Returneaz\u0103 configura\u021bia - 204 No Content - Returneaz\u0103 configura\u021bie goal\u0103</p>"},{"location":"fod/servicii/ConfigurationService/#best-practices","title":"Best Practices","text":"<ol> <li>Cache configura\u021bia - \u00cenc\u0103rca\u021bi o singur\u0103 dat\u0103 la ini\u021bializare</li> <li>Gestiona\u021bi erori - Trata\u021bi cazul c\u00e2nd configura\u021bia nu e disponibil\u0103</li> <li>Valori implicite - Ave\u021bi valori de fallback pentru set\u0103ri critice</li> <li>Validare - Verifica\u021bi valorile \u00eenainte de utilizare</li> <li>Cascading values - Pentru aplica\u021bii mari, distribui\u021bi configura\u021bia prin CascadingValue</li> </ol>"},{"location":"fod/servicii/ConfigurationService/#integrare-cu-alte-servicii","title":"Integrare cu Alte Servicii","text":"<pre><code>public class FileUploadService\n{\n    private readonly IConfigurationService _configService;\n\n    public FileUploadService(IConfigurationService configService)\n    {\n        _configService = configService;\n    }\n\n    public async Task&lt;bool&gt; ValidateFileSize(long fileSize)\n    {\n        var config = await _configService.Get();\n        return fileSize &lt;= config.AttachmentSize;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ConfigurationService/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/servicii/ConfigurationService/#configuratia-nu-se-incarca","title":"Configura\u021bia nu se \u00eencarc\u0103","text":"<ul> <li>Verifica\u021bi c\u0103 endpoint-ul <code>/api/fod/configuration</code> este accesibil</li> <li>Verifica\u021bi configurarea HttpClient cu BaseAddress corect</li> </ul>"},{"location":"fod/servicii/ConfigurationService/#cache-ul-nu-se-actualizeaza","title":"Cache-ul nu se actualizeaz\u0103","text":"<ul> <li>Folosi\u021bi parametrul <code>force: true</code> pentru re\u00eenc\u0103rcare</li> <li>Verifica\u021bi c\u0103 serviciul este \u00eenregistrat ca Scoped, nu Singleton</li> </ul>"},{"location":"fod/servicii/ConfigurationService/#valori-null-in-configuratie","title":"Valori null \u00een configura\u021bie","text":"<ul> <li>Implementa\u021bi valori implicite pentru propriet\u0103\u021bi critice</li> <li>Valida\u021bi configura\u021bia dup\u0103 \u00eenc\u0103rcare</li> </ul>"},{"location":"fod/servicii/ConfigurationService/#concluzie","title":"Concluzie","text":"<p>ConfigurationService ofer\u0103 un mecanism centralizat \u0219i eficient pentru gestionarea configura\u021biilor client-side \u00een aplica\u021biile FOD. Cu suport pentru caching, gestionare erori \u0219i integrare u\u0219oar\u0103, este esen\u021bial pentru aplica\u021bii care necesit\u0103 configur\u0103ri dinamice.</p>"},{"location":"fod/servicii/ContextService/","title":"ContextService","text":""},{"location":"fod/servicii/ContextService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>ContextService</code> este un serviciu esen\u021bial pentru gestionarea contextelor utilizatorilor \u00een aplica\u021biile FOD. Permite utilizatorilor s\u0103 comute \u00eentre contexte personale (Individual) \u0219i organiza\u021bionale, gestion\u00e2nd persisten\u021ba selec\u021biei \u0219i oferind evenimente pentru schimb\u0103ri de context. Este fundamental pentru aplica\u021biile care permit ac\u021biuni at\u00e2t \u00een nume personal, c\u00e2t \u0219i \u00een numele organiza\u021biilor.</p>"},{"location":"fod/servicii/ContextService/#inregistrare","title":"\u00cenregistrare","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IContextService, ContextService&gt;();\n\n// Servicii dependente necesare\nbuilder.Services.AddScoped&lt;ICurrentUserContextService, CurrentUserContextService&gt;();\nbuilder.Services.AddScoped&lt;IApplicationModelLoader, ApplicationModelLoader&gt;();\n</code></pre>"},{"location":"fod/servicii/ContextService/#interfata-icontextservice","title":"Interfa\u021ba IContextService","text":"<pre><code>public interface IContextService\n{\n    EventHandler&lt;UserContext&gt; ContextChanged { get; set; }\n    EventHandler ChangeContextRequested { get; set; }\n    EventHandler ChangeContextRequestedCard { get; set; }\n\n    Task&lt;IEnumerable&lt;UserContext&gt;&gt; Get();\n    Task&lt;UserContext&gt; GetCurrent();\n    Task&lt;UserContext&gt; GetIndividualContext();\n    Task&lt;bool&gt; HasCurrentContext();\n    Task&lt;bool&gt; HasContexts();\n    Task&lt;bool&gt; GetContextSelectionRequired();\n\n    Task SetCurrent(UserContext context, bool selected = false);\n    Task SetCurrent(string idn);\n    Task ClearData();\n\n    Task RequestContextChange();\n    Task RequestContextChangeCard();\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#model-usercontext","title":"Model UserContext","text":"<pre><code>public class UserContext\n{\n    public string ContextId { get; set; }\n    public string ContextName { get; set; }\n    public UserContextType ContextType { get; set; }\n    public bool IsSelected { get; set; }\n}\n\npublic enum UserContextType\n{\n    Individual,\n    Organization\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/servicii/ContextService/#obtinere-context-curent","title":"Ob\u021binere Context Curent","text":"<pre><code>@inject IContextService ContextService\n\n&lt;div class=\"current-context\"&gt;\n    @if (currentContext != null)\n    {\n        &lt;p&gt;Context activ: @currentContext.ContextName&lt;/p&gt;\n        &lt;p&gt;Tip: @currentContext.ContextType&lt;/p&gt;\n    }\n    else\n    {\n        &lt;p&gt;Niciun context selectat&lt;/p&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentContext = await ContextService.GetCurrent();\n\n        // Abonare la schimb\u0103ri de context\n        ContextService.ContextChanged += OnContextChanged;\n    }\n\n    private void OnContextChanged(object sender, UserContext newContext)\n    {\n        currentContext = newContext;\n        InvokeAsync(StateHasChanged);\n    }\n\n    public void Dispose()\n    {\n        ContextService.ContextChanged -= OnContextChanged;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#selector-de-context","title":"Selector de Context","text":"<pre><code>@inject IContextService ContextService\n\n&lt;div class=\"context-selector\"&gt;\n    &lt;h4&gt;Selecta\u021bi contextul de lucru:&lt;/h4&gt;\n\n    @if (contexts != null)\n    {\n        &lt;div class=\"context-list\"&gt;\n            @foreach (var context in contexts)\n            {\n                &lt;div class=\"context-item @(IsCurrentContext(context) ? \"active\" : \"\")\"\n                     @onclick=\"() =&gt; SelectContext(context)\"&gt;\n                    &lt;FodIcon Icon=\"@GetContextIcon(context)\" /&gt;\n                    &lt;span&gt;@context.ContextName&lt;/span&gt;\n                    @if (IsCurrentContext(context))\n                    {\n                        &lt;FodBadge Color=\"FodColor.Success\"&gt;Activ&lt;/FodBadge&gt;\n                    }\n                &lt;/div&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private IEnumerable&lt;UserContext&gt; contexts;\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        contexts = await ContextService.Get();\n        currentContext = await ContextService.GetCurrent();\n    }\n\n    private async Task SelectContext(UserContext context)\n    {\n        await ContextService.SetCurrent(context, true);\n        currentContext = context;\n    }\n\n    private bool IsCurrentContext(UserContext context)\n    {\n        return currentContext?.ContextId == context.ContextId;\n    }\n\n    private string GetContextIcon(UserContext context)\n    {\n        return context.ContextType == UserContextType.Individual \n            ? FodIcons.Material.Filled.Person \n            : FodIcons.Material.Filled.Business;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#verificare-selectie-context-necesara","title":"Verificare Selec\u021bie Context Necesar\u0103","text":"<pre><code>@inject IContextService ContextService\n@inject NavigationManager Navigation\n\n@if (contextSelectionRequired)\n{\n    &lt;div class=\"context-selection-required\"&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n            V\u0103 rug\u0103m selecta\u021bi un context pentru a continua.\n        &lt;/FodAlert&gt;\n        &lt;FodButton @onclick=\"OpenContextSelector\" Color=\"FodColor.Primary\"&gt;\n            Selecteaz\u0103 Context\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n}\n\n@code {\n    private bool contextSelectionRequired;\n\n    protected override async Task OnInitializedAsync()\n    {\n        contextSelectionRequired = await ContextService.GetContextSelectionRequired();\n\n        if (contextSelectionRequired)\n        {\n            // Redirec\u021bioneaz\u0103 c\u0103tre pagina de selec\u021bie context\n            Navigation.NavigateTo(\"/select-context\");\n        }\n    }\n\n    private void OpenContextSelector()\n    {\n        ContextService.RequestContextChange();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#context-in-header-ul-aplicatiei","title":"Context \u00een Header-ul Aplica\u021biei","text":"<pre><code>@inject IContextService ContextService\n\n&lt;div class=\"app-header\"&gt;\n    &lt;div class=\"context-display\"&gt;\n        @if (currentContext != null)\n        {\n            &lt;div class=\"context-info\" @onclick=\"RequestContextChange\"&gt;\n                &lt;FodIcon Icon=\"@GetIcon()\" Size=\"FodSize.Small\" /&gt;\n                &lt;span&gt;@GetContextDisplayName()&lt;/span&gt;\n                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.ArrowDropDown\" Size=\"FodSize.Small\" /&gt;\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentContext = await ContextService.GetCurrent();\n        ContextService.ContextChanged += HandleContextChanged;\n    }\n\n    private void HandleContextChanged(object sender, UserContext context)\n    {\n        currentContext = context;\n        InvokeAsync(StateHasChanged);\n    }\n\n    private string GetIcon()\n    {\n        return currentContext.ContextType == UserContextType.Individual\n            ? FodIcons.Material.Filled.Person\n            : FodIcons.Material.Filled.Business;\n    }\n\n    private string GetContextDisplayName()\n    {\n        if (currentContext.ContextType == UserContextType.Individual)\n            return \"Personal\";\n        return currentContext.ContextName;\n    }\n\n    private void RequestContextChange()\n    {\n        ContextService.RequestContextChange();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#context-switch-cu-confirmare","title":"Context Switch cu Confirmare","text":"<pre><code>@inject IContextService ContextService\n@inject IFodNotificationService NotificationService\n\n&lt;div class=\"context-switcher\"&gt;\n    @foreach (var context in availableContexts)\n    {\n        &lt;FodButton @onclick=\"() =&gt; SwitchContext(context)\"\n                   Disabled=\"@(IsCurrentContext(context))\"&gt;\n            Comut\u0103 la @context.ContextName\n        &lt;/FodButton&gt;\n    }\n&lt;/div&gt;\n\n&lt;FodModal @bind-Visible=\"showConfirmDialog\" Title=\"Confirmare schimbare context\"&gt;\n    &lt;BodyTemplate&gt;\n        &lt;p&gt;Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 schimba\u021bi contextul la &lt;strong&gt;@pendingContext?.ContextName&lt;/strong&gt;?&lt;/p&gt;\n        &lt;p class=\"text-muted\"&gt;Aceast\u0103 ac\u021biune poate afecta datele afi\u0219ate \u0219i opera\u021biunile disponibile.&lt;/p&gt;\n    &lt;/BodyTemplate&gt;\n    &lt;FooterTemplate&gt;\n        &lt;FodButton @onclick=\"CancelSwitch\"&gt;Anuleaz\u0103&lt;/FodButton&gt;\n        &lt;FodButton Color=\"FodColor.Primary\" @onclick=\"ConfirmSwitch\"&gt;Confirm\u0103&lt;/FodButton&gt;\n    &lt;/FooterTemplate&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private IEnumerable&lt;UserContext&gt; availableContexts = new List&lt;UserContext&gt;();\n    private UserContext currentContext;\n    private UserContext pendingContext;\n    private bool showConfirmDialog;\n\n    protected override async Task OnInitializedAsync()\n    {\n        availableContexts = await ContextService.Get();\n        currentContext = await ContextService.GetCurrent();\n    }\n\n    private void SwitchContext(UserContext context)\n    {\n        if (IsCurrentContext(context)) return;\n\n        pendingContext = context;\n        showConfirmDialog = true;\n    }\n\n    private async Task ConfirmSwitch()\n    {\n        await ContextService.SetCurrent(pendingContext, true);\n        NotificationService.Add($\"Context schimbat la {pendingContext.ContextName}\", FodSeverity.Success);\n\n        currentContext = pendingContext;\n        pendingContext = null;\n        showConfirmDialog = false;\n    }\n\n    private void CancelSwitch()\n    {\n        pendingContext = null;\n        showConfirmDialog = false;\n    }\n\n    private bool IsCurrentContext(UserContext context)\n    {\n        return currentContext?.ContextId == context.ContextId;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#context-card-display","title":"Context Card Display","text":"<pre><code>@inject IContextService ContextService\n\n&lt;div class=\"context-cards\"&gt;\n    @foreach (var context in contexts)\n    {\n        &lt;div class=\"context-card @(IsActive(context) ? \"active\" : \"\")\"\n             @onclick=\"() =&gt; SelectContext(context)\"&gt;\n            &lt;div class=\"card-header\"&gt;\n                &lt;FodIcon Icon=\"@GetIcon(context)\" Size=\"FodSize.Large\" /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"card-body\"&gt;\n                &lt;h5&gt;@context.ContextName&lt;/h5&gt;\n                &lt;p class=\"text-muted\"&gt;\n                    @(context.ContextType == UserContextType.Individual \n                        ? \"Ac\u021biuni personale\" \n                        : \"Ac\u021biuni \u00een numele organiza\u021biei\")\n                &lt;/p&gt;\n            &lt;/div&gt;\n            @if (IsActive(context))\n            {\n                &lt;div class=\"card-footer\"&gt;\n                    &lt;FodBadge Color=\"FodColor.Success\"&gt;Context Activ&lt;/FodBadge&gt;\n                &lt;/div&gt;\n            }\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private IEnumerable&lt;UserContext&gt; contexts;\n    private UserContext activeContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        contexts = await ContextService.Get();\n        activeContext = await ContextService.GetCurrent();\n\n        // R\u0103spunde la cereri de schimbare card\n        ContextService.ChangeContextRequestedCard += HandleCardChangeRequest;\n    }\n\n    private void HandleCardChangeRequest(object sender, EventArgs e)\n    {\n        // Afi\u0219eaz\u0103 selector card-uri\n        StateHasChanged();\n    }\n\n    private async Task SelectContext(UserContext context)\n    {\n        await ContextService.SetCurrent(context, true);\n        activeContext = context;\n    }\n\n    private bool IsActive(UserContext context) =&gt; activeContext?.ContextId == context.ContextId;\n\n    private string GetIcon(UserContext context)\n    {\n        return context.ContextType == UserContextType.Individual\n            ? FodIcons.Material.Filled.AccountCircle\n            : FodIcons.Material.Filled.CorporateFare;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#gestionare-context-pentru-formulare","title":"Gestionare Context pentru Formulare","text":"<pre><code>@inject IContextService ContextService\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;div class=\"form-context-info\"&gt;\n        &lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n            Completa\u021bi formularul \u00een contextul: &lt;strong&gt;@currentContext?.ContextName&lt;/strong&gt;\n        &lt;/FodAlert&gt;\n    &lt;/div&gt;\n\n    &lt;!-- C\u00e2mpuri formular bazate pe context --&gt;\n    @if (currentContext?.ContextType == UserContextType.Individual)\n    {\n        &lt;FODInputText @bind-Value=\"model.PersonalIdnp\" Label=\"IDNP\" /&gt;\n        &lt;FODInputText @bind-Value=\"model.PersonalName\" Label=\"Nume \u0219i prenume\" /&gt;\n    }\n    else\n    {\n        &lt;FODInputText @bind-Value=\"model.OrganizationIdno\" Label=\"IDNO\" /&gt;\n        &lt;FODInputText @bind-Value=\"model.OrganizationName\" Label=\"Denumire organiza\u021bie\" /&gt;\n        &lt;FODInputText @bind-Value=\"model.RepresentativeName\" Label=\"Reprezentant\" /&gt;\n    }\n\n    &lt;FodButton Type=\"submit\"&gt;Trimite&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel model = new();\n    private UserContext currentContext;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentContext = await ContextService.GetCurrent();\n\n        // Pre-populeaz\u0103 date bazat pe context\n        if (currentContext?.ContextType == UserContextType.Organization)\n        {\n            model.OrganizationIdno = currentContext.ContextId;\n            model.OrganizationName = currentContext.ContextName;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#evenimente","title":"Evenimente","text":""},{"location":"fod/servicii/ContextService/#contextchanged","title":"ContextChanged","text":"<pre><code>ContextService.ContextChanged += (sender, newContext) =&gt;\n{\n    // Reac\u021bioneaz\u0103 la schimbarea contextului\n    Console.WriteLine($\"Context schimbat la: {newContext?.ContextName}\");\n};\n</code></pre>"},{"location":"fod/servicii/ContextService/#changecontextrequested","title":"ChangeContextRequested","text":"<pre><code>ContextService.ChangeContextRequested += (sender, args) =&gt;\n{\n    // Deschide UI pentru schimbare context\n    ShowContextSelector();\n};\n</code></pre>"},{"location":"fod/servicii/ContextService/#changecontextrequestedcard","title":"ChangeContextRequestedCard","text":"<pre><code>ContextService.ChangeContextRequestedCard += (sender, args) =&gt;\n{\n    // Deschide selector tip card\n    ShowContextCards();\n};\n</code></pre>"},{"location":"fod/servicii/ContextService/#persistenta-context","title":"Persisten\u021b\u0103 Context","text":"<p>Serviciul folose\u0219te <code>ICurrentUserContextService</code> pentru persisten\u021ba selec\u021biei:</p> <pre><code>// Salvare \u00een localStorage/sessionStorage\nawait _currentUserContextService.Set(contextId, isSelected);\n\n// Recuperare\nvar savedContext = await _currentUserContextService.GetSelectedContext();\n</code></pre>"},{"location":"fod/servicii/ContextService/#integrare-cu-applicationmodel","title":"Integrare cu ApplicationModel","text":"<pre><code>// Contexte disponibile sunt \u00eenc\u0103rcate din ApplicationModel\nvar contexts = (await _applicationModelLoader.Load())?.UserContexts;\n</code></pre>"},{"location":"fod/servicii/ContextService/#cazuri-speciale","title":"Cazuri Speciale","text":""},{"location":"fod/servicii/ContextService/#context-individual-implicit","title":"Context Individual Implicit","text":"<p>Dac\u0103 nu exist\u0103 context selectat, serviciul selecteaz\u0103 automat contextul Individual:</p> <pre><code>if (string.IsNullOrEmpty(selectedContext?.ContextId))\n{\n    var individualContext = contexts.FirstOrDefault(c =&gt; c.ContextType == UserContextType.Individual);\n    await SetCurrent(individualContext, contexts.Count() == 1);\n    return individualContext;\n}\n</code></pre>"},{"location":"fod/servicii/ContextService/#clear-data","title":"Clear Data","text":"<pre><code>// \u0218terge toate datele de context\nawait ContextService.ClearData();\n</code></pre>"},{"location":"fod/servicii/ContextService/#best-practices","title":"Best Practices","text":"<ol> <li>Verifica\u021bi context la ini\u021bializare - Asigura\u021bi-v\u0103 c\u0103 exist\u0103 un context valid</li> <li>Abona\u021bi-v\u0103 la evenimente - Pentru a reac\u021biona la schimb\u0103ri</li> <li>Dezabona\u021bi-v\u0103 corect - Preveni\u021bi memory leaks</li> <li>Valida\u021bi contextul pentru opera\u021bii - Unele ac\u021biuni pot fi restric\u021bionate pe context</li> <li>Oferi\u021bi feedback vizual - Ar\u0103ta\u021bi clar contextul activ</li> </ol>"},{"location":"fod/servicii/ContextService/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/servicii/ContextService/#context-nu-se-pastreaza-dupa-refresh","title":"Context nu se p\u0103streaz\u0103 dup\u0103 refresh","text":"<ul> <li>Verifica\u021bi implementarea <code>ICurrentUserContextService</code></li> <li>Asigura\u021bi-v\u0103 c\u0103 localStorage/sessionStorage func\u021bioneaz\u0103</li> </ul>"},{"location":"fod/servicii/ContextService/#evenimente-nu-se-declanseaza","title":"Evenimente nu se declan\u0219eaz\u0103","text":"<ul> <li>Verifica\u021bi abonarea corect\u0103 la evenimente</li> <li>Folosi\u021bi <code>InvokeAsync(StateHasChanged)</code> \u00een handler</li> </ul>"},{"location":"fod/servicii/ContextService/#context-individual-nu-apare","title":"Context Individual nu apare","text":"<ul> <li>Verifica\u021bi c\u0103 ApplicationModel con\u021bine contextul Individual</li> <li>Verifica\u021bi permisiunile utilizatorului</li> </ul>"},{"location":"fod/servicii/ContextService/#concluzie","title":"Concluzie","text":"<p>ContextService este fundamental pentru aplica\u021biile multi-context, oferind o gestionare complet\u0103 a contextelor utilizator cu suport pentru persisten\u021b\u0103, evenimente \u0219i integrare u\u0219oar\u0103 \u00een UI. Este esen\u021bial pentru aplica\u021bii care permit ac\u021biuni at\u00e2t personale c\u00e2t \u0219i \u00een numele organiza\u021biilor.</p>"},{"location":"fod/servicii/CostCalculatorService/","title":"CostCalculatorService","text":""},{"location":"fod/servicii/CostCalculatorService/#documentatie-pentru-serviciul-costcalculatorservice","title":"Documenta\u021bie pentru serviciul CostCalculatorService","text":""},{"location":"fod/servicii/CostCalculatorService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>CostCalculatorService&lt;T&gt;</code> este un serviciu generic pentru calcularea costurilor asociate cererilor de servicii guvernamentale. Serviciul comunic\u0103 cu API-ul de calcul costuri pentru a determina tarifele aplicabile bazate pe tipul \u0219i parametrii cererii.</p> <p>Caracteristici principale: - Calcul dinamic al costurilor bazat pe tipul cererii - Suport generic pentru diferite modele de cereri - Comunicare HTTP cu serviciul de calcul costuri - Returnare model standardizat FodRequestCostModel - Integrare cu sistemul de tipuri de cereri</p>"},{"location":"fod/servicii/CostCalculatorService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;ICostCalculatorService&lt;MyRequestModel&gt;, CostCalculatorService&lt;MyRequestModel&gt;&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n\n// Sau pentru \u00eenregistrare generic\u0103\nbuilder.Services.AddScoped(typeof(ICostCalculatorService&lt;&gt;), typeof(CostCalculatorService&lt;&gt;));\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#3-interfata-icostcalculatorservice","title":"3. Interfa\u021ba ICostCalculatorService","text":"<pre><code>public interface ICostCalculatorService&lt;T&gt; where T : FodRequestModel\n{\n    Task&lt;FodRequestCostModel&gt; Calculate(T requestModel);\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Calculate</code> <code>T requestModel</code> <code>Task&lt;FodRequestCostModel&gt;</code> Calculeaz\u0103 costul pentru cererea specificat\u0103"},{"location":"fod/servicii/CostCalculatorService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/CostCalculatorService/#fodrequestmodel-baza","title":"FodRequestModel (baz\u0103)","text":"<pre><code>public class FodRequestModel\n{\n    public RequestType Type { get; set; }\n    // Alte propriet\u0103\u021bi comune\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#fodrequestcostmodel-rezultat","title":"FodRequestCostModel (rezultat)","text":"<pre><code>public class FodRequestCostModel\n{\n    public decimal TotalCost { get; set; }\n    public decimal ServiceFee { get; set; }\n    public decimal ProcessingFee { get; set; }\n    public List&lt;CostItem&gt; CostItems { get; set; }\n    public bool IsFree { get; set; }\n    public string Currency { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/CostCalculatorService/#calcul-cost-simplu","title":"Calcul cost simplu","text":"<pre><code>@inject ICostCalculatorService&lt;ServiceRequestModel&gt; CostCalculator\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\"&gt;Calculator cost serviciu&lt;/FodText&gt;\n\n        @if (isCalculating)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n        }\n        else if (costResult != null)\n        {\n            &lt;FodRequestCost Cost=\"@costResult\" /&gt;\n        }\n\n        &lt;FodButton OnClick=\"CalculateCost\" \n                   Disabled=\"@isCalculating\"&gt;\n            Calculeaz\u0103 cost\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private ServiceRequestModel requestModel = new();\n    private FodRequestCostModel costResult;\n    private bool isCalculating = false;\n\n    private async Task CalculateCost()\n    {\n        isCalculating = true;\n        try\n        {\n            costResult = await CostCalculator.Calculate(requestModel);\n        }\n        catch (Exception ex)\n        {\n            // Gestionare erori\n            NotificationService.ShowError(\"Eroare la calculul costului\");\n        }\n        finally\n        {\n            isCalculating = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#calcul-cost-in-formular","title":"Calcul cost \u00een formular","text":"<pre><code>&lt;EditForm Model=\"@applicationModel\" OnValidSubmit=\"SubmitApplication\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;!-- C\u00e2mpuri formular --&gt;\n    &lt;FodSelect @bind-Value=\"applicationModel.Type.Code\" \n               Label=\"Tip serviciu\"\n               OnValueChanged=\"RecalculateCost\"&gt;\n        @foreach (var type in serviceTypes)\n        {\n            &lt;FodSelectItem Value=\"@type.Code\"&gt;@type.Name&lt;/FodSelectItem&gt;\n        }\n    &lt;/FodSelect&gt;\n\n    &lt;FodInputNumber @bind-Value=\"applicationModel.Quantity\" \n                    Label=\"Cantitate\"\n                    OnValueChanged=\"RecalculateCost\" /&gt;\n\n    &lt;!-- Afi\u0219are cost --&gt;\n    @if (currentCost != null)\n    {\n        &lt;FodCard Class=\"mt-3\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\"&gt;Cost estimat:&lt;/FodText&gt;\n                &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n                    @currentCost.TotalCost @currentCost.Currency\n                &lt;/FodText&gt;\n\n                @if (currentCost.CostItems?.Any() == true)\n                {\n                    &lt;FodList Dense=\"true\" Class=\"mt-2\"&gt;\n                        @foreach (var item in currentCost.CostItems)\n                        {\n                            &lt;FodListItem&gt;\n                                &lt;FodText Typo=\"Typo.body2\"&gt;@item.Description&lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.body2\" Class=\"ms-auto\"&gt;\n                                    @item.Amount @currentCost.Currency\n                                &lt;/FodText&gt;\n                            &lt;/FodListItem&gt;\n                        }\n                    &lt;/FodList&gt;\n                }\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    }\n\n    &lt;FodButton Type=\"ButtonType.Submit\" Color=\"FodColor.Primary\"&gt;\n        Trimite cererea\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    [Inject] private ICostCalculatorService&lt;ApplicationModel&gt; CostCalculator { get; set; }\n\n    private ApplicationModel applicationModel = new();\n    private FodRequestCostModel currentCost;\n\n    private async Task RecalculateCost()\n    {\n        if (applicationModel.Type != null)\n        {\n            currentCost = await CostCalculator.Calculate(applicationModel);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#comparare-costuri","title":"Comparare costuri","text":"<pre><code>&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    @foreach (var option in serviceOptions)\n    {\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;@option.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                        @option.Description\n                    &lt;/FodText&gt;\n\n                    @if (costs.ContainsKey(option.Id))\n                    {\n                        var cost = costs[option.Id];\n                        &lt;FodText Typo=\"Typo.h4\" Color=\"FodColor.Primary\"&gt;\n                            @cost.TotalCost @cost.Currency\n                        &lt;/FodText&gt;\n\n                        @if (cost.IsFree)\n                        {\n                            &lt;FodChip Color=\"FodColor.Success\" Size=\"FodSize.Small\"&gt;\n                                Gratuit\n                            &lt;/FodChip&gt;\n                        }\n                    }\n                    else\n                    {\n                        &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt;\n                    }\n                &lt;/FodCardContent&gt;\n                &lt;FodCardActions&gt;\n                    &lt;FodButton OnClick=\"@(() =&gt; SelectOption(option))\"&gt;\n                        Selecteaz\u0103\n                    &lt;/FodButton&gt;\n                &lt;/FodCardActions&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n\n@code {\n    private List&lt;ServiceOption&gt; serviceOptions = new();\n    private Dictionary&lt;int, FodRequestCostModel&gt; costs = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Calculeaz\u0103 costurile pentru toate op\u021biunile\n        foreach (var option in serviceOptions)\n        {\n            var request = new ServiceRequestModel { Type = option.Type };\n            costs[option.Id] = await CostCalculator.Calculate(request);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#calculator-interactiv","title":"Calculator interactiv","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Calculator taxe servicii\n        &lt;/FodText&gt;\n\n        &lt;FodAutocomplete @bind-Value=\"selectedService\"\n                         Items=\"availableServices\"\n                         Label=\"Selecta\u021bi serviciul\" /&gt;\n\n        @if (selectedService != null)\n        {\n            &lt;!-- Parametri specifici serviciului --&gt;\n            @foreach (var param in selectedService.Parameters)\n            {\n                &lt;FodTextField @bind-Value=\"parameters[param.Key]\"\n                              Label=\"@param.Label\"\n                              Type=\"@param.Type\" /&gt;\n            }\n\n            &lt;FodButton OnClick=\"CalculateDetailedCost\" \n                       Color=\"FodColor.Primary\"\n                       Class=\"mt-3\"&gt;\n                Calculeaz\u0103\n            &lt;/FodButton&gt;\n        }\n\n        @if (detailedCost != null)\n        {\n            &lt;FodExpansionPanels Class=\"mt-3\"&gt;\n                &lt;FodExpansionPanel Text=\"Detalii cost\" IsExpanded=\"true\"&gt;\n                    &lt;FodList&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText&gt;Tax\u0103 serviciu:&lt;/FodText&gt;\n                            &lt;FodText Class=\"ms-auto\"&gt;\n                                @detailedCost.ServiceFee @detailedCost.Currency\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText&gt;Tax\u0103 procesare:&lt;/FodText&gt;\n                            &lt;FodText Class=\"ms-auto\"&gt;\n                                @detailedCost.ProcessingFee @detailedCost.Currency\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                        &lt;FodDivider /&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText Typo=\"Typo.h6\"&gt;Total:&lt;/FodText&gt;\n                            &lt;FodText Typo=\"Typo.h6\" Class=\"ms-auto\"&gt;\n                                @detailedCost.TotalCost @detailedCost.Currency\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                    &lt;/FodList&gt;\n                &lt;/FodExpansionPanel&gt;\n            &lt;/FodExpansionPanels&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#7-gestionarea-erorilor","title":"7. Gestionarea Erorilor","text":"<pre><code>try\n{\n    var cost = await CostCalculator.Calculate(request);\n}\ncatch (HttpRequestException ex)\n{\n    // Eroare de re\u021bea\n    Logger.LogError(ex, \"Eroare conexiune serviciu calcul cost\");\n    throw new ServiceException(\"Serviciul de calcul cost nu este disponibil\");\n}\ncatch (TaskCanceledException ex)\n{\n    // Timeout\n    Logger.LogError(ex, \"Timeout calcul cost\");\n    throw new ServiceException(\"Calculul costului a durat prea mult\");\n}\ncatch (Exception ex)\n{\n    // Alte erori\n    Logger.LogError(ex, \"Eroare necunoscut\u0103 calcul cost\");\n    throw;\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#8-cache-si-performanta","title":"8. Cache \u0219i Performan\u021b\u0103","text":"<pre><code>public class CachedCostCalculatorService&lt;T&gt; : ICostCalculatorService&lt;T&gt; \n    where T : FodRequestModel\n{\n    private readonly ICostCalculatorService&lt;T&gt; _innerService;\n    private readonly IMemoryCache _cache;\n\n    public async Task&lt;FodRequestCostModel&gt; Calculate(T requestModel)\n    {\n        var cacheKey = GenerateCacheKey(requestModel);\n\n        if (_cache.TryGetValue&lt;FodRequestCostModel&gt;(cacheKey, out var cached))\n        {\n            return cached;\n        }\n\n        var result = await _innerService.Calculate(requestModel);\n\n        _cache.Set(cacheKey, result, TimeSpan.FromMinutes(30));\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#9-testare","title":"9. Testare","text":"<pre><code>[TestClass]\npublic class CostCalculatorServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpMessageHandler;\n    private ICostCalculatorService&lt;TestRequestModel&gt; _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpMessageHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpMessageHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.test.com\")\n        };\n\n        _service = new CostCalculatorService&lt;TestRequestModel&gt;(httpClient);\n    }\n\n    [TestMethod]\n    public async Task Calculate_ValidRequest_ReturnsCost()\n    {\n        // Arrange\n        var request = new TestRequestModel \n        { \n            Type = new RequestType { Code = \"TEST\" } \n        };\n\n        var expectedResponse = new FodRequestCostModel\n        {\n            TotalCost = 100,\n            Currency = \"MDL\"\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.Calculate(request);\n\n        // Assert\n        Assert.AreEqual(100, result.TotalCost);\n        Assert.AreEqual(\"MDL\", result.Currency);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Validare input - Valida\u021bi modelul \u00eenainte de calcul</li> <li>Gestionare erori - Trata\u021bi toate excep\u021biile posibile</li> <li>Cache - Cache-ui\u021bi rezultatele pentru performan\u021b\u0103</li> <li>Logging - Loga\u021bi toate cererile \u0219i erorile</li> <li>Timeout - Seta\u021bi timeout rezonabil pentru HTTP</li> <li>Retry policy - Implementa\u021bi retry pentru erori tranzitorii</li> </ol>"},{"location":"fod/servicii/CostCalculatorService/#11-integrare-cu-componente-ui","title":"11. Integrare cu Componente UI","text":"<pre><code>&lt;!-- Component\u0103 wrapper pentru afi\u0219are cost --&gt;\n@typeparam TModel where TModel : FodRequestModel\n\n&lt;div class=\"cost-display\"&gt;\n    @if (IsLoading)\n    {\n        &lt;FodSkeleton Type=\"SkeletonType.Text\" /&gt;\n    }\n    else if (Cost != null)\n    {\n        &lt;FodRequestCost Cost=\"@Cost\" /&gt;\n    }\n    else if (HasError)\n    {\n        &lt;FodAlert Severity=\"Severity.Error\"&gt;\n            Nu s-a putut calcula costul\n        &lt;/FodAlert&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    [Parameter] public TModel Model { get; set; }\n    [Inject] private ICostCalculatorService&lt;TModel&gt; Calculator { get; set; }\n\n    private FodRequestCostModel Cost;\n    private bool IsLoading;\n    private bool HasError;\n\n    protected override async Task OnParametersSetAsync()\n    {\n        if (Model != null)\n        {\n            await LoadCost();\n        }\n    }\n\n    private async Task LoadCost()\n    {\n        IsLoading = true;\n        HasError = false;\n\n        try\n        {\n            Cost = await Calculator.Calculate(Model);\n        }\n        catch\n        {\n            HasError = true;\n        }\n        finally\n        {\n            IsLoading = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#12-configurare-avansata","title":"12. Configurare Avansat\u0103","text":"<pre><code>// Configurare cu Polly pentru resilience\nservices.AddHttpClient&lt;ICostCalculatorService&lt;T&gt;, CostCalculatorService&lt;T&gt;&gt;()\n    .AddPolicyHandler(GetRetryPolicy())\n    .AddPolicyHandler(GetCircuitBreakerPolicy());\n\nstatic IAsyncPolicy&lt;HttpResponseMessage&gt; GetRetryPolicy()\n{\n    return HttpPolicyExtensions\n        .HandleTransientHttpError()\n        .WaitAndRetryAsync(\n            3,\n            retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)),\n            onRetry: (outcome, timespan, retryCount, context) =&gt;\n            {\n                Console.WriteLine($\"Retry {retryCount} after {timespan}\");\n            });\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#13-monitorizare","title":"13. Monitorizare","text":"<pre><code>public class MonitoredCostCalculatorService&lt;T&gt; : ICostCalculatorService&lt;T&gt;\n    where T : FodRequestModel\n{\n    private readonly ICostCalculatorService&lt;T&gt; _innerService;\n    private readonly IMetrics _metrics;\n\n    public async Task&lt;FodRequestCostModel&gt; Calculate(T requestModel)\n    {\n        using var timer = _metrics.Measure.Timer.Time(\"cost_calculation_duration\");\n\n        try\n        {\n            var result = await _innerService.Calculate(requestModel);\n            _metrics.Measure.Counter.Increment(\"cost_calculation_success\");\n            return result;\n        }\n        catch (Exception)\n        {\n            _metrics.Measure.Counter.Increment(\"cost_calculation_error\");\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CostCalculatorService/#14-concluzie","title":"14. Concluzie","text":"<p><code>CostCalculatorService</code> ofer\u0103 o solu\u021bie robust\u0103 pentru calcularea costurilor serviciilor guvernamentale. Cu suport generic \u0219i integrare u\u0219oar\u0103, serviciul simplific\u0103 implementarea calculatoarelor de cost \u00een aplica\u021biile FOD, asigur\u00e2nd transparen\u021b\u0103 \u0219i acurate\u021be \u00een estimarea tarifelor.</p>"},{"location":"fod/servicii/CultureService/","title":"CultureService","text":""},{"location":"fod/servicii/CultureService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>CultureService</code> este serviciul responsabil pentru gestionarea schimb\u0103rii culturii/limbii \u00een aplica\u021bii Blazor. Serviciul permite setarea culturii at\u00e2t pe partea de client (prin localStorage), c\u00e2t \u0219i pe partea de server (prin cookie), asigur\u00e2nd o experien\u021b\u0103 consistent\u0103 de localizare \u00een \u00eentreaga aplica\u021bie.</p>"},{"location":"fod/servicii/CultureService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/CultureService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// Client-side (Blazor WebAssembly sau Component)\nbuilder.Services.AddScoped&lt;ICultureService, CultureService&gt;();\n\n// Server-side (ASP.NET Core)\nbuilder.Services.AddScoped&lt;FOD.Components.Server.Services.ICultureService, FOD.Components.Server.Services.CultureService&gt;();\nbuilder.Services.AddHttpContextAccessor();\n</code></pre>"},{"location":"fod/servicii/CultureService/#configurare-localizare-aspnet-core","title":"Configurare Localizare ASP.NET Core","text":"<pre><code>// \u00cen Program.cs\nbuilder.Services.Configure&lt;RequestLocalizationOptions&gt;(options =&gt;\n{\n    var supportedCultures = new[] { \"ro\", \"ru\", \"en\" };\n    options.SetDefaultCulture(\"ro\")\n        .AddSupportedCultures(supportedCultures)\n        .AddSupportedUICultures(supportedCultures);\n});\n\napp.UseRequestLocalization();\n</code></pre>"},{"location":"fod/servicii/CultureService/#script-javascript-necesar","title":"Script JavaScript necesar","text":"<pre><code>// Inclus automat \u00een FodComponents.js\nwindow.blazorCulture = {\n    get: () =&gt; window.localStorage[\"BlazorCulture\"],\n    set: (value) =&gt; (window.localStorage[\"BlazorCulture\"] = value),\n};\n</code></pre>"},{"location":"fod/servicii/CultureService/#endpoint-server-side","title":"Endpoint server-side","text":"<pre><code>// \u00cen ServicesSetup.cs\nendpoints.MapGet(\"api/fod/culture={cultureEscaped}&amp;redirectUri={uriEscaped}\", \n    async (string cultureEscaped, string uriEscaped, \n    [FromServices] ICultureService cultureService) =&gt;\n{\n    cultureService.SetCultureCookie(cultureEscaped);\n    uriEscaped = uriEscaped.Replace(\"%2F\", \"/\");\n    return Results.Redirect(uriEscaped, permanent: false);\n});\n</code></pre>"},{"location":"fod/servicii/CultureService/#interfete","title":"Interfe\u021be","text":""},{"location":"fod/servicii/CultureService/#client-side-icultureservice","title":"Client-side ICultureService","text":"<pre><code>namespace FOD.Components.Services.Culture\n{\n    public interface ICultureService\n    {\n        void SetCulture(CultureInfo newCulture);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#server-side-icultureservice","title":"Server-side ICultureService","text":"<pre><code>namespace FOD.Components.Server.Services\n{\n    public interface ICultureService\n    {\n        void SetCultureCookie(string culture);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/CultureService/#client-side-setculture","title":"Client-side: SetCulture","text":"<p>Seteaz\u0103 noua cultur\u0103 pentru aplica\u021bie.</p> <p>Parametri: - <code>newCulture: CultureInfo</code> - Cultura de setat</p> <p>Comportament: 1. Verific\u0103 dac\u0103 cultura nou\u0103 difer\u0103 de cea curent\u0103 2. Seteaz\u0103 cultura \u00een localStorage prin JavaScript 3. Navigheaz\u0103 la endpoint-ul server pentru setarea cookie-ului 4. Re\u00eencarc\u0103 pagina pentru aplicarea schimb\u0103rilor</p>"},{"location":"fod/servicii/CultureService/#server-side-setculturecookie","title":"Server-side: SetCultureCookie","text":"<p>Seteaz\u0103 cookie-ul de cultur\u0103 pentru cereri viitoare.</p> <p>Parametri: - <code>culture: string</code> - Codul culturii (ex: \"ro\", \"en\", \"ru\")</p> <p>Comportament: - Seteaz\u0103 cookie-ul standard ASP.NET Core pentru localizare - Cookie-ul va fi folosit de middleware-ul de localizare</p>"},{"location":"fod/servicii/CultureService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/CultureService/#selector-de-limba-simplu","title":"Selector de limb\u0103 simplu","text":"<pre><code>@inject ICultureService CultureService\n@inject IStringLocalizer&lt;Shared&gt; Localizer\n\n&lt;div class=\"language-selector\"&gt;\n    &lt;FodSelect Value=\"@currentCulture\" \n               ValueChanged=\"@OnCultureChanged\"\n               Label=\"@Localizer[\"Language\"]\"&gt;\n        &lt;FodSelectItem Value=\"ro\"&gt;Rom\u00e2n\u0103&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"en\"&gt;English&lt;/FodSelectItem&gt;\n        &lt;FodSelectItem Value=\"ru\"&gt;\u0420\u0443\u0441\u0441\u043a\u0438\u0439&lt;/FodSelectItem&gt;\n    &lt;/FodSelect&gt;\n&lt;/div&gt;\n\n@code {\n    private string currentCulture = CultureInfo.CurrentCulture.Name;\n\n    private void OnCultureChanged(string newCulture)\n    {\n        var cultureInfo = new CultureInfo(newCulture);\n        CultureService.SetCulture(cultureInfo);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#component-languageselector-dedicat","title":"Component LanguageSelector dedicat","text":"<pre><code>@inject ICultureService CultureService\n@inject NavigationManager Navigation\n\n&lt;div class=\"language-buttons\"&gt;\n    @foreach (var lang in availableLanguages)\n    {\n        &lt;FodButton Variant=\"@(IsCurrentLanguage(lang.Code) ? FodVariant.Filled : FodVariant.Outlined)\"\n                   Size=\"FodSize.Small\"\n                   @onclick=\"() =&gt; ChangeLanguage(lang.Code)\"&gt;\n            &lt;img src=\"@lang.FlagUrl\" alt=\"@lang.Name\" class=\"flag-icon\" /&gt;\n            @lang.Name\n        &lt;/FodButton&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private class Language\n    {\n        public string Code { get; set; }\n        public string Name { get; set; }\n        public string FlagUrl { get; set; }\n    }\n\n    private List&lt;Language&gt; availableLanguages = new()\n    {\n        new() { Code = \"ro\", Name = \"RO\", FlagUrl = \"/images/flags/ro.svg\" },\n        new() { Code = \"en\", Name = \"EN\", FlagUrl = \"/images/flags/en.svg\" },\n        new() { Code = \"ru\", Name = \"RU\", FlagUrl = \"/images/flags/ru.svg\" }\n    };\n\n    private bool IsCurrentLanguage(string code)\n    {\n        return CultureInfo.CurrentCulture.TwoLetterISOLanguageName == code;\n    }\n\n    private void ChangeLanguage(string languageCode)\n    {\n        if (!IsCurrentLanguage(languageCode))\n        {\n            var newCulture = new CultureInfo(languageCode);\n            CultureService.SetCulture(newCulture);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#meniu-dropdown-pentru-limba","title":"Meniu dropdown pentru limb\u0103","text":"<pre><code>@inject ICultureService CultureService\n\n&lt;FodMenu&gt;\n    &lt;ActivatorContent&gt;\n        &lt;FodIconButton Icon=\"translate\" /&gt;\n    &lt;/ActivatorContent&gt;\n    &lt;ChildContent&gt;\n        &lt;FodMenuItem @onclick='() =&gt; SetLanguage(\"ro\")'&gt;\n            &lt;FodIcon Icon=\"flag\" /&gt; Rom\u00e2n\u0103\n        &lt;/FodMenuItem&gt;\n        &lt;FodMenuItem @onclick='() =&gt; SetLanguage(\"en\")'&gt;\n            &lt;FodIcon Icon=\"flag\" /&gt; English\n        &lt;/FodMenuItem&gt;\n        &lt;FodMenuItem @onclick='() =&gt; SetLanguage(\"ru\")'&gt;\n            &lt;FodIcon Icon=\"flag\" /&gt; \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n        &lt;/FodMenuItem&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodMenu&gt;\n\n@code {\n    private void SetLanguage(string culture)\n    {\n        CultureService.SetCulture(new CultureInfo(culture));\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#service-extins-cu-evenimente","title":"Service extins cu evenimente","text":"<pre><code>public interface IExtendedCultureService : ICultureService\n{\n    event EventHandler&lt;CultureChangedEventArgs&gt; CultureChanged;\n    CultureInfo CurrentCulture { get; }\n    IEnumerable&lt;CultureInfo&gt; SupportedCultures { get; }\n}\n\npublic class ExtendedCultureService : IExtendedCultureService\n{\n    private readonly ICultureService _innerService;\n    public event EventHandler&lt;CultureChangedEventArgs&gt; CultureChanged;\n\n    public CultureInfo CurrentCulture =&gt; CultureInfo.CurrentCulture;\n\n    public IEnumerable&lt;CultureInfo&gt; SupportedCultures { get; } = new[]\n    {\n        new CultureInfo(\"ro\"),\n        new CultureInfo(\"en\"),\n        new CultureInfo(\"ru\")\n    };\n\n    public void SetCulture(CultureInfo newCulture)\n    {\n        var oldCulture = CurrentCulture;\n        _innerService.SetCulture(newCulture);\n\n        CultureChanged?.Invoke(this, new CultureChangedEventArgs\n        {\n            OldCulture = oldCulture,\n            NewCulture = newCulture\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#persistenta-preferinta-utilizator","title":"Persisten\u021b\u0103 preferin\u021b\u0103 utilizator","text":"<pre><code>@inject ICultureService CultureService\n@inject ILocalStorageService LocalStorage\n@implements IAsyncDisposable\n\n@code {\n    protected override async Task OnInitializedAsync()\n    {\n        // Restaurare preferin\u021b\u0103 salvat\u0103\n        var savedCulture = await LocalStorage.GetItemAsync&lt;string&gt;(\"UserPreferredCulture\");\n        if (!string.IsNullOrEmpty(savedCulture))\n        {\n            var culture = new CultureInfo(savedCulture);\n            if (culture.Name != CultureInfo.CurrentCulture.Name)\n            {\n                CultureService.SetCulture(culture);\n            }\n        }\n    }\n\n    private async Task SaveCulturePreference(string culture)\n    {\n        await LocalStorage.SetItemAsync(\"UserPreferredCulture\", culture);\n        CultureService.SetCulture(new CultureInfo(culture));\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        // Cleanup if needed\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#integrare-cu-componente-fod","title":"Integrare cu componente FOD","text":""},{"location":"fod/servicii/CultureService/#cu-fodheader","title":"Cu FodHeader","text":"<pre><code>&lt;FodHeader&gt;\n    &lt;ToolbarContent&gt;\n        &lt;FodSpacer /&gt;\n        &lt;LanguageSelector /&gt;\n        &lt;FodIconButton Icon=\"account_circle\" /&gt;\n    &lt;/ToolbarContent&gt;\n&lt;/FodHeader&gt;\n</code></pre>"},{"location":"fod/servicii/CultureService/#cu-formulare-multilingve","title":"Cu formulare multilingve","text":"<pre><code>@inject IStringLocalizer&lt;MyForm&gt; Localizer\n@inject ICultureService CultureService\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;FodInput @bind-Value=\"model.Name\" \n              Label=\"@Localizer[\"NameLabel\"]\" \n              HelperText=\"@Localizer[\"NameHelper\"]\" /&gt;\n\n    &lt;FodSelect @bind-Value=\"model.Country\" \n               Label=\"@Localizer[\"CountryLabel\"]\"&gt;\n        @foreach (var country in GetLocalizedCountries())\n        {\n            &lt;FodSelectItem Value=\"@country.Code\"&gt;\n                @country.Name\n            &lt;/FodSelectItem&gt;\n        }\n    &lt;/FodSelect&gt;\n&lt;/EditForm&gt;\n</code></pre>"},{"location":"fod/servicii/CultureService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/CultureService/#service-cu-logging","title":"Service cu logging","text":"<pre><code>public class LoggingCultureService : ICultureService\n{\n    private readonly ICultureService _innerService;\n    private readonly ILogger&lt;LoggingCultureService&gt; _logger;\n\n    public void SetCulture(CultureInfo newCulture)\n    {\n        _logger.LogInformation(\"Changing culture from {OldCulture} to {NewCulture}\", \n            CultureInfo.CurrentCulture.Name, newCulture.Name);\n\n        try\n        {\n            _innerService.SetCulture(newCulture);\n            _logger.LogInformation(\"Culture changed successfully to {Culture}\", \n                newCulture.Name);\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Failed to change culture to {Culture}\", \n                newCulture.Name);\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/CultureService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Page reload - Schimbarea culturii necesit\u0103 re\u00eenc\u0103rcarea paginii</li> <li>Cookie persistence - Cookie-ul de cultur\u0103 persist\u0103 \u00eentre sesiuni</li> <li>LocalStorage sync - Cultura client-side este salvat\u0103 \u00een localStorage</li> <li>Thread safety - Cultura este thread-safe \u00een ASP.NET Core</li> <li>Blazor limitation - \u00cen Blazor WebAssembly, cultura trebuie setat\u0103 la startup</li> </ol>"},{"location":"fod/servicii/CultureService/#bune-practici","title":"Bune practici","text":"<ol> <li>Default culture - Seta\u021bi \u00eentotdeauna o cultur\u0103 implicit\u0103</li> <li>Supported cultures - Defini\u021bi explicit culturile suportate</li> <li>Resource files - Organiza\u021bi fi\u0219ierele de resurse pe culturi</li> <li>Date formats - Testa\u021bi formatarea datelor \u00een toate culturile</li> <li>URL preservation - P\u0103stra\u021bi URL-ul curent la schimbarea limbii</li> <li>User preference - Salva\u021bi preferin\u021ba utilizatorului</li> <li>Graceful fallback - Gestiona\u021bi culturi nesuportate</li> </ol>"},{"location":"fod/servicii/CultureService/#concluzie","title":"Concluzie","text":"<p>CultureService ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea multilingvismului \u00een aplica\u021bii Blazor, integr\u00e2nd at\u00e2t aspecte client-side c\u00e2t \u0219i server-side. Cu suport pentru persisten\u021b\u0103 \u0219i navigare fluid\u0103, serviciul faciliteaz\u0103 crearea de aplica\u021bii cu adev\u0103rat interna\u021bionale.</p>"},{"location":"fod/servicii/DataRequestHandlerService/","title":"DataRequestHandlerService","text":""},{"location":"fod/servicii/DataRequestHandlerService/#documentatie-pentru-serviciul-datarequesthandlerservice","title":"Documenta\u021bie pentru serviciul DataRequestHandlerService","text":""},{"location":"fod/servicii/DataRequestHandlerService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>DataRequestHandlerService</code> este un serviciu generic pentru procesarea cererilor de date cu suport pentru filtrare, sortare, c\u0103utare \u0219i paginare. Serviciul ofer\u0103 o interfa\u021b\u0103 unificat\u0103 pentru manipularea datelor at\u00e2t client-side c\u00e2t \u0219i ca model pentru opera\u021biuni server-side.</p> <p>Caracteristici principale: - Filtrare dinamic\u0103 pe propriet\u0103\u021bi - C\u0103utare keyword \u00een c\u00e2mpuri text - Sortare ascendent\u0103/descendent\u0103 - Paginare cu suport skip/take - Procesare \u00een memorie pentru date client-side - Model standardizat pentru opera\u021biuni server-side - Integrare seamless cu FODTable</p>"},{"location":"fod/servicii/DataRequestHandlerService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped(typeof(IDataRequestHandlerService&lt;&gt;), \n                          typeof(DataRequestHandlerService&lt;&gt;));\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#3-interfata-idatarequesthandlerservice","title":"3. Interfa\u021ba IDataRequestHandlerService","text":"<pre><code>namespace FOD.Components.Services\n{\n    public interface IDataRequestHandlerService&lt;SourceT&gt;\n    {\n        DataResponse&lt;SourceT&gt; HandleRequest(IEnumerable&lt;SourceT&gt; source, DataRequest request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>HandleRequest</code> <code>IEnumerable&lt;SourceT&gt; source, DataRequest request</code> <code>DataResponse&lt;SourceT&gt;</code> Proceseaz\u0103 cererea de date aplic\u00e2nd filtre, sortare \u0219i paginare"},{"location":"fod/servicii/DataRequestHandlerService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/DataRequestHandlerService/#datarequest","title":"DataRequest","text":"<pre><code>public class DataRequest\n{\n    public int Page { get; set; }\n    public int PageSize { get; set; }\n    public string Sort { get; set; } = string.Empty;\n    public SortDirection SortDirection { get; set; } = SortDirection.Ascending;\n    public string? Keyword { get; set; } = string.Empty;\n    public List&lt;string&gt; SearchableColumns { get; set; }\n    public object? Filter { get; set; }\n}\n\n// Versiune generic\u0103 pentru type safety\npublic class DataRequest&lt;T&gt; : DataRequest\n{\n    public new T? Filter { get; set; }\n}\n\npublic enum SortDirection\n{\n    Ascending = 0,\n    Descending = 1\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#dataresponse","title":"DataResponse","text":"<pre><code>public class DataResponse&lt;T&gt;\n{\n    public IEnumerable&lt;T&gt; Items { get; set; }\n    public int Total { get; set; }\n\n    // Propriet\u0103\u021bi calculate utile\n    public int PageCount =&gt; PageSize &gt; 0 ? (int)Math.Ceiling(Total / (double)PageSize) : 0;\n    public int PageSize { get; set; }\n    public int CurrentPage { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/DataRequestHandlerService/#utilizare-client-side-simpla","title":"Utilizare client-side simpl\u0103","text":"<pre><code>@page \"/lista-utilizatori\"\n@inject IDataRequestHandlerService&lt;User&gt; DataHandler\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Lista Utilizatori\n    &lt;/FodText&gt;\n\n    &lt;!-- Controale filtrare --&gt;\n    &lt;FodCard Class=\"mb-3\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\" AlignItems=\"Align.End\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"searchKeyword\" \n                              Label=\"Caut\u0103\"\n                              Placeholder=\"Nume, email...\"\n                              OnKeyUp=\"@(async (e) =&gt; { if (e.Key == \"Enter\") await Search(); })\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;FodSelect @bind-Value=\"filterRole\" \n                               Label=\"Rol\"\n                               Items=\"@roleOptions\"\n                               OnChange=\"@(async () =&gt; await ApplyFilters())\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"3\"&gt;\n                    &lt;FodSelect @bind-Value=\"sortField\" \n                               Label=\"Sortare dup\u0103\"\n                               Items=\"@sortOptions\"\n                               OnChange=\"@(async () =&gt; await ApplySort())\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"2\"&gt;\n                    &lt;FodButton OnClick=\"ClearFilters\" \n                               Variant=\"FodVariant.Outlined\"\n                               FullWidth=\"true\"&gt;\n                        Reseteaz\u0103\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    &lt;!-- Tabel rezultate --&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            @if (response == null)\n            {\n                &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n            }\n            else\n            {\n                &lt;FodDataTable Items=\"@response.Items\" \n                              Dense=\"true\"\n                              ShowPagination=\"false\"&gt;\n                    &lt;HeaderContent&gt;\n                        &lt;FodTHeadRow&gt;\n                            &lt;FodTh&gt;Nume&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Email&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Rol&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Status&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Data \u00cenregistr\u0103rii&lt;/FodTh&gt;\n                        &lt;/FodTHeadRow&gt;\n                    &lt;/HeaderContent&gt;\n                    &lt;RowTemplate&gt;\n                        &lt;FodTr&gt;\n                            &lt;FodTd&gt;@context.FullName&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Email&lt;/FodTd&gt;\n                            &lt;FodTd&gt;\n                                &lt;FodChip Size=\"FodSize.Small\"&gt;\n                                    @context.Role\n                                &lt;/FodChip&gt;\n                            &lt;/FodTd&gt;\n                            &lt;FodTd&gt;\n                                &lt;FodChip Color=\"@(context.IsActive ? FodColor.Success : FodColor.Error)\" \n                                         Size=\"FodSize.Small\"&gt;\n                                    @(context.IsActive ? \"Activ\" : \"Inactiv\")\n                                &lt;/FodChip&gt;\n                            &lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.CreatedDate.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n                        &lt;/FodTr&gt;\n                    &lt;/RowTemplate&gt;\n                &lt;/FodDataTable&gt;\n\n                &lt;!-- Paginare manual\u0103 --&gt;\n                &lt;div class=\"d-flex justify-content-between align-items-center mt-3\"&gt;\n                    &lt;FodText Typo=\"Typo.body2\"&gt;\n                        Afi\u0219are @((currentPage - 1) * pageSize + 1) - \n                        @(Math.Min(currentPage * pageSize, response.Total)) \n                        din @response.Total\n                    &lt;/FodText&gt;\n                    &lt;FodPagination Count=\"@response.PageCount\" \n                                   @bind-Selected=\"currentPage\"\n                                   OnChange=\"@(async () =&gt; await LoadData())\" /&gt;\n                &lt;/div&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private List&lt;User&gt; allUsers = new();\n    private DataResponse&lt;User&gt; response;\n    private DataRequest request = new();\n\n    // Filtre\n    private string searchKeyword;\n    private string filterRole;\n    private string sortField = \"FullName\";\n    private int currentPage = 1;\n    private int pageSize = 10;\n\n    // Op\u021biuni dropdown\n    private List&lt;SelectableItem&gt; roleOptions = new()\n    {\n        new(\"\", \"Toate\"),\n        new(\"Admin\", \"Administrator\"),\n        new(\"User\", \"Utilizator\"),\n        new(\"Manager\", \"Manager\")\n    };\n\n    private List&lt;SelectableItem&gt; sortOptions = new()\n    {\n        new(\"FullName\", \"Nume\"),\n        new(\"Email\", \"Email\"),\n        new(\"CreatedDate\", \"Data \u00eenregistr\u0103rii\"),\n        new(\"Role\", \"Rol\")\n    };\n\n    protected override async Task OnInitializedAsync()\n    {\n        // \u00cencarc\u0103 date ini\u021biale\n        allUsers = await LoadUsersFromDatabase();\n        await LoadData();\n    }\n\n    private async Task LoadData()\n    {\n        request.Page = currentPage;\n        request.PageSize = pageSize;\n        request.Sort = sortField;\n        request.SortDirection = SortDirection.Ascending;\n        request.Keyword = searchKeyword;\n        request.SearchableColumns = new() { \"FullName\", \"Email\", \"Role\" };\n\n        // Aplicare filtru rol\n        if (!string.IsNullOrEmpty(filterRole))\n        {\n            request.Filter = new { Role = filterRole };\n        }\n\n        // Procesare date\n        response = DataHandler.HandleRequest(allUsers, request);\n        StateHasChanged();\n    }\n\n    private async Task Search()\n    {\n        currentPage = 1; // Reset la prima pagin\u0103\n        await LoadData();\n    }\n\n    private async Task ApplyFilters()\n    {\n        currentPage = 1;\n        await LoadData();\n    }\n\n    private async Task ApplySort()\n    {\n        await LoadData();\n    }\n\n    private async Task ClearFilters()\n    {\n        searchKeyword = string.Empty;\n        filterRole = string.Empty;\n        sortField = \"FullName\";\n        currentPage = 1;\n        await LoadData();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#integrare-cu-fodtable","title":"Integrare cu FODTable","text":"<pre><code>@inject IDataRequestHandlerService&lt;Product&gt; DataHandler\n\n&lt;FODTable Items=\"@products\"\n          ServerData=\"@LoadServerData\"\n          Dense=\"true\"\n          Hover=\"true\"\n          ShowPagination=\"true\"\n          RowsPerPageOptions=\"new[] { 5, 10, 25, 50 }\"\n          SearchableColumns=\"new[] { nameof(Product.Name), nameof(Product.Description) }\"\n          @bind-RowsPerPage=\"rowsPerPage\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;FodTHeadRow&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel InitialDirection=\"SortDirection.Ascending\"\n                                   SortBy=\"p =&gt; p.Name\"&gt;\n                    Produs\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel SortBy=\"p =&gt; p.Price\"&gt;\n                    Pre\u021b\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n            &lt;FodTh&gt;\n                &lt;FodTableSortLabel SortBy=\"p =&gt; p.Stock\"&gt;\n                    Stoc\n                &lt;/FodTableSortLabel&gt;\n            &lt;/FodTh&gt;\n        &lt;/FodTHeadRow&gt;\n    &lt;/HeaderContent&gt;\n    &lt;RowTemplate&gt;\n        &lt;FodTr&gt;\n            &lt;FodTd&gt;\n                &lt;div&gt;\n                    &lt;FodText&gt;@context.Name&lt;/FodText&gt;\n                    &lt;FodText Typo=\"Typo.caption\"&gt;@context.Description&lt;/FodText&gt;\n                &lt;/div&gt;\n            &lt;/FodTd&gt;\n            &lt;FodTd&gt;@context.Price.ToString(\"C\")&lt;/FodTd&gt;\n            &lt;FodTd&gt;\n                &lt;FodChip Color=\"@GetStockColor(context.Stock)\" Size=\"FodSize.Small\"&gt;\n                    @context.Stock\n                &lt;/FodChip&gt;\n            &lt;/FodTd&gt;\n        &lt;/FodTr&gt;\n    &lt;/RowTemplate&gt;\n&lt;/FODTable&gt;\n\n@code {\n    private List&lt;Product&gt; products = new();\n    private int rowsPerPage = 10;\n\n    private async Task&lt;DataResponse&lt;Product&gt;&gt; LoadServerData(DataRequest request)\n    {\n        // Pentru date server-side, trimite request la API\n        var response = await ProductService.GetProducts(request);\n        return response;\n    }\n\n    private FodColor GetStockColor(int stock)\n    {\n        return stock switch\n        {\n            0 =&gt; FodColor.Error,\n            &lt; 10 =&gt; FodColor.Warning,\n            _ =&gt; FodColor.Success\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#serviciu-cu-filtrare-avansata","title":"Serviciu cu filtrare avansat\u0103","text":"<pre><code>public class AdvancedDataService&lt;T&gt;\n{\n    private readonly IDataRequestHandlerService&lt;T&gt; _dataHandler;\n\n    public DataResponse&lt;T&gt; GetFilteredData(\n        IEnumerable&lt;T&gt; source, \n        DataRequest request,\n        Dictionary&lt;string, Func&lt;T, bool&gt;&gt; customFilters)\n    {\n        // Aplicare filtre custom \u00eenainte de procesare standard\n        var filteredSource = source;\n\n        foreach (var filter in customFilters)\n        {\n            filteredSource = filteredSource.Where(filter.Value);\n        }\n\n        // Procesare standard\n        return _dataHandler.HandleRequest(filteredSource, request);\n    }\n\n    public DataResponse&lt;T&gt; GetDataWithComplexFilter&lt;TFilter&gt;(\n        IEnumerable&lt;T&gt; source,\n        DataRequest&lt;TFilter&gt; request) where TFilter : class\n    {\n        var baseRequest = new DataRequest\n        {\n            Page = request.Page,\n            PageSize = request.PageSize,\n            Sort = request.Sort,\n            SortDirection = request.SortDirection,\n            Keyword = request.Keyword,\n            SearchableColumns = request.SearchableColumns\n        };\n\n        // Aplicare filtru complex\n        if (request.Filter != null)\n        {\n            var filteredSource = ApplyComplexFilter(source, request.Filter);\n            return _dataHandler.HandleRequest(filteredSource, baseRequest);\n        }\n\n        return _dataHandler.HandleRequest(source, baseRequest);\n    }\n\n    private IEnumerable&lt;T&gt; ApplyComplexFilter&lt;TFilter&gt;(\n        IEnumerable&lt;T&gt; source, \n        TFilter filter) where TFilter : class\n    {\n        var query = source.AsQueryable();\n        var filterType = typeof(TFilter);\n        var itemType = typeof(T);\n\n        foreach (var filterProp in filterType.GetProperties())\n        {\n            var filterValue = filterProp.GetValue(filter);\n            if (filterValue == null) continue;\n\n            var itemProp = itemType.GetProperty(filterProp.Name);\n            if (itemProp == null) continue;\n\n            // Construire expresie de filtrare\n            var parameter = Expression.Parameter(itemType, \"x\");\n            var property = Expression.Property(parameter, itemProp);\n            var constant = Expression.Constant(filterValue);\n\n            Expression comparison;\n\n            if (filterValue is string strValue &amp;&amp; !string.IsNullOrEmpty(strValue))\n            {\n                // Pentru string folosim Contains\n                var containsMethod = typeof(string).GetMethod(\"Contains\", new[] { typeof(string) });\n                comparison = Expression.Call(property, containsMethod, constant);\n            }\n            else\n            {\n                // Pentru alte tipuri folosim Equal\n                comparison = Expression.Equal(property, constant);\n            }\n\n            var lambda = Expression.Lambda&lt;Func&lt;T, bool&gt;&gt;(comparison, parameter);\n            query = query.Where(lambda);\n        }\n\n        return query;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#7-extensii-pentru-datarequest","title":"7. Extensii pentru DataRequest","text":"<pre><code>public static class DataRequestExtensions\n{\n    public static DataRequest WithPaging(this DataRequest request, int page, int pageSize)\n    {\n        request.Page = page;\n        request.PageSize = pageSize;\n        return request;\n    }\n\n    public static DataRequest WithSort(this DataRequest request, string sortBy, \n        SortDirection direction = SortDirection.Ascending)\n    {\n        request.Sort = sortBy;\n        request.SortDirection = direction;\n        return request;\n    }\n\n    public static DataRequest WithSearch(this DataRequest request, string keyword, \n        params string[] searchableColumns)\n    {\n        request.Keyword = keyword;\n        request.SearchableColumns = searchableColumns?.ToList() ?? new List&lt;string&gt;();\n        return request;\n    }\n\n    public static DataRequest&lt;T&gt; WithFilter&lt;T&gt;(this DataRequest request, T filter) \n        where T : class\n    {\n        return new DataRequest&lt;T&gt;\n        {\n            Page = request.Page,\n            PageSize = request.PageSize,\n            Sort = request.Sort,\n            SortDirection = request.SortDirection,\n            Keyword = request.Keyword,\n            SearchableColumns = request.SearchableColumns,\n            Filter = filter\n        };\n    }\n}\n\n// Utilizare\nvar request = new DataRequest()\n    .WithPaging(1, 20)\n    .WithSort(\"Name\", SortDirection.Ascending)\n    .WithSearch(\"admin\", \"Name\", \"Email\", \"Role\");\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#8-server-side-implementation-pattern","title":"8. Server-side implementation pattern","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class UsersController : ControllerBase\n{\n    private readonly IUserService _userService;\n\n    [HttpPost(\"search\")]\n    public async Task&lt;ActionResult&lt;DataResponse&lt;UserDto&gt;&gt;&gt; Search([FromBody] DataRequest request)\n    {\n        try\n        {\n            // Construire query bazat pe DataRequest\n            var query = _userService.GetUsersQuery();\n\n            // Aplicare c\u0103utare\n            if (!string.IsNullOrWhiteSpace(request.Keyword))\n            {\n                var keyword = request.Keyword.ToLower();\n                query = query.Where(u =&gt; \n                    u.FullName.ToLower().Contains(keyword) ||\n                    u.Email.ToLower().Contains(keyword));\n            }\n\n            // Aplicare filtre\n            if (request.Filter != null)\n            {\n                var filter = JsonSerializer.Deserialize&lt;UserFilter&gt;(\n                    JsonSerializer.Serialize(request.Filter));\n\n                if (!string.IsNullOrEmpty(filter?.Role))\n                    query = query.Where(u =&gt; u.Role == filter.Role);\n\n                if (filter?.IsActive.HasValue == true)\n                    query = query.Where(u =&gt; u.IsActive == filter.IsActive.Value);\n            }\n\n            // Total \u00eenainte de paginare\n            var total = await query.CountAsync();\n\n            // Aplicare sortare\n            query = ApplySorting(query, request.Sort, request.SortDirection);\n\n            // Aplicare paginare\n            var items = await query\n                .Skip((request.Page - 1) * request.PageSize)\n                .Take(request.PageSize)\n                .Select(u =&gt; new UserDto\n                {\n                    Id = u.Id,\n                    FullName = u.FullName,\n                    Email = u.Email,\n                    Role = u.Role,\n                    IsActive = u.IsActive,\n                    CreatedDate = u.CreatedDate\n                })\n                .ToListAsync();\n\n            return Ok(new DataResponse&lt;UserDto&gt;\n            {\n                Items = items,\n                Total = total\n            });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Error searching users\");\n            return StatusCode(500, \"An error occurred while searching users\");\n        }\n    }\n\n    private IQueryable&lt;User&gt; ApplySorting(IQueryable&lt;User&gt; query, \n        string sortBy, SortDirection direction)\n    {\n        var parameter = Expression.Parameter(typeof(User), \"u\");\n        var property = Expression.Property(parameter, sortBy ?? \"Id\");\n        var lambda = Expression.Lambda(property, parameter);\n\n        var methodName = direction == SortDirection.Ascending ? \"OrderBy\" : \"OrderByDescending\";\n        var resultExpression = Expression.Call(\n            typeof(Queryable),\n            methodName,\n            new Type[] { typeof(User), property.Type },\n            query.Expression,\n            Expression.Quote(lambda));\n\n        return query.Provider.CreateQuery&lt;User&gt;(resultExpression);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#9-cache-pentru-rezultate","title":"9. Cache pentru rezultate","text":"<pre><code>public class CachedDataRequestHandler&lt;T&gt; : IDataRequestHandlerService&lt;T&gt;\n{\n    private readonly IDataRequestHandlerService&lt;T&gt; _innerHandler;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedDataRequestHandler&lt;T&gt;&gt; _logger;\n\n    public DataResponse&lt;T&gt; HandleRequest(IEnumerable&lt;T&gt; source, DataRequest request)\n    {\n        // Generare cache key\n        var cacheKey = GenerateCacheKey(source, request);\n\n        if (_cache.TryGetValue&lt;DataResponse&lt;T&gt;&gt;(cacheKey, out var cached))\n        {\n            _logger.LogDebug(\"Returning cached data for key: {CacheKey}\", cacheKey);\n            return cached;\n        }\n\n        var result = _innerHandler.HandleRequest(source, request);\n\n        // Cache pentru 5 minute\n        _cache.Set(cacheKey, result, new MemoryCacheEntryOptions\n        {\n            SlidingExpiration = TimeSpan.FromMinutes(5),\n            Size = EstimateSize(result)\n        });\n\n        return result;\n    }\n\n    private string GenerateCacheKey(IEnumerable&lt;T&gt; source, DataRequest request)\n    {\n        var sourceHash = source.GetHashCode();\n        var requestHash = HashCode.Combine(\n            request.Page,\n            request.PageSize,\n            request.Sort,\n            request.SortDirection,\n            request.Keyword,\n            request.Filter?.GetHashCode() ?? 0\n        );\n\n        return $\"DataRequest_{typeof(T).Name}_{sourceHash}_{requestHash}\";\n    }\n\n    private long EstimateSize(DataResponse&lt;T&gt; response)\n    {\n        // Estimare simpl\u0103: 1KB per item\n        return response.Items.Count() * 1024;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#10-monitorizare-performanta","title":"10. Monitorizare performan\u021b\u0103","text":"<pre><code>public class MonitoredDataRequestHandler&lt;T&gt; : IDataRequestHandlerService&lt;T&gt;\n{\n    private readonly IDataRequestHandlerService&lt;T&gt; _innerHandler;\n    private readonly IMetricsCollector _metrics;\n\n    public DataResponse&lt;T&gt; HandleRequest(IEnumerable&lt;T&gt; source, DataRequest request)\n    {\n        using var activity = Activity.StartActivity(\"DataRequestHandler.HandleRequest\");\n        activity?.SetTag(\"item.type\", typeof(T).Name);\n        activity?.SetTag(\"request.page\", request.Page);\n        activity?.SetTag(\"request.pageSize\", request.PageSize);\n\n        var stopwatch = Stopwatch.StartNew();\n\n        try\n        {\n            var sourceCount = source.Count();\n            activity?.SetTag(\"source.count\", sourceCount);\n\n            var result = _innerHandler.HandleRequest(source, request);\n\n            stopwatch.Stop();\n\n            _metrics.RecordHistogram(\n                \"data_request_duration\",\n                stopwatch.ElapsedMilliseconds,\n                new KeyValuePair&lt;string, object&gt;(\"type\", typeof(T).Name),\n                new KeyValuePair&lt;string, object&gt;(\"source_count\", sourceCount),\n                new KeyValuePair&lt;string, object&gt;(\"result_count\", result.Items.Count())\n            );\n\n            activity?.SetTag(\"result.count\", result.Items.Count());\n            activity?.SetTag(\"result.total\", result.Total);\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            activity?.RecordException(ex);\n            _metrics.RecordCounter(\"data_request_errors\", 1,\n                new KeyValuePair&lt;string, object&gt;(\"type\", typeof(T).Name));\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class DataRequestHandlerServiceTests\n{\n    private IDataRequestHandlerService&lt;TestItem&gt; _handler;\n    private List&lt;TestItem&gt; _testData;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _handler = new DataRequestHandlerService&lt;TestItem&gt;();\n        _testData = GenerateTestData(100);\n    }\n\n    [TestMethod]\n    public void HandleRequest_WithPaging_ReturnsCorrectPage()\n    {\n        // Arrange\n        var request = new DataRequest\n        {\n            Page = 2,\n            PageSize = 10\n        };\n\n        // Act\n        var result = _handler.HandleRequest(_testData, request);\n\n        // Assert\n        Assert.AreEqual(10, result.Items.Count());\n        Assert.AreEqual(100, result.Total);\n        Assert.AreEqual(\"Item 11\", result.Items.First().Name);\n    }\n\n    [TestMethod]\n    public void HandleRequest_WithKeywordSearch_FiltersCorrectly()\n    {\n        // Arrange\n        var request = new DataRequest\n        {\n            Page = 1,\n            PageSize = 50,\n            Keyword = \"special\",\n            SearchableColumns = new List&lt;string&gt; { \"Name\", \"Description\" }\n        };\n\n        // Act\n        var result = _handler.HandleRequest(_testData, request);\n\n        // Assert\n        Assert.IsTrue(result.Items.All(i =&gt; \n            i.Name.Contains(\"special\", StringComparison.OrdinalIgnoreCase) ||\n            i.Description.Contains(\"special\", StringComparison.OrdinalIgnoreCase)));\n    }\n\n    [TestMethod]\n    public void HandleRequest_WithSorting_SortsCorrectly()\n    {\n        // Arrange\n        var request = new DataRequest\n        {\n            Page = 1,\n            PageSize = 100,\n            Sort = \"Value\",\n            SortDirection = SortDirection.Descending\n        };\n\n        // Act\n        var result = _handler.HandleRequest(_testData, request);\n        var items = result.Items.ToList();\n\n        // Assert\n        for (int i = 1; i &lt; items.Count; i++)\n        {\n            Assert.IsTrue(items[i - 1].Value &gt;= items[i].Value);\n        }\n    }\n\n    private List&lt;TestItem&gt; GenerateTestData(int count)\n    {\n        return Enumerable.Range(1, count)\n            .Select(i =&gt; new TestItem\n            {\n                Id = i,\n                Name = $\"Item {i}\",\n                Description = i % 10 == 0 ? \"Special item\" : \"Regular item\",\n                Value = Random.Shared.Next(1, 1000)\n            })\n            .ToList();\n    }\n}\n\npublic class TestItem\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Description { get; set; }\n    public int Value { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/DataRequestHandlerService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Paginare obligatorie - \u00centotdeauna folosi\u021bi paginare pentru seturi mari de date</li> <li>C\u0103utare indexat\u0103 - Pentru performan\u021b\u0103, indexa\u021bi c\u00e2mpurile searchable</li> <li>Filtre type-safe - Folosi\u021bi DataRequest pentru filtre complexe <li>Cache rezultate - Cache-ui\u021bi rezultatele pentru date statice</li> <li>Limitare rezultate - Seta\u021bi un PageSize maxim (ex: 100)</li> <li>Validare sort fields - Valida\u021bi c\u0103 proprietatea de sortare exist\u0103</li> <li>Monitorizare - Urm\u0103ri\u021bi performan\u021ba pentru query-uri grele</li>"},{"location":"fod/servicii/DataRequestHandlerService/#13-concluzie","title":"13. Concluzie","text":"<p><code>DataRequestHandlerService</code> ofer\u0103 o solu\u021bie complet\u0103 \u0219i flexibil\u0103 pentru procesarea cererilor de date \u00een aplica\u021biile FOD. Cu suport pentru toate opera\u021biunile comune de manipulare a datelor \u0219i o arhitectur\u0103 extensibil\u0103, serviciul faciliteaz\u0103 implementarea rapid\u0103 a func\u021bionalit\u0103\u021bilor de listare, c\u0103utare \u0219i filtrare at\u00e2t pentru scenarii client-side c\u00e2t \u0219i server-side.</p>"},{"location":"fod/servicii/EstimatedDateCalculator/","title":"EstimatedDateCalculator","text":""},{"location":"fod/servicii/EstimatedDateCalculator/#documentatie-pentru-serviciul-estimateddatecalculator","title":"Documenta\u021bie pentru serviciul EstimatedDateCalculator","text":""},{"location":"fod/servicii/EstimatedDateCalculator/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>EstimatedDateCalculator</code> este un serviciu server-side care calculeaz\u0103 date estimate de finalizare pentru cereri, \u021bin\u00e2nd cont de programul de lucru, zilele nelucr\u0103toare \u0219i timpul necesar pentru procesare. Serviciul utilizeaz\u0103 un algoritm recursiv pentru a calcula cu precizie timpul de lucru disponibil.</p> <p>Caracteristici principale: - Calcul date estimate bazat pe program de lucru - Suport pentru zile calendaristice \u0219i zile lucr\u0103toare - Integrare cu serviciul de program de lucru - Calcul recursiv pentru perioade mari de timp - Configurare flexibil\u0103 prin FodConfiguration - Suport pentru parametri personaliza\u021bi</p>"},{"location":"fod/servicii/EstimatedDateCalculator/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs (server-side)\nbuilder.Services.Configure&lt;FodConfiguration&gt;(configuration);\nbuilder.Services.AddScoped&lt;IWorkingProgramService, DefaultWorkingProgramService&gt;();\nbuilder.Services.AddScoped&lt;IWorkingProgramService, EightToFiveWorkingProgramService&gt;();\nbuilder.Services.AddScoped&lt;IEstimatedDateCalculator, EstimatedDateCalculator&gt;();\n\n// Configurare \u00een appsettings.json\n{\n  \"FodConfiguration\": {\n    \"Services\": {\n      \"UseEightToFiveWorkingProgramService\": false\n    }\n  }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IEstimatedDateCalculator\n{\n    DateTime Calculate(DateTime dataTime, double secondsToAdd, double secondFromOpening = 0, IDictionary&lt;string, object&gt;? @params = null);\n    DateTime CalculateCalendarDays(DateTime startDate, int calendarDaysToAdd);\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#4-metode-disponibile","title":"4. Metode Disponibile","text":""},{"location":"fod/servicii/EstimatedDateCalculator/#calculate","title":"Calculate","text":"<p>Calculeaz\u0103 data estimat\u0103 ad\u0103ug\u00e2nd un num\u0103r de secunde la o dat\u0103 de start, \u021bin\u00e2nd cont de programul de lucru.</p> <p>Parametri: - <code>dataTime</code> (DateTime) - Data \u0219i ora de start - <code>secondsToAdd</code> (double) - Num\u0103rul de secunde de ad\u0103ugat (timp de lucru) - <code>secondFromOpening</code> (double, op\u021bional) - Num\u0103r minim de secunde de la deschidere - <code>@params</code> (IDictionary?, op\u021bional) - Parametri personaliza\u021bi pentru programul de lucru <p>Returneaz\u0103: - <code>DateTime</code> - Data \u0219i ora estimat\u0103 de finalizare</p>"},{"location":"fod/servicii/EstimatedDateCalculator/#calculatecalendardays","title":"CalculateCalendarDays","text":"<p>Adaug\u0103 un num\u0103r de zile calendaristice la o dat\u0103 de start.</p> <p>Parametri: - <code>startDate</code> (DateTime) - Data de start - <code>calendarDaysToAdd</code> (int) - Num\u0103rul de zile calendaristice de ad\u0103ugat</p> <p>Returneaz\u0103: - <code>DateTime</code> - Data rezultat\u0103</p>"},{"location":"fod/servicii/EstimatedDateCalculator/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/EstimatedDateCalculator/#calcul-simplu-termen-estimat","title":"Calcul simplu termen estimat","text":"<pre><code>public class ServiceRequestService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n\n    public ServiceRequestService(IEstimatedDateCalculator calculator)\n    {\n        _calculator = calculator;\n    }\n\n    public DateTime CalculateDeliveryDate(ServiceRequest request)\n    {\n        // 3 zile lucr\u0103toare = 3 * 8 ore * 3600 secunde\n        var workingSeconds = 3 * 8 * 3600;\n\n        var estimatedDate = _calculator.Calculate(\n            DateTime.Now, \n            workingSeconds\n        );\n\n        return estimatedDate;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#calcul-cu-timp-minim-de-la-deschidere","title":"Calcul cu timp minim de la deschidere","text":"<pre><code>public class UrgentRequestService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n\n    public DateTime CalculateUrgentDelivery(UrgentRequest request)\n    {\n        // 4 ore de procesare\n        var processingSeconds = 4 * 3600;\n\n        // Minimum 30 minute de la deschiderea programului\n        var minSecondsFromOpening = 30 * 60;\n\n        var estimatedDate = _calculator.Calculate(\n            request.SubmittedAt,\n            processingSeconds,\n            minSecondsFromOpening\n        );\n\n        return estimatedDate;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#calcul-pentru-diferite-tipuri-de-servicii","title":"Calcul pentru diferite tipuri de servicii","text":"<pre><code>public class EstimationService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n    private readonly IServiceRepository _serviceRepository;\n\n    public async Task&lt;ServiceEstimation&gt; EstimateCompletion(\n        string serviceId, \n        DateTime startDate)\n    {\n        var service = await _serviceRepository.GetById(serviceId);\n\n        DateTime estimatedDate;\n\n        if (service.UseCalendarDays)\n        {\n            // Pentru servicii care folosesc zile calendaristice\n            estimatedDate = _calculator.CalculateCalendarDays(\n                startDate, \n                service.EstimatedDays\n            );\n        }\n        else\n        {\n            // Pentru servicii care folosesc ore lucr\u0103toare\n            var workingSeconds = service.EstimatedHours * 3600;\n            estimatedDate = _calculator.Calculate(\n                startDate, \n                workingSeconds\n            );\n        }\n\n        return new ServiceEstimation\n        {\n            ServiceId = serviceId,\n            StartDate = startDate,\n            EstimatedCompletionDate = estimatedDate,\n            WorkingDaysRequired = CalculateWorkingDays(startDate, estimatedDate)\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#6-calcul-complex-cu-parametri-personalizati","title":"6. Calcul complex cu parametri personaliza\u021bi","text":"<pre><code>public class CustomWorkingHoursService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n\n    public DateTime CalculateWithCustomSchedule(\n        DateTime startDate,\n        double hoursRequired,\n        string departmentId)\n    {\n        // Parametri personaliza\u021bi pentru program de lucru specific\n        var customParams = new Dictionary&lt;string, object&gt;\n        {\n            [\"DepartmentId\"] = departmentId,\n            [\"UseExtendedHours\"] = true,\n            [\"IncludeSaturdays\"] = true\n        };\n\n        var secondsRequired = hoursRequired * 3600;\n\n        return _calculator.Calculate(\n            startDate,\n            secondsRequired,\n            0,\n            customParams\n        );\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#7-integrare-cu-sistem-de-notificari","title":"7. Integrare cu sistem de notific\u0103ri","text":"<pre><code>public class DeadlineNotificationService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n    private readonly INotificationService _notificationService;\n\n    public async Task ScheduleDeadlineNotifications(\n        ServiceRequest request)\n    {\n        // Calculeaz\u0103 deadline-ul\n        var deadline = _calculator.Calculate(\n            request.CreatedAt,\n            request.EstimatedSeconds\n        );\n\n        // Notificare cu 24 ore \u00eenainte (\u00een ore lucr\u0103toare)\n        var warningDate = _calculator.Calculate(\n            deadline,\n            -8 * 3600 // -8 ore lucr\u0103toare\n        );\n\n        // Notificare cu 1 or\u0103 \u00eenainte\n        var urgentDate = _calculator.Calculate(\n            deadline,\n            -3600 // -1 or\u0103 lucr\u0103toare\n        );\n\n        // Programeaz\u0103 notific\u0103rile\n        await _notificationService.Schedule(new[]\n        {\n            new ScheduledNotification\n            {\n                SendAt = warningDate,\n                Type = NotificationType.DeadlineWarning,\n                RequestId = request.Id,\n                Message = $\"Cererea {request.OrderNumber} trebuie finalizat\u0103 p\u00e2n\u0103 la {deadline:dd.MM.yyyy HH:mm}\"\n            },\n            new ScheduledNotification\n            {\n                SendAt = urgentDate,\n                Type = NotificationType.DeadlineUrgent,\n                RequestId = request.Id,\n                Message = $\"URGENT: Cererea {request.OrderNumber} expir\u0103 \u00een 1 or\u0103!\"\n            }\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#8-algoritm-de-calcul-recursiv","title":"8. Algoritm de calcul recursiv","text":"<p>Serviciul utilizeaz\u0103 un algoritm recursiv pentru calculul precis:</p> <pre><code>public class EstimationExampleService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n\n    public void DemonstrateAlgorithm()\n    {\n        // Exemplu: 20 ore de lucru \u00eencep\u00e2nd de vineri la ora 15:00\n        var startDate = new DateTime(2024, 6, 28, 15, 0, 0); // Vineri\n        var hoursToAdd = 20;\n        var secondsToAdd = hoursToAdd * 3600;\n\n        var result = _calculator.Calculate(startDate, secondsToAdd);\n\n        // Algoritmul va calcula astfel:\n        // 1. Vineri 15:00-17:00 = 2 ore disponibile\n        // 2. Luni 09:00-17:00 = 8 ore\n        // 3. Mar\u021bi 09:00-17:00 = 8 ore\n        // 4. Miercuri 09:00-11:00 = 2 ore (total 20 ore)\n        // Rezultat: Miercuri, 11:00\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#9-validare-si-tratare-erori","title":"9. Validare \u0219i tratare erori","text":"<pre><code>public class SafeEstimationService\n{\n    private readonly IEstimatedDateCalculator _calculator;\n    private readonly ILogger&lt;SafeEstimationService&gt; _logger;\n\n    public async Task&lt;EstimationResult&gt; SafeCalculateEstimation(\n        EstimationRequest request)\n    {\n        try\n        {\n            // Validare input\n            if (request.StartDate &lt; DateTime.Now.AddYears(-1))\n            {\n                return new EstimationResult\n                {\n                    Success = false,\n                    Error = \"Data de start este prea veche\"\n                };\n            }\n\n            if (request.HoursRequired &gt; 8760) // Mai mult de 1 an\n            {\n                return new EstimationResult\n                {\n                    Success = false,\n                    Error = \"Timpul solicitat dep\u0103\u0219e\u0219te limita maxim\u0103\"\n                };\n            }\n\n            var estimatedDate = _calculator.Calculate(\n                request.StartDate,\n                request.HoursRequired * 3600\n            );\n\n            return new EstimationResult\n            {\n                Success = true,\n                EstimatedDate = estimatedDate,\n                WorkingDays = CalculateWorkingDays(request.StartDate, estimatedDate)\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la calculul estim\u0103rii\");\n            return new EstimationResult\n            {\n                Success = false,\n                Error = \"Eroare la calculul datei estimate\"\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#10-testing","title":"10. Testing","text":"<pre><code>[TestClass]\npublic class EstimatedDateCalculatorTests\n{\n    private IEstimatedDateCalculator _calculator;\n    private Mock&lt;IWorkingProgramService&gt; _mockWorkingProgram;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _mockWorkingProgram = new Mock&lt;IWorkingProgramService&gt;();\n        var config = Options.Create(new FodConfiguration\n        {\n            Services = new ServicesConfiguration\n            {\n                UseEightToFiveWorkingProgramService = false\n            }\n        });\n\n        _calculator = new EstimatedDateCalculator(\n            new[] { _mockWorkingProgram.Object },\n            config\n        );\n    }\n\n    [TestMethod]\n    public void Calculate_WithinSameDay_ReturnsCorrectTime()\n    {\n        // Arrange\n        var startDate = new DateTime(2024, 6, 30, 10, 0, 0);\n        var secondsToAdd = 2 * 3600; // 2 ore\n\n        _mockWorkingProgram.Setup(x =&gt; x.GetCurrentWorkingDayOpening(It.IsAny&lt;DateTime&gt;(), null))\n            .Returns(new DateTime(2024, 6, 30, 9, 0, 0));\n        _mockWorkingProgram.Setup(x =&gt; x.GetCurrentWorkingDayClosing(It.IsAny&lt;DateTime&gt;(), null))\n            .Returns(new DateTime(2024, 6, 30, 17, 0, 0));\n\n        // Act\n        var result = _calculator.Calculate(startDate, secondsToAdd);\n\n        // Assert\n        Assert.AreEqual(new DateTime(2024, 6, 30, 12, 0, 0), result);\n    }\n\n    [TestMethod]\n    public void CalculateCalendarDays_AddsCorrectly()\n    {\n        // Arrange\n        var startDate = new DateTime(2024, 6, 28); // Vineri\n        var daysToAdd = 5;\n\n        // Act\n        var result = _calculator.CalculateCalendarDays(startDate, daysToAdd);\n\n        // Assert\n        Assert.AreEqual(new DateTime(2024, 7, 3), result); // Miercuri\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Cache rezultate: Pentru calcule repetitive, considera\u021bi cache-uirea rezultatelor</li> <li>Parametri consisten\u021bi: Folosi\u021bi aceia\u0219i parametri pentru calcule legate</li> <li>Validare input: Valida\u021bi \u00eentotdeauna datele de intrare</li> <li>Logging: Loga\u021bi calculele complexe pentru debugging</li> <li>Timezone: Folosi\u021bi UTC pentru aplica\u021bii interna\u021bionale</li> <li>Testare: Testa\u021bi cu diferite scenarii de program de lucru</li> </ol>"},{"location":"fod/servicii/EstimatedDateCalculator/#12-configurare-program-de-lucru-personalizat","title":"12. Configurare program de lucru personalizat","text":"<pre><code>public class CustomWorkingProgramService : IWorkingProgramService\n{\n    private readonly IConfiguration _configuration;\n\n    public DateTime? GetCurrentWorkingDayOpening(\n        DateTime date, \n        IDictionary&lt;string, object&gt;? @params)\n    {\n        // Implementare personalizat\u0103 bazat\u0103 pe parametri\n        if (@params?.ContainsKey(\"UseExtendedHours\") == true)\n        {\n            return date.Date.AddHours(7); // 07:00\n        }\n\n        return date.Date.AddHours(9); // 09:00 implicit\n    }\n\n    public DateTime? GetCurrentWorkingDayClosing(\n        DateTime? date, \n        IDictionary&lt;string, object&gt;? @params)\n    {\n        if (@params?.ContainsKey(\"UseExtendedHours\") == true)\n        {\n            return date?.Date.AddHours(20); // 20:00\n        }\n\n        return date?.Date.AddHours(17); // 17:00 implicit\n    }\n\n    public DateTime? GetNextWorkingDayOpening(\n        DateTime date, \n        IDictionary&lt;string, object&gt;? @params)\n    {\n        // Logic\u0103 pentru urm\u0103toarea zi lucr\u0103toare\n        var nextDay = date.Date.AddDays(1);\n\n        while (IsWeekend(nextDay) || IsHoliday(nextDay))\n        {\n            nextDay = nextDay.AddDays(1);\n        }\n\n        return GetCurrentWorkingDayOpening(nextDay, @params);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/EstimatedDateCalculator/#13-concluzie","title":"13. Concluzie","text":"<p><code>EstimatedDateCalculator</code> ofer\u0103 un sistem robust pentru calculul datelor estimate \u00een aplica\u021biile FOD, integr\u00e2ndu-se perfect cu sistemul de program de lucru. Algoritmul recursiv asigur\u0103 calcule precise chiar \u0219i pentru perioade lungi de timp, iar suportul pentru parametri personaliza\u021bi permite adaptarea la diferite scenarii de business.</p>"},{"location":"fod/servicii/ExceptionDaysService/","title":"ExceptionDaysService","text":""},{"location":"fod/servicii/ExceptionDaysService/#documentatie-pentru-serviciul-exceptiondaysservice","title":"Documenta\u021bie pentru serviciul ExceptionDaysService","text":""},{"location":"fod/servicii/ExceptionDaysService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ExceptionDaysService</code> este un serviciu pentru gestionarea programului de lucru \u0219i a zilelor excep\u021bionale pentru institu\u021biile guvernamentale. Permite configurarea orarului standard s\u0103pt\u0103m\u00e2nal \u0219i definirea excep\u021biilor precum s\u0103rb\u0103tori legale, zile scurte sau zile lucr\u0103toare speciale.</p> <p>Caracteristici principale: - Gestionare program de lucru standard (Luni-Duminic\u0103) - Definire zile excep\u021bionale (s\u0103rb\u0103tori, zile scurte, zile lucr\u0103toare speciale) - CRUD complet pentru excep\u021bii - Suport pentru paginare server-side - Validare ore de lucru - Integrare cu componenta FodExceptionDays</p>"},{"location":"fod/servicii/ExceptionDaysService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IExceptionDaysService, ExceptionDaysService&gt;();\nbuilder.Services.AddHttpClient&lt;IExceptionDaysService, ExceptionDaysService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#3-interfata-iexceptiondaysservice","title":"3. Interfa\u021ba IExceptionDaysService","text":"<pre><code>public interface IExceptionDaysService\n{\n    Task&lt;DataResponse&lt;WorkProgramModel&gt;&gt; GetFormatted(DataRequest request);\n    Task&lt;DataResponse&lt;ExceptionWorkingProgramModel&gt;&gt; GetExceptions(DataRequest request);\n    Task AddOrUpdateException(ExceptionWorkingProgramDetailsModel model);\n    Task&lt;ExceptionWorkingProgramDetailsModel&gt; GetExceptionById(Guid id);\n    Task Delete(Guid id);\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>GetFormatted</code> <code>DataRequest request</code> <code>Task&lt;DataResponse&lt;WorkProgramModel&gt;&gt;</code> Ob\u021bine programul de lucru formatat <code>GetExceptions</code> <code>DataRequest request</code> <code>Task&lt;DataResponse&lt;ExceptionWorkingProgramModel&gt;&gt;</code> Ob\u021bine lista de excep\u021bii cu paginare <code>AddOrUpdateException</code> <code>ExceptionWorkingProgramDetailsModel model</code> <code>Task</code> Adaug\u0103 sau actualizeaz\u0103 o excep\u021bie <code>GetExceptionById</code> <code>Guid id</code> <code>Task&lt;ExceptionWorkingProgramDetailsModel&gt;</code> Ob\u021bine detaliile unei excep\u021bii <code>Delete</code> <code>Guid id</code> <code>Task</code> \u0218terge o excep\u021bie"},{"location":"fod/servicii/ExceptionDaysService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/ExceptionDaysService/#workprogrammodel","title":"WorkProgramModel","text":"<pre><code>public class WorkProgramModel\n{\n    public DayEnum Day { get; set; }\n    public string Open { get; set; }      // Format: \"HH:mm\"\n    public string Close { get; set; }     // Format: \"HH:mm\"\n    public string Pause { get; set; }     // Format: \"HH:mm - HH:mm\"\n}\n\npublic enum DayEnum\n{\n    Monday = 1,\n    Tuesday = 2,\n    Wednesday = 3,\n    Thursday = 4,\n    Friday = 5,\n    Saturday = 6,\n    Sunday = 7\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#exceptionworkingprogrammodel","title":"ExceptionWorkingProgramModel","text":"<pre><code>public class ExceptionWorkingProgramModel\n{\n    public Guid Id { get; set; }\n    public ExceptionTypeEnum Type { get; set; }\n    public string Date { get; set; }      // Format: \"dd.MM.yyyy\"\n    public string Open { get; set; }      // Format: \"HH:mm\"\n    public string Close { get; set; }     // Format: \"HH:mm\"\n}\n\npublic enum ExceptionTypeEnum\n{\n    WorkingDay = 0,    // Zi lucr\u0103toare (\u00een weekend/s\u0103rb\u0103toare)\n    Holiday = 1,       // S\u0103rb\u0103toare legal\u0103\n    ShortDay = 2       // Zi scurt\u0103\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#exceptionworkingprogramdetailsmodel","title":"ExceptionWorkingProgramDetailsModel","text":"<pre><code>public class ExceptionWorkingProgramDetailsModel\n{\n    public Guid? Id { get; set; }\n    public ExceptionTypeEnum Type { get; set; }\n    public DateTime Date { get; set; }\n    public int? OpenHours { get; set; }\n    public int? OpenMinutes { get; set; }\n    public int? CloseHours { get; set; }\n    public int? CloseMinutes { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/ExceptionDaysService/#afisare-program-de-lucru-complet","title":"Afi\u0219are program de lucru complet","text":"<pre><code>@page \"/admin/program-lucru\"\n@inject IExceptionDaysService ExceptionDaysService\n@inject IFodNotificationService NotificationService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Program de Lucru\n    &lt;/FodText&gt;\n\n    &lt;!-- Program standard --&gt;\n    &lt;FodCard Class=\"mb-4\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Orar Standard S\u0103pt\u0103m\u00e2nal\n            &lt;/FodText&gt;\n\n            @if (workingProgram != null)\n            {\n                &lt;FodDataTable Items=\"@workingProgram\" Dense=\"true\"&gt;\n                    &lt;HeaderContent&gt;\n                        &lt;FodTHeadRow&gt;\n                            &lt;FodTh&gt;Zi&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Deschidere&lt;/FodTh&gt;\n                            &lt;FodTh&gt;\u00cenchidere&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Pauz\u0103&lt;/FodTh&gt;\n                        &lt;/FodTHeadRow&gt;\n                    &lt;/HeaderContent&gt;\n                    &lt;RowTemplate&gt;\n                        &lt;FodTr&gt;\n                            &lt;FodTd&gt;@GetDayName(context.Day)&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Open&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Close&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Pause&lt;/FodTd&gt;\n                        &lt;/FodTr&gt;\n                    &lt;/RowTemplate&gt;\n                &lt;/FodDataTable&gt;\n            }\n            else\n            {\n                &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    &lt;!-- Zile excep\u021bionale --&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;div class=\"d-flex justify-content-between align-items-center mb-3\"&gt;\n                &lt;FodText Typo=\"Typo.h6\"&gt;\n                    Zile Excep\u021bionale\n                &lt;/FodText&gt;\n                &lt;FodButton Color=\"FodColor.Primary\" \n                           OnClick=\"ShowAddExceptionModal\"\n                           StartIcon=\"@FodIcons.Material.Filled.Add\"&gt;\n                    Adaug\u0103 Excep\u021bie\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n\n            &lt;FodExceptionDays @ref=\"exceptionDaysComponent\" /&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n&lt;!-- Modal pentru ad\u0103ugare/editare excep\u021bie --&gt;\n&lt;FodModal @bind-IsOpen=\"showExceptionModal\"&gt;\n    &lt;FodModalContent&gt;\n        &lt;FodModalHeader&gt;\n            &lt;FodText Typo=\"Typo.h5\"&gt;\n                @(editingException?.Id == null ? \"Adaug\u0103\" : \"Editeaz\u0103\") Excep\u021bie\n            &lt;/FodText&gt;\n        &lt;/FodModalHeader&gt;\n        &lt;FodModalBody&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                    &lt;FodSelect @bind-Value=\"editingException.Type\" \n                               Label=\"Tip excep\u021bie\"\n                               Items=\"@exceptionTypes\"\n                               Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                    &lt;FodDatePicker @bind-Date=\"editingException.Date\" \n                                   Label=\"Data\"\n                                   MinDate=\"DateTime.Today\"\n                                   Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                @if (editingException.Type != ExceptionTypeEnum.Holiday)\n                {\n                    &lt;FodGrid Item=\"true\" xs=\"6\"&gt;\n                        &lt;FodTimePicker @bind-Time=\"openTime\" \n                                       Label=\"Ora deschidere\"\n                                       Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"6\"&gt;\n                        &lt;FodTimePicker @bind-Time=\"closeTime\" \n                                       Label=\"Ora \u00eenchidere\"\n                                       Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                }\n            &lt;/FodGrid&gt;\n        &lt;/FodModalBody&gt;\n        &lt;FodModalActions&gt;\n            &lt;FodButton Color=\"FodColor.Default\" OnClick=\"CloseModal\"&gt;\n                Anuleaz\u0103\n            &lt;/FodButton&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"SaveException\"&gt;\n                Salveaz\u0103\n            &lt;/FodButton&gt;\n        &lt;/FodModalActions&gt;\n    &lt;/FodModalContent&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private List&lt;WorkProgramModel&gt; workingProgram;\n    private FodExceptionDays exceptionDaysComponent;\n    private bool showExceptionModal;\n    private ExceptionWorkingProgramDetailsModel editingException = new();\n    private TimeSpan? openTime;\n    private TimeSpan? closeTime;\n\n    private List&lt;SelectableItem&gt; exceptionTypes = new()\n    {\n        new(ExceptionTypeEnum.Holiday, \"S\u0103rb\u0103toare legal\u0103\"),\n        new(ExceptionTypeEnum.ShortDay, \"Zi scurt\u0103\"),\n        new(ExceptionTypeEnum.WorkingDay, \"Zi lucr\u0103toare (excep\u021bional)\")\n    };\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadWorkingProgram();\n    }\n\n    private async Task LoadWorkingProgram()\n    {\n        var request = new DataRequest { Page = 1, PageSize = 7 };\n        var response = await ExceptionDaysService.GetFormatted(request);\n        workingProgram = response.Data.ToList();\n    }\n\n    private string GetDayName(DayEnum day)\n    {\n        return day switch\n        {\n            DayEnum.Monday =&gt; \"Luni\",\n            DayEnum.Tuesday =&gt; \"Mar\u021bi\",\n            DayEnum.Wednesday =&gt; \"Miercuri\",\n            DayEnum.Thursday =&gt; \"Joi\",\n            DayEnum.Friday =&gt; \"Vineri\",\n            DayEnum.Saturday =&gt; \"S\u00e2mb\u0103t\u0103\",\n            DayEnum.Sunday =&gt; \"Duminic\u0103\",\n            _ =&gt; day.ToString()\n        };\n    }\n\n    private void ShowAddExceptionModal()\n    {\n        editingException = new ExceptionWorkingProgramDetailsModel\n        {\n            Date = DateTime.Today.AddDays(1)\n        };\n        openTime = new TimeSpan(8, 0, 0);\n        closeTime = new TimeSpan(17, 0, 0);\n        showExceptionModal = true;\n    }\n\n    private async Task SaveException()\n    {\n        if (editingException.Type != ExceptionTypeEnum.Holiday)\n        {\n            editingException.OpenHours = openTime?.Hours;\n            editingException.OpenMinutes = openTime?.Minutes;\n            editingException.CloseHours = closeTime?.Hours;\n            editingException.CloseMinutes = closeTime?.Minutes;\n        }\n\n        try\n        {\n            await ExceptionDaysService.AddOrUpdateException(editingException);\n            NotificationService.Success(\"Excep\u021bie salvat\u0103 cu succes!\");\n\n            // Re\u00eencarc\u0103 lista\n            await exceptionDaysComponent.RefreshData();\n            CloseModal();\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la salvare: {ex.Message}\");\n        }\n    }\n\n    private void CloseModal()\n    {\n        showExceptionModal = false;\n        editingException = new();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#gestionare-sarbatori-legale","title":"Gestionare s\u0103rb\u0103tori legale","text":"<pre><code>@inject IExceptionDaysService ExceptionDaysService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            S\u0103rb\u0103tori Legale @currentYear\n        &lt;/FodText&gt;\n\n        &lt;FodButton OnClick=\"ImportHolidays\" \n                   Color=\"FodColor.Primary\"\n                   StartIcon=\"@FodIcons.Material.Filled.CloudDownload\"&gt;\n            Import\u0103 S\u0103rb\u0103tori Oficiale\n        &lt;/FodButton&gt;\n\n        @if (holidays.Any())\n        {\n            &lt;FodList Class=\"mt-3\"&gt;\n                @foreach (var holiday in holidays.OrderBy(h =&gt; h.Date))\n                {\n                    &lt;FodListItem&gt;\n                        &lt;FodListItemIcon&gt;\n                            &lt;FodIcon&gt;@FodIcons.Material.Filled.EventBusy&lt;/FodIcon&gt;\n                        &lt;/FodListItemIcon&gt;\n                        &lt;FodListItemText&gt;\n                            &lt;FodText&gt;@holiday.Date.ToString(\"dd MMMM yyyy\")&lt;/FodText&gt;\n                        &lt;/FodListItemText&gt;\n                        &lt;FodListItemSecondaryAction&gt;\n                            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\"\n                                           Size=\"FodSize.Small\"\n                                           OnClick=\"() =&gt; DeleteHoliday(holiday.Id)\" /&gt;\n                        &lt;/FodListItemSecondaryAction&gt;\n                    &lt;/FodListItem&gt;\n                }\n            &lt;/FodList&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private int currentYear = DateTime.Now.Year;\n    private List&lt;ExceptionWorkingProgramDetailsModel&gt; holidays = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadHolidays();\n    }\n\n    private async Task LoadHolidays()\n    {\n        var request = new DataRequest\n        {\n            Page = 1,\n            PageSize = 100,\n            Filters = new List&lt;Filter&gt;\n            {\n                new Filter\n                {\n                    Field = \"Type\",\n                    Operator = FilterOperator.Equal,\n                    Value = ExceptionTypeEnum.Holiday\n                },\n                new Filter\n                {\n                    Field = \"Year\",\n                    Operator = FilterOperator.Equal,\n                    Value = currentYear\n                }\n            }\n        };\n\n        var response = await ExceptionDaysService.GetExceptions(request);\n        holidays = response.Data\n            .Select(async h =&gt; await ExceptionDaysService.GetExceptionById(h.Id))\n            .Select(t =&gt; t.Result)\n            .ToList();\n    }\n\n    private async Task ImportHolidays()\n    {\n        // Lista s\u0103rb\u0103tori legale standard pentru Moldova\n        var standardHolidays = new[]\n        {\n            new { Date = new DateTime(currentYear, 1, 1), Name = \"Anul Nou\" },\n            new { Date = new DateTime(currentYear, 1, 7), Name = \"Na\u0219terea lui Iisus Hristos\" },\n            new { Date = new DateTime(currentYear, 1, 8), Name = \"Na\u0219terea lui Iisus Hristos\" },\n            new { Date = new DateTime(currentYear, 3, 8), Name = \"Ziua interna\u021bional\u0103 a femeii\" },\n            new { Date = new DateTime(currentYear, 5, 1), Name = \"Ziua interna\u021bional\u0103 a solidarit\u0103\u021bii oamenilor muncii\" },\n            new { Date = new DateTime(currentYear, 5, 9), Name = \"Ziua Victoriei \u0219i a comemor\u0103rii eroilor\" },\n            new { Date = new DateTime(currentYear, 6, 1), Name = \"Ziua Copilului\" },\n            new { Date = new DateTime(currentYear, 8, 27), Name = \"Ziua Independen\u021bei\" },\n            new { Date = new DateTime(currentYear, 8, 31), Name = \"Limba noastr\u0103\" },\n            new { Date = new DateTime(currentYear, 12, 25), Name = \"Na\u0219terea lui Iisus Hristos\" }\n        };\n\n        foreach (var holiday in standardHolidays)\n        {\n            // Verific\u0103 dac\u0103 nu exist\u0103 deja\n            if (!holidays.Any(h =&gt; h.Date.Date == holiday.Date.Date))\n            {\n                await ExceptionDaysService.AddOrUpdateException(new ExceptionWorkingProgramDetailsModel\n                {\n                    Type = ExceptionTypeEnum.Holiday,\n                    Date = holiday.Date\n                });\n            }\n        }\n\n        await LoadHolidays();\n    }\n\n    private async Task DeleteHoliday(Guid id)\n    {\n        await ExceptionDaysService.Delete(id);\n        await LoadHolidays();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#calendar-vizual-cu-exceptii","title":"Calendar vizual cu excep\u021bii","text":"<pre><code>@inject IExceptionDaysService ExceptionDaysService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodCalendar @ref=\"calendar\" \n                     OnDayRender=\"OnCalendarDayRender\"\n                     OnDateSelect=\"OnDateSelected\" /&gt;\n\n        @if (selectedDateExceptions.Any())\n        {\n            &lt;FodPaper Elevation=\"1\" Class=\"mt-3 p-3\"&gt;\n                &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                    Excep\u021bii pentru @selectedDate?.ToString(\"dd MMMM yyyy\")\n                &lt;/FodText&gt;\n\n                @foreach (var exception in selectedDateExceptions)\n                {\n                    &lt;FodChip Color=\"@GetExceptionColor(exception.Type)\" \n                             Class=\"me-2\"\n                             OnClose=\"() =&gt; DeleteException(exception.Id)\"&gt;\n                        @GetExceptionText(exception)\n                    &lt;/FodChip&gt;\n                }\n            &lt;/FodPaper&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private FodCalendar calendar;\n    private Dictionary&lt;DateTime, List&lt;ExceptionWorkingProgramModel&gt;&gt; exceptionsByDate = new();\n    private DateTime? selectedDate;\n    private List&lt;ExceptionWorkingProgramModel&gt; selectedDateExceptions = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadExceptionsForMonth(DateTime.Now);\n    }\n\n    private async Task LoadExceptionsForMonth(DateTime month)\n    {\n        var startDate = new DateTime(month.Year, month.Month, 1);\n        var endDate = startDate.AddMonths(1).AddDays(-1);\n\n        var request = new DataRequest\n        {\n            Page = 1,\n            PageSize = 100,\n            Filters = new List&lt;Filter&gt;\n            {\n                new Filter\n                {\n                    Field = \"Date\",\n                    Operator = FilterOperator.GreaterThanOrEqual,\n                    Value = startDate\n                },\n                new Filter\n                {\n                    Field = \"Date\",\n                    Operator = FilterOperator.LessThanOrEqual,\n                    Value = endDate\n                }\n            }\n        };\n\n        var response = await ExceptionDaysService.GetExceptions(request);\n\n        exceptionsByDate.Clear();\n        foreach (var exception in response.Data)\n        {\n            var date = DateTime.ParseExact(exception.Date, \"dd.MM.yyyy\", null);\n            if (!exceptionsByDate.ContainsKey(date))\n            {\n                exceptionsByDate[date] = new List&lt;ExceptionWorkingProgramModel&gt;();\n            }\n            exceptionsByDate[date].Add(exception);\n        }\n    }\n\n    private void OnCalendarDayRender(CalendarDayRenderEventArgs args)\n    {\n        if (exceptionsByDate.ContainsKey(args.Date.Date))\n        {\n            var exceptions = exceptionsByDate[args.Date.Date];\n\n            foreach (var exception in exceptions)\n            {\n                args.AddBadge(GetExceptionBadgeColor(exception.Type));\n            }\n\n            args.AddTooltip(string.Join(\", \", \n                exceptions.Select(e =&gt; GetExceptionTypeName(e.Type))));\n        }\n    }\n\n    private void OnDateSelected(DateTime date)\n    {\n        selectedDate = date;\n        selectedDateExceptions = exceptionsByDate.ContainsKey(date.Date) \n            ? exceptionsByDate[date.Date] \n            : new List&lt;ExceptionWorkingProgramModel&gt;();\n    }\n\n    private FodColor GetExceptionColor(ExceptionTypeEnum type)\n    {\n        return type switch\n        {\n            ExceptionTypeEnum.Holiday =&gt; FodColor.Error,\n            ExceptionTypeEnum.ShortDay =&gt; FodColor.Warning,\n            ExceptionTypeEnum.WorkingDay =&gt; FodColor.Success,\n            _ =&gt; FodColor.Default\n        };\n    }\n\n    private string GetExceptionText(ExceptionWorkingProgramModel exception)\n    {\n        return exception.Type switch\n        {\n            ExceptionTypeEnum.Holiday =&gt; \"S\u0103rb\u0103toare\",\n            ExceptionTypeEnum.ShortDay =&gt; $\"Zi scurt\u0103: {exception.Open} - {exception.Close}\",\n            ExceptionTypeEnum.WorkingDay =&gt; $\"Zi lucr\u0103toare: {exception.Open} - {exception.Close}\",\n            _ =&gt; \"Excep\u021bie\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#verificare-disponibilitate-serviciu","title":"Verificare disponibilitate serviciu","text":"<pre><code>public class ServiceAvailabilityChecker\n{\n    private readonly IExceptionDaysService _exceptionDaysService;\n\n    public async Task&lt;bool&gt; IsServiceAvailable(DateTime dateTime)\n    {\n        // Verific\u0103 mai \u00eent\u00e2i dac\u0103 este o zi excep\u021bional\u0103\n        var exceptions = await _exceptionDaysService.GetExceptions(new DataRequest\n        {\n            Filters = new List&lt;Filter&gt;\n            {\n                new Filter\n                {\n                    Field = \"Date\",\n                    Operator = FilterOperator.Equal,\n                    Value = dateTime.Date\n                }\n            }\n        });\n\n        var exception = exceptions.Data.FirstOrDefault();\n\n        if (exception != null)\n        {\n            switch (exception.Type)\n            {\n                case ExceptionTypeEnum.Holiday:\n                    return false; // \u00cenchis \u00een s\u0103rb\u0103tori\n\n                case ExceptionTypeEnum.WorkingDay:\n                case ExceptionTypeEnum.ShortDay:\n                    // Verific\u0103 dac\u0103 ora curent\u0103 este \u00een interval\n                    var openTime = TimeSpan.Parse(exception.Open);\n                    var closeTime = TimeSpan.Parse(exception.Close);\n                    var currentTime = dateTime.TimeOfDay;\n\n                    return currentTime &gt;= openTime &amp;&amp; currentTime &lt;= closeTime;\n            }\n        }\n\n        // Dac\u0103 nu e excep\u021bie, verific\u0103 programul normal\n        var workProgram = await _exceptionDaysService.GetFormatted(new DataRequest());\n        var dayProgram = workProgram.Data.FirstOrDefault(w =&gt; w.Day == GetDayEnum(dateTime.DayOfWeek));\n\n        if (dayProgram == null || string.IsNullOrEmpty(dayProgram.Open))\n            return false; // \u00cenchis \u00een aceast\u0103 zi\n\n        var standardOpen = TimeSpan.Parse(dayProgram.Open);\n        var standardClose = TimeSpan.Parse(dayProgram.Close);\n        var currentTime = dateTime.TimeOfDay;\n\n        // Verific\u0103 pauza dac\u0103 exist\u0103\n        if (!string.IsNullOrEmpty(dayProgram.Pause))\n        {\n            var pauseParts = dayProgram.Pause.Split(\" - \");\n            if (pauseParts.Length == 2)\n            {\n                var pauseStart = TimeSpan.Parse(pauseParts[0]);\n                var pauseEnd = TimeSpan.Parse(pauseParts[1]);\n\n                if (currentTime &gt;= pauseStart &amp;&amp; currentTime &lt;= pauseEnd)\n                    return false; // \u00cen pauz\u0103\n            }\n        }\n\n        return currentTime &gt;= standardOpen &amp;&amp; currentTime &lt;= standardClose;\n    }\n\n    private DayEnum GetDayEnum(DayOfWeek dayOfWeek)\n    {\n        return dayOfWeek switch\n        {\n            DayOfWeek.Monday =&gt; DayEnum.Monday,\n            DayOfWeek.Tuesday =&gt; DayEnum.Tuesday,\n            DayOfWeek.Wednesday =&gt; DayEnum.Wednesday,\n            DayOfWeek.Thursday =&gt; DayEnum.Thursday,\n            DayOfWeek.Friday =&gt; DayEnum.Friday,\n            DayOfWeek.Saturday =&gt; DayEnum.Saturday,\n            DayOfWeek.Sunday =&gt; DayEnum.Sunday,\n            _ =&gt; DayEnum.Monday\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#7-integrare-cu-componenta-fodexceptiondays","title":"7. Integrare cu componenta FodExceptionDays","text":"<pre><code>@page \"/admin/exception-days\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Gestionare Zile Excep\u021bionale\n    &lt;/FodText&gt;\n\n    &lt;!-- Componenta gata configurat\u0103 --&gt;\n    &lt;FodExceptionDays \n        ShowAddButton=\"true\"\n        ShowEditButton=\"true\"\n        ShowDeleteButton=\"true\"\n        PageSize=\"20\"\n        OnExceptionAdded=\"OnExceptionAdded\"\n        OnExceptionUpdated=\"OnExceptionUpdated\"\n        OnExceptionDeleted=\"OnExceptionDeleted\" /&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private async Task OnExceptionAdded(ExceptionWorkingProgramDetailsModel model)\n    {\n        // Log sau notificare\n        Console.WriteLine($\"Excep\u021bie ad\u0103ugat\u0103: {model.Date:dd.MM.yyyy}\");\n    }\n\n    private async Task OnExceptionUpdated(ExceptionWorkingProgramDetailsModel model)\n    {\n        // Log sau notificare\n        Console.WriteLine($\"Excep\u021bie actualizat\u0103: {model.Id}\");\n    }\n\n    private async Task OnExceptionDeleted(Guid id)\n    {\n        // Log sau notificare\n        Console.WriteLine($\"Excep\u021bie \u0219tears\u0103: {id}\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#8-export-si-import","title":"8. Export \u0219i Import","text":"<pre><code>public class ExceptionDaysImportExportService\n{\n    private readonly IExceptionDaysService _exceptionDaysService;\n\n    public async Task&lt;byte[]&gt; ExportToExcel(int year)\n    {\n        var request = new DataRequest\n        {\n            PageSize = 1000,\n            Filters = new List&lt;Filter&gt;\n            {\n                new Filter\n                {\n                    Field = \"Year\",\n                    Operator = FilterOperator.Equal,\n                    Value = year\n                }\n            }\n        };\n\n        var exceptions = await _exceptionDaysService.GetExceptions(request);\n\n        using var package = new ExcelPackage();\n        var worksheet = package.Workbook.Worksheets.Add(\"Zile Excep\u021bionale\");\n\n        // Headers\n        worksheet.Cells[1, 1].Value = \"Data\";\n        worksheet.Cells[1, 2].Value = \"Tip\";\n        worksheet.Cells[1, 3].Value = \"Ora Deschidere\";\n        worksheet.Cells[1, 4].Value = \"Ora \u00cenchidere\";\n\n        // Data\n        var row = 2;\n        foreach (var exception in exceptions.Data.OrderBy(e =&gt; e.Date))\n        {\n            worksheet.Cells[row, 1].Value = exception.Date;\n            worksheet.Cells[row, 2].Value = GetExceptionTypeName(exception.Type);\n            worksheet.Cells[row, 3].Value = exception.Open;\n            worksheet.Cells[row, 4].Value = exception.Close;\n            row++;\n        }\n\n        // Formatting\n        worksheet.Cells[1, 1, 1, 4].Style.Font.Bold = true;\n        worksheet.Cells.AutoFitColumns();\n\n        return package.GetAsByteArray();\n    }\n\n    public async Task ImportFromExcel(Stream fileStream)\n    {\n        using var package = new ExcelPackage(fileStream);\n        var worksheet = package.Workbook.Worksheets.First();\n\n        for (int row = 2; row &lt;= worksheet.Dimension.End.Row; row++)\n        {\n            var dateStr = worksheet.Cells[row, 1].Text;\n            var typeStr = worksheet.Cells[row, 2].Text;\n            var openStr = worksheet.Cells[row, 3].Text;\n            var closeStr = worksheet.Cells[row, 4].Text;\n\n            if (DateTime.TryParseExact(dateStr, \"dd.MM.yyyy\", null, \n                DateTimeStyles.None, out var date))\n            {\n                var model = new ExceptionWorkingProgramDetailsModel\n                {\n                    Date = date,\n                    Type = ParseExceptionType(typeStr)\n                };\n\n                if (!string.IsNullOrEmpty(openStr) &amp;&amp; TimeSpan.TryParse(openStr, out var openTime))\n                {\n                    model.OpenHours = openTime.Hours;\n                    model.OpenMinutes = openTime.Minutes;\n                }\n\n                if (!string.IsNullOrEmpty(closeStr) &amp;&amp; TimeSpan.TryParse(closeStr, out var closeTime))\n                {\n                    model.CloseHours = closeTime.Hours;\n                    model.CloseMinutes = closeTime.Minutes;\n                }\n\n                await _exceptionDaysService.AddOrUpdateException(model);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#9-validare-si-business-rules","title":"9. Validare \u0219i Business Rules","text":"<pre><code>public class ExceptionDaysValidator\n{\n    private readonly IExceptionDaysService _exceptionDaysService;\n\n    public async Task&lt;ValidationResult&gt; ValidateException(ExceptionWorkingProgramDetailsModel model)\n    {\n        var errors = new List&lt;string&gt;();\n\n        // Validare dat\u0103\n        if (model.Date &lt; DateTime.Today)\n        {\n            errors.Add(\"Nu pute\u021bi ad\u0103uga excep\u021bii pentru date din trecut\");\n        }\n\n        // Validare ore pentru zile lucr\u0103toare\n        if (model.Type != ExceptionTypeEnum.Holiday)\n        {\n            if (!model.OpenHours.HasValue || !model.OpenMinutes.HasValue)\n            {\n                errors.Add(\"Ora de deschidere este obligatorie\");\n            }\n\n            if (!model.CloseHours.HasValue || !model.CloseMinutes.HasValue)\n            {\n                errors.Add(\"Ora de \u00eenchidere este obligatorie\");\n            }\n\n            if (model.OpenHours.HasValue &amp;&amp; model.CloseHours.HasValue)\n            {\n                var openTime = new TimeSpan(model.OpenHours.Value, model.OpenMinutes ?? 0, 0);\n                var closeTime = new TimeSpan(model.CloseHours.Value, model.CloseMinutes ?? 0, 0);\n\n                if (openTime &gt;= closeTime)\n                {\n                    errors.Add(\"Ora de \u00eenchidere trebuie s\u0103 fie dup\u0103 ora de deschidere\");\n                }\n\n                // Validare pentru zile scurte\n                if (model.Type == ExceptionTypeEnum.ShortDay)\n                {\n                    var totalHours = (closeTime - openTime).TotalHours;\n                    if (totalHours &gt;= 8)\n                    {\n                        errors.Add(\"O zi scurt\u0103 trebuie s\u0103 aib\u0103 mai pu\u021bin de 8 ore\");\n                    }\n                }\n            }\n        }\n\n        // Verific\u0103 duplicat\n        var existingExceptions = await _exceptionDaysService.GetExceptions(new DataRequest\n        {\n            Filters = new List&lt;Filter&gt;\n            {\n                new Filter\n                {\n                    Field = \"Date\",\n                    Operator = FilterOperator.Equal,\n                    Value = model.Date\n                }\n            }\n        });\n\n        if (existingExceptions.Data.Any(e =&gt; e.Id != model.Id))\n        {\n            errors.Add(\"Exist\u0103 deja o excep\u021bie pentru aceast\u0103 dat\u0103\");\n        }\n\n        return new ValidationResult\n        {\n            IsValid = !errors.Any(),\n            Errors = errors\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#10-monitorizare-si-audit","title":"10. Monitorizare \u0219i Audit","text":"<pre><code>public class AuditedExceptionDaysService : IExceptionDaysService\n{\n    private readonly IExceptionDaysService _innerService;\n    private readonly IAuditService _auditService;\n    private readonly ICurrentUserContextService _userContext;\n\n    public async Task AddOrUpdateException(ExceptionWorkingProgramDetailsModel model)\n    {\n        var isNew = !model.Id.HasValue;\n        var oldValue = isNew ? null : await _innerService.GetExceptionById(model.Id.Value);\n\n        await _innerService.AddOrUpdateException(model);\n\n        // Audit\n        await _auditService.LogAsync(new AuditEntry\n        {\n            Action = isNew ? \"ExceptionDayAdded\" : \"ExceptionDayUpdated\",\n            EntityType = \"ExceptionWorkingProgram\",\n            EntityId = model.Id?.ToString(),\n            UserId = _userContext.UserId,\n            Timestamp = DateTime.UtcNow,\n            OldValue = JsonSerializer.Serialize(oldValue),\n            NewValue = JsonSerializer.Serialize(model),\n            Details = $\"{model.Type} - {model.Date:dd.MM.yyyy}\"\n        });\n    }\n\n    public async Task Delete(Guid id)\n    {\n        var exception = await _innerService.GetExceptionById(id);\n\n        await _innerService.Delete(id);\n\n        await _auditService.LogAsync(new AuditEntry\n        {\n            Action = \"ExceptionDayDeleted\",\n            EntityType = \"ExceptionWorkingProgram\",\n            EntityId = id.ToString(),\n            UserId = _userContext.UserId,\n            Timestamp = DateTime.UtcNow,\n            OldValue = JsonSerializer.Serialize(exception),\n            Details = $\"\u0218ters: {exception.Type} - {exception.Date:dd.MM.yyyy}\"\n        });\n    }\n\n    // Implementare pentru celelalte metode...\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class ExceptionDaysServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IExceptionDaysService _service;\n\n    [TestMethod]\n    public async Task GetExceptions_ReturnsPagedResults()\n    {\n        // Arrange\n        var request = new DataRequest { Page = 1, PageSize = 10 };\n        var expectedResponse = new DataResponse&lt;ExceptionWorkingProgramModel&gt;\n        {\n            Data = new[]\n            {\n                new ExceptionWorkingProgramModel\n                {\n                    Id = Guid.NewGuid(),\n                    Type = ExceptionTypeEnum.Holiday,\n                    Date = \"01.01.2024\",\n                    Open = \"\",\n                    Close = \"\"\n                }\n            },\n            TotalCount = 1\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.GetExceptions(request);\n\n        // Assert\n        Assert.AreEqual(1, result.TotalCount);\n        Assert.AreEqual(ExceptionTypeEnum.Holiday, result.Data.First().Type);\n    }\n\n    [TestMethod]\n    public async Task AddOrUpdateException_Holiday_SuccessfullyCreated()\n    {\n        // Arrange\n        var model = new ExceptionWorkingProgramDetailsModel\n        {\n            Type = ExceptionTypeEnum.Holiday,\n            Date = new DateTime(2024, 12, 25)\n        };\n\n        SetupHttpResponse(HttpStatusCode.OK);\n\n        // Act &amp; Assert\n        await _service.AddOrUpdateException(model);\n        // Should not throw\n    }\n\n    [TestMethod]\n    public async Task GetExceptionById_ValidId_ReturnsException()\n    {\n        // Arrange\n        var id = Guid.NewGuid();\n        var expected = new ExceptionWorkingProgramDetailsModel\n        {\n            Id = id,\n            Type = ExceptionTypeEnum.ShortDay,\n            Date = DateTime.Today,\n            OpenHours = 9,\n            OpenMinutes = 0,\n            CloseHours = 14,\n            CloseMinutes = 0\n        };\n\n        SetupHttpResponse(expected);\n\n        // Act\n        var result = await _service.GetExceptionById(id);\n\n        // Assert\n        Assert.AreEqual(id, result.Id);\n        Assert.AreEqual(9, result.OpenHours);\n        Assert.AreEqual(14, result.CloseHours);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ExceptionDaysService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Validare strict\u0103 - Valida\u021bi toate datele \u00eenainte de salvare</li> <li>Audit complet - \u00cenregistra\u021bi toate modific\u0103rile pentru trasabilitate</li> <li>Cache inteligent - Cache-ui\u021bi programul standard, nu excep\u021biile</li> <li>Notific\u0103ri - Notifica\u021bi utilizatorii despre schimb\u0103ri importante</li> <li>Import/Export - Oferi\u021bi op\u021biuni de import/export pentru gestionare \u00een mas\u0103</li> <li>Verificare conflicte - Nu permite\u021bi excep\u021bii duplicate pentru aceea\u0219i dat\u0103</li> </ol>"},{"location":"fod/servicii/ExceptionDaysService/#13-concluzie","title":"13. Concluzie","text":"<p><code>ExceptionDaysService</code> ofer\u0103 o solu\u021bie complet\u0103 pentru gestionarea programului de lucru \u0219i a zilelor excep\u021bionale \u00een institu\u021biile guvernamentale. Cu suport pentru toate tipurile de excep\u021bii, validare robust\u0103 \u0219i integrare u\u0219oar\u0103 cu componente UI, serviciul asigur\u0103 flexibilitate maxim\u0103 \u00een configurarea orarului de func\u021bionare.</p>"},{"location":"fod/servicii/FaqService/","title":"FaqService","text":""},{"location":"fod/servicii/FaqService/#documentatie-pentru-serviciul-faqservice","title":"Documenta\u021bie pentru serviciul FaqService","text":""},{"location":"fod/servicii/FaqService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FaqService</code> este un serviciu pentru gestionarea \u00eentreb\u0103rilor frecvente (FAQ) asociate cu diferite servicii guvernamentale. Serviciul comunic\u0103 cu API-ul Info Portal pentru a ob\u021bine \u00eentreb\u0103ri \u0219i r\u0103spunsuri relevante pentru un anumit serviciu.</p> <p>Caracteristici principale: - Ob\u021binere FAQ-uri pe baz\u0103 de ID serviciu - Paginare configurabil\u0103 - Filtrare dup\u0103 status activ/inactiv - Integrare cu Info Portal API - Logging pentru debugging - Configurare centralizat\u0103 prin options pattern</p>"},{"location":"fod/servicii/FaqService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":""},{"location":"fod/servicii/FaqService/#inregistrare-in-programcs-sau-startupcs","title":"\u00cenregistrare \u00een Program.cs sau Startup.cs","text":"<pre><code>// Configurare op\u021biuni\nbuilder.Services.Configure&lt;FodConfiguration&gt;(\n    builder.Configuration.GetSection(\"FodConfiguration\"));\n\n// \u00cenregistrare serviciu cu HttpClient\nbuilder.Services.AddHttpClient&lt;IFaqService, FaqService&gt;(client =&gt;\n{\n    client.Timeout = TimeSpan.FromSeconds(30);\n    client.DefaultRequestHeaders.Add(\"Accept\", \"application/json\");\n});\n\n// Sau \u00eenregistrare simpl\u0103\nbuilder.Services.AddScoped&lt;IFaqService, FaqService&gt;();\n</code></pre>"},{"location":"fod/servicii/FaqService/#configurare-in-appsettingsjson","title":"Configurare \u00een appsettings.json","text":"<pre><code>{\n  \"FodConfiguration\": {\n    \"Services\": {\n      \"InfoPortal\": {\n        \"BaseUrl\": \"https://api.infoportal.gov.md\",\n        \"ApiKey\": \"your-api-key\",\n        \"Timeout\": 30\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#3-interfata-ifaqservice","title":"3. Interfa\u021ba IFaqService","text":"<pre><code>public interface IFaqService\n{\n    /// &lt;summary&gt;\n    /// Ob\u021bine elementele FAQ pentru un serviciu specific\n    /// &lt;/summary&gt;\n    /// &lt;param name=\"serviceId\"&gt;ID-ul serviciului&lt;/param&gt;\n    /// &lt;param name=\"pageSize\"&gt;Num\u0103rul de elemente per pagin\u0103&lt;/param&gt;\n    /// &lt;param name=\"active\"&gt;Doar elemente active&lt;/param&gt;\n    /// &lt;param name=\"page\"&gt;Num\u0103rul paginii&lt;/param&gt;\n    /// &lt;returns&gt;Model cu \u00eentreb\u0103ri \u0219i r\u0103spunsuri&lt;/returns&gt;\n    Task&lt;FaqModel&gt; GetFaqItemsAsync(\n        string serviceId, \n        int pageSize = 9999, \n        bool active = true, \n        int page = 1);\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#4-modele-de-date","title":"4. Modele de Date","text":""},{"location":"fod/servicii/FaqService/#faqmodel","title":"FaqModel","text":"<pre><code>public class FaqModel\n{\n    public List&lt;FaqItem&gt; Items { get; set; }\n    public int TotalCount { get; set; }\n    public int PageNumber { get; set; }\n    public int PageSize { get; set; }\n    public bool HasNextPage { get; set; }\n    public bool HasPreviousPage { get; set; }\n}\n\npublic class FaqItem\n{\n    public int Id { get; set; }\n    public string Question { get; set; }\n    public string Answer { get; set; }\n    public string ServiceId { get; set; }\n    public int OrderIndex { get; set; }\n    public bool IsActive { get; set; }\n    public DateTime CreatedDate { get; set; }\n    public DateTime? ModifiedDate { get; set; }\n    public string Category { get; set; }\n    public List&lt;string&gt; Tags { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#5-utilizare-de-baza","title":"5. Utilizare de Baz\u0103","text":""},{"location":"fod/servicii/FaqService/#obtinere-faq-pentru-un-serviciu","title":"Ob\u021binere FAQ pentru un serviciu","text":"<pre><code>@page \"/service/{ServiceId}/faq\"\n@inject IFaqService FaqService\n\n&lt;h3&gt;\u00centreb\u0103ri frecvente&lt;/h3&gt;\n\n@if (isLoading)\n{\n    &lt;FodLoadingLinear /&gt;\n}\nelse if (faqItems?.Items?.Any() == true)\n{\n    &lt;FodAccordion&gt;\n        @foreach (var item in faqItems.Items)\n        {\n            &lt;FodAccordionItem Title=\"@item.Question\"&gt;\n                &lt;FodText&gt;@((MarkupString)item.Answer)&lt;/FodText&gt;\n            &lt;/FodAccordionItem&gt;\n        }\n    &lt;/FodAccordion&gt;\n}\nelse\n{\n    &lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n        Nu exist\u0103 \u00eentreb\u0103ri frecvente pentru acest serviciu.\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    [Parameter] public string ServiceId { get; set; }\n\n    private FaqModel faqItems;\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        try\n        {\n            faqItems = await FaqService.GetFaqItemsAsync(ServiceId);\n        }\n        catch (Exception ex)\n        {\n            // Handle error\n            Logger.LogError(ex, \"Error loading FAQ items\");\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#6-exemple-avansate","title":"6. Exemple Avansate","text":""},{"location":"fod/servicii/FaqService/#faq-cu-paginare-si-cautare","title":"FAQ cu paginare \u0219i c\u0103utare","text":"<pre><code>&lt;div class=\"faq-container\"&gt;\n    &lt;FodTextField @bind-Value=\"searchTerm\"\n                  Label=\"Caut\u0103 \u00een \u00eentreb\u0103ri\"\n                  OnKeyUp=\"@(e =&gt; { if (e.Key == \"Enter\") SearchFaq(); })\"\n                  AdornmentIcon=\"@FodIcons.Material.Filled.Search\" /&gt;\n\n    &lt;div class=\"faq-list mt-4\"&gt;\n        @foreach (var item in filteredItems)\n        {\n            &lt;FodCard Class=\"mb-3\"&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\"&gt;\n                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.HelpOutline\" \n                                 Color=\"FodColor.Primary\" /&gt;\n                        @item.Question\n                    &lt;/FodText&gt;\n                    &lt;FodDivider Class=\"my-2\" /&gt;\n                    &lt;FodText&gt;@((MarkupString)item.Answer)&lt;/FodText&gt;\n\n                    @if (item.Tags?.Any() == true)\n                    {\n                        &lt;div class=\"mt-2\"&gt;\n                            @foreach (var tag in item.Tags)\n                            {\n                                &lt;FodChip Size=\"FodSize.Small\" Class=\"me-1\"&gt;@tag&lt;/FodChip&gt;\n                            }\n                        &lt;/div&gt;\n                    }\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        }\n    &lt;/div&gt;\n\n    @if (faqModel.HasNextPage || faqModel.HasPreviousPage)\n    {\n        &lt;FodPagination Count=\"@totalPages\"\n                       @bind-Selected=\"currentPage\"\n                       Color=\"FodColor.Primary\"\n                       ShowFirstButton=\"true\"\n                       ShowLastButton=\"true\" /&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private FaqModel faqModel;\n    private List&lt;FaqItem&gt; filteredItems = new();\n    private string searchTerm;\n    private int currentPage = 1;\n    private int pageSize = 10;\n    private int totalPages;\n\n    private async Task LoadFaq()\n    {\n        faqModel = await FaqService.GetFaqItemsAsync(\n            ServiceId, pageSize, true, currentPage);\n\n        totalPages = (int)Math.Ceiling(\n            (double)faqModel.TotalCount / pageSize);\n\n        FilterItems();\n    }\n\n    private void FilterItems()\n    {\n        filteredItems = string.IsNullOrWhiteSpace(searchTerm)\n            ? faqModel.Items\n            : faqModel.Items.Where(i =&gt; \n                i.Question.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||\n                i.Answer.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))\n              .ToList();\n    }\n\n    private void SearchFaq()\n    {\n        currentPage = 1;\n        FilterItems();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#service-extins-cu-cache","title":"Service extins cu cache","text":"<pre><code>public class CachedFaqService : IFaqService\n{\n    private readonly IFaqService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedFaqService&gt; _logger;\n\n    public CachedFaqService(\n        IFaqService innerService,\n        IMemoryCache cache,\n        ILogger&lt;CachedFaqService&gt; logger)\n    {\n        _innerService = innerService;\n        _cache = cache;\n        _logger = logger;\n    }\n\n    public async Task&lt;FaqModel&gt; GetFaqItemsAsync(\n        string serviceId, \n        int pageSize = 9999, \n        bool active = true, \n        int page = 1)\n    {\n        var cacheKey = $\"faq_{serviceId}_{pageSize}_{active}_{page}\";\n\n        if (_cache.TryGetValue&lt;FaqModel&gt;(cacheKey, out var cachedResult))\n        {\n            _logger.LogDebug(\"FAQ items retrieved from cache for service {ServiceId}\", serviceId);\n            return cachedResult;\n        }\n\n        var result = await _innerService.GetFaqItemsAsync(\n            serviceId, pageSize, active, page);\n\n        // Cache pentru 1 or\u0103\n        _cache.Set(cacheKey, result, TimeSpan.FromHours(1));\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#7-integrare-cu-fodfaqviewer","title":"7. Integrare cu FodFaqViewer","text":"<pre><code>&lt;!-- Utilizare simpl\u0103 cu componenta existent\u0103 --&gt;\n&lt;FodFaqViewer ServiceId=\"@ServiceId\" /&gt;\n\n&lt;!-- Sau personalizat --&gt;\n&lt;FodFaqViewer ServiceId=\"@ServiceId\"\n              PageSize=\"5\"\n              ShowSearch=\"true\"\n              CollapsedByDefault=\"false\"\n              CustomClass=\"custom-faq-style\" /&gt;\n</code></pre>"},{"location":"fod/servicii/FaqService/#8-gestionare-erori","title":"8. Gestionare Erori","text":"<pre><code>public class ResilientFaqService : IFaqService\n{\n    private readonly IFaqService _innerService;\n    private readonly ILogger&lt;ResilientFaqService&gt; _logger;\n\n    public async Task&lt;FaqModel&gt; GetFaqItemsAsync(\n        string serviceId, int pageSize = 9999, \n        bool active = true, int page = 1)\n    {\n        try\n        {\n            return await _innerService.GetFaqItemsAsync(\n                serviceId, pageSize, active, page);\n        }\n        catch (HttpRequestException ex)\n        {\n            _logger.LogError(ex, \n                \"Network error fetching FAQ for service {ServiceId}\", \n                serviceId);\n\n            // Returneaz\u0103 rezultat gol \u00een loc s\u0103 arunce excep\u021bia\n            return new FaqModel\n            {\n                Items = new List&lt;FaqItem&gt;(),\n                TotalCount = 0,\n                PageNumber = page,\n                PageSize = pageSize\n            };\n        }\n        catch (TaskCanceledException ex)\n        {\n            _logger.LogError(ex, \n                \"Timeout fetching FAQ for service {ServiceId}\", \n                serviceId);\n            throw new TimeoutException(\n                \"Timpul de a\u0219teptare pentru FAQ a expirat\", ex);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Caching: Implementa\u021bi cache pentru a reduce \u00eenc\u0103rcarea API-ului</li> <li>Error Handling: Trata\u021bi erorile de re\u021bea graceful</li> <li>Logging: Loga\u021bi toate erorile pentru debugging</li> <li>Timeout: Seta\u021bi timeout-uri rezonabile</li> <li>Retry Logic: Implementa\u021bi retry pentru erori tranzitorii</li> <li>Validare: Valida\u021bi parametrii de intrare</li> </ol>"},{"location":"fod/servicii/FaqService/#10-monitorizare-si-metrici","title":"10. Monitorizare \u0219i Metrici","text":"<pre><code>public class MonitoredFaqService : IFaqService\n{\n    private readonly IFaqService _innerService;\n    private readonly IMetrics _metrics;\n\n    public async Task&lt;FaqModel&gt; GetFaqItemsAsync(\n        string serviceId, int pageSize = 9999, \n        bool active = true, int page = 1)\n    {\n        using var timer = _metrics.Measure.Timer.Time(\"faq.fetch.duration\");\n\n        try\n        {\n            var result = await _innerService.GetFaqItemsAsync(\n                serviceId, pageSize, active, page);\n\n            _metrics.Measure.Counter.Increment(\"faq.fetch.success\");\n            _metrics.Measure.Gauge.SetValue(\"faq.items.count\", result.TotalCount);\n\n            return result;\n        }\n        catch (Exception)\n        {\n            _metrics.Measure.Counter.Increment(\"faq.fetch.error\");\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#11-teste-unitare","title":"11. Teste Unitare","text":"<pre><code>[TestClass]\npublic class FaqServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _mockHandler;\n    private HttpClient _httpClient;\n    private FaqService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _mockHandler = new Mock&lt;HttpMessageHandler&gt;();\n        _httpClient = new HttpClient(_mockHandler.Object);\n\n        var options = Options.Create(new FodConfiguration\n        {\n            Services = new ServicesConfiguration\n            {\n                InfoPortal = new InfoPortalOptions\n                {\n                    BaseUrl = \"https://test.api\"\n                }\n            }\n        });\n\n        _service = new FaqService(_httpClient, options, \n            Mock.Of&lt;ILogger&lt;FaqService&gt;&gt;());\n    }\n\n    [TestMethod]\n    public async Task GetFaqItemsAsync_ReturnsItems_WhenApiSucceeds()\n    {\n        // Arrange\n        var expectedJson = JsonSerializer.Serialize(new FaqModel\n        {\n            Items = new List&lt;FaqItem&gt;\n            {\n                new() { Id = 1, Question = \"Test?\", Answer = \"Da\" }\n            },\n            TotalCount = 1\n        });\n\n        _mockHandler.Protected()\n            .Setup&lt;Task&lt;HttpResponseMessage&gt;&gt;(\n                \"SendAsync\",\n                ItExpr.IsAny&lt;HttpRequestMessage&gt;(),\n                ItExpr.IsAny&lt;CancellationToken&gt;())\n            .ReturnsAsync(new HttpResponseMessage\n            {\n                StatusCode = HttpStatusCode.OK,\n                Content = new StringContent(expectedJson)\n            });\n\n        // Act\n        var result = await _service.GetFaqItemsAsync(\"SERVICE001\");\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(1, result.Items.Count);\n        Assert.AreEqual(\"Test?\", result.Items[0].Question);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FaqService/#12-concluzie","title":"12. Concluzie","text":"<p><code>FaqService</code> ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i eficient\u0103 pentru gestionarea \u00eentreb\u0103rilor frecvente \u00een aplica\u021bii guvernamentale. Cu suport pentru paginare, filtrare \u0219i integrare u\u0219oar\u0103 cu componente UI, serviciul faciliteaz\u0103 implementarea sec\u021biunilor FAQ informative \u0219i u\u0219or de navigat.</p>"},{"location":"fod/servicii/FeedbackComponentService/","title":"FeedbackComponentService","text":""},{"location":"fod/servicii/FeedbackComponentService/#documentatie-pentru-serviciul-feedbackcomponentservice","title":"Documenta\u021bie pentru serviciul FeedbackComponentService","text":""},{"location":"fod/servicii/FeedbackComponentService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>FeedbackComponentService</code> este un serviciu pentru gestionarea feedback-ului utilizatorilor asupra serviciilor guvernamentale. Permite colectarea evalu\u0103rilor \u0219i comentariilor, afi\u0219area statisticilor agregate \u0219i navigarea c\u0103tre portalul extern de feedback.</p> <p>Caracteristici principale: - Colectare feedback cu rating 1-5 stele - Mesaje op\u021bionale cu limit\u0103 de 500 caractere - Suport pentru utilizatori autentifica\u021bi \u0219i anonimi - Statistici agregate (medie rating, num\u0103r recenzii) - Integrare cu portal extern de feedback - Validare date contact \u0219i demografice</p>"},{"location":"fod/servicii/FeedbackComponentService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Pentru server-side\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IFeedbackComponentService, FeedbackComponentService&gt;();\nbuilder.Services.AddHttpClient&lt;IFeedbackComponentService, FeedbackComponentService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#3-interfata-ifeedbackcomponentservice","title":"3. Interfa\u021ba IFeedbackComponentService","text":"<pre><code>namespace Fod.Components.Shared.Business.Feedback\n{\n    public interface IFeedbackComponentService\n    {\n        // Trimite feedback\n        Task&lt;int&gt; Add(FeedbackComponentModel feedbackComponentModel);\n\n        // Ob\u021bine statistici agregate pentru un serviciu\n        Task&lt;GetFeedbackModel&gt; Get(string serviceInternalCode);\n\n        // Ob\u021bine lista de feedback-uri pentru un serviciu\n        Task&lt;List&lt;FeedbackComponentModel&gt;&gt; GetList(string serviceInternalCode);\n\n        // Ob\u021bine URL portal feedback frontoffice\n        Task&lt;string&gt; GetFoFeedbackAddress();\n\n        // Ob\u021bine URL termeni \u0219i condi\u021bii\n        Task&lt;string&gt; GetTacAddress();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Add</code> <code>FeedbackComponentModel feedbackComponentModel</code> <code>Task&lt;int&gt;</code> Adaug\u0103 un feedback nou <code>Get</code> <code>string serviceInternalCode</code> <code>Task&lt;GetFeedbackModel&gt;</code> Ob\u021bine statistici agregate <code>GetList</code> <code>string serviceInternalCode</code> <code>Task&lt;List&lt;FeedbackComponentModel&gt;&gt;</code> Ob\u021bine lista de feedback-uri <code>GetFoFeedbackAddress</code> - <code>Task&lt;string&gt;</code> Ob\u021bine URL portal feedback <code>GetTacAddress</code> - <code>Task&lt;string&gt;</code> Ob\u021bine URL termeni \u0219i condi\u021bii"},{"location":"fod/servicii/FeedbackComponentService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/FeedbackComponentService/#feedbackcomponentmodel","title":"FeedbackComponentModel","text":"<pre><code>public class FeedbackComponentModel\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n\n    [EmailAddress]\n    public string Email { get; set; }\n\n    [Phone]\n    public string Phone { get; set; }\n\n    public int? Age { get; set; }\n    public SexEnum? Sex { get; set; }\n\n    [Required]\n    [Range(1, 5)]\n    public int Score { get; set; }\n\n    [MaxLength(500)]\n    public string Message { get; set; }\n\n    public string FodServiceProviderInternalCode { get; set; }\n    public string ServiceInternalCode { get; set; }\n    public string ServiceRequestNumber { get; set; }\n    public string UserId { get; set; }\n}\n\npublic enum SexEnum\n{\n    Male = 0,\n    Female = 1\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#getfeedbackmodel","title":"GetFeedbackModel","text":"<pre><code>public class GetFeedbackModel\n{\n    public double? AverageScore { get; set; }\n    public int TotalCount { get; set; }\n    public string ServiceName { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/FeedbackComponentService/#formular-feedback-simplu","title":"Formular feedback simplu","text":"<pre><code>@page \"/servicii/feedback\"\n@inject IFeedbackComponentService FeedbackService\n@inject IFodNotificationService NotificationService\n@inject ICurrentUserContextService UserContext\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        L\u0103sa\u021bi-ne un feedback\n    &lt;/FodText&gt;\n\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;!-- Rating --&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Cum evalua\u021bi experien\u021ba dvs?\n            &lt;/FodText&gt;\n            &lt;FodRating @bind-Value=\"feedback.Score\" \n                       Size=\"FodSize.Large\"\n                       ShowLabels=\"true\" /&gt;\n\n            &lt;!-- Mesaj op\u021bional --&gt;\n            &lt;FodTextArea @bind-Value=\"feedback.Message\"\n                         Label=\"Mesaj (op\u021bional)\"\n                         Rows=\"4\"\n                         MaxLength=\"500\"\n                         HelperText=\"@($\"{feedback.Message?.Length ?? 0}/500 caractere\")\"\n                         Class=\"mt-4\" /&gt;\n\n            &lt;!-- Date contact pentru utilizatori neautentifica\u021bi --&gt;\n            @if (!isAuthenticated)\n            {\n                &lt;FodGrid Container=\"true\" Spacing=\"3\" Class=\"mt-4\"&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"feedback.FirstName\" \n                                  Label=\"Prenume\"\n                                  Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"feedback.LastName\" \n                                  Label=\"Nume\"\n                                  Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"feedback.Email\" \n                                  Label=\"Email\"\n                                  Type=\"email\"\n                                  Required=\"true\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"feedback.Phone\" \n                                  Label=\"Telefon\"\n                                  Mask=\"+373 (__) ___-___\" /&gt;\n                    &lt;/FodGrid&gt;\n                &lt;/FodGrid&gt;\n            }\n\n            &lt;!-- Date demografice op\u021bionale --&gt;\n            &lt;FodExpansionPanels Class=\"mt-4\"&gt;\n                &lt;FodExpansionPanel Title=\"Date demografice (op\u021bional)\"&gt;\n                    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                            &lt;FodInputNumber @bind-Value=\"feedback.Age\" \n                                            Label=\"V\u00e2rst\u0103\"\n                                            Min=\"1\"\n                                            Max=\"120\" /&gt;\n                        &lt;/FodGrid&gt;\n                        &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                            &lt;FodRadio @bind-Value=\"feedback.Sex\" \n                                      Label=\"Gen\"\n                                      Items=\"@genderOptions\" /&gt;\n                        &lt;/FodGrid&gt;\n                    &lt;/FodGrid&gt;\n                &lt;/FodExpansionPanel&gt;\n            &lt;/FodExpansionPanels&gt;\n\n            &lt;FodButton OnClick=\"SubmitFeedback\" \n                       Color=\"FodColor.Primary\"\n                       Class=\"mt-4\"\n                       Disabled=\"@(feedback.Score == 0 || isSubmitting)\"&gt;\n                @if (isSubmitting)\n                {\n                    &lt;FodLoadingButton /&gt;\n                }\n                else\n                {\n                    &lt;text&gt;Trimite Feedback&lt;/text&gt;\n                }\n            &lt;/FodButton&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public string ServiceCode { get; set; }\n    [Parameter] public string RequestNumber { get; set; }\n\n    private FeedbackComponentModel feedback = new();\n    private bool isAuthenticated;\n    private bool isSubmitting;\n\n    private List&lt;SelectableItem&gt; genderOptions = new()\n    {\n        new(SexEnum.Male, \"Masculin\"),\n        new(SexEnum.Female, \"Feminin\")\n    };\n\n    protected override async Task OnInitializedAsync()\n    {\n        var userContext = await UserContext.GetCurrentUserContext();\n        isAuthenticated = userContext?.IsAuthenticated ?? false;\n\n        if (isAuthenticated)\n        {\n            feedback.FirstName = userContext.FirstName;\n            feedback.LastName = userContext.LastName;\n            feedback.Email = userContext.Email;\n            feedback.Phone = userContext.PhoneNumber;\n            feedback.UserId = userContext.UserId;\n        }\n\n        feedback.ServiceInternalCode = ServiceCode;\n        feedback.ServiceRequestNumber = RequestNumber;\n    }\n\n    private async Task SubmitFeedback()\n    {\n        if (!await ValidateFeedback())\n            return;\n\n        isSubmitting = true;\n\n        try\n        {\n            var result = await FeedbackService.Add(feedback);\n\n            NotificationService.Success(\"Mul\u021bumim pentru feedback!\");\n\n            // Reset form sau redirec\u021bionare\n            feedback = new FeedbackComponentModel\n            {\n                ServiceInternalCode = ServiceCode,\n                ServiceRequestNumber = RequestNumber\n            };\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la trimiterea feedback-ului: {ex.Message}\");\n        }\n        finally\n        {\n            isSubmitting = false;\n        }\n    }\n\n    private async Task&lt;bool&gt; ValidateFeedback()\n    {\n        if (feedback.Score == 0)\n        {\n            NotificationService.Warning(\"V\u0103 rug\u0103m selecta\u021bi un rating\");\n            return false;\n        }\n\n        if (!isAuthenticated)\n        {\n            if (string.IsNullOrWhiteSpace(feedback.FirstName) || \n                string.IsNullOrWhiteSpace(feedback.LastName))\n            {\n                NotificationService.Warning(\"Numele este obligatoriu\");\n                return false;\n            }\n\n            if (string.IsNullOrWhiteSpace(feedback.Email))\n            {\n                NotificationService.Warning(\"Email-ul este obligatoriu\");\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#afisare-statistici-feedback","title":"Afi\u0219are statistici feedback","text":"<pre><code>@inject IFeedbackComponentService FeedbackService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        @if (feedbackStats == null)\n        {\n            &lt;FodSkeleton Type=\"SkeletonType.Rectangle\" Height=\"150\" /&gt;\n        }\n        else\n        {\n            &lt;FodGrid Container=\"true\" AlignItems=\"Align.Center\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                    &lt;div class=\"text-center\"&gt;\n                        &lt;FodText Typo=\"Typo.h3\" Color=\"FodColor.Primary\"&gt;\n                            @feedbackStats.AverageScore?.ToString(\"F1\") ?? \"-\"\n                        &lt;/FodText&gt;\n                        &lt;FodRating Value=\"@((int?)feedbackStats.AverageScore ?? 0)\" \n                                   ReadOnly=\"true\"\n                                   Size=\"FodSize.Small\" /&gt;\n                        &lt;FodText Typo=\"Typo.body2\" Class=\"mt-2\"&gt;\n                            din @feedbackStats.TotalCount recenzii\n                        &lt;/FodText&gt;\n                    &lt;/div&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\"&gt;\n                    &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                        @feedbackStats.ServiceName\n                    &lt;/FodText&gt;\n                    &lt;FodButton Variant=\"FodVariant.Text\" \n                               OnClick=\"ShowAllReviews\"\n                               EndIcon=\"@FodIcons.Material.Filled.ArrowForward\"&gt;\n                        Vezi toate recenziile\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Parameter] public string ServiceCode { get; set; }\n\n    private GetFeedbackModel feedbackStats;\n\n    protected override async Task OnInitializedAsync()\n    {\n        if (!string.IsNullOrEmpty(ServiceCode))\n        {\n            feedbackStats = await FeedbackService.Get(ServiceCode);\n        }\n    }\n\n    private void ShowAllReviews()\n    {\n        // Navigheaz\u0103 la pagina cu toate recenziile\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#componenta-fodfeedback-integrata","title":"Componenta FodFeedback integrat\u0103","text":"<pre><code>@page \"/servicii/{ServiceCode}/feedback\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Evaluare Serviciu\n    &lt;/FodText&gt;\n\n    &lt;!-- Statistici generale --&gt;\n    &lt;FodFeedbackBadge ServiceInternalCode=\"@ServiceCode\" \n                      ShowServiceName=\"true\"\n                      Class=\"mb-4\" /&gt;\n\n    &lt;!-- Formular feedback --&gt;\n    &lt;FodFeedback ServiceInternalCode=\"@ServiceCode\"\n                 ShowTitle=\"true\"\n                 ShowDemographics=\"true\"\n                 OnFeedbackSubmitted=\"OnFeedbackSubmitted\" /&gt;\n\n    &lt;!-- Lista recenzii recente --&gt;\n    @if (recentFeedbacks?.Any() == true)\n    {\n        &lt;FodCard Class=\"mt-4\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                    Recenzii recente\n                &lt;/FodText&gt;\n\n                &lt;FodList&gt;\n                    @foreach (var review in recentFeedbacks.Take(5))\n                    {\n                        &lt;FodListItem&gt;\n                            &lt;FodListItemAvatar&gt;\n                                &lt;FodAvatar&gt;\n                                    @review.FirstName?.FirstOrDefault()\n                                &lt;/FodAvatar&gt;\n                            &lt;/FodListItemAvatar&gt;\n                            &lt;FodListItemText&gt;\n                                &lt;FodText&gt;\n                                    &lt;strong&gt;@review.FirstName @review.LastName?.FirstOrDefault().&lt;/strong&gt;\n                                &lt;/FodText&gt;\n                                &lt;FodRating Value=\"review.Score\" \n                                           ReadOnly=\"true\" \n                                           Size=\"FodSize.Small\" /&gt;\n                                @if (!string.IsNullOrEmpty(review.Message))\n                                {\n                                    &lt;FodText Typo=\"Typo.body2\" Class=\"mt-1\"&gt;\n                                        @review.Message\n                                    &lt;/FodText&gt;\n                                }\n                            &lt;/FodListItemText&gt;\n                        &lt;/FodListItem&gt;\n                    }\n                &lt;/FodList&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public string ServiceCode { get; set; }\n\n    private List&lt;FeedbackComponentModel&gt; recentFeedbacks;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadRecentFeedbacks();\n    }\n\n    private async Task LoadRecentFeedbacks()\n    {\n        recentFeedbacks = await FeedbackService.GetList(ServiceCode);\n    }\n\n    private async Task OnFeedbackSubmitted()\n    {\n        // Re\u00eencarc\u0103 lista dup\u0103 trimitere\n        await LoadRecentFeedbacks();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#dashboard-analitica-feedback","title":"Dashboard analitic\u0103 feedback","text":"<pre><code>@inject IFeedbackComponentService FeedbackService\n@inject IServiceProviderService ServiceProviderService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Analitic\u0103 Feedback Servicii\n    &lt;/FodText&gt;\n\n    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n        @foreach (var service in services)\n        {\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\" lg=\"4\"&gt;\n                &lt;FodCard Height=\"100%\"&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                            @service.Name\n                        &lt;/FodText&gt;\n\n                        @if (feedbackData.ContainsKey(service.Code))\n                        {\n                            var data = feedbackData[service.Code];\n\n                            &lt;div class=\"d-flex align-items-center mb-2\"&gt;\n                                &lt;FodIcon Color=\"FodColor.Warning\" Class=\"me-2\"&gt;\n                                    @FodIcons.Material.Filled.Star\n                                &lt;/FodIcon&gt;\n                                &lt;FodText Typo=\"Typo.h4\"&gt;\n                                    @data.AverageScore?.ToString(\"F1\") ?? \"-\"\n                                &lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.body2\" Class=\"ms-2\"&gt;\n                                    / 5.0\n                                &lt;/FodText&gt;\n                            &lt;/div&gt;\n\n                            &lt;FodText Typo=\"Typo.body2\" GutterBottom=\"true\"&gt;\n                                Total recenzii: @data.TotalCount\n                            &lt;/FodText&gt;\n\n                            &lt;!-- Mini grafic distribu\u021bie rating --&gt;\n                            &lt;RatingDistribution ServiceCode=\"@service.Code\" /&gt;\n                        }\n                        else\n                        {\n                            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n                        }\n                    &lt;/FodCardContent&gt;\n                    &lt;FodCardActions&gt;\n                        &lt;FodButton Size=\"FodSize.Small\" \n                                   OnClick=\"() =&gt; ViewDetails(service.Code)\"&gt;\n                            Detalii\n                        &lt;/FodButton&gt;\n                        &lt;FodButton Size=\"FodSize.Small\" \n                                   OnClick=\"() =&gt; ExportData(service.Code)\"&gt;\n                            Export\n                        &lt;/FodButton&gt;\n                    &lt;/FodCardActions&gt;\n                &lt;/FodCard&gt;\n            &lt;/FodGrid&gt;\n        }\n    &lt;/FodGrid&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private List&lt;ServiceModel&gt; services = new();\n    private Dictionary&lt;string, GetFeedbackModel&gt; feedbackData = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        services = await ServiceProviderService.GetActiveServices();\n\n        // \u00cencarc\u0103 date feedback pentru toate serviciile\n        var tasks = services.Select(async service =&gt;\n        {\n            var feedback = await FeedbackService.Get(service.Code);\n            feedbackData[service.Code] = feedback;\n        });\n\n        await Task.WhenAll(tasks);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#7-integrare-cu-portal-extern","title":"7. Integrare cu portal extern","text":"<pre><code>public class FeedbackPortalIntegration\n{\n    private readonly IFeedbackComponentService _feedbackService;\n    private readonly NavigationManager _navigation;\n\n    public async Task NavigateToExternalPortal(string serviceCode, string requestNumber)\n    {\n        var portalUrl = await _feedbackService.GetFoFeedbackAddress();\n\n        // Construie\u0219te URL cu parametri\n        var uriBuilder = new UriBuilder(portalUrl);\n        var query = HttpUtility.ParseQueryString(uriBuilder.Query);\n        query[\"service\"] = serviceCode;\n        query[\"request\"] = requestNumber;\n        uriBuilder.Query = query.ToString();\n\n        // Navigheaz\u0103 \u00een tab nou\n        _navigation.NavigateTo(uriBuilder.ToString(), true);\n    }\n\n    public async Task ShowTermsAndConditions()\n    {\n        var tacUrl = await _feedbackService.GetTacAddress();\n        _navigation.NavigateTo(tacUrl, true);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#8-validare-avansata","title":"8. Validare avansat\u0103","text":"<pre><code>public class FeedbackValidator\n{\n    public ValidationResult Validate(FeedbackComponentModel model)\n    {\n        var errors = new List&lt;string&gt;();\n\n        // Validare rating\n        if (model.Score &lt; 1 || model.Score &gt; 5)\n        {\n            errors.Add(\"Rating-ul trebuie s\u0103 fie \u00eentre 1 \u0219i 5\");\n        }\n\n        // Validare email\n        if (!string.IsNullOrEmpty(model.Email))\n        {\n            var emailRegex = new Regex(@\"^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$\");\n            if (!emailRegex.IsMatch(model.Email))\n            {\n                errors.Add(\"Email invalid\");\n            }\n        }\n\n        // Validare telefon Moldova\n        if (!string.IsNullOrEmpty(model.Phone))\n        {\n            var phoneRegex = new Regex(@\"^\\+?373\\s?\\d{8}$\");\n            if (!phoneRegex.IsMatch(model.Phone.Replace(\" \", \"\").Replace(\"-\", \"\")))\n            {\n                errors.Add(\"Num\u0103r de telefon invalid pentru Moldova\");\n            }\n        }\n\n        // Validare v\u00e2rst\u0103\n        if (model.Age.HasValue &amp;&amp; (model.Age &lt; 1 || model.Age &gt; 120))\n        {\n            errors.Add(\"V\u00e2rsta trebuie s\u0103 fie \u00eentre 1 \u0219i 120\");\n        }\n\n        // Validare mesaj\n        if (!string.IsNullOrEmpty(model.Message))\n        {\n            if (model.Message.Length &gt; 500)\n            {\n                errors.Add(\"Mesajul nu poate dep\u0103\u0219i 500 de caractere\");\n            }\n\n            // Verificare con\u021binut inadecvat\n            if (ContainsInappropriateContent(model.Message))\n            {\n                errors.Add(\"Mesajul con\u021bine con\u021binut inadecvat\");\n            }\n        }\n\n        return new ValidationResult\n        {\n            IsValid = !errors.Any(),\n            Errors = errors\n        };\n    }\n\n    private bool ContainsInappropriateContent(string message)\n    {\n        // Implementare verificare con\u021binut\n        return false;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#9-agregare-si-raportare","title":"9. Agregare \u0219i raportare","text":"<pre><code>@inject IFeedbackComponentService FeedbackService\n@inject IReportingService ReportingService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Raport Feedback - @selectedPeriod\n        &lt;/FodText&gt;\n\n        &lt;!-- Filtre perioad\u0103 --&gt;\n        &lt;FodGrid Container=\"true\" Spacing=\"2\" AlignItems=\"Align.End\" Class=\"mb-4\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"4\"&gt;\n                &lt;FodDatePicker @bind-Date=\"startDate\" \n                               Label=\"De la\"\n                               MaxDate=\"DateTime.Today\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"4\"&gt;\n                &lt;FodDatePicker @bind-Date=\"endDate\" \n                               Label=\"P\u00e2n\u0103 la\"\n                               MaxDate=\"DateTime.Today\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"4\"&gt;\n                &lt;FodButton OnClick=\"GenerateReport\" \n                           Color=\"FodColor.Primary\"\n                           FullWidth=\"true\"&gt;\n                    Genereaz\u0103 Raport\n                &lt;/FodButton&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        @if (reportData != null)\n        {\n            &lt;!-- Metrici principale --&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\" Class=\"mb-4\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                    &lt;MetricCard Title=\"Rating Mediu\" \n                                Value=\"@reportData.AverageRating.ToString(\"F2\")\"\n                                Icon=\"@FodIcons.Material.Filled.Star\"\n                                Color=\"FodColor.Warning\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                    &lt;MetricCard Title=\"Total Feedback\" \n                                Value=\"@reportData.TotalFeedbacks\"\n                                Icon=\"@FodIcons.Material.Filled.RateReview\"\n                                Color=\"FodColor.Primary\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                    &lt;MetricCard Title=\"Servicii Evaluate\" \n                                Value=\"@reportData.ServicesCount\"\n                                Icon=\"@FodIcons.Material.Filled.BusinessCenter\"\n                                Color=\"FodColor.Success\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                    &lt;MetricCard Title=\"Cu Comentarii\" \n                                Value=\"@reportData.WithComments\"\n                                Icon=\"@FodIcons.Material.Filled.Comment\"\n                                Color=\"FodColor.Info\" /&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;!-- Grafic evolu\u021bie --&gt;\n            &lt;FeedbackTrendChart Data=\"@reportData.TrendData\" /&gt;\n\n            &lt;!-- Top servicii --&gt;\n            &lt;div class=\"mt-4\"&gt;\n                &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                    Top 10 Servicii dup\u0103 Rating\n                &lt;/FodText&gt;\n                &lt;TopServicesTable Services=\"@reportData.TopServices\" /&gt;\n            &lt;/div&gt;\n\n            &lt;!-- Export options --&gt;\n            &lt;div class=\"mt-4\"&gt;\n                &lt;FodButton OnClick=\"ExportPDF\" \n                           StartIcon=\"@FodIcons.Material.Filled.PictureAsPdf\"&gt;\n                    Export PDF\n                &lt;/FodButton&gt;\n                &lt;FodButton OnClick=\"ExportExcel\" \n                           StartIcon=\"@FodIcons.Material.Filled.GridOn\"\n                           Class=\"ms-2\"&gt;\n                    Export Excel\n                &lt;/FodButton&gt;\n                &lt;FodButton OnClick=\"SendEmail\" \n                           StartIcon=\"@FodIcons.Material.Filled.Email\"\n                           Class=\"ms-2\"&gt;\n                    Trimite pe Email\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DateTime? startDate = DateTime.Today.AddMonths(-1);\n    private DateTime? endDate = DateTime.Today;\n    private string selectedPeriod =&gt; $\"{startDate:dd.MM.yyyy} - {endDate:dd.MM.yyyy}\";\n    private FeedbackReportData reportData;\n\n    private async Task GenerateReport()\n    {\n        // Agregare date pentru toate serviciile\n        var allServices = await GetAllServices();\n        var feedbackTasks = allServices.Select(async service =&gt;\n        {\n            var feedbacks = await FeedbackService.GetList(service.Code);\n            return new { Service = service, Feedbacks = feedbacks };\n        });\n\n        var results = await Task.WhenAll(feedbackTasks);\n\n        // Procesare \u0219i agregare\n        reportData = ProcessFeedbackData(results, startDate.Value, endDate.Value);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#10-monitorizare-si-alerting","title":"10. Monitorizare \u0219i alerting","text":"<pre><code>public class FeedbackMonitoringService\n{\n    private readonly IFeedbackComponentService _feedbackService;\n    private readonly INotificationService _notificationService;\n    private readonly ILogger&lt;FeedbackMonitoringService&gt; _logger;\n\n    public async Task MonitorFeedbackTrends(string serviceCode)\n    {\n        var currentStats = await _feedbackService.Get(serviceCode);\n        var previousStats = await GetPreviousPeriodStats(serviceCode);\n\n        // Detecteaz\u0103 sc\u0103deri semnificative \u00een rating\n        if (currentStats.AverageScore.HasValue &amp;&amp; \n            previousStats.AverageScore.HasValue)\n        {\n            var difference = previousStats.AverageScore.Value - \n                           currentStats.AverageScore.Value;\n\n            if (difference &gt; 0.5) // Sc\u0103dere de peste 0.5 puncte\n            {\n                await _notificationService.SendAlertAsync(new Alert\n                {\n                    Type = AlertType.Warning,\n                    Title = \"Sc\u0103dere Rating Serviciu\",\n                    Message = $\"Rating-ul pentru {currentStats.ServiceName} a sc\u0103zut \" +\n                             $\"de la {previousStats.AverageScore:F1} la {currentStats.AverageScore:F1}\",\n                    ServiceCode = serviceCode,\n                    Timestamp = DateTime.UtcNow\n                });\n\n                _logger.LogWarning(\n                    \"Rating sc\u0103zut detectat pentru serviciul {ServiceCode}: {OldRating} -&gt; {NewRating}\",\n                    serviceCode, \n                    previousStats.AverageScore, \n                    currentStats.AverageScore);\n            }\n        }\n\n        // Monitorizare feedback negativ\n        var recentFeedbacks = await _feedbackService.GetList(serviceCode);\n        var negativeFeedbacks = recentFeedbacks\n            .Where(f =&gt; f.Score &lt;= 2)\n            .Take(10)\n            .ToList();\n\n        if (negativeFeedbacks.Count &gt;= 5)\n        {\n            await _notificationService.SendAlertAsync(new Alert\n            {\n                Type = AlertType.Error,\n                Title = \"Multiple Feedback-uri Negative\",\n                Message = $\"{negativeFeedbacks.Count} feedback-uri negative recente pentru {currentStats.ServiceName}\",\n                ServiceCode = serviceCode,\n                Timestamp = DateTime.UtcNow\n            });\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class FeedbackComponentServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IFeedbackComponentService _service;\n\n    [TestMethod]\n    public async Task Add_ValidFeedback_ReturnsId()\n    {\n        // Arrange\n        var feedback = new FeedbackComponentModel\n        {\n            FirstName = \"Ion\",\n            LastName = \"Popescu\",\n            Email = \"ion@example.com\",\n            Score = 5,\n            Message = \"Serviciu excelent!\",\n            ServiceInternalCode = \"SERVICE_001\"\n        };\n\n        SetupHttpResponse(1); // Return feedback ID\n\n        // Act\n        var result = await _service.Add(feedback);\n\n        // Assert\n        Assert.AreEqual(1, result);\n    }\n\n    [TestMethod]\n    public async Task Get_ExistingService_ReturnsStats()\n    {\n        // Arrange\n        var serviceCode = \"SERVICE_001\";\n        var expectedStats = new GetFeedbackModel\n        {\n            AverageScore = 4.5,\n            TotalCount = 150,\n            ServiceName = \"Eliberare Certificate\"\n        };\n\n        SetupHttpResponse(expectedStats);\n\n        // Act\n        var result = await _service.Get(serviceCode);\n\n        // Assert\n        Assert.AreEqual(4.5, result.AverageScore);\n        Assert.AreEqual(150, result.TotalCount);\n        Assert.AreEqual(\"Eliberare Certificate\", result.ServiceName);\n    }\n\n    [TestMethod]\n    [ExpectedException(typeof(ValidationException))]\n    public async Task Add_InvalidEmail_ThrowsException()\n    {\n        // Arrange\n        var feedback = new FeedbackComponentModel\n        {\n            Email = \"invalid-email\",\n            Score = 3\n        };\n\n        // Act\n        await _service.Add(feedback);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FeedbackComponentService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Validare complet\u0103 - Valida\u021bi toate datele \u00eenainte de trimitere</li> <li>Feedback anonim - Permite\u021bi feedback f\u0103r\u0103 autentificare</li> <li>Limite rate - Preveni\u021bi spam prin limitare submisii</li> <li>Moderare - Verifica\u021bi con\u021binut inadecvat \u00een mesaje</li> <li>R\u0103spuns rapid - Confirma\u021bi primirea feedback-ului</li> <li>Analiz\u0103 continu\u0103 - Monitoriza\u021bi tendin\u021be \u0219i alerte</li> <li>GDPR compliant - Respecta\u021bi confiden\u021bialitatea datelor</li> </ol>"},{"location":"fod/servicii/FeedbackComponentService/#13-concluzie","title":"13. Concluzie","text":"<p><code>FeedbackComponentService</code> ofer\u0103 o solu\u021bie complet\u0103 pentru colectarea \u0219i analiza feedback-ului utilizatorilor asupra serviciilor guvernamentale. Cu suport pentru rating, comentarii, statistici agregate \u0219i integrare cu portal extern, serviciul faciliteaz\u0103 \u00eembun\u0103t\u0103\u021birea continu\u0103 a calit\u0103\u021bii serviciilor publice prin ascultarea vocii cet\u0103\u021benilor.</p>"},{"location":"fod/servicii/FileUploadService/","title":"FileUploadService","text":""},{"location":"fod/servicii/FileUploadService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FileUploadService</code> este serviciul principal pentru gestionarea opera\u021biunilor cu fi\u0219iere \u00een aplica\u021bie. Ofer\u0103 func\u021bionalit\u0103\u021bi complete pentru \u00eenc\u0103rcare, desc\u0103rcare, \u0219tergere \u0219i vizualizare fi\u0219iere, comunic\u00e2nd cu API-ul backend pentru toate opera\u021biunile.</p>"},{"location":"fod/servicii/FileUploadService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/FileUploadService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;IFileUploadService, FileUploadServices&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(Configuration[\"ApiBaseUrl\"]);\n    client.Timeout = TimeSpan.FromMinutes(10);\n});\n\n// Cu politici de retry\nbuilder.Services.AddHttpClient&lt;IFileUploadService, FileUploadServices&gt;()\n    .AddPolicyHandler(GetRetryPolicy())\n    .AddPolicyHandler(GetCircuitBreakerPolicy());\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#configurare-pentru-fisiere-mari","title":"Configurare pentru fi\u0219iere mari","text":"<pre><code>// Configurare pentru upload fi\u0219iere mari\nbuilder.Services.Configure&lt;FormOptions&gt;(options =&gt;\n{\n    options.MultipartBodyLengthLimit = 209715200; // 200MB\n});\n\nbuilder.Services.Configure&lt;KestrelServerOptions&gt;(options =&gt;\n{\n    options.Limits.MaxRequestBodySize = 209715200; // 200MB\n});\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#interfata-ifileuploadservice","title":"Interfa\u021ba IFileUploadService","text":"<pre><code>public interface IFileUploadService\n{\n    Task&lt;FileUploadResponseModel&gt; UploadFile(FileUploaRequestdModel file);\n    Task&lt;byte[]&gt; DownloadFile(Guid FileId, string contentType);\n    Task&lt;byte[]&gt; GetFile(Guid FileId, string contentType);\n    Task&lt;bool&gt; DeleteFile(Guid FileId);\n    Task&lt;IEnumerable&lt;FileUploadResponseModel&gt;&gt; GetFilesById(IEnumerable&lt;FileUploadResponseModel&gt; request);\n    Task&lt;FileViewModel&gt; GetFileUrl(Guid id);\n    Task&lt;IEnumerable&lt;FileViewModel&gt;&gt; GetFilesUrls(IEnumerable&lt;Guid&gt; ids);\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/FileUploadService/#uploadfile","title":"UploadFile","text":"<p>\u00cencarc\u0103 un fi\u0219ier pe server.</p> <p>Parametri: - <code>file: FileUploaRequestdModel</code> - Modelul cu datele fi\u0219ierului</p> <p>Returneaz\u0103: <code>Task&lt;FileUploadResponseModel&gt;</code> - R\u0103spunsul cu detaliile fi\u0219ierului \u00eenc\u0103rcat</p> <p>Endpoint: <code>POST api/fod/file-upload</code></p>"},{"location":"fod/servicii/FileUploadService/#downloadfile","title":"DownloadFile","text":"<p>Descarc\u0103 un fi\u0219ier de pe server.</p> <p>Parametri: - <code>FileId: Guid</code> - ID-ul fi\u0219ierului - <code>contentType: string</code> - Tipul MIME al fi\u0219ierului</p> <p>Returneaz\u0103: <code>Task&lt;byte[]&gt;</code> - Con\u021binutul fi\u0219ierului ca array de bytes</p> <p>Endpoint: <code>GET api/fod/file-download/{FileId}/{contentType}</code></p>"},{"location":"fod/servicii/FileUploadService/#getfile","title":"GetFile","text":"<p>Ob\u021bine con\u021binutul unui fi\u0219ier (similar cu DownloadFile).</p> <p>Parametri: - <code>FileId: Guid</code> - ID-ul fi\u0219ierului - <code>contentType: string</code> - Tipul MIME al fi\u0219ierului</p> <p>Returneaz\u0103: <code>Task&lt;byte[]&gt;</code> - Con\u021binutul fi\u0219ierului</p> <p>Endpoint: <code>GET api/fod/file-get-url/{FileId}/{contentType}</code></p>"},{"location":"fod/servicii/FileUploadService/#deletefile","title":"DeleteFile","text":"<p>\u0218terge un fi\u0219ier de pe server.</p> <p>Parametri: - <code>FileId: Guid</code> - ID-ul fi\u0219ierului de \u0219ters</p> <p>Returneaz\u0103: <code>Task&lt;bool&gt;</code> - True dac\u0103 \u0219tergerea a reu\u0219it</p> <p>Endpoint: <code>DELETE api/fod/file-delete/{FileId}</code></p>"},{"location":"fod/servicii/FileUploadService/#getfilesbyid","title":"GetFilesById","text":"<p>Ob\u021bine detaliile mai multor fi\u0219iere.</p> <p>Parametri: - <code>request: IEnumerable&lt;FileUploadResponseModel&gt;</code> - Lista cu modele de fi\u0219iere</p> <p>Returneaz\u0103: <code>Task&lt;IEnumerable&lt;FileUploadResponseModel&gt;&gt;</code> - Detaliile fi\u0219ierelor</p> <p>Endpoint: <code>POST api/fod/file-getAll</code></p>"},{"location":"fod/servicii/FileUploadService/#getfileurl","title":"GetFileUrl","text":"<p>Ob\u021bine URL-ul pentru vizualizarea unui fi\u0219ier.</p> <p>Parametri: - <code>id: Guid</code> - ID-ul fi\u0219ierului</p> <p>Returneaz\u0103: <code>Task&lt;FileViewModel&gt;</code> - Model cu URL \u0219i detalii fi\u0219ier</p> <p>Endpoint: <code>GET api/fod/file-view/{id}</code></p>"},{"location":"fod/servicii/FileUploadService/#getfilesurls","title":"GetFilesUrls","text":"<p>Ob\u021bine URL-urile pentru mai multe fi\u0219iere.</p> <p>Parametri: - <code>ids: IEnumerable&lt;Guid&gt;</code> - Lista de ID-uri</p> <p>Returneaz\u0103: <code>Task&lt;IEnumerable&lt;FileViewModel&gt;&gt;</code> - Lista de modele cu URL-uri</p> <p>Endpoint: <code>POST api/fod/file-view-all</code></p>"},{"location":"fod/servicii/FileUploadService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/FileUploadService/#upload-fisier-simplu","title":"Upload fi\u0219ier simplu","text":"<pre><code>@inject IFileUploadService FileUploadService\n\n&lt;InputFile OnChange=\"@UploadFile\" /&gt;\n\n@if (uploadedFile != null)\n{\n    &lt;p&gt;Fi\u0219ier \u00eenc\u0103rcat: @uploadedFile.FileName&lt;/p&gt;\n}\n\n@code {\n    private FileUploadResponseModel uploadedFile;\n\n    private async Task UploadFile(InputFileChangeEventArgs e)\n    {\n        var file = e.File;\n        var buffer = new byte[file.Size];\n        await file.OpenReadStream().ReadAsync(buffer);\n\n        var request = new FileUploaRequestdModel\n        {\n            FileName = file.Name,\n            FileContent = buffer,\n            ContentType = file.ContentType,\n            Size = file.Size\n        };\n\n        uploadedFile = await FileUploadService.UploadFile(request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#download-fisier","title":"Download fi\u0219ier","text":"<pre><code>@inject IFileUploadService FileUploadService\n@inject IJSRuntime JS\n\n&lt;FodButton OnClick=\"@(() =&gt; DownloadFile(fileId))\"&gt;\n    Descarc\u0103 Fi\u0219ier\n&lt;/FodButton&gt;\n\n@code {\n    private Guid fileId = Guid.Parse(\"...\");\n\n    private async Task DownloadFile(Guid id)\n    {\n        var fileData = await FileUploadService.DownloadFile(id, \"application/pdf\");\n\n        // Trigger download \u00een browser\n        await JS.InvokeVoidAsync(\"downloadFileFromStream\", \n            \"document.pdf\", Convert.ToBase64String(fileData));\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#gestionare-fisiere-multiple","title":"Gestionare fi\u0219iere multiple","text":"<pre><code>@inject IFileUploadService FileUploadService\n\n&lt;div class=\"file-manager\"&gt;\n    @foreach (var file in uploadedFiles)\n    {\n        &lt;div class=\"file-item\"&gt;\n            &lt;span&gt;@file.FileName&lt;/span&gt;\n            &lt;FodButton Size=\"FodSize.Small\" \n                      OnClick=\"@(() =&gt; DeleteFile(file.Id))\"&gt;\n                \u0218terge\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;FileUploadResponseModel&gt; uploadedFiles = new();\n\n    private async Task DeleteFile(Guid fileId)\n    {\n        var success = await FileUploadService.DeleteFile(fileId);\n        if (success)\n        {\n            uploadedFiles.RemoveAll(f =&gt; f.Id == fileId);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#preview-fisiere","title":"Preview fi\u0219iere","text":"<pre><code>@inject IFileUploadService FileUploadService\n\n@if (fileViewModels.Any())\n{\n    &lt;div class=\"file-previews\"&gt;\n        @foreach (var file in fileViewModels)\n        {\n            &lt;div class=\"preview-item\"&gt;\n                @if (file.ContentType.StartsWith(\"image/\"))\n                {\n                    &lt;img src=\"@file.Url\" alt=\"@file.FileName\" /&gt;\n                }\n                else\n                {\n                    &lt;iframe src=\"@file.Url\" title=\"@file.FileName\"&gt;&lt;/iframe&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/div&gt;\n}\n\n@code {\n    private List&lt;FileViewModel&gt; fileViewModels = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        var fileIds = new[] { Guid.Parse(\"...\"), Guid.Parse(\"...\") };\n        fileViewModels = (await FileUploadService.GetFilesUrls(fileIds)).ToList();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#integrare-cu-componente","title":"Integrare cu componente","text":""},{"location":"fod/servicii/FileUploadService/#cu-fodinputfile","title":"Cu FodInputFile","text":"<pre><code>&lt;FodInputFile OnChange=\"@HandleFileUpload\"\n              Accept=\".pdf,.docx\"\n              MaxFileSize=\"10485760\"&gt;\n    &lt;ButtonContent&gt;\n        &lt;FodButton StartIcon=\"@FodIcons.Material.Filled.Upload\"&gt;\n            \u00cencarc\u0103 Document\n        &lt;/FodButton&gt;\n    &lt;/ButtonContent&gt;\n&lt;/FodInputFile&gt;\n\n@code {\n    private async Task HandleFileUpload(FodFileUploadEventArgs args)\n    {\n        foreach (var file in args.Files)\n        {\n            var response = await FileUploadService.UploadFile(file.ToRequestModel());\n            // Procesare r\u0103spuns\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/FileUploadService/#handler-cu-retry-si-logging","title":"Handler cu retry \u0219i logging","text":"<pre><code>public class ResilientFileUploadService : IFileUploadService\n{\n    private readonly FileUploadServices _innerService;\n    private readonly ILogger&lt;ResilientFileUploadService&gt; _logger;\n\n    public async Task&lt;FileUploadResponseModel&gt; UploadFile(FileUploaRequestdModel file)\n    {\n        try\n        {\n            return await _innerService.UploadFile(file);\n        }\n        catch (HttpRequestException ex)\n        {\n            _logger.LogError(ex, \"Eroare la \u00eenc\u0103rcarea fi\u0219ierului {FileName}\", \n                file.FileName);\n            throw new FileUploadException(\"\u00cenc\u0103rcarea a e\u0219uat\", ex);\n        }\n        catch (TaskCanceledException)\n        {\n            _logger.LogWarning(\"Timeout la \u00eenc\u0103rcarea fi\u0219ierului {FileName}\", \n                file.FileName);\n            throw new FileUploadException(\"\u00cenc\u0103rcarea a dep\u0103\u0219it timpul limit\u0103\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#validare-fisiere","title":"Validare fi\u0219iere","text":"<pre><code>public class ValidatingFileUploadService : IFileUploadService\n{\n    private readonly string[] _allowedExtensions = { \".pdf\", \".docx\", \".xlsx\" };\n    private readonly long _maxFileSize = 10 * 1024 * 1024; // 10MB\n\n    public async Task&lt;FileUploadResponseModel&gt; UploadFile(FileUploaRequestdModel file)\n    {\n        // Validare extensie\n        var extension = Path.GetExtension(file.FileName);\n        if (!_allowedExtensions.Contains(extension, StringComparer.OrdinalIgnoreCase))\n        {\n            throw new ValidationException($\"Tipul de fi\u0219ier {extension} nu este permis\");\n        }\n\n        // Validare dimensiune\n        if (file.FileContent.Length &gt; _maxFileSize)\n        {\n            throw new ValidationException(\"Fi\u0219ierul dep\u0103\u0219e\u0219te dimensiunea maxim\u0103 permis\u0103\");\n        }\n\n        return await _innerService.UploadFile(file);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FileUploadService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Timeout configurat - 10 minute pentru upload-uri mari</li> <li>HttpClient separat - Creaz\u0103 client nou pentru upload cu timeout specific</li> <li>Endpoints RESTful - Folose\u0219te conven\u021bii REST standard</li> <li>Content type required - Necesit\u0103 content type pentru download/get</li> <li>Batch operations - Suport\u0103 opera\u021bii pe mai multe fi\u0219iere</li> </ol>"},{"location":"fod/servicii/FileUploadService/#bune-practici","title":"Bune practici","text":"<ol> <li>Validare client-side - Valida\u021bi fi\u0219ierele \u00eenainte de upload</li> <li>Progress indicator - Afi\u0219a\u021bi progres pentru fi\u0219iere mari</li> <li>Chunk upload - Pentru fi\u0219iere foarte mari, considera\u021bi upload \u00een buc\u0103\u021bi</li> <li>Error recovery - Implementa\u021bi retry pentru erori de re\u021bea</li> <li>Memory management - Evita\u021bi \u00eenc\u0103rcarea complet\u0103 \u00een memorie pentru fi\u0219iere mari</li> <li>Security - Valida\u021bi tipurile de fi\u0219iere \u0219i scana\u021bi pentru malware</li> </ol>"},{"location":"fod/servicii/FileUploadService/#concluzie","title":"Concluzie","text":"<p>FileUploadService ofer\u0103 o interfa\u021b\u0103 complet\u0103 pentru gestionarea fi\u0219ierelor \u00een aplica\u021bii Blazor. Cu suport pentru toate opera\u021biunile CRUD \u0219i func\u021bionalit\u0103\u021bi avansate precum vizualizare \u0219i opera\u021bii batch, serviciul faciliteaz\u0103 implementarea unui sistem robust de management al documentelor.</p>"},{"location":"fod/servicii/FodNotificationService/","title":"FodNotificationService","text":""},{"location":"fod/servicii/FodNotificationService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodNotificationService</code> este serviciul principal pentru gestionarea notific\u0103rilor \u00een aplica\u021biile FOD. Ofer\u0103 func\u021bionalit\u0103\u021bi complete pentru afi\u0219area, gestionarea \u0219i configurarea notific\u0103rilor de tip toast/snackbar. Serviciul suport\u0103 diferite severit\u0103\u021bi, tranzi\u021bii animate, prevenirea duplicatelor \u0219i gestionare automat\u0103 la navigare.</p>"},{"location":"fod/servicii/FodNotificationService/#inregistrare","title":"\u00cenregistrare","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IFodNotificationService, FodNotificationService&gt;();\n\n// Cu configurare personalizat\u0103\nbuilder.Services.AddScoped&lt;FodNotificationConfiguration&gt;(sp =&gt; \n    new FodNotificationConfiguration\n    {\n        MaxDisplayedNotifications = 5,\n        PreventDuplicates = true,\n        ClearAfterNavigation = false\n    });\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton @onclick=\"ShowNotification\"&gt;Arat\u0103 Notificare&lt;/FodButton&gt;\n\n@code {\n    private void ShowNotification()\n    {\n        NotificationService.Add(\"Opera\u021biune realizat\u0103 cu succes!\", FodSeverity.Success);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/FodNotificationService/#fodnotificationconfiguration","title":"FodNotificationConfiguration","text":"<pre><code>public class FodNotificationConfiguration\n{\n    public int MaxDisplayedNotifications { get; set; } = 5;\n    public bool PreventDuplicates { get; set; } = true;\n    public bool ClearAfterNavigation { get; set; } = false;\n    public int ShowTransitionDuration { get; set; } = 500;\n    public int HideTransitionDuration { get; set; } = 500;\n    public int VisibleStateDuration { get; set; } = 5000;\n    public bool RequireInteraction { get; set; } = false;\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#metode-principale","title":"Metode Principale","text":""},{"location":"fod/servicii/FodNotificationService/#add","title":"Add","text":"<pre><code>FodNotification Add(string message, \n                   FodSeverity severity = FodSeverity.Normal, \n                   Action&lt;FodNotificationOptions&gt; configure = null)\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#clear","title":"Clear","text":"<pre><code>void Clear()\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#remove","title":"Remove","text":"<pre><code>void Remove(FodNotification notification)\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/servicii/FodNotificationService/#notificari-cu-diferite-severitati","title":"Notific\u0103ri cu Diferite Severit\u0103\u021bi","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;div class=\"notification-examples\"&gt;\n    &lt;FodButton Color=\"FodColor.Info\" @onclick=\"ShowInfo\"&gt;\n        Info\n    &lt;/FodButton&gt;\n\n    &lt;FodButton Color=\"FodColor.Success\" @onclick=\"ShowSuccess\"&gt;\n        Success\n    &lt;/FodButton&gt;\n\n    &lt;FodButton Color=\"FodColor.Warning\" @onclick=\"ShowWarning\"&gt;\n        Warning\n    &lt;/FodButton&gt;\n\n    &lt;FodButton Color=\"FodColor.Error\" @onclick=\"ShowError\"&gt;\n        Error\n    &lt;/FodButton&gt;\n&lt;/div&gt;\n\n@code {\n    private void ShowInfo()\n    {\n        NotificationService.Add(\"Informa\u021bie util\u0103 pentru utilizator\", FodSeverity.Info);\n    }\n\n    private void ShowSuccess()\n    {\n        NotificationService.Add(\"Opera\u021biune finalizat\u0103 cu succes!\", FodSeverity.Success);\n    }\n\n    private void ShowWarning()\n    {\n        NotificationService.Add(\"Aten\u021bie! Verifica\u021bi datele introduse\", FodSeverity.Warning);\n    }\n\n    private void ShowError()\n    {\n        NotificationService.Add(\"Eroare la procesare. \u00cencerca\u021bi din nou.\", FodSeverity.Error);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#notificari-cu-optiuni-personalizate","title":"Notific\u0103ri cu Op\u021biuni Personalizate","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton @onclick=\"ShowCustomNotification\"&gt;\n    Notificare Personalizat\u0103\n&lt;/FodButton&gt;\n\n@code {\n    private void ShowCustomNotification()\n    {\n        NotificationService.Add(\"Click pentru detalii\", FodSeverity.Info, options =&gt;\n        {\n            options.RequireInteraction = true; // Nu se \u00eenchide automat\n            options.ShowCloseIcon = true;\n            options.VisibleStateDuration = 10000; // 10 secunde\n            options.Onclick = notification =&gt;\n            {\n                // Ac\u021biune la click\n                NavigationManager.NavigateTo(\"/details\");\n            };\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#gestionare-operatiuni-asincrone","title":"Gestionare Opera\u021biuni Asincrone","text":"<pre><code>@inject IFodNotificationService NotificationService\n@inject IDataService DataService\n\n&lt;FodButton @onclick=\"SaveData\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n\n@code {\n    private async Task SaveData()\n    {\n        try\n        {\n            // Notificare de procesare\n            var processingNotification = NotificationService.Add(\n                \"Se salveaz\u0103 datele...\", \n                FodSeverity.Info,\n                options =&gt; options.RequireInteraction = true\n            );\n\n            await DataService.SaveAsync(data);\n\n            // \u00cenl\u0103tur\u0103 notificarea de procesare\n            NotificationService.Remove(processingNotification);\n\n            // Afi\u0219eaz\u0103 succes\n            NotificationService.Add(\"Date salvate cu succes!\", FodSeverity.Success);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Add($\"Eroare: {ex.Message}\", FodSeverity.Error);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#notificari-cu-actiuni","title":"Notific\u0103ri cu Ac\u021biuni","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton @onclick=\"DeleteItem\"&gt;\u0218terge&lt;/FodButton&gt;\n\n@code {\n    private void DeleteItem()\n    {\n        var item = GetSelectedItem();\n\n        // \u0218terge item-ul\n        DeleteFromDatabase(item);\n\n        // Notificare cu op\u021biune de anulare\n        NotificationService.Add($\"{item.Name} a fost \u0219ters\", FodSeverity.Info, options =&gt;\n        {\n            options.ShowCloseIcon = true;\n            options.VisibleStateDuration = 8000;\n            options.Action = new FodNotificationAction\n            {\n                Text = \"Anuleaz\u0103\",\n                OnClick = () =&gt; \n                {\n                    // Restaureaz\u0103 item-ul\n                    RestoreItem(item);\n                    NotificationService.Add(\"\u0218tergerea a fost anulat\u0103\", FodSeverity.Success);\n                }\n            };\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#prevenire-duplicate","title":"Prevenire Duplicate","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton @onclick=\"ShowDuplicateTest\"&gt;\n    Test Duplicate\n&lt;/FodButton&gt;\n\n@code {\n    private void ShowDuplicateTest()\n    {\n        // Cu PreventDuplicates = true, doar prima va fi afi\u0219at\u0103\n        NotificationService.Add(\"Aceast\u0103 notificare apare o singur\u0103 dat\u0103\", FodSeverity.Info);\n        NotificationService.Add(\"Aceast\u0103 notificare apare o singur\u0103 dat\u0103\", FodSeverity.Info);\n        NotificationService.Add(\"Aceast\u0103 notificare apare o singur\u0103 dat\u0103\", FodSeverity.Info);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#integrare-cu-formulare","title":"Integrare cu Formulare","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleValidSubmit\" OnInvalidSubmit=\"@HandleInvalidSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;!-- C\u00e2mpuri formular --&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Trimite&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private async Task HandleValidSubmit()\n    {\n        try\n        {\n            await SubmitForm();\n            NotificationService.Add(\"Formular trimis cu succes!\", FodSeverity.Success);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Add($\"Eroare la trimitere: {ex.Message}\", FodSeverity.Error);\n        }\n    }\n\n    private void HandleInvalidSubmit()\n    {\n        NotificationService.Add(\"V\u0103 rug\u0103m corecta\u021bi erorile din formular\", FodSeverity.Warning);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#notificari-grupate","title":"Notific\u0103ri Grupate","text":"<pre><code>@inject IFodNotificationService NotificationService\n\n&lt;FodButton @onclick=\"ProcessBatch\"&gt;Proceseaz\u0103 Lot&lt;/FodButton&gt;\n\n@code {\n    private async Task ProcessBatch()\n    {\n        var items = GetItemsToProcess();\n        var successCount = 0;\n        var errorCount = 0;\n\n        foreach (var item in items)\n        {\n            try\n            {\n                await ProcessItem(item);\n                successCount++;\n            }\n            catch\n            {\n                errorCount++;\n            }\n        }\n\n        // Raport final\n        if (errorCount == 0)\n        {\n            NotificationService.Add($\"Toate cele {successCount} elemente au fost procesate cu succes!\", \n                                  FodSeverity.Success);\n        }\n        else\n        {\n            NotificationService.Add($\"Procesare complet\u0103: {successCount} reu\u0219ite, {errorCount} e\u0219uate\", \n                                  FodSeverity.Warning);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#evenimente-si-callback-uri","title":"Evenimente \u0219i Callback-uri","text":""},{"location":"fod/servicii/FodNotificationService/#onnotificationsupdated","title":"OnNotificationsUpdated","text":"<pre><code>NotificationService.OnNotificationsUpdated += () =&gt;\n{\n    // Se apeleaz\u0103 c\u00e2nd lista de notific\u0103ri se schimb\u0103\n    InvokeAsync(StateHasChanged);\n};\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#onclose-pe-notificare","title":"OnClose (pe Notificare)","text":"<pre><code>var notification = NotificationService.Add(\"Test\");\nnotification.OnClose += (n) =&gt;\n{\n    Console.WriteLine($\"Notificarea '{n.Message}' a fost \u00eenchis\u0103\");\n};\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#configurare-globala","title":"Configurare Global\u0103","text":"<pre><code>// \u00cen Program.cs\nservices.AddScoped&lt;FodNotificationConfiguration&gt;(sp =&gt;\n{\n    return new FodNotificationConfiguration\n    {\n        MaxDisplayedNotifications = 3,\n        PreventDuplicates = true,\n        ClearAfterNavigation = false,\n        ShowTransitionDuration = 300,\n        HideTransitionDuration = 300,\n        VisibleStateDuration = 5000,\n        Position = NotificationPosition.TopRight,\n        ShowCloseIcon = true\n    };\n});\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#integrare-cu-fodnotificationprovider","title":"Integrare cu FodNotificationProvider","text":"<pre><code>&lt;!-- \u00cen App.razor sau MainLayout.razor --&gt;\n&lt;FodNotificationProvider /&gt;\n\n&lt;!-- Con\u021binutul aplica\u021biei --&gt;\n&lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n    &lt;!-- ... --&gt;\n&lt;/Router&gt;\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#stilizare-personalizata","title":"Stilizare Personalizat\u0103","text":"<pre><code>/* Stiluri pentru notific\u0103ri */\n.fod-notification {\n    min-width: 300px;\n    max-width: 500px;\n}\n\n.fod-notification-success {\n    background-color: #d4edda;\n    border-color: #c3e6cb;\n    color: #155724;\n}\n\n.fod-notification-error {\n    background-color: #f8d7da;\n    border-color: #f5c6cb;\n    color: #721c24;\n}\n\n/* Anima\u021bii personalizate */\n.fod-notification-showing {\n    animation: slideIn 0.3s ease-out;\n}\n\n.fod-notification-hiding {\n    animation: slideOut 0.3s ease-in;\n}\n\n@keyframes slideIn {\n    from {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n    to {\n        transform: translateX(0);\n        opacity: 1;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#thread-safety","title":"Thread Safety","text":"<p>Serviciul folose\u0219te <code>ReaderWriterLockSlim</code> pentru opera\u021bii thread-safe:</p> <pre><code>private ReaderWriterLockSlim NotificationLock { get; }\nprivate IList&lt;FodNotification&gt; NotificationList { get; }\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#best-practices","title":"Best Practices","text":"<ol> <li>Mesaje clare \u0219i concise - Evita\u021bi mesaje lungi</li> <li>Severitate corect\u0103 - Folosi\u021bi severitatea potrivit\u0103 contextului</li> <li>Ac\u021biuni pentru erori - Oferi\u021bi utilizatorului op\u021biuni de remediere</li> <li>Evita\u021bi spam-ul - Folosi\u021bi PreventDuplicates</li> <li>Feedback imediat - Notifica\u021bi imediat dup\u0103 ac\u021biuni</li> <li>Persisten\u021b\u0103 pentru opera\u021bii lungi - RequireInteraction pentru procese importante</li> </ol>"},{"location":"fod/servicii/FodNotificationService/#gestionare-navigare","title":"Gestionare Navigare","text":"<pre><code>// Configurare comportament la navigare\nConfiguration.ClearAfterNavigation = true; // \u0218terge toate notific\u0103rile\n\n// Sau per notificare\noptions.CloseAfterNavigation = true; // \u00cenchide doar aceast\u0103 notificare\n</code></pre>"},{"location":"fod/servicii/FodNotificationService/#limitari","title":"Limit\u0103ri","text":"<ul> <li>Num\u0103r maxim de notific\u0103ri afi\u0219ate simultan (configurat)</li> <li>Nu persist\u0103 notific\u0103rile \u00eentre refresh-uri de pagin\u0103</li> <li>Nu suport\u0103 notific\u0103ri complexe cu markup HTML bogat</li> </ul>"},{"location":"fod/servicii/FodNotificationService/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/servicii/FodNotificationService/#notificarile-nu-apar","title":"Notific\u0103rile nu apar","text":"<ul> <li>Verifica\u021bi c\u0103 <code>FodNotificationProvider</code> este ad\u0103ugat \u00een layout</li> <li>Verifica\u021bi \u00eenregistrarea serviciului \u00een DI</li> </ul>"},{"location":"fod/servicii/FodNotificationService/#notificarile-dispar-prea-repede","title":"Notific\u0103rile dispar prea repede","text":"<ul> <li>Ajusta\u021bi <code>VisibleStateDuration</code> \u00een configurare</li> <li>Seta\u021bi <code>RequireInteraction = true</code> pentru notific\u0103ri importante</li> </ul>"},{"location":"fod/servicii/FodNotificationService/#duplicate-apar","title":"Duplicate apar","text":"<ul> <li>Activa\u021bi <code>PreventDuplicates</code> \u00een configurare</li> <li>Verifica\u021bi c\u0103 mesajele sunt identice (inclusiv spa\u021bii)</li> </ul>"},{"location":"fod/servicii/FodNotificationService/#concluzie","title":"Concluzie","text":"<p>FodNotificationService ofer\u0103 un sistem complet \u0219i flexibil pentru gestionarea notific\u0103rilor \u00een aplica\u021bii Blazor, cu suport pentru diferite scenarii de utilizare, de la simple mesaje informative p\u00e2n\u0103 la notific\u0103ri complexe cu ac\u021biuni \u0219i persisten\u021b\u0103.</p>"},{"location":"fod/servicii/FodPopoverService/","title":"FodPopoverService","text":""},{"location":"fod/servicii/FodPopoverService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>FodPopoverService</code> este serviciul responsabil pentru gestionarea centralizat\u0103 a componentelor popover \u00een aplica\u021bie. Permite \u00eenregistrarea, actualizarea \u0219i dez\u00eenregistrarea popover-urilor, oferind un mecanism pentru afi\u0219area con\u021binutului flotant pozi\u021bionat relativ la elementele p\u0103rinte.</p>"},{"location":"fod/servicii/FodPopoverService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/FodPopoverService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IFodPopoverService, FodPopoverService&gt;();\n\n// Cu op\u021biuni personalizate\nbuilder.Services.Configure&lt;PopoverOptions&gt;(options =&gt;\n{\n    options.ContainerClass = \"popover-container\";\n    options.FlipMargin = 5;\n});\n\nbuilder.Services.AddScoped&lt;IFodPopoverService, FodPopoverService&gt;();\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#configurare-javascript","title":"Configurare JavaScript","text":"<pre><code>// \u00cen fi\u0219ierul JS principal\nwindow.fodPopover = {\n    initilize: function (containerClass, flipMargin) {\n        // Ini\u021bializare popover manager\n        this.containerClass = containerClass;\n        this.flipMargin = flipMargin;\n        this.popovers = new Map();\n    },\n\n    connect: function (id) {\n        // Conectare popover nou\n        const element = document.getElementById(id);\n        if (element) {\n            this.popovers.set(id, element);\n            // Setup positioning logic\n        }\n    },\n\n    disconnect: function (id) {\n        // Deconectare popover\n        this.popovers.delete(id);\n    },\n\n    dispose: function () {\n        // Cleanup\n        this.popovers.clear();\n    }\n};\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#interfata-ifodpopoverservice","title":"Interfa\u021ba IFodPopoverService","text":"<pre><code>public interface IFodPopoverService\n{\n    FodPopoverHandler Register(RenderFragment fragment);\n    Task&lt;bool&gt; Unregister(FodPopoverHandler handler);\n    IEnumerable&lt;FodPopoverHandler&gt; Handlers { get; }\n    Task InitializeIfNeeded();\n    event EventHandler FragmentsChanged;\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#clase-asociate","title":"Clase asociate","text":""},{"location":"fod/servicii/FodPopoverService/#fodpopoverhandler","title":"FodPopoverHandler","text":"<p>Reprezint\u0103 un handler pentru un popover individual.</p> <p>Propriet\u0103\u021bi: - <code>Id: Guid</code> - Identificator unic - <code>Fragment: RenderFragment</code> - Con\u021binutul de randat - <code>IsConnected: bool</code> - Indic\u0103 dac\u0103 este conectat la DOM - <code>Class: string</code> - Clase CSS - <code>Style: string</code> - Stiluri inline - <code>Tag: object</code> - Tag personalizat - <code>ShowContent: bool</code> - Indic\u0103 dac\u0103 con\u021binutul este vizibil - <code>UserAttributes: Dictionary&lt;string, object&gt;</code> - Atribute utilizator</p> <p>Metode: - <code>Initialize()</code> - Ini\u021bializeaz\u0103 conexiunea cu JS - <code>Detach()</code> - Deconecteaz\u0103 de la JS - <code>UpdateFragment()</code> - Actualizeaz\u0103 con\u021binutul - <code>SetComponentBaseParameters()</code> - Seteaz\u0103 parametrii de baz\u0103</p>"},{"location":"fod/servicii/FodPopoverService/#popoveroptions","title":"PopoverOptions","text":"<pre><code>public class PopoverOptions\n{\n    public string ContainerClass { get; set; } = \"fod-popover-container\";\n    public int FlipMargin { get; set; } = 5;\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/FodPopoverService/#register","title":"Register","text":"<p>\u00cenregistreaz\u0103 un nou popover.</p> <p>Parametri: - <code>fragment: RenderFragment</code> - Con\u021binutul popover-ului</p> <p>Returneaz\u0103: <code>FodPopoverHandler</code> - Handler pentru gestionarea popover-ului</p>"},{"location":"fod/servicii/FodPopoverService/#unregister","title":"Unregister","text":"<p>Dez\u00eenregistreaz\u0103 un popover existent.</p> <p>Parametri: - <code>handler: FodPopoverHandler</code> - Handler-ul de dez\u00eenregistrat</p> <p>Returneaz\u0103: <code>Task&lt;bool&gt;</code> - True dac\u0103 dez\u00eenregistrarea a reu\u0219it</p>"},{"location":"fod/servicii/FodPopoverService/#initializeifneeded","title":"InitializeIfNeeded","text":"<p>Ini\u021bializeaz\u0103 serviciul dac\u0103 nu a fost deja ini\u021bializat.</p> <p>Parametri: Niciun parametru</p> <p>Returneaz\u0103: <code>Task</code> - Task pentru a\u0219teptarea ini\u021bializ\u0103rii</p>"},{"location":"fod/servicii/FodPopoverService/#evenimente","title":"Evenimente","text":""},{"location":"fod/servicii/FodPopoverService/#fragmentschanged","title":"FragmentsChanged","text":"<p>Declan\u0219at c\u00e2nd lista de fragmente se modific\u0103 (ad\u0103ugare/\u0219tergere).</p>"},{"location":"fod/servicii/FodPopoverService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/FodPopoverService/#utilizare-de-baza-cu-fodpopover","title":"Utilizare de baz\u0103 cu FodPopover","text":"<pre><code>@inject IFodPopoverService PopoverService\n\n&lt;FodPopover&gt;\n    &lt;ActivatorContent&gt;\n        &lt;FodButton&gt;Deschide Popover&lt;/FodButton&gt;\n    &lt;/ActivatorContent&gt;\n    &lt;ChildContent&gt;\n        &lt;div class=\"popover-content\"&gt;\n            &lt;h5&gt;Titlu Popover&lt;/h5&gt;\n            &lt;p&gt;Con\u021binut popover&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/ChildContent&gt;\n&lt;/FodPopover&gt;\n\n@code {\n    // FodPopover folose\u0219te intern PopoverService\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#gestionare-manuala-popover","title":"Gestionare manual\u0103 popover","text":"<pre><code>@inject IFodPopoverService PopoverService\n@implements IDisposable\n\n&lt;div @ref=\"anchorElement\" @onclick=\"TogglePopover\"&gt;\n    Click pentru popover\n&lt;/div&gt;\n\n@code {\n    private ElementReference anchorElement;\n    private FodPopoverHandler popoverHandler;\n    private bool isOpen = false;\n\n    private async Task TogglePopover()\n    {\n        if (!isOpen)\n        {\n            // \u00cenregistrare popover\n            popoverHandler = PopoverService.Register(\n                @&lt;div class=\"custom-popover\"&gt;\n                    &lt;h6&gt;Popover Manual&lt;/h6&gt;\n                    &lt;p&gt;Con\u021binut gestionat manual&lt;/p&gt;\n                    &lt;FodButton Size=\"FodSize.Small\" @onclick=\"ClosePopover\"&gt;\n                        \u00cenchide\n                    &lt;/FodButton&gt;\n                &lt;/div&gt;\n            );\n\n            await popoverHandler.Initialize();\n            isOpen = true;\n        }\n        else\n        {\n            await ClosePopover();\n        }\n    }\n\n    private async Task ClosePopover()\n    {\n        if (popoverHandler != null)\n        {\n            await PopoverService.Unregister(popoverHandler);\n            popoverHandler = null;\n            isOpen = false;\n        }\n    }\n\n    public void Dispose()\n    {\n        _ = ClosePopover();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#service-pentru-tooltip-uri-globale","title":"Service pentru tooltip-uri globale","text":"<pre><code>public class TooltipService\n{\n    private readonly IFodPopoverService _popoverService;\n    private readonly Dictionary&lt;string, FodPopoverHandler&gt; _tooltips = new();\n\n    public TooltipService(IFodPopoverService popoverService)\n    {\n        _popoverService = popoverService;\n    }\n\n    public async Task&lt;string&gt; ShowTooltip(RenderFragment content, TooltipOptions options)\n    {\n        var tooltipId = Guid.NewGuid().ToString();\n\n        var handler = _popoverService.Register(builder =&gt;\n        {\n            builder.OpenElement(0, \"div\");\n            builder.AddAttribute(1, \"class\", $\"tooltip {options.Class}\");\n            builder.AddAttribute(2, \"style\", options.Style);\n            builder.AddContent(3, content);\n            builder.CloseElement();\n        });\n\n        await handler.Initialize();\n        _tooltips[tooltipId] = handler;\n\n        return tooltipId;\n    }\n\n    public async Task HideTooltip(string tooltipId)\n    {\n        if (_tooltips.TryGetValue(tooltipId, out var handler))\n        {\n            await _popoverService.Unregister(handler);\n            _tooltips.Remove(tooltipId);\n        }\n    }\n\n    public async Task HideAllTooltips()\n    {\n        foreach (var handler in _tooltips.Values)\n        {\n            await _popoverService.Unregister(handler);\n        }\n        _tooltips.Clear();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#popover-cu-actualizare-dinamica","title":"Popover cu actualizare dinamic\u0103","text":"<pre><code>@inject IFodPopoverService PopoverService\n\n&lt;div class=\"user-card\" @onclick=\"ShowUserDetails\"&gt;\n    &lt;img src=\"@user.Avatar\" /&gt;\n    &lt;span&gt;@user.Name&lt;/span&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public UserModel user { get; set; }\n\n    private FodPopoverHandler userPopover;\n    private UserDetails userDetails;\n    private bool isLoading = true;\n\n    private async Task ShowUserDetails()\n    {\n        // \u00cenregistrare popover cu loading\n        userPopover = PopoverService.Register(BuildPopoverContent());\n        await userPopover.Initialize();\n\n        // \u00cenc\u0103rcare date asincron\n        userDetails = await LoadUserDetails(user.Id);\n        isLoading = false;\n\n        // Actualizare con\u021binut\n        userPopover.UpdateFragment(BuildPopoverContent(), this, \"user-details-popover\", \"\", true);\n    }\n\n    private RenderFragment BuildPopoverContent() =&gt; builder =&gt;\n    {\n        if (isLoading)\n        {\n            builder.OpenComponent&lt;FodLoadingCircular&gt;(0);\n            builder.CloseComponent();\n        }\n        else\n        {\n            builder.OpenElement(0, \"div\");\n            builder.AddAttribute(1, \"class\", \"user-details\");\n\n            builder.OpenElement(2, \"h5\");\n            builder.AddContent(3, userDetails.FullName);\n            builder.CloseElement();\n\n            builder.OpenElement(4, \"p\");\n            builder.AddContent(5, userDetails.Email);\n            builder.CloseElement();\n\n            builder.OpenElement(6, \"p\");\n            builder.AddContent(7, userDetails.Department);\n            builder.CloseElement();\n\n            builder.CloseElement();\n        }\n    };\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#integrare-cu-fodpopoverprovider","title":"Integrare cu FodPopoverProvider","text":"<pre><code>&lt;!-- \u00cen MainLayout.razor sau App.razor --&gt;\n&lt;FodPopoverProvider /&gt;\n\n@code {\n    // FodPopoverProvider gestioneaz\u0103 randarea tuturor popover-urilor \u00eenregistrate\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/FodPopoverService/#service-cu-logging","title":"Service cu logging","text":"<pre><code>public class LoggingPopoverService : IFodPopoverService\n{\n    private readonly FodPopoverService _innerService;\n    private readonly ILogger&lt;LoggingPopoverService&gt; _logger;\n\n    public FodPopoverHandler Register(RenderFragment fragment)\n    {\n        _logger.LogDebug(\"\u00cenregistrare popover nou\");\n        var handler = _innerService.Register(fragment);\n        _logger.LogDebug(\"Popover \u00eenregistrat cu ID: {PopoverId}\", handler.Id);\n        return handler;\n    }\n\n    public async Task&lt;bool&gt; Unregister(FodPopoverHandler handler)\n    {\n        _logger.LogDebug(\"Dez\u00eenregistrare popover: {PopoverId}\", handler?.Id);\n        try\n        {\n            return await _innerService.Unregister(handler);\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la dez\u00eenregistrarea popover: {PopoverId}\", handler?.Id);\n            return false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/FodPopoverService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Thread-safe initialization - Folose\u0219te SemaphoreSlim pentru ini\u021bializare sigur\u0103</li> <li>Event-driven updates - Notific\u0103 schimb\u0103rile prin evenimente</li> <li>JS interop - Necesit\u0103 func\u021bii JavaScript pentru positioning</li> <li>Memory management - Important s\u0103 dez\u00eenregistra\u021bi popover-urile nefolosite</li> <li>Render fragments - Gestioneaz\u0103 RenderFragment pentru con\u021binut dinamic</li> </ol>"},{"location":"fod/servicii/FodPopoverService/#bune-practici","title":"Bune practici","text":"<ol> <li>Lifecycle management - Dez\u00eenregistra\u021bi popover-urile \u00een Dispose</li> <li>Avoid memory leaks - Nu p\u0103stra\u021bi referin\u021be la handlers dup\u0103 unregister</li> <li>Error handling - Gestiona\u021bi TaskCanceledException la dispose</li> <li>Performance - Limita\u021bi num\u0103rul de popover-uri active simultan</li> <li>Accessibility - Asigura\u021bi navigare cu tastatura pentru popover-uri</li> <li>Mobile support - Testa\u021bi comportamentul pe dispozitive touch</li> </ol>"},{"location":"fod/servicii/FodPopoverService/#concluzie","title":"Concluzie","text":"<p>FodPopoverService ofer\u0103 o infrastructur\u0103 robust\u0103 pentru gestionarea popover-urilor \u00een aplica\u021bii Blazor. Cu suport pentru actualiz\u0103ri dinamice, gestionare centralizat\u0103 \u0219i integrare JavaScript pentru positioning avansat, serviciul faciliteaz\u0103 crearea de interfe\u021be utilizator interactive \u0219i informative.</p>"},{"location":"fod/servicii/HashGenerator/","title":"HashGenerator","text":""},{"location":"fod/servicii/HashGenerator/#documentatie-pentru-serviciul-hashgenerator","title":"Documenta\u021bie pentru serviciul HashGenerator","text":""},{"location":"fod/servicii/HashGenerator/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>HashGenerator</code> este un serviciu server-side care ofer\u0103 func\u021bionalit\u0103\u021bi de generare hash criptografic pentru aplica\u021biile FOD. \u00cen prezent, serviciul suport\u0103 generarea de hash-uri SHA-1 pentru diverse scopuri de securitate \u0219i integritate a datelor.</p> <p>Caracteristici principale: - Generare hash SHA-1 - Implementare asincron\u0103 - Suport UTF-8 pentru caractere speciale - Returnare rezultat ca array de bytes - Utilizare \u00een verificarea integrit\u0103\u021bii datelor</p> <p>Not\u0103 important\u0103: SHA-1 nu mai este considerat sigur pentru aplica\u021bii criptografice critice. Pentru aplica\u021bii noi, considera\u021bi SHA-256 sau SHA-512.</p>"},{"location":"fod/servicii/HashGenerator/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs (server-side)\nbuilder.Services.AddScoped&lt;IHashGenerator, HashGenerator&gt;();\n\n// \u00cen modulul Server.ServicesSetup\npublic static IServiceCollection AddServerServices(this IServiceCollection services)\n{\n    services.AddScoped&lt;IHashGenerator, HashGenerator&gt;();\n    return services;\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IHashGenerator\n{\n    Task&lt;byte[]&gt; GetSha1(string value);\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#4-metoda-disponibila","title":"4. Metod\u0103 Disponibil\u0103","text":""},{"location":"fod/servicii/HashGenerator/#getsha1","title":"GetSha1","text":"<p>Genereaz\u0103 un hash SHA-1 pentru valoarea string furnizat\u0103.</p> <p>Parametri: - <code>value</code> (string) - \u0218irul de caractere pentru care se genereaz\u0103 hash-ul</p> <p>Returneaz\u0103: - <code>Task&lt;byte[]&gt;</code> - Hash-ul SHA-1 ca array de bytes (20 bytes)</p> <p>Note: - Folose\u0219te encoding UTF-8 pentru conversia string-ului - SHA-1 produce \u00eentotdeauna un hash de 160 bi\u021bi (20 bytes) - Metoda este determinist\u0103 - acela\u0219i input produce acela\u0219i hash</p>"},{"location":"fod/servicii/HashGenerator/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/HashGenerator/#generare-hash-simplu","title":"Generare hash simplu","text":"<pre><code>public class DocumentService\n{\n    private readonly IHashGenerator _hashGenerator;\n\n    public DocumentService(IHashGenerator hashGenerator)\n    {\n        _hashGenerator = hashGenerator;\n    }\n\n    public async Task&lt;string&gt; GenerateDocumentHash(string documentContent)\n    {\n        // Generare hash\n        byte[] hashBytes = await _hashGenerator.GetSha1(documentContent);\n\n        // Conversie la string hexadecimal\n        string hashString = BitConverter.ToString(hashBytes).Replace(\"-\", \"\").ToLower();\n\n        return hashString;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#verificare-integritate-fisier","title":"Verificare integritate fi\u0219ier","text":"<pre><code>public class FileIntegrityService\n{\n    private readonly IHashGenerator _hashGenerator;\n    private readonly IFileRepository _fileRepository;\n\n    public async Task&lt;FileIntegrityResult&gt; VerifyFileIntegrity(\n        int fileId, \n        string expectedHash)\n    {\n        var file = await _fileRepository.GetById(fileId);\n        if (file == null)\n        {\n            return new FileIntegrityResult \n            { \n                IsValid = false, \n                Message = \"Fi\u0219ierul nu a fost g\u0103sit\" \n            };\n        }\n\n        // Calculeaz\u0103 hash-ul actual\n        var currentHashBytes = await _hashGenerator.GetSha1(file.Content);\n        var currentHash = Convert.ToBase64String(currentHashBytes);\n\n        // Compar\u0103 cu hash-ul a\u0219teptat\n        var isValid = currentHash == expectedHash;\n\n        return new FileIntegrityResult\n        {\n            IsValid = isValid,\n            CurrentHash = currentHash,\n            ExpectedHash = expectedHash,\n            Message = isValid \n                ? \"Integritatea fi\u0219ierului este valid\u0103\" \n                : \"Fi\u0219ierul a fost modificat\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#generare-token-unic","title":"Generare token unic","text":"<pre><code>public class TokenService\n{\n    private readonly IHashGenerator _hashGenerator;\n\n    public async Task&lt;string&gt; GenerateUniqueToken(string userId, DateTime timestamp)\n    {\n        // Combin\u0103 mai multe elemente pentru unicitate\n        var tokenData = $\"{userId}|{timestamp:O}|{Guid.NewGuid()}\";\n\n        // Genereaz\u0103 hash\n        var hashBytes = await _hashGenerator.GetSha1(tokenData);\n\n        // Conversie la Base64 pentru URL-safe token\n        var token = Convert.ToBase64String(hashBytes)\n            .Replace(\"+\", \"-\")\n            .Replace(\"/\", \"_\")\n            .TrimEnd('=');\n\n        return token;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#6-verificare-parola-exemplu-educativ","title":"6. Verificare parol\u0103 (exemplu educativ)","text":"<pre><code>public class PasswordVerificationService\n{\n    private readonly IHashGenerator _hashGenerator;\n\n    // NOT\u0102: Acesta este doar un exemplu. Pentru produc\u021bie, folosi\u021bi \n    // algoritmi specializa\u021bi pentru parole (bcrypt, scrypt, Argon2)\n    public async Task&lt;bool&gt; VerifyPassword(\n        string inputPassword, \n        string salt, \n        string storedHash)\n    {\n        // Combin\u0103 parola cu salt\n        var saltedPassword = $\"{inputPassword}{salt}\";\n\n        // Genereaz\u0103 hash\n        var hashBytes = await _hashGenerator.GetSha1(saltedPassword);\n        var inputHash = Convert.ToBase64String(hashBytes);\n\n        // Compar\u0103 hash-urile\n        return inputHash == storedHash;\n    }\n\n    public async Task&lt;(string hash, string salt)&gt; HashPassword(string password)\n    {\n        // Genereaz\u0103 salt aleatoriu\n        var salt = Guid.NewGuid().ToString(\"N\");\n\n        // Hash cu salt\n        var saltedPassword = $\"{password}{salt}\";\n        var hashBytes = await _hashGenerator.GetSha1(saltedPassword);\n        var hash = Convert.ToBase64String(hashBytes);\n\n        return (hash, salt);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#7-checksum-pentru-date","title":"7. Checksum pentru date","text":"<pre><code>public class DataChecksumService\n{\n    private readonly IHashGenerator _hashGenerator;\n\n    public async Task&lt;ChecksumResult&gt; GenerateChecksum&lt;T&gt;(T data)\n    {\n        // Serializare date\n        var json = JsonSerializer.Serialize(data);\n\n        // Generare checksum\n        var hashBytes = await _hashGenerator.GetSha1(json);\n\n        return new ChecksumResult\n        {\n            Data = data,\n            Checksum = Convert.ToBase64String(hashBytes),\n            Algorithm = \"SHA-1\",\n            GeneratedAt = DateTime.UtcNow\n        };\n    }\n\n    public async Task&lt;bool&gt; ValidateChecksum&lt;T&gt;(T data, string expectedChecksum)\n    {\n        var result = await GenerateChecksum(data);\n        return result.Checksum == expectedChecksum;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#8-cache-key-generation","title":"8. Cache key generation","text":"<pre><code>public class CacheKeyService\n{\n    private readonly IHashGenerator _hashGenerator;\n    private readonly IMemoryCache _cache;\n\n    public async Task&lt;string&gt; GenerateCacheKey(params object[] keyComponents)\n    {\n        // Combin\u0103 componentele cheii\n        var keyData = string.Join(\"|\", keyComponents.Select(c =&gt; c?.ToString() ?? \"null\"));\n\n        // Genereaz\u0103 hash pentru cheie scurt\u0103 \u0219i unic\u0103\n        var hashBytes = await _hashGenerator.GetSha1(keyData);\n        var shortHash = Convert.ToBase64String(hashBytes).Substring(0, 8);\n\n        return $\"cache_{shortHash}\";\n    }\n\n    public async Task&lt;T&gt; GetOrCreateAsync&lt;T&gt;(\n        string prefix,\n        object[] keyComponents,\n        Func&lt;Task&lt;T&gt;&gt; factory,\n        TimeSpan expiration)\n    {\n        var cacheKey = await GenerateCacheKey(keyComponents);\n        var fullKey = $\"{prefix}_{cacheKey}\";\n\n        return await _cache.GetOrCreateAsync(fullKey, async entry =&gt;\n        {\n            entry.AbsoluteExpirationRelativeToNow = expiration;\n            return await factory();\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#9-deduplicare-date","title":"9. Deduplicare date","text":"<pre><code>public class DataDeduplicationService\n{\n    private readonly IHashGenerator _hashGenerator;\n    private readonly IDataRepository _repository;\n\n    public async Task&lt;DeduplicationResult&gt; CheckDuplicate(string content)\n    {\n        // Genereaz\u0103 hash pentru con\u021binut\n        var hashBytes = await _hashGenerator.GetSha1(content);\n        var contentHash = Convert.ToBase64String(hashBytes);\n\n        // Caut\u0103 duplicate \u00een baza de date\n        var existingRecord = await _repository.FindByHash(contentHash);\n\n        if (existingRecord != null)\n        {\n            return new DeduplicationResult\n            {\n                IsDuplicate = true,\n                ExistingRecordId = existingRecord.Id,\n                Hash = contentHash,\n                Message = \"Con\u021binut duplicat detectat\"\n            };\n        }\n\n        return new DeduplicationResult\n        {\n            IsDuplicate = false,\n            Hash = contentHash,\n            Message = \"Con\u021binut unic\"\n        };\n    }\n\n    public async Task&lt;int&gt; RemoveDuplicates(IEnumerable&lt;DataRecord&gt; records)\n    {\n        var uniqueRecords = new Dictionary&lt;string, DataRecord&gt;();\n        var duplicatesRemoved = 0;\n\n        foreach (var record in records)\n        {\n            var hashBytes = await _hashGenerator.GetSha1(record.Content);\n            var hash = Convert.ToBase64String(hashBytes);\n\n            if (!uniqueRecords.ContainsKey(hash))\n            {\n                uniqueRecords[hash] = record;\n            }\n            else\n            {\n                duplicatesRemoved++;\n            }\n        }\n\n        return duplicatesRemoved;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#10-implementare-extinsa-cu-mai-multi-algoritmi","title":"10. Implementare extins\u0103 cu mai mul\u021bi algoritmi","text":"<pre><code>public interface IExtendedHashGenerator : IHashGenerator\n{\n    Task&lt;byte[]&gt; GetSha256(string value);\n    Task&lt;byte[]&gt; GetSha512(string value);\n    Task&lt;byte[]&gt; GetMd5(string value); // Doar pentru compatibilitate legacy\n}\n\npublic class ExtendedHashGenerator : IExtendedHashGenerator\n{\n    public async Task&lt;byte[]&gt; GetSha1(string value)\n    {\n        return await Task.FromResult(\n            SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(value))\n        );\n    }\n\n    public async Task&lt;byte[]&gt; GetSha256(string value)\n    {\n        return await Task.FromResult(\n            SHA256.Create().ComputeHash(Encoding.UTF8.GetBytes(value))\n        );\n    }\n\n    public async Task&lt;byte[]&gt; GetSha512(string value)\n    {\n        return await Task.FromResult(\n            SHA512.Create().ComputeHash(Encoding.UTF8.GetBytes(value))\n        );\n    }\n\n    public async Task&lt;byte[]&gt; GetMd5(string value)\n    {\n        return await Task.FromResult(\n            MD5.Create().ComputeHash(Encoding.UTF8.GetBytes(value))\n        );\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#11-testing","title":"11. Testing","text":"<pre><code>[TestClass]\npublic class HashGeneratorTests\n{\n    private IHashGenerator _hashGenerator;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _hashGenerator = new HashGenerator();\n    }\n\n    [TestMethod]\n    public async Task GetSha1_SameInput_ReturnsSameHash()\n    {\n        // Arrange\n        var input = \"test string\";\n\n        // Act\n        var hash1 = await _hashGenerator.GetSha1(input);\n        var hash2 = await _hashGenerator.GetSha1(input);\n\n        // Assert\n        CollectionAssert.AreEqual(hash1, hash2);\n    }\n\n    [TestMethod]\n    public async Task GetSha1_DifferentInput_ReturnsDifferentHash()\n    {\n        // Arrange\n        var input1 = \"test string 1\";\n        var input2 = \"test string 2\";\n\n        // Act\n        var hash1 = await _hashGenerator.GetSha1(input1);\n        var hash2 = await _hashGenerator.GetSha1(input2);\n\n        // Assert\n        CollectionAssert.AreNotEqual(hash1, hash2);\n    }\n\n    [TestMethod]\n    public async Task GetSha1_ReturnsCorrectLength()\n    {\n        // Arrange\n        var input = \"test\";\n\n        // Act\n        var hash = await _hashGenerator.GetSha1(input);\n\n        // Assert\n        Assert.AreEqual(20, hash.Length); // SHA-1 = 160 bits = 20 bytes\n    }\n\n    [TestMethod]\n    public async Task GetSha1_KnownValue_ReturnsExpectedHash()\n    {\n        // Arrange\n        var input = \"hello world\";\n        var expectedHex = \"2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\";\n\n        // Act\n        var hash = await _hashGenerator.GetSha1(input);\n        var actualHex = BitConverter.ToString(hash).Replace(\"-\", \"\").ToLower();\n\n        // Assert\n        Assert.AreEqual(expectedHex, actualHex);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Securitate: SHA-1 nu mai este recomandat pentru aplica\u021bii criptografice. Folosi\u021bi SHA-256 sau SHA-512</li> <li>Salt pentru parole: \u00centotdeauna folosi\u021bi salt pentru hash-uri de parole</li> <li>Algoritmi specializa\u021bi: Pentru parole, folosi\u021bi bcrypt, scrypt sau Argon2</li> <li>Comparare sigur\u0103: Folosi\u021bi comparare constant\u0103 \u00een timp pentru hash-uri</li> <li>Encoding consistent: Folosi\u021bi \u00eentotdeauna acela\u0219i encoding (UTF-8)</li> <li>Stocare: Stoca\u021bi hash-urile ca Base64 sau hexadecimal pentru eficien\u021b\u0103</li> </ol>"},{"location":"fod/servicii/HashGenerator/#13-migrare-la-algoritmi-mai-siguri","title":"13. Migrare la algoritmi mai siguri","text":"<pre><code>public class HashMigrationService\n{\n    private readonly IHashGenerator _oldHashGenerator;\n    private readonly IExtendedHashGenerator _newHashGenerator;\n\n    public async Task&lt;MigrationResult&gt; MigrateHash(\n        string value, \n        string oldSha1Hash)\n    {\n        // Verific\u0103 hash-ul vechi\n        var oldHashBytes = await _oldHashGenerator.GetSha1(value);\n        var oldHash = Convert.ToBase64String(oldHashBytes);\n\n        if (oldHash != oldSha1Hash)\n        {\n            return new MigrationResult \n            { \n                Success = false, \n                Error = \"Hash vechi invalid\" \n            };\n        }\n\n        // Genereaz\u0103 hash nou\n        var newHashBytes = await _newHashGenerator.GetSha256(value);\n        var newHash = Convert.ToBase64String(newHashBytes);\n\n        return new MigrationResult\n        {\n            Success = true,\n            OldHash = oldHash,\n            NewHash = newHash,\n            Algorithm = \"SHA-256\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/HashGenerator/#14-concluzie","title":"14. Concluzie","text":"<p><code>HashGenerator</code> ofer\u0103 func\u021bionalitate de baz\u0103 pentru generarea hash-urilor SHA-1 \u00een aplica\u021biile FOD. De\u0219i simplu \u0219i eficient pentru verificarea integrit\u0103\u021bii datelor non-critice, serviciul ar trebui extins cu algoritmi mai moderni pentru aplica\u021bii care necesit\u0103 securitate sporit\u0103. Pentru aplica\u021bii noi, considera\u021bi implementarea SHA-256 sau SHA-512.</p>"},{"location":"fod/servicii/ICurrentUserContextService/","title":"ICurrentUserContextService","text":""},{"location":"fod/servicii/ICurrentUserContextService/#documentatie-pentru-icurrentusercontextservice","title":"Documenta\u021bie pentru <code>ICurrentUserContextService</code>","text":""},{"location":"fod/servicii/ICurrentUserContextService/#descriere-generala","title":"Descriere general\u0103","text":"<p><code>ICurrentUserContextService</code> este un serviciu definit printr-o interfa\u021b\u0103 care gestioneaz\u0103 contextul curent al utilizatorului \u00eentr-o aplica\u021bie. Interfa\u021ba este implementat\u0103 at\u00e2t pe partea de client, c\u00e2t \u0219i pe partea de server, fiecare versiune av\u00e2nd un comportament specific:</p> <ul> <li>Client: folose\u0219te <code>HttpClient</code> pentru a interac\u021biona cu backend-ul REST.</li> <li>Server: folose\u0219te <code>HttpContext</code> \u0219i cookie-uri pentru a p\u0103stra contextul \u0219i <code>IUserContextService</code> pentru ob\u021binerea detaliilor.</li> </ul> <p>Aceast\u0103 separare permite utilizarea aceleia\u0219i interfe\u021be at\u00e2t \u00een aplica\u021bii Blazor WebAssembly, c\u00e2t \u0219i \u00een Blazor Server sau ASP.NET Core MVC.</p>"},{"location":"fod/servicii/ICurrentUserContextService/#functionalitati-principale","title":"Func\u021bionalit\u0103\u021bi principale","text":"Metod\u0103 Return Type Descriere <code>Task Set(string contextId, bool selected = false)</code> <code>Task</code> Salveaz\u0103 contextul utilizatorului. Pe client, face POST c\u0103tre server; pe server, scrie \u00een cookie. <code>Task&lt;SelectedContext?&gt; GetSelectedContext()</code> <code>Task&lt;SelectedContext?&gt;</code> Returneaz\u0103 contextul selectat. Pe client \u00eel ia de la API, pe server din cookie sau genereaz\u0103 fallback. <code>Task&lt;UserContext?&gt; GetUserContext()</code> <code>Task&lt;UserContext?&gt;</code> Returneaz\u0103 contextul complet. Pe client \u00eel ia de la endpoint dedicat, pe server prin <code>IUserContextService</code>. <code>Task&lt;UserContext?&gt; GetIndividualUserContext()</code> <code>Task&lt;UserContext?&gt;</code> Pe server returneaz\u0103 contextul de tip individual; pe client poate fi neimplementat\u0103."},{"location":"fod/servicii/ICurrentUserContextService/#implementare-implicita","title":"Implementare implicit\u0103","text":"<p>Este important de men\u021bionat c\u0103, at\u00e2t pe partea de client, c\u00e2t \u0219i pe partea de server, metoda <code>GetUserContext()</code> este utilizat\u0103 pentru a verifica \u0219i ob\u021bine contextul actual al utilizatorului autentificat.</p> <ul> <li>Client: interogheaz\u0103 endpoint-ul <code>/context/user-context</code> \u0219i returneaz\u0103 toate informa\u021biile relevante despre contextul curent.</li> <li>Server: folose\u0219te <code>GetSelectedContext()</code> \u0219i <code>IUserContextService</code> pentru a returna modelul complet <code>UserContext</code>.</li> </ul>"},{"location":"fod/servicii/ICurrentUserContextService/#diferente-cheie-intre-metode","title":"Diferen\u021be cheie \u00eentre metode","text":"<ul> <li><code>GetSelectedContext()</code> returneaz\u0103 doar identificatorul (<code>ContextId</code>) \u0219i starea (<code>IsSelected</code>) a contextului selectat de utilizator.</li> <li><code>GetUserContext()</code> returneaz\u0103 un model complet de tip <code>UserContext</code>, care con\u021bine toate atributele asociate utilizatorului \u00een contextul respectiv (ex: nume, roluri, permisiuni etc.).</li> </ul>"},{"location":"fod/servicii/ICurrentUserContextService/#detalii-implementare","title":"Detalii implementare","text":""},{"location":"fod/servicii/ICurrentUserContextService/#client-blazor-webassembly","title":"Client (Blazor WebAssembly)","text":"<ul> <li>Utilizare principal\u0103 \u00een UI.</li> <li>Se bazeaz\u0103 pe apeluri HTTP:</li> <li><code>GET</code> pentru a ob\u021bine contextul (<code>/context</code>, <code>/context/user-context</code>)</li> <li><code>POST</code> pentru a seta contextul curent.</li> <li>Cache intern (<code>_selectedContext</code>) pentru optimizarea performan\u021belor.</li> </ul>"},{"location":"fod/servicii/ICurrentUserContextService/#server-aspnet-core","title":"Server (ASP.NET Core)","text":"<ul> <li>Se bazeaz\u0103 pe cookie (<code>current-context</code>) pentru a re\u021bine contextul utilizatorului.</li> <li>Dac\u0103 nu exist\u0103 context valid, alege unul implicit din lista oferit\u0103 de <code>IUserContextService</code>.</li> <li>Suport\u0103 \u0219i context de tip individual prin <code>GetIndividualUserContext()</code>.</li> </ul>"},{"location":"fod/servicii/ICurrentUserContextService/#exemplu-de-utilizare","title":"Exemplu de utilizare","text":"<p>` @inject ICurrentUserContextService UserContextService</p> <p>@code {     private SelectedContext? context;</p> <pre><code>protected override async Task OnInitializedAsync()\n{\n    context = await UserContextService.GetSelectedContext();\n}\n</code></pre> <p>} `</p>"},{"location":"fod/servicii/IRequestService/","title":"IRequestService","text":""},{"location":"fod/servicii/IRequestService/#irequestservicet-cs","title":"<code>IRequestService&lt;T&gt;</code> (.cs)","text":"<pre><code>namespace: Fod.Components.Shared.Services\n</code></pre> <p>Interfa\u021b\u0103 generic\u0103 ce extinde <code>IRequestService</code>, utilizat\u0103 pentru gestionarea solicit\u0103rilor de tip <code>FodRequestModel</code>. Aceasta define\u0219te opera\u021bii uzuale asupra unei solicit\u0103ri, inclusiv ini\u021bializare, validare, semnare \u0219i generare de chitan\u021be.</p>"},{"location":"fod/servicii/IRequestService/#tipuri-generice","title":"Tipuri generice","text":"<ul> <li><code>T</code>: Un model care deriv\u0103 din <code>FodRequestModel</code>.</li> </ul>"},{"location":"fod/servicii/IRequestService/#metode","title":"Metode","text":"Semn\u0103tur\u0103 Descriere <code>Task&lt;T&gt; New(string requestTypeCode)</code> Creeaz\u0103 o solicitare nou\u0103 de tipul specificat. <code>Task&lt;T&gt; Get(Guid id, string requestTypeCode)</code> Ob\u021bine o solicitare existent\u0103 dup\u0103 ID \u0219i tip. <code>Task&lt;T&gt; AddOrUpdate(T requestModel)</code> Adaug\u0103 sau actualizeaz\u0103 o solicitare. <code>Task&lt;VerifyRequestResponse&gt; VerifyAndConfirm(T requestModel)</code> Verific\u0103 \u0219i confirm\u0103 o solicitare. <code>Task&lt;ValidateRequestResponse&gt; Validate(T requestModel)</code> Valideaz\u0103 o solicitare. <code>Task&lt;SignRequestModel&gt; Sign(T requestModel)</code> Preg\u0103te\u0219te solicitarea pentru semnare. <code>Task&lt;string&gt; RedirectToMSign(Guid requestId, string requestTypeCode)</code> Redirec\u021bioneaz\u0103 c\u0103tre semnarea cu MSign. <code>Task&lt;string&gt; GetMSignUrl(Guid requestId, string requestTypeCode)</code> Returneaz\u0103 URL-ul pentru semnarea cu MSign. <code>Task&lt;string&gt; VerifySignature(string signRequestId, string requestTypeCode)</code> Verific\u0103 semn\u0103tura unei solicit\u0103ri. <code>Task&lt;FodFile&gt; GetReceipt(Guid id, string requestTypeCode)</code> Ob\u021bine chitan\u021ba pentru solicitare. <code>Task&lt;FodFile&gt; PrintReceipt(Guid id, string requestTypeCode, string baseHref = \"\")</code> Genereaz\u0103 un fi\u0219ier printabil cu chitan\u021ba. <code>Task&lt;FodRequestCostModel&gt; CalculateCost(T requestModel)</code> Calculeaz\u0103 costul pentru solicitare. <code>Task&lt;DateTime?&gt; CalculateEstimateResolveDate(T requestModel)</code> Estimeaz\u0103 data de solu\u021bionare a solicit\u0103rii."},{"location":"fod/servicii/IRequestService/#irequestservice-cs","title":"<code>IRequestService</code> (.cs)","text":"<pre><code>namespace: Fod.Components.Shared.Services\n</code></pre> <p>Interfa\u021b\u0103 de baz\u0103 care ofer\u0103 func\u021bionalitatea de ob\u021binere a op\u021biunilor pentru un anumit tip de solicitare.</p>"},{"location":"fod/servicii/IRequestService/#metode_1","title":"Metode","text":"Semn\u0103tur\u0103 Descriere <code>Task&lt;FodRequestOptionsModel&gt; GetOptions(string requestTypeCode)</code> Returneaz\u0103 modelul de op\u021biuni pentru tipul de solicitare."},{"location":"fod/servicii/IRequestService/#fodrequestoptionsmodel-cs","title":"<code>FodRequestOptionsModel</code> (.cs)","text":"<pre><code>namespace: Fod.Components.Shared.Models.Business\n</code></pre> <p>Model care con\u021bine op\u021biuni \u0219i metadate asociate unui tip de solicitare.</p>"},{"location":"fod/servicii/IRequestService/#constructor","title":"Constructor","text":"<ul> <li> <p>Ini\u021bializeaz\u0103 listele:</p> </li> <li> <p><code>MPowerAuthorization</code></p> </li> <li><code>ServiceOptions</code></li> <li><code>PickupLocations</code></li> </ul>"},{"location":"fod/servicii/IRequestService/#proprietati","title":"Propriet\u0103\u021bi","text":"Nume Tip Descriere <code>IsUserAuthenticated</code> <code>bool</code> Specific\u0103 dac\u0103 utilizatorul este autentificat. <code>AvailableMPowerAuthorization</code> <code>bool</code> Indic\u0103 dac\u0103 autorizarea MPower este disponibil\u0103. <code>ShowRequestingAsType</code> <code>bool</code> Afi\u0219eaz\u0103 op\u021biunea de alegere a tipului de solicitant. <code>MPowerAuthorizationCodes</code> <code>string[]?</code> Codurile autoriz\u0103rilor MPower disponibile. <code>RequestorPhoneRequired</code> <code>bool</code> Telefonul solicitantului este obligatoriu. <code>RequestorEmailRequired</code> <code>bool</code> Email-ul solicitantului este obligatoriu. <code>InformativeMessage</code> <code>string</code> Mesaj informativ pentru solicitant. <code>ServiceProviderPhone</code> <code>string?</code> Num\u0103r de telefon al furnizorului de servicii. <code>ServiceProviderEmail</code> <code>string?</code> Email al furnizorului de servicii. <code>PersonType</code> <code>RequestPersonTypeModel?</code> Tipul persoanei solicitante (ex: fizic\u0103/juridic\u0103). <code>AuthentificationStatus</code> <code>AuthentificationStatusModel?</code> Starea autentific\u0103rii utilizatorului. <code>ServiceOptions</code> <code>IList&lt;FodServiceOptionsModel&gt;</code> Op\u021biunile de servicii disponibile. <code>PickupLocations</code> <code>IList&lt;FodPickupLocationModel&gt;</code> Locuri de ridicare disponibile. <code>ApostilaOptions</code> <code>FodApostilaOptionsModel?</code> Op\u021biuni specifice pentru apostil\u0103. <code>MPowerAuthorization</code> <code>List&lt;MPowerAuthorization&gt;</code> Lista detaliat\u0103 a autoriz\u0103rilor MPower. <code>ReceptionModeModel</code> <code>FodReceptionModeModel?</code> Model pentru modul de recep\u021bie. <code>RequestorStatuteModels</code> <code>List&lt;FodRequestorStatuteModel&gt;?</code> Lista de statute posibile pentru solicitant."},{"location":"fod/servicii/JsApiService/","title":"JsApiService","text":""},{"location":"fod/servicii/JsApiService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>JsApiService</code> este un serviciu utilitar care ofer\u0103 acces la func\u021bionalit\u0103\u021bi JavaScript comune \u00een aplica\u021bii Blazor. Serviciul \u00eencapsuleaz\u0103 opera\u021biuni frecvent utilizate precum copierea \u00een clipboard \u0219i deschiderea de ferestre/tab-uri noi, oferind o interfa\u021b\u0103 .NET simpl\u0103 pentru aceste func\u021bionalit\u0103\u021bi browser.</p>"},{"location":"fod/servicii/JsApiService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/JsApiService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IJsApiService, JsApiService&gt;();\n</code></pre>"},{"location":"fod/servicii/JsApiService/#javascript-necesar","title":"JavaScript necesar","text":"<pre><code>// Inclus automat \u00een FodComponents.js\nwindow.fodWindow = {\n    copyToClipboard: function(text) {\n        navigator.clipboard.writeText(text);\n    },\n\n    open: function(url, target) {\n        window.open(url, target);\n    },\n\n    changeCssById: function(id, css) {\n        var element = document.getElementById(id);\n        if (element) {\n            element.className = css;\n        }\n    },\n\n    changeGlobalCssVariable: function(name, newValue) {\n        document.documentElement.style.setProperty(name, newValue);\n    }\n};\n</code></pre>"},{"location":"fod/servicii/JsApiService/#interfata-ijsapiservice","title":"Interfa\u021ba IJsApiService","text":"<pre><code>public interface IJsApiService\n{\n    ValueTask CopyToClipboardAsync(string text);\n    ValueTask OpenInNewTabAsync(string url);\n    ValueTask Open(string link, string target);\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/JsApiService/#copytoclipboardasync","title":"CopyToClipboardAsync","text":"<p>Copiaz\u0103 text \u00een clipboard-ul sistemului.</p> <p>Parametri: - <code>text: string</code> - Textul de copiat</p> <p>Returneaz\u0103: <code>ValueTask</code></p> <p>Note: Necesit\u0103 HTTPS sau localhost pentru func\u021bionare</p>"},{"location":"fod/servicii/JsApiService/#openinnewtabasync","title":"OpenInNewTabAsync","text":"<p>Deschide URL \u00eentr-un tab nou.</p> <p>Parametri: - <code>url: string</code> - URL-ul de deschis</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/JsApiService/#open","title":"Open","text":"<p>Deschide URL cu target specificat.</p> <p>Parametri: - <code>link: string</code> - URL-ul de deschis - <code>target: string</code> - Target window (\"_blank\", \"_self\", \"_parent\", \"_top\", sau nume fereastr\u0103)</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/JsApiService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/JsApiService/#copiere-text-simplu","title":"Copiere text simplu","text":"<pre><code>@inject IJsApiService JsApiService\n\n&lt;div class=\"copy-example\"&gt;\n    &lt;FodInput @bind-Value=\"textToCopy\" Label=\"Text de copiat\" /&gt;\n\n    &lt;FodButton @onclick=\"CopyText\" Color=\"FodColor.Primary\"&gt;\n        &lt;FodIcon Icon=\"content_copy\" /&gt; Copiaz\u0103\n    &lt;/FodButton&gt;\n\n    @if (copied)\n    {\n        &lt;FodAlert Type=\"FodAlertType.Success\"&gt;\n            Text copiat \u00een clipboard!\n        &lt;/FodAlert&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string textToCopy = \"\";\n    private bool copied = false;\n\n    private async Task CopyText()\n    {\n        await JsApiService.CopyToClipboardAsync(textToCopy);\n        copied = true;\n\n        // Reset feedback dup\u0103 2 secunde\n        await Task.Delay(2000);\n        copied = false;\n        StateHasChanged();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#copiere-date-complexe","title":"Copiere date complexe","text":"<pre><code>@inject IJsApiService JsApiService\n\n&lt;FodDataTable Items=\"@users\" @ref=\"dataTable\"&gt;\n    &lt;FodColumn Title=\"Nume\" Field=\"@nameof(User.Name)\" /&gt;\n    &lt;FodColumn Title=\"Email\" Field=\"@nameof(User.Email)\" /&gt;\n    &lt;FodColumn Title=\"Ac\u021biuni\"&gt;\n        &lt;Template&gt;\n            &lt;FodIconButton Icon=\"content_copy\" \n                          Size=\"FodSize.Small\"\n                          @onclick=\"() =&gt; CopyUserData(context)\" /&gt;\n        &lt;/Template&gt;\n    &lt;/FodColumn&gt;\n&lt;/FodDataTable&gt;\n\n@code {\n    private List&lt;User&gt; users = new();\n\n    private async Task CopyUserData(User user)\n    {\n        var userData = $\"Nume: {user.Name}\\nEmail: {user.Email}\\nTelefon: {user.Phone}\";\n        await JsApiService.CopyToClipboardAsync(userData);\n\n        // Notificare\n        ShowNotification($\"Datele pentru {user.Name} au fost copiate!\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#deschidere-link-uri-externe","title":"Deschidere link-uri externe","text":"<pre><code>@inject IJsApiService JsApiService\n\n&lt;div class=\"external-links\"&gt;\n    &lt;FodButton @onclick=\"OpenDocumentation\"&gt;\n        &lt;FodIcon Icon=\"help\" /&gt; Documenta\u021bie\n    &lt;/FodButton&gt;\n\n    &lt;FodButton @onclick=\"OpenSupport\"&gt;\n        &lt;FodIcon Icon=\"support\" /&gt; Suport\n    &lt;/FodButton&gt;\n\n    &lt;FodButton @onclick=\"() =&gt; OpenLink('https://example.com', '_self')\"&gt;\n        Deschide \u00een Aceea\u0219i Fereastr\u0103\n    &lt;/FodButton&gt;\n&lt;/div&gt;\n\n@code {\n    private async Task OpenDocumentation()\n    {\n        await JsApiService.OpenInNewTabAsync(\"https://docs.example.com\");\n    }\n\n    private async Task OpenSupport()\n    {\n        await JsApiService.OpenInNewTabAsync(\"https://support.example.com\");\n    }\n\n    private async Task OpenLink(string url, string target)\n    {\n        await JsApiService.Open(url, target);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#component-share","title":"Component Share","text":"<pre><code>@inject IJsApiService JsApiService\n@inject NavigationManager NavigationManager\n\n&lt;div class=\"share-component\"&gt;\n    &lt;h5&gt;Distribuie&lt;/h5&gt;\n\n    &lt;FodButtonGroup&gt;\n        &lt;FodButton @onclick=\"CopyLink\" Variant=\"FodVariant.Outlined\"&gt;\n            &lt;FodIcon Icon=\"link\" /&gt; Copiaz\u0103 Link\n        &lt;/FodButton&gt;\n\n        &lt;FodButton @onclick=\"ShareEmail\" Variant=\"FodVariant.Outlined\"&gt;\n            &lt;FodIcon Icon=\"email\" /&gt; Email\n        &lt;/FodButton&gt;\n\n        &lt;FodButton @onclick=\"ShareWhatsApp\" Variant=\"FodVariant.Outlined\"&gt;\n            &lt;FodIcon Icon=\"chat\" /&gt; WhatsApp\n        &lt;/FodButton&gt;\n    &lt;/FodButtonGroup&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public string Title { get; set; } = \"\";\n    [Parameter] public string Description { get; set; } = \"\";\n\n    private string currentUrl =&gt; NavigationManager.Uri;\n\n    private async Task CopyLink()\n    {\n        await JsApiService.CopyToClipboardAsync(currentUrl);\n        ShowNotification(\"Link copiat!\");\n    }\n\n    private async Task ShareEmail()\n    {\n        var subject = Uri.EscapeDataString(Title);\n        var body = Uri.EscapeDataString($\"{Description}\\n\\n{currentUrl}\");\n        await JsApiService.Open($\"mailto:?subject={subject}&amp;body={body}\", \"_self\");\n    }\n\n    private async Task ShareWhatsApp()\n    {\n        var text = Uri.EscapeDataString($\"{Title}\\n{Description}\\n{currentUrl}\");\n        await JsApiService.OpenInNewTabAsync($\"https://wa.me/?text={text}\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#clipboard-cu-formatare","title":"Clipboard cu formatare","text":"<pre><code>@inject IJsApiService JsApiService\n\n&lt;div class=\"formatted-copy\"&gt;\n    &lt;FodCard&gt;\n        &lt;CardContent&gt;\n            &lt;h4&gt;@invoice.Number&lt;/h4&gt;\n            &lt;p&gt;Client: @invoice.ClientName&lt;/p&gt;\n            &lt;p&gt;Total: @invoice.Total.ToString(\"C\")&lt;/p&gt;\n        &lt;/CardContent&gt;\n        &lt;CardActions&gt;\n            &lt;FodButton @onclick=\"CopyAsText\"&gt;Copiaz\u0103 ca Text&lt;/FodButton&gt;\n            &lt;FodButton @onclick=\"CopyAsJson\"&gt;Copiaz\u0103 ca JSON&lt;/FodButton&gt;\n            &lt;FodButton @onclick=\"CopyAsMarkdown\"&gt;Copiaz\u0103 ca Markdown&lt;/FodButton&gt;\n        &lt;/CardActions&gt;\n    &lt;/FodCard&gt;\n&lt;/div&gt;\n\n@code {\n    private Invoice invoice = new()\n    {\n        Number = \"INV-2024-001\",\n        ClientName = \"ACME Corp\",\n        Total = 1500.00m\n    };\n\n    private async Task CopyAsText()\n    {\n        var text = $\"Factura: {invoice.Number}\\n\" +\n                  $\"Client: {invoice.ClientName}\\n\" +\n                  $\"Total: {invoice.Total:C}\";\n\n        await JsApiService.CopyToClipboardAsync(text);\n    }\n\n    private async Task CopyAsJson()\n    {\n        var json = System.Text.Json.JsonSerializer.Serialize(invoice, new JsonSerializerOptions \n        { \n            WriteIndented = true \n        });\n\n        await JsApiService.CopyToClipboardAsync(json);\n    }\n\n    private async Task CopyAsMarkdown()\n    {\n        var markdown = $\"## Factura {invoice.Number}\\n\\n\" +\n                      $\"**Client:** {invoice.ClientName}\\n\\n\" +\n                      $\"**Total:** {invoice.Total:C}\";\n\n        await JsApiService.CopyToClipboardAsync(markdown);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#service-extins-cu-validare","title":"Service extins cu validare","text":"<pre><code>public interface IExtendedJsApiService : IJsApiService\n{\n    ValueTask&lt;bool&gt; CanCopyToClipboard();\n    ValueTask&lt;bool&gt; TryCopyToClipboardAsync(string text);\n    ValueTask OpenInNewTabWithFallback(string url, string fallbackUrl);\n}\n\npublic class ExtendedJsApiService : IExtendedJsApiService\n{\n    private readonly IJsApiService _innerService;\n    private readonly IJSRuntime _jsRuntime;\n    private readonly ILogger&lt;ExtendedJsApiService&gt; _logger;\n\n    public async ValueTask&lt;bool&gt; CanCopyToClipboard()\n    {\n        try\n        {\n            return await _jsRuntime.InvokeAsync&lt;bool&gt;(\n                \"eval\", \"navigator.clipboard !== undefined\");\n        }\n        catch\n        {\n            return false;\n        }\n    }\n\n    public async ValueTask&lt;bool&gt; TryCopyToClipboardAsync(string text)\n    {\n        try\n        {\n            await _innerService.CopyToClipboardAsync(text);\n            return true;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogWarning(ex, \"Failed to copy to clipboard\");\n            return false;\n        }\n    }\n\n    public async ValueTask OpenInNewTabWithFallback(string url, string fallbackUrl)\n    {\n        try\n        {\n            await _innerService.OpenInNewTabAsync(url);\n        }\n        catch\n        {\n            await _innerService.OpenInNewTabAsync(fallbackUrl);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#deep-linking-si-navigare","title":"Deep linking \u0219i navigare","text":"<pre><code>@inject IJsApiService JsApiService\n@inject NavigationManager NavigationManager\n\n&lt;div class=\"deep-links\"&gt;\n    @foreach (var section in sections)\n    {\n        &lt;div class=\"section-link\"&gt;\n            &lt;FodButton @onclick=\"() =&gt; NavigateToSection(section.Id)\" \n                      Variant=\"FodVariant.Text\"&gt;\n                @section.Title\n            &lt;/FodButton&gt;\n\n            &lt;FodIconButton Icon=\"open_in_new\" \n                          Size=\"FodSize.Small\"\n                          @onclick=\"() =&gt; OpenSectionInNewTab(section.Id)\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;Section&gt; sections = new();\n\n    private void NavigateToSection(string sectionId)\n    {\n        NavigationManager.NavigateTo($\"#{sectionId}\");\n    }\n\n    private async Task OpenSectionInNewTab(string sectionId)\n    {\n        var url = NavigationManager.ToAbsoluteUri($\"#{sectionId}\").ToString();\n        await JsApiService.OpenInNewTabAsync(url);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/JsApiService/#gestionare-permisiuni-clipboard","title":"Gestionare permisiuni clipboard","text":"<pre><code>@inject IJsApiService JsApiService\n@inject IJSRuntime JSRuntime\n\n&lt;FodButton @onclick=\"SafeCopyToClipboard\"&gt;\n    Copiaz\u0103 \u00een Siguran\u021b\u0103\n&lt;/FodButton&gt;\n\n@if (!string.IsNullOrEmpty(errorMessage))\n{\n    &lt;FodAlert Type=\"FodAlertType.Error\"&gt;\n        @errorMessage\n    &lt;/FodAlert&gt;\n}\n\n@code {\n    private string textToCopy = \"Text important\";\n    private string errorMessage = \"\";\n\n    private async Task SafeCopyToClipboard()\n    {\n        try\n        {\n            await JsApiService.CopyToClipboardAsync(textToCopy);\n            ShowSuccess(\"Text copiat cu succes!\");\n        }\n        catch (JSException)\n        {\n            errorMessage = \"Nu am putut accesa clipboard-ul. \" +\n                          \"Verifica\u021bi permisiunile browserului sau folosi\u021bi HTTPS.\";\n\n            // Fallback: selecteaz\u0103 textul pentru copiere manual\u0103\n            await JSRuntime.InvokeVoidAsync(\"fodUtils.selectText\", \"text-to-copy\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#blocare-popup","title":"Blocare popup","text":"<pre><code>@inject IJsApiService JsApiService\n\n&lt;FodButton @onclick=\"OpenWithPopupCheck\"&gt;\n    Deschide Link\n&lt;/FodButton&gt;\n\n@code {\n    private string targetUrl = \"https://example.com\";\n\n    private async Task OpenWithPopupCheck()\n    {\n        try\n        {\n            await JsApiService.OpenInNewTabAsync(targetUrl);\n        }\n        catch\n        {\n            // Popup blocat - afi\u0219eaz\u0103 mesaj\n            ShowWarning($\"Popup-ul a fost blocat. \" +\n                       $\"Permite\u021bi popup-uri pentru acest site sau \" +\n                       $\"&lt;a href='{targetUrl}' target='_blank'&gt;click aici&lt;/a&gt;\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/JsApiService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Clipboard API - Necesit\u0103 HTTPS sau localhost pentru securitate</li> <li>Popup blocking - Browserele pot bloca window.open dac\u0103 nu e ini\u021biat de user</li> <li>Async operations - Toate opera\u021biile sunt asincrone</li> <li>Browser compatibility - Clipboard API nu e suportat \u00een toate browserele vechi</li> <li>ValueTask usage - Folose\u0219te ValueTask pentru performan\u021b\u0103</li> </ol>"},{"location":"fod/servicii/JsApiService/#bune-practici","title":"Bune practici","text":"<ol> <li>Permission handling - Verifica\u021bi permisiunile pentru clipboard</li> <li>User feedback - Confirma\u021bi ac\u021biunile cu feedback vizual</li> <li>Fallback options - Oferi\u021bi alternative pentru browsere incompatibile</li> <li>Security - Valida\u021bi URL-urile \u00eenainte de deschidere</li> <li>Error messages - Mesaje clare pentru utilizatori</li> <li>Testing - Testa\u021bi pe multiple browsere \u0219i dispozitive</li> </ol>"},{"location":"fod/servicii/JsApiService/#concluzie","title":"Concluzie","text":"<p>JsApiService ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i eficient\u0103 pentru accesarea func\u021bionalit\u0103\u021bilor JavaScript comune \u00een aplica\u021bii Blazor. Cu metode pentru clipboard \u0219i gestionarea ferestrelor, serviciul simplific\u0103 integrarea cu API-urile browser \u0219i \u00eembun\u0103t\u0103\u021be\u0219te experien\u021ba utilizatorului.</p>"},{"location":"fod/servicii/KeyInterceptor/","title":"KeyInterceptor","text":""},{"location":"fod/servicii/KeyInterceptor/#documentatie-pentru-serviciul-keyinterceptor","title":"Documenta\u021bie pentru serviciul KeyInterceptor","text":""},{"location":"fod/servicii/KeyInterceptor/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>KeyInterceptor</code> este un serviciu avansat pentru interceptarea \u0219i gestionarea evenimentelor de tastatur\u0103 \u00een componentele Blazor. Ofer\u0103 control granular asupra comportamentului tastelor, permi\u021b\u00e2nd prevenirea ac\u021biunilor implicite \u0219i gestionarea combina\u021biilor complexe de taste.</p> <p>Caracteristici principale: - Interceptare evenimente keyboard pe elemente specifice - Suport pentru combina\u021bii de taste (Ctrl, Alt, Shift, Meta) - Prevenire comportament implicit (preventDefault) - Control propagare evenimente (stopPropagation) - Potrivire taste cu expresii regulate - Monitorizare automat\u0103 DOM cu MutationObserver - Actualizare dinamic\u0103 configura\u021bie taste</p>"},{"location":"fod/servicii/KeyInterceptor/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IKeyInterceptorFactory, KeyInterceptorFactory&gt;();\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#3-interfete-si-clase","title":"3. Interfe\u021be \u0219i Clase","text":""},{"location":"fod/servicii/KeyInterceptor/#ikeyinterceptor","title":"IKeyInterceptor","text":"<pre><code>public interface IKeyInterceptor : IDisposable\n{\n    Task Connect(string elementId, KeyInterceptorOptions options);\n    Task Disconnect();\n    Task UpdateKey(KeyOptions key);\n\n    event Action&lt;KeyboardEventArgs&gt; KeyDown;\n    event Action&lt;KeyboardEventArgs&gt; KeyUp;\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#ikeyinterceptorfactory","title":"IKeyInterceptorFactory","text":"<pre><code>public interface IKeyInterceptorFactory\n{\n    IKeyInterceptor Create();\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#4-modele-de-date","title":"4. Modele de Date","text":""},{"location":"fod/servicii/KeyInterceptor/#keyinterceptoroptions","title":"KeyInterceptorOptions","text":"<pre><code>public class KeyInterceptorOptions\n{\n    // Clasa CSS a elementelor de monitorizat\n    public string TargetClass { get; set; } = \"fod-input-control\";\n\n    // Lista de taste \u0219i comportamente\n    public List&lt;KeyOptions&gt; Keys { get; set; } = new();\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#keyoptions","title":"KeyOptions","text":"<pre><code>public class KeyOptions\n{\n    // Tasta sau pattern regex pentru taste multiple\n    public string Key { get; set; }\n\n    // Previne keydown: \"key+none\", \"key+ctrl\", \"key+shift\", etc.\n    public string PreventDown { get; set; }\n\n    // Previne keyup\n    public string PreventUp { get; set; }\n\n    // Opre\u0219te propagarea pentru keydown\n    public string StopDown { get; set; }\n\n    // Opre\u0219te propagarea pentru keyup\n    public string StopUp { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#keyboardeventargs","title":"KeyboardEventArgs","text":"<pre><code>public class KeyboardEventArgs : EventArgs\n{\n    public string Key { get; set; }\n    public string Code { get; set; }\n    public float Location { get; set; }\n    public bool Repeat { get; set; }\n    public bool CtrlKey { get; set; }\n    public bool ShiftKey { get; set; }\n    public bool AltKey { get; set; }\n    public bool MetaKey { get; set; }\n    public string Type { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/KeyInterceptor/#interceptor-simplu-pentru-input","title":"Interceptor simplu pentru input","text":"<pre><code>@implements IAsyncDisposable\n@inject IKeyInterceptorFactory KeyInterceptorFactory\n\n&lt;div id=\"@_elementId\"&gt;\n    &lt;FodInput @bind-Value=\"searchText\" \n              Class=\"fod-input-control\"\n              Placeholder=\"Caut\u0103 (Ctrl+K pentru focus)\" /&gt;\n\n    &lt;FodText Typo=\"Typo.caption\" Class=\"mt-2\"&gt;\n        Shortcuts: Ctrl+K (focus), Escape (clear), Enter (search)\n    &lt;/FodText&gt;\n&lt;/div&gt;\n\n@code {\n    private string _elementId = $\"search-{Guid.NewGuid()}\";\n    private string searchText;\n    private IKeyInterceptor _keyInterceptor;\n    private ElementReference inputElement;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await InitializeKeyInterceptor();\n        }\n    }\n\n    private async Task InitializeKeyInterceptor()\n    {\n        _keyInterceptor = KeyInterceptorFactory.Create();\n\n        var options = new KeyInterceptorOptions\n        {\n            TargetClass = \"fod-input-control\",\n            Keys = new List&lt;KeyOptions&gt;\n            {\n                // Ctrl+K pentru focus\n                new KeyOptions \n                { \n                    Key = \"k\", \n                    PreventDown = \"key+ctrl\",\n                    StopDown = \"key+ctrl\"\n                },\n                // Escape pentru clear\n                new KeyOptions \n                { \n                    Key = \"Escape\",\n                    PreventDown = \"key+none\"\n                },\n                // Enter pentru search\n                new KeyOptions \n                { \n                    Key = \"Enter\",\n                    PreventDown = \"key+none\"\n                }\n            }\n        };\n\n        await _keyInterceptor.Connect(_elementId, options);\n        _keyInterceptor.KeyDown += OnKeyDown;\n    }\n\n    private async void OnKeyDown(KeyboardEventArgs args)\n    {\n        await InvokeAsync(async () =&gt;\n        {\n            switch (args.Key)\n            {\n                case \"k\" when args.CtrlKey:\n                    await FocusInput();\n                    break;\n\n                case \"Escape\":\n                    searchText = string.Empty;\n                    StateHasChanged();\n                    break;\n\n                case \"Enter\":\n                    await PerformSearch();\n                    break;\n            }\n        });\n    }\n\n    private async Task FocusInput()\n    {\n        await inputElement.FocusAsync();\n    }\n\n    private async Task PerformSearch()\n    {\n        if (!string.IsNullOrWhiteSpace(searchText))\n        {\n            // Execut\u0103 c\u0103utarea\n            await SearchService.Search(searchText);\n        }\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        if (_keyInterceptor != null)\n        {\n            await _keyInterceptor.Disconnect();\n            _keyInterceptor.Dispose();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#dropdown-cu-navigare-tastatura","title":"Dropdown cu navigare tastatur\u0103","text":"<pre><code>@inject IKeyInterceptorFactory KeyInterceptorFactory\n\n&lt;div id=\"@_dropdownId\" class=\"dropdown-container\"&gt;\n    &lt;FodInput @bind-Value=\"selectedText\"\n              @onfocus=\"ShowDropdown\"\n              Class=\"dropdown-input fod-input-control\"\n              Placeholder=\"Selecta\u021bi op\u021biune...\" /&gt;\n\n    @if (isOpen)\n    {\n        &lt;FodPaper Class=\"dropdown-menu\" Elevation=\"4\"&gt;\n            &lt;FodList&gt;\n                @for (int i = 0; i &lt; options.Count; i++)\n                {\n                    var index = i;\n                    &lt;FodListItem Class=\"@GetItemClass(index)\"\n                                 OnClick=\"() =&gt; SelectOption(index)\"&gt;\n                        @options[index]\n                    &lt;/FodListItem&gt;\n                }\n            &lt;/FodList&gt;\n        &lt;/FodPaper&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private string _dropdownId = $\"dropdown-{Guid.NewGuid()}\";\n    private IKeyInterceptor _keyInterceptor;\n    private List&lt;string&gt; options = new() { \"Op\u021biune 1\", \"Op\u021biune 2\", \"Op\u021biune 3\", \"Op\u021biune 4\" };\n    private string selectedText;\n    private bool isOpen;\n    private int highlightedIndex = -1;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await SetupKeyboardNavigation();\n        }\n    }\n\n    private async Task SetupKeyboardNavigation()\n    {\n        _keyInterceptor = KeyInterceptorFactory.Create();\n\n        var options = new KeyInterceptorOptions\n        {\n            TargetClass = \"dropdown-input\",\n            Keys = new List&lt;KeyOptions&gt;\n            {\n                // Navigare cu s\u0103ge\u021bi\n                new KeyOptions \n                { \n                    Key = \"ArrowDown\",\n                    PreventDown = \"key+none\",\n                    StopDown = \"key+none\"\n                },\n                new KeyOptions \n                { \n                    Key = \"ArrowUp\",\n                    PreventDown = \"key+none\",\n                    StopDown = \"key+none\"\n                },\n                // Selectare cu Enter\n                new KeyOptions \n                { \n                    Key = \"Enter\",\n                    PreventDown = \"key+none\"\n                },\n                // \u00cenchidere cu Escape\n                new KeyOptions \n                { \n                    Key = \"Escape\",\n                    PreventDown = \"key+none\"\n                },\n                // Deschidere cu Space\n                new KeyOptions \n                { \n                    Key = \" \",\n                    PreventDown = \"key+none\"\n                },\n                // Home/End pentru navigare rapid\u0103\n                new KeyOptions \n                { \n                    Key = \"Home\",\n                    PreventDown = \"key+none\"\n                },\n                new KeyOptions \n                { \n                    Key = \"End\",\n                    PreventDown = \"key+none\"\n                }\n            }\n        };\n\n        await _keyInterceptor.Connect(_dropdownId, options);\n        _keyInterceptor.KeyDown += HandleDropdownKeyboard;\n    }\n\n    private async void HandleDropdownKeyboard(KeyboardEventArgs args)\n    {\n        await InvokeAsync(() =&gt;\n        {\n            switch (args.Key)\n            {\n                case \"ArrowDown\":\n                    if (!isOpen)\n                    {\n                        ShowDropdown();\n                    }\n                    else\n                    {\n                        highlightedIndex = Math.Min(highlightedIndex + 1, options.Count - 1);\n                    }\n                    break;\n\n                case \"ArrowUp\":\n                    if (isOpen)\n                    {\n                        highlightedIndex = Math.Max(highlightedIndex - 1, 0);\n                    }\n                    break;\n\n                case \"Enter\":\n                    if (isOpen &amp;&amp; highlightedIndex &gt;= 0)\n                    {\n                        SelectOption(highlightedIndex);\n                    }\n                    break;\n\n                case \"Escape\":\n                    CloseDropdown();\n                    break;\n\n                case \" \":\n                    if (!isOpen)\n                    {\n                        ShowDropdown();\n                    }\n                    break;\n\n                case \"Home\":\n                    if (isOpen)\n                    {\n                        highlightedIndex = 0;\n                    }\n                    break;\n\n                case \"End\":\n                    if (isOpen)\n                    {\n                        highlightedIndex = options.Count - 1;\n                    }\n                    break;\n            }\n\n            StateHasChanged();\n        });\n    }\n\n    private void ShowDropdown()\n    {\n        isOpen = true;\n        highlightedIndex = 0;\n    }\n\n    private void CloseDropdown()\n    {\n        isOpen = false;\n        highlightedIndex = -1;\n    }\n\n    private void SelectOption(int index)\n    {\n        selectedText = options[index];\n        CloseDropdown();\n    }\n\n    private string GetItemClass(int index)\n    {\n        return index == highlightedIndex ? \"highlighted\" : \"\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#editor-cu-shortcuts-personalizate","title":"Editor cu shortcuts personalizate","text":"<pre><code>@inject IKeyInterceptorFactory KeyInterceptorFactory\n@inject IJSRuntime JSRuntime\n\n&lt;div id=\"@_editorId\"&gt;\n    &lt;FodToolbar&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatBold\"\n                       OnClick=\"() =&gt; ApplyFormat('bold')\"\n                       Tooltip=\"Bold (Ctrl+B)\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatItalic\"\n                       OnClick=\"() =&gt; ApplyFormat('italic')\"\n                       Tooltip=\"Italic (Ctrl+I)\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.FormatUnderlined\"\n                       OnClick=\"() =&gt; ApplyFormat('underline')\"\n                       Tooltip=\"Underline (Ctrl+U)\" /&gt;\n        &lt;FodDivider Orientation=\"Orientation.Vertical\" /&gt;\n        &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Save\"\n                       OnClick=\"SaveContent\"\n                       Tooltip=\"Save (Ctrl+S)\" /&gt;\n    &lt;/FodToolbar&gt;\n\n    &lt;div @ref=\"editorElement\" \n         contenteditable=\"true\"\n         class=\"editor-content fod-input-control\"\n         @oninput=\"OnContentChanged\"&gt;\n        @((MarkupString)content)\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    private string _editorId = $\"editor-{Guid.NewGuid()}\";\n    private IKeyInterceptor _keyInterceptor;\n    private ElementReference editorElement;\n    private string content = \"&lt;p&gt;\u00cencepe\u021bi s\u0103 scrie\u021bi...&lt;/p&gt;\";\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await SetupEditorShortcuts();\n        }\n    }\n\n    private async Task SetupEditorShortcuts()\n    {\n        _keyInterceptor = KeyInterceptorFactory.Create();\n\n        var options = new KeyInterceptorOptions\n        {\n            TargetClass = \"editor-content\",\n            Keys = new List&lt;KeyOptions&gt;\n            {\n                // Formatare text\n                new KeyOptions { Key = \"b\", PreventDown = \"key+ctrl\" },\n                new KeyOptions { Key = \"i\", PreventDown = \"key+ctrl\" },\n                new KeyOptions { Key = \"u\", PreventDown = \"key+ctrl\" },\n\n                // Salvare\n                new KeyOptions { Key = \"s\", PreventDown = \"key+ctrl\" },\n\n                // Undo/Redo custom\n                new KeyOptions { Key = \"z\", PreventDown = \"key+ctrl+shift\" },\n\n                // Inserare link\n                new KeyOptions { Key = \"k\", PreventDown = \"key+ctrl\" },\n\n                // Clear formatting\n                new KeyOptions { Key = \"\\\\\", PreventDown = \"key+ctrl\" }\n            }\n        };\n\n        await _keyInterceptor.Connect(_editorId, options);\n        _keyInterceptor.KeyDown += HandleEditorShortcuts;\n    }\n\n    private async void HandleEditorShortcuts(KeyboardEventArgs args)\n    {\n        await InvokeAsync(async () =&gt;\n        {\n            if (args.CtrlKey)\n            {\n                switch (args.Key)\n                {\n                    case \"b\":\n                        await ApplyFormat(\"bold\");\n                        break;\n                    case \"i\":\n                        await ApplyFormat(\"italic\");\n                        break;\n                    case \"u\":\n                        await ApplyFormat(\"underline\");\n                        break;\n                    case \"s\":\n                        await SaveContent();\n                        break;\n                    case \"k\":\n                        await InsertLink();\n                        break;\n                    case \"\\\\\":\n                        await ClearFormatting();\n                        break;\n                    case \"z\" when args.ShiftKey:\n                        await Redo();\n                        break;\n                }\n            }\n        });\n    }\n\n    private async Task ApplyFormat(string command)\n    {\n        await JSRuntime.InvokeVoidAsync(\"document.execCommand\", command, false, null);\n    }\n\n    private async Task SaveContent()\n    {\n        NotificationService.Success(\"Con\u021binut salvat!\");\n        // Implementare salvare\n    }\n\n    private async Task InsertLink()\n    {\n        var url = await JSRuntime.InvokeAsync&lt;string&gt;(\"prompt\", \"Introduce\u021bi URL:\");\n        if (!string.IsNullOrEmpty(url))\n        {\n            await JSRuntime.InvokeVoidAsync(\"document.execCommand\", \"createLink\", false, url);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#6-actualizare-dinamica-taste","title":"6. Actualizare dinamic\u0103 taste","text":"<pre><code>public class DynamicKeyInterceptor\n{\n    private readonly IKeyInterceptor _keyInterceptor;\n    private readonly List&lt;KeyOptions&gt; _currentKeys = new();\n\n    public async Task AddShortcut(string key, string modifier, Func&lt;Task&gt; action)\n    {\n        var keyOption = new KeyOptions\n        {\n            Key = key,\n            PreventDown = $\"key+{modifier}\",\n            StopDown = $\"key+{modifier}\"\n        };\n\n        _currentKeys.Add(keyOption);\n        await _keyInterceptor.UpdateKey(keyOption);\n\n        // Stocheaz\u0103 ac\u021biunea asociat\u0103\n        _shortcuts[GetShortcutKey(key, modifier)] = action;\n    }\n\n    public async Task RemoveShortcut(string key, string modifier)\n    {\n        var keyToRemove = _currentKeys.FirstOrDefault(k =&gt; \n            k.Key == key &amp;&amp; k.PreventDown.Contains(modifier));\n\n        if (keyToRemove != null)\n        {\n            _currentKeys.Remove(keyToRemove);\n            // Actualizare prin reconectare\n            await RefreshInterceptor();\n        }\n    }\n\n    public async Task EnableShortcuts()\n    {\n        foreach (var key in _currentKeys)\n        {\n            await _keyInterceptor.UpdateKey(key);\n        }\n    }\n\n    public async Task DisableShortcuts()\n    {\n        // Dezactivare temporar\u0103 prin eliminare preventDefault\n        foreach (var key in _currentKeys)\n        {\n            var disabledKey = new KeyOptions { Key = key.Key };\n            await _keyInterceptor.UpdateKey(disabledKey);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#7-pattern-pentru-componente-complexe","title":"7. Pattern pentru componente complexe","text":"<pre><code>public abstract class KeyboardEnabledComponent : ComponentBase, IAsyncDisposable\n{\n    [Inject] protected IKeyInterceptorFactory KeyInterceptorFactory { get; set; }\n\n    protected IKeyInterceptor KeyInterceptor { get; private set; }\n    protected string ComponentId { get; } = $\"component-{Guid.NewGuid()}\";\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await InitializeKeyboard();\n        }\n\n        await base.OnAfterRenderAsync(firstRender);\n    }\n\n    protected virtual async Task InitializeKeyboard()\n    {\n        KeyInterceptor = KeyInterceptorFactory.Create();\n\n        var options = new KeyInterceptorOptions\n        {\n            TargetClass = GetTargetClass(),\n            Keys = GetKeyOptions()\n        };\n\n        await KeyInterceptor.Connect(ComponentId, options);\n        KeyInterceptor.KeyDown += OnKeyDown;\n        KeyInterceptor.KeyUp += OnKeyUp;\n    }\n\n    protected abstract string GetTargetClass();\n    protected abstract List&lt;KeyOptions&gt; GetKeyOptions();\n\n    protected virtual void OnKeyDown(KeyboardEventArgs args)\n    {\n        InvokeAsync(() =&gt; HandleKeyDown(args));\n    }\n\n    protected virtual void OnKeyUp(KeyboardEventArgs args)\n    {\n        InvokeAsync(() =&gt; HandleKeyUp(args));\n    }\n\n    protected abstract Task HandleKeyDown(KeyboardEventArgs args);\n    protected virtual Task HandleKeyUp(KeyboardEventArgs args) =&gt; Task.CompletedTask;\n\n    public virtual async ValueTask DisposeAsync()\n    {\n        if (KeyInterceptor != null)\n        {\n            KeyInterceptor.KeyDown -= OnKeyDown;\n            KeyInterceptor.KeyUp -= OnKeyUp;\n            await KeyInterceptor.Disconnect();\n            KeyInterceptor.Dispose();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#8-javascript-integration","title":"8. JavaScript Integration","text":"<pre><code>// fodKeyInterceptor.js - Sistem avansat de interceptare taste\nwindow.fodKeyInterceptor = {\n    instances: new Map(),\n\n    connect: function(elementId, dotNetRef, options) {\n        const instance = {\n            elementId: elementId,\n            dotNetRef: dotNetRef,\n            options: options,\n            observer: null,\n            handlers: new Map()\n        };\n\n        // Configurare observer pentru elemente dinamice\n        instance.observer = new MutationObserver((mutations) =&gt; {\n            this.updateHandlers(instance);\n        });\n\n        const container = document.getElementById(elementId);\n        if (container) {\n            instance.observer.observe(container, {\n                childList: true,\n                subtree: true\n            });\n\n            this.updateHandlers(instance);\n        }\n\n        this.instances.set(elementId, instance);\n    },\n\n    updateHandlers: function(instance) {\n        const container = document.getElementById(instance.elementId);\n        if (!container) return;\n\n        const elements = container.querySelectorAll(`.${instance.options.targetClass}`);\n\n        elements.forEach(element =&gt; {\n            if (!instance.handlers.has(element)) {\n                const handler = (event) =&gt; this.handleKeyEvent(event, instance);\n\n                element.addEventListener('keydown', handler);\n                element.addEventListener('keyup', handler);\n\n                instance.handlers.set(element, handler);\n            }\n        });\n\n        // Cleanup pentru elemente eliminate\n        instance.handlers.forEach((handler, element) =&gt; {\n            if (!container.contains(element)) {\n                element.removeEventListener('keydown', handler);\n                element.removeEventListener('keyup', handler);\n                instance.handlers.delete(element);\n            }\n        });\n    },\n\n    handleKeyEvent: function(event, instance) {\n        const keyOptions = this.findKeyOptions(event, instance.options.keys);\n        if (!keyOptions) return;\n\n        const shouldPrevent = this.shouldPrevent(event, keyOptions);\n        const shouldStop = this.shouldStop(event, keyOptions);\n\n        if (shouldPrevent) {\n            event.preventDefault();\n        }\n\n        if (shouldStop) {\n            event.stopPropagation();\n        }\n\n        // Trimite eveniment la .NET\n        const eventArgs = {\n            key: event.key,\n            code: event.code,\n            location: event.location,\n            repeat: event.repeat,\n            ctrlKey: event.ctrlKey,\n            shiftKey: event.shiftKey,\n            altKey: event.altKey,\n            metaKey: event.metaKey,\n            type: event.type\n        };\n\n        instance.dotNetRef.invokeMethodAsync(\n            event.type === 'keydown' ? 'OnKeyDown' : 'OnKeyUp',\n            eventArgs\n        );\n    },\n\n    findKeyOptions: function(event, keys) {\n        return keys.find(keyOption =&gt; {\n            if (keyOption.key.includes('/') &amp;&amp; keyOption.key.includes('/')) {\n                // Regex pattern\n                const pattern = keyOption.key.slice(1, -1);\n                const regex = new RegExp(pattern);\n                return regex.test(event.key);\n            }\n            return keyOption.key === event.key;\n        });\n    },\n\n    shouldPrevent: function(event, keyOptions) {\n        const preventKey = event.type === 'keydown' \n            ? keyOptions.preventDown \n            : keyOptions.preventUp;\n\n        return this.matchesModifiers(event, preventKey);\n    },\n\n    shouldStop: function(event, keyOptions) {\n        const stopKey = event.type === 'keydown' \n            ? keyOptions.stopDown \n            : keyOptions.stopUp;\n\n        return this.matchesModifiers(event, stopKey);\n    },\n\n    matchesModifiers: function(event, modifierString) {\n        if (!modifierString) return false;\n\n        const parts = modifierString.split('+');\n        const hasKey = parts.includes('key');\n        const hasCtrl = parts.includes('ctrl');\n        const hasShift = parts.includes('shift');\n        const hasAlt = parts.includes('alt');\n        const hasMeta = parts.includes('meta');\n        const hasNone = parts.includes('none');\n\n        if (hasNone) {\n            return hasKey &amp;&amp; !event.ctrlKey &amp;&amp; !event.shiftKey &amp;&amp; \n                   !event.altKey &amp;&amp; !event.metaKey;\n        }\n\n        return hasKey &amp;&amp;\n               (!hasCtrl || event.ctrlKey) &amp;&amp;\n               (!hasShift || event.shiftKey) &amp;&amp;\n               (!hasAlt || event.altKey) &amp;&amp;\n               (!hasMeta || event.metaKey);\n    },\n\n    disconnect: function(elementId) {\n        const instance = this.instances.get(elementId);\n        if (instance) {\n            if (instance.observer) {\n                instance.observer.disconnect();\n            }\n\n            instance.handlers.forEach((handler, element) =&gt; {\n                element.removeEventListener('keydown', handler);\n                element.removeEventListener('keyup', handler);\n            });\n\n            this.instances.delete(elementId);\n        }\n    },\n\n    updateKey: function(elementId, keyOption) {\n        const instance = this.instances.get(elementId);\n        if (instance) {\n            const existingIndex = instance.options.keys.findIndex(k =&gt; \n                k.key === keyOption.key);\n\n            if (existingIndex &gt;= 0) {\n                instance.options.keys[existingIndex] = keyOption;\n            } else {\n                instance.options.keys.push(keyOption);\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#9-testare","title":"9. Testare","text":"<pre><code>[TestClass]\npublic class KeyInterceptorTests\n{\n    private Mock&lt;IJSRuntime&gt; _jsRuntime;\n    private IKeyInterceptor _keyInterceptor;\n    private List&lt;KeyboardEventArgs&gt; _keyDownEvents;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _jsRuntime = new Mock&lt;IJSRuntime&gt;();\n        _keyInterceptor = new KeyInterceptor(_jsRuntime.Object);\n        _keyDownEvents = new List&lt;KeyboardEventArgs&gt;();\n        _keyInterceptor.KeyDown += args =&gt; _keyDownEvents.Add(args);\n    }\n\n    [TestMethod]\n    public async Task Connect_ValidOptions_CallsJavaScript()\n    {\n        // Arrange\n        var elementId = \"test-element\";\n        var options = new KeyInterceptorOptions\n        {\n            TargetClass = \"test-class\",\n            Keys = new List&lt;KeyOptions&gt;\n            {\n                new KeyOptions { Key = \"Enter\", PreventDown = \"key+none\" }\n            }\n        };\n\n        // Act\n        await _keyInterceptor.Connect(elementId, options);\n\n        // Assert\n        _jsRuntime.Verify(js =&gt; js.InvokeVoidAsync(\n            \"fodKeyInterceptor.connect\",\n            It.IsAny&lt;object[]&gt;()), Times.Once);\n    }\n\n    [TestMethod]\n    public void OnKeyDown_FiresEvent()\n    {\n        // Arrange\n        var keyEvent = new KeyboardEventArgs\n        {\n            Key = \"Enter\",\n            Type = \"keydown\"\n        };\n\n        // Act\n        _keyInterceptor.InvokeKeyDown(keyEvent);\n\n        // Assert\n        Assert.AreEqual(1, _keyDownEvents.Count);\n        Assert.AreEqual(\"Enter\", _keyDownEvents[0].Key);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/KeyInterceptor/#10-best-practices","title":"10. Best Practices","text":"<ol> <li>Dispose obligatoriu - \u00centotdeauna apela\u021bi Disconnect \u0219i Dispose</li> <li>Target specific - Folosi\u021bi clase CSS specifice pentru targeting</li> <li>Modifiers clare - Defini\u021bi clar combina\u021biile de taste</li> <li>Prevent cu grij\u0103 - Nu preveni\u021bi taste sistem importante</li> <li>Documentare shortcuts - Afi\u0219a\u021bi shortcuts disponibile utilizatorilor</li> <li>Accessibility - Asigura\u021bi alternative pentru toate shortcuts</li> <li>Testing - Testa\u021bi pe diferite browsere \u0219i OS-uri</li> </ol>"},{"location":"fod/servicii/KeyInterceptor/#11-concluzie","title":"11. Concluzie","text":"<p><code>KeyInterceptor</code> ofer\u0103 un sistem robust \u0219i flexibil pentru gestionarea evenimentelor de tastatur\u0103 \u00een componentele Blazor. Cu suport pentru combina\u021bii complexe de taste, monitorizare automat\u0103 DOM \u0219i control granular asupra comportamentului, serviciul faciliteaz\u0103 crearea de interfe\u021be cu shortcuts intuitive \u0219i experien\u021be de navigare eficiente cu tastatura.</p>"},{"location":"fod/servicii/NameService/","title":"NameService","text":""},{"location":"fod/servicii/NameService/#documentatie-pentru-serviciul-nameservice","title":"Documenta\u021bie pentru serviciul NameService","text":""},{"location":"fod/servicii/NameService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>NameService</code> este un serviciu pentru validarea \u0219i ob\u021binerea numelor persoanelor din Registrul de Stat al Popula\u021biei (RSP) al Republicii Moldova. Serviciul ofer\u0103 func\u021bionalit\u0103\u021bi de validare a identit\u0103\u021bii persoanelor \u0219i verificare a rela\u021biilor dintre persoane \u0219i entit\u0103\u021bi juridice.</p> <p>Caracteristici principale: - Validare identitate prin IDNP, nume \u0219i prenume - Ob\u021binere nume persoan\u0103 dup\u0103 IDNP - Verificare rela\u021bie persoan\u0103-entitate (administrator) - Integrare cu serviciile guvernamentale MConnect - Suport pentru configurare flexibil\u0103 - Protec\u021bie date personale</p>"},{"location":"fod/servicii/NameService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// Client-side (Blazor WebAssembly)\nbuilder.Services.AddFodComponents(configuration);\n\n// Server-side cu MConnect\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\nbuilder.Services.AddMConnectIntegration(configuration);\n\n// Configurare op\u021biuni server-side\nbuilder.Services.Configure&lt;NameServiceOptions&gt;(options =&gt;\n{\n    options.AllowValidateNameByIdnp = true;\n    options.MConnectCallingReason = \"Verificare identitate pentru serviciul {ServiceName}\";\n});\n\n// \u00cenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;INameService, NameService&gt;();\nbuilder.Services.AddHttpClient&lt;INameService, NameService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n</code></pre>"},{"location":"fod/servicii/NameService/#3-interfata-inameservice","title":"3. Interfa\u021ba INameService","text":"<pre><code>namespace Fod.Components.Shared.Services\n{\n    public interface INameService\n    {\n        Task&lt;ValidateNameModel&gt; Validate(string idnp, string firstName, string lastName);\n        Task&lt;NameModel&gt; GetName(string idnp);\n        Task&lt;VerifyEntityRelationship&gt; VerifyEntitiesRelationship(string idno, string idnp);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Validate</code> <code>string idnp, string firstName, string lastName</code> <code>Task&lt;ValidateNameModel&gt;</code> Valideaz\u0103 identitatea persoanei <code>GetName</code> <code>string idnp</code> <code>Task&lt;NameModel&gt;</code> Ob\u021bine numele persoanei dup\u0103 IDNP <code>VerifyEntitiesRelationship</code> <code>string idno, string idnp</code> <code>Task&lt;VerifyEntityRelationship&gt;</code> Verific\u0103 rela\u021bia persoan\u0103-entitate"},{"location":"fod/servicii/NameService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/NameService/#validatenamemodel","title":"ValidateNameModel","text":"<pre><code>public class ValidateNameModel\n{\n    // Indic\u0103 dac\u0103 persoana exist\u0103 \u00een RSP\n    public bool PersonExist { get; set; }\n\n    // Indic\u0103 dac\u0103 conexiunea cu serviciul este disponibil\u0103\n    public bool ConnectionExist { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#namemodel","title":"NameModel","text":"<pre><code>public class NameModel\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#verifyentityrelationship","title":"VerifyEntityRelationship","text":"<pre><code>public class VerifyEntityRelationship\n{\n    // Indic\u0103 dac\u0103 persoana este administrator al entit\u0103\u021bii\n    public bool IsAdministrator { get; set; }\n\n    // Indic\u0103 dac\u0103 conexiunea cu serviciul este disponibil\u0103\n    public bool ConnectionExist { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#nameserviceoptions","title":"NameServiceOptions","text":"<pre><code>public class NameServiceOptions\n{\n    // Permite validarea numelui dup\u0103 IDNP\n    public bool AllowValidateNameByIdnp { get; set; } = true;\n\n    // Motivul apel\u0103rii serviciului MConnect pentru audit\n    public string MConnectCallingReason { get; set; } = \n        \"Verificare identitate pentru serviciul {ServiceName}\";\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/NameService/#validare-identitate-simpla","title":"Validare identitate simpl\u0103","text":"<pre><code>@page \"/validare-identitate\"\n@inject INameService NameService\n@inject IFodNotificationService NotificationService\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Validare Identitate\n            &lt;/FodText&gt;\n\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"idnp\" \n                              Label=\"IDNP\"\n                              Mask=\"______________\"\n                              MaxLength=\"13\"\n                              Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"firstName\" \n                              Label=\"Prenume\"\n                              Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"lastName\" \n                              Label=\"Nume\"\n                              Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodButton OnClick=\"ValidateIdentity\" \n                       Color=\"FodColor.Primary\"\n                       Class=\"mt-3\"\n                       Disabled=\"@(!IsFormValid() || isValidating)\"&gt;\n                @if (isValidating)\n                {\n                    &lt;FodLoadingButton /&gt;\n                }\n                else\n                {\n                    &lt;text&gt;Valideaz\u0103&lt;/text&gt;\n                }\n            &lt;/FodButton&gt;\n\n            @if (validationResult != null)\n            {\n                &lt;FodAlert Severity=\"@GetAlertSeverity()\" Class=\"mt-3\"&gt;\n                    @GetValidationMessage()\n                &lt;/FodAlert&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private string idnp;\n    private string firstName;\n    private string lastName;\n    private ValidateNameModel validationResult;\n    private bool isValidating;\n\n    private bool IsFormValid()\n    {\n        return !string.IsNullOrWhiteSpace(idnp) &amp;&amp; \n               idnp.Length == 13 &amp;&amp;\n               !string.IsNullOrWhiteSpace(firstName) &amp;&amp;\n               !string.IsNullOrWhiteSpace(lastName);\n    }\n\n    private async Task ValidateIdentity()\n    {\n        if (!IsFormValid())\n            return;\n\n        isValidating = true;\n        validationResult = null;\n\n        try\n        {\n            validationResult = await NameService.Validate(idnp, firstName, lastName);\n\n            if (!validationResult.ConnectionExist)\n            {\n                NotificationService.Warning(\"Conexiunea cu RSP nu este disponibil\u0103\");\n            }\n            else if (validationResult.PersonExist)\n            {\n                NotificationService.Success(\"Identitate validat\u0103 cu succes!\");\n            }\n            else\n            {\n                NotificationService.Error(\"Datele introduse nu corespund!\");\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la validare: {ex.Message}\");\n        }\n        finally\n        {\n            isValidating = false;\n        }\n    }\n\n    private FodSeverity GetAlertSeverity()\n    {\n        if (!validationResult.ConnectionExist)\n            return FodSeverity.Warning;\n\n        return validationResult.PersonExist ? FodSeverity.Success : FodSeverity.Error;\n    }\n\n    private string GetValidationMessage()\n    {\n        if (!validationResult.ConnectionExist)\n            return \"Verificarea nu poate fi efectuat\u0103. Serviciul RSP nu este disponibil.\";\n\n        return validationResult.PersonExist\n            ? \"Identitatea a fost verificat\u0103 cu succes. Datele corespund cu cele din RSP.\"\n            : \"Datele introduse nu corespund cu \u00eenregistr\u0103rile din RSP. Verifica\u021bi corectitudinea datelor.\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#auto-completare-nume-dupa-idnp","title":"Auto-completare nume dup\u0103 IDNP","text":"<pre><code>@inject INameService NameService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Date Personale cu Auto-completare\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodInput @bind-Value=\"model.Idnp\" \n                          Label=\"IDNP\"\n                          Mask=\"______________\"\n                          @onblur=\"OnIdnpChanged\"\n                          EndAdornment=\"@GetIdnpAdornment()\" /&gt;\n            &lt;/FodGrid&gt;\n\n            @if (isLoadingName)\n            {\n                &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                    &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n            }\n\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodInput @bind-Value=\"model.FirstName\" \n                          Label=\"Prenume\"\n                          ReadOnly=\"@nameAutoFilled\"\n                          HelperText=\"@(nameAutoFilled ? \"Completat automat din RSP\" : \"\")\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodInput @bind-Value=\"model.LastName\" \n                          Label=\"Nume\"\n                          ReadOnly=\"@nameAutoFilled\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        @if (showManualEntryWarning)\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"mt-3\"&gt;\n                Numele nu a putut fi preluat automat. V\u0103 rug\u0103m introduce\u021bi manual datele.\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private PersonModel model = new();\n    private bool isLoadingName;\n    private bool nameAutoFilled;\n    private bool showManualEntryWarning;\n\n    private async Task OnIdnpChanged()\n    {\n        if (string.IsNullOrWhiteSpace(model.Idnp) || model.Idnp.Length != 13)\n            return;\n\n        isLoadingName = true;\n        nameAutoFilled = false;\n        showManualEntryWarning = false;\n\n        try\n        {\n            var nameData = await NameService.GetName(model.Idnp);\n\n            if (nameData != null &amp;&amp; !string.IsNullOrEmpty(nameData.FirstName))\n            {\n                model.FirstName = nameData.FirstName;\n                model.LastName = nameData.LastName;\n                nameAutoFilled = true;\n                NotificationService.Success(\"Date preluate din RSP\");\n            }\n            else\n            {\n                showManualEntryWarning = true;\n            }\n        }\n        catch (NotImplementedException)\n        {\n            // Metoda GetName nu este implementat\u0103 pe server\n            showManualEntryWarning = true;\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la preluarea datelor: {ex.Message}\");\n            showManualEntryWarning = true;\n        }\n        finally\n        {\n            isLoadingName = false;\n        }\n    }\n\n    private RenderFragment GetIdnpAdornment()\n    {\n        return @&lt;text&gt;\n            @if (nameAutoFilled)\n            {\n                &lt;FodTooltip Title=\"Date preluate din RSP\"&gt;\n                    &lt;FodIcon Color=\"FodColor.Success\"&gt;\n                        @FodIcons.Material.Filled.Verified\n                    &lt;/FodIcon&gt;\n                &lt;/FodTooltip&gt;\n            }\n        &lt;/text&gt;;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#verificare-relatie-persoana-entitate","title":"Verificare rela\u021bie persoan\u0103-entitate","text":"<pre><code>@inject INameService NameService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Verificare Administrator Organiza\u021bie\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodInput @bind-Value=\"idno\" \n                          Label=\"IDNO Organiza\u021bie\"\n                          Mask=\"______________\"\n                          Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodInput @bind-Value=\"idnp\" \n                          Label=\"IDNP Administrator\"\n                          Mask=\"______________\"\n                          Required=\"true\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodButton OnClick=\"VerifyAdministrator\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"&gt;\n            Verific\u0103 Administrator\n        &lt;/FodButton&gt;\n\n        @if (verificationResult != null)\n        {\n            &lt;div class=\"mt-3\"&gt;\n                @if (!verificationResult.ConnectionExist)\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n                        Serviciul de verificare nu este disponibil momentan.\n                    &lt;/FodAlert&gt;\n                }\n                else if (verificationResult.IsAdministrator)\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n                        &lt;FodAlertTitle&gt;Confirmat&lt;/FodAlertTitle&gt;\n                        Persoana cu IDNP @idnp este administrator al organiza\u021biei cu IDNO @idno.\n                    &lt;/FodAlert&gt;\n                }\n                else\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n                        &lt;FodAlertTitle&gt;Neconfirmat&lt;/FodAlertTitle&gt;\n                        Persoana cu IDNP @idnp NU este administrator al organiza\u021biei cu IDNO @idno.\n                    &lt;/FodAlert&gt;\n                }\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string idno;\n    private string idnp;\n    private VerifyEntityRelationship verificationResult;\n\n    private async Task VerifyAdministrator()\n    {\n        if (string.IsNullOrWhiteSpace(idno) || string.IsNullOrWhiteSpace(idnp))\n            return;\n\n        try\n        {\n            verificationResult = await NameService.VerifyEntitiesRelationship(idno, idnp);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la verificare: {ex.Message}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#7-integrare-cu-componenta-fodperson","title":"7. Integrare cu componenta FodPerson","text":"<pre><code>@page \"/formular-persoana\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Formular Date Personale\n    &lt;/FodText&gt;\n\n    &lt;!-- Componenta FodPerson folose\u0219te INameService intern --&gt;\n    &lt;FodPerson @bind-Model=\"person\"\n               ValidateNameByIdnp=\"true\"\n               AutoPopulateNameByIdnp=\"false\"\n               ShowMiddleName=\"true\"\n               ShowBirthDate=\"true\"\n               ShowGender=\"true\"\n               OnValidationCompleted=\"OnPersonValidated\" /&gt;\n\n    &lt;FodButton OnClick=\"SubmitForm\" \n               Color=\"FodColor.Primary\"\n               Class=\"mt-3\"\n               Disabled=\"@(!isValid)\"&gt;\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private PersonModel person = new();\n    private bool isValid;\n\n    private void OnPersonValidated(bool valid)\n    {\n        isValid = valid;\n\n        if (!valid)\n        {\n            NotificationService.Warning(\"Datele personale necesit\u0103 verificare\");\n        }\n    }\n\n    private async Task SubmitForm()\n    {\n        if (isValid)\n        {\n            // Procesare formular\n            await ProcessForm(person);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#8-serviciu-cu-audit-si-cache","title":"8. Serviciu cu audit \u0219i cache","text":"<pre><code>public class AuditedNameService : INameService\n{\n    private readonly INameService _innerService;\n    private readonly IAuditService _auditService;\n    private readonly IMemoryCache _cache;\n    private readonly ICurrentUserContextService _userContext;\n\n    public async Task&lt;ValidateNameModel&gt; Validate(string idnp, string firstName, string lastName)\n    {\n        var userId = await _userContext.GetUserId();\n\n        // Log pentru audit GDPR\n        await _auditService.LogDataAccess(new DataAccessLog\n        {\n            UserId = userId,\n            DataType = \"PersonalNameValidation\",\n            DataSubject = idnp,\n            Purpose = \"Verificare identitate\",\n            Timestamp = DateTime.UtcNow\n        });\n\n        // Cache pentru reducere apeluri\n        var cacheKey = $\"name_validate_{idnp}_{firstName}_{lastName}\".ToLower();\n        if (_cache.TryGetValue&lt;ValidateNameModel&gt;(cacheKey, out var cached))\n        {\n            return cached;\n        }\n\n        var result = await _innerService.Validate(idnp, firstName, lastName);\n\n        // Cache doar rezultatele pozitive pentru 10 minute\n        if (result.ConnectionExist &amp;&amp; result.PersonExist)\n        {\n            _cache.Set(cacheKey, result, TimeSpan.FromMinutes(10));\n        }\n\n        // Audit rezultat\n        await _auditService.LogAsync(new AuditEntry\n        {\n            Action = \"NAME_VALIDATION\",\n            EntityType = \"Person\",\n            EntityId = idnp.Substring(0, 4) + \"***\",\n            Success = result.PersonExist,\n            UserId = userId,\n            Details = result.PersonExist ? \"Valid\" : \"Invalid\"\n        });\n\n        return result;\n    }\n\n    public async Task&lt;NameModel&gt; GetName(string idnp)\n    {\n        // Similar cu audit \u0219i cache\n        var cacheKey = $\"name_get_{idnp}\";\n        if (_cache.TryGetValue&lt;NameModel&gt;(cacheKey, out var cached))\n        {\n            return cached;\n        }\n\n        var result = await _innerService.GetName(idnp);\n\n        if (result != null)\n        {\n            _cache.Set(cacheKey, result, TimeSpan.FromMinutes(30));\n        }\n\n        return result;\n    }\n\n    public async Task&lt;VerifyEntityRelationship&gt; VerifyEntitiesRelationship(string idno, string idnp)\n    {\n        // Implementare similar\u0103 cu audit\n        return await _innerService.VerifyEntitiesRelationship(idno, idnp);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#9-validare-in-lot","title":"9. Validare \u00een lot","text":"<pre><code>public class BatchNameValidationService\n{\n    private readonly INameService _nameService;\n    private readonly ILogger&lt;BatchNameValidationService&gt; _logger;\n\n    public async Task&lt;BatchValidationResult&gt; ValidateBatch(List&lt;PersonData&gt; persons)\n    {\n        var result = new BatchValidationResult();\n        var validationTasks = new List&lt;Task&lt;PersonValidationResult&gt;&gt;();\n\n        // Limitare concuren\u021b\u0103\n        using var semaphore = new SemaphoreSlim(5);\n\n        foreach (var person in persons)\n        {\n            validationTasks.Add(ValidatePersonAsync(person, semaphore));\n        }\n\n        var results = await Task.WhenAll(validationTasks);\n\n        result.TotalProcessed = results.Length;\n        result.ValidCount = results.Count(r =&gt; r.IsValid);\n        result.InvalidCount = results.Count(r =&gt; !r.IsValid &amp;&amp; r.ConnectionAvailable);\n        result.ConnectionErrorCount = results.Count(r =&gt; !r.ConnectionAvailable);\n        result.Details = results.ToList();\n\n        return result;\n    }\n\n    private async Task&lt;PersonValidationResult&gt; ValidatePersonAsync(\n        PersonData person, \n        SemaphoreSlim semaphore)\n    {\n        await semaphore.WaitAsync();\n        try\n        {\n            var stopwatch = Stopwatch.StartNew();\n            var validation = await _nameService.Validate(\n                person.Idnp, \n                person.FirstName, \n                person.LastName);\n\n            return new PersonValidationResult\n            {\n                Person = person,\n                IsValid = validation.PersonExist,\n                ConnectionAvailable = validation.ConnectionExist,\n                ValidationTime = stopwatch.ElapsedMilliseconds\n            };\n        }\n        finally\n        {\n            semaphore.Release();\n        }\n    }\n}\n\npublic class BatchValidationResult\n{\n    public int TotalProcessed { get; set; }\n    public int ValidCount { get; set; }\n    public int InvalidCount { get; set; }\n    public int ConnectionErrorCount { get; set; }\n    public List&lt;PersonValidationResult&gt; Details { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#10-protectie-date-personale","title":"10. Protec\u021bie date personale","text":"<pre><code>public class PrivacyProtectedNameService : INameService\n{\n    private readonly INameService _innerService;\n    private readonly IDataProtectionProvider _dataProtection;\n    private readonly ILogger&lt;PrivacyProtectedNameService&gt; _logger;\n\n    public async Task&lt;ValidateNameModel&gt; Validate(string idnp, string firstName, string lastName)\n    {\n        // Logging cu date anonimizate\n        _logger.LogInformation(\n            \"Name validation request for IDNP: {IdnpMasked}, Name: {NameInitials}\",\n            MaskIdnp(idnp),\n            GetInitials(firstName, lastName));\n\n        var result = await _innerService.Validate(idnp, firstName, lastName);\n\n        // Nu log\u0103m rezultatul specific pentru privacy\n        _logger.LogInformation(\"Name validation completed\");\n\n        return result;\n    }\n\n    private string MaskIdnp(string idnp)\n    {\n        if (string.IsNullOrEmpty(idnp) || idnp.Length &lt; 4)\n            return \"***\";\n\n        return idnp.Substring(0, 4) + new string('*', idnp.Length - 4);\n    }\n\n    private string GetInitials(string firstName, string lastName)\n    {\n        var firstInitial = string.IsNullOrEmpty(firstName) ? \"*\" : firstName[0].ToString();\n        var lastInitial = string.IsNullOrEmpty(lastName) ? \"*\" : lastName[0].ToString();\n        return $\"{firstInitial}.{lastInitial}.\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class NameServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private INameService _nameService;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.example.com/\")\n        };\n\n        _nameService = new NameService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task Validate_ValidPerson_ReturnsPersonExists()\n    {\n        // Arrange\n        var idnp = \"2001234567890\";\n        var firstName = \"Ion\";\n        var lastName = \"Popescu\";\n\n        var expectedResponse = new ValidateNameModel\n        {\n            PersonExist = true,\n            ConnectionExist = true\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _nameService.Validate(idnp, firstName, lastName);\n\n        // Assert\n        Assert.IsTrue(result.PersonExist);\n        Assert.IsTrue(result.ConnectionExist);\n    }\n\n    [TestMethod]\n    public async Task Validate_InvalidPerson_ReturnsPersonNotExists()\n    {\n        // Arrange\n        var expectedResponse = new ValidateNameModel\n        {\n            PersonExist = false,\n            ConnectionExist = true\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _nameService.Validate(\"1234567890123\", \"Test\", \"User\");\n\n        // Assert\n        Assert.IsFalse(result.PersonExist);\n        Assert.IsTrue(result.ConnectionExist);\n    }\n\n    [TestMethod]\n    public async Task VerifyEntitiesRelationship_ValidAdmin_ReturnsIsAdministrator()\n    {\n        // Arrange\n        var idno = \"1003600123456\";\n        var idnp = \"2001234567890\";\n\n        var expectedResponse = new VerifyEntityRelationship\n        {\n            IsAdministrator = true,\n            ConnectionExist = true\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _nameService.VerifyEntitiesRelationship(idno, idnp);\n\n        // Assert\n        Assert.IsTrue(result.IsAdministrator);\n        Assert.IsTrue(result.ConnectionExist);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/NameService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Cache inteligent - Cache-ui\u021bi doar rezultatele pozitive</li> <li>Audit complet - \u00cenregistra\u021bi toate acces\u0103rile pentru GDPR</li> <li>Protec\u021bie date - Masca\u021bi datele sensibile \u00een loguri</li> <li>Tratare erori - Gestiona\u021bi lipsa conexiunii graceful</li> <li>Validare input - Verifica\u021bi format IDNP/IDNO \u00eenainte de apel</li> <li>Rate limiting - Limita\u021bi num\u0103rul de verific\u0103ri per utilizator</li> <li>Fallback - Permite\u021bi introducere manual\u0103 c\u00e2nd serviciul nu e disponibil</li> </ol>"},{"location":"fod/servicii/NameService/#13-concluzie","title":"13. Concluzie","text":"<p><code>NameService</code> este un serviciu esen\u021bial pentru validarea identit\u0103\u021bii \u00een sistemul FOD, oferind acces securizat la datele din registrele na\u021bionale. Cu func\u021bionalit\u0103\u021bi de validare, auto-completare \u0219i verificare rela\u021bii persoan\u0103-entitate, serviciul faciliteaz\u0103 procesarea sigur\u0103 \u0219i eficient\u0103 a datelor personale \u00een aplica\u021biile guvernamentale digitale.</p>"},{"location":"fod/servicii/OrderNumberGenerator/","title":"OrderNumberGenerator","text":""},{"location":"fod/servicii/OrderNumberGenerator/#documentatie-pentru-serviciul-ordernumbergenerator","title":"Documenta\u021bie pentru serviciul OrderNumberGenerator","text":""},{"location":"fod/servicii/OrderNumberGenerator/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>OrderNumberGenerator</code> este un serviciu server-side care genereaz\u0103 numere unice de comand\u0103 pentru cererile de servicii. Serviciul combin\u0103 ID-ul serviciului, timestamp-ul curent \u0219i un num\u0103r aleatoriu pentru a crea identificatori unici \u0219i cronologici.</p> <p>Caracteristici principale: - Generare numere unice de comand\u0103 - \u00cencorporare timestamp pentru sortare cronologic\u0103 - Component aleatoriu pentru unicitate - Format predictibil \u0219i consistent - Utilizare <code>RandomNumberGenerator</code> criptografic sigur</p>"},{"location":"fod/servicii/OrderNumberGenerator/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs (server-side)\nbuilder.Services.AddScoped&lt;IOrderNumberGenerator, OrderNumberGenerator&gt;();\n\n// \u00cen modulul Server.ServicesSetup\npublic static IServiceCollection AddServerServices(this IServiceCollection services)\n{\n    services.AddScoped&lt;IOrderNumberGenerator, OrderNumberGenerator&gt;();\n    return services;\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IOrderNumberGenerator\n{\n    string Generate(string serviceId);\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#4-metoda-disponibila","title":"4. Metod\u0103 Disponibil\u0103","text":""},{"location":"fod/servicii/OrderNumberGenerator/#generate","title":"Generate","text":"<p>Genereaz\u0103 un num\u0103r unic de comand\u0103 bazat pe ID-ul serviciului.</p> <p>Parametri: - <code>serviceId</code> (string) - Identificatorul serviciului pentru care se genereaz\u0103 num\u0103rul</p> <p>Returneaz\u0103: - <code>string</code> - Num\u0103r de comand\u0103 \u00een format: <code>{serviceId}{yyMMddHHmmss}{randomNumber}</code></p> <p>Format num\u0103r generat: - Prefix: ID-ul serviciului (ex: \"SR001\") - Timestamp: An(2)+Lun\u0103+Zi+Or\u0103+Minut+Secund\u0103 (12 caractere) - Sufix: Num\u0103r aleatoriu \u00eentre 100-999 (3 caractere)</p>"},{"location":"fod/servicii/OrderNumberGenerator/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/OrderNumberGenerator/#generare-numar-comanda-simplu","title":"Generare num\u0103r comand\u0103 simplu","text":"<pre><code>public class ServiceRequestController : ControllerBase\n{\n    private readonly IOrderNumberGenerator _orderNumberGenerator;\n\n    public ServiceRequestController(IOrderNumberGenerator orderNumberGenerator)\n    {\n        _orderNumberGenerator = orderNumberGenerator;\n    }\n\n    [HttpPost(\"create\")]\n    public IActionResult CreateServiceRequest(ServiceRequestDto request)\n    {\n        // Generare num\u0103r comand\u0103\n        var orderNumber = _orderNumberGenerator.Generate(request.ServiceId);\n\n        // Exemplu rezultat: \"SR001240630143025487\"\n        // Unde: SR001 = serviceId\n        //       240630 = 2024-06-30\n        //       143025 = 14:30:25\n        //       487 = num\u0103r aleatoriu\n\n        var serviceRequest = new ServiceRequest\n        {\n            OrderNumber = orderNumber,\n            ServiceId = request.ServiceId,\n            CreatedAt = DateTime.Now\n            // alte propriet\u0103\u021bi...\n        };\n\n        _repository.Add(serviceRequest);\n\n        return Ok(new { orderNumber });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#generare-pentru-diferite-servicii","title":"Generare pentru diferite servicii","text":"<pre><code>public class OrderService\n{\n    private readonly IOrderNumberGenerator _generator;\n\n    public OrderService(IOrderNumberGenerator generator)\n    {\n        _generator = generator;\n    }\n\n    public void GenerateOrdersExample()\n    {\n        // Apostil\u0103\n        var apostillaOrder = _generator.Generate(\"APOST\");\n        // Rezultat: \"APOST240630143025123\"\n\n        // Certificat\n        var certificateOrder = _generator.Generate(\"CERT\");\n        // Rezultat: \"CERT240630143025456\"\n\n        // Traducere\n        var translationOrder = _generator.Generate(\"TRAD\");\n        // Rezultat: \"TRAD240630143025789\"\n\n        // Serviciu personalizat\n        var customOrder = _generator.Generate(\"CUSTOM-001\");\n        // Rezultat: \"CUSTOM-001240630143025234\"\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#batch-generation-cu-garantare-unicitate","title":"Batch generation cu garantare unicitate","text":"<pre><code>public class BatchOrderService\n{\n    private readonly IOrderNumberGenerator _generator;\n    private readonly ILogger&lt;BatchOrderService&gt; _logger;\n\n    public async Task&lt;List&lt;string&gt;&gt; GenerateBatchOrders(\n        string serviceId, \n        int count)\n    {\n        var orders = new HashSet&lt;string&gt;();\n        var attempts = 0;\n        var maxAttempts = count * 10; // Protec\u021bie \u00eempotriva buclei infinite\n\n        while (orders.Count &lt; count &amp;&amp; attempts &lt; maxAttempts)\n        {\n            var orderNumber = _generator.Generate(serviceId);\n\n            if (orders.Add(orderNumber))\n            {\n                _logger.LogInformation(\n                    \"Generated order number: {OrderNumber}\", \n                    orderNumber);\n            }\n            else\n            {\n                // Foarte pu\u021bin probabil datorit\u0103 componentei aleatorii\n                _logger.LogWarning(\n                    \"Duplicate order number detected: {OrderNumber}\", \n                    orderNumber);\n            }\n\n            attempts++;\n\n            // Delay minim pentru a evita coliziuni de timestamp\n            if (orders.Count &lt; count)\n            {\n                await Task.Delay(1);\n            }\n        }\n\n        return orders.ToList();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#6-integrare-cu-alte-servicii","title":"6. Integrare cu alte servicii","text":""},{"location":"fod/servicii/OrderNumberGenerator/#cu-serviciul-de-cereri","title":"Cu serviciul de cereri","text":"<pre><code>public class ServiceRequestService\n{\n    private readonly IOrderNumberGenerator _orderGenerator;\n    private readonly IServiceRequestRepository _repository;\n    private readonly INotificationService _notificationService;\n\n    public ServiceRequestService(\n        IOrderNumberGenerator orderGenerator,\n        IServiceRequestRepository repository,\n        INotificationService notificationService)\n    {\n        _orderGenerator = orderGenerator;\n        _repository = repository;\n        _notificationService = notificationService;\n    }\n\n    public async Task&lt;ServiceRequestResult&gt; CreateRequest(\n        CreateServiceRequestDto dto)\n    {\n        // Generare num\u0103r comand\u0103\n        var orderNumber = _orderGenerator.Generate(dto.ServiceId);\n\n        var request = new ServiceRequest\n        {\n            OrderNumber = orderNumber,\n            ServiceId = dto.ServiceId,\n            UserId = dto.UserId,\n            Status = ServiceRequestStatus.New,\n            CreatedAt = DateTime.UtcNow,\n            Data = dto.Data\n        };\n\n        await _repository.AddAsync(request);\n\n        // Notificare cu num\u0103rul de comand\u0103\n        await _notificationService.SendAsync(new Notification\n        {\n            UserId = dto.UserId,\n            Subject = \"Cerere \u00eenregistrat\u0103\",\n            Message = $\"Cererea dvs. a fost \u00eenregistrat\u0103 cu num\u0103rul: {orderNumber}\"\n        });\n\n        return new ServiceRequestResult\n        {\n            Success = true,\n            OrderNumber = orderNumber,\n            RequestId = request.Id\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#cu-audit-si-tracking","title":"Cu audit \u0219i tracking","text":"<pre><code>public class AuditableOrderService\n{\n    private readonly IOrderNumberGenerator _generator;\n    private readonly IAuditService _auditService;\n\n    public async Task&lt;string&gt; GenerateAuditedOrder(\n        string serviceId, \n        string userId,\n        Dictionary&lt;string, object&gt; metadata = null)\n    {\n        var orderNumber = _generator.Generate(serviceId);\n\n        // \u00cenregistrare audit\n        await _auditService.LogAsync(new AuditEntry\n        {\n            Action = \"OrderGenerated\",\n            EntityType = \"ServiceRequest\",\n            EntityId = orderNumber,\n            UserId = userId,\n            Timestamp = DateTime.UtcNow,\n            Details = new\n            {\n                ServiceId = serviceId,\n                OrderNumber = orderNumber,\n                Metadata = metadata\n            }\n        });\n\n        return orderNumber;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#7-parsare-si-validare-numere-generate","title":"7. Parsare \u0219i validare numere generate","text":"<pre><code>public class OrderNumberParser\n{\n    public OrderNumberInfo Parse(string orderNumber)\n    {\n        if (string.IsNullOrEmpty(orderNumber) || orderNumber.Length &lt; 15)\n        {\n            throw new ArgumentException(\"Invalid order number format\");\n        }\n\n        // Extrage componentele\n        var timestampStart = orderNumber.Length - 15; // 12 timestamp + 3 random\n        var serviceId = orderNumber.Substring(0, timestampStart);\n        var timestamp = orderNumber.Substring(timestampStart, 12);\n        var randomPart = orderNumber.Substring(orderNumber.Length - 3);\n\n        // Parsare timestamp\n        var year = 2000 + int.Parse(timestamp.Substring(0, 2));\n        var month = int.Parse(timestamp.Substring(2, 2));\n        var day = int.Parse(timestamp.Substring(4, 2));\n        var hour = int.Parse(timestamp.Substring(6, 2));\n        var minute = int.Parse(timestamp.Substring(8, 2));\n        var second = int.Parse(timestamp.Substring(10, 2));\n\n        var dateTime = new DateTime(year, month, day, hour, minute, second);\n\n        return new OrderNumberInfo\n        {\n            ServiceId = serviceId,\n            GeneratedAt = dateTime,\n            RandomComponent = randomPart,\n            FullOrderNumber = orderNumber\n        };\n    }\n}\n\npublic class OrderNumberInfo\n{\n    public string ServiceId { get; set; }\n    public DateTime GeneratedAt { get; set; }\n    public string RandomComponent { get; set; }\n    public string FullOrderNumber { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#8-implementare-personalizata","title":"8. Implementare personalizat\u0103","text":"<pre><code>public class CustomOrderNumberGenerator : IOrderNumberGenerator\n{\n    private readonly IConfiguration _configuration;\n    private readonly ISystemClock _clock;\n\n    public CustomOrderNumberGenerator(\n        IConfiguration configuration,\n        ISystemClock clock)\n    {\n        _configuration = configuration;\n        _clock = clock;\n    }\n\n    public string Generate(string serviceId)\n    {\n        var prefix = _configuration[\"OrderNumber:Prefix\"] ?? \"\";\n        var separator = _configuration[\"OrderNumber:Separator\"] ?? \"-\";\n        var includeMilliseconds = _configuration.GetValue&lt;bool&gt;(\"OrderNumber:IncludeMilliseconds\");\n\n        var now = _clock.UtcNow;\n        var timestamp = includeMilliseconds \n            ? now.ToString(\"yyMMddHHmmssfff\")\n            : now.ToString(\"yyMMddHHmmss\");\n\n        var random = GenerateSecureRandom();\n\n        return $\"{prefix}{serviceId}{separator}{timestamp}{separator}{random}\";\n    }\n\n    private string GenerateSecureRandom()\n    {\n        // Folose\u0219te 4 cifre pentru mai mult\u0103 unicitate\n        return RandomNumberGenerator.GetInt32(1000, 9999).ToString();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Unicitate: De\u0219i generatorul include o component\u0103 aleatorie, pentru aplica\u021bii critice considera\u021bi verificarea unicit\u0103\u021bii \u00een baza de date</li> <li>Timezone: Utiliza\u021bi UTC pentru aplica\u021bii interna\u021bionale</li> <li>Format consistent: P\u0103stra\u021bi acela\u0219i format pentru toate serviciile pentru a facilita parsarea</li> <li>Stocare: Indexa\u021bi c\u00e2mpul orderNumber \u00een baza de date pentru c\u0103ut\u0103ri rapide</li> <li>Validare: Implementa\u021bi validare pentru a detecta numere de comand\u0103 invalide sau modificate</li> </ol>"},{"location":"fod/servicii/OrderNumberGenerator/#10-testing","title":"10. Testing","text":"<pre><code>[TestClass]\npublic class OrderNumberGeneratorTests\n{\n    private readonly IOrderNumberGenerator _generator = new OrderNumberGenerator();\n\n    [TestMethod]\n    public void Generate_ReturnsCorrectFormat()\n    {\n        // Arrange\n        var serviceId = \"TEST\";\n\n        // Act\n        var result = _generator.Generate(serviceId);\n\n        // Assert\n        Assert.IsTrue(result.StartsWith(serviceId));\n        Assert.AreEqual(serviceId.Length + 15, result.Length);\n\n        // Verificare component\u0103 numeric\u0103\n        var numericPart = result.Substring(serviceId.Length);\n        Assert.IsTrue(long.TryParse(numericPart, out _));\n    }\n\n    [TestMethod]\n    public void Generate_ProducesUniqueNumbers()\n    {\n        // Arrange\n        var serviceId = \"TEST\";\n        var numbers = new HashSet&lt;string&gt;();\n\n        // Act\n        for (int i = 0; i &lt; 100; i++)\n        {\n            var number = _generator.Generate(serviceId);\n            numbers.Add(number);\n            Thread.Sleep(1); // Asigur\u0103 timestamp diferit\n        }\n\n        // Assert\n        Assert.AreEqual(100, numbers.Count);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/OrderNumberGenerator/#11-concluzie","title":"11. Concluzie","text":"<p><code>OrderNumberGenerator</code> ofer\u0103 o solu\u021bie simpl\u0103 \u0219i eficient\u0103 pentru generarea de numere unice de comand\u0103 \u00een aplica\u021biile FOD. Cu format predictibil care include informa\u021bii despre timp \u0219i serviciu, faciliteaz\u0103 at\u00e2t identificarea unic\u0103 c\u00e2t \u0219i sortarea cronologic\u0103 a cererilor. Componenta aleatorie criptografic sigur\u0103 asigur\u0103 unicitate chiar \u0219i pentru cereri generate \u00een acela\u0219i moment.</p>"},{"location":"fod/servicii/PersonComponentService/","title":"PersonComponentService","text":""},{"location":"fod/servicii/PersonComponentService/#documentatie-pentru-serviciul-personcomponentservice","title":"Documenta\u021bie pentru serviciul PersonComponentService","text":""},{"location":"fod/servicii/PersonComponentService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>PersonComponentService</code> este un serviciu pentru ob\u021binerea datelor personale din Registrul de Stat al Popula\u021biei (RSP) al Republicii Moldova pe baza IDNP-ului. Serviciul ofer\u0103 func\u021bionalit\u0103\u021bi de validare \u0219i auto-populare a datelor personale cu m\u0103suri stricte de confiden\u021bialitate.</p> <p>Caracteristici principale: - Ob\u021binere date personale (nume, prenume) dup\u0103 IDNP - Integrare cu RSP prin MConnect - Op\u021biuni configurabile de confiden\u021bialitate - Validare identitate (verificare coresponden\u021b\u0103 nume-IDNP) - Suport pentru blur/mascare date sensibile - Audit \u0219i logging pentru conformitate GDPR</p>"},{"location":"fod/servicii/PersonComponentService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// Pentru client (Blazor WebAssembly)\nbuilder.Services.AddFodComponents(configuration);\n\n// Pentru server cu integrare RSP\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\nbuilder.Services.AddMConnectIntegration(configuration);\n\n// Configurare op\u021biuni confiden\u021bialitate\nbuilder.Services.Configure&lt;PersonComponentOptions&gt;(options =&gt;\n{\n    options.AllowGetData = true;\n    options.AllowFullName = true;\n    options.BlurName = false;\n    options.MConnectReason = \"Verificare identitate pentru serviciul {ServiceName}\";\n});\n\n// \u00cenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IPersonComponentService, PersonComponentService&gt;();\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#3-interfata-ipersoncomponentservice","title":"3. Interfa\u021ba IPersonComponentService","text":"<pre><code>namespace Fod.Components.Shared.Business.Person\n{\n    public interface IPersonComponentService\n    {\n        Task&lt;PersonData&gt; GetPersonData(PersonDataRequest request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>GetPersonData</code> <code>PersonDataRequest request</code> <code>Task&lt;PersonData&gt;</code> Ob\u021bine datele personale dup\u0103 IDNP"},{"location":"fod/servicii/PersonComponentService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/PersonComponentService/#persondatarequest","title":"PersonDataRequest","text":"<pre><code>public class PersonDataRequest\n{\n    [Required]\n    [StringLength(13, MinimumLength = 13)]\n    public string Idnp { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#persondata","title":"PersonData","text":"<pre><code>public class PersonData\n{\n    public string Idnp { get; set; }\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#personcomponentoptions","title":"PersonComponentOptions","text":"<pre><code>public class PersonComponentOptions\n{\n    // Permite ob\u021binerea datelor din RSP\n    public bool AllowGetData { get; set; } = true;\n\n    // Afi\u0219eaz\u0103 numele complet (false = doar ini\u021biale)\n    public bool AllowFullName { get; set; } = true;\n\n    // Aplic\u0103 blur pe nume (prima liter\u0103 + asteriscuri)\n    public bool BlurName { get; set; } = false;\n\n    // Motivul acces\u0103rii RSP pentru audit\n    public string MConnectReason { get; set; } = \n        \"Extragerea datelor dup\u0103 idnp, pentru prestarea serviciului {ServiceName}\";\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/PersonComponentService/#validare-si-auto-populare-simpla","title":"Validare \u0219i auto-populare simpl\u0103","text":"<pre><code>@page \"/formular/date-personale\"\n@inject IPersonComponentService PersonService\n@inject IFodNotificationService NotificationService\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Date Personale\n            &lt;/FodText&gt;\n\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"model.Idnp\" \n                              Label=\"IDNP\"\n                              Mask=\"______________\"\n                              MaxLength=\"13\"\n                              Required=\"true\"\n                              @onblur=\"OnIdnpChanged\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"model.FirstName\" \n                              Label=\"Prenume\"\n                              Required=\"true\"\n                              Disabled=\"@isLoadingPerson\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"model.LastName\" \n                              Label=\"Nume\"\n                              Required=\"true\"\n                              Disabled=\"@isLoadingPerson\" /&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            @if (isLoadingPerson)\n            {\n                &lt;FodLoadingLinear Indeterminate=\"true\" Class=\"mt-2\" /&gt;\n                &lt;FodText Typo=\"Typo.caption\" Align=\"FodAlign.Center\"&gt;\n                    Se verific\u0103 datele \u00een RSP...\n                &lt;/FodText&gt;\n            }\n\n            @if (validationResult != null)\n            {\n                &lt;FodAlert Severity=\"@(validationResult.IsValid ? FodSeverity.Success : FodSeverity.Error)\" \n                          Class=\"mt-3\"&gt;\n                    @validationResult.Message\n                &lt;/FodAlert&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private PersonModel model = new();\n    private bool isLoadingPerson;\n    private ValidationResult validationResult;\n\n    private async Task OnIdnpChanged()\n    {\n        if (string.IsNullOrWhiteSpace(model.Idnp) || model.Idnp.Length != 13)\n            return;\n\n        isLoadingPerson = true;\n        validationResult = null;\n\n        try\n        {\n            var personData = await PersonService.GetPersonData(new PersonDataRequest\n            {\n                Idnp = model.Idnp\n            });\n\n            if (personData != null)\n            {\n                model.FirstName = personData.FirstName;\n                model.LastName = personData.LastName;\n\n                validationResult = new ValidationResult\n                {\n                    IsValid = true,\n                    Message = \"Date preluate cu succes din RSP\"\n                };\n            }\n            else\n            {\n                validationResult = new ValidationResult\n                {\n                    IsValid = false,\n                    Message = \"IDNP-ul nu a fost g\u0103sit \u00een RSP\"\n                };\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la verificarea IDNP: {ex.Message}\");\n        }\n        finally\n        {\n            isLoadingPerson = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#componenta-fodperson-integrata","title":"Componenta FodPerson integrat\u0103","text":"<pre><code>@page \"/servicii/cerere-noua\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Depunere Cerere Nou\u0103\n    &lt;/FodText&gt;\n\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;!-- Componenta FodPerson gestioneaz\u0103 tot --&gt;\n            &lt;FodPerson @bind-Model=\"person\"\n                       ValidateNameByIdnp=\"true\"\n                       AutoPopulateNameByIdnp=\"true\"\n                       ShowMiddleName=\"true\"\n                       ShowBirthDate=\"true\"\n                       ShowGender=\"true\"\n                       OnPersonDataLoaded=\"OnPersonDataLoaded\" /&gt;\n\n            &lt;!-- Alte c\u00e2mpuri formular --&gt;\n            &lt;FodDivider Class=\"my-4\" /&gt;\n\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                    &lt;FodInput @bind-Value=\"requestModel.Email\" \n                              Label=\"Email\"\n                              Type=\"email\"\n                              Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                    &lt;FodInput @bind-Value=\"requestModel.Phone\" \n                              Label=\"Telefon\"\n                              Mask=\"+373 (__) ___-___\"\n                              Required=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodCardContent&gt;\n        &lt;FodCardActions&gt;\n            &lt;FodButton Color=\"FodColor.Primary\" OnClick=\"SubmitRequest\"&gt;\n                Depune Cererea\n            &lt;/FodButton&gt;\n        &lt;/FodCardActions&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private PersonModel person = new();\n    private RequestModel requestModel = new();\n\n    private void OnPersonDataLoaded(PersonData data)\n    {\n        if (data != null)\n        {\n            // Date adi\u021bionale preluate din RSP\n            Console.WriteLine($\"Persoan\u0103 identificat\u0103: {data.FirstName} {data.LastName}\");\n\n            // Po\u021bi prelua date suplimentare sau face valid\u0103ri\n        }\n    }\n\n    private async Task SubmitRequest()\n    {\n        // Validare \u0219i trimitere cerere\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#validare-avansata-cu-verificare-identitate","title":"Validare avansat\u0103 cu verificare identitate","text":"<pre><code>public class IdentityVerificationService\n{\n    private readonly IPersonComponentService _personService;\n    private readonly ILogger&lt;IdentityVerificationService&gt; _logger;\n\n    public async Task&lt;IdentityVerificationResult&gt; VerifyIdentity(\n        string idnp, \n        string providedFirstName, \n        string providedLastName)\n    {\n        try\n        {\n            // Ob\u021bine date din RSP\n            var personData = await _personService.GetPersonData(new PersonDataRequest\n            {\n                Idnp = idnp\n            });\n\n            if (personData == null)\n            {\n                return new IdentityVerificationResult\n                {\n                    IsValid = false,\n                    Reason = \"IDNP-ul nu exist\u0103 \u00een RSP\"\n                };\n            }\n\n            // Normalizare nume pentru compara\u021bie\n            var normalizedProvidedFirst = NormalizeName(providedFirstName);\n            var normalizedProvidedLast = NormalizeName(providedLastName);\n            var normalizedRspFirst = NormalizeName(personData.FirstName);\n            var normalizedRspLast = NormalizeName(personData.LastName);\n\n            // Verificare exact\u0103\n            bool exactMatch = normalizedProvidedFirst == normalizedRspFirst &amp;&amp; \n                             normalizedProvidedLast == normalizedRspLast;\n\n            if (exactMatch)\n            {\n                return new IdentityVerificationResult\n                {\n                    IsValid = true,\n                    Confidence = 100\n                };\n            }\n\n            // Verificare similitudine (pentru erori de tastare)\n            var firstNameSimilarity = CalculateSimilarity(\n                normalizedProvidedFirst, \n                normalizedRspFirst);\n            var lastNameSimilarity = CalculateSimilarity(\n                normalizedProvidedLast, \n                normalizedRspLast);\n\n            var averageSimilarity = (firstNameSimilarity + lastNameSimilarity) / 2;\n\n            if (averageSimilarity &gt;= 90)\n            {\n                _logger.LogWarning(\n                    \"Potrivire par\u021bial\u0103 pentru IDNP {Idnp}: {Similarity}%\", \n                    idnp, \n                    averageSimilarity);\n\n                return new IdentityVerificationResult\n                {\n                    IsValid = true,\n                    Confidence = averageSimilarity,\n                    Warning = \"Numele nu corespunde exact cu cel din RSP\"\n                };\n            }\n\n            return new IdentityVerificationResult\n            {\n                IsValid = false,\n                Reason = \"Numele furnizat nu corespunde cu cel din RSP\",\n                Confidence = averageSimilarity\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la verificarea identit\u0103\u021bii pentru IDNP {Idnp}\", idnp);\n            throw;\n        }\n    }\n\n    private string NormalizeName(string name)\n    {\n        if (string.IsNullOrWhiteSpace(name))\n            return string.Empty;\n\n        return name.Trim()\n                   .ToUpperInvariant()\n                   .Replace(\"\u0102\", \"A\")\n                   .Replace(\"\u00c2\", \"A\")\n                   .Replace(\"\u00ce\", \"I\")\n                   .Replace(\"\u0218\", \"S\")\n                   .Replace(\"\u021a\", \"T\");\n    }\n\n    private double CalculateSimilarity(string str1, string str2)\n    {\n        // Implementare algoritm Levenshtein sau similar\n        // Returneaz\u0103 procentaj similitudine 0-100\n        return 85.0; // Placeholder\n    }\n}\n\npublic class IdentityVerificationResult\n{\n    public bool IsValid { get; set; }\n    public string Reason { get; set; }\n    public string Warning { get; set; }\n    public double Confidence { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#formular-cu-optiuni-de-confidentialitate","title":"Formular cu op\u021biuni de confiden\u021bialitate","text":"<pre><code>@inject IPersonComponentService PersonService\n@inject IOptions&lt;PersonComponentOptions&gt; PersonOptions\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Date Solicitant\n        &lt;/FodText&gt;\n\n        @if (!PersonOptions.Value.AllowGetData)\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"mb-3\"&gt;\n                Verificarea automat\u0103 \u00een RSP este dezactivat\u0103. \n                V\u0103 rug\u0103m introduce\u021bi manual datele.\n            &lt;/FodAlert&gt;\n        }\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                &lt;FodInput @bind-Value=\"idnp\" \n                          Label=\"IDNP\"\n                          EndAdornment=\"@GetIdnpAdornment()\" /&gt;\n            &lt;/FodGrid&gt;\n\n            @if (personData != null)\n            {\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                    &lt;FodTextField Label=\"Prenume\" \n                                  Value=\"@GetDisplayName(personData.FirstName)\"\n                                  ReadOnly=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                    &lt;FodTextField Label=\"Nume\" \n                                  Value=\"@GetDisplayName(personData.LastName)\"\n                                  ReadOnly=\"true\" /&gt;\n                &lt;/FodGrid&gt;\n\n                @if (PersonOptions.Value.BlurName)\n                {\n                    &lt;FodGrid Item=\"true\" xs=\"12\"&gt;\n                        &lt;FodAlert Severity=\"FodSeverity.Info\" Variant=\"FodVariant.Outlined\"&gt;\n                            &lt;FodIcon&gt;@FodIcons.Material.Filled.Security&lt;/FodIcon&gt;\n                            Datele personale sunt par\u021bial ascunse pentru confiden\u021bialitate\n                        &lt;/FodAlert&gt;\n                    &lt;/FodGrid&gt;\n                }\n            }\n        &lt;/FodGrid&gt;\n\n        &lt;FodButton OnClick=\"SearchPerson\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"\n                   Disabled=\"@(!IsValidIdnp(idnp) || isSearching)\"&gt;\n            @if (isSearching)\n            {\n                &lt;FodLoadingButton /&gt;\n            }\n            else\n            {\n                &lt;text&gt;Verific\u0103 \u00een RSP&lt;/text&gt;\n            }\n        &lt;/FodButton&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string idnp;\n    private PersonData personData;\n    private bool isSearching;\n\n    private string GetDisplayName(string name)\n    {\n        if (string.IsNullOrEmpty(name))\n            return \"-\";\n\n        if (PersonOptions.Value.BlurName)\n        {\n            // Prima liter\u0103 + asteriscuri\n            return name[0] + new string('*', name.Length - 1);\n        }\n\n        if (!PersonOptions.Value.AllowFullName)\n        {\n            // Doar ini\u021biala\n            return name[0] + \".\";\n        }\n\n        return name;\n    }\n\n    private RenderFragment GetIdnpAdornment()\n    {\n        return @&lt;text&gt;\n            @if (personData != null)\n            {\n                &lt;FodIcon Color=\"FodColor.Success\"&gt;\n                    @FodIcons.Material.Filled.CheckCircle\n                &lt;/FodIcon&gt;\n            }\n        &lt;/text&gt;;\n    }\n\n    private bool IsValidIdnp(string value)\n    {\n        return !string.IsNullOrWhiteSpace(value) &amp;&amp; \n               value.Length == 13 &amp;&amp; \n               value.All(char.IsDigit);\n    }\n\n    private async Task SearchPerson()\n    {\n        if (!PersonOptions.Value.AllowGetData)\n        {\n            NotificationService.Warning(\"Verificarea \u00een RSP este dezactivat\u0103\");\n            return;\n        }\n\n        isSearching = true;\n\n        try\n        {\n            personData = await PersonService.GetPersonData(new PersonDataRequest\n            {\n                Idnp = idnp\n            });\n\n            if (personData != null)\n            {\n                NotificationService.Success(\"Persoan\u0103 g\u0103sit\u0103 \u00een RSP\");\n            }\n            else\n            {\n                NotificationService.Warning(\"Persoan\u0103 neg\u0103sit\u0103 \u00een RSP\");\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare: {ex.Message}\");\n        }\n        finally\n        {\n            isSearching = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#7-integrare-cu-audit-si-gdpr","title":"7. Integrare cu audit \u0219i GDPR","text":"<pre><code>public class AuditedPersonComponentService : IPersonComponentService\n{\n    private readonly IPersonComponentService _innerService;\n    private readonly IAuditService _auditService;\n    private readonly ICurrentUserContextService _userContext;\n    private readonly IServiceContext _serviceContext;\n\n    public async Task&lt;PersonData&gt; GetPersonData(PersonDataRequest request)\n    {\n        var stopwatch = Stopwatch.StartNew();\n        var userId = await _userContext.GetUserId();\n        var serviceName = _serviceContext.CurrentServiceName;\n\n        // \u00cenregistrare acces pentru GDPR\n        await _auditService.LogDataAccess(new DataAccessLog\n        {\n            UserId = userId,\n            DataType = \"PersonalData\",\n            DataSubject = request.Idnp,\n            Purpose = $\"Verificare identitate pentru {serviceName}\",\n            Timestamp = DateTime.UtcNow,\n            LegalBasis = \"Consim\u021b\u0103m\u00e2nt explicit\",\n            Duration = null\n        });\n\n        try\n        {\n            var result = await _innerService.GetPersonData(request);\n\n            // Audit succes\n            await _auditService.LogAsync(new AuditEntry\n            {\n                Action = \"RSP_LOOKUP_SUCCESS\",\n                UserId = userId,\n                EntityType = \"Person\",\n                EntityId = request.Idnp,\n                Success = true,\n                Duration = stopwatch.ElapsedMilliseconds,\n                Details = result != null ? \"Person found\" : \"Person not found\"\n            });\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            // Audit e\u0219ec\n            await _auditService.LogAsync(new AuditEntry\n            {\n                Action = \"RSP_LOOKUP_FAILED\",\n                UserId = userId,\n                EntityType = \"Person\",\n                EntityId = request.Idnp,\n                Success = false,\n                Duration = stopwatch.ElapsedMilliseconds,\n                ErrorMessage = ex.Message\n            });\n\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#8-cache-si-performanta","title":"8. Cache \u0219i performan\u021b\u0103","text":"<pre><code>public class CachedPersonComponentService : IPersonComponentService\n{\n    private readonly IPersonComponentService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly IOptions&lt;PersonComponentOptions&gt; _options;\n\n    public async Task&lt;PersonData&gt; GetPersonData(PersonDataRequest request)\n    {\n        // Nu folosim cache dac\u0103 datele sunt sensibile\n        if (_options.Value.BlurName || !_options.Value.AllowFullName)\n        {\n            return await _innerService.GetPersonData(request);\n        }\n\n        var cacheKey = $\"person_{request.Idnp}\";\n\n        if (_cache.TryGetValue&lt;PersonData&gt;(cacheKey, out var cached))\n        {\n            return cached;\n        }\n\n        var result = await _innerService.GetPersonData(request);\n\n        if (result != null)\n        {\n            // Cache pentru 5 minute\n            _cache.Set(cacheKey, result, new MemoryCacheEntryOptions\n            {\n                SlidingExpiration = TimeSpan.FromMinutes(5),\n                PostEvictionCallbacks =\n                {\n                    new PostEvictionCallbackRegistration\n                    {\n                        EvictionCallback = (key, value, reason, state) =&gt;\n                        {\n                            // Log cache eviction pentru audit\n                            var logger = state as ILogger;\n                            logger?.LogDebug(\"Person data evicted from cache: {Key}, Reason: {Reason}\", \n                                key, reason);\n                        },\n                        State = _logger\n                    }\n                }\n            });\n        }\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#9-validare-idnp","title":"9. Validare IDNP","text":"<pre><code>public static class IdnpValidator\n{\n    public static bool IsValid(string idnp)\n    {\n        if (string.IsNullOrWhiteSpace(idnp) || idnp.Length != 13)\n            return false;\n\n        if (!idnp.All(char.IsDigit))\n            return false;\n\n        // Validare structur\u0103 IDNP Moldova\n        // Format: GAAAALLZZZZC\n        // G - gen (1/2)\n        // AAAA - anul na\u0219terii\n        // LL - luna\n        // ZZ - ziua\n        // ZZZ - cod unic\n        // C - cifr\u0103 de control\n\n        var gender = int.Parse(idnp[0].ToString());\n        if (gender != 1 &amp;&amp; gender != 2)\n            return false;\n\n        var year = int.Parse(idnp.Substring(1, 4));\n        var month = int.Parse(idnp.Substring(5, 2));\n        var day = int.Parse(idnp.Substring(7, 2));\n\n        // Validare dat\u0103\n        try\n        {\n            var date = new DateTime(year, month, day);\n            if (date &gt; DateTime.Now)\n                return false;\n        }\n        catch\n        {\n            return false;\n        }\n\n        // Validare cifr\u0103 de control\n        return ValidateChecksum(idnp);\n    }\n\n    private static bool ValidateChecksum(string idnp)\n    {\n        int[] weights = { 7, 3, 1, 7, 3, 1, 7, 3, 1, 7, 3, 1 };\n        int sum = 0;\n\n        for (int i = 0; i &lt; 12; i++)\n        {\n            sum += (idnp[i] - '0') * weights[i];\n        }\n\n        int checkDigit = sum % 10;\n        return checkDigit == (idnp[12] - '0');\n    }\n\n    public static PersonInfo ExtractInfo(string idnp)\n    {\n        if (!IsValid(idnp))\n            return null;\n\n        return new PersonInfo\n        {\n            Gender = idnp[0] == '1' ? Gender.Male : Gender.Female,\n            BirthDate = new DateTime(\n                int.Parse(idnp.Substring(1, 4)),\n                int.Parse(idnp.Substring(5, 2)),\n                int.Parse(idnp.Substring(7, 2))\n            ),\n            Age = CalculateAge(new DateTime(\n                int.Parse(idnp.Substring(1, 4)),\n                int.Parse(idnp.Substring(5, 2)),\n                int.Parse(idnp.Substring(7, 2))\n            ))\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#10-rate-limiting-si-securitate","title":"10. Rate limiting \u0219i securitate","text":"<pre><code>public class RateLimitedPersonComponentService : IPersonComponentService\n{\n    private readonly IPersonComponentService _innerService;\n    private readonly IRateLimiter _rateLimiter;\n    private readonly ILogger&lt;RateLimitedPersonComponentService&gt; _logger;\n\n    public async Task&lt;PersonData&gt; GetPersonData(PersonDataRequest request)\n    {\n        var clientId = GetClientIdentifier();\n\n        // Limit\u0103: 10 cereri per minut per utilizator\n        var allowed = await _rateLimiter.AllowAsync(\n            $\"person_lookup_{clientId}\", \n            limit: 10, \n            window: TimeSpan.FromMinutes(1));\n\n        if (!allowed)\n        {\n            _logger.LogWarning(\n                \"Rate limit exceeded for client {ClientId} looking up IDNP {Idnp}\", \n                clientId, \n                request.Idnp.Substring(0, 4) + \"***\");\n\n            throw new RateLimitExceededException(\n                \"Prea multe cereri. V\u0103 rug\u0103m \u00eencerca\u021bi din nou peste un minut.\");\n        }\n\n        // Verificare blacklist IDNP (pentru protec\u021bie date VIP)\n        if (await IsBlacklistedIdnp(request.Idnp))\n        {\n            _logger.LogWarning(\n                \"Attempted access to blacklisted IDNP by {ClientId}\", \n                clientId);\n\n            return null; // Return\u0103m null ca \u0219i cum nu exist\u0103\n        }\n\n        return await _innerService.GetPersonData(request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class PersonComponentServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IPersonComponentService _service;\n\n    [TestMethod]\n    public async Task GetPersonData_ValidIdnp_ReturnsPersonData()\n    {\n        // Arrange\n        var request = new PersonDataRequest { Idnp = \"2001234567890\" };\n        var expectedResponse = new PersonData\n        {\n            Idnp = \"2001234567890\",\n            FirstName = \"Ion\",\n            LastName = \"Popescu\"\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.GetPersonData(request);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(\"Ion\", result.FirstName);\n        Assert.AreEqual(\"Popescu\", result.LastName);\n    }\n\n    [TestMethod]\n    public async Task GetPersonData_InvalidIdnp_ReturnsNull()\n    {\n        // Arrange\n        var request = new PersonDataRequest { Idnp = \"0000000000000\" };\n\n        SetupHttpResponse&lt;PersonData&gt;(null);\n\n        // Act\n        var result = await _service.GetPersonData(request);\n\n        // Assert\n        Assert.IsNull(result);\n    }\n\n    [TestMethod]\n    public void IdnpValidator_ValidIdnp_ReturnsTrue()\n    {\n        // Arrange\n        var validIdnp = \"2001234567890\"; // Placeholder\n\n        // Act\n        var isValid = IdnpValidator.IsValid(validIdnp);\n\n        // Assert\n        Assert.IsTrue(isValid);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PersonComponentService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Minimizare date - Prelua\u021bi doar datele strict necesare</li> <li>Audit complet - \u00cenregistra\u021bi toate acces\u0103rile RSP</li> <li>Consim\u021b\u0103m\u00e2nt explicit - Ob\u021bine\u021bi acordul pentru verificare RSP</li> <li>Protec\u021bie date - Aplica\u021bi blur/mascare pentru date sensibile</li> <li>Rate limiting - Preveni\u021bi abuzuri prin limitare acces</li> <li>Cache responsabil - Cache doar cu m\u0103suri de securitate</li> <li>Validare IDNP - Verifica\u021bi format \u00eenainte de cerere RSP</li> </ol>"},{"location":"fod/servicii/PersonComponentService/#13-concluzie","title":"13. Concluzie","text":"<p><code>PersonComponentService</code> ofer\u0103 acces securizat \u0219i controlat la datele personale din RSP, cu m\u0103suri stricte de confiden\u021bialitate \u0219i conformitate GDPR. Serviciul faciliteaz\u0103 validarea identit\u0103\u021bii \u0219i auto-popularea formularelor, \u00eembun\u0103t\u0103\u021bind experien\u021ba utilizatorilor \u00een timp ce protejeaz\u0103 datele personale sensibile.</p>"},{"location":"fod/servicii/PrintingService/","title":"PrintingService","text":""},{"location":"fod/servicii/PrintingService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>PrintingService</code> este serviciul responsabil pentru gestionarea func\u021bionalit\u0103\u021bii de printare \u00een aplica\u021bii Blazor. Utilizeaz\u0103 biblioteca Print.js pentru a oferi suport de printare pentru diverse tipuri de con\u021binut: PDF, HTML, imagini \u0219i JSON. Serviciul ofer\u0103 o interfa\u021b\u0103 simpl\u0103 pentru printarea documentelor cu op\u021biuni de personalizare.</p>"},{"location":"fod/servicii/PrintingService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/PrintingService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IPrintingService, PrintingService&gt;();\n</code></pre>"},{"location":"fod/servicii/PrintingService/#import-javascript-module","title":"Import JavaScript Module","text":"<p>Serviciul import\u0103 automat modulul JavaScript necesar la prima utilizare: <pre><code>// Modulul print.js este inclus \u00een FOD.Components\n// Calea: _content/FOD.Components/Scripts/print.js\n</code></pre></p>"},{"location":"fod/servicii/PrintingService/#interfata-iprintingservice","title":"Interfa\u021ba IPrintingService","text":"<pre><code>public interface IPrintingService\n{\n    Task Print(PrintOptions options);\n    Task Print(string printable, PrintType printType = PrintType.Pdf);\n    Task Print(string printable, bool showModal, PrintType printType = PrintType.Pdf);\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#clase-asociate","title":"Clase asociate","text":""},{"location":"fod/servicii/PrintingService/#printoptions","title":"PrintOptions","text":"<pre><code>public class PrintOptions\n{\n    public PrintOptions() { }\n\n    public PrintOptions(string printable)\n    {\n        Printable = printable;\n    }\n\n    public PrintOptions(string printable, string modalMessage, PrintType printType = PrintType.Pdf)\n    {\n        Printable = printable;\n        ModalMessage = modalMessage;\n        ShowModal = true;\n        Type = printType;\n    }\n\n    public string Printable { get; init; }\n    public PrintType Type { get; init; }\n    public bool ShowModal { get; init; }\n    public string ModalMessage { get; init; } = \"Retrieving Document...\";\n    public bool Base64 { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#printtype-enum","title":"PrintType Enum","text":"<pre><code>public enum PrintType\n{\n    Pdf,\n    Html,\n    Image,\n    Json\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/PrintingService/#printprintoptions-options","title":"Print(PrintOptions options)","text":"<p>Printeaz\u0103 con\u021binut folosind op\u021biuni detaliate.</p> <p>Parametri: - <code>options: PrintOptions</code> - Obiect cu toate op\u021biunile de printare</p> <p>Returneaz\u0103: <code>Task</code></p>"},{"location":"fod/servicii/PrintingService/#printstring-printable-printtype-printtype","title":"Print(string printable, PrintType printType)","text":"<p>Printeaz\u0103 con\u021binut cu tip specificat.</p> <p>Parametri: - <code>printable: string</code> - URL, Base64 sau ID element HTML - <code>printType: PrintType</code> - Tipul con\u021binutului (default: Pdf)</p> <p>Returneaz\u0103: <code>Task</code></p>"},{"location":"fod/servicii/PrintingService/#printstring-printable-bool-showmodal-printtype-printtype","title":"Print(string printable, bool showModal, PrintType printType)","text":"<p>Printeaz\u0103 con\u021binut cu op\u021biune modal.</p> <p>Parametri: - <code>printable: string</code> - URL, Base64 sau ID element HTML - <code>showModal: bool</code> - Afi\u0219eaz\u0103 modal de \u00eenc\u0103rcare - <code>printType: PrintType</code> - Tipul con\u021binutului (default: Pdf)</p> <p>Returneaz\u0103: <code>Task</code></p>"},{"location":"fod/servicii/PrintingService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/PrintingService/#printare-pdf-simplu","title":"Printare PDF simplu","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;FodButton @onclick=\"PrintPdf\"&gt;\n    &lt;FodIcon Icon=\"print\" /&gt; Printeaz\u0103 Document\n&lt;/FodButton&gt;\n\n@code {\n    private async Task PrintPdf()\n    {\n        await PrintingService.Print(\"/documents/invoice.pdf\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#printare-pdf-cu-base64","title":"Printare PDF cu Base64","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;FodButton @onclick=\"PrintBase64Pdf\"&gt;\n    Printeaz\u0103 Factura\n&lt;/FodButton&gt;\n\n@code {\n    private string pdfBase64Content = \"JVBERi0xLjQKJcfs...\"; // Base64 string\n\n    private async Task PrintBase64Pdf()\n    {\n        var options = new PrintOptions\n        {\n            Printable = pdfBase64Content,\n            Type = PrintType.Pdf,\n            Base64 = true,\n            ShowModal = true,\n            ModalMessage = \"Se \u00eencarc\u0103 factura...\"\n        };\n\n        await PrintingService.Print(options);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#printare-element-html","title":"Printare element HTML","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;div id=\"printable-content\"&gt;\n    &lt;h2&gt;Raport Lunar&lt;/h2&gt;\n    &lt;table class=\"table\"&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Produs&lt;/th&gt;\n                &lt;th&gt;Cantitate&lt;/th&gt;\n                &lt;th&gt;Pre\u021b&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            @foreach (var item in items)\n            {\n                &lt;tr&gt;\n                    &lt;td&gt;@item.Product&lt;/td&gt;\n                    &lt;td&gt;@item.Quantity&lt;/td&gt;\n                    &lt;td&gt;@item.Price.ToString(\"C\")&lt;/td&gt;\n                &lt;/tr&gt;\n            }\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n\n&lt;FodButton @onclick=\"PrintReport\"&gt;\n    &lt;FodIcon Icon=\"print\" /&gt; Printeaz\u0103 Raport\n&lt;/FodButton&gt;\n\n@code {\n    private async Task PrintReport()\n    {\n        await PrintingService.Print(\"printable-content\", PrintType.Html);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#printare-imagini","title":"Printare imagini","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;div class=\"image-gallery\"&gt;\n    @foreach (var image in images)\n    {\n        &lt;img src=\"@image\" alt=\"Gallery image\" /&gt;\n    }\n&lt;/div&gt;\n\n&lt;FodButton @onclick=\"PrintImages\"&gt;\n    Printeaz\u0103 Galerie\n&lt;/FodButton&gt;\n\n@code {\n    private List&lt;string&gt; images = new()\n    {\n        \"/images/photo1.jpg\",\n        \"/images/photo2.jpg\",\n        \"/images/photo3.jpg\"\n    };\n\n    private async Task PrintImages()\n    {\n        // Pentru o singur\u0103 imagine\n        await PrintingService.Print(images[0], PrintType.Image);\n\n        // Pentru mai multe imagini, folosi\u021bi array \u00een PrintOptions\n        var options = new PrintOptions\n        {\n            Printable = string.Join(\",\", images),\n            Type = PrintType.Image,\n            ShowModal = true,\n            ModalMessage = \"Se preg\u0103tesc imaginile pentru printare...\"\n        };\n\n        await PrintingService.Print(options);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#printare-date-json-ca-tabel","title":"Printare date JSON ca tabel","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;FodButton @onclick=\"PrintJsonData\"&gt;\n    Printeaz\u0103 Tabel Date\n&lt;/FodButton&gt;\n\n@code {\n    private List&lt;Employee&gt; employees = new()\n    {\n        new() { Name = \"Ion Popescu\", Position = \"Manager\", Salary = 5000 },\n        new() { Name = \"Maria Ionescu\", Position = \"Developer\", Salary = 4000 },\n        new() { Name = \"Andrei Radu\", Position = \"Designer\", Salary = 3500 }\n    };\n\n    private async Task PrintJsonData()\n    {\n        var jsonData = System.Text.Json.JsonSerializer.Serialize(employees);\n\n        await PrintingService.Print(jsonData, PrintType.Json);\n    }\n\n    private class Employee\n    {\n        public string Name { get; set; }\n        public string Position { get; set; }\n        public decimal Salary { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#component-wrapper-pentru-printare","title":"Component wrapper pentru printare","text":"<pre><code>@inject IPrintingService PrintingService\n\n&lt;div class=\"printable-section\"&gt;\n    &lt;div class=\"no-print\"&gt;\n        &lt;FodButton @onclick=\"Print\" Color=\"FodColor.Primary\"&gt;\n            &lt;FodIcon Icon=\"print\" /&gt; @ButtonText\n        &lt;/FodButton&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"@printId\"&gt;\n        @ChildContent\n    &lt;/div&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public RenderFragment ChildContent { get; set; }\n    [Parameter] public string ButtonText { get; set; } = \"Printeaz\u0103\";\n    [Parameter] public bool ShowModal { get; set; } = true;\n    [Parameter] public string ModalMessage { get; set; } = \"Se preg\u0103te\u0219te documentul...\";\n\n    private string printId = $\"print-{Guid.NewGuid():N}\";\n\n    private async Task Print()\n    {\n        await PrintingService.Print(printId, ShowModal, PrintType.Html);\n    }\n}\n\n&lt;style&gt;\n    @media print {\n        .no-print {\n            display: none !important;\n        }\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"fod/servicii/PrintingService/#service-extins-cu-evenimente","title":"Service extins cu evenimente","text":"<pre><code>public interface IExtendedPrintingService : IPrintingService\n{\n    event EventHandler&lt;PrintEventArgs&gt; BeforePrint;\n    event EventHandler&lt;PrintEventArgs&gt; AfterPrint;\n    Task&lt;bool&gt; PrintWithConfirmation(PrintOptions options);\n}\n\npublic class ExtendedPrintingService : IExtendedPrintingService\n{\n    private readonly IPrintingService _innerService;\n    private readonly IJSRuntime _jsRuntime;\n\n    public event EventHandler&lt;PrintEventArgs&gt; BeforePrint;\n    public event EventHandler&lt;PrintEventArgs&gt; AfterPrint;\n\n    public async Task Print(PrintOptions options)\n    {\n        BeforePrint?.Invoke(this, new PrintEventArgs { Options = options });\n\n        await _innerService.Print(options);\n\n        AfterPrint?.Invoke(this, new PrintEventArgs { Options = options });\n    }\n\n    public async Task&lt;bool&gt; PrintWithConfirmation(PrintOptions options)\n    {\n        var confirmed = await _jsRuntime.InvokeAsync&lt;bool&gt;(\n            \"confirm\", \"Dori\u021bi s\u0103 printa\u021bi documentul?\");\n\n        if (confirmed)\n        {\n            await Print(options);\n        }\n\n        return confirmed;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/PrintingService/#service-cu-error-handling","title":"Service cu error handling","text":"<pre><code>public class SafePrintingService : IPrintingService\n{\n    private readonly IPrintingService _innerService;\n    private readonly ILogger&lt;SafePrintingService&gt; _logger;\n    private readonly INotificationService _notificationService;\n\n    public async Task Print(PrintOptions options)\n    {\n        try\n        {\n            _logger.LogInformation(\"Starting print job: {Type}\", options.Type);\n            await _innerService.Print(options);\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Print failed for {Type}\", options.Type);\n\n            await _notificationService.ShowError(\n                \"Eroare la printare. Verifica\u021bi imprimanta \u0219i \u00eencerca\u021bi din nou.\");\n\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#fallback-pentru-browsere-incompatibile","title":"Fallback pentru browsere incompatibile","text":"<pre><code>@inject IPrintingService PrintingService\n@inject IJSRuntime JSRuntime\n\n&lt;FodButton @onclick=\"PrintWithFallback\"&gt;\n    Printeaz\u0103 Document\n&lt;/FodButton&gt;\n\n@code {\n    private string documentUrl = \"/documents/report.pdf\";\n\n    private async Task PrintWithFallback()\n    {\n        try\n        {\n            await PrintingService.Print(documentUrl);\n        }\n        catch\n        {\n            // Fallback: deschide \u00een tab nou\n            await JSRuntime.InvokeVoidAsync(\"window.open\", documentUrl, \"_blank\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Browser compatibility - Print.js suport\u0103 majoritatea browserelor moderne</li> <li>Module loading - Modulul JS este \u00eenc\u0103rcat lazy la prima utilizare</li> <li>CORS - Pentru PDF-uri externe, serverul trebuie s\u0103 permit\u0103 CORS</li> <li>Base64 size - Aten\u021bie la dimensiunea string-urilor Base64</li> <li>Print preview - Browserul afi\u0219eaz\u0103 propriul preview \u00eenainte de printare</li> </ol>"},{"location":"fod/servicii/PrintingService/#stilizare-pentru-print","title":"Stilizare pentru print","text":"<pre><code>/* Stiluri specifice pentru print */\n@media print {\n    /* Ascunde elemente neprintabile */\n    .no-print {\n        display: none !important;\n    }\n\n    /* For\u021beaz\u0103 culori */\n    * {\n        -webkit-print-color-adjust: exact !important;\n        color-adjust: exact !important;\n        print-color-adjust: exact !important;\n    }\n\n    /* Page breaks */\n    .page-break {\n        page-break-after: always;\n    }\n\n    /* Dimensiuni fixe pentru printare */\n    @page {\n        size: A4;\n        margin: 20mm;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/PrintingService/#bune-practici","title":"Bune practici","text":"<ol> <li>Loading states - Afi\u0219a\u021bi indicator de \u00eenc\u0103rcare pentru fi\u0219iere mari</li> <li>Error handling - Gestiona\u021bi erori de re\u021bea \u0219i browsere incompatibile</li> <li>Print preview - Oferi\u021bi preview \u00eenainte de printare pentru documente complexe</li> <li>Memory management - Elibera\u021bi resursele pentru Base64 mari</li> <li>User feedback - Informa\u021bi utilizatorul despre starea print\u0103rii</li> <li>Accessibility - Asigura\u021bi c\u0103 butoanele de printare sunt accesibile</li> <li>Print styles - Defini\u021bi stiluri CSS specifice pentru print</li> </ol>"},{"location":"fod/servicii/PrintingService/#concluzie","title":"Concluzie","text":"<p>PrintingService ofer\u0103 o solu\u021bie complet\u0103 pentru printarea diverselor tipuri de con\u021binut \u00een aplica\u021bii Blazor. Cu suport pentru PDF, HTML, imagini \u0219i JSON, precum \u0219i op\u021biuni de personalizare, serviciul faciliteaz\u0103 implementarea func\u021bionalit\u0103\u021bii de printare \u00eentr-un mod simplu \u0219i eficient.</p>"},{"location":"fod/servicii/RecaptchaService/","title":"RecaptchaService","text":""},{"location":"fod/servicii/RecaptchaService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>RecaptchaService</code> este serviciul responsabil pentru integrarea \u0219i executarea Google reCAPTCHA \u00een aplica\u021bie. Serviciul gestioneaz\u0103 logica de afi\u0219are a captcha-ului bazat\u0103 pe starea de autentificare a utilizatorului \u0219i configur\u0103rile aplica\u021biei, oferind protec\u021bie \u00eempotriva bot-urilor \u0219i spam-ului.</p>"},{"location":"fod/servicii/RecaptchaService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/RecaptchaService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IRecaptchaService, RecaptchaService&gt;();\n\n// Asigura\u021bi-v\u0103 c\u0103 dependen\u021bele sunt \u00eenregistrate\nbuilder.Services.AddScoped&lt;IConfigurationService, ConfigurationService&gt;();\nbuilder.Services.AddScoped&lt;IUserService, UserService&gt;();\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#configurare-recaptcha","title":"Configurare reCAPTCHA","text":"<pre><code>// \u00cen appsettings.json\n{\n  \"ReCaptcha\": {\n    \"SiteKey\": \"your-site-key-here\",\n    \"SecretKey\": \"your-secret-key-here\",\n    \"ValidateAuthenticated\": false\n  }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#includere-script-google-recaptcha","title":"Includere script Google reCAPTCHA","text":"<pre><code>&lt;!-- \u00cen index.html sau _Host.cshtml --&gt;\n&lt;script src=\"https://www.google.com/recaptcha/api.js?render=explicit\" async defer&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    window.runCaptcha = (siteKey) =&gt; {\n        return new Promise((resolve, reject) =&gt; {\n            grecaptcha.ready(() =&gt; {\n                grecaptcha.execute(siteKey, { action: 'submit' })\n                    .then(token =&gt; resolve(token))\n                    .catch(error =&gt; reject(error));\n            });\n        });\n    };\n&lt;/script&gt;\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#interfata-irecaptchaservice","title":"Interfa\u021ba IRecaptchaService","text":"<pre><code>public interface IRecaptchaService\n{\n    Task&lt;string&gt; Execute();\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/RecaptchaService/#execute","title":"Execute()","text":"<p>Execut\u0103 verificarea reCAPTCHA \u0219i returneaz\u0103 token-ul.</p> <p>Parametri: Niciun parametru</p> <p>Returneaz\u0103: <code>Task&lt;string&gt;</code> - Token-ul reCAPTCHA sau string gol dac\u0103 nu este necesar</p> <p>Comportament: - Ob\u021bine configurarea reCAPTCHA prin IConfigurationService - Verific\u0103 dac\u0103 utilizatorul este autentificat - Dac\u0103 utilizatorul nu este autentificat SAU ValidateAuthenticated este true, execut\u0103 captcha - Dac\u0103 utilizatorul este autentificat \u0219i ValidateAuthenticated este false, returneaz\u0103 string gol - Apeleaz\u0103 func\u021bia JavaScript pentru a ob\u021bine token-ul</p>"},{"location":"fod/servicii/RecaptchaService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/RecaptchaService/#in-formular-de-contact","title":"\u00cen formular de contact","text":"<pre><code>@inject IRecaptchaService RecaptchaService\n\n&lt;EditForm Model=\"@contactModel\" OnValidSubmit=\"@SubmitForm\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Nume&lt;/label&gt;\n        &lt;InputText @bind-Value=\"contactModel.Name\" class=\"form-control\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; contactModel.Name)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Email&lt;/label&gt;\n        &lt;InputText @bind-Value=\"contactModel.Email\" class=\"form-control\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; contactModel.Email)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Mesaj&lt;/label&gt;\n        &lt;InputTextArea @bind-Value=\"contactModel.Message\" class=\"form-control\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; contactModel.Message)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" Disabled=\"@isSubmitting\"&gt;\n        @if (isSubmitting)\n        {\n            &lt;FodLoadingCircular Size=\"FodSize.Small\" /&gt;\n        }\n        else\n        {\n            &lt;text&gt;Trimite&lt;/text&gt;\n        }\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private ContactModel contactModel = new();\n    private bool isSubmitting;\n\n    private async Task SubmitForm()\n    {\n        isSubmitting = true;\n\n        try\n        {\n            // Execut\u0103 reCAPTCHA\n            var captchaToken = await RecaptchaService.Execute();\n\n            // Trimite formularul cu token-ul\n            await SendContactForm(contactModel, captchaToken);\n\n            // Success\n            ShowSuccess(\"Mesaj trimis cu succes!\");\n            contactModel = new();\n        }\n        catch (Exception ex)\n        {\n            ShowError(\"Eroare la trimiterea mesajului\");\n        }\n        finally\n        {\n            isSubmitting = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#in-formular-de-inregistrare","title":"\u00cen formular de \u00eenregistrare","text":"<pre><code>@inject IRecaptchaService RecaptchaService\n@inject IAuthService AuthService\n\n&lt;div class=\"registration-form\"&gt;\n    &lt;h3&gt;\u00cenregistrare cont nou&lt;/h3&gt;\n\n    &lt;EditForm Model=\"@registrationModel\" OnValidSubmit=\"@Register\"&gt;\n        &lt;DataAnnotationsValidator /&gt;\n        &lt;ValidationSummary /&gt;\n\n        &lt;FodInput @bind-Value=\"registrationModel.Email\" \n                  Label=\"Email\" \n                  Type=\"email\" \n                  Required=\"true\" /&gt;\n\n        &lt;FodInput @bind-Value=\"registrationModel.Password\" \n                  Label=\"Parol\u0103\" \n                  Type=\"password\" \n                  Required=\"true\" /&gt;\n\n        &lt;FodInput @bind-Value=\"registrationModel.ConfirmPassword\" \n                  Label=\"Confirm\u0103 parola\" \n                  Type=\"password\" \n                  Required=\"true\" /&gt;\n\n        &lt;FodButton Type=\"submit\" \n                   Color=\"FodColor.Primary\" \n                   FullWidth=\"true\"\n                   Disabled=\"@isRegistering\"&gt;\n            \u00cenregistreaz\u0103-te\n        &lt;/FodButton&gt;\n    &lt;/EditForm&gt;\n&lt;/div&gt;\n\n@code {\n    private RegistrationModel registrationModel = new();\n    private bool isRegistering;\n\n    private async Task Register()\n    {\n        isRegistering = true;\n\n        try\n        {\n            // Ob\u021bine token reCAPTCHA\n            var recaptchaToken = await RecaptchaService.Execute();\n\n            if (string.IsNullOrEmpty(recaptchaToken))\n            {\n                // Pentru utilizatori autentifica\u021bi c\u00e2nd ValidateAuthenticated = false\n                // Continu\u0103 f\u0103r\u0103 verificare\n            }\n\n            // \u00cenregistrare cu token\n            var result = await AuthService.Register(registrationModel, recaptchaToken);\n\n            if (result.Succeeded)\n            {\n                NavigationManager.NavigateTo(\"/login\");\n            }\n        }\n        catch (JSException)\n        {\n            ShowError(\"Eroare la verificarea reCAPTCHA. Re\u00eenc\u0103rca\u021bi pagina.\");\n        }\n        finally\n        {\n            isRegistering = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#cu-componenta-fodrecaptcha","title":"Cu componenta FodRecaptcha","text":"<pre><code>&lt;FodRecaptcha @ref=\"recaptchaComponent\" /&gt;\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;!-- Form fields --&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Trimite&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FodRecaptcha recaptchaComponent;\n\n    private async Task HandleSubmit()\n    {\n        // FodRecaptcha folose\u0219te intern RecaptchaService\n        var token = await recaptchaComponent.GetTokenAsync();\n\n        if (!string.IsNullOrEmpty(token))\n        {\n            // Procesare cu token valid\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#integrare-cu-backend","title":"Integrare cu backend","text":""},{"location":"fod/servicii/RecaptchaService/#validare-token-pe-server","title":"Validare token pe server","text":"<pre><code>[HttpPost]\npublic async Task&lt;IActionResult&gt; SubmitForm([FromBody] FormModel model)\n{\n    if (!string.IsNullOrEmpty(model.RecaptchaToken))\n    {\n        var isValid = await ValidateRecaptcha(model.RecaptchaToken);\n        if (!isValid)\n        {\n            return BadRequest(\"Verificare reCAPTCHA e\u0219uat\u0103\");\n        }\n    }\n\n    // Procesare formular\n    return Ok();\n}\n\nprivate async Task&lt;bool&gt; ValidateRecaptcha(string token)\n{\n    var secretKey = Configuration[\"ReCaptcha:SecretKey\"];\n    var client = new HttpClient();\n\n    var response = await client.PostAsync(\n        $\"https://www.google.com/recaptcha/api/siteverify?secret={secretKey}&amp;response={token}\",\n        null);\n\n    var json = await response.Content.ReadAsStringAsync();\n    dynamic result = JsonSerializer.Deserialize&lt;dynamic&gt;(json);\n\n    return result.success == true &amp;&amp; result.score &gt; 0.5;\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/RecaptchaService/#service-cu-gestionare-erori","title":"Service cu gestionare erori","text":"<pre><code>public class SafeRecaptchaService : IRecaptchaService\n{\n    private readonly RecaptchaService _innerService;\n    private readonly ILogger&lt;SafeRecaptchaService&gt; _logger;\n\n    public async Task&lt;string&gt; Execute()\n    {\n        try\n        {\n            return await _innerService.Execute();\n        }\n        catch (JSException jsEx)\n        {\n            _logger.LogError(jsEx, \"Eroare JavaScript la executarea reCAPTCHA\");\n            throw new RecaptchaException(\"reCAPTCHA nu este disponibil\", jsEx);\n        }\n        catch (TaskCanceledException)\n        {\n            _logger.LogWarning(\"Timeout la executarea reCAPTCHA\");\n            return string.Empty; // Permite continuarea f\u0103r\u0103 captcha\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#fallback-pentru-erori","title":"Fallback pentru erori","text":"<pre><code>@code {\n    private async Task&lt;string&gt; GetRecaptchaTokenSafe()\n    {\n        try\n        {\n            return await RecaptchaService.Execute();\n        }\n        catch (Exception ex)\n        {\n            Logger.LogError(ex, \"Eroare reCAPTCHA\");\n\n            // Afi\u0219eaz\u0103 captcha alternativ sau permite continuarea\n            var allowWithoutCaptcha = await ConfirmAsync(\n                \"Verificarea reCAPTCHA a e\u0219uat. Continua\u021bi f\u0103r\u0103 verificare?\");\n\n            return allowWithoutCaptcha ? \"bypass\" : throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Conditional execution - Execut\u0103 doar pentru utilizatori neautentifica\u021bi</li> <li>Configuration driven - Comportament controlat prin configurare</li> <li>JS dependency - Necesit\u0103 func\u021bia JavaScript <code>runCaptcha</code></li> <li>Async operation - Toate opera\u021biile sunt asincrone</li> <li>Token expiration - Token-urile expir\u0103 dup\u0103 2 minute</li> </ol>"},{"location":"fod/servicii/RecaptchaService/#configurari-avansate","title":"Configur\u0103ri avansate","text":""},{"location":"fod/servicii/RecaptchaService/#pentru-diferite-actiuni","title":"Pentru diferite ac\u021biuni","text":"<pre><code>window.runCaptcha = (siteKey, action = 'submit') =&gt; {\n    return new Promise((resolve, reject) =&gt; {\n        grecaptcha.ready(() =&gt; {\n            grecaptcha.execute(siteKey, { action: action })\n                .then(token =&gt; resolve(token))\n                .catch(error =&gt; reject(error));\n        });\n    });\n};\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#service-extins","title":"Service extins","text":"<pre><code>public interface IExtendedRecaptchaService : IRecaptchaService\n{\n    Task&lt;string&gt; Execute(string action);\n    Task&lt;bool&gt; ValidateScore(string token, double minScore = 0.5);\n}\n</code></pre>"},{"location":"fod/servicii/RecaptchaService/#bune-practici","title":"Bune practici","text":"<ol> <li>Lazy loading - \u00cenc\u0103rca\u021bi scriptul reCAPTCHA doar c\u00e2nd este necesar</li> <li>Error handling - Gestiona\u021bi cazurile c\u00e2nd reCAPTCHA nu este disponibil</li> <li>Timeout handling - Seta\u021bi timeout pentru opera\u021biuni JS</li> <li>Score validation - Verifica\u021bi scorul pe backend pentru reCAPTCHA v3</li> <li>Fallback mechanism - Oferi\u021bi alternative c\u00e2nd captcha e\u0219ueaz\u0103</li> <li>Privacy compliance - Informa\u021bi utilizatorii despre folosirea reCAPTCHA</li> </ol>"},{"location":"fod/servicii/RecaptchaService/#concluzie","title":"Concluzie","text":"<p>RecaptchaService ofer\u0103 o integrare simpl\u0103 \u0219i flexibil\u0103 cu Google reCAPTCHA, protej\u00e2nd aplica\u021bia \u00eempotriva spam-ului \u0219i automatiz\u0103rilor mali\u021bioase. Cu suport pentru excluderea utilizatorilor autentifica\u021bi \u0219i configurare flexibil\u0103, serviciul se adapteaz\u0103 u\u0219or la diverse scenarii de utilizare.</p>"},{"location":"fod/servicii/RequestStatusService/","title":"RequestStatusService","text":""},{"location":"fod/servicii/RequestStatusService/#documentatie-pentru-serviciul-requeststatusservice","title":"Documenta\u021bie pentru serviciul RequestStatusService","text":""},{"location":"fod/servicii/RequestStatusService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>RequestStatusService</code> este un serviciu pentru verificarea \u0219i c\u0103utarea statusului cererilor depuse \u00een sistemul FOD. Permite cet\u0103\u021benilor \u0219i func\u021bionarilor s\u0103 verifice starea cererilor folosind diferite criterii de c\u0103utare.</p> <p>Caracteristici principale: - C\u0103utare cereri dup\u0103 multiple criterii - Returnare list\u0103 de rezultate cu detalii complete - Comunicare HTTP cu API-ul de verificare status - Suport pentru c\u0103utare batch (mai multe cereri simultan) - Integrare cu componenta FodRequestStatus</p>"},{"location":"fod/servicii/RequestStatusService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;IRequestStatusService, RequestStatusService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n\n// Pentru server-side implementation\nbuilder.Services.AddScoped&lt;IRequestStatusService, ServerRequestStatusService&gt;();\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#3-interfata-irequeststatusservice","title":"3. Interfa\u021ba IRequestStatusService","text":"<pre><code>public interface IRequestStatusService\n{\n    Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(RequestStatusRequestModel model);\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Search</code> <code>RequestStatusRequestModel model</code> <code>Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt;</code> Caut\u0103 cereri dup\u0103 criteriile specificate"},{"location":"fod/servicii/RequestStatusService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/RequestStatusService/#requeststatusrequestmodel-parametri-cautare","title":"RequestStatusRequestModel (parametri c\u0103utare)","text":"<pre><code>public class RequestStatusRequestModel\n{\n    public string RequestNumber { get; set; }\n    public string IDNP { get; set; }\n    public string Email { get; set; }\n    public string Phone { get; set; }\n    public DateTime? FromDate { get; set; }\n    public DateTime? ToDate { get; set; }\n    public string ServiceCode { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#requeststatusresponsemodel-rezultat","title":"RequestStatusResponseModel (rezultat)","text":"<pre><code>public class RequestStatusResponseModel\n{\n    public string RequestNumber { get; set; }\n    public string ServiceName { get; set; }\n    public string Status { get; set; }\n    public string StatusDescription { get; set; }\n    public DateTime SubmissionDate { get; set; }\n    public DateTime? CompletionDate { get; set; }\n    public string ApplicantName { get; set; }\n    public decimal? Cost { get; set; }\n    public bool IsPaid { get; set; }\n    public List&lt;string&gt; Documents { get; set; }\n    public string DeliveryMethod { get; set; }\n    public string ProcessingOffice { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/RequestStatusService/#verificare-simpla-status","title":"Verificare simpl\u0103 status","text":"<pre><code>@inject IRequestStatusService RequestStatusService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Verificare status cerere\n        &lt;/FodText&gt;\n\n        &lt;FodTextField @bind-Value=\"searchModel.RequestNumber\" \n                      Label=\"Num\u0103r cerere\"\n                      Placeholder=\"Ex: REQ-2024-001234\" /&gt;\n\n        &lt;FodTextField @bind-Value=\"searchModel.IDNP\" \n                      Label=\"IDNP solicitant\"\n                      Mask=\"9999999999999\" /&gt;\n\n        &lt;FodButton OnClick=\"SearchRequests\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"&gt;\n            Verific\u0103 status\n        &lt;/FodButton&gt;\n\n        @if (isSearching)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" Class=\"mt-3\" /&gt;\n        }\n\n        @if (searchResults?.Any() == true)\n        {\n            &lt;div class=\"mt-4\"&gt;\n                @foreach (var result in searchResults)\n                {\n                    &lt;FodRequestStatusResponse Status=\"@result\" /&gt;\n                }\n            &lt;/div&gt;\n        }\n        else if (hasSearched &amp;&amp; !isSearching)\n        {\n            &lt;FodAlert Severity=\"Severity.Info\" Class=\"mt-3\"&gt;\n                Nu au fost g\u0103site cereri pentru criteriile specificate\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private RequestStatusRequestModel searchModel = new();\n    private IEnumerable&lt;RequestStatusResponseModel&gt; searchResults;\n    private bool isSearching = false;\n    private bool hasSearched = false;\n\n    private async Task SearchRequests()\n    {\n        isSearching = true;\n        hasSearched = true;\n\n        try\n        {\n            searchResults = await RequestStatusService.Search(searchModel);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.ShowError(\"Eroare la c\u0103utarea cererilor\");\n        }\n        finally\n        {\n            isSearching = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#pagina-dedicata-verificare-status","title":"Pagin\u0103 dedicat\u0103 verificare status","text":"<pre><code>@page \"/verificare-status\"\n@inject IRequestStatusService StatusService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Verificare status cereri\n    &lt;/FodText&gt;\n\n    &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n            &lt;FodCard&gt;\n                &lt;FodCardContent&gt;\n                    &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                        Criterii de c\u0103utare\n                    &lt;/FodText&gt;\n\n                    &lt;FodTextField @bind-Value=\"criteria.RequestNumber\" \n                                  Label=\"Num\u0103r cerere\"\n                                  FullWidth=\"true\"\n                                  Class=\"mb-3\" /&gt;\n\n                    &lt;FodTextField @bind-Value=\"criteria.IDNP\" \n                                  Label=\"IDNP\"\n                                  FullWidth=\"true\"\n                                  Class=\"mb-3\" /&gt;\n\n                    &lt;FodTextField @bind-Value=\"criteria.Email\" \n                                  Label=\"Email\"\n                                  Type=\"email\"\n                                  FullWidth=\"true\"\n                                  Class=\"mb-3\" /&gt;\n\n                    &lt;FodDatePicker @bind-Date=\"criteria.FromDate\" \n                                   Label=\"De la data\"\n                                   FullWidth=\"true\"\n                                   Class=\"mb-3\" /&gt;\n\n                    &lt;FodDatePicker @bind-Date=\"criteria.ToDate\" \n                                   Label=\"P\u00e2n\u0103 la data\"\n                                   FullWidth=\"true\"\n                                   Class=\"mb-3\" /&gt;\n\n                    &lt;FodButton OnClick=\"Search\" \n                               FullWidth=\"true\"\n                               Color=\"FodColor.Primary\"\n                               Disabled=\"@searching\"&gt;\n                        @if (searching)\n                        {\n                            &lt;FodLoadingCircular Size=\"FodSize.Small\" Class=\"me-2\" /&gt;\n                        }\n                        Caut\u0103\n                    &lt;/FodButton&gt;\n                &lt;/FodCardContent&gt;\n            &lt;/FodCard&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n            @if (results == null &amp;&amp; !searching)\n            {\n                &lt;FodAlert Severity=\"Severity.Info\"&gt;\n                    Introduce\u021bi criteriile de c\u0103utare \u0219i ap\u0103sa\u021bi \"Caut\u0103\"\n                &lt;/FodAlert&gt;\n            }\n            else if (searching)\n            {\n                &lt;FodCard&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;FodSkeleton Type=\"SkeletonType.Text\" /&gt;\n                        &lt;FodSkeleton Type=\"SkeletonType.Text\" /&gt;\n                        &lt;FodSkeleton Type=\"SkeletonType.Rectangle\" Height=\"100\" /&gt;\n                    &lt;/FodCardContent&gt;\n                &lt;/FodCard&gt;\n            }\n            else if (!results.Any())\n            {\n                &lt;FodAlert Severity=\"Severity.Warning\"&gt;\n                    Nu au fost g\u0103site cereri pentru criteriile specificate\n                &lt;/FodAlert&gt;\n            }\n            else\n            {\n                &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                    Rezultate g\u0103site: @results.Count()\n                &lt;/FodText&gt;\n\n                @foreach (var request in results)\n                {\n                    &lt;FodCard Class=\"mb-3\"&gt;\n                        &lt;FodCardContent&gt;\n                            &lt;StatusCard Request=\"@request\" /&gt;\n                        &lt;/FodCardContent&gt;\n                        &lt;FodCardActions&gt;\n                            &lt;FodButton OnClick=\"@(() =&gt; ViewDetails(request))\"&gt;\n                                Vezi detalii\n                            &lt;/FodButton&gt;\n                            @if (request.Documents?.Any() == true)\n                            {\n                                &lt;FodButton OnClick=\"@(() =&gt; DownloadDocuments(request))\"&gt;\n                                    Descarc\u0103 documente\n                                &lt;/FodButton&gt;\n                            }\n                        &lt;/FodCardActions&gt;\n                    &lt;/FodCard&gt;\n                }\n            }\n        &lt;/FodGrid&gt;\n    &lt;/FodGrid&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private RequestStatusRequestModel criteria = new();\n    private IEnumerable&lt;RequestStatusResponseModel&gt; results;\n    private bool searching = false;\n\n    private async Task Search()\n    {\n        searching = true;\n        try\n        {\n            results = await StatusService.Search(criteria);\n        }\n        finally\n        {\n            searching = false;\n        }\n    }\n\n    private void ViewDetails(RequestStatusResponseModel request)\n    {\n        NavigationManager.NavigateTo($\"/cerere/{request.RequestNumber}\");\n    }\n\n    private async Task DownloadDocuments(RequestStatusResponseModel request)\n    {\n        // Logic\u0103 download documente\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#widget-pentru-dashboard","title":"Widget pentru dashboard","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Cererile mele recente\n        &lt;/FodText&gt;\n\n        @if (myRequests == null)\n        {\n            &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n        }\n        else if (!myRequests.Any())\n        {\n            &lt;FodText Typo=\"Typo.body2\" Color=\"FodColor.Secondary\"&gt;\n                Nu ave\u021bi cereri depuse\n            &lt;/FodText&gt;\n        }\n        else\n        {\n            &lt;FodList Dense=\"true\"&gt;\n                @foreach (var req in myRequests.Take(5))\n                {\n                    &lt;FodListItem&gt;\n                        &lt;div class=\"d-flex justify-content-between align-items-center w-100\"&gt;\n                            &lt;div&gt;\n                                &lt;FodText Typo=\"Typo.body2\"&gt;@req.ServiceName&lt;/FodText&gt;\n                                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                                    @req.RequestNumber - @req.SubmissionDate.ToString(\"dd.MM.yyyy\")\n                                &lt;/FodText&gt;\n                            &lt;/div&gt;\n                            &lt;FodChip Size=\"FodSize.Small\" \n                                     Color=\"@GetStatusColor(req.Status)\"&gt;\n                                @req.Status\n                            &lt;/FodChip&gt;\n                        &lt;/div&gt;\n                    &lt;/FodListItem&gt;\n                }\n            &lt;/FodList&gt;\n\n            &lt;FodButton Variant=\"FodVariant.Text\" \n                       OnClick=\"ViewAllRequests\"\n                       Class=\"mt-2\"&gt;\n                Vezi toate cererile\n            &lt;/FodButton&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Inject] private IRequestStatusService StatusService { get; set; }\n    [Inject] private IAuthenticationService AuthService { get; set; }\n\n    private IEnumerable&lt;RequestStatusResponseModel&gt; myRequests;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var user = await AuthService.GetCurrentUserAsync();\n        if (user != null)\n        {\n            var searchModel = new RequestStatusRequestModel \n            { \n                IDNP = user.IDNP,\n                FromDate = DateTime.Now.AddMonths(-3)\n            };\n\n            myRequests = await StatusService.Search(searchModel);\n        }\n    }\n\n    private FodColor GetStatusColor(string status)\n    {\n        return status switch\n        {\n            \"Finalizat\" =&gt; FodColor.Success,\n            \"\u00cen procesare\" =&gt; FodColor.Primary,\n            \"Respins\" =&gt; FodColor.Error,\n            _ =&gt; FodColor.Default\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#tracking-in-timp-real","title":"Tracking \u00een timp real","text":"<pre><code>@implements IDisposable\n@inject IRequestStatusService StatusService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Monitorizare cerere: @RequestNumber\n        &lt;/FodText&gt;\n\n        @if (currentStatus != null)\n        {\n            &lt;FodStepper ActiveStep=\"@GetActiveStep(currentStatus.Status)\"&gt;\n                &lt;FodStep&gt;\n                    &lt;StepLabel&gt;Depus\u0103&lt;/StepLabel&gt;\n                &lt;/FodStep&gt;\n                &lt;FodStep&gt;\n                    &lt;StepLabel&gt;\u00cen verificare&lt;/StepLabel&gt;\n                &lt;/FodStep&gt;\n                &lt;FodStep&gt;\n                    &lt;StepLabel&gt;\u00cen procesare&lt;/StepLabel&gt;\n                &lt;/FodStep&gt;\n                &lt;FodStep&gt;\n                    &lt;StepLabel&gt;Finalizat\u0103&lt;/StepLabel&gt;\n                &lt;/FodStep&gt;\n            &lt;/FodStepper&gt;\n\n            &lt;FodAlert Severity=\"@GetAlertSeverity(currentStatus.Status)\" Class=\"mt-3\"&gt;\n                &lt;FodAlertTitle&gt;@currentStatus.Status&lt;/FodAlertTitle&gt;\n                @currentStatus.StatusDescription\n            &lt;/FodAlert&gt;\n\n            &lt;FodText Typo=\"Typo.caption\" Class=\"mt-2\"&gt;\n                Ultima actualizare: @lastUpdate.ToString(\"HH:mm:ss\")\n            &lt;/FodText&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Parameter] public string RequestNumber { get; set; }\n\n    private RequestStatusResponseModel currentStatus;\n    private Timer refreshTimer;\n    private DateTime lastUpdate;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadStatus();\n\n        // Refresh la fiecare 30 secunde\n        refreshTimer = new Timer(async _ =&gt; await RefreshStatus(), null, \n            TimeSpan.FromSeconds(30), TimeSpan.FromSeconds(30));\n    }\n\n    private async Task LoadStatus()\n    {\n        var searchModel = new RequestStatusRequestModel \n        { \n            RequestNumber = RequestNumber \n        };\n\n        var results = await StatusService.Search(searchModel);\n        currentStatus = results.FirstOrDefault();\n        lastUpdate = DateTime.Now;\n    }\n\n    private async Task RefreshStatus()\n    {\n        await InvokeAsync(async () =&gt;\n        {\n            await LoadStatus();\n            StateHasChanged();\n        });\n    }\n\n    public void Dispose()\n    {\n        refreshTimer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#7-gestionarea-erorilor","title":"7. Gestionarea Erorilor","text":"<pre><code>public class ResilientRequestStatusService : IRequestStatusService\n{\n    private readonly IRequestStatusService _innerService;\n    private readonly ILogger&lt;ResilientRequestStatusService&gt; _logger;\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel model)\n    {\n        try\n        {\n            return await _innerService.Search(model);\n        }\n        catch (HttpRequestException ex)\n        {\n            _logger.LogError(ex, \"Eroare conexiune serviciu status\");\n\n            // Returnare rezultate din cache dac\u0103 exist\u0103\n            if (TryGetFromCache(model, out var cached))\n            {\n                return cached;\n            }\n\n            throw new ServiceUnavailableException(\n                \"Serviciul de verificare status nu este disponibil momentan\");\n        }\n        catch (TaskCanceledException)\n        {\n            throw new TimeoutException(\n                \"Verificarea statusului a durat prea mult\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#8-validare-si-securitate","title":"8. Validare \u0219i Securitate","text":"<pre><code>public class ValidatedRequestStatusService : IRequestStatusService\n{\n    private readonly IRequestStatusService _innerService;\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel model)\n    {\n        // Validare parametri\n        if (string.IsNullOrEmpty(model.RequestNumber) &amp;&amp;\n            string.IsNullOrEmpty(model.IDNP) &amp;&amp;\n            string.IsNullOrEmpty(model.Email))\n        {\n            throw new ValidationException(\n                \"Trebuie specificat cel pu\u021bin un criteriu de c\u0103utare\");\n        }\n\n        // Validare IDNP\n        if (!string.IsNullOrEmpty(model.IDNP) &amp;&amp; \n            !IsValidIDNP(model.IDNP))\n        {\n            throw new ValidationException(\"IDNP invalid\");\n        }\n\n        // Validare interval date\n        if (model.FromDate.HasValue &amp;&amp; model.ToDate.HasValue &amp;&amp;\n            model.FromDate &gt; model.ToDate)\n        {\n            throw new ValidationException(\n                \"Data de \u00eenceput nu poate fi dup\u0103 data de sf\u00e2r\u0219it\");\n        }\n\n        return await _innerService.Search(model);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#9-cache-si-performanta","title":"9. Cache \u0219i Performan\u021b\u0103","text":"<pre><code>public class CachedRequestStatusService : IRequestStatusService\n{\n    private readonly IRequestStatusService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly TimeSpan _cacheExpiration = TimeSpan.FromMinutes(5);\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel model)\n    {\n        var cacheKey = GenerateCacheKey(model);\n\n        if (_cache.TryGetValue&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt;(\n            cacheKey, out var cached))\n        {\n            return cached;\n        }\n\n        var results = await _innerService.Search(model);\n\n        if (results.Any())\n        {\n            _cache.Set(cacheKey, results, _cacheExpiration);\n        }\n\n        return results;\n    }\n\n    private string GenerateCacheKey(RequestStatusRequestModel model)\n    {\n        return $\"RequestStatus_{model.RequestNumber}_{model.IDNP}_{model.Email}\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#10-extensibilitate","title":"10. Extensibilitate","text":"<pre><code>// Serviciu cu notific\u0103ri\npublic class NotifyingRequestStatusService : IRequestStatusService\n{\n    private readonly IRequestStatusService _innerService;\n    private readonly INotificationService _notificationService;\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel model)\n    {\n        var results = await _innerService.Search(model);\n\n        // Notificare pentru cereri finalizate\n        var completed = results.Where(r =&gt; r.Status == \"Finalizat\" &amp;&amp; \n                                          r.CompletionDate?.Date == DateTime.Today);\n\n        foreach (var request in completed)\n        {\n            await _notificationService.NotifyAsync(\n                $\"Cererea {request.RequestNumber} a fost finalizat\u0103!\");\n        }\n\n        return results;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class RequestStatusServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IRequestStatusService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.test.com\")\n        };\n\n        _service = new RequestStatusService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task Search_WithValidNumber_ReturnsResults()\n    {\n        // Arrange\n        var searchModel = new RequestStatusRequestModel\n        {\n            RequestNumber = \"REQ-2024-001\"\n        };\n\n        var expectedResults = new List&lt;RequestStatusResponseModel&gt;\n        {\n            new() \n            { \n                RequestNumber = \"REQ-2024-001\",\n                Status = \"\u00cen procesare\"\n            }\n        };\n\n        SetupHttpResponse(expectedResults);\n\n        // Act\n        var results = await _service.Search(searchModel);\n\n        // Assert\n        Assert.AreEqual(1, results.Count());\n        Assert.AreEqual(\"\u00cen procesare\", results.First().Status);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Validare input - Valida\u021bi toate criteriile de c\u0103utare</li> <li>Limite c\u0103utare - Limita\u021bi rezultatele pentru performan\u021b\u0103</li> <li>Cache inteligent - Cache rezultate frecvente</li> <li>Securitate - Verifica\u021bi permisiuni utilizator</li> <li>Audit - Loga\u021bi toate c\u0103ut\u0103rile</li> <li>Rate limiting - Preveni\u021bi abuzul serviciului</li> </ol>"},{"location":"fod/servicii/RequestStatusService/#13-monitorizare-si-analytics","title":"13. Monitorizare \u0219i Analytics","text":"<pre><code>public class MonitoredRequestStatusService : IRequestStatusService\n{\n    private readonly IRequestStatusService _innerService;\n    private readonly IMetrics _metrics;\n    private readonly ILogger _logger;\n\n    public async Task&lt;IEnumerable&lt;RequestStatusResponseModel&gt;&gt; Search(\n        RequestStatusRequestModel model)\n    {\n        using var activity = Activity.StartActivity(\"RequestStatus.Search\");\n        activity?.SetTag(\"search.criteria\", GetSearchCriteria(model));\n\n        var stopwatch = Stopwatch.StartNew();\n\n        try\n        {\n            var results = await _innerService.Search(model);\n\n            _metrics.Measure.Counter.Increment(\"request_status_search_success\");\n            _metrics.Measure.Histogram.Update(\"request_status_search_results\", \n                results.Count());\n\n            _logger.LogInformation(\n                \"Status search completed in {Duration}ms with {Count} results\",\n                stopwatch.ElapsedMilliseconds, results.Count());\n\n            return results;\n        }\n        catch (Exception ex)\n        {\n            _metrics.Measure.Counter.Increment(\"request_status_search_error\");\n            activity?.SetStatus(ActivityStatusCode.Error, ex.Message);\n            throw;\n        }\n        finally\n        {\n            _metrics.Measure.Timer.Time(\"request_status_search_duration\",\n                stopwatch.ElapsedMilliseconds);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestStatusService/#14-concluzie","title":"14. Concluzie","text":"<p><code>RequestStatusService</code> ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i eficient\u0103 pentru verificarea statusului cererilor \u00een sistemul FOD. Cu suport pentru multiple criterii de c\u0103utare, cache \u0219i extensibilitate, serviciul asigur\u0103 o experien\u021b\u0103 fluid\u0103 pentru cet\u0103\u021beni \u00een monitorizarea cererilor lor.</p>"},{"location":"fod/servicii/RequestorComponentService/","title":"RequestorComponentService","text":""},{"location":"fod/servicii/RequestorComponentService/#documentatie-pentru-serviciul-requestorcomponentservice","title":"Documenta\u021bie pentru serviciul RequestorComponentService","text":""},{"location":"fod/servicii/RequestorComponentService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>RequestorComponentService</code> este un serviciu esen\u021bial pentru gestionarea datelor solicitan\u021bilor \u00een sistemul FOD. Permite ob\u021binerea datelor persoanelor fizice \u0219i juridice din registrele oficiale ale Republicii Moldova prin MConnect, cu suport pentru scenarii de reprezentare \u0219i m\u0103suri stricte de confiden\u021bialitate.</p> <p>Caracteristici principale: - Ob\u021binere date persoane fizice dup\u0103 IDNP - Ob\u021binere date organiza\u021bii dup\u0103 IDNO - Validare identitate solicitant - Suport pentru reprezentare (\u00een numele altcuiva) - Integrare cu MPower pentru autorizare - Op\u021biuni configurabile de confiden\u021bialitate - Audit complet pentru conformitate</p>"},{"location":"fod/servicii/RequestorComponentService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// Pentru client (Blazor WebAssembly)\nbuilder.Services.AddFodComponents(configuration);\n\n// Pentru server cu integrare MConnect\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\nbuilder.Services.AddMConnectIntegration(configuration);\n\n// Configurare op\u021biuni\nbuilder.Services.Configure&lt;RequestorComponentOptions&gt;(options =&gt;\n{\n    options.AllowGetRequestorData = true;\n    options.AllowGetOrganizationData = true;\n    options.AllowFullName = true;\n    options.BlurName = false;\n    options.MConnectReason = \"Verificare date solicitant pentru serviciul {ServiceName}\";\n});\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#3-interfata-irequestorcomponentservice","title":"3. Interfa\u021ba IRequestorComponentService","text":"<pre><code>namespace Fod.Components.Shared.Business.Requestor.Services\n{\n    public interface IRequestorComponentService\n    {\n        Task&lt;RequestorData&gt; GetRequestorData(RequestorDataRequest request);\n        Task&lt;OrganizationData&gt; GetOrganizationData(OrganizationDataRequest request);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>GetRequestorData</code> <code>RequestorDataRequest request</code> <code>Task&lt;RequestorData&gt;</code> Ob\u021bine date persoan\u0103 fizic\u0103 dup\u0103 IDNP <code>GetOrganizationData</code> <code>OrganizationDataRequest request</code> <code>Task&lt;OrganizationData&gt;</code> Ob\u021bine date organiza\u021bie dup\u0103 IDNO"},{"location":"fod/servicii/RequestorComponentService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/RequestorComponentService/#requestordatarequest-requestordata","title":"RequestorDataRequest / RequestorData","text":"<pre><code>public class RequestorDataRequest\n{\n    [Required]\n    [StringLength(13, MinimumLength = 13)]\n    public string Idnp { get; set; }\n}\n\npublic class RequestorData\n{\n    public string Idnp { get; set; }\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#organizationdatarequest-organizationdata","title":"OrganizationDataRequest / OrganizationData","text":"<pre><code>public class OrganizationDataRequest\n{\n    [Required]\n    [StringLength(13, MinimumLength = 13)]\n    public string Idno { get; set; }\n}\n\npublic class OrganizationData\n{\n    public string Idno { get; set; }\n    public string Name { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#requestorcomponentoptions","title":"RequestorComponentOptions","text":"<pre><code>public class RequestorComponentOptions\n{\n    // Permite ob\u021binerea datelor persoanelor\n    public bool AllowGetRequestorData { get; set; } = true;\n\n    // Permite ob\u021binerea datelor organiza\u021biilor\n    public bool AllowGetOrganizationData { get; set; } = true;\n\n    // Afi\u0219eaz\u0103 numele complet\n    public bool AllowFullName { get; set; } = true;\n\n    // Aplic\u0103 blur pe nume (prima liter\u0103 + asteriscuri)\n    public bool BlurName { get; set; } = false;\n\n    // Motivul acces\u0103rii MConnect pentru audit\n    public string MConnectReason { get; set; } = \n        \"Extragerea datelor pentru prestarea serviciului {ServiceName}\";\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/RequestorComponentService/#formular-solicitant-persoana-fizica","title":"Formular solicitant persoan\u0103 fizic\u0103","text":"<pre><code>@page \"/servicii/cerere-noua\"\n@inject IRequestorComponentService RequestorService\n@inject IFodNotificationService NotificationService\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Date Solicitant\n            &lt;/FodText&gt;\n\n            &lt;!-- Selector tip solicitant --&gt;\n            &lt;FodRadioGroup @bind-Value=\"requestorType\" Class=\"mb-4\"&gt;\n                &lt;FodRadio Value=\"@RequestorType.Individual\" Label=\"Persoan\u0103 fizic\u0103\" /&gt;\n                &lt;FodRadio Value=\"@RequestorType.Organization\" Label=\"Persoan\u0103 juridic\u0103\" /&gt;\n            &lt;/FodRadioGroup&gt;\n\n            @if (requestorType == RequestorType.Individual)\n            {\n                &lt;!-- Persoan\u0103 fizic\u0103 --&gt;\n                &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                        &lt;FodInput @bind-Value=\"idnp\" \n                                  Label=\"IDNP\"\n                                  Mask=\"______________\"\n                                  MaxLength=\"13\"\n                                  Required=\"true\"\n                                  EndAdornment=\"@GetValidationIcon()\"\n                                  @onblur=\"OnIdnpChanged\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                        &lt;FodInput @bind-Value=\"firstName\" \n                                  Label=\"Prenume\"\n                                  Required=\"true\"\n                                  ReadOnly=\"@dataLoaded\"\n                                  HelperText=\"@(dataLoaded ? \"Preluat din MConnect\" : \"\")\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                        &lt;FodInput @bind-Value=\"lastName\" \n                                  Label=\"Nume\"\n                                  Required=\"true\"\n                                  ReadOnly=\"@dataLoaded\" /&gt;\n                    &lt;/FodGrid&gt;\n                &lt;/FodGrid&gt;\n            }\n            else\n            {\n                &lt;!-- Persoan\u0103 juridic\u0103 --&gt;\n                &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"idno\" \n                                  Label=\"IDNO\"\n                                  Mask=\"______________\"\n                                  MaxLength=\"13\"\n                                  Required=\"true\"\n                                  @onblur=\"OnIdnoChanged\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                        &lt;FodInput @bind-Value=\"organizationName\" \n                                  Label=\"Denumire organiza\u021bie\"\n                                  Required=\"true\"\n                                  ReadOnly=\"@dataLoaded\" /&gt;\n                    &lt;/FodGrid&gt;\n                &lt;/FodGrid&gt;\n            }\n\n            @if (isLoading)\n            {\n                &lt;FodLoadingLinear Indeterminate=\"true\" Class=\"mt-2\" /&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private RequestorType requestorType = RequestorType.Individual;\n    private string idnp, firstName, lastName;\n    private string idno, organizationName;\n    private bool isLoading, dataLoaded;\n\n    private async Task OnIdnpChanged()\n    {\n        if (!IsValidIdnp(idnp))\n            return;\n\n        isLoading = true;\n        dataLoaded = false;\n\n        try\n        {\n            var data = await RequestorService.GetRequestorData(new RequestorDataRequest\n            {\n                Idnp = idnp\n            });\n\n            if (data != null)\n            {\n                firstName = data.FirstName;\n                lastName = data.LastName;\n                dataLoaded = true;\n                NotificationService.Success(\"Date preluate cu succes\");\n            }\n            else\n            {\n                NotificationService.Warning(\"Persoan\u0103 neg\u0103sit\u0103 \u00een registre\");\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare: {ex.Message}\");\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    private async Task OnIdnoChanged()\n    {\n        if (!IsValidIdno(idno))\n            return;\n\n        isLoading = true;\n        dataLoaded = false;\n\n        try\n        {\n            var data = await RequestorService.GetOrganizationData(new OrganizationDataRequest\n            {\n                Idno = idno\n            });\n\n            if (data != null)\n            {\n                organizationName = data.Name;\n                dataLoaded = true;\n                NotificationService.Success(\"Date organiza\u021bie preluate cu succes\");\n            }\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    private RenderFragment GetValidationIcon()\n    {\n        return @&lt;text&gt;\n            @if (dataLoaded)\n            {\n                &lt;FodIcon Color=\"FodColor.Success\"&gt;\n                    @FodIcons.Material.Filled.Verified\n                &lt;/FodIcon&gt;\n            }\n        &lt;/text&gt;;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#componenta-fodrequestor-integrata","title":"Componenta FodRequestor integrat\u0103","text":"<pre><code>@page \"/servicii/{ServiceCode}/depunere\"\n\n&lt;FodContainer&gt;\n    &lt;FodWizard&gt;\n        &lt;FodWizardStep Title=\"Date Solicitant\"&gt;\n            &lt;!-- Componenta complet\u0103 pentru solicitant --&gt;\n            &lt;FodRequestor @bind-Model=\"requestorModel\"\n                          ServiceProviderInternalCode=\"@ServiceCode\"\n                          ShowOnBehalfOf=\"true\"\n                          ValidateNameByIdnp=\"true\"\n                          AutoPopulateNameByIdnp=\"true\"\n                          ShowMiddleName=\"true\"\n                          ShowStatute=\"true\"\n                          OnRequestorChanged=\"OnRequestorChanged\" /&gt;\n        &lt;/FodWizardStep&gt;\n\n        &lt;FodWizardStep Title=\"Detalii Serviciu\"&gt;\n            &lt;!-- Alte date necesare --&gt;\n        &lt;/FodWizardStep&gt;\n    &lt;/FodWizard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public string ServiceCode { get; set; }\n\n    private FodRequestorModel requestorModel = new();\n\n    private void OnRequestorChanged(FodRequestorModel model)\n    {\n        // Logic\u0103 adi\u021bional\u0103 c\u00e2nd se schimb\u0103 solicitantul\n        if (model.OnBehalfOf)\n        {\n            Console.WriteLine($\"Cerere \u00een numele: {model.FirstName} {model.LastName}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#scenarii-de-reprezentare-on-behalf-of","title":"Scenarii de reprezentare (On Behalf Of)","text":"<pre><code>@inject IRequestorComponentService RequestorService\n@inject IMPowerService MPowerService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Depunere Cerere\n        &lt;/FodText&gt;\n\n        &lt;!-- Selector mod depunere --&gt;\n        &lt;FodRadioGroup @bind-Value=\"submissionMode\" Class=\"mb-4\"&gt;\n            &lt;FodRadio Value=\"@SubmissionMode.ForSelf\" \n                      Label=\"\u00cen nume propriu\" /&gt;\n            &lt;FodRadio Value=\"@SubmissionMode.ForAnother\" \n                      Label=\"\u00cen numele altei persoane\" /&gt;\n            &lt;FodRadio Value=\"@SubmissionMode.ForOrganization\" \n                      Label=\"\u00cen numele unei organiza\u021bii\" /&gt;\n        &lt;/FodRadioGroup&gt;\n\n        @if (submissionMode == SubmissionMode.ForAnother)\n        {\n            &lt;!-- Date persoan\u0103 reprezentat\u0103 --&gt;\n            &lt;FodPaper Elevation=\"1\" Class=\"p-3 mb-4\"&gt;\n                &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                    Persoana \u00een numele c\u0103reia depune\u021bi cererea\n                &lt;/FodText&gt;\n\n                &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                        &lt;FodInput @bind-Value=\"representedIdnp\" \n                                  Label=\"IDNP persoan\u0103 reprezentat\u0103\"\n                                  Required=\"true\"\n                                  @onblur=\"ValidateRepresentation\" /&gt;\n                    &lt;/FodGrid&gt;\n                    &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n                        @if (representedPerson != null)\n                        {\n                            &lt;FodAlert Severity=\"FodSeverity.Info\"&gt;\n                                Reprezenta\u021bi pe: &lt;strong&gt;@representedPerson.FirstName @representedPerson.LastName&lt;/strong&gt;\n                            &lt;/FodAlert&gt;\n                        }\n                    &lt;/FodGrid&gt;\n                &lt;/FodGrid&gt;\n\n                @if (authorizationRequired)\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Warning\" Class=\"mt-3\"&gt;\n                        &lt;FodAlertTitle&gt;Autorizare necesar\u0103&lt;/FodAlertTitle&gt;\n                        Este necesar\u0103 verificarea \u00eemputernicirii prin MPower.\n                        &lt;FodButton Color=\"FodColor.Primary\" \n                                   Size=\"FodSize.Small\"\n                                   OnClick=\"CheckMPowerAuthorization\"\n                                   Class=\"mt-2\"&gt;\n                            Verific\u0103 \u00cemputernicire\n                        &lt;/FodButton&gt;\n                    &lt;/FodAlert&gt;\n                }\n            &lt;/FodPaper&gt;\n        }\n\n        &lt;!-- Date solicitant actual --&gt;\n        &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n            Datele dumneavoastr\u0103 (solicitant)\n        &lt;/FodText&gt;\n\n        &lt;RequestorForm Model=\"@currentRequestor\" \n                       ReadOnly=\"@isAuthenticated\" /&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private SubmissionMode submissionMode = SubmissionMode.ForSelf;\n    private string representedIdnp;\n    private RequestorData representedPerson;\n    private bool authorizationRequired;\n    private bool isAuthenticated;\n    private RequestorModel currentRequestor = new();\n\n    private async Task ValidateRepresentation()\n    {\n        if (string.IsNullOrWhiteSpace(representedIdnp) || representedIdnp.Length != 13)\n            return;\n\n        // Ob\u021bine date persoan\u0103 reprezentat\u0103\n        representedPerson = await RequestorService.GetRequestorData(new RequestorDataRequest\n        {\n            Idnp = representedIdnp\n        });\n\n        if (representedPerson != null)\n        {\n            // Verific\u0103 dac\u0103 necesit\u0103 autorizare MPower\n            authorizationRequired = await CheckIfAuthorizationRequired(\n                currentRequestor.Idnp, \n                representedIdnp);\n        }\n    }\n\n    private async Task CheckMPowerAuthorization()\n    {\n        var authorization = await MPowerService.CheckAuthorization(new MPowerRequest\n        {\n            RepresentativeIdnp = currentRequestor.Idnp,\n            RepresentedIdnp = representedIdnp,\n            ServiceCode = ServiceCode,\n            RequiredPermissions = new[] { \"SUBMIT_REQUEST\" }\n        });\n\n        if (authorization.IsAuthorized)\n        {\n            NotificationService.Success(\"\u00cemputernicire valid\u0103!\");\n            authorizationRequired = false;\n        }\n        else\n        {\n            NotificationService.Error($\"Nu ave\u021bi \u00eemputernicire: {authorization.Reason}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#validare-complexa-identitate","title":"Validare complex\u0103 identitate","text":"<pre><code>public class RequestorValidationService\n{\n    private readonly IRequestorComponentService _requestorService;\n    private readonly ILogger&lt;RequestorValidationService&gt; _logger;\n\n    public async Task&lt;ValidationResult&gt; ValidateRequestorIdentity(\n        string idnp, \n        string providedFirstName, \n        string providedLastName)\n    {\n        try\n        {\n            // Ob\u021bine date oficiale\n            var officialData = await _requestorService.GetRequestorData(\n                new RequestorDataRequest { Idnp = idnp });\n\n            if (officialData == null)\n            {\n                return new ValidationResult\n                {\n                    IsValid = false,\n                    Errors = new[] { \"IDNP-ul nu exist\u0103 \u00een registrele oficiale\" }\n                };\n            }\n\n            // Normalizare pentru compara\u021bie\n            var normalizedOfficial = new\n            {\n                FirstName = NormalizeName(officialData.FirstName),\n                LastName = NormalizeName(officialData.LastName)\n            };\n\n            var normalizedProvided = new\n            {\n                FirstName = NormalizeName(providedFirstName),\n                LastName = NormalizeName(providedLastName)\n            };\n\n            // Verificare potrivire exact\u0103\n            if (normalizedOfficial.FirstName == normalizedProvided.FirstName &amp;&amp;\n                normalizedOfficial.LastName == normalizedProvided.LastName)\n            {\n                return new ValidationResult { IsValid = true };\n            }\n\n            // Verificare varia\u021bii comune (diminutive, prescurt\u0103ri)\n            if (AreNamesEquivalent(normalizedOfficial.FirstName, normalizedProvided.FirstName) &amp;&amp;\n                normalizedOfficial.LastName == normalizedProvided.LastName)\n            {\n                return new ValidationResult\n                {\n                    IsValid = true,\n                    Warnings = new[] { \"Numele folose\u0219te o variant\u0103 acceptat\u0103\" }\n                };\n            }\n\n            // Calculare scor similitudine\n            var similarity = CalculateNameSimilarity(\n                normalizedOfficial, \n                normalizedProvided);\n\n            if (similarity &gt;= 0.85) // 85% similitudine\n            {\n                _logger.LogWarning(\n                    \"Potrivire par\u021bial\u0103 pentru IDNP {Idnp}: {Similarity}%\", \n                    idnp.Substring(0, 4) + \"***\", \n                    similarity * 100);\n\n                return new ValidationResult\n                {\n                    IsValid = true,\n                    Warnings = new[] { \"Numele prezint\u0103 mici diferen\u021be fa\u021b\u0103 de cel oficial\" },\n                    Confidence = similarity\n                };\n            }\n\n            return new ValidationResult\n            {\n                IsValid = false,\n                Errors = new[] { \"Numele furnizat nu corespunde cu cel din registre oficiale\" },\n                Confidence = similarity\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la validarea identit\u0103\u021bii pentru IDNP {Idnp}\", \n                idnp.Substring(0, 4) + \"***\");\n            throw;\n        }\n    }\n\n    private string NormalizeName(string name)\n    {\n        if (string.IsNullOrWhiteSpace(name))\n            return string.Empty;\n\n        return name.Trim()\n                   .ToUpperInvariant()\n                   .Replace(\"\u0102\", \"A\").Replace(\"\u00c2\", \"A\")\n                   .Replace(\"\u00ce\", \"I\").Replace(\"\u0218\", \"S\")\n                   .Replace(\"\u021a\", \"T\").Replace(\"\u015e\", \"S\")\n                   .Replace(\"\u0162\", \"T\");\n    }\n\n    private bool AreNamesEquivalent(string official, string provided)\n    {\n        // Dic\u021bionar de echivalen\u021be comune \u00een Moldova\n        var equivalents = new Dictionary&lt;string, List&lt;string&gt;&gt;\n        {\n            [\"ALEXANDRU\"] = new() { \"ALEX\", \"SANDU\", \"ALECU\" },\n            [\"ANDREI\"] = new() { \"ANDRU\u021aA\", \"ANDRIU\u021aA\" },\n            [\"GHEORGHE\"] = new() { \"GHEORGHI\u021a\u0102\", \"GIC\u0102\", \"GEORGE\" },\n            [\"ION\"] = new() { \"IONEL\", \"IONU\u021a\", \"NELU\" },\n            [\"MARIA\"] = new() { \"MARI\u021aA\", \"MARA\", \"MARIOARA\" },\n            [\"ELENA\"] = new() { \"LENU\u021aA\", \"LEANA\", \"ILEANA\" },\n            [\"VASILE\"] = new() { \"VASILY\", \"VASILIC\u0102\" }\n        };\n\n        foreach (var kvp in equivalents)\n        {\n            if ((official == kvp.Key &amp;&amp; kvp.Value.Contains(provided)) ||\n                (provided == kvp.Key &amp;&amp; kvp.Value.Contains(official)))\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#7-dashboard-organizatii","title":"7. Dashboard organiza\u021bii","text":"<pre><code>@inject IRequestorComponentService RequestorService\n@inject IOrganizationService OrganizationService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Gestionare Organiza\u021bii Autorizate\n    &lt;/FodText&gt;\n\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;!-- Ad\u0103ugare organiza\u021bie nou\u0103 --&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\" AlignItems=\"Align.End\" Class=\"mb-4\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodInput @bind-Value=\"newIdno\" \n                              Label=\"IDNO Organiza\u021bie\"\n                              Mask=\"______________\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                    &lt;FodInput Value=\"@newOrgName\" \n                              Label=\"Denumire\"\n                              ReadOnly=\"true\"\n                              HelperText=\"Se completeaz\u0103 automat\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"2\"&gt;\n                    &lt;FodButton OnClick=\"AddOrganization\" \n                               Color=\"FodColor.Primary\"\n                               FullWidth=\"true\"\n                               Disabled=\"@(string.IsNullOrEmpty(newOrgName))\"&gt;\n                        Adaug\u0103\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;!-- Lista organiza\u021bii --&gt;\n            &lt;FodDataTable Items=\"@organizations\" \n                          ShowPagination=\"true\"\n                          RowsPerPage=\"10\"&gt;\n                &lt;HeaderContent&gt;\n                    &lt;FodTHeadRow&gt;\n                        &lt;FodTh&gt;IDNO&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Denumire&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Status&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Data Ad\u0103ug\u0103rii&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n                    &lt;/FodTHeadRow&gt;\n                &lt;/HeaderContent&gt;\n                &lt;RowTemplate&gt;\n                    &lt;FodTr&gt;\n                        &lt;FodTd&gt;@context.Idno&lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            &lt;FodText NoWrap=\"true\"&gt;@context.Name&lt;/FodText&gt;\n                        &lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            &lt;FodChip Color=\"@GetStatusColor(context.Status)\" \n                                     Size=\"FodSize.Small\"&gt;\n                                @context.Status\n                            &lt;/FodChip&gt;\n                        &lt;/FodTd&gt;\n                        &lt;FodTd&gt;@context.AddedDate.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Refresh\"\n                                           Size=\"FodSize.Small\"\n                                           OnClick=\"() =&gt; RefreshOrganization(context)\"\n                                           Tooltip=\"Actualizeaz\u0103 date\" /&gt;\n                            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Delete\"\n                                           Size=\"FodSize.Small\"\n                                           Color=\"FodColor.Error\"\n                                           OnClick=\"() =&gt; RemoveOrganization(context)\"\n                                           Tooltip=\"Elimin\u0103\" /&gt;\n                        &lt;/FodTd&gt;\n                    &lt;/FodTr&gt;\n                &lt;/RowTemplate&gt;\n            &lt;/FodDataTable&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private string newIdno;\n    private string newOrgName;\n    private List&lt;AuthorizedOrganization&gt; organizations = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadOrganizations();\n    }\n\n    private async Task OnIdnoChanged()\n    {\n        if (IsValidIdno(newIdno))\n        {\n            var orgData = await RequestorService.GetOrganizationData(\n                new OrganizationDataRequest { Idno = newIdno });\n\n            newOrgName = orgData?.Name;\n        }\n    }\n\n    private async Task RefreshOrganization(AuthorizedOrganization org)\n    {\n        var freshData = await RequestorService.GetOrganizationData(\n            new OrganizationDataRequest { Idno = org.Idno });\n\n        if (freshData != null &amp;&amp; freshData.Name != org.Name)\n        {\n            org.Name = freshData.Name;\n            org.LastUpdated = DateTime.Now;\n            await OrganizationService.UpdateOrganization(org);\n            NotificationService.Info($\"Actualizat: {org.Name}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#8-serviciu-cu-cache-si-privacy","title":"8. Serviciu cu cache \u0219i privacy","text":"<pre><code>public class EnhancedRequestorComponentService : IRequestorComponentService\n{\n    private readonly IRequestorComponentService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly IOptions&lt;RequestorComponentOptions&gt; _options;\n    private readonly IAuditService _auditService;\n\n    public async Task&lt;RequestorData&gt; GetRequestorData(RequestorDataRequest request)\n    {\n        // Verificare permisiuni\n        if (!_options.Value.AllowGetRequestorData)\n        {\n            throw new UnauthorizedException(\"Ob\u021binerea datelor persoanelor este dezactivat\u0103\");\n        }\n\n        // Cache key include op\u021biuni privacy pentru invalidare corect\u0103\n        var cacheKey = $\"requestor_{request.Idnp}_{_options.Value.AllowFullName}_{_options.Value.BlurName}\";\n\n        if (_cache.TryGetValue&lt;RequestorData&gt;(cacheKey, out var cached))\n        {\n            await _auditService.LogCacheHit(\"RequestorData\", request.Idnp);\n            return cached;\n        }\n\n        var data = await _innerService.GetRequestorData(request);\n\n        if (data != null)\n        {\n            // Aplicare op\u021biuni privacy\n            data = ApplyPrivacyOptions(data);\n\n            // Cache cu expirare sliding\n            _cache.Set(cacheKey, data, new MemoryCacheEntryOptions\n            {\n                SlidingExpiration = TimeSpan.FromMinutes(10),\n                Priority = CacheItemPriority.Normal\n            });\n        }\n\n        return data;\n    }\n\n    private RequestorData ApplyPrivacyOptions(RequestorData data)\n    {\n        if (data == null) return null;\n\n        var result = new RequestorData\n        {\n            Idnp = data.Idnp,\n            FirstName = data.FirstName,\n            LastName = data.LastName\n        };\n\n        if (_options.Value.BlurName)\n        {\n            result.FirstName = BlurName(data.FirstName);\n            result.LastName = BlurName(data.LastName);\n        }\n        else if (!_options.Value.AllowFullName)\n        {\n            result.FirstName = GetInitial(data.FirstName);\n            result.LastName = data.LastName; // P\u0103str\u0103m numele de familie\n        }\n\n        return result;\n    }\n\n    private string BlurName(string name)\n    {\n        if (string.IsNullOrEmpty(name) || name.Length &lt;= 1)\n            return name;\n\n        return name[0] + new string('*', name.Length - 1);\n    }\n\n    private string GetInitial(string name)\n    {\n        return string.IsNullOrEmpty(name) ? \"\" : name[0] + \".\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#9-monitorizare-si-statistici","title":"9. Monitorizare \u0219i statistici","text":"<pre><code>@inject IRequestorComponentService RequestorService\n@inject IStatisticsService StatisticsService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Statistici Verific\u0103ri Identitate - @selectedPeriod\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\" Class=\"mb-4\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                &lt;MetricCard Title=\"Total Verific\u0103ri\" \n                            Value=\"@stats.TotalVerifications\"\n                            Icon=\"@FodIcons.Material.Filled.FactCheck\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                &lt;MetricCard Title=\"Persoane Fizice\" \n                            Value=\"@stats.IndividualVerifications\"\n                            Icon=\"@FodIcons.Material.Filled.Person\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                &lt;MetricCard Title=\"Organiza\u021bii\" \n                            Value=\"@stats.OrganizationVerifications\"\n                            Icon=\"@FodIcons.Material.Filled.Business\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"3\"&gt;\n                &lt;MetricCard Title=\"Rata Succes\" \n                            Value=\"@($\"{stats.SuccessRate:F1}%\")\"\n                            Icon=\"@FodIcons.Material.Filled.Analytics\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;!-- Grafic trend zilnic --&gt;\n        &lt;VerificationTrendChart Data=\"@dailyTrend\" /&gt;\n\n        &lt;!-- Top servicii dup\u0103 verific\u0103ri --&gt;\n        &lt;div class=\"mt-4\"&gt;\n            &lt;FodText Typo=\"Typo.subtitle1\" GutterBottom=\"true\"&gt;\n                Top Servicii dup\u0103 Num\u0103r Verific\u0103ri\n            &lt;/FodText&gt;\n            &lt;FodSimpleTable&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;\n                        &lt;th&gt;Serviciu&lt;/th&gt;\n                        &lt;th&gt;Verific\u0103ri&lt;/th&gt;\n                        &lt;th&gt;Rata Succes&lt;/th&gt;\n                        &lt;th&gt;Timp Mediu&lt;/th&gt;\n                    &lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody&gt;\n                    @foreach (var service in topServices)\n                    {\n                        &lt;tr&gt;\n                            &lt;td&gt;@service.ServiceName&lt;/td&gt;\n                            &lt;td&gt;@service.VerificationCount&lt;/td&gt;\n                            &lt;td&gt;@service.SuccessRate.ToString(\"F1\")%&lt;/td&gt;\n                            &lt;td&gt;@service.AverageTime.ToString(\"F0\")ms&lt;/td&gt;\n                        &lt;/tr&gt;\n                    }\n                &lt;/tbody&gt;\n            &lt;/FodSimpleTable&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private VerificationStats stats = new();\n    private List&lt;DailyTrend&gt; dailyTrend = new();\n    private List&lt;ServiceStats&gt; topServices = new();\n    private string selectedPeriod = DateTime.Now.ToString(\"MMMM yyyy\");\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadStatistics();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#10-tratare-erori-si-fallback","title":"10. Tratare erori \u0219i fallback","text":"<pre><code>public class ResilientRequestorComponentService : IRequestorComponentService\n{\n    private readonly IRequestorComponentService _primaryService;\n    private readonly IRequestorComponentService _fallbackService;\n    private readonly ILogger&lt;ResilientRequestorComponentService&gt; _logger;\n    private readonly ICircuitBreaker _circuitBreaker;\n\n    public async Task&lt;RequestorData&gt; GetRequestorData(RequestorDataRequest request)\n    {\n        try\n        {\n            // \u00cencercare prin circuit breaker\n            return await _circuitBreaker.ExecuteAsync(async () =&gt;\n            {\n                return await _primaryService.GetRequestorData(request);\n            });\n        }\n        catch (CircuitBreakerOpenException)\n        {\n            _logger.LogWarning(\"Circuit breaker open, using fallback service\");\n\n            // Fallback la serviciu secundar sau cache local\n            try\n            {\n                return await _fallbackService.GetRequestorData(request);\n            }\n            catch (Exception fallbackEx)\n            {\n                _logger.LogError(fallbackEx, \"Fallback service also failed\");\n\n                // Returnare date minimale pentru continuitate\n                return GetMinimalData(request.Idnp);\n            }\n        }\n        catch (TimeoutException)\n        {\n            _logger.LogWarning(\"MConnect timeout for IDNP {Idnp}\", \n                request.Idnp.Substring(0, 4) + \"***\");\n\n            // Permite continuare cu date manuale\n            return null;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Error getting requestor data\");\n            throw;\n        }\n    }\n\n    private RequestorData GetMinimalData(string idnp)\n    {\n        // Extrage informa\u021bii de baz\u0103 din IDNP\n        var info = IdnpParser.Parse(idnp);\n\n        return new RequestorData\n        {\n            Idnp = idnp,\n            FirstName = \"[Necesit\u0103 completare manual\u0103]\",\n            LastName = \"[Necesit\u0103 completare manual\u0103]\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class RequestorComponentServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IRequestorComponentService _service;\n\n    [TestMethod]\n    public async Task GetRequestorData_ValidIdnp_ReturnsData()\n    {\n        // Arrange\n        var request = new RequestorDataRequest { Idnp = \"2001234567890\" };\n        var expectedData = new RequestorData\n        {\n            Idnp = \"2001234567890\",\n            FirstName = \"Ion\",\n            LastName = \"Popescu\"\n        };\n\n        SetupHttpResponse(expectedData);\n\n        // Act\n        var result = await _service.GetRequestorData(request);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(\"Ion\", result.FirstName);\n        Assert.AreEqual(\"Popescu\", result.LastName);\n    }\n\n    [TestMethod]\n    public async Task GetOrganizationData_ValidIdno_ReturnsData()\n    {\n        // Arrange\n        var request = new OrganizationDataRequest { Idno = \"1003600123456\" };\n        var expectedData = new OrganizationData\n        {\n            Idno = \"1003600123456\",\n            Name = \"Compania Example SRL\"\n        };\n\n        SetupHttpResponse(expectedData);\n\n        // Act\n        var result = await _service.GetOrganizationData(request);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(\"Compania Example SRL\", result.Name);\n    }\n\n    [TestMethod]\n    public async Task GetRequestorData_BlurEnabled_ReturnsBlurredData()\n    {\n        // Arrange\n        var options = new RequestorComponentOptions { BlurName = true };\n        var service = new EnhancedRequestorComponentService(_innerService, _cache, \n            Options.Create(options), _auditService);\n\n        // Act\n        var result = await service.GetRequestorData(new RequestorDataRequest \n        { \n            Idnp = \"2001234567890\" \n        });\n\n        // Assert\n        Assert.AreEqual(\"I**\", result.FirstName);\n        Assert.AreEqual(\"P******\", result.LastName);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/RequestorComponentService/#12-best-practices","title":"12. Best Practices","text":"<ol> <li>Validare strict\u0103 - Valida\u021bi IDNP/IDNO \u00eenainte de cereri</li> <li>Cache responsabil - Cache cu considerente de privacy</li> <li>Audit complet - \u00cenregistra\u021bi toate acces\u0103rile pentru GDPR</li> <li>Fallback graceful - Permite\u021bi completare manual\u0103 la erori</li> <li>Rate limiting - Preveni\u021bi abuzuri \u0219i suprasolicitare</li> <li>Privacy by design - Aplica\u021bi op\u021biuni de confiden\u021bialitate</li> <li>Monitorizare - Urm\u0103ri\u021bi performan\u021ba \u0219i erorile</li> </ol>"},{"location":"fod/servicii/RequestorComponentService/#13-concluzie","title":"13. Concluzie","text":"<p><code>RequestorComponentService</code> este un serviciu esen\u021bial \u00een ecosistemul FOD, oferind acces securizat la datele oficiale ale persoanelor \u0219i organiza\u021biilor din Moldova. Cu suport pentru scenarii complexe de reprezentare, m\u0103suri stricte de confiden\u021bialitate \u0219i integrare robust\u0103 cu sistemele guvernamentale, serviciul faciliteaz\u0103 procesarea eficient\u0103 \u0219i sigur\u0103 a cererilor pentru servicii publice digitale.</p>"},{"location":"fod/servicii/ResizeBasedService/","title":"ResizeBasedService &amp; BreakpointService","text":""},{"location":"fod/servicii/ResizeBasedService/#documentatie-pentru-serviciile-resizebasedservice-si-breakpointservice","title":"Documenta\u021bie pentru serviciile ResizeBasedService \u0219i BreakpointService","text":""},{"location":"fod/servicii/ResizeBasedService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ResizeBasedService</code> este o clas\u0103 abstract\u0103 generic\u0103 care ofer\u0103 infrastructura pentru servicii reactive la schimb\u0103ri de dimensiune. Implementarea principal\u0103, <code>BreakpointService</code>, gestioneaz\u0103 detectarea \u0219i notificarea schimb\u0103rilor de breakpoint pentru design responsive \u00een aplica\u021biile Blazor.</p> <p>Caracteristici principale: - Detectare automat\u0103 breakpoint-uri viewport - Subscrip\u021bii la evenimente resize cu throttling - Integrare JavaScript ResizeObserver - Thread-safe subscription management - Suport pentru responsive design - Performan\u021b\u0103 optimizat\u0103 prin notific\u0103ri selective</p>"},{"location":"fod/servicii/ResizeBasedService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// \u00cenregistrare automat\u0103 prin AddFodComponents\nbuilder.Services.AddFodComponents(configuration);\n\n// Sau \u00eenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IBreakpointService, BreakpointService&gt;();\nbuilder.Services.AddScoped&lt;IBrowserWindowSizeProvider, BrowserWindowSizeProvider&gt;();\n\n// Configurare breakpoint-uri custom (op\u021bional)\nbuilder.Services.Configure&lt;ResizeOptions&gt;(options =&gt;\n{\n    options.BreakpointDefinitions = new Dictionary&lt;Breakpoint, int&gt;\n    {\n        { Breakpoint.Xs, 0 },\n        { Breakpoint.Sm, 576 },    // Bootstrap breakpoints\n        { Breakpoint.Md, 768 },\n        { Breakpoint.Lg, 992 },\n        { Breakpoint.Xl, 1200 },\n        { Breakpoint.Xxl, 1400 }\n    };\n    options.ReportRate = 200; // Throttle la 200ms\n});\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#3-interfete-si-clase","title":"3. Interfe\u021be \u0219i Clase","text":""},{"location":"fod/servicii/ResizeBasedService/#ibreakpointservice","title":"IBreakpointService","text":"<pre><code>public interface IBreakpointService : IAsyncDisposable\n{\n    Task&lt;bool&gt; IsMediaSize(Breakpoint breakpoint);\n    bool IsMediaSize(Breakpoint breakpoint, Breakpoint reference);\n    Task&lt;Breakpoint&gt; GetBreakpoint();\n    Task&lt;BreakpointServiceSubscribeResult&gt; Subscribe(Action&lt;Breakpoint&gt; callback);\n    Task&lt;BreakpointServiceSubscribeResult&gt; Subscribe(Action&lt;Breakpoint&gt; callback, ResizeOptions options);\n    Task&lt;bool&gt; Unsubscribe(Guid subscriptionId);\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#resizebasedservice-abstract","title":"ResizeBasedService (Abstract)","text":"<pre><code>public abstract class ResizeBasedService&lt;TSelf, TInfo, TAction, TaskOption&gt; : IAsyncDisposable\n    where TSelf : class\n    where TInfo : SubscriptionInfo&lt;TAction, TaskOption&gt;\n{\n    // Infrastructur\u0103 pentru gestionare subscrip\u021bii\n    protected abstract ValueTask InvokeCallbackAsync(TInfo info, TAction value);\n    protected abstract ValueTask&lt;TInfo&gt; CreateInfoAsync(TAction action, TaskOption option);\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#4-modele-de-date","title":"4. Modele de Date","text":""},{"location":"fod/servicii/ResizeBasedService/#breakpoint-enum","title":"Breakpoint Enum","text":"<pre><code>public enum Breakpoint\n{\n    Xs = 0,  // Extra small (telefoane)\n    Sm = 1,  // Small (tablete mici)\n    Md = 2,  // Medium (tablete)\n    Lg = 3,  // Large (desktop)\n    Xl = 4,  // Extra large (desktop mare)\n    Xxl = 5, // Extra extra large\n    None = 6\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#browserwindowsize","title":"BrowserWindowSize","text":"<pre><code>public class BrowserWindowSize\n{\n    public int Width { get; init; }\n    public int Height { get; init; }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#resizeoptions","title":"ResizeOptions","text":"<pre><code>public class ResizeOptions\n{\n    public Dictionary&lt;Breakpoint, int&gt; BreakpointDefinitions { get; set; }\n    public ResizeDirection ReportRate { get; set; } = ResizeDirection.WidthAndHeight;\n    public int ReportRate { get; set; } = 100; // Milliseconds\n    public bool SuppressInitEvent { get; set; } = false;\n    public bool NotifyOnBreakpointOnly { get; set; } = true;\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/ResizeBasedService/#componenta-responsive-simpla","title":"Component\u0103 responsive simpl\u0103","text":"<pre><code>@implements IAsyncDisposable\n@inject IBreakpointService BreakpointService\n\n&lt;FodContainer&gt;\n    @if (currentBreakpoint &lt;= Breakpoint.Sm)\n    {\n        &lt;!-- Layout mobil --&gt;\n        &lt;MobileLayout&gt;\n            &lt;FodText Typo=\"Typo.h6\"&gt;Vizualizare Mobil\u0103&lt;/FodText&gt;\n            @ChildContent\n        &lt;/MobileLayout&gt;\n    }\n    else\n    {\n        &lt;!-- Layout desktop --&gt;\n        &lt;DesktopLayout&gt;\n            &lt;FodText Typo=\"Typo.h4\"&gt;Vizualizare Desktop&lt;/FodText&gt;\n            @ChildContent\n        &lt;/DesktopLayout&gt;\n    }\n\n    &lt;FodChip Color=\"FodColor.Info\" Size=\"FodSize.Small\"&gt;\n        Breakpoint curent: @currentBreakpoint\n    &lt;/FodChip&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public RenderFragment ChildContent { get; set; }\n\n    private Breakpoint currentBreakpoint = Breakpoint.None;\n    private Guid subscriptionId;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Ob\u021bine breakpoint ini\u021bial\n        currentBreakpoint = await BreakpointService.GetBreakpoint();\n\n        // Subscribe la schimb\u0103ri\n        var result = await BreakpointService.Subscribe(OnBreakpointChanged);\n        subscriptionId = result.SubscriptionId;\n    }\n\n    private void OnBreakpointChanged(Breakpoint newBreakpoint)\n    {\n        currentBreakpoint = newBreakpoint;\n        InvokeAsync(StateHasChanged);\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        if (subscriptionId != Guid.Empty)\n        {\n            await BreakpointService.Unsubscribe(subscriptionId);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#navigation-drawer-responsive","title":"Navigation drawer responsive","text":"<pre><code>@inject IBreakpointService BreakpointService\n\n&lt;FodLayout&gt;\n    &lt;FodDrawer @bind-Open=\"drawerOpen\" \n               Variant=\"@GetDrawerVariant()\"\n               Breakpoint=\"@drawerBreakpoint\"\n               OverlayClass=\"@GetOverlayClass()\"&gt;\n        &lt;FodNavMenu&gt;\n            &lt;!-- Meniu naviga\u021bie --&gt;\n        &lt;/FodNavMenu&gt;\n    &lt;/FodDrawer&gt;\n\n    &lt;FodLayoutContent&gt;\n        @if (showMenuButton)\n        {\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Menu\"\n                           OnClick=\"ToggleDrawer\"\n                           Class=\"d-md-none\" /&gt;\n        }\n\n        @Body\n    &lt;/FodLayoutContent&gt;\n&lt;/FodLayout&gt;\n\n@code {\n    private bool drawerOpen = true;\n    private Breakpoint currentBreakpoint;\n    private Breakpoint drawerBreakpoint = Breakpoint.Md;\n    private bool showMenuButton;\n    private Guid breakpointSubscription;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentBreakpoint = await BreakpointService.GetBreakpoint();\n        UpdateDrawerBehavior();\n\n        var result = await BreakpointService.Subscribe(OnBreakpointChanged);\n        breakpointSubscription = result.SubscriptionId;\n    }\n\n    private void OnBreakpointChanged(Breakpoint newBreakpoint)\n    {\n        currentBreakpoint = newBreakpoint;\n        UpdateDrawerBehavior();\n        InvokeAsync(StateHasChanged);\n    }\n\n    private void UpdateDrawerBehavior()\n    {\n        // Pe ecrane mici, drawer-ul este temporar \u0219i \u00eenchis implicit\n        if (currentBreakpoint &lt; drawerBreakpoint)\n        {\n            drawerOpen = false;\n            showMenuButton = true;\n        }\n        else\n        {\n            // Pe ecrane mari, drawer-ul este permanent \u0219i deschis\n            drawerOpen = true;\n            showMenuButton = false;\n        }\n    }\n\n    private DrawerVariant GetDrawerVariant()\n    {\n        return currentBreakpoint &lt; drawerBreakpoint \n            ? DrawerVariant.Temporary \n            : DrawerVariant.Persistent;\n    }\n\n    private string GetOverlayClass()\n    {\n        return currentBreakpoint &lt; drawerBreakpoint \n            ? \"drawer-overlay-visible\" \n            : \"drawer-overlay-hidden\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#grid-system-responsive","title":"Grid system responsive","text":"<pre><code>@inject IBreakpointService BreakpointService\n\n&lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n    @foreach (var item in items)\n    {\n        &lt;FodGrid Item=\"true\" \n                 xs=\"12\" \n                 sm=\"6\" \n                 md=\"4\" \n                 lg=\"3\"&gt;\n            &lt;ItemCard Item=\"@item\" \n                      Compact=\"@isCompactMode\" /&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodGrid&gt;\n\n&lt;FodText Typo=\"Typo.caption\" Align=\"FodAlign.Center\"&gt;\n    Afi\u0219are: @GetDisplayInfo()\n&lt;/FodText&gt;\n\n@code {\n    private List&lt;ItemModel&gt; items = new();\n    private Breakpoint currentBreakpoint;\n    private bool isCompactMode;\n\n    protected override async Task OnInitializedAsync()\n    {\n        currentBreakpoint = await BreakpointService.GetBreakpoint();\n        isCompactMode = currentBreakpoint &lt;= Breakpoint.Sm;\n\n        await BreakpointService.Subscribe(bp =&gt;\n        {\n            currentBreakpoint = bp;\n            isCompactMode = bp &lt;= Breakpoint.Sm;\n            InvokeAsync(StateHasChanged);\n        });\n    }\n\n    private string GetDisplayInfo()\n    {\n        return currentBreakpoint switch\n        {\n            Breakpoint.Xs =&gt; \"1 coloan\u0103 (mobil)\",\n            Breakpoint.Sm =&gt; \"2 coloane (tablet\u0103 mic\u0103)\",\n            Breakpoint.Md =&gt; \"3 coloane (tablet\u0103)\",\n            Breakpoint.Lg =&gt; \"4 coloane (desktop)\",\n            _ =&gt; \"4 coloane (ecran mare)\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#6-detectare-orientare-si-dimensiuni","title":"6. Detectare orientare \u0219i dimensiuni","text":"<pre><code>@inject IBreakpointService BreakpointService\n@inject IBrowserWindowSizeProvider WindowSizeProvider\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Informa\u021bii Viewport\n        &lt;/FodText&gt;\n\n        &lt;FodList Dense=\"true\"&gt;\n            &lt;FodListItem&gt;\n                &lt;FodListItemText&gt;\n                    Breakpoint: &lt;strong&gt;@currentBreakpoint&lt;/strong&gt;\n                &lt;/FodListItemText&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;FodListItemText&gt;\n                    Dimensiuni: &lt;strong&gt;@windowSize.Width x @windowSize.Height&lt;/strong&gt;\n                &lt;/FodListItemText&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;FodListItemText&gt;\n                    Orientare: &lt;strong&gt;@orientation&lt;/strong&gt;\n                &lt;/FodListItemText&gt;\n            &lt;/FodListItem&gt;\n            &lt;FodListItem&gt;\n                &lt;FodListItemText&gt;\n                    Tip dispozitiv: &lt;strong&gt;@deviceType&lt;/strong&gt;\n                &lt;/FodListItemText&gt;\n            &lt;/FodListItem&gt;\n        &lt;/FodList&gt;\n\n        @if (showRotateMessage)\n        {\n            &lt;FodAlert Severity=\"FodSeverity.Info\" Class=\"mt-3\"&gt;\n                Pentru experien\u021b\u0103 optim\u0103, roti\u021bi dispozitivul \u00een modul landscape.\n            &lt;/FodAlert&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private Breakpoint currentBreakpoint;\n    private BrowserWindowSize windowSize = new();\n    private string orientation;\n    private string deviceType;\n    private bool showRotateMessage;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Ob\u021bine dimensiuni ini\u021biale\n        windowSize = await WindowSizeProvider.GetBrowserWindowSizeAsync();\n        currentBreakpoint = await BreakpointService.GetBreakpoint();\n        UpdateDeviceInfo();\n\n        // Subscribe cu op\u021biuni custom\n        var options = new ResizeOptions\n        {\n            ReportRate = 250, // Update la 250ms\n            NotifyOnBreakpointOnly = false // Notific\u0103 la orice resize\n        };\n\n        await BreakpointService.Subscribe(OnViewportChanged, options);\n    }\n\n    private async void OnViewportChanged(Breakpoint bp)\n    {\n        currentBreakpoint = bp;\n        windowSize = await WindowSizeProvider.GetBrowserWindowSizeAsync();\n        UpdateDeviceInfo();\n        await InvokeAsync(StateHasChanged);\n    }\n\n    private void UpdateDeviceInfo()\n    {\n        orientation = windowSize.Width &gt; windowSize.Height ? \"Landscape\" : \"Portrait\";\n\n        deviceType = currentBreakpoint switch\n        {\n            Breakpoint.Xs =&gt; \"Telefon\",\n            Breakpoint.Sm =&gt; \"Tablet\u0103 mic\u0103\",\n            Breakpoint.Md =&gt; \"Tablet\u0103\",\n            Breakpoint.Lg =&gt; \"Desktop\",\n            _ =&gt; \"Desktop mare\"\n        };\n\n        // Afi\u0219eaz\u0103 mesaj pentru telefoane \u00een portrait\n        showRotateMessage = currentBreakpoint == Breakpoint.Xs &amp;&amp; \n                           orientation == \"Portrait\" &amp;&amp;\n                           windowSize.Width &lt; 400;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#7-manager-pentru-layout-responsive","title":"7. Manager pentru layout responsive","text":"<pre><code>public class ResponsiveLayoutManager\n{\n    private readonly IBreakpointService _breakpointService;\n    private readonly ILogger&lt;ResponsiveLayoutManager&gt; _logger;\n    private readonly Dictionary&lt;string, ResponsiveConfig&gt; _configs = new();\n\n    public event Action&lt;string, ResponsiveConfig&gt; ConfigurationChanged;\n\n    public ResponsiveLayoutManager(IBreakpointService breakpointService, \n                                  ILogger&lt;ResponsiveLayoutManager&gt; logger)\n    {\n        _breakpointService = breakpointService;\n        _logger = logger;\n    }\n\n    public async Task&lt;ResponsiveConfig&gt; RegisterComponent(string componentId, \n        ResponsiveConfigOptions options)\n    {\n        var currentBreakpoint = await _breakpointService.GetBreakpoint();\n        var config = CreateConfig(currentBreakpoint, options);\n\n        _configs[componentId] = config;\n\n        // Subscribe pentru actualiz\u0103ri\n        await _breakpointService.Subscribe(bp =&gt;\n        {\n            var newConfig = CreateConfig(bp, options);\n            _configs[componentId] = newConfig;\n            ConfigurationChanged?.Invoke(componentId, newConfig);\n        });\n\n        return config;\n    }\n\n    private ResponsiveConfig CreateConfig(Breakpoint breakpoint, \n        ResponsiveConfigOptions options)\n    {\n        return new ResponsiveConfig\n        {\n            Columns = GetColumns(breakpoint, options),\n            Spacing = GetSpacing(breakpoint, options),\n            ShowSidebar = breakpoint &gt;= options.SidebarBreakpoint,\n            CompactMode = breakpoint &lt;= options.CompactBreakpoint,\n            StackElements = breakpoint &lt;= Breakpoint.Sm,\n            FontScale = GetFontScale(breakpoint)\n        };\n    }\n\n    private int GetColumns(Breakpoint bp, ResponsiveConfigOptions options)\n    {\n        return bp switch\n        {\n            Breakpoint.Xs =&gt; 1,\n            Breakpoint.Sm =&gt; 2,\n            Breakpoint.Md =&gt; options.MediumColumns ?? 3,\n            Breakpoint.Lg =&gt; options.LargeColumns ?? 4,\n            _ =&gt; options.ExtraLargeColumns ?? 6\n        };\n    }\n\n    private int GetSpacing(Breakpoint bp, ResponsiveConfigOptions options)\n    {\n        return bp &lt;= Breakpoint.Sm ? 2 : 3;\n    }\n\n    private double GetFontScale(Breakpoint bp)\n    {\n        return bp switch\n        {\n            Breakpoint.Xs =&gt; 0.875,  // 87.5%\n            Breakpoint.Sm =&gt; 0.9375, // 93.75%\n            _ =&gt; 1.0                  // 100%\n        };\n    }\n}\n\npublic class ResponsiveConfig\n{\n    public int Columns { get; set; }\n    public int Spacing { get; set; }\n    public bool ShowSidebar { get; set; }\n    public bool CompactMode { get; set; }\n    public bool StackElements { get; set; }\n    public double FontScale { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#8-hook-pentru-componente-custom","title":"8. Hook pentru componente custom","text":"<pre><code>public class UseBreakpoint\n{\n    private readonly IBreakpointService _breakpointService;\n    private Breakpoint _current;\n    private readonly List&lt;Action&lt;Breakpoint&gt;&gt; _listeners = new();\n    private Guid _subscriptionId;\n\n    public UseBreakpoint(IBreakpointService breakpointService)\n    {\n        _breakpointService = breakpointService;\n    }\n\n    public Breakpoint Current =&gt; _current;\n\n    public bool IsXs =&gt; _current == Breakpoint.Xs;\n    public bool IsSm =&gt; _current == Breakpoint.Sm;\n    public bool IsMd =&gt; _current == Breakpoint.Md;\n    public bool IsLg =&gt; _current == Breakpoint.Lg;\n    public bool IsXl =&gt; _current == Breakpoint.Xl;\n\n    public bool IsMobile =&gt; _current &lt;= Breakpoint.Sm;\n    public bool IsTablet =&gt; _current == Breakpoint.Md;\n    public bool IsDesktop =&gt; _current &gt;= Breakpoint.Lg;\n\n    public bool IsAtLeast(Breakpoint breakpoint) =&gt; _current &gt;= breakpoint;\n    public bool IsAtMost(Breakpoint breakpoint) =&gt; _current &lt;= breakpoint;\n\n    public async Task InitializeAsync(Action&lt;Breakpoint&gt; onChange = null)\n    {\n        _current = await _breakpointService.GetBreakpoint();\n\n        if (onChange != null)\n        {\n            _listeners.Add(onChange);\n        }\n\n        var result = await _breakpointService.Subscribe(OnBreakpointChanged);\n        _subscriptionId = result.SubscriptionId;\n    }\n\n    private void OnBreakpointChanged(Breakpoint newBreakpoint)\n    {\n        _current = newBreakpoint;\n        foreach (var listener in _listeners)\n        {\n            listener?.Invoke(newBreakpoint);\n        }\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        if (_subscriptionId != Guid.Empty)\n        {\n            await _breakpointService.Unsubscribe(_subscriptionId);\n        }\n        _listeners.Clear();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#9-testare","title":"9. Testare","text":"<pre><code>[TestClass]\npublic class BreakpointServiceTests\n{\n    private Mock&lt;IJSRuntime&gt; _jsRuntime;\n    private Mock&lt;IBrowserWindowSizeProvider&gt; _windowSizeProvider;\n    private IBreakpointService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _jsRuntime = new Mock&lt;IJSRuntime&gt;();\n        _windowSizeProvider = new Mock&lt;IBrowserWindowSizeProvider&gt;();\n        _service = new BreakpointService(_jsRuntime.Object, _windowSizeProvider.Object);\n    }\n\n    [TestMethod]\n    public async Task GetBreakpoint_MobileWidth_ReturnsXs()\n    {\n        // Arrange\n        _windowSizeProvider.Setup(w =&gt; w.GetBrowserWindowSizeAsync())\n            .ReturnsAsync(new BrowserWindowSize { Width = 320, Height = 568 });\n\n        // Act\n        var breakpoint = await _service.GetBreakpoint();\n\n        // Assert\n        Assert.AreEqual(Breakpoint.Xs, breakpoint);\n    }\n\n    [TestMethod]\n    public async Task Subscribe_BreakpointChanges_NotifiesSubscriber()\n    {\n        // Arrange\n        var notifications = new List&lt;Breakpoint&gt;();\n        var result = await _service.Subscribe(bp =&gt; notifications.Add(bp));\n\n        // Simulate resize events\n        await SimulateResize(400, 600); // Xs\n        await SimulateResize(800, 600); // Md\n\n        // Assert\n        Assert.AreEqual(2, notifications.Count);\n        Assert.AreEqual(Breakpoint.Xs, notifications[0]);\n        Assert.AreEqual(Breakpoint.Md, notifications[1]);\n    }\n\n    [TestMethod]\n    public async Task IsMediaSize_CurrentBreakpoint_ReturnsCorrectResult()\n    {\n        // Arrange\n        _windowSizeProvider.Setup(w =&gt; w.GetBrowserWindowSizeAsync())\n            .ReturnsAsync(new BrowserWindowSize { Width = 1024, Height = 768 });\n\n        // Act\n        var isMd = await _service.IsMediaSize(Breakpoint.Md);\n        var isXs = await _service.IsMediaSize(Breakpoint.Xs);\n\n        // Assert\n        Assert.IsTrue(isMd);\n        Assert.IsFalse(isXs);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#10-javascript-integration","title":"10. JavaScript Integration","text":"<pre><code>// fodResizeListener.js\nwindow.fodResizeListener = {\n    observer: null,\n    listeners: new Map(),\n\n    init: function(dotNetRef, options) {\n        const throttle = options.reportRate || 100;\n        let timeout;\n\n        this.observer = new ResizeObserver(entries =&gt; {\n            clearTimeout(timeout);\n            timeout = setTimeout(() =&gt; {\n                const size = {\n                    width: window.innerWidth,\n                    height: window.innerHeight\n                };\n\n                dotNetRef.invokeMethodAsync('OnResized', size);\n            }, throttle);\n        });\n\n        this.observer.observe(document.body);\n\n        // Notificare ini\u021bial\u0103\n        if (!options.suppressInitEvent) {\n            const initialSize = {\n                width: window.innerWidth,\n                height: window.innerHeight\n            };\n            dotNetRef.invokeMethodAsync('OnResized', initialSize);\n        }\n    },\n\n    dispose: function() {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n        this.listeners.clear();\n    }\n};\n</code></pre>"},{"location":"fod/servicii/ResizeBasedService/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Dispose pattern - \u00centotdeauna dezabona\u021bi-v\u0103 de la evenimente</li> <li>Throttling - Folosi\u021bi rate limiting pentru performan\u021b\u0103</li> <li>Breakpoint only - Notifica\u021bi doar la schimbare breakpoint</li> <li>Cache breakpoint - Evita\u021bi apeluri repetate</li> <li>Mobile first - Design pornind de la dispozitive mici</li> <li>Test resize - Testa\u021bi toate breakpoint-urile</li> <li>Fallback graceful - Gestiona\u021bi lipsa suport JS</li> </ol>"},{"location":"fod/servicii/ResizeBasedService/#12-concluzie","title":"12. Concluzie","text":"<p><code>ResizeBasedService</code> \u0219i <code>BreakpointService</code> ofer\u0103 o infrastructur\u0103 robust\u0103 pentru dezvoltarea de aplica\u021bii Blazor responsive. Cu suport pentru detectare automat\u0103 a breakpoint-urilor, notific\u0103ri eficiente \u0219i integrare seamless cu componentele UI, aceste servicii faciliteaz\u0103 crearea de interfe\u021be adaptive care ofer\u0103 experien\u021be optime pe toate tipurile de dispozitive.</p>"},{"location":"fod/servicii/ScrollManager/","title":"ScrollManager","text":""},{"location":"fod/servicii/ScrollManager/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>ScrollManager</code> este serviciul responsabil pentru gestionarea opera\u021biunilor de scroll \u00een aplica\u021bii Blazor. Ofer\u0103 metode pentru derularea la elemente specifice, blocarea/deblocarea scroll-ului \u0219i navigarea \u00een cadrul paginii cu comportament personalizabil (smooth sau instant).</p>"},{"location":"fod/servicii/ScrollManager/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/ScrollManager/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IScrollManager, ScrollManager&gt;();\n\n// Asigura\u021bi-v\u0103 c\u0103 IJSRuntime este disponibil\n// (este \u00eenregistrat automat de Blazor)\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#configurare-javascript","title":"Configurare JavaScript","text":"<pre><code>// Inclus automat \u00een FodComponents.js\nwindow.fodScrollManager = {\n    scrollTo: function(selector, left, top, behavior) {\n        let element = document.querySelector(selector) || document.documentElement;\n        element.scrollTo({ left, top, behavior });\n    },\n\n    scrollIntoView: function(selector, behavior) {\n        let element = document.querySelector(selector) || document.documentElement;\n        if (element)\n            element.scrollIntoView({ behavior, block: 'center', inline: 'start' });\n    },\n\n    scrollToBottom: function(selector, behavior) {\n        let element = document.querySelector(selector);\n        if (element)\n            element.scrollTop = element.scrollHeight;\n        else\n            window.scrollTo(0, document.body.scrollHeight);\n    },\n\n    lockScroll: function(selector, lockclass) {\n        let element = document.querySelector(selector) || document.body;\n        let hasScrollBar = window.innerWidth &gt; document.body.clientWidth;\n        if (hasScrollBar) {\n            element.classList.add(lockclass);\n        }\n    },\n\n    unlockScroll: function(selector, lockclass) {\n        let element = document.querySelector(selector) || document.body;\n        element.classList.remove(lockclass);\n    }\n};\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#css-pentru-lock-scroll","title":"CSS pentru lock scroll","text":"<pre><code>/* \u00cen site.css sau component.scss */\n.scroll-locked {\n    overflow: hidden !important;\n    padding-right: 17px; /* Compensare pentru scrollbar */\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#interfata-iscrollmanager","title":"Interfa\u021ba IScrollManager","text":"<pre><code>public interface IScrollManager\n{\n    ValueTask ScrollToAsync(string id, int left, int top, ScrollBehavior scrollBehavior);\n    ValueTask ScrollIntoViewAsync(string selector, ScrollBehavior behavior);\n    ValueTask ScrollToFragmentAsync(string id, ScrollBehavior behavior);\n    ValueTask ScrollToTopAsync(string id, ScrollBehavior scrollBehavior = ScrollBehavior.Auto);\n    ValueTask ScrollToYearAsync(string elementId);\n    ValueTask ScrollToListItemAsync(string elementId);\n    ValueTask LockScrollAsync(string selector = \"body\", string cssClass = \"scroll-locked\");\n    ValueTask UnlockScrollAsync(string selector = \"body\", string cssClass = \"scroll-locked\");\n    ValueTask ScrollToBottomAsync(string elementId, ScrollBehavior scrollBehavior = ScrollBehavior.Auto);\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#enum-scrollbehavior","title":"Enum ScrollBehavior","text":"<pre><code>public enum ScrollBehavior\n{\n    Smooth,  // Derulare animat\u0103\n    Auto     // Derulare instantanee\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/ScrollManager/#scrolltoasync","title":"ScrollToAsync","text":"<p>Deruleaz\u0103 la coordonate specifice \u00een cadrul unui element.</p> <p>Parametri: - <code>id: string</code> - ID-ul elementului sau selector CSS - <code>left: int</code> - Pozi\u021bia orizontal\u0103 (pixeli) - <code>top: int</code> - Pozi\u021bia vertical\u0103 (pixeli) - <code>scrollBehavior: ScrollBehavior</code> - Tipul de anima\u021bie</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#scrollintoviewasync","title":"ScrollIntoViewAsync","text":"<p>Deruleaz\u0103 elementul \u00een zona vizibil\u0103.</p> <p>Parametri: - <code>selector: string</code> - Selector CSS pentru element - <code>behavior: ScrollBehavior</code> - Tipul de anima\u021bie</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#scrolltotopasync","title":"ScrollToTopAsync","text":"<p>Deruleaz\u0103 la \u00eenceputul elementului.</p> <p>Parametri: - <code>id: string</code> - ID-ul elementului - <code>scrollBehavior: ScrollBehavior</code> - Tipul de anima\u021bie (default: Auto)</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#scrolltobottomasync","title":"ScrollToBottomAsync","text":"<p>Deruleaz\u0103 la sf\u00e2r\u0219itul elementului sau al paginii.</p> <p>Parametri: - <code>elementId: string</code> - ID-ul elementului (null pentru pagin\u0103) - <code>scrollBehavior: ScrollBehavior</code> - Tipul de anima\u021bie</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#scrolltoyearasync","title":"ScrollToYearAsync","text":"<p>Metod\u0103 specializat\u0103 pentru FodDatePicker - deruleaz\u0103 la anul selectat.</p> <p>Parametri: - <code>elementId: string</code> - ID-ul elementului anului</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#scrolltolistitemasync","title":"ScrollToListItemAsync","text":"<p>Deruleaz\u0103 la un element dintr-o list\u0103.</p> <p>Parametri: - <code>elementId: string</code> - ID-ul elementului din list\u0103</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#lockscrollasync","title":"LockScrollAsync","text":"<p>Blocheaz\u0103 scroll-ul pe element.</p> <p>Parametri: - <code>selector: string</code> - Selector CSS (default: \"body\") - <code>cssClass: string</code> - Clasa CSS aplicat\u0103 (default: \"scroll-locked\")</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#unlockscrollasync","title":"UnlockScrollAsync","text":"<p>Deblocheaz\u0103 scroll-ul pe element.</p> <p>Parametri: - <code>selector: string</code> - Selector CSS (default: \"body\") - <code>cssClass: string</code> - Clasa CSS de eliminat (default: \"scroll-locked\")</p> <p>Returneaz\u0103: <code>ValueTask</code></p>"},{"location":"fod/servicii/ScrollManager/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/ScrollManager/#navigare-la-sectiuni","title":"Navigare la sec\u021biuni","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;FodButton @onclick=\"ScrollToSection\"&gt;Mergi la Sec\u021biune&lt;/FodButton&gt;\n\n&lt;div style=\"height: 1000px;\"&gt;&lt;!-- Spacer --&gt;&lt;/div&gt;\n\n&lt;div id=\"target-section\"&gt;\n    &lt;h2&gt;Sec\u021biune \u021aint\u0103&lt;/h2&gt;\n    &lt;p&gt;Con\u021binut sec\u021biune...&lt;/p&gt;\n&lt;/div&gt;\n\n@code {\n    private async Task ScrollToSection()\n    {\n        await ScrollManager.ScrollIntoViewAsync(\"#target-section\", ScrollBehavior.Smooth);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#scroll-la-top-cu-smooth-animation","title":"Scroll la top cu smooth animation","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;div id=\"content-container\" style=\"height: 400px; overflow-y: auto;\"&gt;\n    &lt;!-- Con\u021binut lung --&gt;\n\n    &lt;FodButton @onclick=\"BackToTop\" class=\"back-to-top\"&gt;\n        &lt;FodIcon Icon=\"arrow-up\" /&gt; Sus\n    &lt;/FodButton&gt;\n&lt;/div&gt;\n\n@code {\n    private async Task BackToTop()\n    {\n        await ScrollManager.ScrollToTopAsync(\"content-container\", ScrollBehavior.Smooth);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#modal-cu-scroll-lock","title":"Modal cu scroll lock","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;FodModal @bind-Visible=\"showModal\" OnShow=\"OnModalShow\" OnHide=\"OnModalHide\"&gt;\n    &lt;HeaderContent&gt;\n        &lt;h5&gt;Modal cu Scroll Lock&lt;/h5&gt;\n    &lt;/HeaderContent&gt;\n    &lt;BodyContent&gt;\n        &lt;p&gt;C\u00e2nd modalul este deschis, scroll-ul paginii este blocat.&lt;/p&gt;\n    &lt;/BodyContent&gt;\n&lt;/FodModal&gt;\n\n@code {\n    private bool showModal;\n\n    private async Task OnModalShow()\n    {\n        await ScrollManager.LockScrollAsync();\n    }\n\n    private async Task OnModalHide()\n    {\n        await ScrollManager.UnlockScrollAsync();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#chat-cu-auto-scroll","title":"Chat cu auto-scroll","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;div id=\"chat-container\" class=\"chat-window\"&gt;\n    @foreach (var message in messages)\n    {\n        &lt;div class=\"message\"&gt;\n            &lt;strong&gt;@message.User:&lt;/strong&gt; @message.Text\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n&lt;FodInput @bind-Value=\"newMessage\" @onkeyup=\"@OnKeyUp\" /&gt;\n\n@code {\n    private List&lt;ChatMessage&gt; messages = new();\n    private string newMessage;\n\n    private async Task SendMessage()\n    {\n        if (!string.IsNullOrWhiteSpace(newMessage))\n        {\n            messages.Add(new ChatMessage { User = \"You\", Text = newMessage });\n            newMessage = string.Empty;\n\n            // Scroll automat la ultimul mesaj\n            await ScrollManager.ScrollToBottomAsync(\"chat-container\", ScrollBehavior.Smooth);\n        }\n    }\n\n    private async Task OnKeyUp(KeyboardEventArgs e)\n    {\n        if (e.Key == \"Enter\")\n        {\n            await SendMessage();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#navigare-in-formular-lung","title":"Navigare \u00een formular lung","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;div class=\"form-navigation\"&gt;\n    &lt;FodButton @onclick=\"() =&gt; ScrollToSection('personal-info')\"&gt;Date Personale&lt;/FodButton&gt;\n    &lt;FodButton @onclick=\"() =&gt; ScrollToSection('contact-info')\"&gt;Contact&lt;/FodButton&gt;\n    &lt;FodButton @onclick=\"() =&gt; ScrollToSection('documents')\"&gt;Documente&lt;/FodButton&gt;\n&lt;/div&gt;\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;div id=\"personal-info\" class=\"form-section\"&gt;\n        &lt;h3&gt;Date Personale&lt;/h3&gt;\n        &lt;!-- C\u00e2mpuri formular --&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"contact-info\" class=\"form-section\"&gt;\n        &lt;h3&gt;Informa\u021bii Contact&lt;/h3&gt;\n        &lt;!-- C\u00e2mpuri formular --&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"documents\" class=\"form-section\"&gt;\n        &lt;h3&gt;Documente&lt;/h3&gt;\n        &lt;!-- Upload documente --&gt;\n    &lt;/div&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private async Task ScrollToSection(string sectionId)\n    {\n        await ScrollManager.ScrollIntoViewAsync($\"#{sectionId}\", ScrollBehavior.Smooth);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#componenta-cu-scroll-position-memory","title":"Componenta cu scroll position memory","text":"<pre><code>@inject IScrollManager ScrollManager\n@implements IAsyncDisposable\n\n&lt;div id=\"scrollable-list\" class=\"list-container\" @onscroll=\"SaveScrollPosition\"&gt;\n    @foreach (var item in items)\n    {\n        &lt;div class=\"list-item\"&gt;@item.Name&lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private List&lt;Item&gt; items;\n    private double savedScrollPosition;\n    private Timer scrollDebouncer;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender &amp;&amp; savedScrollPosition &gt; 0)\n        {\n            // Restaurare pozi\u021bie scroll\n            await ScrollManager.ScrollToAsync(\"scrollable-list\", 0, \n                (int)savedScrollPosition, ScrollBehavior.Auto);\n        }\n    }\n\n    private void SaveScrollPosition()\n    {\n        scrollDebouncer?.Dispose();\n        scrollDebouncer = new Timer(_ =&gt;\n        {\n            InvokeAsync(async () =&gt;\n            {\n                savedScrollPosition = await GetScrollPosition();\n            });\n        }, null, 300, Timeout.Infinite);\n    }\n\n    public async ValueTask DisposeAsync()\n    {\n        scrollDebouncer?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#integrare-cu-componente-fod","title":"Integrare cu componente FOD","text":""},{"location":"fod/servicii/ScrollManager/#cu-foddatatable","title":"Cu FodDataTable","text":"<pre><code>@inject IScrollManager ScrollManager\n\n&lt;FodDataTable Items=\"@items\" @ref=\"dataTable\"&gt;\n    &lt;!-- Coloane --&gt;\n&lt;/FodDataTable&gt;\n\n&lt;FodButton @onclick=\"ScrollToSelectedRow\"&gt;\n    Mergi la R\u00e2ndul Selectat\n&lt;/FodButton&gt;\n\n@code {\n    private FodDataTable&lt;Item&gt; dataTable;\n\n    private async Task ScrollToSelectedRow()\n    {\n        var selectedId = $\"row-{dataTable.SelectedItem?.Id}\";\n        await ScrollManager.ScrollIntoViewAsync($\"#{selectedId}\", ScrollBehavior.Smooth);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/ScrollManager/#service-wrapper-cu-error-handling","title":"Service wrapper cu error handling","text":"<pre><code>public class SafeScrollManager : IScrollManager\n{\n    private readonly IScrollManager _innerManager;\n    private readonly ILogger&lt;SafeScrollManager&gt; _logger;\n\n    public async ValueTask ScrollIntoViewAsync(string selector, ScrollBehavior behavior)\n    {\n        try\n        {\n            await _innerManager.ScrollIntoViewAsync(selector, behavior);\n        }\n        catch (JSException jsEx)\n        {\n            _logger.LogWarning(jsEx, \"Element not found: {Selector}\", selector);\n            // Fail silently - element nu exist\u0103\n        }\n    }\n\n    public async ValueTask LockScrollAsync(string selector = \"body\", string cssClass = \"scroll-locked\")\n    {\n        try\n        {\n            await _innerManager.LockScrollAsync(selector, cssClass);\n        }\n        catch (TaskCanceledException)\n        {\n            // Component disposed - ignore\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ScrollManager/#note-tehnice","title":"Note tehnice","text":"<ol> <li>JS Interop - Toate opera\u021biile folosesc JavaScript pentru manipularea DOM</li> <li>Async operations - Toate metodele returneaz\u0103 ValueTask pentru performan\u021b\u0103</li> <li>Ignore errors - UnlockScrollAsync folose\u0219te InvokeVoidAsyncIgnoreErrors</li> <li>Smooth scrolling - Suport nativ pentru anima\u021bii de derulare</li> <li>Scroll lock - Verific\u0103 existen\u021ba scrollbar \u00eenainte de blocare</li> <li>Obsolete methods - Serviciul con\u021bine metode deprecate pentru compatibilitate</li> </ol>"},{"location":"fod/servicii/ScrollManager/#bune-practici","title":"Bune practici","text":"<ol> <li>Dispose pattern - Debloca\u021bi scroll-ul \u00een Dispose pentru componente modale</li> <li>Debouncing - Folosi\u021bi debouncing pentru salvarea pozi\u021biei scroll</li> <li>Error handling - Gestiona\u021bi JSException pentru elemente lips\u0103</li> <li>Performance - Prefera\u021bi ValueTask pentru opera\u021bii frecvente</li> <li>Accessibility - Men\u021bine\u021bi focus management la scroll</li> <li>Mobile support - Testa\u021bi comportamentul pe dispozitive touch</li> </ol>"},{"location":"fod/servicii/ScrollManager/#concluzie","title":"Concluzie","text":"<p>ScrollManager ofer\u0103 control complet asupra opera\u021biunilor de scroll \u00een aplica\u021bii Blazor, facilit\u00e2nd navigarea fluid\u0103, gestionarea pozi\u021biei \u0219i blocarea scroll-ului. Cu suport pentru anima\u021bii \u0219i metode specializate pentru diverse scenarii, serviciul \u00eembun\u0103t\u0103\u021be\u0219te experien\u021ba utilizatorului \u00een aplica\u021bii complexe.</p>"},{"location":"fod/servicii/SelectableItemsService/","title":"SelectableItemsService","text":""},{"location":"fod/servicii/SelectableItemsService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>SelectableItemsService</code> este un serviciu utilitar care faciliteaz\u0103 conversia tipurilor enum \u0219i boolean \u00een liste de elemente selectabile pentru componente de tip dropdown, select sau radio. Serviciul automatizeaz\u0103 procesul de creare a elementelor SelectableItem cu etichete localizate, simplific\u00e2nd integrarea cu componentele de selec\u021bie din FOD.</p>"},{"location":"fod/servicii/SelectableItemsService/#inregistrare","title":"\u00cenregistrare","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;ISelectableItemsService, SelectableItemsService&gt;();\n\n// Servicii dependente necesare\nbuilder.Services.AddScoped&lt;IAttributeHandlerService, AttributeHandlerService&gt;();\nbuilder.Services.AddLocalization();\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#interfata-iselectableitemsservice","title":"Interfa\u021ba ISelectableItemsService","text":"<pre><code>public interface ISelectableItemsService\n{\n    bool TryGetEnumSelectableItems(Type enumType, out IEnumerable&lt;SelectableItem&gt; selectableItems);\n    bool TryGetEnumSelectableItems(Type enumType, IEnumerable&lt;object&gt; objectValues, out IEnumerable&lt;SelectableItem&gt; selectableItems);\n    bool GetBooleanSelectableItems(out IEnumerable&lt;SelectableItem&gt; selectableItems);\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#model-selectableitem","title":"Model SelectableItem","text":"<pre><code>public class SelectableItem\n{\n    public string Value { get; set; }\n    public string Text { get; set; }\n\n    public SelectableItem() { }\n\n    public SelectableItem(string value, string label)\n    {\n        Value = value;\n        Text = label;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#utilizare-de-baza","title":"Utilizare de Baz\u0103","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodSelect @bind-Value=\"selectedValue\" Label=\"Selecta\u021bi op\u021biunea\"&gt;\n    @foreach (var item in selectableItems)\n    {\n        &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    private string selectedValue;\n    private IEnumerable&lt;SelectableItem&gt; selectableItems;\n\n    protected override void OnInitialized()\n    {\n        // Ob\u021bine elemente pentru enum\n        SelectableItemsService.TryGetEnumSelectableItems(typeof(MyEnum), out selectableItems);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#exemple-de-utilizare","title":"Exemple de Utilizare","text":""},{"location":"fod/servicii/SelectableItemsService/#conversie-enum-la-selectableitems","title":"Conversie Enum la SelectableItems","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodSelect @bind-Value=\"selectedStatus\" Label=\"Status\"&gt;\n    @foreach (var item in statusItems)\n    {\n        &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    public enum OrderStatus\n    {\n        [Display(Name = \"\u00cen a\u0219teptare\")]\n        Pending,\n        [Display(Name = \"\u00cen procesare\")]\n        Processing,\n        [Display(Name = \"Finalizat\")]\n        Completed,\n        [Display(Name = \"Anulat\")]\n        Cancelled\n    }\n\n    private string selectedStatus;\n    private IEnumerable&lt;SelectableItem&gt; statusItems;\n\n    protected override void OnInitialized()\n    {\n        if (SelectableItemsService.TryGetEnumSelectableItems(typeof(OrderStatus), out var items))\n        {\n            statusItems = items;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#filtrare-valori-enum","title":"Filtrare Valori Enum","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodSelect @bind-Value=\"selectedRole\" Label=\"Rol utilizator\"&gt;\n    @foreach (var item in roleItems)\n    {\n        &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    public enum UserRole\n    {\n        [Display(Name = \"Administrator\")]\n        Admin,\n        [Display(Name = \"Moderator\")]\n        Moderator,\n        [Display(Name = \"Utilizator\")]\n        User,\n        [Display(Name = \"Oaspete\")]\n        Guest,\n        [Display(Name = \"Super Admin\")]\n        SuperAdmin\n    }\n\n    private string selectedRole;\n    private IEnumerable&lt;SelectableItem&gt; roleItems;\n\n    protected override void OnInitialized()\n    {\n        // Filtreaz\u0103 doar anumite roluri\n        var allowedRoles = new object[] { UserRole.Admin, UserRole.Moderator, UserRole.User };\n\n        if (SelectableItemsService.TryGetEnumSelectableItems(typeof(UserRole), allowedRoles, out var items))\n        {\n            roleItems = items;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#selector-boolean","title":"Selector Boolean","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodRadioGroup @bind-Value=\"isActive\" Label=\"Stare cont\"&gt;\n    @foreach (var item in booleanItems)\n    {\n        &lt;FodRadio Value=\"@item.Value\"&gt;@item.Text&lt;/FodRadio&gt;\n    }\n&lt;/FodRadioGroup&gt;\n\n@code {\n    private string isActive = \"true\";\n    private IEnumerable&lt;SelectableItem&gt; booleanItems;\n\n    protected override void OnInitialized()\n    {\n        SelectableItemsService.GetBooleanSelectableItems(out booleanItems);\n        // Returneaz\u0103: [{ Value: \"True\", Text: \"Da\" }, { Value: \"False\", Text: \"Nu\" }]\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#component-generic-cu-enum","title":"Component Generic cu Enum","text":"<pre><code>@typeparam TEnum where TEnum : struct, Enum\n@inject ISelectableItemsService SelectableItemsService\n\n&lt;FodSelect @bind-Value=\"Value\" Label=\"@Label\"&gt;\n    &lt;option value=\"\"&gt;-- Selecta\u021bi --&lt;/option&gt;\n    @foreach (var item in items)\n    {\n        &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n    }\n&lt;/FodSelect&gt;\n\n@code {\n    [Parameter] public TEnum? Value { get; set; }\n    [Parameter] public EventCallback&lt;TEnum?&gt; ValueChanged { get; set; }\n    [Parameter] public string Label { get; set; }\n\n    private IEnumerable&lt;SelectableItem&gt; items;\n\n    protected override void OnInitialized()\n    {\n        if (SelectableItemsService.TryGetEnumSelectableItems(typeof(TEnum), out var selectableItems))\n        {\n            items = selectableItems;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#dropdown-cu-multiple-enum-types","title":"Dropdown cu Multiple Enum Types","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;div class=\"filter-panel\"&gt;\n    &lt;FodSelect @bind-Value=\"selectedType\" Label=\"Tip\"&gt;\n        @foreach (var item in typeItems)\n        {\n            &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n        }\n    &lt;/FodSelect&gt;\n\n    &lt;FodSelect @bind-Value=\"selectedStatus\" Label=\"Status\"&gt;\n        @foreach (var item in statusItems)\n        {\n            &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n        }\n    &lt;/FodSelect&gt;\n\n    &lt;FodSelect @bind-Value=\"selectedPriority\" Label=\"Prioritate\"&gt;\n        @foreach (var item in priorityItems)\n        {\n            &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n        }\n    &lt;/FodSelect&gt;\n&lt;/div&gt;\n\n@code {\n    private string selectedType;\n    private string selectedStatus;\n    private string selectedPriority;\n\n    private IEnumerable&lt;SelectableItem&gt; typeItems;\n    private IEnumerable&lt;SelectableItem&gt; statusItems;\n    private IEnumerable&lt;SelectableItem&gt; priorityItems;\n\n    protected override void OnInitialized()\n    {\n        SelectableItemsService.TryGetEnumSelectableItems(typeof(RequestType), out typeItems);\n        SelectableItemsService.TryGetEnumSelectableItems(typeof(RequestStatus), out statusItems);\n        SelectableItemsService.TryGetEnumSelectableItems(typeof(Priority), out priorityItems);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#formular-dinamic","title":"Formular Dinamic","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    @foreach (var field in dynamicFields)\n    {\n        &lt;div class=\"form-field\"&gt;\n            @if (field.FieldType == typeof(bool))\n            {\n                &lt;FodRadioGroup @bind-Value=\"field.Value\" Label=\"@field.Label\"&gt;\n                    @foreach (var item in GetBooleanItems())\n                    {\n                        &lt;FodRadio Value=\"@item.Value\"&gt;@item.Text&lt;/FodRadio&gt;\n                    }\n                &lt;/FodRadioGroup&gt;\n            }\n            else if (field.FieldType.IsEnum)\n            {\n                &lt;FodSelect @bind-Value=\"field.Value\" Label=\"@field.Label\"&gt;\n                    @foreach (var item in GetEnumItems(field.FieldType))\n                    {\n                        &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n                    }\n                &lt;/FodSelect&gt;\n            }\n        &lt;/div&gt;\n    }\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private DynamicFormModel model = new();\n    private List&lt;DynamicField&gt; dynamicFields = new();\n\n    private IEnumerable&lt;SelectableItem&gt; GetBooleanItems()\n    {\n        SelectableItemsService.GetBooleanSelectableItems(out var items);\n        return items;\n    }\n\n    private IEnumerable&lt;SelectableItem&gt; GetEnumItems(Type enumType)\n    {\n        if (SelectableItemsService.TryGetEnumSelectableItems(enumType, out var items))\n        {\n            return items;\n        }\n        return Enumerable.Empty&lt;SelectableItem&gt;();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#conversie-cu-cache","title":"Conversie cu Cache","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n@code {\n    private static readonly Dictionary&lt;Type, IEnumerable&lt;SelectableItem&gt;&gt; _enumCache = new();\n\n    private IEnumerable&lt;SelectableItem&gt; GetCachedEnumItems&lt;TEnum&gt;() where TEnum : struct, Enum\n    {\n        var type = typeof(TEnum);\n\n        if (!_enumCache.ContainsKey(type))\n        {\n            if (SelectableItemsService.TryGetEnumSelectableItems(type, out var items))\n            {\n                _enumCache[type] = items.ToList(); // ToList pentru a materializa\n            }\n        }\n\n        return _enumCache.GetValueOrDefault(type) ?? Enumerable.Empty&lt;SelectableItem&gt;();\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#componente-cu-validare","title":"Componente cu Validare","text":"<pre><code>@inject ISelectableItemsService SelectableItemsService\n\n&lt;EditForm Model=\"@model\" OnValidSubmit=\"@HandleSubmit\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;@Label&lt;/label&gt;\n        &lt;InputSelect @bind-Value=\"model.EnumValue\" class=\"form-control\"&gt;\n            &lt;option value=\"\"&gt;-- Selecta\u021bi --&lt;/option&gt;\n            @foreach (var item in enumItems)\n            {\n                &lt;option value=\"@item.Value\"&gt;@item.Text&lt;/option&gt;\n            }\n        &lt;/InputSelect&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; model.EnumValue)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\"&gt;Salveaz\u0103&lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    [Parameter] public string Label { get; set; }\n\n    private Model model = new();\n    private IEnumerable&lt;SelectableItem&gt; enumItems;\n\n    protected override void OnInitialized()\n    {\n        SelectableItemsService.TryGetEnumSelectableItems(typeof(MyEnum), out enumItems);\n    }\n\n    private class Model\n    {\n        [Required(ErrorMessage = \"C\u00e2mpul este obligatoriu\")]\n        public string EnumValue { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#integrare-cu-attributehandlerservice","title":"Integrare cu AttributeHandlerService","text":"<p>Serviciul folose\u0219te <code>IAttributeHandlerService</code> pentru a ob\u021bine etichete localizate:</p> <pre><code>// Enum cu atribute Display\npublic enum DocumentType\n{\n    [Display(Name = \"Card de identitate\")]\n    IdentityCard,\n\n    [Display(Name = \"Pa\u0219aport\")]\n    Passport,\n\n    [Display(Name = \"Permis de conducere\")]\n    DrivingLicense\n}\n\n// Serviciul va returna:\n// - Value: \"IdentityCard\", Text: \"Card de identitate\"\n// - Value: \"Passport\", Text: \"Pa\u0219aport\"\n// - Value: \"DrivingLicense\", Text: \"Permis de conducere\"\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#localizare","title":"Localizare","text":"<p>Pentru valorile boolean, serviciul folose\u0219te localizare automat\u0103:</p> <pre><code>// Resurse de localizare\n// ro: Yes = \"Da\", No = \"Nu\"\n// en: Yes = \"Yes\", No = \"No\"\n// ru: Yes = \"\u0414\u0430\", No = \"\u041d\u0435\u0442\"\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#best-practices","title":"Best Practices","text":"<ol> <li>Cache rezultatele - Pentru enum-uri folosite frecvent</li> <li>Validare tip - Verifica\u021bi c\u0103 tipul este enum \u00eenainte de conversie</li> <li>Filtrare valori - Folosi\u021bi overload-ul cu <code>objectValues</code> pentru subset</li> <li>Localizare - Folosi\u021bi atribute Display pentru etichete</li> <li>Gestionare null - Ad\u0103uga\u021bi op\u021biune goal\u0103 pentru valori nullable</li> </ol>"},{"location":"fod/servicii/SelectableItemsService/#cazuri-de-utilizare","title":"Cazuri de Utilizare","text":""},{"location":"fod/servicii/SelectableItemsService/#1-dropdown-uri-in-formulare","title":"1. Dropdown-uri \u00een formulare","text":"<pre><code>// Pentru selectarea tipului de document, status, rol, etc.\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#2-filtre-in-tabele","title":"2. Filtre \u00een tabele","text":"<pre><code>// Pentru filtrarea datelor dup\u0103 enum values\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#3-radio-buttons-pentru-boolean","title":"3. Radio buttons pentru boolean","text":"<pre><code>// Pentru \u00eentreb\u0103ri Da/Nu cu localizare automat\u0103\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#4-componente-generice","title":"4. Componente generice","text":"<pre><code>// Pentru componente care accept\u0103 orice tip enum\n</code></pre>"},{"location":"fod/servicii/SelectableItemsService/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/servicii/SelectableItemsService/#trygetenumselectableitems-returneaza-false","title":"TryGetEnumSelectableItems returneaz\u0103 false","text":"<ul> <li>Verifica\u021bi c\u0103 tipul pasat este \u00eentr-adev\u0103r un enum</li> <li>Verifica\u021bi c\u0103 enum-ul are valori definite</li> </ul>"},{"location":"fod/servicii/SelectableItemsService/#etichetele-nu-sunt-localizate","title":"Etichetele nu sunt localizate","text":"<ul> <li>Verifica\u021bi c\u0103 AttributeHandlerService este \u00eenregistrat</li> <li>Verifica\u021bi atributele Display pe enum</li> </ul>"},{"location":"fod/servicii/SelectableItemsService/#valorile-boolean-nu-sunt-traduse","title":"Valorile boolean nu sunt traduse","text":"<ul> <li>Verifica\u021bi c\u0103 localizarea este configurat\u0103 corect</li> <li>Verifica\u021bi resursele de localizare pentru \"Yes\" \u0219i \"No\"</li> </ul>"},{"location":"fod/servicii/SelectableItemsService/#concluzie","title":"Concluzie","text":"<p>SelectableItemsService simplific\u0103 semnificativ lucrul cu liste de selec\u021bie \u00een aplica\u021biile Blazor, oferind conversie automat\u0103 pentru enum-uri \u0219i boolean-uri cu suport complet pentru localizare. Este esen\u021bial pentru aplica\u021bii care necesit\u0103 dropdown-uri \u0219i selec\u021bii dinamice cu etichete localizate.</p>"},{"location":"fod/servicii/ServiceRequestStatisticsService/","title":"ServiceRequestStatisticsService","text":""},{"location":"fod/servicii/ServiceRequestStatisticsService/#documentatie-pentru-serviciul-servicerequeststatisticsservice","title":"Documenta\u021bie pentru serviciul ServiceRequestStatisticsService","text":""},{"location":"fod/servicii/ServiceRequestStatisticsService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ServiceRequestStatisticsService</code> este un serviciu pentru ob\u021binerea statisticilor detaliate despre cererile de servicii din sistemul FOD. Ofer\u0103 date agregate pentru analiz\u0103, raportare \u0219i monitorizare a activit\u0103\u021bii sistemului.</p> <p>Caracteristici principale: - Ob\u021binere statistici filtrate pe perioad\u0103 - Date agregate pe multiple dimensiuni - Statistici pentru toate st\u0103rile cererilor - Suport pentru diferite tipuri de livrare (MDelivery) - Statistici separate pentru frontoffice/backoffice - Integrare cu componenta FodServiceRequestsStatistics</p>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;IServiceRequestStatisticsService, ServiceRequestStatisticsService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n\n// Pentru implementare server-side cu acces direct\nbuilder.Services.AddScoped&lt;IServiceRequestStatisticsService, ServerServiceRequestStatisticsService&gt;();\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#3-interfata-iservicerequeststatisticsservice","title":"3. Interfa\u021ba IServiceRequestStatisticsService","text":"<pre><code>public interface IServiceRequestStatisticsService\n{\n    Task&lt;ServiceRequestStatisticsModel&gt; Get(ServiceRequestStatisticsFilter filter);\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Get</code> <code>ServiceRequestStatisticsFilter filter</code> <code>Task&lt;ServiceRequestStatisticsModel&gt;</code> Ob\u021bine statistici filtrate"},{"location":"fod/servicii/ServiceRequestStatisticsService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/ServiceRequestStatisticsService/#servicerequeststatisticsfilter","title":"ServiceRequestStatisticsFilter","text":"<pre><code>public class ServiceRequestStatisticsFilter\n{\n    public DateTime? FromDate { get; set; }\n    public DateTime? ToDate { get; set; }\n    public string ServiceCode { get; set; }\n    public string OfficeCode { get; set; }\n    public string RequestorType { get; set; }\n    public bool IncludeDeleted { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#servicerequeststatisticsmodel","title":"ServiceRequestStatisticsModel","text":"<pre><code>public class ServiceRequestStatisticsModel\n{\n    // Statistici generale\n    public int TotalServiceRequests { get; set; }\n    public int DraftServiceRequests { get; set; }\n    public int NewServiceRequests { get; set; }\n    public int PaidServiceRequests { get; set; }\n    public int FreeServiceRequests { get; set; }\n    public int InProgressServiceRequests { get; set; }\n    public int ProcessedServiceRequests { get; set; }\n    public int IssuedServiceRequests { get; set; }\n    public int RejectedServiceRequests { get; set; }\n    public int SuspendedServiceRequests { get; set; }\n\n    // Statistici confirmare\n    public int ConfirmedServiceRequests { get; set; }\n    public int ConfirmedServiceRequestsWithResponseOnPaper { get; set; }\n    public int ConfirmedServiceRequestsWithResponseOnElectronicDocument { get; set; }\n\n    // Statistici MDelivery\n    public int NewMDeliveryServiceRequets { get; set; }\n    public int ConfirmedMDeliveryServiceRequests { get; set; }\n    public int ProcessedMdeliveryServiceRequests { get; set; }\n    public int IssuedMDeliveryServiceRequests { get; set; }\n\n    // Statistici canale\n    public int FrontofficeConfirmedServiceRequests { get; set; }\n    public int BackofficeConfirmedServiceRequests { get; set; }\n\n    // Statistici apostilare\n    public int ConfirmedApostillationRequests { get; set; }\n\n    // Statistici financiare\n    public decimal TotalRevenue { get; set; }\n    public decimal AverageServiceCost { get; set; }\n\n    // Statistici temporale\n    public double AverageProcessingTimeDays { get; set; }\n    public DateTime? LastRequestDate { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/ServiceRequestStatisticsService/#dashboard-statistici-generale","title":"Dashboard statistici generale","text":"<pre><code>@page \"/admin/statistici\"\n@inject IServiceRequestStatisticsService StatisticsService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Statistici cereri servicii\n    &lt;/FodText&gt;\n\n    &lt;!-- Filtre --&gt;\n    &lt;FodCard Class=\"mb-4\"&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"2\" AlignItems=\"Align.End\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                    &lt;FodDatePicker @bind-Date=\"filter.FromDate\" \n                                   Label=\"De la data\"\n                                   MaxDate=\"DateTime.Now\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                    &lt;FodDatePicker @bind-Date=\"filter.ToDate\" \n                                   Label=\"P\u00e2n\u0103 la data\"\n                                   MaxDate=\"DateTime.Now\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                    &lt;FodSelect @bind-Value=\"filter.ServiceCode\" \n                               Label=\"Serviciu\"\n                               Items=\"availableServices\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                    &lt;FodButton OnClick=\"LoadStatistics\" \n                               Color=\"FodColor.Primary\"\n                               FullWidth=\"true\"&gt;\n                        Actualizeaz\u0103\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n\n    @if (isLoading)\n    {\n        &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n    }\n    else if (statistics != null)\n    {\n        &lt;!-- Cards cu statistici principale --&gt;\n        &lt;FodGrid Container=\"true\" Spacing=\"3\" Class=\"mb-4\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;StatCard Title=\"Total cereri\" \n                          Value=\"@statistics.TotalServiceRequests\"\n                          Icon=\"@FodIcons.Material.Filled.Assignment\"\n                          Color=\"FodColor.Primary\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;StatCard Title=\"\u00cen procesare\" \n                          Value=\"@statistics.InProgressServiceRequests\"\n                          Icon=\"@FodIcons.Material.Filled.Pending\"\n                          Color=\"FodColor.Warning\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;StatCard Title=\"Finalizate\" \n                          Value=\"@statistics.IssuedServiceRequests\"\n                          Icon=\"@FodIcons.Material.Filled.CheckCircle\"\n                          Color=\"FodColor.Success\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" sm=\"6\" md=\"3\"&gt;\n                &lt;StatCard Title=\"Respinse\" \n                          Value=\"@statistics.RejectedServiceRequests\"\n                          Icon=\"@FodIcons.Material.Filled.Cancel\"\n                          Color=\"FodColor.Error\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;!-- Detalii statistici --&gt;\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;StatusDistributionChart Statistics=\"@statistics\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;DeliveryMethodChart Statistics=\"@statistics\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;!-- Tabel detaliat --&gt;\n        &lt;FodCard Class=\"mt-4\"&gt;\n            &lt;FodCardContent&gt;\n                &lt;FodServiceRequestsStatistics /&gt;\n            &lt;/FodCardContent&gt;\n        &lt;/FodCard&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    private ServiceRequestStatisticsFilter filter = new()\n    {\n        FromDate = DateTime.Now.AddMonths(-1),\n        ToDate = DateTime.Now\n    };\n\n    private ServiceRequestStatisticsModel statistics;\n    private bool isLoading;\n    private List&lt;SelectableItem&gt; availableServices = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadStatistics();\n    }\n\n    private async Task LoadStatistics()\n    {\n        isLoading = true;\n        try\n        {\n            statistics = await StatisticsService.Get(filter);\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#widget-pentru-dashboard-principal","title":"Widget pentru dashboard principal","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Statistici rapide - Ultima s\u0103pt\u0103m\u00e2n\u0103\n        &lt;/FodText&gt;\n\n        @if (weeklyStats == null)\n        {\n            &lt;FodSkeleton Type=\"SkeletonType.Rectangle\" Height=\"200\" /&gt;\n        }\n        else\n        {\n            &lt;FodGrid Container=\"true\" Spacing=\"2\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\"&gt;\n                    &lt;div class=\"text-center\"&gt;\n                        &lt;FodText Typo=\"Typo.h3\" Color=\"FodColor.Primary\"&gt;\n                            @weeklyStats.NewServiceRequests\n                        &lt;/FodText&gt;\n                        &lt;FodText Typo=\"Typo.caption\"&gt;Cereri noi&lt;/FodText&gt;\n                    &lt;/div&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"6\"&gt;\n                    &lt;div class=\"text-center\"&gt;\n                        &lt;FodText Typo=\"Typo.h3\" Color=\"FodColor.Success\"&gt;\n                            @weeklyStats.IssuedServiceRequests\n                        &lt;/FodText&gt;\n                        &lt;FodText Typo=\"Typo.caption\"&gt;Finalizate&lt;/FodText&gt;\n                    &lt;/div&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            &lt;FodDivider Class=\"my-3\" /&gt;\n\n            &lt;FodText Typo=\"Typo.body2\"&gt;\n                Timp mediu procesare: @weeklyStats.AverageProcessingTimeDays.ToString(\"F1\") zile\n            &lt;/FodText&gt;\n\n            &lt;FodButton Variant=\"FodVariant.Text\" \n                       OnClick=\"ViewFullStatistics\"\n                       Class=\"mt-2\"&gt;\n                Vezi toate statisticile\n            &lt;/FodButton&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    [Inject] private IServiceRequestStatisticsService StatisticsService { get; set; }\n\n    private ServiceRequestStatisticsModel weeklyStats;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var filter = new ServiceRequestStatisticsFilter\n        {\n            FromDate = DateTime.Now.AddDays(-7),\n            ToDate = DateTime.Now\n        };\n\n        weeklyStats = await StatisticsService.Get(filter);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#raport-lunar-automatizat","title":"Raport lunar automatizat","text":"<pre><code>@inject IServiceRequestStatisticsService StatisticsService\n@inject IPrintingService PrintingService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h5\" GutterBottom=\"true\"&gt;\n            Raport lunar - @currentMonth.ToString(\"MMMM yyyy\")\n        &lt;/FodText&gt;\n\n        @if (monthlyReport != null)\n        {\n            &lt;div id=\"monthly-report\"&gt;\n                &lt;!-- Header raport --&gt;\n                &lt;div class=\"report-header mb-4\"&gt;\n                    &lt;FodText Typo=\"Typo.subtitle1\"&gt;\n                        Perioada: @filter.FromDate?.ToString(\"dd.MM.yyyy\") - \n                        @filter.ToDate?.ToString(\"dd.MM.yyyy\")\n                    &lt;/FodText&gt;\n                &lt;/div&gt;\n\n                &lt;!-- Sumar executiv --&gt;\n                &lt;FodPaper Elevation=\"1\" Class=\"p-3 mb-4\"&gt;\n                    &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                        Sumar executiv\n                    &lt;/FodText&gt;\n\n                    &lt;FodList Dense=\"true\"&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText&gt;Total cereri procesate:&lt;/FodText&gt;\n                            &lt;FodText Class=\"ms-auto font-weight-bold\"&gt;\n                                @monthlyReport.TotalServiceRequests\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText&gt;Rata de finalizare:&lt;/FodText&gt;\n                            &lt;FodText Class=\"ms-auto font-weight-bold\"&gt;\n                                @CalculateCompletionRate()%\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                        &lt;FodListItem&gt;\n                            &lt;FodText&gt;Venituri totale:&lt;/FodText&gt;\n                            &lt;FodText Class=\"ms-auto font-weight-bold\"&gt;\n                                @monthlyReport.TotalRevenue.ToString(\"N2\") MDL\n                            &lt;/FodText&gt;\n                        &lt;/FodListItem&gt;\n                    &lt;/FodList&gt;\n                &lt;/FodPaper&gt;\n\n                &lt;!-- Statistici pe servicii --&gt;\n                &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                    Distribu\u021bie pe tipuri de servicii\n                &lt;/FodText&gt;\n\n                &lt;FodDataTable Items=\"serviceBreakdown\" Dense=\"true\"&gt;\n                    &lt;HeaderContent&gt;\n                        &lt;FodTHeadRow&gt;\n                            &lt;FodTh&gt;Serviciu&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Cereri&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Finalizate&lt;/FodTh&gt;\n                            &lt;FodTh&gt;\u00cen procesare&lt;/FodTh&gt;\n                            &lt;FodTh&gt;Respinse&lt;/FodTh&gt;\n                        &lt;/FodTHeadRow&gt;\n                    &lt;/HeaderContent&gt;\n                    &lt;RowTemplate&gt;\n                        &lt;FodTr&gt;\n                            &lt;FodTd&gt;@context.ServiceName&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Total&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Completed&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.InProgress&lt;/FodTd&gt;\n                            &lt;FodTd&gt;@context.Rejected&lt;/FodTd&gt;\n                        &lt;/FodTr&gt;\n                    &lt;/RowTemplate&gt;\n                &lt;/FodDataTable&gt;\n            &lt;/div&gt;\n        }\n\n        &lt;div class=\"mt-4\"&gt;\n            &lt;FodButton OnClick=\"PrintReport\" \n                       StartIcon=\"@FodIcons.Material.Filled.Print\"&gt;\n                Printeaz\u0103 raport\n            &lt;/FodButton&gt;\n            &lt;FodButton OnClick=\"ExportExcel\" \n                       StartIcon=\"@FodIcons.Material.Filled.GetApp\"\n                       Class=\"ms-2\"&gt;\n                Export Excel\n            &lt;/FodButton&gt;\n            &lt;FodButton OnClick=\"EmailReport\" \n                       StartIcon=\"@FodIcons.Material.Filled.Email\"\n                       Class=\"ms-2\"&gt;\n                Trimite pe email\n            &lt;/FodButton&gt;\n        &lt;/div&gt;\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DateTime currentMonth = DateTime.Now;\n    private ServiceRequestStatisticsFilter filter;\n    private ServiceRequestStatisticsModel monthlyReport;\n    private List&lt;ServiceBreakdown&gt; serviceBreakdown = new();\n\n    protected override async Task OnInitializedAsync()\n    {\n        filter = new ServiceRequestStatisticsFilter\n        {\n            FromDate = new DateTime(currentMonth.Year, currentMonth.Month, 1),\n            ToDate = currentMonth.AddMonths(1).AddDays(-1)\n        };\n\n        monthlyReport = await StatisticsService.Get(filter);\n        // Load service breakdown data\n    }\n\n    private double CalculateCompletionRate()\n    {\n        if (monthlyReport.TotalServiceRequests == 0) return 0;\n        return Math.Round((double)monthlyReport.IssuedServiceRequests / \n                         monthlyReport.TotalServiceRequests * 100, 2);\n    }\n\n    private async Task PrintReport()\n    {\n        await PrintingService.PrintAsync(new PrintOptions\n        {\n            ElementId = \"monthly-report\",\n            PageTitle = $\"Raport lunar - {currentMonth:MMMM yyyy}\"\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#comparatie-perioade","title":"Compara\u021bie perioade","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Compara\u021bie perioade\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"2\" Class=\"mb-3\"&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodDateRangePicker @bind-DateRange=\"period1\" \n                                    Label=\"Perioada 1\" /&gt;\n            &lt;/FodGrid&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"6\"&gt;\n                &lt;FodDateRangePicker @bind-DateRange=\"period2\" \n                                    Label=\"Perioada 2\" /&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n\n        &lt;FodButton OnClick=\"ComparePerioads\" \n                   Color=\"FodColor.Primary\"\n                   Disabled=\"@isComparing\"&gt;\n            Compar\u0103\n        &lt;/FodButton&gt;\n\n        @if (comparison != null)\n        {\n            &lt;div class=\"mt-4\"&gt;\n                &lt;ComparisonTable Period1=\"@comparison.Period1\" \n                                 Period2=\"@comparison.Period2\" /&gt;\n\n                &lt;!-- Grafic comparativ --&gt;\n                &lt;div class=\"mt-3\"&gt;\n                    &lt;ComparisonChart Data=\"@comparison\" /&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private DateRange period1 = new()\n    {\n        Start = DateTime.Now.AddMonths(-2),\n        End = DateTime.Now.AddMonths(-1)\n    };\n\n    private DateRange period2 = new()\n    {\n        Start = DateTime.Now.AddMonths(-1),\n        End = DateTime.Now\n    };\n\n    private PeriodComparison comparison;\n    private bool isComparing;\n\n    private async Task ComparePerioads()\n    {\n        isComparing = true;\n\n        var stats1 = await StatisticsService.Get(new ServiceRequestStatisticsFilter\n        {\n            FromDate = period1.Start,\n            ToDate = period1.End\n        });\n\n        var stats2 = await StatisticsService.Get(new ServiceRequestStatisticsFilter\n        {\n            FromDate = period2.Start,\n            ToDate = period2.End\n        });\n\n        comparison = new PeriodComparison\n        {\n            Period1 = stats1,\n            Period2 = stats2\n        };\n\n        isComparing = false;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#7-cache-si-performanta","title":"7. Cache \u0219i Performan\u021b\u0103","text":"<pre><code>public class CachedServiceRequestStatisticsService : IServiceRequestStatisticsService\n{\n    private readonly IServiceRequestStatisticsService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedServiceRequestStatisticsService&gt; _logger;\n\n    public async Task&lt;ServiceRequestStatisticsModel&gt; Get(ServiceRequestStatisticsFilter filter)\n    {\n        var cacheKey = GenerateCacheKey(filter);\n\n        // Cache mai lung pentru date istorice\n        var cacheExpiration = filter.ToDate &lt; DateTime.Today \n            ? TimeSpan.FromHours(24) \n            : TimeSpan.FromMinutes(15);\n\n        if (_cache.TryGetValue&lt;ServiceRequestStatisticsModel&gt;(cacheKey, out var cached))\n        {\n            _logger.LogDebug(\"Returnare statistici din cache\");\n            return cached;\n        }\n\n        var result = await _innerService.Get(filter);\n\n        _cache.Set(cacheKey, result, cacheExpiration);\n\n        return result;\n    }\n\n    private string GenerateCacheKey(ServiceRequestStatisticsFilter filter)\n    {\n        return $\"Stats_{filter.FromDate:yyyyMMdd}_{filter.ToDate:yyyyMMdd}_\" +\n               $\"{filter.ServiceCode}_{filter.OfficeCode}_{filter.RequestorType}\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#8-agregare-si-analiza","title":"8. Agregare \u0219i Analiz\u0103","text":"<pre><code>public class EnhancedServiceRequestStatisticsService : IServiceRequestStatisticsService\n{\n    private readonly IServiceRequestStatisticsService _baseService;\n\n    public async Task&lt;ServiceRequestStatisticsModel&gt; Get(ServiceRequestStatisticsFilter filter)\n    {\n        var stats = await _baseService.Get(filter);\n\n        // Calculeaz\u0103 metrici adi\u021bionale\n        EnhanceStatistics(stats, filter);\n\n        return stats;\n    }\n\n    private void EnhanceStatistics(ServiceRequestStatisticsModel stats, \n                                   ServiceRequestStatisticsFilter filter)\n    {\n        // Rata de succes\n        if (stats.TotalServiceRequests &gt; 0)\n        {\n            stats.SuccessRate = (double)stats.IssuedServiceRequests / \n                               stats.TotalServiceRequests * 100;\n        }\n\n        // Distribu\u021bie canale\n        var totalConfirmed = stats.FrontofficeConfirmedServiceRequests + \n                            stats.BackofficeConfirmedServiceRequests;\n\n        if (totalConfirmed &gt; 0)\n        {\n            stats.FrontofficePercentage = (double)stats.FrontofficeConfirmedServiceRequests / \n                                         totalConfirmed * 100;\n        }\n\n        // Tendin\u021be\n        if (filter.FromDate.HasValue &amp;&amp; filter.ToDate.HasValue)\n        {\n            var days = (filter.ToDate.Value - filter.FromDate.Value).TotalDays;\n            stats.DailyAverage = stats.TotalServiceRequests / Math.Max(1, days);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#9-export-si-raportare","title":"9. Export \u0219i Raportare","text":"<pre><code>public class ReportingServiceRequestStatisticsService : IServiceRequestStatisticsService\n{\n    private readonly IServiceRequestStatisticsService _innerService;\n    private readonly IReportGenerator _reportGenerator;\n\n    public async Task&lt;ServiceRequestStatisticsModel&gt; Get(ServiceRequestStatisticsFilter filter)\n    {\n        var stats = await _innerService.Get(filter);\n\n        // Generare automat\u0103 rapoarte pentru manageri\n        if (ShouldGenerateReport(filter))\n        {\n            await GenerateAndSendReport(stats, filter);\n        }\n\n        return stats;\n    }\n\n    private async Task GenerateAndSendReport(ServiceRequestStatisticsModel stats, \n                                            ServiceRequestStatisticsFilter filter)\n    {\n        var report = await _reportGenerator.GenerateStatisticsReport(stats, filter);\n\n        // Trimite c\u0103tre manageri\n        await EmailService.SendAsync(new EmailMessage\n        {\n            To = GetManagerEmails(),\n            Subject = $\"Raport statistici {filter.FromDate:dd.MM.yyyy} - {filter.ToDate:dd.MM.yyyy}\",\n            Body = \"G\u0103si\u021bi ata\u0219at raportul de statistici pentru perioada selectat\u0103.\",\n            Attachments = new[] { report }\n        });\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#10-monitorizare-real-time","title":"10. Monitorizare Real-time","text":"<pre><code>public class RealTimeStatisticsService : IServiceRequestStatisticsService\n{\n    private readonly IServiceRequestStatisticsService _innerService;\n    private readonly IHubContext&lt;StatisticsHub&gt; _hubContext;\n    private readonly Timer _refreshTimer;\n\n    public RealTimeStatisticsService(/* dependencies */)\n    {\n        // Refresh automat la fiecare 5 minute\n        _refreshTimer = new Timer(async _ =&gt; await BroadcastStatistics(), \n            null, TimeSpan.Zero, TimeSpan.FromMinutes(5));\n    }\n\n    private async Task BroadcastStatistics()\n    {\n        var todayStats = await Get(new ServiceRequestStatisticsFilter\n        {\n            FromDate = DateTime.Today,\n            ToDate = DateTime.Now\n        });\n\n        await _hubContext.Clients.All.SendAsync(\"StatisticsUpdate\", todayStats);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#11-validare-si-securitate","title":"11. Validare \u0219i Securitate","text":"<pre><code>public class SecureServiceRequestStatisticsService : IServiceRequestStatisticsService\n{\n    private readonly IServiceRequestStatisticsService _innerService;\n    private readonly IAuthorizationService _authorizationService;\n    private readonly IHttpContextAccessor _httpContextAccessor;\n\n    public async Task&lt;ServiceRequestStatisticsModel&gt; Get(ServiceRequestStatisticsFilter filter)\n    {\n        var user = _httpContextAccessor.HttpContext?.User;\n\n        // Verificare permisiuni\n        if (!await _authorizationService.AuthorizeAsync(user, \"ViewStatistics\"))\n        {\n            throw new UnauthorizedException(\"Nu ave\u021bi permisiunea de a vizualiza statistici\");\n        }\n\n        // Filtrare pe baza rolului\n        if (user.IsInRole(\"OfficeManager\"))\n        {\n            // Manager poate vedea doar statistici pentru biroul s\u0103u\n            filter.OfficeCode = user.FindFirst(\"OfficeCode\")?.Value;\n        }\n\n        // Validare interval\n        if (filter.FromDate &gt; filter.ToDate)\n        {\n            throw new ValidationException(\"Data de \u00eenceput nu poate fi dup\u0103 data de sf\u00e2r\u0219it\");\n        }\n\n        // Limitare interval pentru performan\u021b\u0103\n        if (filter.FromDate.HasValue &amp;&amp; filter.ToDate.HasValue)\n        {\n            var days = (filter.ToDate.Value - filter.FromDate.Value).TotalDays;\n            if (days &gt; 365)\n            {\n                throw new ValidationException(\"Intervalul maxim permis este de 1 an\");\n            }\n        }\n\n        return await _innerService.Get(filter);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#12-testare","title":"12. Testare","text":"<pre><code>[TestClass]\npublic class ServiceRequestStatisticsServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IServiceRequestStatisticsService _service;\n\n    [TestMethod]\n    public async Task Get_ValidFilter_ReturnsStatistics()\n    {\n        // Arrange\n        var filter = new ServiceRequestStatisticsFilter\n        {\n            FromDate = DateTime.Today.AddDays(-30),\n            ToDate = DateTime.Today\n        };\n\n        var expectedStats = new ServiceRequestStatisticsModel\n        {\n            TotalServiceRequests = 100,\n            NewServiceRequests = 20,\n            InProgressServiceRequests = 30,\n            IssuedServiceRequests = 45,\n            RejectedServiceRequests = 5\n        };\n\n        SetupHttpResponse(expectedStats);\n\n        // Act\n        var result = await _service.Get(filter);\n\n        // Assert\n        Assert.AreEqual(100, result.TotalServiceRequests);\n        Assert.AreEqual(45, result.IssuedServiceRequests);\n    }\n\n    [TestMethod]\n    public async Task Get_EmptyFilter_ReturnsAllTimeStatistics()\n    {\n        // Arrange\n        var filter = new ServiceRequestStatisticsFilter();\n\n        // Act\n        var result = await _service.Get(filter);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.IsTrue(result.TotalServiceRequests &gt;= 0);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Cache inteligent - Cache mai lung pentru date istorice</li> <li>Limite de timp - Limita\u021bi intervalele pentru performan\u021b\u0103</li> <li>Agregare eficient\u0103 - Pre-calcula\u021bi statistici comune</li> <li>Securitate pe rol - Filtra\u021bi date bazat pe permisiuni</li> <li>Monitorizare - Urm\u0103ri\u021bi performan\u021ba query-urilor</li> <li>Export optimizat - Genera\u021bi rapoarte asincron pentru date mari</li> </ol>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#14-integrare-cu-dashboard","title":"14. Integrare cu Dashboard","text":"<pre><code>@inject IServiceRequestStatisticsService StatisticsService\n\n&lt;AdminDashboard&gt;\n    &lt;StatisticsWidgets&gt;\n        &lt;TodayStatsWidget /&gt;\n        &lt;WeeklyTrendWidget /&gt;\n        &lt;ServiceDistributionWidget /&gt;\n        &lt;PerformanceMetricsWidget /&gt;\n    &lt;/StatisticsWidgets&gt;\n\n    &lt;QuickActions&gt;\n        &lt;FodButton OnClick=\"GenerateMonthlyReport\"&gt;\n            Genereaz\u0103 raport lunar\n        &lt;/FodButton&gt;\n        &lt;FodButton OnClick=\"ExportStatistics\"&gt;\n            Export statistici\n        &lt;/FodButton&gt;\n    &lt;/QuickActions&gt;\n&lt;/AdminDashboard&gt;\n\n@code {\n    protected override async Task OnInitializedAsync()\n    {\n        // Pre-load statistici pentru widgets\n        var todayFilter = new ServiceRequestStatisticsFilter\n        {\n            FromDate = DateTime.Today,\n            ToDate = DateTime.Now\n        };\n\n        TodayStats = await StatisticsService.Get(todayFilter);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatisticsService/#15-concluzie","title":"15. Concluzie","text":"<p><code>ServiceRequestStatisticsService</code> ofer\u0103 o interfa\u021b\u0103 complet\u0103 pentru analiza \u0219i monitorizarea activit\u0103\u021bii sistemului FOD. Cu suport pentru filtrare flexibil\u0103, cache optimizat \u0219i posibilit\u0103\u021bi extinse de raportare, serviciul este esen\u021bial pentru managementul eficient al serviciilor guvernamentale digitale.</p>"},{"location":"fod/servicii/ServiceRequestStatusService/","title":"ServiceRequestStatusService","text":""},{"location":"fod/servicii/ServiceRequestStatusService/#documentatie-pentru-serviciul-servicerequeststatusservice","title":"Documenta\u021bie pentru serviciul ServiceRequestStatusService","text":""},{"location":"fod/servicii/ServiceRequestStatusService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ServiceRequestStatusService</code> este un serviciu specializat pentru verificarea statusului cererilor de servicii individuale. Spre deosebire de <code>RequestStatusService</code> care poate returna mai multe rezultate, acest serviciu este optimizat pentru verificarea unei singure cereri cu informa\u021bii detaliate.</p> <p>Caracteristici principale: - Verificare status pentru o cerere specific\u0103 - Returnare informa\u021bii detaliate despre cerere - Integrare cu componenta FodServiceRequestStatus - Comunicare HTTP cu API-ul de verificare - Suport pentru verificare prin multiple identificatori</p>"},{"location":"fod/servicii/ServiceRequestStatusService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;IServiceRequestStatusService, ServiceRequestStatusService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n    client.Timeout = TimeSpan.FromSeconds(30);\n});\n\n// Pentru implementare server-side cu acces direct la DB\nbuilder.Services.AddScoped&lt;IServiceRequestStatusService, ServerServiceRequestStatusService&gt;();\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#3-interfata-iservicerequeststatusservice","title":"3. Interfa\u021ba IServiceRequestStatusService","text":"<pre><code>public interface IServiceRequestStatusService\n{\n    Task&lt;ServiceRequestStatusResponseModel&gt; Check(ServiceRequestStatusRequestModel request);\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Check</code> <code>ServiceRequestStatusRequestModel request</code> <code>Task&lt;ServiceRequestStatusResponseModel&gt;</code> Verific\u0103 statusul unei cereri specifice"},{"location":"fod/servicii/ServiceRequestStatusService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/ServiceRequestStatusService/#servicerequeststatusrequestmodel-parametri-verificare","title":"ServiceRequestStatusRequestModel (parametri verificare)","text":"<pre><code>public class ServiceRequestStatusRequestModel\n{\n    public string RequestNumber { get; set; }\n    public string VerificationCode { get; set; }\n    public string IDNP { get; set; }\n    public string Email { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#servicerequeststatusresponsemodel-rezultat","title":"ServiceRequestStatusResponseModel (rezultat)","text":"<pre><code>public class ServiceRequestStatusResponseModel\n{\n    // Informa\u021bii generale\n    public string RequestNumber { get; set; }\n    public string ServiceName { get; set; }\n    public string ServiceCode { get; set; }\n    public DateTime SubmissionDate { get; set; }\n    public DateTime? EstimatedCompletionDate { get; set; }\n    public DateTime? ActualCompletionDate { get; set; }\n\n    // Status\n    public string Status { get; set; }\n    public string StatusCode { get; set; }\n    public string StatusDescription { get; set; }\n    public int StatusPercentage { get; set; }\n\n    // Detalii solicitant\n    public string ApplicantName { get; set; }\n    public string ApplicantType { get; set; }\n\n    // Cost \u0219i plat\u0103\n    public decimal TotalCost { get; set; }\n    public bool IsPaid { get; set; }\n    public DateTime? PaymentDate { get; set; }\n    public string PaymentMethod { get; set; }\n\n    // Documente\n    public List&lt;DocumentInfo&gt; SubmittedDocuments { get; set; }\n    public List&lt;DocumentInfo&gt; ResultDocuments { get; set; }\n\n    // Livrare\n    public string DeliveryMethod { get; set; }\n    public string DeliveryStatus { get; set; }\n    public DeliveryAddress DeliveryAddress { get; set; }\n\n    // Istoric\n    public List&lt;StatusHistoryItem&gt; StatusHistory { get; set; }\n\n    // Informa\u021bii adi\u021bionale\n    public string ProcessingOffice { get; set; }\n    public string ResponsiblePerson { get; set; }\n    public string Notes { get; set; }\n    public bool CanBeCancelled { get; set; }\n    public bool CanBeModified { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/ServiceRequestStatusService/#verificare-simpla-cu-numar-cerere","title":"Verificare simpl\u0103 cu num\u0103r cerere","text":"<pre><code>@inject IServiceRequestStatusService StatusService\n\n&lt;FodServiceRequestStatus \n    RequestNumber=\"@requestNumber\"\n    VerificationCode=\"@verificationCode\" /&gt;\n\n&lt;!-- Sau implementare manual\u0103 --&gt;\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Verificare status cerere\n        &lt;/FodText&gt;\n\n        &lt;FodTextField @bind-Value=\"checkModel.RequestNumber\" \n                      Label=\"Num\u0103r cerere\"\n                      Required=\"true\" /&gt;\n\n        &lt;FodTextField @bind-Value=\"checkModel.VerificationCode\" \n                      Label=\"Cod verificare\"\n                      Required=\"true\" /&gt;\n\n        &lt;FodButton OnClick=\"CheckStatus\" \n                   Color=\"FodColor.Primary\"\n                   Disabled=\"@isChecking\"&gt;\n            Verific\u0103\n        &lt;/FodButton&gt;\n\n        @if (statusResult != null)\n        {\n            &lt;FodServiceRequestStatusResponse Status=\"@statusResult\" /&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private ServiceRequestStatusRequestModel checkModel = new();\n    private ServiceRequestStatusResponseModel statusResult;\n    private bool isChecking;\n\n    private async Task CheckStatus()\n    {\n        isChecking = true;\n        try\n        {\n            statusResult = await StatusService.Check(checkModel);\n        }\n        catch (Exception ex)\n        {\n            NotificationService.ShowError(\"Eroare la verificarea statusului\");\n        }\n        finally\n        {\n            isChecking = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#pagina-dedicata-pentru-tracking","title":"Pagin\u0103 dedicat\u0103 pentru tracking","text":"<pre><code>@page \"/cerere/{RequestNumber}/{VerificationCode}\"\n@inject IServiceRequestStatusService StatusService\n\n&lt;FodContainer&gt;\n    @if (isLoading)\n    {\n        &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n    }\n    else if (status == null)\n    {\n        &lt;FodAlert Severity=\"Severity.Error\"&gt;\n            Cererea nu a fost g\u0103sit\u0103 sau datele de verificare sunt incorecte\n        &lt;/FodAlert&gt;\n    }\n    else\n    {\n        &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n            Status cerere: @status.RequestNumber\n        &lt;/FodText&gt;\n\n        &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n            &lt;!-- Informa\u021bii principale --&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n                &lt;FodCard&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;!-- Progress vizual --&gt;\n                        &lt;FodStepper ActiveStep=\"@GetProgressStep()\" \n                                    Orientation=\"Orientation.Horizontal\"&gt;\n                            &lt;FodStep&gt;\n                                &lt;StepLabel&gt;Depus\u0103&lt;/StepLabel&gt;\n                            &lt;/FodStep&gt;\n                            &lt;FodStep&gt;\n                                &lt;StepLabel&gt;\u00cen verificare&lt;/StepLabel&gt;\n                            &lt;/FodStep&gt;\n                            &lt;FodStep&gt;\n                                &lt;StepLabel&gt;\u00cen procesare&lt;/StepLabel&gt;\n                            &lt;/FodStep&gt;\n                            &lt;FodStep&gt;\n                                &lt;StepLabel&gt;Finalizat\u0103&lt;/StepLabel&gt;\n                            &lt;/FodStep&gt;\n                        &lt;/FodStepper&gt;\n\n                        &lt;!-- Status curent --&gt;\n                        &lt;div class=\"mt-4\"&gt;\n                            &lt;FodAlert Severity=\"@GetStatusSeverity()\"&gt;\n                                &lt;FodAlertTitle&gt;@status.Status&lt;/FodAlertTitle&gt;\n                                @status.StatusDescription\n                            &lt;/FodAlert&gt;\n                        &lt;/div&gt;\n\n                        &lt;!-- Detalii cerere --&gt;\n                        &lt;FodList Class=\"mt-3\"&gt;\n                            &lt;FodListItem&gt;\n                                &lt;FodText&gt;Serviciu:&lt;/FodText&gt;\n                                &lt;FodText Class=\"ms-auto\"&gt;@status.ServiceName&lt;/FodText&gt;\n                            &lt;/FodListItem&gt;\n                            &lt;FodListItem&gt;\n                                &lt;FodText&gt;Data depunerii:&lt;/FodText&gt;\n                                &lt;FodText Class=\"ms-auto\"&gt;\n                                    @status.SubmissionDate.ToString(\"dd.MM.yyyy HH:mm\")\n                                &lt;/FodText&gt;\n                            &lt;/FodListItem&gt;\n                            @if (status.EstimatedCompletionDate.HasValue)\n                            {\n                                &lt;FodListItem&gt;\n                                    &lt;FodText&gt;Termen estimat:&lt;/FodText&gt;\n                                    &lt;FodText Class=\"ms-auto\"&gt;\n                                        @status.EstimatedCompletionDate.Value.ToString(\"dd.MM.yyyy\")\n                                    &lt;/FodText&gt;\n                                &lt;/FodListItem&gt;\n                            }\n                        &lt;/FodList&gt;\n                    &lt;/FodCardContent&gt;\n                &lt;/FodCard&gt;\n\n                &lt;!-- Istoric status --&gt;\n                @if (status.StatusHistory?.Any() == true)\n                {\n                    &lt;FodCard Class=\"mt-3\"&gt;\n                        &lt;FodCardContent&gt;\n                            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                                Istoric modific\u0103ri\n                            &lt;/FodText&gt;\n\n                            &lt;FodTimeline&gt;\n                                @foreach (var history in status.StatusHistory.OrderByDescending(h =&gt; h.Date))\n                                {\n                                    &lt;FodTimelineItem&gt;\n                                        &lt;FodTimelineSeparator&gt;\n                                            &lt;FodTimelineDot Color=\"@GetHistoryColor(history.Status)\" /&gt;\n                                            &lt;FodTimelineConnector /&gt;\n                                        &lt;/FodTimelineSeparator&gt;\n                                        &lt;FodTimelineContent&gt;\n                                            &lt;FodText Typo=\"Typo.caption\"&gt;\n                                                @history.Date.ToString(\"dd.MM.yyyy HH:mm\")\n                                            &lt;/FodText&gt;\n                                            &lt;FodText Typo=\"Typo.body2\"&gt;\n                                                @history.Status\n                                            &lt;/FodText&gt;\n                                            @if (!string.IsNullOrEmpty(history.Notes))\n                                            {\n                                                &lt;FodText Typo=\"Typo.caption\" Color=\"FodColor.Secondary\"&gt;\n                                                    @history.Notes\n                                                &lt;/FodText&gt;\n                                            }\n                                        &lt;/FodTimelineContent&gt;\n                                    &lt;/FodTimelineItem&gt;\n                                }\n                            &lt;/FodTimeline&gt;\n                        &lt;/FodCardContent&gt;\n                    &lt;/FodCard&gt;\n                }\n            &lt;/FodGrid&gt;\n\n            &lt;!-- Panou lateral --&gt;\n            &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                &lt;!-- Cost \u0219i plat\u0103 --&gt;\n                &lt;FodCard&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                            Informa\u021bii plat\u0103\n                        &lt;/FodText&gt;\n\n                        &lt;FodText Typo=\"Typo.h5\" Color=\"FodColor.Primary\"&gt;\n                            @status.TotalCost MDL\n                        &lt;/FodText&gt;\n\n                        @if (status.IsPaid)\n                        {\n                            &lt;FodChip Color=\"FodColor.Success\" \n                                     Size=\"FodSize.Small\"\n                                     Icon=\"@FodIcons.Material.Filled.CheckCircle\"&gt;\n                                Achitat\n                            &lt;/FodChip&gt;\n\n                            @if (status.PaymentDate.HasValue)\n                            {\n                                &lt;FodText Typo=\"Typo.caption\" Class=\"mt-2\"&gt;\n                                    Pl\u0103tit la: @status.PaymentDate.Value.ToString(\"dd.MM.yyyy\")\n                                &lt;/FodText&gt;\n                            }\n                        }\n                        else\n                        {\n                            &lt;FodButton Color=\"FodColor.Primary\" \n                                       Variant=\"FodVariant.Filled\"\n                                       FullWidth=\"true\"\n                                       Class=\"mt-2\"&gt;\n                                Achit\u0103 acum\n                            &lt;/FodButton&gt;\n                        }\n                    &lt;/FodCardContent&gt;\n                &lt;/FodCard&gt;\n\n                &lt;!-- Documente --&gt;\n                @if (status.ResultDocuments?.Any() == true)\n                {\n                    &lt;FodCard Class=\"mt-3\"&gt;\n                        &lt;FodCardContent&gt;\n                            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                                Documente rezultat\n                            &lt;/FodText&gt;\n\n                            &lt;FodList Dense=\"true\"&gt;\n                                @foreach (var doc in status.ResultDocuments)\n                                {\n                                    &lt;FodListItem&gt;\n                                        &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Description\" \n                                                 Size=\"FodSize.Small\"\n                                                 Class=\"me-2\" /&gt;\n                                        &lt;FodLink Href=\"@doc.DownloadUrl\"&gt;\n                                            @doc.Name\n                                        &lt;/FodLink&gt;\n                                    &lt;/FodListItem&gt;\n                                }\n                            &lt;/FodList&gt;\n                        &lt;/FodCardContent&gt;\n                    &lt;/FodCard&gt;\n                }\n\n                &lt;!-- Ac\u021biuni --&gt;\n                &lt;FodCard Class=\"mt-3\"&gt;\n                    &lt;FodCardContent&gt;\n                        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                            Ac\u021biuni disponibile\n                        &lt;/FodText&gt;\n\n                        &lt;div class=\"d-grid gap-2\"&gt;\n                            &lt;FodButton Variant=\"FodVariant.Outlined\"\n                                       OnClick=\"PrintStatus\"&gt;\n                                &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Print\" \n                                         Class=\"me-2\" /&gt;\n                                Printeaz\u0103 status\n                            &lt;/FodButton&gt;\n\n                            @if (status.CanBeCancelled)\n                            {\n                                &lt;FodButton Color=\"FodColor.Error\"\n                                           Variant=\"FodVariant.Outlined\"\n                                           OnClick=\"CancelRequest\"&gt;\n                                    Anuleaz\u0103 cererea\n                                &lt;/FodButton&gt;\n                            }\n\n                            &lt;FodButton Variant=\"FodVariant.Text\"\n                                       OnClick=\"ContactSupport\"&gt;\n                                Contacteaz\u0103 suport\n                            &lt;/FodButton&gt;\n                        &lt;/div&gt;\n                    &lt;/FodCardContent&gt;\n                &lt;/FodCard&gt;\n            &lt;/FodGrid&gt;\n        &lt;/FodGrid&gt;\n    }\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public string RequestNumber { get; set; }\n    [Parameter] public string VerificationCode { get; set; }\n\n    private ServiceRequestStatusResponseModel status;\n    private bool isLoading = true;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await LoadStatus();\n    }\n\n    private async Task LoadStatus()\n    {\n        var request = new ServiceRequestStatusRequestModel\n        {\n            RequestNumber = RequestNumber,\n            VerificationCode = VerificationCode\n        };\n\n        try\n        {\n            status = await StatusService.Check(request);\n        }\n        catch\n        {\n            // Eroare gestionat\u0103 \u00een UI\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#widget-pentru-monitorizare-multipla","title":"Widget pentru monitorizare multipl\u0103","text":"<pre><code>&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Monitorizare cereri active\n        &lt;/FodText&gt;\n\n        @foreach (var request in activeRequests)\n        {\n            &lt;RequestStatusWidget Request=\"@request\" /&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    public class RequestStatusWidget : ComponentBase\n    {\n        [Parameter] public TrackedRequest Request { get; set; }\n        [Inject] private IServiceRequestStatusService StatusService { get; set; }\n\n        private ServiceRequestStatusResponseModel currentStatus;\n        private bool isLoading = true;\n\n        protected override async Task OnInitializedAsync()\n        {\n            var checkRequest = new ServiceRequestStatusRequestModel\n            {\n                RequestNumber = Request.Number,\n                VerificationCode = Request.Code\n            };\n\n            try\n            {\n                currentStatus = await StatusService.Check(checkRequest);\n            }\n            finally\n            {\n                isLoading = false;\n            }\n        }\n\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\n        {\n            if (isLoading)\n            {\n                builder.OpenComponent&lt;FodSkeleton&gt;(0);\n                builder.AddAttribute(1, \"Type\", SkeletonType.Text);\n                builder.CloseComponent();\n                return;\n            }\n\n            builder.OpenElement(0, \"div\");\n            builder.AddAttribute(1, \"class\", \"status-widget mb-3 p-3 border rounded\");\n\n            // Header\n            builder.OpenElement(2, \"div\");\n            builder.AddAttribute(3, \"class\", \"d-flex justify-content-between align-items-center\");\n\n            builder.OpenComponent&lt;FodText&gt;(4);\n            builder.AddAttribute(5, \"Typo\", Typo.subtitle2);\n            builder.AddAttribute(6, \"ChildContent\", (RenderFragment)((b) =&gt; \n                b.AddContent(7, currentStatus?.ServiceName)));\n            builder.CloseComponent();\n\n            builder.OpenComponent&lt;FodChip&gt;(8);\n            builder.AddAttribute(9, \"Size\", FodSize.Small);\n            builder.AddAttribute(10, \"Color\", GetStatusColor());\n            builder.AddAttribute(11, \"ChildContent\", (RenderFragment)((b) =&gt; \n                b.AddContent(12, currentStatus?.Status)));\n            builder.CloseComponent();\n\n            builder.CloseElement(); // div\n\n            // Progress bar\n            builder.OpenComponent&lt;FodLoadingLinear&gt;(13);\n            builder.AddAttribute(14, \"Value\", currentStatus?.StatusPercentage ?? 0);\n            builder.AddAttribute(15, \"Color\", GetStatusColor());\n            builder.AddAttribute(16, \"Class\", \"mt-2\");\n            builder.CloseComponent();\n\n            builder.CloseElement(); // div\n        }\n\n        private FodColor GetStatusColor()\n        {\n            return currentStatus?.StatusCode switch\n            {\n                \"COMPLETED\" =&gt; FodColor.Success,\n                \"PROCESSING\" =&gt; FodColor.Primary,\n                \"REJECTED\" =&gt; FodColor.Error,\n                _ =&gt; FodColor.Default\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#notificari-push-pentru-schimbari-status","title":"Notific\u0103ri push pentru schimb\u0103ri status","text":"<pre><code>@implements IDisposable\n@inject IServiceRequestStatusService StatusService\n@inject INotificationService NotificationService\n\n&lt;NotificationEnabledStatusChecker \n    RequestNumber=\"@RequestNumber\"\n    VerificationCode=\"@VerificationCode\"\n    OnStatusChanged=\"HandleStatusChange\" /&gt;\n\n@code {\n    public class NotificationEnabledStatusChecker : ComponentBase, IDisposable\n    {\n        [Parameter] public string RequestNumber { get; set; }\n        [Parameter] public string VerificationCode { get; set; }\n        [Parameter] public EventCallback&lt;ServiceRequestStatusResponseModel&gt; OnStatusChanged { get; set; }\n\n        [Inject] private IServiceRequestStatusService StatusService { get; set; }\n\n        private Timer checkTimer;\n        private string lastStatusCode;\n\n        protected override async Task OnInitializedAsync()\n        {\n            // Check ini\u021bial\n            await CheckStatus();\n\n            // Setup polling la fiecare minut\n            checkTimer = new Timer(async _ =&gt; await CheckStatusWithNotification(), \n                null, TimeSpan.FromMinutes(1), TimeSpan.FromMinutes(1));\n        }\n\n        private async Task CheckStatus()\n        {\n            var request = new ServiceRequestStatusRequestModel\n            {\n                RequestNumber = RequestNumber,\n                VerificationCode = VerificationCode\n            };\n\n            var status = await StatusService.Check(request);\n            lastStatusCode = status?.StatusCode;\n        }\n\n        private async Task CheckStatusWithNotification()\n        {\n            var request = new ServiceRequestStatusRequestModel\n            {\n                RequestNumber = RequestNumber,\n                VerificationCode = VerificationCode\n            };\n\n            var status = await StatusService.Check(request);\n\n            if (status?.StatusCode != lastStatusCode)\n            {\n                // Status schimbat\n                await InvokeAsync(async () =&gt;\n                {\n                    await OnStatusChanged.InvokeAsync(status);\n\n                    // Notificare\n                    await NotificationService.ShowAsync(new NotificationOptions\n                    {\n                        Title = \"Status actualizat\",\n                        Body = $\"Cererea {RequestNumber} are un nou status: {status.Status}\",\n                        Icon = \"/icon-192.png\",\n                        RequireInteraction = true\n                    });\n                });\n\n                lastStatusCode = status.StatusCode;\n            }\n        }\n\n        public void Dispose()\n        {\n            checkTimer?.Dispose();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#7-gestionarea-erorilor","title":"7. Gestionarea Erorilor","text":"<pre><code>public class ErrorHandlingServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly ILogger&lt;ErrorHandlingServiceRequestStatusService&gt; _logger;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        try\n        {\n            return await _innerService.Check(request);\n        }\n        catch (HttpRequestException ex) when (ex.StatusCode == HttpStatusCode.NotFound)\n        {\n            _logger.LogWarning(\"Cererea {RequestNumber} nu a fost g\u0103sit\u0103\", \n                request.RequestNumber);\n            return null;\n        }\n        catch (HttpRequestException ex) when (ex.StatusCode == HttpStatusCode.Unauthorized)\n        {\n            throw new UnauthorizedException(\n                \"Date de verificare incorecte pentru cererea specificat\u0103\");\n        }\n        catch (TaskCanceledException)\n        {\n            throw new TimeoutException(\n                \"Verificarea statusului a durat prea mult. \u00cencerca\u021bi din nou.\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#8-cache-si-optimizare","title":"8. Cache \u0219i Optimizare","text":"<pre><code>public class CachedServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedServiceRequestStatusService&gt; _logger;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        var cacheKey = $\"ServiceStatus_{request.RequestNumber}_{request.VerificationCode}\";\n\n        // Cache mai scurt pentru statusuri \u00een procesare\n        var cacheOptions = new MemoryCacheEntryOptions();\n\n        if (_cache.TryGetValue&lt;ServiceRequestStatusResponseModel&gt;(cacheKey, out var cached))\n        {\n            // Verificare dac\u0103 trebuie re\u00eemprosp\u0103tat\n            if (ShouldRefresh(cached))\n            {\n                _cache.Remove(cacheKey);\n            }\n            else\n            {\n                _logger.LogDebug(\"Returnare status din cache pentru {RequestNumber}\", \n                    request.RequestNumber);\n                return cached;\n            }\n        }\n\n        var result = await _innerService.Check(request);\n\n        if (result != null)\n        {\n            // Cache timp diferit bazat pe status\n            var cacheTime = result.StatusCode switch\n            {\n                \"COMPLETED\" =&gt; TimeSpan.FromHours(24),\n                \"REJECTED\" =&gt; TimeSpan.FromHours(24),\n                \"PROCESSING\" =&gt; TimeSpan.FromMinutes(5),\n                _ =&gt; TimeSpan.FromMinutes(15)\n            };\n\n            _cache.Set(cacheKey, result, cacheTime);\n        }\n\n        return result;\n    }\n\n    private bool ShouldRefresh(ServiceRequestStatusResponseModel cached)\n    {\n        // Re\u00eemprosp\u0103tare pentru statusuri active\n        return cached.StatusCode is \"PROCESSING\" or \"PENDING\" or \"VERIFICATION\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#9-audit-si-logging","title":"9. Audit \u0219i Logging","text":"<pre><code>public class AuditedServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly IAuditService _auditService;\n    private readonly IHttpContextAccessor _httpContextAccessor;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        var userId = _httpContextAccessor.HttpContext?.User?.Identity?.Name;\n        var ipAddress = _httpContextAccessor.HttpContext?.Connection?.RemoteIpAddress?.ToString();\n\n        // Audit request\n        await _auditService.LogAsync(new AuditEntry\n        {\n            Action = \"ServiceRequestStatusCheck\",\n            UserId = userId,\n            IpAddress = ipAddress,\n            Details = new\n            {\n                RequestNumber = request.RequestNumber,\n                HasVerificationCode = !string.IsNullOrEmpty(request.VerificationCode),\n                Timestamp = DateTime.UtcNow\n            }\n        });\n\n        try\n        {\n            var result = await _innerService.Check(request);\n\n            // Audit result\n            await _auditService.LogAsync(new AuditEntry\n            {\n                Action = \"ServiceRequestStatusCheckResult\",\n                UserId = userId,\n                Details = new\n                {\n                    RequestNumber = request.RequestNumber,\n                    Found = result != null,\n                    Status = result?.StatusCode\n                }\n            });\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            // Audit error\n            await _auditService.LogAsync(new AuditEntry\n            {\n                Action = \"ServiceRequestStatusCheckError\",\n                UserId = userId,\n                Details = new\n                {\n                    RequestNumber = request.RequestNumber,\n                    Error = ex.Message\n                }\n            });\n\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#10-validare-si-securitate","title":"10. Validare \u0219i Securitate","text":"<pre><code>public class SecureServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly IValidator&lt;ServiceRequestStatusRequestModel&gt; _validator;\n    private readonly IRateLimiter _rateLimiter;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        // Validare\n        var validationResult = await _validator.ValidateAsync(request);\n        if (!validationResult.IsValid)\n        {\n            throw new ValidationException(validationResult.Errors);\n        }\n\n        // Rate limiting\n        var rateLimitKey = $\"StatusCheck_{request.RequestNumber}\";\n        if (!await _rateLimiter.AllowAsync(rateLimitKey, 10, TimeSpan.FromMinute))\n        {\n            throw new RateLimitExceededException(\n                \"Prea multe verific\u0103ri pentru aceast\u0103 cerere. \u00cencerca\u021bi mai t\u00e2rziu.\");\n        }\n\n        // Sanitizare input\n        request.RequestNumber = request.RequestNumber?.Trim().ToUpperInvariant();\n        request.VerificationCode = request.VerificationCode?.Trim();\n\n        return await _innerService.Check(request);\n    }\n}\n\npublic class ServiceRequestStatusRequestValidator \n    : AbstractValidator&lt;ServiceRequestStatusRequestModel&gt;\n{\n    public ServiceRequestStatusRequestValidator()\n    {\n        RuleFor(x =&gt; x.RequestNumber)\n            .NotEmpty().WithMessage(\"Num\u0103rul cererii este obligatoriu\")\n            .Matches(@\"^[A-Z]{3}-\\d{4}-\\d{6}$\")\n            .WithMessage(\"Format num\u0103r cerere invalid\");\n\n        RuleFor(x =&gt; x.VerificationCode)\n            .NotEmpty().When(x =&gt; string.IsNullOrEmpty(x.IDNP))\n            .WithMessage(\"Cod verificare sau IDNP obligatoriu\");\n\n        RuleFor(x =&gt; x.IDNP)\n            .Matches(@\"^\\d{13}$\").When(x =&gt; !string.IsNullOrEmpty(x.IDNP))\n            .WithMessage(\"IDNP invalid\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#11-testare","title":"11. Testare","text":"<pre><code>[TestClass]\npublic class ServiceRequestStatusServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IServiceRequestStatusService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.test.com\")\n        };\n\n        _service = new ServiceRequestStatusService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task Check_ValidRequest_ReturnsStatus()\n    {\n        // Arrange\n        var request = new ServiceRequestStatusRequestModel\n        {\n            RequestNumber = \"REQ-2024-123456\",\n            VerificationCode = \"ABC123\"\n        };\n\n        var expectedResponse = new ServiceRequestStatusResponseModel\n        {\n            RequestNumber = \"REQ-2024-123456\",\n            Status = \"\u00cen procesare\",\n            StatusCode = \"PROCESSING\",\n            StatusPercentage = 50\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.Check(request);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(\"PROCESSING\", result.StatusCode);\n        Assert.AreEqual(50, result.StatusPercentage);\n    }\n\n    [TestMethod]\n    public async Task Check_InvalidRequest_ReturnsNull()\n    {\n        // Arrange\n        var request = new ServiceRequestStatusRequestModel\n        {\n            RequestNumber = \"INVALID\",\n            VerificationCode = \"WRONG\"\n        };\n\n        SetupHttpResponse(HttpStatusCode.NotFound);\n\n        // Act\n        var result = await _service.Check(request);\n\n        // Assert\n        Assert.IsNull(result);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#12-integrare-cu-signalr-pentru-actualizari-real-time","title":"12. Integrare cu SignalR pentru actualiz\u0103ri real-time","text":"<pre><code>public class RealTimeServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly IHubContext&lt;StatusHub&gt; _hubContext;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        var result = await _innerService.Check(request);\n\n        if (result != null)\n        {\n            // Subscribe pentru actualiz\u0103ri\n            await _hubContext.Groups.AddToGroupAsync(\n                Context.ConnectionId, \n                $\"request-{request.RequestNumber}\");\n\n            // Trimite status ini\u021bial\n            await _hubContext.Clients.Caller.SendAsync(\n                \"StatusUpdate\", result);\n        }\n\n        return result;\n    }\n}\n\npublic class StatusHub : Hub\n{\n    public async Task SubscribeToRequest(string requestNumber, string verificationCode)\n    {\n        // Validare\n        if (IsValidSubscription(requestNumber, verificationCode))\n        {\n            await Groups.AddToGroupAsync(Context.ConnectionId, $\"request-{requestNumber}\");\n        }\n    }\n\n    public async Task UnsubscribeFromRequest(string requestNumber)\n    {\n        await Groups.RemoveFromGroupAsync(Context.ConnectionId, $\"request-{requestNumber}\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Validare strict\u0103 - Valida\u021bi format num\u0103r cerere \u0219i cod verificare</li> <li>Rate limiting - Preveni\u021bi abuzul prin verific\u0103ri repetate</li> <li>Cache inteligent - Cache diferen\u021biat pe status</li> <li>Audit complet - Loga\u021bi toate verific\u0103rile pentru securitate</li> <li>Erori clare - Mesaje specifice pentru diferite scenarii</li> <li>Real-time updates - Considera\u021bi SignalR pentru actualiz\u0103ri live</li> </ol>"},{"location":"fod/servicii/ServiceRequestStatusService/#14-monitorizare-si-metrici","title":"14. Monitorizare \u0219i Metrici","text":"<pre><code>public class MonitoredServiceRequestStatusService : IServiceRequestStatusService\n{\n    private readonly IServiceRequestStatusService _innerService;\n    private readonly IMetrics _metrics;\n\n    public async Task&lt;ServiceRequestStatusResponseModel&gt; Check(\n        ServiceRequestStatusRequestModel request)\n    {\n        using var activity = Activity.StartActivity(\"ServiceRequestStatus.Check\");\n        activity?.SetTag(\"request.number\", request.RequestNumber);\n\n        var timer = Stopwatch.StartNew();\n\n        try\n        {\n            var result = await _innerService.Check(request);\n\n            _metrics.Measure.Counter.Increment(\"service_request_status_check\", \n                new MetricTags(\"found\", result != null ? \"true\" : \"false\"));\n\n            if (result != null)\n            {\n                _metrics.Measure.Counter.Increment(\"service_request_by_status\",\n                    new MetricTags(\"status\", result.StatusCode));\n            }\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            _metrics.Measure.Counter.Increment(\"service_request_status_error\",\n                new MetricTags(\"error_type\", ex.GetType().Name));\n            throw;\n        }\n        finally\n        {\n            _metrics.Measure.Timer.Time(\"service_request_status_duration\",\n                timer.ElapsedMilliseconds);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ServiceRequestStatusService/#15-concluzie","title":"15. Concluzie","text":"<p><code>ServiceRequestStatusService</code> ofer\u0103 o interfa\u021b\u0103 specializat\u0103 pentru verificarea detaliat\u0103 a statusului cererilor individuale. Cu suport pentru cache inteligent, validare strict\u0103 \u0219i posibilit\u0103\u021bi de extindere pentru notific\u0103ri real-time, serviciul asigur\u0103 o experien\u021b\u0103 optim\u0103 pentru monitorizarea cererilor \u00een sistemul FOD.</p>"},{"location":"fod/servicii/SingleFileUploadService/","title":"SingleFileUploadService","text":""},{"location":"fod/servicii/SingleFileUploadService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>SingleFileUploadService</code> este o versiune simplificat\u0103 a serviciului de upload fi\u0219iere, optimizat\u0103 pentru gestionarea unui singur fi\u0219ier. Este ideal\u0103 pentru scenarii unde utilizatorul poate \u00eenc\u0103rca doar un fi\u0219ier la un moment dat, cum ar fi fotografia de profil, un document principal sau un attachment unic.</p>"},{"location":"fod/servicii/SingleFileUploadService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/SingleFileUploadService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddHttpClient&lt;ISingleFileUploadService, SingleFileUploadService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(Configuration[\"ApiBaseUrl\"]);\n});\n\n// Cu timeout personalizat pentru fi\u0219iere mari\nbuilder.Services.AddHttpClient&lt;ISingleFileUploadService, SingleFileUploadService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(Configuration[\"ApiBaseUrl\"]);\n    client.Timeout = TimeSpan.FromMinutes(5);\n});\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#configurare-cu-polly-pentru-resilience","title":"Configurare cu Polly pentru resilience","text":"<pre><code>builder.Services.AddHttpClient&lt;ISingleFileUploadService, SingleFileUploadService&gt;()\n    .AddPolicyHandler(HttpPolicyExtensions\n        .HandleTransientHttpError()\n        .OrResult(msg =&gt; !msg.IsSuccessStatusCode)\n        .WaitAndRetryAsync(\n            3,\n            retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt))));\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#interfata-isinglefileuploadservice","title":"Interfa\u021ba ISingleFileUploadService","text":"<pre><code>public interface ISingleFileUploadService\n{\n    Task&lt;SingleFileUploadResponse&gt; UploadSingleFile(FileUploaRequestdModel file);\n    Task&lt;bool&gt; DeleteFile(Guid FileId);\n}\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/SingleFileUploadService/#uploadsinglefile","title":"UploadSingleFile","text":"<p>\u00cencarc\u0103 un singur fi\u0219ier pe server.</p> <p>Parametri: - <code>file: FileUploaRequestdModel</code> - Modelul cu datele fi\u0219ierului de \u00eenc\u0103rcat</p> <p>Returneaz\u0103: <code>Task&lt;SingleFileUploadResponse&gt;</code> - R\u0103spunsul cu detaliile fi\u0219ierului \u00eenc\u0103rcat</p> <p>Endpoint: <code>POST api/fod/single-file-upload</code></p>"},{"location":"fod/servicii/SingleFileUploadService/#deletefile","title":"DeleteFile","text":"<p>\u0218terge un fi\u0219ier de pe server.</p> <p>Parametri: - <code>FileId: Guid</code> - ID-ul unic al fi\u0219ierului de \u0219ters</p> <p>Returneaz\u0103: <code>Task&lt;bool&gt;</code> - True dac\u0103 \u0219tergerea a reu\u0219it, False altfel</p> <p>Endpoint: <code>DELETE api/fod/single-file-delete/{FileId}</code></p>"},{"location":"fod/servicii/SingleFileUploadService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/SingleFileUploadService/#upload-fisier-simplu","title":"Upload fi\u0219ier simplu","text":"<pre><code>@inject ISingleFileUploadService FileUploadService\n\n&lt;div class=\"file-upload-container\"&gt;\n    &lt;InputFile OnChange=\"@UploadFile\" accept=\".pdf,.jpg,.png\" /&gt;\n\n    @if (isUploading)\n    {\n        &lt;FodLoadingCircular /&gt;\n    }\n\n    @if (uploadedFile != null)\n    {\n        &lt;div class=\"uploaded-file\"&gt;\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.Description\" /&gt;\n            &lt;span&gt;@uploadedFile.FileName&lt;/span&gt;\n            &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Close\"\n                          OnClick=\"@DeleteFile\" /&gt;\n        &lt;/div&gt;\n    }\n&lt;/div&gt;\n\n@code {\n    private SingleFileUploadResponse uploadedFile;\n    private bool isUploading;\n\n    private async Task UploadFile(InputFileChangeEventArgs e)\n    {\n        isUploading = true;\n\n        try\n        {\n            var file = e.File;\n            using var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024); // 10MB\n            var buffer = new byte[file.Size];\n            await stream.ReadAsync(buffer);\n\n            var request = new FileUploaRequestdModel\n            {\n                FileName = file.Name,\n                FileContent = buffer,\n                ContentType = file.ContentType,\n                Size = file.Size\n            };\n\n            uploadedFile = await FileUploadService.UploadSingleFile(request);\n        }\n        catch (Exception ex)\n        {\n            // Handle error\n            Console.WriteLine($\"Eroare upload: {ex.Message}\");\n        }\n        finally\n        {\n            isUploading = false;\n        }\n    }\n\n    private async Task DeleteFile()\n    {\n        if (uploadedFile != null)\n        {\n            var success = await FileUploadService.DeleteFile(uploadedFile.Id);\n            if (success)\n            {\n                uploadedFile = null;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#component-pentru-imagine-profil","title":"Component pentru imagine profil","text":"<pre><code>@inject ISingleFileUploadService FileUploadService\n@inject IJSRuntime JS\n\n&lt;div class=\"profile-image-upload\"&gt;\n    &lt;div class=\"image-container\"&gt;\n        @if (!string.IsNullOrEmpty(imageUrl))\n        {\n            &lt;img src=\"@imageUrl\" alt=\"Profile\" /&gt;\n        }\n        else\n        {\n            &lt;FodIcon Icon=\"@FodIcons.Material.Filled.AccountCircle\" \n                    Size=\"FodSize.ExtraLarge\" /&gt;\n        }\n    &lt;/div&gt;\n\n    &lt;FodButton OnClick=\"@TriggerFileInput\"&gt;\n        Schimb\u0103 Imaginea\n    &lt;/FodButton&gt;\n\n    &lt;InputFile @ref=\"fileInput\" \n               OnChange=\"@UploadProfileImage\" \n               accept=\"image/*\" \n               style=\"display: none;\" /&gt;\n&lt;/div&gt;\n\n@code {\n    [Parameter] public Guid? CurrentImageId { get; set; }\n    [Parameter] public EventCallback&lt;SingleFileUploadResponse&gt; OnImageUploaded { get; set; }\n\n    private InputFile fileInput;\n    private string imageUrl;\n\n    protected override void OnParametersSet()\n    {\n        if (CurrentImageId.HasValue)\n        {\n            imageUrl = $\"/api/files/{CurrentImageId}\";\n        }\n    }\n\n    private async Task TriggerFileInput()\n    {\n        await JS.InvokeVoidAsync(\"triggerClick\", fileInput.Element);\n    }\n\n    private async Task UploadProfileImage(InputFileChangeEventArgs e)\n    {\n        var imageFile = e.File;\n\n        // Validare tip imagine\n        if (!imageFile.ContentType.StartsWith(\"image/\"))\n        {\n            // Show error\n            return;\n        }\n\n        // Conversie la byte array\n        using var stream = imageFile.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024); // 5MB\n        using var ms = new MemoryStream();\n        await stream.CopyToAsync(ms);\n\n        var request = new FileUploaRequestdModel\n        {\n            FileName = imageFile.Name,\n            FileContent = ms.ToArray(),\n            ContentType = imageFile.ContentType,\n            Size = imageFile.Size\n        };\n\n        // \u0218terge imaginea veche dac\u0103 exist\u0103\n        if (CurrentImageId.HasValue)\n        {\n            await FileUploadService.DeleteFile(CurrentImageId.Value);\n        }\n\n        // Upload imagine nou\u0103\n        var response = await FileUploadService.UploadSingleFile(request);\n        imageUrl = $\"/api/files/{response.Id}\";\n\n        await OnImageUploaded.InvokeAsync(response);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#formular-cu-document-atasat","title":"Formular cu document ata\u0219at","text":"<pre><code>@inject ISingleFileUploadService FileUploadService\n\n&lt;EditForm Model=\"@formModel\" OnValidSubmit=\"@SubmitForm\"&gt;\n    &lt;DataAnnotationsValidator /&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Nume&lt;/label&gt;\n        &lt;InputText @bind-Value=\"formModel.Name\" class=\"form-control\" /&gt;\n        &lt;ValidationMessage For=\"@(() =&gt; formModel.Name)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Document suport&lt;/label&gt;\n        @if (attachedFile == null)\n        {\n            &lt;InputFile OnChange=\"@AttachDocument\" /&gt;\n        }\n        else\n        {\n            &lt;div class=\"attached-file\"&gt;\n                &lt;span&gt;@attachedFile.FileName&lt;/span&gt;\n                &lt;FodButton Size=\"FodSize.Small\" \n                          Color=\"FodColor.Error\"\n                          OnClick=\"@RemoveDocument\"&gt;\n                    Elimin\u0103\n                &lt;/FodButton&gt;\n            &lt;/div&gt;\n        }\n        &lt;ValidationMessage For=\"@(() =&gt; formModel.DocumentId)\" /&gt;\n    &lt;/div&gt;\n\n    &lt;FodButton Type=\"submit\" Color=\"FodColor.Primary\"&gt;\n        Trimite\n    &lt;/FodButton&gt;\n&lt;/EditForm&gt;\n\n@code {\n    private FormModel formModel = new();\n    private SingleFileUploadResponse attachedFile;\n\n    private async Task AttachDocument(InputFileChangeEventArgs e)\n    {\n        var file = e.File;\n        var buffer = new byte[file.Size];\n        await file.OpenReadStream().ReadAsync(buffer);\n\n        var request = new FileUploaRequestdModel\n        {\n            FileName = file.Name,\n            FileContent = buffer,\n            ContentType = file.ContentType,\n            Size = file.Size\n        };\n\n        attachedFile = await FileUploadService.UploadSingleFile(request);\n        formModel.DocumentId = attachedFile.Id;\n    }\n\n    private async Task RemoveDocument()\n    {\n        if (attachedFile != null)\n        {\n            await FileUploadService.DeleteFile(attachedFile.Id);\n            attachedFile = null;\n            formModel.DocumentId = null;\n        }\n    }\n\n    private async Task SubmitForm()\n    {\n        // Submit form logic\n    }\n\n    private class FormModel\n    {\n        [Required]\n        public string Name { get; set; }\n\n        [Required]\n        public Guid? DocumentId { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#diferente-fata-de-fileuploadservice","title":"Diferen\u021be fa\u021b\u0103 de FileUploadService","text":"Aspect SingleFileUploadService FileUploadService Scop Un singur fi\u0219ier Multiple fi\u0219iere Metode 2 (upload, delete) 7 (CRUD complet) Complexitate Simpl\u0103 Moderat\u0103 Use case Profil, document unic Galerii, ata\u0219amente multiple Endpoints <code>/single-file-*</code> <code>/file-*</code>"},{"location":"fod/servicii/SingleFileUploadService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/SingleFileUploadService/#service-wrapper-cu-logging","title":"Service wrapper cu logging","text":"<pre><code>public class LoggingSingleFileUploadService : ISingleFileUploadService\n{\n    private readonly SingleFileUploadService _innerService;\n    private readonly ILogger&lt;LoggingSingleFileUploadService&gt; _logger;\n\n    public async Task&lt;SingleFileUploadResponse&gt; UploadSingleFile(FileUploaRequestdModel file)\n    {\n        _logger.LogInformation(\"\u00cenc\u0103rcare fi\u0219ier: {FileName}, Size: {Size}\", \n            file.FileName, file.Size);\n\n        try\n        {\n            var result = await _innerService.UploadSingleFile(file);\n            _logger.LogInformation(\"Fi\u0219ier \u00eenc\u0103rcat cu succes: {FileId}\", result.Id);\n            return result;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la \u00eenc\u0103rcarea fi\u0219ierului {FileName}\", \n                file.FileName);\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/SingleFileUploadService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Simplicitate - API minimal pentru use case-uri simple</li> <li>No batch operations - Nu suport\u0103 opera\u021bii pe mai multe fi\u0219iere</li> <li>Same request model - Folose\u0219te acela\u0219i model ca FileUploadService</li> <li>Different endpoints - Endpoints separate pentru izolare</li> <li>No download method - Focusat doar pe upload/delete</li> </ol>"},{"location":"fod/servicii/SingleFileUploadService/#bune-practici","title":"Bune practici","text":"<ol> <li>Validare tip fi\u0219ier - Verifica\u021bi extensia \u0219i MIME type</li> <li>Limitare dimensiune - Impune\u021bi limite de dimensiune</li> <li>Cleanup - \u0218terge\u021bi fi\u0219ierele vechi la \u00eenlocuire</li> <li>Error handling - Gestiona\u021bi erorile de re\u021bea graceful</li> <li>Loading states - Afi\u0219a\u021bi indicatori de progres</li> <li>Confirmation - Cere\u021bi confirmare \u00eenainte de \u0219tergere</li> </ol>"},{"location":"fod/servicii/SingleFileUploadService/#concluzie","title":"Concluzie","text":"<p>SingleFileUploadService ofer\u0103 o interfa\u021b\u0103 simplificat\u0103 pentru scenarii comune de upload unde este necesar un singur fi\u0219ier. Cu doar dou\u0103 metode esen\u021biale \u0219i o abordare focusat\u0103, serviciul este ideal pentru func\u021bionalit\u0103\u021bi precum fotografii de profil, documente principale sau ata\u0219amente unice \u00een formulare.</p>"},{"location":"fod/servicii/UserService/","title":"UserService","text":""},{"location":"fod/servicii/UserService/#descriere-generala","title":"Descriere General\u0103","text":"<p><code>UserService</code> este serviciul responsabil pentru ob\u021binerea \u0219i gestionarea informa\u021biilor despre utilizatorul curent sub form\u0103 de <code>ClaimsPrincipal</code>. Serviciul integreaz\u0103 informa\u021biile din contextul utilizatorului curent \u0219i le transform\u0103 \u00een claims standard .NET pentru utilizare \u00een autorizare \u0219i autentificare.</p>"},{"location":"fod/servicii/UserService/#configurare","title":"Configurare","text":""},{"location":"fod/servicii/UserService/#inregistrare-in-dependency-injection","title":"\u00cenregistrare \u00een Dependency Injection","text":"<pre><code>// \u00cen Program.cs sau Startup.cs\nbuilder.Services.AddScoped&lt;IUserService, UserService&gt;();\n\n// Asigura\u021bi-v\u0103 c\u0103 dependen\u021bele sunt \u00eenregistrate\nbuilder.Services.AddScoped&lt;IAuthenticationService, AuthenticationService&gt;();\nbuilder.Services.AddScoped&lt;IContextService, ContextService&gt;();\n</code></pre>"},{"location":"fod/servicii/UserService/#configurare-completa","title":"Configurare complet\u0103","text":"<pre><code>// \u00cenregistrare servicii necesare\nbuilder.Services.AddHttpClient&lt;IAuthenticationService, AuthenticationService&gt;();\nbuilder.Services.AddScoped&lt;IContextService, ContextService&gt;();\nbuilder.Services.AddScoped&lt;IUserService, UserService&gt;();\n\n// Pentru AuthenticationStateProvider\nbuilder.Services.AddScoped&lt;AuthenticationStateProvider, CustomAuthenticationStateProvider&gt;();\n</code></pre>"},{"location":"fod/servicii/UserService/#interfata-iuserservice","title":"Interfa\u021ba IUserService","text":"<pre><code>public interface IUserService\n{\n    Task&lt;ClaimsPrincipal&gt; Get();\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#metode-disponibile","title":"Metode disponibile","text":""},{"location":"fod/servicii/UserService/#get","title":"Get()","text":"<p>Ob\u021bine utilizatorul curent ca <code>ClaimsPrincipal</code>.</p> <p>Parametri: Niciun parametru</p> <p>Returneaz\u0103: <code>Task&lt;ClaimsPrincipal&gt;</code> - Principalul cu claims-urile utilizatorului</p> <p>Comportament: - Implementeaz\u0103 caching - p\u0103streaz\u0103 rezultatul dup\u0103 prima apelare - Ob\u021bine contextul curent prin <code>IContextService</code> - Transform\u0103 atributele contextului \u00een claims - Adaug\u0103 claims speciale pentru Role \u0219i Username - Returneaz\u0103 <code>ClaimsPrincipal</code> gol dac\u0103 nu exist\u0103 context</p>"},{"location":"fod/servicii/UserService/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/servicii/UserService/#obtinere-utilizator-curent","title":"Ob\u021binere utilizator curent","text":"<pre><code>@inject IUserService UserService\n\n&lt;AuthorizeView&gt;\n    &lt;Authorized&gt;\n        &lt;p&gt;Bun venit, @username!&lt;/p&gt;\n        &lt;p&gt;Rolul t\u0103u: @role&lt;/p&gt;\n    &lt;/Authorized&gt;\n    &lt;NotAuthorized&gt;\n        &lt;p&gt;Nu e\u0219ti autentificat.&lt;/p&gt;\n    &lt;/NotAuthorized&gt;\n&lt;/AuthorizeView&gt;\n\n@code {\n    private string username = \"\";\n    private string role = \"\";\n\n    protected override async Task OnInitializedAsync()\n    {\n        var user = await UserService.Get();\n        if (user.Identity.IsAuthenticated)\n        {\n            username = user.Identity.Name;\n            role = user.FindFirst(\"Role\")?.Value ?? \"F\u0103r\u0103 rol\";\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#verificare-claims-specifice","title":"Verificare claims specifice","text":"<pre><code>@inject IUserService UserService\n\n@code {\n    private bool hasAdminRole = false;\n    private string userIdno = \"\";\n\n    protected override async Task OnInitializedAsync()\n    {\n        var user = await UserService.Get();\n\n        // Verific\u0103 rol admin\n        hasAdminRole = user.IsInRole(\"Administrator\");\n\n        // Ob\u021bine IDNO\n        userIdno = user.FindFirst(\"IDNO\")?.Value ?? \"\";\n\n        // Verific\u0103 permisiuni specifice\n        var canEditDocuments = user.HasClaim(\"Permission\", \"Documents.Edit\");\n    }\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#custom-authenticationstateprovider","title":"Custom AuthenticationStateProvider","text":"<pre><code>public class CustomAuthenticationStateProvider : AuthenticationStateProvider\n{\n    private readonly IUserService _userService;\n\n    public CustomAuthenticationStateProvider(IUserService userService)\n    {\n        _userService = userService;\n    }\n\n    public override async Task&lt;AuthenticationState&gt; GetAuthenticationStateAsync()\n    {\n        var user = await _userService.Get();\n        return new AuthenticationState(user);\n    }\n\n    public void NotifyUserAuthentication(string userName)\n    {\n        var authenticatedUser = new ClaimsPrincipal(\n            new ClaimsIdentity(new[]\n            {\n                new Claim(ClaimTypes.Name, userName)\n            }, \"apiauth\"));\n\n        var authState = Task.FromResult(new AuthenticationState(authenticatedUser));\n        NotifyAuthenticationStateChanged(authState);\n    }\n\n    public void NotifyUserLogout()\n    {\n        var anonymousUser = new ClaimsPrincipal(new ClaimsIdentity());\n        var authState = Task.FromResult(new AuthenticationState(anonymousUser));\n        NotifyAuthenticationStateChanged(authState);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#integrare-cu-alte-servicii","title":"Integrare cu alte servicii","text":""},{"location":"fod/servicii/UserService/#cu-componente-de-autorizare","title":"Cu componente de autorizare","text":"<pre><code>&lt;CascadingAuthenticationState&gt;\n    &lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n        &lt;Found Context=\"routeData\"&gt;\n            &lt;AuthorizeRouteView RouteData=\"@routeData\" \n                               DefaultLayout=\"@typeof(MainLayout)\"&gt;\n                &lt;NotAuthorized&gt;\n                    &lt;RedirectToLogin /&gt;\n                &lt;/NotAuthorized&gt;\n            &lt;/AuthorizeRouteView&gt;\n        &lt;/Found&gt;\n    &lt;/Router&gt;\n&lt;/CascadingAuthenticationState&gt;\n</code></pre>"},{"location":"fod/servicii/UserService/#service-de-autorizare-custom","title":"Service de autorizare custom","text":"<pre><code>public class AuthorizationService\n{\n    private readonly IUserService _userService;\n\n    public AuthorizationService(IUserService userService)\n    {\n        _userService = userService;\n    }\n\n    public async Task&lt;bool&gt; CanAccessService(string serviceCode)\n    {\n        var user = await _userService.Get();\n        if (!user.Identity.IsAuthenticated)\n            return false;\n\n        // Verific\u0103 dac\u0103 are permisiune specific\u0103\n        return user.HasClaim(\"ServiceAccess\", serviceCode) ||\n               user.IsInRole(\"Administrator\");\n    }\n\n    public async Task&lt;bool&gt; CanEditEntity(string entityType, string entityId)\n    {\n        var user = await _userService.Get();\n\n        // Verific\u0103 owner\n        var isOwner = user.HasClaim(\"OwnedEntity\", $\"{entityType}:{entityId}\");\n\n        // Sau are permisiune general\u0103\n        var hasPermission = user.HasClaim(\"Permission\", $\"{entityType}.Edit\");\n\n        return isOwner || hasPermission;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#tratare-erori","title":"Tratare erori","text":""},{"location":"fod/servicii/UserService/#wrapper-cu-gestionare-erori","title":"Wrapper cu gestionare erori","text":"<pre><code>public class SafeUserService : IUserService\n{\n    private readonly UserService _innerService;\n    private readonly ILogger&lt;SafeUserService&gt; _logger;\n\n    public async Task&lt;ClaimsPrincipal&gt; Get()\n    {\n        try\n        {\n            return await _innerService.Get();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Eroare la ob\u021binerea utilizatorului curent\");\n            // Returneaz\u0103 utilizator anonim\n            return new ClaimsPrincipal(new ClaimsIdentity());\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/UserService/#claims-disponibile","title":"Claims disponibile","text":"<p>Claims-urile disponibile depind de atributele din contextul utilizatorului:</p> Claim Surs\u0103 Descriere Username context.UserId ID-ul utilizatorului Role context.Role Rolul \u00een context IDNO context.Attributes Cod fiscal organiza\u021bie IDNP context.Attributes Cod personal Name context.Attributes Numele complet Email context.Attributes Adresa email Permission context.Attributes Permisiuni specifice"},{"location":"fod/servicii/UserService/#note-tehnice","title":"Note tehnice","text":"<ol> <li>Caching implementat - Rezultatul este cache-uit dup\u0103 prima apelare</li> <li>Context dependency - Depinde complet de IContextService</li> <li>AuthenticationService comentat - Codul pentru IAuthenticationService este comentat</li> <li>Identity configuration - Folose\u0219te \"Server authentication\" ca tip autentificare</li> <li>Name/Role claims - Specific\u0103 explicit care claims sunt pentru nume \u0219i rol</li> </ol>"},{"location":"fod/servicii/UserService/#bune-practici","title":"Bune practici","text":"<ol> <li>Cache management - Considera\u021bi invalidarea cache-ului la schimbarea contextului</li> <li>Null checks - Verifica\u021bi \u00eentotdeauna IsAuthenticated \u00eenainte de utilizare</li> <li>Claim validation - Valida\u021bi existen\u021ba claims \u00eenainte de accesare</li> <li>Performance - Evita\u021bi apeluri repetate \u00een aceea\u0219i metod\u0103</li> <li>Security - Nu expune\u021bi claims sensitive \u00een UI</li> </ol>"},{"location":"fod/servicii/UserService/#limitari-cunoscute","title":"Limit\u0103ri cunoscute","text":"<ol> <li>Single context - Folose\u0219te doar contextul curent, nu informa\u021bii de la AuthenticationService</li> <li>No refresh - Nu re\u00eemprosp\u0103teaz\u0103 automat informa\u021biile</li> <li>Static caching - Cache-ul persist\u0103 pe toat\u0103 durata de via\u021b\u0103 a serviciului</li> </ol>"},{"location":"fod/servicii/UserService/#concluzie","title":"Concluzie","text":"<p>UserService ofer\u0103 o abstractizare util\u0103 pentru accesarea informa\u021biilor utilizatorului curent \u00een format standard .NET. Prin transformarea contextului \u00een ClaimsPrincipal, permite utilizarea facil\u0103 cu sistemul de autorizare Blazor \u0219i faciliteaz\u0103 verific\u0103rile de securitate \u00een aplica\u021bie.</p>"},{"location":"fod/servicii/ValidateExtrasService/","title":"ValidateExtrasService","text":""},{"location":"fod/servicii/ValidateExtrasService/#documentatie-pentru-serviciul-validateextrasservice","title":"Documenta\u021bie pentru serviciul ValidateExtrasService","text":""},{"location":"fod/servicii/ValidateExtrasService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>ValidateExtrasService</code> este un serviciu pentru validarea numerelor de extras din documentele oficiale emise de institu\u021biile guvernamentale din Moldova. Serviciul ofer\u0103 o interfa\u021b\u0103 simpl\u0103 pentru verificarea validit\u0103\u021bii extraselor prin comunicare cu API-ul server-side.</p> <p>Caracteristici principale: - Validare num\u0103r extras \u00een timp real - Comunicare asincron\u0103 cu serverul - R\u0103spuns simplu Valid/Invalid - Integrare cu componenta FodValidateExtras - Suport pentru extindere cu logic\u0103 de validare complex\u0103</p>"},{"location":"fod/servicii/ValidateExtrasService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// Client-side (Blazor WebAssembly)\nbuilder.Services.AddFodComponents(configuration);\n\n// Server-side\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\n\n// \u00cenregistrare manual\u0103\nbuilder.Services.AddScoped&lt;IValidateExtrasService, ValidateExtrasService&gt;();\nbuilder.Services.AddHttpClient&lt;IValidateExtrasService, ValidateExtrasService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n\n// Server-side - implementare customizat\u0103\nbuilder.Services.AddScoped&lt;IValidateExtrasService, CustomValidateExtrasService&gt;();\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#3-interfete","title":"3. Interfe\u021be","text":""},{"location":"fod/servicii/ValidateExtrasService/#client-side-interface","title":"Client-side Interface","text":"<pre><code>namespace FOD.Components.Services.ValidateExtras\n{\n    public interface IValidateExtrasService\n    {\n        Task&lt;ValidateExtrasModel&gt; ValidateExtras(string number);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#server-side-interface","title":"Server-side Interface","text":"<pre><code>namespace FOD.Components.Server.Services\n{\n    public interface IValidateExtrasService\n    {\n        Task&lt;ValidateExtrasModel&gt; ValidateExtras(Dictionary&lt;string, string&gt; extrasNumber);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#4-modele-de-date","title":"4. Modele de Date","text":"<pre><code>public class ValidateExtrasModel\n{\n    public ValidateExtrasStatus? Status { get; set; }\n}\n\npublic enum ValidateExtrasStatus\n{\n    Valid = 0,\n    Invalid = 1\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#5-exemple-de-utilizare","title":"5. Exemple de Utilizare","text":""},{"location":"fod/servicii/ValidateExtrasService/#utilizare-simpla-in-componente","title":"Utilizare simpl\u0103 \u00een componente","text":"<pre><code>@page \"/verifica-extras\"\n@inject IValidateExtrasService ValidateExtrasService\n@inject IFodNotificationService NotificationService\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n                Verificare Num\u0103r Extras\n            &lt;/FodText&gt;\n\n            &lt;FodGrid Container=\"true\" Spacing=\"3\" AlignItems=\"Align.End\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n                    &lt;FodInput @bind-Value=\"extrasNumber\" \n                              Label=\"Num\u0103r extras\"\n                              Placeholder=\"Introduce\u021bi num\u0103rul extrasului\"\n                              Required=\"true\"\n                              HelperText=\"Format: XXX-YYYY-ZZZZ\"\n                              EndAdornment=\"@GetValidationIcon()\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodButton OnClick=\"ValidateExtras\" \n                               Color=\"FodColor.Primary\"\n                               FullWidth=\"true\"\n                               Disabled=\"@(string.IsNullOrWhiteSpace(extrasNumber) || isValidating)\"&gt;\n                        @if (isValidating)\n                        {\n                            &lt;FodLoadingButton /&gt;\n                        }\n                        else\n                        {\n                            &lt;text&gt;Verific\u0103&lt;/text&gt;\n                        }\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            @if (validationResult != null)\n            {\n                &lt;FodAlert Severity=\"@GetAlertSeverity()\" Class=\"mt-3\"&gt;\n                    @GetValidationMessage()\n                &lt;/FodAlert&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private string extrasNumber;\n    private ValidateExtrasModel validationResult;\n    private bool isValidating;\n\n    private async Task ValidateExtras()\n    {\n        if (string.IsNullOrWhiteSpace(extrasNumber))\n            return;\n\n        isValidating = true;\n        validationResult = null;\n\n        try\n        {\n            validationResult = await ValidateExtrasService.ValidateExtras(extrasNumber.Trim());\n\n            if (validationResult?.Status == ValidateExtrasStatus.Valid)\n            {\n                NotificationService.Success(\"Extras valid!\");\n            }\n            else\n            {\n                NotificationService.Warning(\"Extras invalid sau inexistent!\");\n            }\n        }\n        catch (Exception ex)\n        {\n            NotificationService.Error($\"Eroare la verificare: {ex.Message}\");\n        }\n        finally\n        {\n            isValidating = false;\n        }\n    }\n\n    private RenderFragment GetValidationIcon()\n    {\n        return @&lt;text&gt;\n            @if (validationResult?.Status == ValidateExtrasStatus.Valid)\n            {\n                &lt;FodIcon Color=\"FodColor.Success\"&gt;\n                    @FodIcons.Material.Filled.CheckCircle\n                &lt;/FodIcon&gt;\n            }\n            else if (validationResult?.Status == ValidateExtrasStatus.Invalid)\n            {\n                &lt;FodIcon Color=\"FodColor.Error\"&gt;\n                    @FodIcons.Material.Filled.Cancel\n                &lt;/FodIcon&gt;\n            }\n        &lt;/text&gt;;\n    }\n\n    private FodSeverity GetAlertSeverity()\n    {\n        return validationResult?.Status == ValidateExtrasStatus.Valid \n            ? FodSeverity.Success \n            : FodSeverity.Error;\n    }\n\n    private string GetValidationMessage()\n    {\n        return validationResult?.Status == ValidateExtrasStatus.Valid\n            ? \"Extrasul este valid \u0219i poate fi utilizat.\"\n            : \"Extrasul nu este valid. Verifica\u021bi num\u0103rul introdus.\";\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#utilizare-componenta-fodvalidateextras","title":"Utilizare componenta FodValidateExtras","text":"<pre><code>@page \"/servicii/verificare\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Verificare Documente\n    &lt;/FodText&gt;\n\n    &lt;FodTabs&gt;\n        &lt;FodTabPanel Title=\"Verificare Extras\"&gt;\n            &lt;FodValidateExtras /&gt;\n        &lt;/FodTabPanel&gt;\n\n        &lt;FodTabPanel Title=\"Verificare Document\"&gt;\n            &lt;FodVerifyDocument /&gt;\n        &lt;/FodTabPanel&gt;\n    &lt;/FodTabs&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#implementare-server-side-customizata","title":"Implementare server-side customizat\u0103","text":"<pre><code>public class CustomValidateExtrasService : IValidateExtrasService\n{\n    private readonly IDbContext _dbContext;\n    private readonly ILogger&lt;CustomValidateExtrasService&gt; _logger;\n\n    public CustomValidateExtrasService(IDbContext dbContext, \n                                      ILogger&lt;CustomValidateExtrasService&gt; logger)\n    {\n        _dbContext = dbContext;\n        _logger = logger;\n    }\n\n    public async Task&lt;ValidateExtrasModel&gt; ValidateExtras(Dictionary&lt;string, string&gt; extrasNumber)\n    {\n        try\n        {\n            if (!extrasNumber.TryGetValue(\"number\", out var number) || \n                string.IsNullOrWhiteSpace(number))\n            {\n                return new ValidateExtrasModel \n                { \n                    Status = ValidateExtrasStatus.Invalid \n                };\n            }\n\n            // Normalizare num\u0103r\n            var normalizedNumber = NormalizeExtrasNumber(number);\n\n            // Verificare format\n            if (!IsValidFormat(normalizedNumber))\n            {\n                _logger.LogWarning(\"Invalid extras format: {Number}\", \n                    normalizedNumber.Substring(0, Math.Min(3, normalizedNumber.Length)) + \"***\");\n\n                return new ValidateExtrasModel \n                { \n                    Status = ValidateExtrasStatus.Invalid \n                };\n            }\n\n            // Verificare \u00een baza de date\n            var exists = await _dbContext.DocumentExtracts\n                .AnyAsync(e =&gt; e.ExtractNumber == normalizedNumber &amp;&amp; \n                              e.IsActive &amp;&amp; \n                              e.ExpiryDate &gt; DateTime.Now);\n\n            if (exists)\n            {\n                _logger.LogInformation(\"Valid extras found: {Number}\", \n                    normalizedNumber.Substring(0, 3) + \"***\");\n            }\n\n            return new ValidateExtrasModel\n            {\n                Status = exists ? ValidateExtrasStatus.Valid : ValidateExtrasStatus.Invalid\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Error validating extras\");\n            throw;\n        }\n    }\n\n    private string NormalizeExtrasNumber(string number)\n    {\n        // Elimin\u0103 spa\u021bii \u0219i caractere speciale\n        return number.Trim()\n                     .Replace(\" \", \"\")\n                     .Replace(\"-\", \"\")\n                     .Replace(\"/\", \"\")\n                     .ToUpperInvariant();\n    }\n\n    private bool IsValidFormat(string number)\n    {\n        // Format: 3 litere + 4 cifre + 4 cifre\n        // Exemplu: ABC12345678\n        var pattern = @\"^[A-Z]{3}\\d{8}$\";\n        return Regex.IsMatch(number, pattern);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#6-validare-in-lot","title":"6. Validare \u00een lot","text":"<pre><code>@inject IValidateExtrasService ValidateExtrasService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Validare Multipl\u0103 Extrase\n        &lt;/FodText&gt;\n\n        &lt;FodTextArea @bind-Value=\"batchNumbers\" \n                     Label=\"Numere extrase (unul per linie)\"\n                     Rows=\"5\"\n                     Placeholder=\"ABC-1234-5678&amp;#x0a;DEF-2345-6789&amp;#x0a;...\" /&gt;\n\n        &lt;FodButton OnClick=\"ValidateBatch\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"\n                   Disabled=\"@isProcessing\"&gt;\n            @if (isProcessing)\n            {\n                &lt;span&gt;Procesare... @processedCount / @totalCount&lt;/span&gt;\n            }\n            else\n            {\n                &lt;text&gt;Valideaz\u0103 Toate&lt;/text&gt;\n            }\n        &lt;/FodButton&gt;\n\n        @if (results.Any())\n        {\n            &lt;FodDataTable Items=\"@results\" Class=\"mt-4\" Dense=\"true\"&gt;\n                &lt;HeaderContent&gt;\n                    &lt;FodTHeadRow&gt;\n                        &lt;FodTh&gt;Num\u0103r Extras&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Status&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Timp Verificare&lt;/FodTh&gt;\n                    &lt;/FodTHeadRow&gt;\n                &lt;/HeaderContent&gt;\n                &lt;RowTemplate&gt;\n                    &lt;FodTr&gt;\n                        &lt;FodTd&gt;@context.Number&lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            &lt;FodChip Color=\"@(context.IsValid ? FodColor.Success : FodColor.Error)\" \n                                     Size=\"FodSize.Small\"&gt;\n                                @(context.IsValid ? \"Valid\" : \"Invalid\")\n                            &lt;/FodChip&gt;\n                        &lt;/FodTd&gt;\n                        &lt;FodTd&gt;@context.ValidationTime.ToString(\"F2\") ms&lt;/FodTd&gt;\n                    &lt;/FodTr&gt;\n                &lt;/RowTemplate&gt;\n            &lt;/FodDataTable&gt;\n\n            &lt;!-- Sumar --&gt;\n            &lt;FodPaper Elevation=\"1\" Class=\"mt-3 p-3\"&gt;\n                &lt;FodText&gt;\n                    Total verificate: @results.Count | \n                    Valide: @results.Count(r =&gt; r.IsValid) | \n                    Invalide: @results.Count(r =&gt; !r.IsValid)\n                &lt;/FodText&gt;\n            &lt;/FodPaper&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string batchNumbers;\n    private List&lt;BatchValidationResult&gt; results = new();\n    private bool isProcessing;\n    private int processedCount;\n    private int totalCount;\n\n    private async Task ValidateBatch()\n    {\n        results.Clear();\n        isProcessing = true;\n        processedCount = 0;\n\n        var numbers = batchNumbers?\n            .Split('\\n')\n            .Select(n =&gt; n.Trim())\n            .Where(n =&gt; !string.IsNullOrEmpty(n))\n            .Distinct()\n            .ToList() ?? new List&lt;string&gt;();\n\n        totalCount = numbers.Count;\n\n        // Procesare \u00een paralel cu limitare\n        var semaphore = new SemaphoreSlim(5); // Max 5 concurrent\n        var tasks = numbers.Select(async number =&gt;\n        {\n            await semaphore.WaitAsync();\n            try\n            {\n                var sw = Stopwatch.StartNew();\n                var result = await ValidateExtrasService.ValidateExtras(number);\n                sw.Stop();\n\n                var batchResult = new BatchValidationResult\n                {\n                    Number = number,\n                    IsValid = result?.Status == ValidateExtrasStatus.Valid,\n                    ValidationTime = sw.ElapsedMilliseconds\n                };\n\n                results.Add(batchResult);\n                processedCount++;\n                StateHasChanged();\n\n                return batchResult;\n            }\n            finally\n            {\n                semaphore.Release();\n            }\n        });\n\n        await Task.WhenAll(tasks);\n        isProcessing = false;\n    }\n\n    private class BatchValidationResult\n    {\n        public string Number { get; set; }\n        public bool IsValid { get; set; }\n        public double ValidationTime { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#7-serviciu-cu-cache-si-rate-limiting","title":"7. Serviciu cu cache \u0219i rate limiting","text":"<pre><code>public class EnhancedValidateExtrasService : IValidateExtrasService\n{\n    private readonly IValidateExtrasService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly IRateLimiter _rateLimiter;\n    private readonly ILogger&lt;EnhancedValidateExtrasService&gt; _logger;\n\n    public async Task&lt;ValidateExtrasModel&gt; ValidateExtras(string number)\n    {\n        // Verificare rate limit\n        var clientId = GetClientIdentifier();\n        var allowed = await _rateLimiter.AllowAsync(\n            $\"validate_extras_{clientId}\", \n            limit: 30, \n            window: TimeSpan.FromMinutes(1));\n\n        if (!allowed)\n        {\n            throw new RateLimitExceededException(\n                \"Prea multe cereri. \u00cencerca\u021bi din nou peste un minut.\");\n        }\n\n        // Verificare cache\n        var cacheKey = $\"extras_{NormalizeNumber(number)}\";\n        if (_cache.TryGetValue&lt;ValidateExtrasModel&gt;(cacheKey, out var cached))\n        {\n            _logger.LogDebug(\"Returning cached validation for extras\");\n            return cached;\n        }\n\n        // Validare\n        var result = await _innerService.ValidateExtras(number);\n\n        // Cache rezultat pentru 15 minute\n        _cache.Set(cacheKey, result, TimeSpan.FromMinutes(15));\n\n        // Logging pentru audit\n        _logger.LogInformation(\n            \"Extras validation completed: {Number} - {Status}\",\n            number.Substring(0, Math.Min(3, number.Length)) + \"***\",\n            result?.Status);\n\n        return result;\n    }\n\n    private string NormalizeNumber(string number)\n    {\n        return number?.Trim().ToUpperInvariant() ?? string.Empty;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#8-integrare-cu-alte-servicii","title":"8. Integrare cu alte servicii","text":"<pre><code>public class DocumentValidationOrchestrator\n{\n    private readonly IValidateExtrasService _extrasService;\n    private readonly IVerifyDocumentService _documentService;\n    private readonly ILogger&lt;DocumentValidationOrchestrator&gt; _logger;\n\n    public async Task&lt;ComprehensiveValidationResult&gt; ValidateDocument(\n        string documentNumber, \n        string extrasNumber)\n    {\n        var result = new ComprehensiveValidationResult();\n\n        // Validare \u00een paralel\n        var documentTask = _documentService.Verify(new VerifyDocumentModel \n        { \n            DocumentNumber = documentNumber \n        });\n\n        var extrasTask = _extrasService.ValidateExtras(extrasNumber);\n\n        await Task.WhenAll(documentTask, extrasTask);\n\n        var documentResult = await documentTask;\n        var extrasResult = await extrasTask;\n\n        result.DocumentValid = documentResult?.Found ?? false;\n        result.ExtrasValid = extrasResult?.Status == ValidateExtrasStatus.Valid;\n        result.OverallValid = result.DocumentValid &amp;&amp; result.ExtrasValid;\n\n        if (!result.OverallValid)\n        {\n            var issues = new List&lt;string&gt;();\n            if (!result.DocumentValid) issues.Add(\"Document invalid\");\n            if (!result.ExtrasValid) issues.Add(\"Extras invalid\");\n\n            result.ValidationIssues = issues;\n        }\n\n        return result;\n    }\n}\n\npublic class ComprehensiveValidationResult\n{\n    public bool DocumentValid { get; set; }\n    public bool ExtrasValid { get; set; }\n    public bool OverallValid { get; set; }\n    public List&lt;string&gt; ValidationIssues { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#9-monitorizare-si-metrici","title":"9. Monitorizare \u0219i metrici","text":"<pre><code>public class MonitoredValidateExtrasService : IValidateExtrasService\n{\n    private readonly IValidateExtrasService _innerService;\n    private readonly IMetricsCollector _metrics;\n\n    public async Task&lt;ValidateExtrasModel&gt; ValidateExtras(string number)\n    {\n        using var activity = Activity.StartActivity(\"ValidateExtras\");\n        var stopwatch = Stopwatch.StartNew();\n\n        try\n        {\n            var result = await _innerService.ValidateExtras(number);\n\n            stopwatch.Stop();\n\n            // \u00cenregistrare metrici\n            _metrics.RecordHistogram(\n                \"extras_validation_duration\",\n                stopwatch.ElapsedMilliseconds);\n\n            _metrics.RecordCounter(\n                \"extras_validation_total\",\n                1,\n                new KeyValuePair&lt;string, object&gt;(\"status\", result?.Status?.ToString() ?? \"unknown\"));\n\n            activity?.SetTag(\"validation.status\", result?.Status);\n            activity?.SetTag(\"validation.duration_ms\", stopwatch.ElapsedMilliseconds);\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            _metrics.RecordCounter(\"extras_validation_errors\", 1);\n            activity?.RecordException(ex);\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#10-testare","title":"10. Testare","text":"<pre><code>[TestClass]\npublic class ValidateExtrasServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IValidateExtrasService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.example.com/\")\n        };\n\n        _service = new ValidateExtrasService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task ValidateExtras_ValidNumber_ReturnsValid()\n    {\n        // Arrange\n        var extrasNumber = \"ABC-1234-5678\";\n        var expectedResponse = new ValidateExtrasModel \n        { \n            Status = ValidateExtrasStatus.Valid \n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.ValidateExtras(extrasNumber);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(ValidateExtrasStatus.Valid, result.Status);\n    }\n\n    [TestMethod]\n    public async Task ValidateExtras_InvalidNumber_ReturnsInvalid()\n    {\n        // Arrange\n        var extrasNumber = \"INVALID-123\";\n        var expectedResponse = new ValidateExtrasModel \n        { \n            Status = ValidateExtrasStatus.Invalid \n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.ValidateExtras(extrasNumber);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(ValidateExtrasStatus.Invalid, result.Status);\n    }\n\n    [TestMethod]\n    [ExpectedException(typeof(ArgumentNullException))]\n    public async Task ValidateExtras_NullNumber_ThrowsException()\n    {\n        // Act\n        await _service.ValidateExtras(null);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/ValidateExtrasService/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Validare format - Verifica\u021bi formatul \u00eenainte de apel server</li> <li>Cache rezultate - Cache-ui\u021bi valid\u0103rile pentru performan\u021b\u0103</li> <li>Rate limiting - Preveni\u021bi abuzuri prin limitare</li> <li>Normalizare - Normaliza\u021bi numerele \u00eenainte de validare</li> <li>Audit trail - \u00cenregistra\u021bi toate valid\u0103rile pentru audit</li> <li>Error handling - Trata\u021bi graceful erorile de re\u021bea</li> <li>Batch processing - Optimiza\u021bi valid\u0103rile multiple</li> </ol>"},{"location":"fod/servicii/ValidateExtrasService/#12-concluzie","title":"12. Concluzie","text":"<p><code>ValidateExtrasService</code> ofer\u0103 o interfa\u021b\u0103 simpl\u0103 \u0219i eficient\u0103 pentru validarea numerelor de extras din documentele oficiale. Cu suport pentru validare \u00een timp real, cache, \u0219i posibilit\u0103\u021bi de extindere, serviciul faciliteaz\u0103 verificarea rapid\u0103 a autenticit\u0103\u021bii extraselor \u00een sistemul FOD, contribuind la securitatea \u0219i fiabilitatea serviciilor digitale guvernamentale.</p>"},{"location":"fod/servicii/VerifyDocumentService/","title":"VerifyDocumentService","text":""},{"location":"fod/servicii/VerifyDocumentService/#documentatie-pentru-serviciul-verifydocumentservice","title":"Documenta\u021bie pentru serviciul VerifyDocumentService","text":""},{"location":"fod/servicii/VerifyDocumentService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>VerifyDocumentService</code> este un serviciu pentru verificarea autenticit\u0103\u021bii \u0219i validit\u0103\u021bii documentelor emise prin sistemul FOD. Permite verificarea documentelor folosind num\u0103rul documentului \u0219i op\u021bional un identificator MDocsShareId pentru acces la versiunea digital\u0103.</p> <p>Caracteristici principale: - Verificare document dup\u0103 num\u0103r - Validare suplimentar\u0103 cu MDocsShareId - Ob\u021binere detalii document (nume, dat\u0103 emitere) - Link de desc\u0103rcare pentru documente digitale - Status document (Valid, Invalid, Procesat) - Suport pentru integrare MDocs</p>"},{"location":"fod/servicii/VerifyDocumentService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs\n\n// Pentru aplica\u021bii Blazor WebAssembly\nbuilder.Services.AddFodComponents(configuration);\n\n// Pentru aplica\u021bii Blazor Server\nbuilder.Services.AddFodComponentsServer(configuration, connectionString);\n\n// Sau \u00eenregistrare manual\u0103 pentru client\nbuilder.Services.AddScoped&lt;IVerifyDocumentService, VerifyDocumentService&gt;();\nbuilder.Services.AddHttpClient&lt;IVerifyDocumentService, VerifyDocumentService&gt;(client =&gt;\n{\n    client.BaseAddress = new Uri(configuration[\"ApiSettings:BaseUrl\"]);\n});\n\n// Pentru server-side cu acces direct la baz\u0103 de date\nbuilder.Services.AddTransient&lt;IVerifyDocumentService, ServerVerifyDocumentService&gt;();\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#3-interfata-iverifydocumentservice","title":"3. Interfa\u021ba IVerifyDocumentService","text":"<pre><code>public interface IVerifyDocumentService\n{\n    Task&lt;VerifyDocumentResponseModel&gt; Verify(VerifyDocumentModel model);\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#4-metode-disponibile","title":"4. Metode Disponibile","text":"Metod\u0103 Parametri Return Descriere <code>Verify</code> <code>VerifyDocumentModel model</code> <code>Task&lt;VerifyDocumentResponseModel&gt;</code> Verific\u0103 un document"},{"location":"fod/servicii/VerifyDocumentService/#5-modele-de-date","title":"5. Modele de Date","text":""},{"location":"fod/servicii/VerifyDocumentService/#verifydocumentmodel-request","title":"VerifyDocumentModel (Request)","text":"<pre><code>public class VerifyDocumentModel\n{\n    [Required]\n    public string DocumentNumber { get; set; }\n\n    // Op\u021bional - pentru validare suplimentar\u0103 \u0219i acces la desc\u0103rcare\n    public Guid? MDocsShareId { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#verifydocumentresponsemodel-response","title":"VerifyDocumentResponseModel (Response)","text":"<pre><code>public class VerifyDocumentResponseModel\n{\n    public bool Found { get; set; }\n    public string DocumentNumber { get; set; }\n    public string DocumentName { get; set; }\n    public DateTime? DocumentIssueDate { get; set; }\n    public string MDocsShareFullLink { get; set; }\n    public ResponseDataStatusEnum? ResponseDataStatus { get; set; }\n}\n\npublic enum ResponseDataStatusEnum\n{\n    Valid = 0,\n    Invalid = 1,\n    Processed = 2\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/VerifyDocumentService/#verificare-simpla-document","title":"Verificare simpl\u0103 document","text":"<pre><code>@page \"/verifica-document\"\n@inject IVerifyDocumentService VerifyDocumentService\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h4\" GutterBottom=\"true\"&gt;\n        Verificare Document\n    &lt;/FodText&gt;\n\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            &lt;FodGrid Container=\"true\" Spacing=\"3\"&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"8\"&gt;\n                    &lt;FodInput @bind-Value=\"documentNumber\" \n                              Label=\"Num\u0103r document\"\n                              Placeholder=\"Introduce\u021bi num\u0103rul documentului\"\n                              Required=\"true\"\n                              HelperText=\"Num\u0103rul documentului a\u0219a cum apare pe document\" /&gt;\n                &lt;/FodGrid&gt;\n                &lt;FodGrid Item=\"true\" xs=\"12\" md=\"4\"&gt;\n                    &lt;FodButton OnClick=\"VerifyDocument\" \n                               Color=\"FodColor.Primary\"\n                               FullWidth=\"true\"\n                               Disabled=\"@(isLoading || string.IsNullOrEmpty(documentNumber))\"&gt;\n                        @if (isLoading)\n                        {\n                            &lt;FodLoadingButton /&gt;\n                        }\n                        else\n                        {\n                            &lt;text&gt;Verific\u0103&lt;/text&gt;\n                        }\n                    &lt;/FodButton&gt;\n                &lt;/FodGrid&gt;\n            &lt;/FodGrid&gt;\n\n            @if (verificationResult != null)\n            {\n                &lt;div class=\"mt-4\"&gt;\n                    @if (verificationResult.Found)\n                    {\n                        &lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n                            &lt;FodText&gt;\n                                &lt;strong&gt;Document g\u0103sit \u0219i valid!&lt;/strong&gt;\n                            &lt;/FodText&gt;\n                            &lt;FodList Dense=\"true\" Class=\"mt-2\"&gt;\n                                &lt;FodListItem&gt;\n                                    &lt;FodText&gt;Num\u0103r: @verificationResult.DocumentNumber&lt;/FodText&gt;\n                                &lt;/FodListItem&gt;\n                                &lt;FodListItem&gt;\n                                    &lt;FodText&gt;Tip: @verificationResult.DocumentName&lt;/FodText&gt;\n                                &lt;/FodListItem&gt;\n                                &lt;FodListItem&gt;\n                                    &lt;FodText&gt;Data emiterii: @verificationResult.DocumentIssueDate?.ToString(\"dd.MM.yyyy\")&lt;/FodText&gt;\n                                &lt;/FodListItem&gt;\n                                @if (verificationResult.ResponseDataStatus.HasValue)\n                                {\n                                    &lt;FodListItem&gt;\n                                        &lt;FodText&gt;Status: @GetStatusText(verificationResult.ResponseDataStatus.Value)&lt;/FodText&gt;\n                                    &lt;/FodListItem&gt;\n                                }\n                            &lt;/FodList&gt;\n                        &lt;/FodAlert&gt;\n                    }\n                    else\n                    {\n                        &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n                            Documentul cu num\u0103rul &lt;strong&gt;@documentNumber&lt;/strong&gt; nu a fost g\u0103sit \u00een sistem.\n                        &lt;/FodAlert&gt;\n                    }\n                &lt;/div&gt;\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    private string documentNumber;\n    private bool isLoading;\n    private VerifyDocumentResponseModel verificationResult;\n\n    private async Task VerifyDocument()\n    {\n        if (string.IsNullOrWhiteSpace(documentNumber))\n            return;\n\n        isLoading = true;\n        verificationResult = null;\n\n        try\n        {\n            var model = new VerifyDocumentModel\n            {\n                DocumentNumber = documentNumber.Trim()\n            };\n\n            verificationResult = await VerifyDocumentService.Verify(model);\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    private string GetStatusText(ResponseDataStatusEnum status)\n    {\n        return status switch\n        {\n            ResponseDataStatusEnum.Valid =&gt; \"Valid\",\n            ResponseDataStatusEnum.Invalid =&gt; \"Invalid\",\n            ResponseDataStatusEnum.Processed =&gt; \"Procesat\",\n            _ =&gt; \"Necunoscut\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#verificare-cu-descarcare-mdocs","title":"Verificare cu desc\u0103rcare MDocs","text":"<pre><code>@page \"/verifica-document/{DocumentNumber}/{MDocsShareId:guid}\"\n@inject IVerifyDocumentService VerifyDocumentService\n@inject NavigationManager Navigation\n\n&lt;FodContainer&gt;\n    &lt;FodCard&gt;\n        &lt;FodCardContent&gt;\n            @if (isLoading)\n            {\n                &lt;FodLoadingLinear Indeterminate=\"true\" /&gt;\n                &lt;FodText Align=\"FodAlign.Center\" Class=\"mt-3\"&gt;\n                    Se verific\u0103 documentul...\n                &lt;/FodText&gt;\n            }\n            else if (verificationResult != null)\n            {\n                @if (verificationResult.Found &amp;&amp; !string.IsNullOrEmpty(verificationResult.MDocsShareFullLink))\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Success\"&gt;\n                        &lt;FodAlertTitle&gt;Document verificat cu succes!&lt;/FodAlertTitle&gt;\n                        &lt;div class=\"mt-3\"&gt;\n                            &lt;FodText&gt;Document: @verificationResult.DocumentName&lt;/FodText&gt;\n                            &lt;FodText&gt;Num\u0103r: @verificationResult.DocumentNumber&lt;/FodText&gt;\n                            &lt;FodText&gt;Data: @verificationResult.DocumentIssueDate?.ToString(\"dd.MM.yyyy\")&lt;/FodText&gt;\n                        &lt;/div&gt;\n                    &lt;/FodAlert&gt;\n\n                    &lt;div class=\"mt-4 text-center\"&gt;\n                        &lt;FodButton Color=\"FodColor.Primary\" \n                                   Size=\"FodSize.Large\"\n                                   StartIcon=\"@FodIcons.Material.Filled.Download\"\n                                   OnClick=\"DownloadDocument\"&gt;\n                            Descarc\u0103 Document\n                        &lt;/FodButton&gt;\n                    &lt;/div&gt;\n                }\n                else if (verificationResult.Found)\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Warning\"&gt;\n                        Documentul a fost g\u0103sit dar link-ul de desc\u0103rcare nu este valid.\n                    &lt;/FodAlert&gt;\n                }\n                else\n                {\n                    &lt;FodAlert Severity=\"FodSeverity.Error\"&gt;\n                        Documentul nu a fost g\u0103sit sau link-ul de verificare este invalid.\n                    &lt;/FodAlert&gt;\n                }\n            }\n        &lt;/FodCardContent&gt;\n    &lt;/FodCard&gt;\n&lt;/FodContainer&gt;\n\n@code {\n    [Parameter] public string DocumentNumber { get; set; }\n    [Parameter] public Guid MDocsShareId { get; set; }\n\n    private bool isLoading = true;\n    private VerifyDocumentResponseModel verificationResult;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await VerifyDocumentWithMDocs();\n    }\n\n    private async Task VerifyDocumentWithMDocs()\n    {\n        try\n        {\n            var model = new VerifyDocumentModel\n            {\n                DocumentNumber = DocumentNumber,\n                MDocsShareId = MDocsShareId\n            };\n\n            verificationResult = await VerifyDocumentService.Verify(model);\n        }\n        finally\n        {\n            isLoading = false;\n        }\n    }\n\n    private void DownloadDocument()\n    {\n        if (!string.IsNullOrEmpty(verificationResult?.MDocsShareFullLink))\n        {\n            Navigation.NavigateTo(verificationResult.MDocsShareFullLink, true);\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#integrare-cu-componenta-fodverifydocument","title":"Integrare cu componenta FodVerifyDocument","text":"<pre><code>@page \"/servicii/verifica\"\n\n&lt;FodContainer&gt;\n    &lt;FodText Typo=\"Typo.h3\" GutterBottom=\"true\"&gt;\n        Verificare Documente Emise\n    &lt;/FodText&gt;\n\n    &lt;FodText Typo=\"Typo.body1\" GutterBottom=\"true\"&gt;\n        Verifica\u021bi autenticitatea documentelor emise prin introducerea num\u0103rului documentului.\n    &lt;/FodText&gt;\n\n    &lt;!-- Folose\u0219te componenta predefinit\u0103 --&gt;\n    &lt;FodVerifyDocument \n        NotFoundMessage=\"Documentul solicitat nu a fost g\u0103sit \u00een baza de date.\"\n        DownloadMessage=\"Click pentru a desc\u0103rca documentul\"\n        ShowHelperText=\"true\" /&gt;\n&lt;/FodContainer&gt;\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#implementare-cu-cache","title":"Implementare cu cache","text":"<pre><code>public class CachedVerifyDocumentService : IVerifyDocumentService\n{\n    private readonly IVerifyDocumentService _innerService;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger&lt;CachedVerifyDocumentService&gt; _logger;\n\n    public CachedVerifyDocumentService(\n        IVerifyDocumentService innerService,\n        IMemoryCache cache,\n        ILogger&lt;CachedVerifyDocumentService&gt; logger)\n    {\n        _innerService = innerService;\n        _cache = cache;\n        _logger = logger;\n    }\n\n    public async Task&lt;VerifyDocumentResponseModel&gt; Verify(VerifyDocumentModel model)\n    {\n        var cacheKey = $\"doc_{model.DocumentNumber}_{model.MDocsShareId}\";\n\n        if (_cache.TryGetValue&lt;VerifyDocumentResponseModel&gt;(cacheKey, out var cached))\n        {\n            _logger.LogDebug($\"Returnare din cache pentru document {model.DocumentNumber}\");\n            return cached;\n        }\n\n        var result = await _innerService.Verify(model);\n\n        // Cache doar documentele g\u0103site pentru 5 minute\n        if (result.Found)\n        {\n            _cache.Set(cacheKey, result, TimeSpan.FromMinutes(5));\n        }\n\n        return result;\n    }\n}\n\n// \u00cenregistrare \u00een DI\nservices.AddScoped&lt;IVerifyDocumentService&gt;(provider =&gt;\n{\n    var innerService = new VerifyDocumentService(\n        provider.GetRequiredService&lt;HttpClient&gt;());\n\n    return new CachedVerifyDocumentService(\n        innerService,\n        provider.GetRequiredService&lt;IMemoryCache&gt;(),\n        provider.GetRequiredService&lt;ILogger&lt;CachedVerifyDocumentService&gt;&gt;());\n});\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#7-integrare-cu-qr-code","title":"7. Integrare cu QR Code","text":"<pre><code>@inject IVerifyDocumentService VerifyDocumentService\n@inject IJSRuntime JSRuntime\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Scana\u021bi QR Code pentru verificare\n        &lt;/FodText&gt;\n\n        &lt;div id=\"qr-reader\" style=\"width: 100%; max-width: 500px;\"&gt;&lt;/div&gt;\n\n        @if (scannedResult != null)\n        {\n            &lt;FodVerifyDocumentResponse Model=\"@scannedResult\" /&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private VerifyDocumentResponseModel scannedResult;\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await InitializeQRScanner();\n        }\n    }\n\n    private async Task InitializeQRScanner()\n    {\n        // Ini\u021bializare QR scanner\n        await JSRuntime.InvokeVoidAsync(\"initQRScanner\", \n            DotNetObjectReference.Create(this));\n    }\n\n    [JSInvokable]\n    public async Task OnQRCodeScanned(string qrContent)\n    {\n        // Parse QR content - format: DOC:number:mdocsId\n        var parts = qrContent.Split(':');\n        if (parts.Length &gt;= 2 &amp;&amp; parts[0] == \"DOC\")\n        {\n            var model = new VerifyDocumentModel\n            {\n                DocumentNumber = parts[1],\n                MDocsShareId = parts.Length &gt; 2 ? Guid.Parse(parts[2]) : null\n            };\n\n            scannedResult = await VerifyDocumentService.Verify(model);\n            StateHasChanged();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#8-verificare-in-lot-batch","title":"8. Verificare \u00een lot (batch)","text":"<pre><code>@inject IVerifyDocumentService VerifyDocumentService\n\n&lt;FodCard&gt;\n    &lt;FodCardContent&gt;\n        &lt;FodText Typo=\"Typo.h6\" GutterBottom=\"true\"&gt;\n            Verificare multipl\u0103 documente\n        &lt;/FodText&gt;\n\n        &lt;FodTextArea @bind-Value=\"documentNumbers\" \n                     Label=\"Numere documente (unul per linie)\"\n                     Rows=\"5\" /&gt;\n\n        &lt;FodButton OnClick=\"VerifyBatch\" \n                   Color=\"FodColor.Primary\"\n                   Class=\"mt-3\"&gt;\n            Verific\u0103 toate\n        &lt;/FodButton&gt;\n\n        @if (batchResults.Any())\n        {\n            &lt;FodDataTable Items=\"@batchResults\" Class=\"mt-4\"&gt;\n                &lt;HeaderContent&gt;\n                    &lt;FodTHeadRow&gt;\n                        &lt;FodTh&gt;Num\u0103r Document&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Status&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Tip Document&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Data Emiterii&lt;/FodTh&gt;\n                        &lt;FodTh&gt;Ac\u021biuni&lt;/FodTh&gt;\n                    &lt;/FodTHeadRow&gt;\n                &lt;/HeaderContent&gt;\n                &lt;RowTemplate&gt;\n                    &lt;FodTr&gt;\n                        &lt;FodTd&gt;@context.DocumentNumber&lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            @if (context.Found)\n                            {\n                                &lt;FodChip Color=\"FodColor.Success\" Size=\"FodSize.Small\"&gt;\n                                    G\u0103sit\n                                &lt;/FodChip&gt;\n                            }\n                            else\n                            {\n                                &lt;FodChip Color=\"FodColor.Error\" Size=\"FodSize.Small\"&gt;\n                                    Neg\u0103sit\n                                &lt;/FodChip&gt;\n                            }\n                        &lt;/FodTd&gt;\n                        &lt;FodTd&gt;@context.DocumentName&lt;/FodTd&gt;\n                        &lt;FodTd&gt;@context.DocumentIssueDate?.ToString(\"dd.MM.yyyy\")&lt;/FodTd&gt;\n                        &lt;FodTd&gt;\n                            @if (!string.IsNullOrEmpty(context.MDocsShareFullLink))\n                            {\n                                &lt;FodIconButton Icon=\"@FodIcons.Material.Filled.Download\"\n                                               Size=\"FodSize.Small\"\n                                               OnClick=\"() =&gt; DownloadDocument(context)\" /&gt;\n                            }\n                        &lt;/FodTd&gt;\n                    &lt;/FodTr&gt;\n                &lt;/RowTemplate&gt;\n            &lt;/FodDataTable&gt;\n        }\n    &lt;/FodCardContent&gt;\n&lt;/FodCard&gt;\n\n@code {\n    private string documentNumbers;\n    private List&lt;VerifyDocumentResponseModel&gt; batchResults = new();\n\n    private async Task VerifyBatch()\n    {\n        batchResults.Clear();\n\n        var numbers = documentNumbers?\n            .Split('\\n')\n            .Select(n =&gt; n.Trim())\n            .Where(n =&gt; !string.IsNullOrEmpty(n))\n            .Distinct();\n\n        if (numbers?.Any() == true)\n        {\n            foreach (var number in numbers)\n            {\n                var result = await VerifyDocumentService.Verify(new VerifyDocumentModel\n                {\n                    DocumentNumber = number\n                });\n\n                batchResults.Add(result);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#9-monitorizare-si-logging","title":"9. Monitorizare \u0219i Logging","text":"<pre><code>public class MonitoredVerifyDocumentService : IVerifyDocumentService\n{\n    private readonly IVerifyDocumentService _innerService;\n    private readonly ILogger&lt;MonitoredVerifyDocumentService&gt; _logger;\n    private readonly ITelemetryService _telemetry;\n\n    public async Task&lt;VerifyDocumentResponseModel&gt; Verify(VerifyDocumentModel model)\n    {\n        using var activity = Activity.StartActivity(\"VerifyDocument\");\n        activity?.SetTag(\"document.number\", model.DocumentNumber);\n        activity?.SetTag(\"has.mdocs.id\", model.MDocsShareId.HasValue);\n\n        var stopwatch = Stopwatch.StartNew();\n\n        try\n        {\n            var result = await _innerService.Verify(model);\n\n            _telemetry.TrackEvent(\"DocumentVerified\", new Dictionary&lt;string, string&gt;\n            {\n                [\"DocumentNumber\"] = model.DocumentNumber,\n                [\"Found\"] = result.Found.ToString(),\n                [\"HasDownloadLink\"] = (!string.IsNullOrEmpty(result.MDocsShareFullLink)).ToString(),\n                [\"Duration\"] = stopwatch.ElapsedMilliseconds.ToString()\n            });\n\n            if (result.Found)\n            {\n                _logger.LogInformation(\n                    \"Document verificat cu succes: {DocumentNumber}, Tip: {DocumentType}\", \n                    result.DocumentNumber, \n                    result.DocumentName);\n            }\n            else\n            {\n                _logger.LogWarning(\n                    \"Document neg\u0103sit: {DocumentNumber}\", \n                    model.DocumentNumber);\n            }\n\n            return result;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \n                \"Eroare la verificarea documentului {DocumentNumber}\", \n                model.DocumentNumber);\n\n            _telemetry.TrackException(ex, new Dictionary&lt;string, string&gt;\n            {\n                [\"DocumentNumber\"] = model.DocumentNumber\n            });\n\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#10-testare","title":"10. Testare","text":"<pre><code>[TestClass]\npublic class VerifyDocumentServiceTests\n{\n    private Mock&lt;HttpMessageHandler&gt; _httpHandler;\n    private IVerifyDocumentService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _httpHandler = new Mock&lt;HttpMessageHandler&gt;();\n        var httpClient = new HttpClient(_httpHandler.Object)\n        {\n            BaseAddress = new Uri(\"https://api.example.com/\")\n        };\n\n        _service = new VerifyDocumentService(httpClient);\n    }\n\n    [TestMethod]\n    public async Task Verify_DocumentFound_ReturnsDetails()\n    {\n        // Arrange\n        var model = new VerifyDocumentModel\n        {\n            DocumentNumber = \"DOC-2024-001\"\n        };\n\n        var expectedResponse = new VerifyDocumentResponseModel\n        {\n            Found = true,\n            DocumentNumber = \"DOC-2024-001\",\n            DocumentName = \"Certificat de \u00eenregistrare\",\n            DocumentIssueDate = DateTime.Now.AddDays(-5),\n            ResponseDataStatus = ResponseDataStatusEnum.Valid\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.Verify(model);\n\n        // Assert\n        Assert.IsTrue(result.Found);\n        Assert.AreEqual(\"DOC-2024-001\", result.DocumentNumber);\n        Assert.AreEqual(\"Certificat de \u00eenregistrare\", result.DocumentName);\n        Assert.AreEqual(ResponseDataStatusEnum.Valid, result.ResponseDataStatus);\n    }\n\n    [TestMethod]\n    public async Task Verify_WithMDocsId_ReturnsDownloadLink()\n    {\n        // Arrange\n        var mdocsId = Guid.NewGuid();\n        var model = new VerifyDocumentModel\n        {\n            DocumentNumber = \"DOC-2024-001\",\n            MDocsShareId = mdocsId\n        };\n\n        var expectedResponse = new VerifyDocumentResponseModel\n        {\n            Found = true,\n            DocumentNumber = \"DOC-2024-001\",\n            MDocsShareFullLink = $\"https://mdocs.gov.md/share/{mdocsId}\"\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.Verify(model);\n\n        // Assert\n        Assert.IsTrue(result.Found);\n        Assert.IsNotNull(result.MDocsShareFullLink);\n        Assert.IsTrue(result.MDocsShareFullLink.Contains(mdocsId.ToString()));\n    }\n\n    [TestMethod]\n    public async Task Verify_DocumentNotFound_ReturnsFalse()\n    {\n        // Arrange\n        var model = new VerifyDocumentModel\n        {\n            DocumentNumber = \"INVALID-001\"\n        };\n\n        var expectedResponse = new VerifyDocumentResponseModel\n        {\n            Found = false,\n            DocumentNumber = \"INVALID-001\"\n        };\n\n        SetupHttpResponse(expectedResponse);\n\n        // Act\n        var result = await _service.Verify(model);\n\n        // Assert\n        Assert.IsFalse(result.Found);\n        Assert.IsNull(result.DocumentName);\n        Assert.IsNull(result.DocumentIssueDate);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#11-best-practices","title":"11. Best Practices","text":"<ol> <li>Validare input - Valida\u021bi num\u0103rul documentului \u00eenainte de verificare</li> <li>Cache rezultate - Cache-ui\u021bi documentele g\u0103site pentru performan\u021b\u0103</li> <li>Tratare erori - Gestiona\u021bi erorile de re\u021bea \u0219i timeout</li> <li>Securitate - Nu expune\u021bi informa\u021bii sensibile \u00een logs</li> <li>Rate limiting - Implementa\u021bi limite pentru verific\u0103ri repetate</li> <li>Audit trail - \u00cenregistra\u021bi toate verific\u0103rile pentru audit</li> </ol>"},{"location":"fod/servicii/VerifyDocumentService/#12-integrare-cu-alte-servicii","title":"12. Integrare cu alte servicii","text":"<pre><code>public class DocumentVerificationOrchestrator\n{\n    private readonly IVerifyDocumentService _verifyService;\n    private readonly INotificationService _notificationService;\n    private readonly IAuditService _auditService;\n\n    public async Task&lt;VerifyDocumentResponseModel&gt; VerifyAndNotify(\n        VerifyDocumentModel model, \n        string userEmail = null)\n    {\n        // Verificare document\n        var result = await _verifyService.Verify(model);\n\n        // Audit\n        await _auditService.LogDocumentVerification(\n            model.DocumentNumber, \n            result.Found, \n            userEmail);\n\n        // Notificare email dac\u0103 este cazul\n        if (!string.IsNullOrEmpty(userEmail))\n        {\n            var subject = result.Found \n                ? \"Document verificat cu succes\" \n                : \"Document neg\u0103sit\";\n\n            await _notificationService.SendEmailAsync(\n                userEmail, \n                subject, \n                GenerateEmailBody(result));\n        }\n\n        return result;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/VerifyDocumentService/#13-concluzie","title":"13. Concluzie","text":"<p><code>VerifyDocumentService</code> ofer\u0103 func\u021bionalitate complet\u0103 pentru verificarea documentelor emise prin sistemul FOD. Cu suport pentru verificare simpl\u0103 sau cu MDocs, integrare u\u0219oar\u0103 \u00een componente Blazor \u0219i op\u021biuni extinse de monitorizare, serviciul asigur\u0103 autenticitatea \u0219i accesibilitatea documentelor digitale emise de institu\u021biile guvernamentale.</p>"},{"location":"fod/servicii/WorkingProgramService/","title":"WorkingProgramService","text":""},{"location":"fod/servicii/WorkingProgramService/#documentatie-pentru-serviciul-workingprogramservice","title":"Documenta\u021bie pentru serviciul WorkingProgramService","text":""},{"location":"fod/servicii/WorkingProgramService/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>IWorkingProgramService</code> este o interfa\u021b\u0103 server-side care define\u0219te func\u021bionalit\u0103\u021bile pentru gestionarea programului de lucru \u00een aplica\u021biile FOD. Serviciul permite verificarea orelor de lucru, ob\u021binerea orelor de deschidere/\u00eenchidere \u0219i navigarea \u00eentre zilele lucr\u0103toare.</p> <p>Implement\u0103ri disponibile: - EightToFiveWorkingProgramService - Program standard 8:00-17:00, luni-vineri - ConfigurationWorkingProgramService - Program configurabil prin settings - FodWorkingProgramService - Program bazat pe date din baza de date</p> <p>Caracteristici principale: - Verificare ore de lucru - Determinare program zilnic - Navigare \u00eentre zile lucr\u0103toare - Suport pentru parametri personaliza\u021bi - Configurare flexibil\u0103</p>"},{"location":"fod/servicii/WorkingProgramService/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs (server-side)\n\n// \u00cenregistrare implementare simpl\u0103\nbuilder.Services.AddScoped&lt;IWorkingProgramService, EightToFiveWorkingProgramService&gt;();\n\n// Sau \u00eenregistrare implementare configurabil\u0103\nbuilder.Services.Configure&lt;FodConfiguration&gt;(configuration);\nbuilder.Services.AddScoped&lt;IWorkingProgramService, ConfigurationWorkingProgramService&gt;();\n\n// \u00cenregistrare multipl\u0103 pentru EstimatedDateCalculator\nbuilder.Services.AddScoped&lt;IWorkingProgramService, EightToFiveWorkingProgramService&gt;();\nbuilder.Services.AddScoped&lt;IWorkingProgramService, ConfigurationWorkingProgramService&gt;();\n\n// Configurare \u00een appsettings.json\n{\n  \"FodConfiguration\": {\n    \"Services\": {\n      \"UseEightToFiveWorkingProgramService\": true,\n      \"ConfigurationWorkingProgramService\": {\n        \"WorkingDays\": [\n          {\n            \"Day\": \"Monday\",\n            \"OpenHours\": 8,\n            \"OpenMinutes\": 0,\n            \"CloseHours\": 17,\n            \"CloseMinutes\": 0\n          },\n          {\n            \"Day\": \"Tuesday\",\n            \"OpenHours\": 8,\n            \"OpenMinutes\": 0,\n            \"CloseHours\": 17,\n            \"CloseMinutes\": 0\n          },\n          // ... alte zile\n        ]\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IWorkingProgramService\n{\n    bool IsInWorkingHours(DateTime dateTime, IDictionary&lt;string, object&gt;? @params = null);\n    DateTime? GetCurrentWorkingDayOpening(DateTime dateTime, IDictionary&lt;string, object&gt;? @params = null);\n    DateTime GetCurrentWorkingDayClosing(DateTime currentDate, IDictionary&lt;string, object&gt;? @params = null);\n    DateTime GetNextWorkingDayOpening(DateTime currentDate, IDictionary&lt;string, object&gt;? @params = null);\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#4-metode-disponibile","title":"4. Metode Disponibile","text":""},{"location":"fod/servicii/WorkingProgramService/#isinworkinghours","title":"IsInWorkingHours","text":"<p>Verific\u0103 dac\u0103 o dat\u0103/or\u0103 se afl\u0103 \u00een programul de lucru.</p> <p>Parametri: - <code>dateTime</code> (DateTime) - Data \u0219i ora de verificat - <code>@params</code> (IDictionary?, op\u021bional) - Parametri personaliza\u021bi <p>Returneaz\u0103: - <code>bool</code> - True dac\u0103 este \u00een ore de lucru, false altfel</p>"},{"location":"fod/servicii/WorkingProgramService/#getcurrentworkingdayopening","title":"GetCurrentWorkingDayOpening","text":"<p>Ob\u021bine ora de deschidere pentru ziua curent\u0103.</p> <p>Parametri: - <code>dateTime</code> (DateTime) - Data pentru care se caut\u0103 ora de deschidere - <code>@params</code> (IDictionary?, op\u021bional) - Parametri personaliza\u021bi <p>Returneaz\u0103: - <code>DateTime?</code> - Ora de deschidere sau null dac\u0103 nu este zi lucr\u0103toare</p>"},{"location":"fod/servicii/WorkingProgramService/#getcurrentworkingdayclosing","title":"GetCurrentWorkingDayClosing","text":"<p>Ob\u021bine ora de \u00eenchidere pentru ziua curent\u0103.</p> <p>Parametri: - <code>currentDate</code> (DateTime) - Data pentru care se caut\u0103 ora de \u00eenchidere - <code>@params</code> (IDictionary?, op\u021bional) - Parametri personaliza\u021bi <p>Returneaz\u0103: - <code>DateTime</code> - Ora de \u00eenchidere</p>"},{"location":"fod/servicii/WorkingProgramService/#getnextworkingdayopening","title":"GetNextWorkingDayOpening","text":"<p>Ob\u021bine ora de deschidere pentru urm\u0103toarea zi lucr\u0103toare.</p> <p>Parametri: - <code>currentDate</code> (DateTime) - Data de la care se caut\u0103 - <code>@params</code> (IDictionary?, op\u021bional) - Parametri personaliza\u021bi <p>Returneaz\u0103: - <code>DateTime</code> - Ora de deschidere a urm\u0103toarei zile lucr\u0103toare</p>"},{"location":"fod/servicii/WorkingProgramService/#5-implementari-standard","title":"5. Implement\u0103ri Standard","text":""},{"location":"fod/servicii/WorkingProgramService/#eighttofiveworkingprogramservice","title":"EightToFiveWorkingProgramService","text":"<pre><code>public class BusinessHoursService\n{\n    private readonly IWorkingProgramService _workingProgram;\n\n    public BusinessHoursService(IWorkingProgramService workingProgram)\n    {\n        _workingProgram = workingProgram;\n    }\n\n    public WorkingHoursInfo GetTodaySchedule()\n    {\n        var now = DateTime.Now;\n\n        var opening = _workingProgram.GetCurrentWorkingDayOpening(now);\n        if (!opening.HasValue)\n        {\n            return new WorkingHoursInfo\n            {\n                IsWorkingDay = false,\n                Message = \"Ast\u0103zi este zi nelucr\u0103toare\"\n            };\n        }\n\n        var closing = _workingProgram.GetCurrentWorkingDayClosing(now);\n        var isOpen = _workingProgram.IsInWorkingHours(now);\n\n        return new WorkingHoursInfo\n        {\n            IsWorkingDay = true,\n            OpeningTime = opening.Value,\n            ClosingTime = closing,\n            IsCurrentlyOpen = isOpen,\n            Message = isOpen \n                ? $\"Deschis p\u00e2n\u0103 la {closing:HH:mm}\" \n                : $\"\u00cenchis. Program: {opening:HH:mm} - {closing:HH:mm}\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#configurationworkingprogramservice","title":"ConfigurationWorkingProgramService","text":"<pre><code>public class FlexibleScheduleService\n{\n    private readonly IWorkingProgramService _workingProgram;\n    private readonly IConfiguration _configuration;\n\n    public async Task&lt;ScheduleResponse&gt; GetDepartmentSchedule(\n        string departmentId)\n    {\n        // Parametri pentru departament specific\n        var parameters = new Dictionary&lt;string, object&gt;\n        {\n            [\"DepartmentId\"] = departmentId\n        };\n\n        var today = DateTime.Today;\n        var schedule = new List&lt;DaySchedule&gt;();\n\n        // Ob\u021bine programul pentru urm\u0103toarele 7 zile\n        for (int i = 0; i &lt; 7; i++)\n        {\n            var date = today.AddDays(i);\n            var opening = _workingProgram.GetCurrentWorkingDayOpening(date, parameters);\n\n            if (opening.HasValue)\n            {\n                var closing = _workingProgram.GetCurrentWorkingDayClosing(date, parameters);\n                schedule.Add(new DaySchedule\n                {\n                    Date = date,\n                    DayName = date.ToString(\"dddd\"),\n                    OpeningTime = opening.Value,\n                    ClosingTime = closing,\n                    IsWorkingDay = true\n                });\n            }\n            else\n            {\n                schedule.Add(new DaySchedule\n                {\n                    Date = date,\n                    DayName = date.ToString(\"dddd\"),\n                    IsWorkingDay = false\n                });\n            }\n        }\n\n        return new ScheduleResponse\n        {\n            DepartmentId = departmentId,\n            Schedule = schedule\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#6-verificare-disponibilitate-serviciu","title":"6. Verificare disponibilitate serviciu","text":"<pre><code>public class ServiceAvailabilityChecker\n{\n    private readonly IWorkingProgramService _workingProgram;\n    private readonly ILogger&lt;ServiceAvailabilityChecker&gt; _logger;\n\n    public ServiceAvailabilityResult CheckAvailability(\n        DateTime requestedTime,\n        TimeSpan serviceDuration)\n    {\n        // Verific\u0103 dac\u0103 este \u00een ore de lucru\n        if (!_workingProgram.IsInWorkingHours(requestedTime))\n        {\n            var nextOpening = _workingProgram.GetNextWorkingDayOpening(requestedTime);\n            return new ServiceAvailabilityResult\n            {\n                IsAvailable = false,\n                Reason = \"\u00cen afara orelor de program\",\n                NextAvailableTime = nextOpening,\n                Message = $\"Serviciul poate fi solicitat \u00eencep\u00e2nd cu {nextOpening:dddd, dd MMMM, HH:mm}\"\n            };\n        }\n\n        // Verific\u0103 dac\u0103 serviciul poate fi completat \u00een aceea\u0219i zi\n        var closing = _workingProgram.GetCurrentWorkingDayClosing(requestedTime);\n        var endTime = requestedTime.Add(serviceDuration);\n\n        if (endTime &gt; closing)\n        {\n            return new ServiceAvailabilityResult\n            {\n                IsAvailable = false,\n                Reason = \"Timp insuficient \u00een ziua curent\u0103\",\n                NextAvailableTime = _workingProgram.GetNextWorkingDayOpening(requestedTime),\n                Message = $\"Serviciul necesit\u0103 {serviceDuration.TotalHours:F1} ore \u0219i nu poate fi finalizat ast\u0103zi\"\n            };\n        }\n\n        return new ServiceAvailabilityResult\n        {\n            IsAvailable = true,\n            EstimatedCompletionTime = endTime,\n            Message = $\"Serviciul poate fi finalizat p\u00e2n\u0103 la {endTime:HH:mm}\"\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#7-calcul-timp-ramas-de-lucru","title":"7. Calcul timp r\u0103mas de lucru","text":"<pre><code>public class WorkingTimeCalculator\n{\n    private readonly IWorkingProgramService _workingProgram;\n\n    public TimeSpan GetRemainingWorkingTime(DateTime fromTime)\n    {\n        if (!_workingProgram.IsInWorkingHours(fromTime))\n        {\n            return TimeSpan.Zero;\n        }\n\n        var closing = _workingProgram.GetCurrentWorkingDayClosing(fromTime);\n        var remaining = closing - fromTime;\n\n        return remaining &gt; TimeSpan.Zero ? remaining : TimeSpan.Zero;\n    }\n\n    public int GetWorkingDaysBetween(DateTime startDate, DateTime endDate)\n    {\n        var workingDays = 0;\n        var current = startDate.Date;\n\n        while (current &lt;= endDate.Date)\n        {\n            var opening = _workingProgram.GetCurrentWorkingDayOpening(current);\n            if (opening.HasValue)\n            {\n                workingDays++;\n            }\n            current = current.AddDays(1);\n        }\n\n        return workingDays;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#8-implementare-personalizata-cu-sarbatori","title":"8. Implementare personalizat\u0103 cu s\u0103rb\u0103tori","text":"<pre><code>public class HolidayAwareWorkingProgramService : IWorkingProgramService\n{\n    private readonly IWorkingProgramService _baseService;\n    private readonly IHolidayService _holidayService;\n\n    public HolidayAwareWorkingProgramService(\n        IWorkingProgramService baseService,\n        IHolidayService holidayService)\n    {\n        _baseService = baseService;\n        _holidayService = holidayService;\n    }\n\n    public bool IsInWorkingHours(DateTime dateTime, IDictionary&lt;string, object&gt;? @params = null)\n    {\n        // Verific\u0103 dac\u0103 este s\u0103rb\u0103toare\n        if (_holidayService.IsHoliday(dateTime.Date))\n        {\n            return false;\n        }\n\n        return _baseService.IsInWorkingHours(dateTime, @params);\n    }\n\n    public DateTime? GetCurrentWorkingDayOpening(DateTime dateTime, IDictionary&lt;string, object&gt;? @params = null)\n    {\n        if (_holidayService.IsHoliday(dateTime.Date))\n        {\n            return null;\n        }\n\n        return _baseService.GetCurrentWorkingDayOpening(dateTime, @params);\n    }\n\n    public DateTime GetCurrentWorkingDayClosing(DateTime currentDate, IDictionary&lt;string, object&gt;? @params = null)\n    {\n        return _baseService.GetCurrentWorkingDayClosing(currentDate, @params);\n    }\n\n    public DateTime GetNextWorkingDayOpening(DateTime currentDate, IDictionary&lt;string, object&gt;? @params = null)\n    {\n        var nextDate = currentDate.AddDays(1);\n\n        // Sari peste s\u0103rb\u0103tori\n        while (_holidayService.IsHoliday(nextDate.Date))\n        {\n            nextDate = nextDate.AddDays(1);\n        }\n\n        var opening = _baseService.GetCurrentWorkingDayOpening(nextDate, @params);\n        if (opening.HasValue)\n        {\n            return opening.Value;\n        }\n\n        // Dac\u0103 nu e zi lucr\u0103toare, continu\u0103 c\u0103utarea\n        return GetNextWorkingDayOpening(nextDate, @params);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#9-notificari-bazate-pe-program","title":"9. Notific\u0103ri bazate pe program","text":"<pre><code>public class WorkingHoursNotificationService\n{\n    private readonly IWorkingProgramService _workingProgram;\n    private readonly INotificationService _notifications;\n\n    public async Task SendWorkingHoursReminder()\n    {\n        var now = DateTime.Now;\n        var closing = _workingProgram.GetCurrentWorkingDayClosing(now);\n        var timeUntilClosing = closing - now;\n\n        if (timeUntilClosing.TotalMinutes &lt;= 30 &amp;&amp; timeUntilClosing.TotalMinutes &gt; 0)\n        {\n            await _notifications.SendToAll(new Notification\n            {\n                Title = \"Program de lucru\",\n                Message = $\"Birourile se \u00eenchid \u00een {timeUntilClosing.TotalMinutes:F0} minute\",\n                Type = NotificationType.Info\n            });\n        }\n    }\n\n    public async Task NotifyNextOpeningTime(string userId)\n    {\n        var now = DateTime.Now;\n\n        if (!_workingProgram.IsInWorkingHours(now))\n        {\n            var nextOpening = _workingProgram.GetNextWorkingDayOpening(now);\n\n            await _notifications.SendToUser(userId, new Notification\n            {\n                Title = \"\u00cen afara programului\",\n                Message = $\"Reveni\u021bi {nextOpening:dddd, dd MMMM} la ora {nextOpening:HH:mm}\",\n                Type = NotificationType.Warning\n            });\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#10-dashboard-ore-de-lucru","title":"10. Dashboard ore de lucru","text":"<pre><code>public class WorkingHoursDashboard\n{\n    private readonly IWorkingProgramService _workingProgram;\n\n    public DashboardData GetDashboardData()\n    {\n        var now = DateTime.Now;\n        var data = new DashboardData\n        {\n            CurrentTime = now,\n            IsWorkingHours = _workingProgram.IsInWorkingHours(now)\n        };\n\n        if (data.IsWorkingHours)\n        {\n            var closing = _workingProgram.GetCurrentWorkingDayClosing(now);\n            data.TimeUntilClosing = closing - now;\n            data.ClosingTime = closing;\n            data.Status = \"Deschis\";\n            data.StatusColor = \"green\";\n        }\n        else\n        {\n            var nextOpening = _workingProgram.GetNextWorkingDayOpening(now);\n            data.TimeUntilOpening = nextOpening - now;\n            data.NextOpeningTime = nextOpening;\n            data.Status = \"\u00cenchis\";\n            data.StatusColor = \"red\";\n        }\n\n        // Programul s\u0103pt\u0103m\u00e2nii\n        data.WeekSchedule = GetWeekSchedule();\n\n        return data;\n    }\n\n    private List&lt;DaySchedule&gt; GetWeekSchedule()\n    {\n        var schedule = new List&lt;DaySchedule&gt;();\n        var startOfWeek = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + 1);\n\n        for (int i = 0; i &lt; 7; i++)\n        {\n            var date = startOfWeek.AddDays(i);\n            var opening = _workingProgram.GetCurrentWorkingDayOpening(date);\n\n            schedule.Add(new DaySchedule\n            {\n                Date = date,\n                DayName = date.ToString(\"dddd\"),\n                IsWorkingDay = opening.HasValue,\n                OpeningTime = opening,\n                ClosingTime = opening.HasValue \n                    ? _workingProgram.GetCurrentWorkingDayClosing(date) \n                    : null\n            });\n        }\n\n        return schedule;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#11-testing","title":"11. Testing","text":"<pre><code>[TestClass]\npublic class WorkingProgramServiceTests\n{\n    private EightToFiveWorkingProgramService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _service = new EightToFiveWorkingProgramService();\n    }\n\n    [TestMethod]\n    public void IsInWorkingHours_DuringBusinessHours_ReturnsTrue()\n    {\n        // Arrange\n        var tuesday10AM = new DateTime(2024, 6, 25, 10, 0, 0);\n\n        // Act\n        var result = _service.IsInWorkingHours(tuesday10AM);\n\n        // Assert\n        Assert.IsTrue(result);\n    }\n\n    [TestMethod]\n    public void IsInWorkingHours_Weekend_ReturnsFalse()\n    {\n        // Arrange\n        var saturday = new DateTime(2024, 6, 29, 10, 0, 0);\n\n        // Act\n        var result = _service.IsInWorkingHours(saturday);\n\n        // Assert\n        Assert.IsFalse(result);\n    }\n\n    [TestMethod]\n    public void GetNextWorkingDayOpening_Friday_ReturnsMonday()\n    {\n        // Arrange\n        var friday = new DateTime(2024, 6, 28, 16, 0, 0);\n\n        // Act\n        var result = _service.GetNextWorkingDayOpening(friday);\n\n        // Assert\n        Assert.AreEqual(DayOfWeek.Monday, result.DayOfWeek);\n        Assert.AreEqual(8, result.Hour);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#12-model-de-configurare","title":"12. Model de configurare","text":"<pre><code>public class ConfigurationWorkingProgramServiceOptions\n{\n    public List&lt;WorkingDay&gt; WorkingDays { get; set; } = new();\n}\n\npublic class WorkingDay\n{\n    public DayOfWeek Day { get; set; }\n    public int OpenHours { get; set; }\n    public int OpenMinutes { get; set; }\n    public int CloseHours { get; set; }\n    public int CloseMinutes { get; set; }\n}\n</code></pre>"},{"location":"fod/servicii/WorkingProgramService/#13-best-practices","title":"13. Best Practices","text":"<ol> <li>Timezone awareness: Folosi\u021bi UTC pentru aplica\u021bii interna\u021bionale</li> <li>Caching: Cache-ui\u021bi rezultatele pentru date fixe (s\u0103rb\u0103tori, program standard)</li> <li>Parametri consisten\u021bi: Folosi\u021bi aceia\u0219i parametri pentru calcule legate</li> <li>Validare: Valida\u021bi c\u0103 ora de \u00eenchidere &gt; ora de deschidere</li> <li>Flexibilitate: Permite\u021bi override prin parametri pentru cazuri speciale</li> <li>Logging: Loga\u021bi deciziile importante pentru debugging</li> </ol>"},{"location":"fod/servicii/WorkingProgramService/#14-concluzie","title":"14. Concluzie","text":"<p><code>IWorkingProgramService</code> ofer\u0103 o abstractizare flexibil\u0103 pentru gestionarea programului de lucru \u00een aplica\u021biile FOD. Cu implement\u0103ri multiple disponibile \u0219i suport pentru parametri personaliza\u021bi, serviciul poate fi adaptat la diverse scenarii de business, de la program standard 8-17 p\u00e2n\u0103 la programe complexe cu excep\u021bii \u0219i s\u0103rb\u0103tori.</p>"},{"location":"fod/servicii/XmlGenerator/","title":"XmlGenerator","text":""},{"location":"fod/servicii/XmlGenerator/#documentatie-pentru-serviciul-xmlgenerator","title":"Documenta\u021bie pentru serviciul XmlGenerator","text":""},{"location":"fod/servicii/XmlGenerator/#1-descriere-generala","title":"1. Descriere General\u0103","text":"<p><code>XmlGenerator</code> este un serviciu server-side care serializeaz\u0103 obiecte .NET \u00een format XML, cu suport pentru canonicalizare XML \u0219i atribute personalizate de descriere. Serviciul este optimizat pentru generarea de documente XML standardizate necesare \u00een comunicarea cu sistemele guvernamentale.</p> <p>Caracteristici principale: - Serializare automat\u0103 a obiectelor \u00een XML - Suport pentru atributul XmlDescription - Canonicalizare XML (C14N) - Formatare cu indentare pentru lizibilitate - Suport pentru array-uri de string-uri - Encoding UTF-8</p>"},{"location":"fod/servicii/XmlGenerator/#2-configurare-si-inregistrare","title":"2. Configurare \u0219i \u00cenregistrare","text":"<pre><code>// Program.cs sau Startup.cs (server-side)\nbuilder.Services.AddScoped&lt;IXmlGenerator, XmlGenerator&gt;();\n\n// \u00cen modulul Server.ServicesSetup\npublic static IServiceCollection AddServerServices(this IServiceCollection services)\n{\n    services.AddScoped&lt;IXmlGenerator, XmlGenerator&gt;();\n    return services;\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#3-interfata","title":"3. Interfa\u021b\u0103","text":"<pre><code>public interface IXmlGenerator\n{\n    string Generate(object document);\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#4-metoda-disponibila","title":"4. Metod\u0103 Disponibil\u0103","text":""},{"location":"fod/servicii/XmlGenerator/#generate","title":"Generate","text":"<p>Genereaz\u0103 un document XML din obiectul furnizat.</p> <p>Parametri: - <code>document</code> (object) - Obiectul de serializat \u00een XML</p> <p>Returneaz\u0103: - <code>string</code> - Document XML canonicalizat ca string</p> <p>Caracteristici: - Numele clasei devine elementul root - Propriet\u0103\u021bile devin elemente XML - Suport pentru atributul <code>XmlDescriptionAttribute</code> - Array-urile de string-uri sunt serializate ca elemente separate - Aplicare transformare C14N pentru standardizare</p>"},{"location":"fod/servicii/XmlGenerator/#5-atribut-xmldescription","title":"5. Atribut XmlDescription","text":"<pre><code>[AttributeUsage(AttributeTargets.Property)]\npublic class XmlDescriptionAttribute : Attribute\n{\n    public string Value { get; set; } = string.Empty;\n}\n</code></pre> <p>Utilizat pentru a ad\u0103uga atribute \"Title\" la elementele XML generate.</p>"},{"location":"fod/servicii/XmlGenerator/#6-exemple-de-utilizare","title":"6. Exemple de Utilizare","text":""},{"location":"fod/servicii/XmlGenerator/#model-simplu-cu-atribute","title":"Model simplu cu atribute","text":"<pre><code>public class ServiceRequest\n{\n    [XmlDescription(Value = \"Num\u0103r de \u00eenregistrare\")]\n    public string OrderNumber { get; set; }\n\n    [XmlDescription(Value = \"Data depunerii\")]\n    public DateTime SubmissionDate { get; set; }\n\n    [XmlDescription(Value = \"Numele solicitantului\")]\n    public string ApplicantName { get; set; }\n\n    [XmlDescription(Value = \"Documente anexate\")]\n    public string[] AttachedDocuments { get; set; }\n}\n\npublic class XmlDocumentService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n\n    public XmlDocumentService(IXmlGenerator xmlGenerator)\n    {\n        _xmlGenerator = xmlGenerator;\n    }\n\n    public string GenerateRequestXml(ServiceRequest request)\n    {\n        var xml = _xmlGenerator.Generate(request);\n        return xml;\n\n        /* Rezultat:\n        &lt;ServiceRequest&gt;\n            &lt;OrderNumber Title=\"Num\u0103r de \u00eenregistrare\"&gt;SR001240630143025&lt;/OrderNumber&gt;\n            &lt;SubmissionDate Title=\"Data depunerii\"&gt;2024-06-30T14:30:25&lt;/SubmissionDate&gt;\n            &lt;ApplicantName Title=\"Numele solicitantului\"&gt;Ion Popescu&lt;/ApplicantName&gt;\n            &lt;AttachedDocuments Title=\"Documente anexate\"&gt;\n                &lt;string&gt;Cerere.pdf&lt;/string&gt;\n                &lt;string&gt;BuletinIdentitate.pdf&lt;/string&gt;\n                &lt;string&gt;Certificat.pdf&lt;/string&gt;\n            &lt;/AttachedDocuments&gt;\n        &lt;/ServiceRequest&gt;\n        */\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#generare-xml-pentru-raportare","title":"Generare XML pentru raportare","text":"<pre><code>public class ReportData\n{\n    [XmlDescription(Value = \"Perioada de raportare\")]\n    public string ReportPeriod { get; set; }\n\n    [XmlDescription(Value = \"Total cereri procesate\")]\n    public int TotalRequests { get; set; }\n\n    [XmlDescription(Value = \"Cereri aprobate\")]\n    public int ApprovedRequests { get; set; }\n\n    [XmlDescription(Value = \"Timp mediu de procesare (ore)\")]\n    public double AverageProcessingTime { get; set; }\n\n    [XmlDescription(Value = \"Tipuri de servicii\")]\n    public string[] ServiceTypes { get; set; }\n}\n\npublic class ReportingService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n    private readonly ILogger&lt;ReportingService&gt; _logger;\n\n    public async Task&lt;string&gt; GenerateMonthlyReport(int year, int month)\n    {\n        var reportData = new ReportData\n        {\n            ReportPeriod = $\"{year}-{month:D2}\",\n            TotalRequests = 1250,\n            ApprovedRequests = 1180,\n            AverageProcessingTime = 24.5,\n            ServiceTypes = new[] { \"Apostil\u0103\", \"Certificate\", \"Traduceri\" }\n        };\n\n        var xml = _xmlGenerator.Generate(reportData);\n\n        _logger.LogInformation(\"Raport XML generat pentru perioada {Period}\", \n            reportData.ReportPeriod);\n\n        return xml;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#export-date-pentru-integrare","title":"Export date pentru integrare","text":"<pre><code>public class IntegrationData\n{\n    [XmlDescription(Value = \"Identificator sistem\")]\n    public string SystemId { get; set; }\n\n    [XmlDescription(Value = \"Versiune API\")]\n    public string ApiVersion { get; set; }\n\n    [XmlDescription(Value = \"Timestamp\")]\n    public DateTime Timestamp { get; set; }\n\n    [XmlDescription(Value = \"Date exportate\")]\n    public ExportedRecord[] Records { get; set; }\n}\n\npublic class ExportedRecord\n{\n    public string Id { get; set; }\n    public string Type { get; set; }\n    public string Status { get; set; }\n}\n\npublic class IntegrationService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n    private readonly IFileService _fileService;\n\n    public async Task&lt;string&gt; ExportDataForIntegration(\n        List&lt;ExportedRecord&gt; records)\n    {\n        var integrationData = new IntegrationData\n        {\n            SystemId = \"FOD-EXPORT\",\n            ApiVersion = \"2.0\",\n            Timestamp = DateTime.UtcNow,\n            Records = records.ToArray()\n        };\n\n        var xml = _xmlGenerator.Generate(integrationData);\n\n        // Salvare \u00een fi\u0219ier pentru transfer\n        var fileName = $\"export_{DateTime.Now:yyyyMMdd_HHmmss}.xml\";\n        await _fileService.SaveXmlFile(fileName, xml);\n\n        return fileName;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#7-generare-documente-complexe","title":"7. Generare documente complexe","text":"<pre><code>public class ComplexDocument\n{\n    [XmlDescription(Value = \"Antet document\")]\n    public DocumentHeader Header { get; set; }\n\n    [XmlDescription(Value = \"Corp document\")]\n    public DocumentBody Body { get; set; }\n\n    [XmlDescription(Value = \"Semn\u0103turi\")]\n    public string[] Signatures { get; set; }\n}\n\npublic class DocumentHeader\n{\n    public string DocumentType { get; set; }\n    public string DocumentNumber { get; set; }\n    public DateTime IssueDate { get; set; }\n}\n\npublic class DocumentBody\n{\n    public string Content { get; set; }\n    public string[] Attachments { get; set; }\n}\n\npublic class ComplexDocumentService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n\n    public string GenerateComplexXml()\n    {\n        var document = new ComplexDocument\n        {\n            Header = new DocumentHeader\n            {\n                DocumentType = \"Certificat\",\n                DocumentNumber = \"CERT-2024-001\",\n                IssueDate = DateTime.Now\n            },\n            Body = new DocumentBody\n            {\n                Content = \"Con\u021binutul certificatului...\",\n                Attachments = new[] { \"Anexa1.pdf\", \"Anexa2.pdf\" }\n            },\n            Signatures = new[] { \"Signature1\", \"Signature2\" }\n        };\n\n        // Not\u0103: Generatorul actual nu suport\u0103 serializare recursiv\u0103\n        // Pentru obiecte complexe, considera\u021bi serializare manual\u0103\n        var headerXml = _xmlGenerator.Generate(document.Header);\n        var bodyXml = _xmlGenerator.Generate(document.Body);\n\n        // Sau folosi\u021bi un wrapper plat\n        var flatDocument = new\n        {\n            DocumentType = document.Header.DocumentType,\n            DocumentNumber = document.Header.DocumentNumber,\n            IssueDate = document.Header.IssueDate,\n            Content = document.Body.Content,\n            Attachments = document.Body.Attachments,\n            Signatures = document.Signatures\n        };\n\n        return _xmlGenerator.Generate(flatDocument);\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#8-validare-si-procesare-xml","title":"8. Validare \u0219i procesare XML","text":"<pre><code>public class XmlProcessingService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n    private readonly IXmlValidator _xmlValidator;\n\n    public async Task&lt;ProcessingResult&gt; ProcessAndValidate(object data)\n    {\n        try\n        {\n            // Generare XML\n            var xml = _xmlGenerator.Generate(data);\n\n            // Validare format\n            var xmlDoc = new XmlDocument();\n            xmlDoc.LoadXml(xml);\n\n            // Validare schem\u0103 (dac\u0103 exist\u0103)\n            if (_xmlValidator != null)\n            {\n                var validationResult = await _xmlValidator.ValidateAgainstSchema(\n                    xml, \n                    \"ServiceRequest.xsd\"\n                );\n\n                if (!validationResult.IsValid)\n                {\n                    return new ProcessingResult\n                    {\n                        Success = false,\n                        Errors = validationResult.Errors\n                    };\n                }\n            }\n\n            return new ProcessingResult\n            {\n                Success = true,\n                GeneratedXml = xml,\n                CanonicalForm = true\n            };\n        }\n        catch (Exception ex)\n        {\n            return new ProcessingResult\n            {\n                Success = false,\n                Errors = new[] { $\"Eroare la procesare: {ex.Message}\" }\n            };\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#9-salvare-si-arhivare","title":"9. Salvare \u0219i arhivare","text":"<pre><code>public class XmlArchiveService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n    private readonly IFileRepository _fileRepository;\n    private readonly IHashGenerator _hashGenerator;\n\n    public async Task&lt;ArchiveResult&gt; ArchiveAsXml&lt;T&gt;(\n        T document, \n        string category)\n    {\n        // Generare XML\n        var xml = _xmlGenerator.Generate(document);\n\n        // Generare hash pentru verificare integritate\n        var hashBytes = await _hashGenerator.GetSha1(xml);\n        var hash = Convert.ToBase64String(hashBytes);\n\n        // Salvare \u00een repository\n        var file = new ArchivedFile\n        {\n            FileName = $\"{category}_{DateTime.Now:yyyyMMdd_HHmmss}.xml\",\n            Content = xml,\n            ContentType = \"application/xml\",\n            Category = category,\n            Hash = hash,\n            CreatedAt = DateTime.UtcNow\n        };\n\n        var fileId = await _fileRepository.SaveFile(file);\n\n        return new ArchiveResult\n        {\n            FileId = fileId,\n            FileName = file.FileName,\n            Hash = hash,\n            Size = Encoding.UTF8.GetByteCount(xml)\n        };\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#10-transformare-si-export","title":"10. Transformare \u0219i export","text":"<pre><code>public class XmlTransformService\n{\n    private readonly IXmlGenerator _xmlGenerator;\n\n    public async Task&lt;string&gt; TransformToHtml(object data, string xsltPath)\n    {\n        // Generare XML\n        var xml = _xmlGenerator.Generate(data);\n\n        // Aplicare transformare XSLT\n        var xslt = new XslCompiledTransform();\n        xslt.Load(xsltPath);\n\n        using (var xmlReader = XmlReader.Create(new StringReader(xml)))\n        using (var stringWriter = new StringWriter())\n        using (var xmlWriter = XmlWriter.Create(stringWriter))\n        {\n            xslt.Transform(xmlReader, xmlWriter);\n            return stringWriter.ToString();\n        }\n    }\n\n    public string AddXmlDeclaration(object data)\n    {\n        var xml = _xmlGenerator.Generate(data);\n\n        // Adaug\u0103 declara\u021bia XML dac\u0103 lipse\u0219te\n        if (!xml.StartsWith(\"&lt;?xml\"))\n        {\n            xml = \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\n\" + xml;\n        }\n\n        return xml;\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#11-testing","title":"11. Testing","text":"<pre><code>[TestClass]\npublic class XmlGeneratorTests\n{\n    private IXmlGenerator _xmlGenerator;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _xmlGenerator = new XmlGenerator();\n    }\n\n    [TestMethod]\n    public void Generate_SimpleObject_CreatesValidXml()\n    {\n        // Arrange\n        var testObject = new\n        {\n            Name = \"Test\",\n            Value = 123,\n            Date = new DateTime(2024, 6, 30)\n        };\n\n        // Act\n        var xml = _xmlGenerator.Generate(testObject);\n\n        // Assert\n        Assert.IsNotNull(xml);\n        Assert.IsTrue(xml.Contains(\"&lt;Name&gt;Test&lt;/Name&gt;\"));\n        Assert.IsTrue(xml.Contains(\"&lt;Value&gt;123&lt;/Value&gt;\"));\n\n        // Verificare XML valid\n        var doc = new XmlDocument();\n        Assert.DoesNotThrow(() =&gt; doc.LoadXml(xml));\n    }\n\n    [TestMethod]\n    public void Generate_WithXmlDescription_AddsAttributes()\n    {\n        // Arrange\n        var testObject = new TestModel\n        {\n            Property1 = \"Value1\"\n        };\n\n        // Act\n        var xml = _xmlGenerator.Generate(testObject);\n\n        // Assert\n        Assert.IsTrue(xml.Contains(\"Title=\\\"Test Description\\\"\"));\n    }\n\n    private class TestModel\n    {\n        [XmlDescription(Value = \"Test Description\")]\n        public string Property1 { get; set; }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#12-limitari-cunoscute","title":"12. Limit\u0103ri cunoscute","text":"<ol> <li>Serializare superficial\u0103: Nu serializeaz\u0103 recursiv obiecte complexe imbricate</li> <li>Tipuri limitate: Suport special doar pentru string[]</li> <li>Performan\u021b\u0103: Pentru volume mari, considera\u021bi serializare streaming</li> <li>Atribute XML: Suport limitat la atributul Title prin XmlDescription</li> </ol>"},{"location":"fod/servicii/XmlGenerator/#13-alternative-si-extensii","title":"13. Alternative \u0219i extensii","text":"<pre><code>public interface IAdvancedXmlGenerator : IXmlGenerator\n{\n    string Generate(object document, XmlGeneratorOptions options);\n}\n\npublic class XmlGeneratorOptions\n{\n    public bool IncludeXmlDeclaration { get; set; } = true;\n    public bool IndentOutput { get; set; } = true;\n    public string RootNamespace { get; set; }\n    public Dictionary&lt;string, string&gt; Namespaces { get; set; }\n    public bool IncludeNullValues { get; set; } = false;\n}\n\n// Pentru serializare complex\u0103, considera\u021bi XmlSerializer standard:\npublic class StandardXmlService\n{\n    public string SerializeToXml&lt;T&gt;(T obj)\n    {\n        var serializer = new XmlSerializer(typeof(T));\n        using (var stringWriter = new StringWriter())\n        {\n            serializer.Serialize(stringWriter, obj);\n            return stringWriter.ToString();\n        }\n    }\n}\n</code></pre>"},{"location":"fod/servicii/XmlGenerator/#14-best-practices","title":"14. Best Practices","text":"<ol> <li>Modele simple: Folosi\u021bi pentru obiecte plate, nu pentru ierarhii complexe</li> <li>Validare: \u00centotdeauna valida\u021bi XML-ul generat</li> <li>Encoding: Asigura\u021bi-v\u0103 c\u0103 datele de intrare sunt compatibile UTF-8</li> <li>Canonicalizare: Util pentru semn\u0103turi digitale \u0219i compara\u021bii</li> <li>Documentare: Folosi\u021bi XmlDescription pentru claritate</li> <li>Performan\u021b\u0103: Pentru volume mari, considera\u021bi generare asincron\u0103</li> </ol>"},{"location":"fod/servicii/XmlGenerator/#15-concluzie","title":"15. Concluzie","text":"<p><code>XmlGenerator</code> ofer\u0103 o solu\u021bie simpl\u0103 pentru generarea de documente XML canonicalizate \u00een aplica\u021biile FOD. Cu suport pentru atribute descriptive \u0219i formatare automat\u0103, serviciul este ideal pentru generarea de documente standardizate necesare \u00een comunicarea cu sistemele guvernamentale. Pentru scenarii complexe, considera\u021bi utilizarea XmlSerializer standard sau biblioteci specializate.</p>"},{"location":"fod/suport/backoffice/","title":"Backoffice","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru modulul Backoffice.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/backoffice/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Modulul Backoffice ofer\u0103 func\u021bionalit\u0103\u021bi administrative pentru aplica\u021bii.</p>"},{"location":"fod/suport/backoffice/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Configurare</li> <li>Opera\u021biuni</li> </ul>"},{"location":"fod/suport/backoffice/configurare/","title":"Configurare Backoffice","text":"<p>Aceast\u0103 pagin\u0103 descrie configurarea modulului Backoffice.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/backoffice/configurare/#setari-initiale","title":"Set\u0103ri ini\u021biale","text":""},{"location":"fod/suport/backoffice/configurare/#permisiuni","title":"Permisiuni","text":""},{"location":"fod/suport/backoffice/configurare/#customizare","title":"Customizare","text":""},{"location":"fod/suport/backoffice/operatiuni/","title":"Opera\u021biuni Backoffice","text":"<p>Aceast\u0103 pagin\u0103 descrie opera\u021biunile disponibile \u00een Backoffice.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/backoffice/operatiuni/#operatiuni-crud","title":"Opera\u021biuni CRUD","text":""},{"location":"fod/suport/backoffice/operatiuni/#rapoarte","title":"Rapoarte","text":""},{"location":"fod/suport/backoffice/operatiuni/#exportimport","title":"Export/Import","text":""},{"location":"fod/suport/cuatm/","title":"CUATM - Clasificator Unit\u0103\u021bi Administrativ-Teritoriale","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru modulul CUATM.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/cuatm/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Modulul CUATM ofer\u0103 acces la clasificatorul unit\u0103\u021bilor administrativ-teritoriale din Moldova.</p>"},{"location":"fod/suport/cuatm/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Utilizare</li> <li>Date</li> </ul>"},{"location":"fod/suport/cuatm/date/","title":"Date CUATM","text":"<p>Aceast\u0103 pagin\u0103 descrie structura datelor CUATM.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/cuatm/date/#structura-datelor","title":"Structura datelor","text":""},{"location":"fod/suport/cuatm/date/#formate-suportate","title":"Formate suportate","text":""},{"location":"fod/suport/cuatm/date/#actualizare-date","title":"Actualizare date","text":""},{"location":"fod/suport/cuatm/utilizare/","title":"Utilizarea CUATM","text":"<p>Aceast\u0103 pagin\u0103 descrie cum s\u0103 utiliza\u021bi modulul CUATM.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/cuatm/utilizare/#configurare","title":"Configurare","text":""},{"location":"fod/suport/cuatm/utilizare/#exemple-de-utilizare","title":"Exemple de utilizare","text":""},{"location":"fod/suport/cuatm/utilizare/#api-reference","title":"API Reference","text":""},{"location":"fod/suport/data/","title":"Fod.Data - Data Access Layer","text":""},{"location":"fod/suport/data/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Fod.Data reprezint\u0103 stratul de acces la date pentru platforma FOD.Components, oferind o abstractizare consistent\u0103 pentru opera\u021biunile cu baza de date. Aceast\u0103 libr\u0103rie implementeaz\u0103 pattern-uri moderne de acces la date, optimizate pentru aplica\u021biile enterprise.</p>"},{"location":"fod/suport/data/#caracteristici-principale","title":"Caracteristici Principale","text":""},{"location":"fod/suport/data/#functionalitati-core","title":"\ud83d\uddc4\ufe0f Func\u021bionalit\u0103\u021bi Core","text":"<ul> <li>Generic Repository Pattern - Opera\u021biuni CRUD standardizate</li> <li>Specification Pattern - Query-uri complexe reutilizabile</li> <li>Unit of Work - Management tranzac\u021bional</li> <li>Data Transfer Objects (DTOs) - Separare \u00eentre entit\u0103\u021bi \u0219i modele de transfer</li> <li>Query Optimization - Strategii de \u00eenc\u0103rcare eficient\u0103</li> <li>Caching Layer - Cache integrat pentru performan\u021b\u0103</li> </ul>"},{"location":"fod/suport/data/#beneficii","title":"\ud83d\ude80 Beneficii","text":"<ul> <li>Abstractizare complet\u0103 a accesului la date</li> <li>Testabilitate \u00eembun\u0103t\u0103\u021bit\u0103</li> <li>Reutilizare cod maxim\u0103</li> <li>Performan\u021b\u0103 optimizat\u0103</li> <li>Mentenan\u021b\u0103 u\u0219oar\u0103</li> </ul>"},{"location":"fod/suport/data/#arhitectura","title":"Arhitectur\u0103","text":""},{"location":"fod/suport/data/#structura-modulului","title":"Structura Modulului","text":"<pre><code>Fod.Data/\n\u251c\u2500\u2500 Abstractions/\n\u2502   \u251c\u2500\u2500 IRepository.cs\n\u2502   \u251c\u2500\u2500 IUnitOfWork.cs\n\u2502   \u251c\u2500\u2500 ISpecification.cs\n\u2502   \u2514\u2500\u2500 IDataService.cs\n\u251c\u2500\u2500 Implementations/\n\u2502   \u251c\u2500\u2500 Repository.cs\n\u2502   \u251c\u2500\u2500 UnitOfWork.cs\n\u2502   \u2514\u2500\u2500 DataService.cs\n\u251c\u2500\u2500 Specifications/\n\u2502   \u251c\u2500\u2500 BaseSpecification.cs\n\u2502   \u2514\u2500\u2500 Common/\n\u251c\u2500\u2500 DTOs/\n\u2502   \u251c\u2500\u2500 Base/\n\u2502   \u2514\u2500\u2500 Domain/\n\u251c\u2500\u2500 Mappers/\n\u2502   \u251c\u2500\u2500 IMapper.cs\n\u2502   \u2514\u2500\u2500 AutoMapperProfile.cs\n\u2514\u2500\u2500 Extensions/\n    \u251c\u2500\u2500 QueryableExtensions.cs\n    \u2514\u2500\u2500 SpecificationExtensions.cs\n</code></pre>"},{"location":"fod/suport/data/#design-patterns","title":"Design Patterns","text":"<pre><code>graph TD\n    A[Controller/Service] --&gt; B[IUnitOfWork]\n    B --&gt; C[IRepository&lt;T&gt;]\n    C --&gt; D[ISpecification&lt;T&gt;]\n    C --&gt; E[DbContext]\n\n    F[DTO] --&gt; G[IMapper]\n    G --&gt; H[Entity]\n\n    I[IDataService] --&gt; B\n    I --&gt; G\n</code></pre>"},{"location":"fod/suport/data/#configurare-si-utilizare","title":"Configurare \u0219i Utilizare","text":""},{"location":"fod/suport/data/#1-instalare","title":"1. Instalare","text":"<pre><code>dotnet add package Fod.Data\ndotnet add package Fod.Data.EntityFramework\n</code></pre>"},{"location":"fod/suport/data/#2-configurare-in-programcs","title":"2. Configurare \u00een Program.cs","text":"<pre><code>using Fod.Data.Extensions;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Adaug\u0103 serviciile Fod.Data\nbuilder.Services.AddFodDataAccess(options =&gt;\n{\n    options.UseEntityFramework(ef =&gt;\n    {\n        ef.ConnectionString = builder.Configuration.GetConnectionString(\"DefaultConnection\");\n        ef.EnableSensitiveDataLogging = builder.Environment.IsDevelopment();\n    });\n\n    options.EnableCaching = true;\n    options.CacheExpiration = TimeSpan.FromMinutes(5);\n    options.EnableQueryLogging = true;\n});\n\n// \u00cenregistrare automat\u0103 repositories\nbuilder.Services.AddRepositories(typeof(Program).Assembly);\n\n// Adaug\u0103 AutoMapper\nbuilder.Services.AddAutoMapper(typeof(Program).Assembly);\n</code></pre>"},{"location":"fod/suport/data/#repository-pattern","title":"Repository Pattern","text":""},{"location":"fod/suport/data/#interface-generic","title":"Interface Generic","text":"<pre><code>public interface IRepository&lt;TEntity&gt; where TEntity : class\n{\n    // Query operations\n    Task&lt;TEntity&gt; GetByIdAsync(int id);\n    Task&lt;TEntity&gt; FirstOrDefaultAsync(ISpecification&lt;TEntity&gt; spec);\n    Task&lt;IReadOnlyList&lt;TEntity&gt;&gt; ListAsync();\n    Task&lt;IReadOnlyList&lt;TEntity&gt;&gt; ListAsync(ISpecification&lt;TEntity&gt; spec);\n    Task&lt;int&gt; CountAsync(ISpecification&lt;TEntity&gt; spec);\n\n    // Command operations\n    Task&lt;TEntity&gt; AddAsync(TEntity entity);\n    Task UpdateAsync(TEntity entity);\n    Task DeleteAsync(TEntity entity);\n    Task&lt;int&gt; SaveChangesAsync();\n}\n</code></pre>"},{"location":"fod/suport/data/#utilizare-repository","title":"Utilizare Repository","text":"<pre><code>public class UserService\n{\n    private readonly IRepository&lt;User&gt; _userRepository;\n    private readonly IUnitOfWork _unitOfWork;\n\n    public UserService(IUnitOfWork unitOfWork)\n    {\n        _unitOfWork = unitOfWork;\n        _userRepository = _unitOfWork.Repository&lt;User&gt;();\n    }\n\n    public async Task&lt;UserDto&gt; GetUserByIdAsync(int id)\n    {\n        var user = await _userRepository.GetByIdAsync(id);\n        return _mapper.Map&lt;UserDto&gt;(user);\n    }\n\n    public async Task&lt;IEnumerable&lt;UserDto&gt;&gt; GetActiveUsersAsync()\n    {\n        var spec = new ActiveUsersSpecification();\n        var users = await _userRepository.ListAsync(spec);\n        return _mapper.Map&lt;IEnumerable&lt;UserDto&gt;&gt;(users);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#specification-pattern","title":"Specification Pattern","text":""},{"location":"fod/suport/data/#creare-specification","title":"Creare Specification","text":"<pre><code>public class ActiveUsersSpecification : BaseSpecification&lt;User&gt;\n{\n    public ActiveUsersSpecification() \n        : base(u =&gt; u.IsActive &amp;&amp; !u.IsDeleted)\n    {\n        AddInclude(u =&gt; u.Roles);\n        AddInclude(u =&gt; u.Department);\n        AddOrderByDescending(u =&gt; u.CreatedAt);\n    }\n}\n\npublic class UsersByDepartmentSpecification : BaseSpecification&lt;User&gt;\n{\n    public UsersByDepartmentSpecification(int departmentId) \n        : base(u =&gt; u.DepartmentId == departmentId)\n    {\n        AddInclude(u =&gt; u.Include(x =&gt; x.Department)\n                         .ThenInclude(d =&gt; d.Manager));\n        ApplyPaging(0, 20);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#specification-complexe","title":"Specification Complexe","text":"<pre><code>public class AdvancedSearchSpecification : BaseSpecification&lt;Product&gt;\n{\n    public AdvancedSearchSpecification(ProductSearchCriteria criteria)\n    {\n        // Build predicate dynamically\n        Expression&lt;Func&lt;Product, bool&gt;&gt; filter = p =&gt; true;\n\n        if (!string.IsNullOrEmpty(criteria.Name))\n            filter = filter.And(p =&gt; p.Name.Contains(criteria.Name));\n\n        if (criteria.MinPrice.HasValue)\n            filter = filter.And(p =&gt; p.Price &gt;= criteria.MinPrice.Value);\n\n        if (criteria.CategoryIds?.Any() ?? false)\n            filter = filter.And(p =&gt; criteria.CategoryIds.Contains(p.CategoryId));\n\n        // Apply filter\n        AddCriteria(filter);\n\n        // Add includes\n        AddInclude(p =&gt; p.Category);\n        AddInclude(p =&gt; p.Images);\n\n        // Apply sorting\n        switch (criteria.SortBy)\n        {\n            case \"price\":\n                AddOrderBy(p =&gt; p.Price);\n                break;\n            case \"name\":\n                AddOrderBy(p =&gt; p.Name);\n                break;\n            default:\n                AddOrderByDescending(p =&gt; p.CreatedAt);\n                break;\n        }\n\n        // Apply paging\n        ApplyPaging(criteria.Skip, criteria.Take);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#unit-of-work-pattern","title":"Unit of Work Pattern","text":""},{"location":"fod/suport/data/#interface","title":"Interface","text":"<pre><code>public interface IUnitOfWork : IDisposable\n{\n    IRepository&lt;TEntity&gt; Repository&lt;TEntity&gt;() where TEntity : class;\n    Task&lt;int&gt; CompleteAsync();\n    Task&lt;IDbContextTransaction&gt; BeginTransactionAsync();\n    Task CommitTransactionAsync();\n    Task RollbackTransactionAsync();\n}\n</code></pre>"},{"location":"fod/suport/data/#utilizare-cu-tranzactii","title":"Utilizare cu Tranzac\u021bii","text":"<pre><code>public class OrderService\n{\n    private readonly IUnitOfWork _unitOfWork;\n\n    public async Task&lt;OrderResult&gt; CreateOrderAsync(CreateOrderDto dto)\n    {\n        using var transaction = await _unitOfWork.BeginTransactionAsync();\n\n        try\n        {\n            // Create order\n            var order = new Order\n            {\n                CustomerId = dto.CustomerId,\n                OrderDate = DateTime.UtcNow,\n                Status = OrderStatus.Pending\n            };\n\n            await _unitOfWork.Repository&lt;Order&gt;().AddAsync(order);\n\n            // Add order items\n            foreach (var item in dto.Items)\n            {\n                var orderItem = new OrderItem\n                {\n                    Order = order,\n                    ProductId = item.ProductId,\n                    Quantity = item.Quantity,\n                    Price = item.Price\n                };\n\n                await _unitOfWork.Repository&lt;OrderItem&gt;().AddAsync(orderItem);\n\n                // Update inventory\n                var product = await _unitOfWork.Repository&lt;Product&gt;()\n                    .GetByIdAsync(item.ProductId);\n                product.Stock -= item.Quantity;\n\n                await _unitOfWork.Repository&lt;Product&gt;().UpdateAsync(product);\n            }\n\n            // Save all changes\n            await _unitOfWork.CompleteAsync();\n\n            // Commit transaction\n            await _unitOfWork.CommitTransactionAsync();\n\n            return new OrderResult { Success = true, OrderId = order.Id };\n        }\n        catch (Exception ex)\n        {\n            await _unitOfWork.RollbackTransactionAsync();\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#data-services","title":"Data Services","text":""},{"location":"fod/suport/data/#service-layer-pattern","title":"Service Layer Pattern","text":"<pre><code>public interface IDataService&lt;TEntity, TDto&gt; \n    where TEntity : class \n    where TDto : class\n{\n    Task&lt;TDto&gt; GetByIdAsync(int id);\n    Task&lt;IEnumerable&lt;TDto&gt;&gt; GetAllAsync();\n    Task&lt;PagedResult&lt;TDto&gt;&gt; GetPagedAsync(PagedRequest request);\n    Task&lt;TDto&gt; CreateAsync(TDto dto);\n    Task&lt;TDto&gt; UpdateAsync(int id, TDto dto);\n    Task DeleteAsync(int id);\n}\n\npublic class DataService&lt;TEntity, TDto&gt; : IDataService&lt;TEntity, TDto&gt;\n    where TEntity : class, IEntity\n    where TDto : class\n{\n    protected readonly IUnitOfWork _unitOfWork;\n    protected readonly IMapper _mapper;\n    protected readonly ILogger _logger;\n\n    public DataService(\n        IUnitOfWork unitOfWork, \n        IMapper mapper,\n        ILogger&lt;DataService&lt;TEntity, TDto&gt;&gt; logger)\n    {\n        _unitOfWork = unitOfWork;\n        _mapper = mapper;\n        _logger = logger;\n    }\n\n    public virtual async Task&lt;TDto&gt; GetByIdAsync(int id)\n    {\n        var entity = await _unitOfWork.Repository&lt;TEntity&gt;().GetByIdAsync(id);\n\n        if (entity == null)\n            throw new NotFoundException($\"{typeof(TEntity).Name} with id {id} not found\");\n\n        return _mapper.Map&lt;TDto&gt;(entity);\n    }\n\n    public virtual async Task&lt;TDto&gt; CreateAsync(TDto dto)\n    {\n        var entity = _mapper.Map&lt;TEntity&gt;(dto);\n\n        await _unitOfWork.Repository&lt;TEntity&gt;().AddAsync(entity);\n        await _unitOfWork.CompleteAsync();\n\n        _logger.LogInformation($\"Created {typeof(TEntity).Name} with id {entity.Id}\");\n\n        return _mapper.Map&lt;TDto&gt;(entity);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#query-optimization","title":"Query Optimization","text":""},{"location":"fod/suport/data/#projection-queries","title":"Projection Queries","text":"<pre><code>public class OptimizedUserRepository : Repository&lt;User&gt;, IUserRepository\n{\n    public async Task&lt;IEnumerable&lt;UserSummaryDto&gt;&gt; GetUserSummariesAsync()\n    {\n        return await Context.Users\n            .Where(u =&gt; u.IsActive)\n            .Select(u =&gt; new UserSummaryDto\n            {\n                Id = u.Id,\n                FullName = u.FullName,\n                Email = u.Email,\n                DepartmentName = u.Department.Name\n            })\n            .ToListAsync();\n    }\n\n    public async Task&lt;UserDetailsDto&gt; GetUserDetailsAsync(int userId)\n    {\n        return await Context.Users\n            .Where(u =&gt; u.Id == userId)\n            .Select(u =&gt; new UserDetailsDto\n            {\n                Id = u.Id,\n                FullName = u.FullName,\n                Email = u.Email,\n                Roles = u.UserRoles.Select(ur =&gt; ur.Role.Name).ToList(),\n                Permissions = u.UserRoles\n                    .SelectMany(ur =&gt; ur.Role.Permissions)\n                    .Select(p =&gt; p.Name)\n                    .Distinct()\n                    .ToList()\n            })\n            .FirstOrDefaultAsync();\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#batch-operations","title":"Batch Operations","text":"<pre><code>public class BatchRepository&lt;T&gt; : Repository&lt;T&gt; where T : class\n{\n    public async Task AddRangeAsync(IEnumerable&lt;T&gt; entities)\n    {\n        await Context.Set&lt;T&gt;().AddRangeAsync(entities);\n    }\n\n    public async Task UpdateRangeAsync(IEnumerable&lt;T&gt; entities)\n    {\n        Context.Set&lt;T&gt;().UpdateRange(entities);\n        await Task.CompletedTask;\n    }\n\n    public async Task DeleteRangeAsync(Expression&lt;Func&lt;T, bool&gt;&gt; predicate)\n    {\n        var entities = await Context.Set&lt;T&gt;().Where(predicate).ToListAsync();\n        Context.Set&lt;T&gt;().RemoveRange(entities);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#caching","title":"Caching","text":""},{"location":"fod/suport/data/#cache-integration","title":"Cache Integration","text":"<pre><code>public class CachedRepository&lt;T&gt; : Repository&lt;T&gt;, ICachedRepository&lt;T&gt; where T : class\n{\n    private readonly IMemoryCache _cache;\n    private readonly string _cacheKeyPrefix;\n\n    public CachedRepository(DbContext context, IMemoryCache cache) : base(context)\n    {\n        _cache = cache;\n        _cacheKeyPrefix = $\"{typeof(T).Name}_\";\n    }\n\n    public override async Task&lt;T&gt; GetByIdAsync(int id)\n    {\n        var cacheKey = $\"{_cacheKeyPrefix}{id}\";\n\n        return await _cache.GetOrCreateAsync(cacheKey, async entry =&gt;\n        {\n            entry.SetSlidingExpiration(TimeSpan.FromMinutes(5));\n            return await base.GetByIdAsync(id);\n        });\n    }\n\n    public override async Task UpdateAsync(T entity)\n    {\n        await base.UpdateAsync(entity);\n\n        // Invalidate cache\n        var id = entity.GetType().GetProperty(\"Id\")?.GetValue(entity);\n        if (id != null)\n        {\n            _cache.Remove($\"{_cacheKeyPrefix}{id}\");\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#testing","title":"Testing","text":""},{"location":"fod/suport/data/#repository-testing","title":"Repository Testing","text":"<pre><code>[TestClass]\npublic class UserRepositoryTests\n{\n    private ApplicationDbContext _context;\n    private IRepository&lt;User&gt; _repository;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        var options = new DbContextOptionsBuilder&lt;ApplicationDbContext&gt;()\n            .UseInMemoryDatabase(databaseName: Guid.NewGuid().ToString())\n            .Options;\n\n        _context = new ApplicationDbContext(options);\n        _repository = new Repository&lt;User&gt;(_context);\n\n        SeedTestData();\n    }\n\n    [TestMethod]\n    public async Task GetActiveUsers_Should_Return_Only_Active_Users()\n    {\n        // Arrange\n        var spec = new ActiveUsersSpecification();\n\n        // Act\n        var users = await _repository.ListAsync(spec);\n\n        // Assert\n        Assert.AreEqual(3, users.Count);\n        Assert.IsTrue(users.All(u =&gt; u.IsActive));\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/#best-practices","title":"Best Practices","text":""},{"location":"fod/suport/data/#1-separation-of-concerns","title":"1. Separation of Concerns","text":"<ul> <li>P\u0103stra\u021bi logica de business \u00een servicii, nu \u00een repositories</li> <li>Folosi\u021bi DTOs pentru transfer de date</li> <li>Nu expune\u021bi entit\u0103\u021bile direct \u00een API</li> </ul>"},{"location":"fod/suport/data/#2-performance","title":"2. Performance","text":"<ul> <li>Folosi\u021bi projection pentru query-uri read-only</li> <li>Implementa\u021bi paginare pentru liste mari</li> <li>Utiliza\u021bi AsNoTracking() pentru query-uri read-only</li> </ul>"},{"location":"fod/suport/data/#3-testing","title":"3. Testing","text":"<ul> <li>Testa\u021bi specifications separat</li> <li>Folosi\u021bi In-Memory database pentru teste unitare</li> <li>Mockui\u021bi repository \u00een teste de servicii</li> </ul>"},{"location":"fod/suport/data/#concluzie","title":"Concluzie","text":"<p>Fod.Data ofer\u0103 o funda\u021bie solid\u0103 pentru accesul la date \u00een aplica\u021biile FOD, combin\u00e2nd pattern-uri dovedite cu optimiz\u0103ri moderne. Prin utilizarea corect\u0103 a acestei libr\u0103rii, ve\u021bi ob\u021bine cod mai curat, mai testabil \u0219i mai performant.</p>"},{"location":"fod/suport/data/dtos/","title":"Data Transfer Objects (DTOs)","text":""},{"location":"fod/suport/data/dtos/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>DTOs (Data Transfer Objects) sunt obiecte simple utilizate pentru transferul datelor \u00eentre diferite straturi ale aplica\u021biei, \u00een special \u00eentre API \u0219i client. Acestea ofer\u0103 o separare clar\u0103 \u00eentre modelele de domeniu \u0219i datele expuse extern.</p>"},{"location":"fod/suport/data/dtos/#de-ce-sa-folosim-dtos","title":"De ce s\u0103 folosim DTOs?","text":""},{"location":"fod/suport/data/dtos/#beneficii","title":"Beneficii","text":"<ol> <li>Securitate - Controla\u021bi exact ce date sunt expuse</li> <li>Performan\u021b\u0103 - Transfera\u021bi doar datele necesare</li> <li>Versionare API - Modifica\u021bi DTOs f\u0103r\u0103 a afecta entit\u0103\u021bile</li> <li>Validare - Reguli de validare specifice pentru input</li> <li>Flexibilitate - Structuri diferite pentru scenarii diferite</li> </ol>"},{"location":"fod/suport/data/dtos/#tipuri-de-dtos","title":"Tipuri de DTOs","text":""},{"location":"fod/suport/data/dtos/#1-request-dtos","title":"1. Request DTOs","text":"<pre><code>public class CreateUserDto\n{\n    [Required]\n    [EmailAddress]\n    public string Email { get; set; }\n\n    [Required]\n    [StringLength(100, MinimumLength = 2)]\n    public string Name { get; set; }\n\n    [Required]\n    [MinLength(8)]\n    public string Password { get; set; }\n\n    public List&lt;int&gt; RoleIds { get; set; }\n}\n\npublic class UpdateUserDto\n{\n    [StringLength(100, MinimumLength = 2)]\n    public string Name { get; set; }\n\n    public bool? IsActive { get; set; }\n\n    public List&lt;int&gt; RoleIds { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#2-response-dtos","title":"2. Response DTOs","text":"<pre><code>public class UserDto\n{\n    public int Id { get; set; }\n    public string Email { get; set; }\n    public string Name { get; set; }\n    public bool IsActive { get; set; }\n    public DateTime CreatedAt { get; set; }\n    public List&lt;RoleDto&gt; Roles { get; set; }\n}\n\npublic class UserSummaryDto\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Email { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#3-nested-dtos","title":"3. Nested DTOs","text":"<pre><code>public class OrderDto\n{\n    public int Id { get; set; }\n    public string OrderNumber { get; set; }\n    public DateTime OrderDate { get; set; }\n    public CustomerDto Customer { get; set; }\n    public List&lt;OrderItemDto&gt; Items { get; set; }\n    public decimal TotalAmount { get; set; }\n}\n\npublic class OrderItemDto\n{\n    public int ProductId { get; set; }\n    public string ProductName { get; set; }\n    public int Quantity { get; set; }\n    public decimal UnitPrice { get; set; }\n    public decimal SubTotal =&gt; Quantity * UnitPrice;\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#mapping-intre-entitati-si-dtos","title":"Mapping \u00eentre Entit\u0103\u021bi \u0219i DTOs","text":""},{"location":"fod/suport/data/dtos/#1-automapper","title":"1. AutoMapper","text":"<pre><code>public class MappingProfile : Profile\n{\n    public MappingProfile()\n    {\n        // Simple mapping\n        CreateMap&lt;User, UserDto&gt;();\n\n        // Custom mapping\n        CreateMap&lt;CreateUserDto, User&gt;()\n            .ForMember(dest =&gt; dest.Id, opt =&gt; opt.Ignore())\n            .ForMember(dest =&gt; dest.CreatedAt, opt =&gt; opt.MapFrom(_ =&gt; DateTime.UtcNow));\n\n        // Nested mapping\n        CreateMap&lt;Order, OrderDto&gt;()\n            .ForMember(dest =&gt; dest.TotalAmount, \n                opt =&gt; opt.MapFrom(src =&gt; src.Items.Sum(i =&gt; i.Quantity * i.UnitPrice)));\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#2-manual-mapping","title":"2. Manual Mapping","text":"<pre><code>public static class UserMapper\n{\n    public static UserDto ToDto(this User user)\n    {\n        return new UserDto\n        {\n            Id = user.Id,\n            Email = user.Email,\n            Name = user.Name,\n            IsActive = user.IsActive,\n            CreatedAt = user.CreatedAt,\n            Roles = user.UserRoles?.Select(ur =&gt; ur.Role.ToDto()).ToList()\n        };\n    }\n\n    public static User ToEntity(this CreateUserDto dto)\n    {\n        return new User\n        {\n            Email = dto.Email,\n            Name = dto.Name,\n            IsActive = true,\n            CreatedAt = DateTime.UtcNow\n        };\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#validare-dtos","title":"Validare DTOs","text":""},{"location":"fod/suport/data/dtos/#1-data-annotations","title":"1. Data Annotations","text":"<pre><code>public class ProductDto : IValidatableObject\n{\n    [Required]\n    [StringLength(100)]\n    public string Name { get; set; }\n\n    [Range(0.01, 999999.99)]\n    public decimal Price { get; set; }\n\n    [Range(0, int.MaxValue)]\n    public int Stock { get; set; }\n\n    public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)\n    {\n        if (Price &lt;= 0 &amp;&amp; Stock &gt; 0)\n        {\n            yield return new ValidationResult(\n                \"Products with stock must have a price\",\n                new[] { nameof(Price) });\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#2-fluentvalidation","title":"2. FluentValidation","text":"<pre><code>public class CreateOrderDtoValidator : AbstractValidator&lt;CreateOrderDto&gt;\n{\n    public CreateOrderDtoValidator()\n    {\n        RuleFor(x =&gt; x.CustomerId)\n            .NotEmpty()\n            .WithMessage(\"Customer is required\");\n\n        RuleFor(x =&gt; x.Items)\n            .NotEmpty()\n            .WithMessage(\"Order must have at least one item\");\n\n        RuleForEach(x =&gt; x.Items).SetValidator(new OrderItemDtoValidator());\n\n        RuleFor(x =&gt; x.DeliveryDate)\n            .GreaterThan(DateTime.Now)\n            .When(x =&gt; x.DeliveryDate.HasValue);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#paginare-cu-dtos","title":"Paginare cu DTOs","text":"<pre><code>public class PagedRequest\n{\n    public int PageNumber { get; set; } = 1;\n    public int PageSize { get; set; } = 10;\n    public string SortBy { get; set; }\n    public bool IsDescending { get; set; }\n}\n\npublic class PagedResult&lt;T&gt;\n{\n    public List&lt;T&gt; Items { get; set; }\n    public int TotalCount { get; set; }\n    public int PageNumber { get; set; }\n    public int PageSize { get; set; }\n    public int TotalPages =&gt; (int)Math.Ceiling(TotalCount / (double)PageSize);\n    public bool HasPrevious =&gt; PageNumber &gt; 1;\n    public bool HasNext =&gt; PageNumber &lt; TotalPages;\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#dtos-pentru-operatiuni-complexe","title":"DTOs pentru Opera\u021biuni Complexe","text":""},{"location":"fod/suport/data/dtos/#1-bulk-operations","title":"1. Bulk Operations","text":"<pre><code>public class BulkUpdateDto&lt;T&gt;\n{\n    public List&lt;int&gt; Ids { get; set; }\n    public T Updates { get; set; }\n}\n\npublic class BulkOperationResult\n{\n    public int SuccessCount { get; set; }\n    public int FailureCount { get; set; }\n    public List&lt;string&gt; Errors { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#2-search-si-filtrare","title":"2. Search \u0219i Filtrare","text":"<pre><code>public class SearchRequestDto\n{\n    public string SearchTerm { get; set; }\n    public Dictionary&lt;string, string&gt; Filters { get; set; }\n    public List&lt;string&gt; IncludeFields { get; set; }\n    public PagedRequest Pagination { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#best-practices","title":"Best Practices","text":""},{"location":"fod/suport/data/dtos/#1-naming-conventions","title":"1. Naming Conventions","text":"<ul> <li>Suffix cu <code>Dto</code> pentru claritate</li> <li><code>CreateXDto</code>, <code>UpdateXDto</code> pentru opera\u021biuni</li> <li><code>XSummaryDto</code>, <code>XDetailDto</code> pentru nivele de detaliu</li> </ul>"},{"location":"fod/suport/data/dtos/#2-granularitate","title":"2. Granularitate","text":"<ul> <li>DTOs specifice pentru fiecare opera\u021biune</li> <li>Nu reutiliza\u021bi DTOs \u00eentre Create/Update dac\u0103 au c\u00e2mpuri diferite</li> </ul>"},{"location":"fod/suport/data/dtos/#3-imutabilitate","title":"3. Imutabilitate","text":"<pre><code>public class ImmutableUserDto\n{\n    public ImmutableUserDto(int id, string name, string email)\n    {\n        Id = id;\n        Name = name;\n        Email = email;\n    }\n\n    public int Id { get; }\n    public string Name { get; }\n    public string Email { get; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#4-null-safety","title":"4. Null Safety","text":"<pre><code>public class SafeUserDto\n{\n    public string Name { get; set; } = string.Empty;\n    public List&lt;string&gt; Roles { get; set; } = new();\n    public DateTime? LastLoginDate { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/data/dtos/#concluzie","title":"Concluzie","text":"<p>DTOs sunt esen\u021biale pentru o arhitectur\u0103 curat\u0103 \u0219i scalabil\u0103. Ele ofer\u0103 flexibilitate, securitate \u0219i performan\u021b\u0103, permi\u021b\u00e2nd evolu\u021bia independent\u0103 a diferitelor straturi ale aplica\u021biei.</p>"},{"location":"fod/suport/data/repository/","title":"Repository Pattern \u00een Fod.Data","text":""},{"location":"fod/suport/data/repository/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Repository Pattern ofer\u0103 o abstractizare \u00eentre logica de business \u0219i stratul de acces la date, permi\u021b\u00e2nd testare u\u0219oar\u0103 \u0219i schimbarea sursei de date f\u0103r\u0103 a afecta logica aplica\u021biei.</p>"},{"location":"fod/suport/data/repository/#concepte-de-baza","title":"Concepte de Baz\u0103","text":""},{"location":"fod/suport/data/repository/#generic-repository","title":"Generic Repository","text":"<pre><code>public interface IRepository&lt;TEntity&gt; where TEntity : class\n{\n    Task&lt;TEntity&gt; GetByIdAsync(int id);\n    Task&lt;IReadOnlyList&lt;TEntity&gt;&gt; ListAllAsync();\n    Task&lt;TEntity&gt; AddAsync(TEntity entity);\n    Task UpdateAsync(TEntity entity);\n    Task DeleteAsync(TEntity entity);\n}\n</code></pre>"},{"location":"fod/suport/data/repository/#implementare-de-baza","title":"Implementare de Baz\u0103","text":"<pre><code>public class Repository&lt;TEntity&gt; : IRepository&lt;TEntity&gt; where TEntity : class\n{\n    protected readonly DbContext _context;\n\n    public Repository(DbContext context)\n    {\n        _context = context;\n    }\n\n    public virtual async Task&lt;TEntity&gt; GetByIdAsync(int id)\n    {\n        return await _context.Set&lt;TEntity&gt;().FindAsync(id);\n    }\n\n    public async Task&lt;IReadOnlyList&lt;TEntity&gt;&gt; ListAllAsync()\n    {\n        return await _context.Set&lt;TEntity&gt;().ToListAsync();\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/repository/#repository-specializate","title":"Repository Specializate","text":""},{"location":"fod/suport/data/repository/#repository-cu-specifications","title":"Repository cu Specifications","text":"<pre><code>public interface ISpecificationRepository&lt;T&gt; : IRepository&lt;T&gt; where T : class\n{\n    Task&lt;T&gt; GetBySpecAsync(ISpecification&lt;T&gt; spec);\n    Task&lt;IReadOnlyList&lt;T&gt;&gt; ListAsync(ISpecification&lt;T&gt; spec);\n    Task&lt;int&gt; CountAsync(ISpecification&lt;T&gt; spec);\n}\n</code></pre>"},{"location":"fod/suport/data/repository/#repository-pentru-entitati-specifice","title":"Repository pentru Entit\u0103\u021bi Specifice","text":"<pre><code>public interface IUserRepository : IRepository&lt;User&gt;\n{\n    Task&lt;User&gt; GetByEmailAsync(string email);\n    Task&lt;IReadOnlyList&lt;User&gt;&gt; GetActiveUsersAsync();\n    Task&lt;bool&gt; EmailExistsAsync(string email);\n}\n\npublic class UserRepository : Repository&lt;User&gt;, IUserRepository\n{\n    public UserRepository(ApplicationDbContext context) : base(context) { }\n\n    public async Task&lt;User&gt; GetByEmailAsync(string email)\n    {\n        return await _context.Users\n            .Include(u =&gt; u.Roles)\n            .FirstOrDefaultAsync(u =&gt; u.Email == email);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/repository/#utilizare-in-servicii","title":"Utilizare \u00een Servicii","text":"<pre><code>public class UserService\n{\n    private readonly IUserRepository _userRepository;\n    private readonly IUnitOfWork _unitOfWork;\n\n    public async Task&lt;UserDto&gt; CreateUserAsync(CreateUserDto dto)\n    {\n        var user = new User\n        {\n            Email = dto.Email,\n            Name = dto.Name\n        };\n\n        await _userRepository.AddAsync(user);\n        await _unitOfWork.CompleteAsync();\n\n        return _mapper.Map&lt;UserDto&gt;(user);\n    }\n}\n</code></pre>"},{"location":"fod/suport/data/repository/#best-practices","title":"Best Practices","text":"<ol> <li>Nu expune\u021bi IQueryable - Returna\u021bi \u00eentotdeauna liste concrete</li> <li>Folosi\u021bi Specifications - Pentru query-uri complexe</li> <li>Async peste tot - Pentru opera\u021biuni I/O</li> <li>Repository per Aggregate Root - Nu pentru fiecare entitate</li> </ol>"},{"location":"fod/suport/data/repository/#concluzie","title":"Concluzie","text":"<p>Repository Pattern ofer\u0103 o abstractizare puternic\u0103 pentru accesul la date, facilit\u00e2nd testarea \u0219i mentenan\u021ba codului.</p>"},{"location":"fod/suport/documents/","title":"Managementul Documentelor","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru gestionarea documentelor.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/documents/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Modulul de documente ofer\u0103 func\u021bionalit\u0103\u021bi pentru procesarea \u0219i gestionarea documentelor.</p>"},{"location":"fod/suport/documents/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Procesare</li> <li>Templates</li> </ul>"},{"location":"fod/suport/documents/procesare/","title":"Procesarea Documentelor","text":"<p>Aceast\u0103 pagin\u0103 descrie procesarea documentelor.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/documents/procesare/#tipuri-de-documente-suportate","title":"Tipuri de documente suportate","text":""},{"location":"fod/suport/documents/procesare/#flux-de-procesare","title":"Flux de procesare","text":""},{"location":"fod/suport/documents/procesare/#validare","title":"Validare","text":""},{"location":"fod/suport/documents/templates/","title":"Template-uri pentru Documente","text":"<p>Aceast\u0103 pagin\u0103 descrie utilizarea template-urilor pentru documente.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/documents/templates/#creare-template-uri","title":"Creare template-uri","text":""},{"location":"fod/suport/documents/templates/#sintaxa","title":"Sintax\u0103","text":""},{"location":"fod/suport/documents/templates/#exemple","title":"Exemple","text":""},{"location":"fod/suport/entity-framework/","title":"FOD Entity Framework","text":""},{"location":"fod/suport/entity-framework/#introducere","title":"Introducere","text":"<p>FOD.EntityFramework reprezint\u0103 stratul de acces la date pentru platforma FOD.Components, oferind o abstractizare robust\u0103 peste Entity Framework Core pentru gestionarea datelor \u00een aplica\u021biile guvernamentale. Aceast\u0103 libr\u0103rie implementeaz\u0103 pattern-uri moderne de acces la date, optimizate pentru cerin\u021bele specifice ale serviciilor publice digitale.</p>"},{"location":"fod/suport/entity-framework/#caracteristici-principale","title":"Caracteristici Principale","text":""},{"location":"fod/suport/entity-framework/#functionalitati-core","title":"\ud83d\uddc4\ufe0f Func\u021bionalit\u0103\u021bi Core","text":"<ul> <li>Repository Pattern - Implementare standardizat\u0103 pentru toate entit\u0103\u021bile</li> <li>Unit of Work - Gestionare tranzac\u021bii complexe</li> <li>Audit Trail - Istoric complet al modific\u0103rilor</li> <li>Soft Delete - \u0218tergere logic\u0103 pentru p\u0103strarea istoricului</li> <li>Multi-tenancy - Suport pentru aplica\u021bii multi-tenant</li> <li>Query Specifications - Construire query-uri reutilizabile</li> </ul>"},{"location":"fod/suport/entity-framework/#optimizari-si-performanta","title":"\ud83d\ude80 Optimiz\u0103ri \u0219i Performan\u021b\u0103","text":"<ul> <li>Lazy Loading Proxies - \u00cenc\u0103rcare \u00eent\u00e2rziat\u0103 inteligent\u0103</li> <li>Query Caching - Cache pentru query-uri frecvente</li> <li>Bulk Operations - Opera\u021bii \u00een mas\u0103 optimizate</li> <li>Connection Resiliency - Reconectare automat\u0103</li> <li>Database Migrations - Versionare \u0219i actualizare schem\u0103</li> </ul>"},{"location":"fod/suport/entity-framework/#arhitectura","title":"Arhitectur\u0103","text":""},{"location":"fod/suport/entity-framework/#structura-proiectului","title":"Structura Proiectului","text":"<pre><code>FOD.EntityFramework/\n\u251c\u2500\u2500 Context/\n\u2502   \u251c\u2500\u2500 FodDbContext.cs\n\u2502   \u251c\u2500\u2500 FodDbContextFactory.cs\n\u2502   \u2514\u2500\u2500 ModelConfiguration/\n\u251c\u2500\u2500 Entities/\n\u2502   \u251c\u2500\u2500 Base/\n\u2502   \u251c\u2500\u2500 Request/\n\u2502   \u251c\u2500\u2500 Service/\n\u2502   \u2514\u2500\u2500 User/\n\u251c\u2500\u2500 Repositories/\n\u2502   \u251c\u2500\u2500 Base/\n\u2502   \u251c\u2500\u2500 Implementations/\n\u2502   \u2514\u2500\u2500 Interfaces/\n\u251c\u2500\u2500 Specifications/\n\u251c\u2500\u2500 Extensions/\n\u2514\u2500\u2500 Migrations/\n</code></pre>"},{"location":"fod/suport/entity-framework/#diagrama-arhitecturala","title":"Diagrama Arhitectural\u0103","text":"<pre><code>graph TD\n    A[Application Layer] --&gt; B[Repository Interfaces]\n    B --&gt; C[Repository Implementations]\n    C --&gt; D[DbContext]\n    D --&gt; E[Entity Framework Core]\n    E --&gt; F[SQL Server/PostgreSQL]\n\n    G[Entities] --&gt; D\n    H[Configurations] --&gt; D\n    I[Migrations] --&gt; D\n</code></pre>"},{"location":"fod/suport/entity-framework/#configurare-si-instalare","title":"Configurare \u0219i Instalare","text":""},{"location":"fod/suport/entity-framework/#1-instalare-pachet-nuget","title":"1. Instalare Pachet NuGet","text":"<pre><code>dotnet add package FOD.EntityFramework\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-configurare-in-programcs","title":"2. Configurare \u00een Program.cs","text":"<pre><code>using FOD.EntityFramework;\nusing FOD.EntityFramework.Extensions;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Adaug\u0103 DbContext\nbuilder.Services.AddFodDbContext(options =&gt;\n{\n    options.UseSqlServer(\n        builder.Configuration.GetConnectionString(\"DefaultConnection\"),\n        sqlOptions =&gt;\n        {\n            sqlOptions.MigrationsAssembly(\"YourProject.Migrations\");\n            sqlOptions.EnableRetryOnFailure(\n                maxRetryCount: 5,\n                maxRetryDelay: TimeSpan.FromSeconds(30),\n                errorNumbersToAdd: null);\n        });\n\n    // Op\u021biuni adi\u021bionale\n    options.EnableSensitiveDataLogging(builder.Environment.IsDevelopment());\n    options.EnableServiceProviderCaching();\n});\n\n// Adaug\u0103 repositories\nbuilder.Services.AddFodRepositories();\n\n// Adaug\u0103 Unit of Work\nbuilder.Services.AddScoped&lt;IUnitOfWork, UnitOfWork&gt;();\n\n// Configurare audit\nbuilder.Services.ConfigureFodAudit(options =&gt;\n{\n    options.AuditTableName = \"AuditLogs\";\n    options.IncludeEntityChanges = true;\n    options.ExcludedTypes = new[] { typeof(AuditLog) };\n});\n\nvar app = builder.Build();\n\n// Aplic\u0103 migra\u021bii automat (op\u021bional)\nif (app.Environment.IsDevelopment())\n{\n    await app.MigrateDatabaseAsync();\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#3-connection-string-configuration","title":"3. Connection String Configuration","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=FodDb;User Id=sa;Password=YourPassword;TrustServerCertificate=True\"\n  },\n  \"EntityFramework\": {\n    \"CommandTimeout\": 30,\n    \"EnableRetryOnFailure\": true,\n    \"MaxRetryCount\": 3,\n    \"MaxRetryDelay\": 30,\n    \"EnableSensitiveDataLogging\": false,\n    \"TrackingBehavior\": \"TrackAll\"\n  }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#entitati-de-baza","title":"Entit\u0103\u021bi de Baz\u0103","text":""},{"location":"fod/suport/entity-framework/#1-baseentity","title":"1. BaseEntity","text":"<p>Toate entit\u0103\u021bile FOD mo\u0219tenesc din <code>BaseEntity</code>:</p> <pre><code>public abstract class BaseEntity\n{\n    public int Id { get; set; }\n    public DateTime CreatedAt { get; set; }\n    public string CreatedBy { get; set; }\n    public DateTime? UpdatedAt { get; set; }\n    public string UpdatedBy { get; set; }\n    public bool IsDeleted { get; set; }\n    public DateTime? DeletedAt { get; set; }\n    public byte[] RowVersion { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-exemplu-entitate-personalizata","title":"2. Exemplu Entitate Personalizat\u0103","text":"<pre><code>public class FodRequest : BaseEntity\n{\n    public string RequestNumber { get; set; }\n    public int ServiceId { get; set; }\n    public int UserId { get; set; }\n    public RequestStatus Status { get; set; }\n    public DateTime SubmittedAt { get; set; }\n    public decimal TotalCost { get; set; }\n\n    // Navigation properties\n    public virtual FodService Service { get; set; }\n    public virtual UserProfile User { get; set; }\n    public virtual ICollection&lt;FodRequestFile&gt; Files { get; set; }\n    public virtual ICollection&lt;FodRequestPayment&gt; Payments { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#3-configurare-entitate","title":"3. Configurare Entitate","text":"<pre><code>public class FodRequestConfiguration : IEntityTypeConfiguration&lt;FodRequest&gt;\n{\n    public void Configure(EntityTypeBuilder&lt;FodRequest&gt; builder)\n    {\n        builder.ToTable(\"FodRequests\");\n\n        builder.HasKey(e =&gt; e.Id);\n\n        builder.Property(e =&gt; e.RequestNumber)\n            .IsRequired()\n            .HasMaxLength(50);\n\n        builder.HasIndex(e =&gt; e.RequestNumber)\n            .IsUnique();\n\n        builder.Property(e =&gt; e.TotalCost)\n            .HasPrecision(18, 2);\n\n        builder.HasOne(e =&gt; e.Service)\n            .WithMany(s =&gt; s.Requests)\n            .HasForeignKey(e =&gt; e.ServiceId)\n            .OnDelete(DeleteBehavior.Restrict);\n\n        builder.HasQueryFilter(e =&gt; !e.IsDeleted);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#repository-pattern","title":"Repository Pattern","text":""},{"location":"fod/suport/entity-framework/#1-interface-repository-generic","title":"1. Interface Repository Generic","text":"<pre><code>public interface IRepository&lt;TEntity&gt; where TEntity : BaseEntity\n{\n    // Query\n    Task&lt;TEntity&gt; GetByIdAsync(int id, CancellationToken cancellationToken = default);\n    Task&lt;TEntity&gt; GetByIdWithIncludesAsync(int id, params Expression&lt;Func&lt;TEntity, object&gt;&gt;[] includes);\n    Task&lt;IEnumerable&lt;TEntity&gt;&gt; GetAllAsync(CancellationToken cancellationToken = default);\n    Task&lt;IPagedList&lt;TEntity&gt;&gt; GetPagedAsync(int pageIndex, int pageSize, Expression&lt;Func&lt;TEntity, bool&gt;&gt; predicate = null);\n\n    // Commands\n    Task&lt;TEntity&gt; AddAsync(TEntity entity, CancellationToken cancellationToken = default);\n    Task AddRangeAsync(IEnumerable&lt;TEntity&gt; entities, CancellationToken cancellationToken = default);\n    void Update(TEntity entity);\n    void Remove(TEntity entity);\n    void RemoveRange(IEnumerable&lt;TEntity&gt; entities);\n\n    // Specifications\n    Task&lt;TEntity&gt; FirstOrDefaultAsync(ISpecification&lt;TEntity&gt; specification);\n    Task&lt;IEnumerable&lt;TEntity&gt;&gt; ListAsync(ISpecification&lt;TEntity&gt; specification);\n    Task&lt;int&gt; CountAsync(ISpecification&lt;TEntity&gt; specification);\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-repository-specializat","title":"2. Repository Specializat","text":"<pre><code>public interface IFodRequestRepository : IRepository&lt;FodRequest&gt;\n{\n    Task&lt;FodRequest&gt; GetByRequestNumberAsync(string requestNumber);\n    Task&lt;IEnumerable&lt;FodRequest&gt;&gt; GetUserRequestsAsync(int userId, RequestStatus? status = null);\n    Task&lt;IEnumerable&lt;FodRequest&gt;&gt; GetPendingRequestsAsync(DateTime olderThan);\n    Task&lt;RequestStatistics&gt; GetStatisticsAsync(StatisticsFilter filter);\n}\n\npublic class FodRequestRepository : Repository&lt;FodRequest&gt;, IFodRequestRepository\n{\n    public FodRequestRepository(FodDbContext context) : base(context) { }\n\n    public async Task&lt;FodRequest&gt; GetByRequestNumberAsync(string requestNumber)\n    {\n        return await DbSet\n            .Include(r =&gt; r.Service)\n            .Include(r =&gt; r.User)\n            .Include(r =&gt; r.Files)\n            .FirstOrDefaultAsync(r =&gt; r.RequestNumber == requestNumber);\n    }\n\n    public async Task&lt;IEnumerable&lt;FodRequest&gt;&gt; GetUserRequestsAsync(int userId, RequestStatus? status = null)\n    {\n        var query = DbSet.Where(r =&gt; r.UserId == userId);\n\n        if (status.HasValue)\n        {\n            query = query.Where(r =&gt; r.Status == status.Value);\n        }\n\n        return await query\n            .OrderByDescending(r =&gt; r.SubmittedAt)\n            .ToListAsync();\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#specifications-pattern","title":"Specifications Pattern","text":""},{"location":"fod/suport/entity-framework/#1-specification-base","title":"1. Specification Base","text":"<pre><code>public abstract class BaseSpecification&lt;T&gt; : ISpecification&lt;T&gt;\n{\n    public Expression&lt;Func&lt;T, bool&gt;&gt; Criteria { get; }\n    public List&lt;Expression&lt;Func&lt;T, object&gt;&gt;&gt; Includes { get; } = new();\n    public List&lt;string&gt; IncludeStrings { get; } = new();\n    public Expression&lt;Func&lt;T, object&gt;&gt; OrderBy { get; private set; }\n    public Expression&lt;Func&lt;T, object&gt;&gt; OrderByDescending { get; private set; }\n    public int Take { get; private set; }\n    public int Skip { get; private set; }\n    public bool IsPagingEnabled { get; private set; }\n\n    protected BaseSpecification(Expression&lt;Func&lt;T, bool&gt;&gt; criteria)\n    {\n        Criteria = criteria;\n    }\n\n    protected void AddInclude(Expression&lt;Func&lt;T, object&gt;&gt; includeExpression)\n    {\n        Includes.Add(includeExpression);\n    }\n\n    protected void ApplyPaging(int skip, int take)\n    {\n        Skip = skip;\n        Take = take;\n        IsPagingEnabled = true;\n    }\n\n    protected void ApplyOrderBy(Expression&lt;Func&lt;T, object&gt;&gt; orderByExpression)\n    {\n        OrderBy = orderByExpression;\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-specification-concreta","title":"2. Specification Concret\u0103","text":"<pre><code>public class ActiveRequestsSpecification : BaseSpecification&lt;FodRequest&gt;\n{\n    public ActiveRequestsSpecification(int? serviceId = null) \n        : base(r =&gt; r.Status != RequestStatus.Completed &amp;&amp; \n                    r.Status != RequestStatus.Cancelled &amp;&amp;\n                    (!serviceId.HasValue || r.ServiceId == serviceId.Value))\n    {\n        AddInclude(r =&gt; r.Service);\n        AddInclude(r =&gt; r.User);\n        ApplyOrderByDescending(r =&gt; r.SubmittedAt);\n    }\n}\n\n// Utilizare\nvar activeRequests = await _requestRepository.ListAsync(\n    new ActiveRequestsSpecification(serviceId: 5));\n</code></pre>"},{"location":"fod/suport/entity-framework/#unit-of-work-pattern","title":"Unit of Work Pattern","text":""},{"location":"fod/suport/entity-framework/#1-interface-unit-of-work","title":"1. Interface Unit of Work","text":"<pre><code>public interface IUnitOfWork : IDisposable\n{\n    IFodRequestRepository Requests { get; }\n    IFodServiceRepository Services { get; }\n    IUserRepository Users { get; }\n    IRepository&lt;T&gt; Repository&lt;T&gt;() where T : BaseEntity;\n\n    Task&lt;int&gt; SaveChangesAsync(CancellationToken cancellationToken = default);\n    Task&lt;IDbContextTransaction&gt; BeginTransactionAsync();\n    Task CommitTransactionAsync();\n    Task RollbackTransactionAsync();\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-utilizare-unit-of-work","title":"2. Utilizare Unit of Work","text":"<pre><code>public class RequestService\n{\n    private readonly IUnitOfWork _unitOfWork;\n\n    public async Task&lt;RequestResult&gt; SubmitRequestAsync(SubmitRequestDto dto)\n    {\n        using var transaction = await _unitOfWork.BeginTransactionAsync();\n\n        try\n        {\n            // Creare request\n            var request = new FodRequest\n            {\n                ServiceId = dto.ServiceId,\n                UserId = dto.UserId,\n                Status = RequestStatus.Pending,\n                SubmittedAt = DateTime.UtcNow\n            };\n\n            await _unitOfWork.Requests.AddAsync(request);\n\n            // Adaug\u0103 fi\u0219iere\n            foreach (var file in dto.Files)\n            {\n                var requestFile = new FodRequestFile\n                {\n                    Request = request,\n                    FileName = file.FileName,\n                    FileContent = file.Content\n                };\n\n                await _unitOfWork.Repository&lt;FodRequestFile&gt;().AddAsync(requestFile);\n            }\n\n            // Salveaz\u0103 modific\u0103rile\n            await _unitOfWork.SaveChangesAsync();\n\n            // Commit transaction\n            await _unitOfWork.CommitTransactionAsync();\n\n            return new RequestResult { Success = true, RequestId = request.Id };\n        }\n        catch (Exception ex)\n        {\n            await _unitOfWork.RollbackTransactionAsync();\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#migratii","title":"Migra\u021bii","text":""},{"location":"fod/suport/entity-framework/#1-creare-migratie","title":"1. Creare Migra\u021bie","text":"<pre><code># Adaug\u0103 o migra\u021bie nou\u0103\ndotnet ef migrations add AddRequestTable --context FodDbContext --output-dir Migrations\n\n# Actualizeaz\u0103 baza de date\ndotnet ef database update --context FodDbContext\n\n# Genereaz\u0103 script SQL\ndotnet ef migrations script --context FodDbContext --output migrations.sql\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-migratie-personalizata","title":"2. Migra\u021bie Personalizat\u0103","text":"<pre><code>public partial class AddRequestTable : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.CreateTable(\n            name: \"FodRequests\",\n            columns: table =&gt; new\n            {\n                Id = table.Column&lt;int&gt;(nullable: false)\n                    .Annotation(\"SqlServer:Identity\", \"1, 1\"),\n                RequestNumber = table.Column&lt;string&gt;(maxLength: 50, nullable: false),\n                ServiceId = table.Column&lt;int&gt;(nullable: false),\n                // alte coloane\n            },\n            constraints: table =&gt;\n            {\n                table.PrimaryKey(\"PK_FodRequests\", x =&gt; x.Id);\n                table.ForeignKey(\n                    name: \"FK_FodRequests_FodServices_ServiceId\",\n                    column: x =&gt; x.ServiceId,\n                    principalTable: \"FodServices\",\n                    principalColumn: \"Id\",\n                    onDelete: ReferentialAction.Restrict);\n            });\n\n        // Seed data\n        migrationBuilder.InsertData(\n            table: \"RequestStatuses\",\n            columns: new[] { \"Id\", \"Name\", \"Description\" },\n            values: new object[,]\n            {\n                { 1, \"Pending\", \"\u00cen a\u0219teptare\" },\n                { 2, \"Processing\", \"\u00cen procesare\" },\n                { 3, \"Completed\", \"Finalizat\" }\n            });\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#query-optimization","title":"Query Optimization","text":""},{"location":"fod/suport/entity-framework/#1-eager-loading","title":"1. Eager Loading","text":"<pre><code>public async Task&lt;FodRequest&gt; GetRequestWithDetailsAsync(int requestId)\n{\n    return await _context.Requests\n        .Include(r =&gt; r.Service)\n            .ThenInclude(s =&gt; s.Provider)\n        .Include(r =&gt; r.User)\n        .Include(r =&gt; r.Files)\n        .Include(r =&gt; r.Payments)\n            .ThenInclude(p =&gt; p.Transaction)\n        .AsSplitQuery() // Pentru query-uri mari\n        .FirstOrDefaultAsync(r =&gt; r.Id == requestId);\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-projection","title":"2. Projection","text":"<pre><code>public async Task&lt;IEnumerable&lt;RequestSummaryDto&gt;&gt; GetRequestSummariesAsync()\n{\n    return await _context.Requests\n        .Where(r =&gt; r.Status == RequestStatus.Active)\n        .Select(r =&gt; new RequestSummaryDto\n        {\n            Id = r.Id,\n            RequestNumber = r.RequestNumber,\n            ServiceName = r.Service.Name,\n            UserName = r.User.FullName,\n            SubmittedAt = r.SubmittedAt,\n            TotalCost = r.TotalCost\n        })\n        .ToListAsync();\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#3-compiled-queries","title":"3. Compiled Queries","text":"<pre><code>private static readonly Func&lt;FodDbContext, int, Task&lt;FodRequest&gt;&gt; GetRequestByIdQuery =\n    EF.CompileAsyncQuery((FodDbContext context, int id) =&gt;\n        context.Requests\n            .Include(r =&gt; r.Service)\n            .FirstOrDefault(r =&gt; r.Id == id));\n\npublic Task&lt;FodRequest&gt; GetRequestByIdCompiledAsync(int id)\n{\n    return GetRequestByIdQuery(_context, id);\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#audit-si-change-tracking","title":"Audit \u0219i Change Tracking","text":""},{"location":"fod/suport/entity-framework/#1-audit-interceptor","title":"1. Audit Interceptor","text":"<pre><code>public class AuditInterceptor : SaveChangesInterceptor\n{\n    private readonly ICurrentUserService _currentUserService;\n\n    public override InterceptionResult&lt;int&gt; SavingChanges(\n        DbContextEventData eventData, \n        InterceptionResult&lt;int&gt; result)\n    {\n        var context = eventData.Context;\n        var entries = context.ChangeTracker.Entries&lt;BaseEntity&gt;();\n\n        foreach (var entry in entries)\n        {\n            switch (entry.State)\n            {\n                case EntityState.Added:\n                    entry.Entity.CreatedAt = DateTime.UtcNow;\n                    entry.Entity.CreatedBy = _currentUserService.UserId;\n                    break;\n\n                case EntityState.Modified:\n                    entry.Entity.UpdatedAt = DateTime.UtcNow;\n                    entry.Entity.UpdatedBy = _currentUserService.UserId;\n                    break;\n\n                case EntityState.Deleted:\n                    entry.State = EntityState.Modified;\n                    entry.Entity.IsDeleted = true;\n                    entry.Entity.DeletedAt = DateTime.UtcNow;\n                    break;\n            }\n        }\n\n        return base.SavingChanges(eventData, result);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-audit-log-entity","title":"2. Audit Log Entity","text":"<pre><code>public class AuditLog\n{\n    public int Id { get; set; }\n    public string EntityName { get; set; }\n    public int EntityId { get; set; }\n    public string Action { get; set; }\n    public string Changes { get; set; }\n    public string UserId { get; set; }\n    public DateTime Timestamp { get; set; }\n    public string IpAddress { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#testing","title":"Testing","text":""},{"location":"fod/suport/entity-framework/#1-in-memory-database-pentru-teste","title":"1. In-Memory Database pentru Teste","text":"<pre><code>public class TestDbContextFactory\n{\n    public static FodDbContext Create()\n    {\n        var options = new DbContextOptionsBuilder&lt;FodDbContext&gt;()\n            .UseInMemoryDatabase(databaseName: Guid.NewGuid().ToString())\n            .Options;\n\n        var context = new FodDbContext(options);\n        context.Database.EnsureCreated();\n\n        // Seed test data\n        SeedTestData(context);\n\n        return context;\n    }\n\n    private static void SeedTestData(FodDbContext context)\n    {\n        context.Services.AddRange(\n            new FodService { Id = 1, Name = \"Service 1\" },\n            new FodService { Id = 2, Name = \"Service 2\" }\n        );\n\n        context.SaveChanges();\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-repository-test","title":"2. Repository Test","text":"<pre><code>[TestClass]\npublic class FodRequestRepositoryTests\n{\n    private FodDbContext _context;\n    private IFodRequestRepository _repository;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _context = TestDbContextFactory.Create();\n        _repository = new FodRequestRepository(_context);\n    }\n\n    [TestMethod]\n    public async Task GetByRequestNumber_Should_Return_Request_With_Includes()\n    {\n        // Arrange\n        var requestNumber = \"REQ-001\";\n\n        // Act\n        var result = await _repository.GetByRequestNumberAsync(requestNumber);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(requestNumber, result.RequestNumber);\n        Assert.IsNotNull(result.Service);\n        Assert.IsNotNull(result.User);\n    }\n\n    [TestCleanup]\n    public void Cleanup()\n    {\n        _context?.Dispose();\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#best-practices","title":"Best Practices","text":""},{"location":"fod/suport/entity-framework/#1-asyncawait-pattern","title":"1. Async/Await Pattern","text":"<pre><code>// \u2705 Bine\npublic async Task&lt;IEnumerable&lt;FodRequest&gt;&gt; GetRequestsAsync()\n{\n    return await _context.Requests\n        .Where(r =&gt; r.Status == RequestStatus.Active)\n        .ToListAsync();\n}\n\n// \u274c Evita\u021bi\npublic IEnumerable&lt;FodRequest&gt; GetRequests()\n{\n    return _context.Requests\n        .Where(r =&gt; r.Status == RequestStatus.Active)\n        .ToList(); // Blocheaz\u0103 thread-ul\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-dispose-pattern","title":"2. Dispose Pattern","text":"<pre><code>public class RequestService : IDisposable\n{\n    private readonly FodDbContext _context;\n    private bool _disposed;\n\n    public void Dispose()\n    {\n        Dispose(true);\n        GC.SuppressFinalize(this);\n    }\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (!_disposed)\n        {\n            if (disposing)\n            {\n                _context?.Dispose();\n            }\n            _disposed = true;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#3-query-filters-globale","title":"3. Query Filters Globale","text":"<pre><code>protected override void OnModelCreating(ModelBuilder modelBuilder)\n{\n    // Soft delete filter global\n    modelBuilder.Entity&lt;BaseEntity&gt;()\n        .HasQueryFilter(e =&gt; !e.IsDeleted);\n\n    // Multi-tenancy filter\n    modelBuilder.Entity&lt;ITenantEntity&gt;()\n        .HasQueryFilter(e =&gt; e.TenantId == _currentTenantId);\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#performanta-si-scalare","title":"Performan\u021b\u0103 \u0219i Scalare","text":""},{"location":"fod/suport/entity-framework/#1-connection-pooling","title":"1. Connection Pooling","text":"<pre><code>builder.Services.AddDbContext&lt;FodDbContext&gt;(options =&gt;\n{\n    options.UseSqlServer(connectionString, sqlOptions =&gt;\n    {\n        sqlOptions.EnableRetryOnFailure();\n    });\n}, ServiceLifetime.Scoped, ServiceLifetime.Singleton);\n</code></pre>"},{"location":"fod/suport/entity-framework/#2-bulk-operations","title":"2. Bulk Operations","text":"<pre><code>public async Task BulkInsertRequestsAsync(IEnumerable&lt;FodRequest&gt; requests)\n{\n    using var bulkCopy = new SqlBulkCopy(_connectionString);\n\n    bulkCopy.DestinationTableName = \"FodRequests\";\n    bulkCopy.BatchSize = 1000;\n\n    var dataTable = requests.ToDataTable();\n    await bulkCopy.WriteToServerAsync(dataTable);\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/#resurse-si-documentatie","title":"Resurse \u0219i Documenta\u021bie","text":"<ul> <li>Entity Framework Core Documentation</li> <li>FOD Entity Framework Wiki</li> <li>Performance Best Practices</li> <li>Migration Guide</li> </ul>"},{"location":"fod/suport/entity-framework/#concluzie","title":"Concluzie","text":"<p>FOD.EntityFramework ofer\u0103 o funda\u021bie solid\u0103 pentru gestionarea datelor \u00een aplica\u021biile guvernamentale, combin\u00e2nd puterea Entity Framework Core cu pattern-uri dovedite \u0219i optimiz\u0103ri specifice. Prin utilizarea repository pattern, specifications \u0219i unit of work, dezvoltatorii pot crea aplica\u021bii scalabile \u0219i u\u0219or de \u00eentre\u021binut.</p>"},{"location":"fod/suport/entity-framework/configurare/","title":"Configurare Entity Framework","text":""},{"location":"fod/suport/entity-framework/configurare/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Aceast\u0103 pagin\u0103 detaliaz\u0103 procesul de configurare a FOD.EntityFramework \u00een aplica\u021biile dvs., incluz\u00e2nd setarea contextului bazei de date, configurarea conexiunii \u0219i op\u021biunile avansate.</p>"},{"location":"fod/suport/entity-framework/configurare/#configurare-de-baza","title":"Configurare de Baz\u0103","text":""},{"location":"fod/suport/entity-framework/configurare/#1-instalare-pachete","title":"1. Instalare Pachete","text":"<pre><code>dotnet add package FOD.EntityFramework\ndotnet add package Microsoft.EntityFrameworkCore.SqlServer\ndotnet add package Microsoft.EntityFrameworkCore.Tools\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#2-configurare-dbcontext","title":"2. Configurare DbContext","text":"<pre><code>public class ApplicationDbContext : FodDbContext\n{\n    public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt; options)\n        : base(options)\n    {\n    }\n\n    // DbSets pentru entit\u0103\u021bile dvs.\n    public DbSet&lt;FodRequest&gt; Requests { get; set; }\n    public DbSet&lt;FodService&gt; Services { get; set; }\n    public DbSet&lt;UserProfile&gt; Users { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#3-inregistrare-in-programcs","title":"3. \u00cenregistrare \u00een Program.cs","text":"<pre><code>builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\n{\n    options.UseSqlServer(\n        builder.Configuration.GetConnectionString(\"DefaultConnection\"),\n        sqlServerOptions =&gt;\n        {\n            sqlServerOptions.MigrationsAssembly(typeof(ApplicationDbContext).Assembly.FullName);\n            sqlServerOptions.CommandTimeout(30);\n        });\n\n    // Op\u021biuni pentru development\n    if (builder.Environment.IsDevelopment())\n    {\n        options.EnableSensitiveDataLogging();\n        options.EnableDetailedErrors();\n    }\n});\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#configurare-avansata","title":"Configurare Avansat\u0103","text":""},{"location":"fod/suport/entity-framework/configurare/#connection-resiliency","title":"Connection Resiliency","text":"<pre><code>options.UseSqlServer(connectionString, sqlOptions =&gt;\n{\n    sqlOptions.EnableRetryOnFailure(\n        maxRetryCount: 5,\n        maxRetryDelay: TimeSpan.FromSeconds(30),\n        errorNumbersToAdd: new[] { 2601, 2627, 547, 8152 });\n});\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#query-tracking","title":"Query Tracking","text":"<pre><code>builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\n{\n    options.UseSqlServer(connectionString);\n    options.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTrackingWithIdentityResolution);\n});\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#interceptors","title":"Interceptors","text":"<pre><code>builder.Services.AddSingleton&lt;AuditInterceptor&gt;();\nbuilder.Services.AddSingleton&lt;PerformanceInterceptor&gt;();\n\nbuilder.Services.AddDbContext&lt;ApplicationDbContext&gt;((serviceProvider, options) =&gt;\n{\n    options.UseSqlServer(connectionString)\n           .AddInterceptors(\n               serviceProvider.GetRequiredService&lt;AuditInterceptor&gt;(),\n               serviceProvider.GetRequiredService&lt;PerformanceInterceptor&gt;());\n});\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#configurare-pentru-diferite-medii","title":"Configurare pentru Diferite Medii","text":""},{"location":"fod/suport/entity-framework/configurare/#development","title":"Development","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FodDb_Dev;Trusted_Connection=True;\"\n  }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#production","title":"Production","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=prod-server;Database=FodDb;User Id=app_user;Password={secret};Encrypt=True;\"\n  }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#utilizare-azure-key-vault","title":"Utilizare Azure Key Vault","text":"<pre><code>builder.Configuration.AddAzureKeyVault(\n    new Uri($\"https://{builder.Configuration[\"KeyVaultName\"]}.vault.azure.net/\"),\n    new DefaultAzureCredential());\n\nvar connectionString = builder.Configuration[\"ConnectionStrings:DefaultConnection\"];\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#health-checks","title":"Health Checks","text":"<pre><code>builder.Services.AddHealthChecks()\n    .AddDbContextCheck&lt;ApplicationDbContext&gt;(\n        name: \"database\",\n        failureStatus: HealthStatus.Unhealthy,\n        tags: new[] { \"db\", \"sql\", \"sqlserver\" });\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#logging-si-monitoring","title":"Logging \u0219i Monitoring","text":""},{"location":"fod/suport/entity-framework/configurare/#configurare-logging","title":"Configurare Logging","text":"<pre><code>builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\n{\n    options.UseSqlServer(connectionString)\n           .LogTo(Console.WriteLine, LogLevel.Information)\n           .EnableServiceProviderCaching();\n});\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#custom-log-filter","title":"Custom Log Filter","text":"<pre><code>options.LogTo(\n    Console.WriteLine,\n    (eventId, logLevel) =&gt; logLevel &gt;= LogLevel.Warning || \n                           eventId.Id == RelationalEventId.CommandExecuted.Id,\n    DbContextLoggerOptions.DefaultWithLocalTime);\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#multi-tenancy","title":"Multi-Tenancy","text":"<pre><code>public class TenantAwareDbContext : FodDbContext\n{\n    private readonly ITenantService _tenantService;\n\n    public TenantAwareDbContext(\n        DbContextOptions options,\n        ITenantService tenantService) : base(options)\n    {\n        _tenantService = tenantService;\n    }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        base.OnModelCreating(modelBuilder);\n\n        // Global query filter pentru tenant\n        modelBuilder.Entity&lt;BaseEntity&gt;()\n            .HasQueryFilter(e =&gt; e.TenantId == _tenantService.CurrentTenantId);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#performance-optimization","title":"Performance Optimization","text":""},{"location":"fod/suport/entity-framework/configurare/#connection-pooling","title":"Connection Pooling","text":"<pre><code>services.AddDbContextPool&lt;ApplicationDbContext&gt;(options =&gt;\n{\n    options.UseSqlServer(connectionString);\n}, poolSize: 128);\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#compiled-models","title":"Compiled Models","text":"<pre><code>// \u00cen proiectul dvs., rula\u021bi:\n// dotnet ef dbcontext optimize -c ApplicationDbContext -o CompiledModels\n\noptions.UseModel(ApplicationDbContextModel.Instance);\n</code></pre>"},{"location":"fod/suport/entity-framework/configurare/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/suport/entity-framework/configurare/#probleme-comune","title":"Probleme Comune","text":"<ol> <li> <p>Connection Timeout <pre><code>sqlOptions.CommandTimeout(60); // 60 secunde\n</code></pre></p> </li> <li> <p>Memory Leaks <pre><code>// Folosi\u021bi DbContextPool\nservices.AddDbContextPool&lt;ApplicationDbContext&gt;(options =&gt; ...);\n</code></pre></p> </li> <li> <p>Slow Queries <pre><code>options.ConfigureWarnings(warnings =&gt;\n    warnings.Log(RelationalEventId.QueryPossibleUnintendedUseOfEqualsWarning));\n</code></pre></p> </li> </ol>"},{"location":"fod/suport/entity-framework/configurare/#concluzie","title":"Concluzie","text":"<p>Configurarea corect\u0103 a Entity Framework este esen\u021bial\u0103 pentru performan\u021ba \u0219i fiabilitatea aplica\u021biei. Urma\u021bi aceste ghiduri pentru a asigura o configurare optim\u0103 pentru nevoile dvs. specifice.</p>"},{"location":"fod/suport/entity-framework/migratii/","title":"Migra\u021bii Entity Framework","text":""},{"location":"fod/suport/entity-framework/migratii/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Migra\u021biile Entity Framework Core permit versionarea \u0219i actualizarea schemei bazei de date \u00een mod controlat \u0219i reproductibil. Aceast\u0103 pagin\u0103 documenteaz\u0103 procesul de lucru cu migra\u021bii \u00een contextul FOD.Components.</p>"},{"location":"fod/suport/entity-framework/migratii/#concepte-de-baza","title":"Concepte de Baz\u0103","text":""},{"location":"fod/suport/entity-framework/migratii/#ce-sunt-migratiile","title":"Ce sunt Migra\u021biile?","text":"<p>Migra\u021biile sunt un mod de a p\u0103stra schema bazei de date sincronizat\u0103 cu modelul EF Core, p\u0103str\u00e2nd \u00een acela\u0219i timp datele existente. Fiecare migra\u021bie reprezint\u0103 o versiune a schemei bazei de date.</p>"},{"location":"fod/suport/entity-framework/migratii/#structura-unei-migratii","title":"Structura unei Migra\u021bii","text":"<pre><code>public partial class AddUserTable : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        // Modific\u0103ri pentru upgrade\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        // Modific\u0103ri pentru rollback\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#comenzi-pentru-migratii","title":"Comenzi pentru Migra\u021bii","text":""},{"location":"fod/suport/entity-framework/migratii/#1-creare-migratie-noua","title":"1. Creare Migra\u021bie Nou\u0103","text":"<pre><code># Package Manager Console\nAdd-Migration InitialCreate -Context ApplicationDbContext\n\n# .NET CLI\ndotnet ef migrations add InitialCreate --context ApplicationDbContext\n\n# Cu output directory specific\ndotnet ef migrations add AddUserRoles --context ApplicationDbContext --output-dir Data/Migrations\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#2-actualizare-baza-de-date","title":"2. Actualizare Baz\u0103 de Date","text":"<pre><code># Aplic\u0103 toate migra\u021biile \u00een a\u0219teptare\ndotnet ef database update\n\n# Aplic\u0103 p\u00e2n\u0103 la o migra\u021bie specific\u0103\ndotnet ef database update AddUserRoles\n\n# Rollback la o migra\u021bie anterioar\u0103\ndotnet ef database update PreviousMigration\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#3-eliminare-ultima-migratie","title":"3. Eliminare Ultim\u0103 Migra\u021bie","text":"<pre><code># Elimin\u0103 ultima migra\u021bie (doar dac\u0103 nu a fost aplicat\u0103)\ndotnet ef migrations remove\n\n# For\u021beaz\u0103 eliminarea\ndotnet ef migrations remove --force\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#4-generare-script-sql","title":"4. Generare Script SQL","text":"<pre><code># Script pentru toate migra\u021biile\ndotnet ef migrations script\n\n# Script \u00eentre dou\u0103 migra\u021bii\ndotnet ef migrations script AddUserTable AddUserRoles\n\n# Script idempotent\ndotnet ef migrations script --idempotent --output migrations.sql\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#exemple-practice","title":"Exemple Practice","text":""},{"location":"fod/suport/entity-framework/migratii/#1-adaugare-tabel-nou","title":"1. Ad\u0103ugare Tabel Nou","text":"<pre><code>public partial class AddDepartmentTable : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.CreateTable(\n            name: \"Departments\",\n            columns: table =&gt; new\n            {\n                Id = table.Column&lt;int&gt;(nullable: false)\n                    .Annotation(\"SqlServer:Identity\", \"1, 1\"),\n                Name = table.Column&lt;string&gt;(maxLength: 100, nullable: false),\n                Code = table.Column&lt;string&gt;(maxLength: 10, nullable: false),\n                Description = table.Column&lt;string&gt;(maxLength: 500, nullable: true),\n                IsActive = table.Column&lt;bool&gt;(nullable: false, defaultValue: true),\n                CreatedAt = table.Column&lt;DateTime&gt;(nullable: false, defaultValueSql: \"GETUTCDATE()\"),\n                CreatedBy = table.Column&lt;string&gt;(maxLength: 100, nullable: true)\n            },\n            constraints: table =&gt;\n            {\n                table.PrimaryKey(\"PK_Departments\", x =&gt; x.Id);\n            });\n\n        migrationBuilder.CreateIndex(\n            name: \"IX_Departments_Code\",\n            table: \"Departments\",\n            column: \"Code\",\n            unique: true);\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropTable(name: \"Departments\");\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#2-modificare-coloana","title":"2. Modificare Coloan\u0103","text":"<pre><code>public partial class ModifyUserEmailColumn : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        // M\u0103re\u0219te lungimea maxim\u0103\n        migrationBuilder.AlterColumn&lt;string&gt;(\n            name: \"Email\",\n            table: \"Users\",\n            maxLength: 256,\n            nullable: false,\n            oldClrType: typeof(string),\n            oldType: \"nvarchar(100)\",\n            oldMaxLength: 100);\n\n        // Adaug\u0103 index unic\n        migrationBuilder.CreateIndex(\n            name: \"IX_Users_Email\",\n            table: \"Users\",\n            column: \"Email\",\n            unique: true);\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropIndex(\n            name: \"IX_Users_Email\",\n            table: \"Users\");\n\n        migrationBuilder.AlterColumn&lt;string&gt;(\n            name: \"Email\",\n            table: \"Users\",\n            type: \"nvarchar(100)\",\n            maxLength: 100,\n            nullable: false,\n            oldClrType: typeof(string),\n            oldMaxLength: 256);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#3-adaugare-foreign-key","title":"3. Ad\u0103ugare Foreign Key","text":"<pre><code>public partial class AddDepartmentToEmployee : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.AddColumn&lt;int&gt;(\n            name: \"DepartmentId\",\n            table: \"Employees\",\n            nullable: false,\n            defaultValue: 1); // Departament implicit\n\n        migrationBuilder.CreateIndex(\n            name: \"IX_Employees_DepartmentId\",\n            table: \"Employees\",\n            column: \"DepartmentId\");\n\n        migrationBuilder.AddForeignKey(\n            name: \"FK_Employees_Departments_DepartmentId\",\n            table: \"Employees\",\n            column: \"DepartmentId\",\n            principalTable: \"Departments\",\n            principalColumn: \"Id\",\n            onDelete: ReferentialAction.Restrict);\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropForeignKey(\n            name: \"FK_Employees_Departments_DepartmentId\",\n            table: \"Employees\");\n\n        migrationBuilder.DropIndex(\n            name: \"IX_Employees_DepartmentId\",\n            table: \"Employees\");\n\n        migrationBuilder.DropColumn(\n            name: \"DepartmentId\",\n            table: \"Employees\");\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#migratii-cu-date-seed-data","title":"Migra\u021bii cu Date (Seed Data)","text":""},{"location":"fod/suport/entity-framework/migratii/#1-date-initiale","title":"1. Date Ini\u021biale","text":"<pre><code>public partial class SeedInitialData : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        // Insert roles\n        migrationBuilder.InsertData(\n            table: \"Roles\",\n            columns: new[] { \"Id\", \"Name\", \"Description\", \"CreatedAt\", \"CreatedBy\" },\n            values: new object[,]\n            {\n                { 1, \"Administrator\", \"Full system access\", new DateTime(2024, 1, 1), \"System\" },\n                { 2, \"Manager\", \"Department management\", new DateTime(2024, 1, 1), \"System\" },\n                { 3, \"User\", \"Standard user access\", new DateTime(2024, 1, 1), \"System\" }\n            });\n\n        // Insert departments\n        migrationBuilder.InsertData(\n            table: \"Departments\",\n            columns: new[] { \"Id\", \"Name\", \"Code\", \"IsActive\" },\n            values: new object[,]\n            {\n                { 1, \"IT\", \"IT\", true },\n                { 2, \"HR\", \"HR\", true },\n                { 3, \"Finance\", \"FIN\", true }\n            });\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DeleteData(table: \"Roles\", keyColumn: \"Id\", keyValue: 1);\n        migrationBuilder.DeleteData(table: \"Roles\", keyColumn: \"Id\", keyValue: 2);\n        migrationBuilder.DeleteData(table: \"Roles\", keyColumn: \"Id\", keyValue: 3);\n\n        migrationBuilder.DeleteData(table: \"Departments\", keyColumn: \"Id\", keyValue: 1);\n        migrationBuilder.DeleteData(table: \"Departments\", keyColumn: \"Id\", keyValue: 2);\n        migrationBuilder.DeleteData(table: \"Departments\", keyColumn: \"Id\", keyValue: 3);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#2-migrare-date-existente","title":"2. Migrare Date Existente","text":"<pre><code>public partial class MigrateUserData : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        // Adaug\u0103 coloan\u0103 nou\u0103\n        migrationBuilder.AddColumn&lt;string&gt;(\n            name: \"FullName\",\n            table: \"Users\",\n            maxLength: 200,\n            nullable: true);\n\n        // Migreaz\u0103 datele\n        migrationBuilder.Sql(@\"\n            UPDATE Users \n            SET FullName = FirstName + ' ' + LastName\n            WHERE FirstName IS NOT NULL AND LastName IS NOT NULL\n        \");\n\n        // F\u0103 coloana required dup\u0103 migrare\n        migrationBuilder.AlterColumn&lt;string&gt;(\n            name: \"FullName\",\n            table: \"Users\",\n            maxLength: 200,\n            nullable: false,\n            defaultValue: \"\");\n\n        // Elimin\u0103 coloanele vechi\n        migrationBuilder.DropColumn(name: \"FirstName\", table: \"Users\");\n        migrationBuilder.DropColumn(name: \"LastName\", table: \"Users\");\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#strategii-de-deployment","title":"Strategii de Deployment","text":""},{"location":"fod/suport/entity-framework/migratii/#1-automatic-migration","title":"1. Automatic Migration","text":"<pre><code>public class Program\n{\n    public static async Task Main(string[] args)\n    {\n        var host = CreateHostBuilder(args).Build();\n\n        using (var scope = host.Services.CreateScope())\n        {\n            var context = scope.ServiceProvider.GetRequiredService&lt;ApplicationDbContext&gt;();\n\n            try\n            {\n                await context.Database.MigrateAsync();\n                await SeedDatabase(context);\n            }\n            catch (Exception ex)\n            {\n                var logger = scope.ServiceProvider.GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();\n                logger.LogError(ex, \"An error occurred while migrating the database.\");\n                throw;\n            }\n        }\n\n        await host.RunAsync();\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#2-manual-migration-cu-verificare","title":"2. Manual Migration cu Verificare","text":"<pre><code>public class MigrationService\n{\n    private readonly ApplicationDbContext _context;\n    private readonly ILogger&lt;MigrationService&gt; _logger;\n\n    public async Task&lt;bool&gt; ApplyMigrationsAsync()\n    {\n        try\n        {\n            var pendingMigrations = await _context.Database.GetPendingMigrationsAsync();\n\n            if (pendingMigrations.Any())\n            {\n                _logger.LogInformation($\"Applying {pendingMigrations.Count()} migrations...\");\n\n                await _context.Database.MigrateAsync();\n\n                _logger.LogInformation(\"Migrations applied successfully.\");\n                return true;\n            }\n\n            _logger.LogInformation(\"No pending migrations.\");\n            return false;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Failed to apply migrations.\");\n            throw;\n        }\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#3-script-based-deployment","title":"3. Script-Based Deployment","text":"<pre><code># Generare script pentru production\ndotnet ef migrations script --idempotent --output ./scripts/update-database.sql\n\n# Aplicare cu sqlcmd\nsqlcmd -S server -d database -U user -P password -i update-database.sql\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#best-practices","title":"Best Practices","text":""},{"location":"fod/suport/entity-framework/migratii/#1-conventii-de-numire","title":"1. Conven\u021bii de Numire","text":"<pre><code># Folosi\u021bi nume descriptive\nAdd-Migration AddUserAuthenticationFields\nAdd-Migration CreateInvoiceTable\nAdd-Migration AddIndexToOrderNumber\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#2-migratii-atomice","title":"2. Migra\u021bii Atomice","text":"<pre><code>// \u2705 Bine - O singur\u0103 responsabilitate\npublic partial class AddEmailToUser : Migration { }\n\n// \u274c Evita\u021bi - Multiple responsabilit\u0103\u021bi\npublic partial class AddEmailToUserAndCreateProductTableAndModifyOrders : Migration { }\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#3-testare-migratii","title":"3. Testare Migra\u021bii","text":"<pre><code>[TestClass]\npublic class MigrationTests\n{\n    [TestMethod]\n    public async Task AllMigrations_ShouldApplySuccessfully()\n    {\n        using var context = new TestDbContext();\n\n        // Drop \u0219i recreeaz\u0103 baza de date\n        await context.Database.EnsureDeletedAsync();\n        await context.Database.MigrateAsync();\n\n        // Verific\u0103 c\u0103 toate tabelele exist\u0103\n        var tables = await context.Database.SqlQuery&lt;string&gt;(\n            $\"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'\"\n        ).ToListAsync();\n\n        Assert.IsTrue(tables.Contains(\"Users\"));\n        Assert.IsTrue(tables.Contains(\"Departments\"));\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/migratii/#troubleshooting","title":"Troubleshooting","text":""},{"location":"fod/suport/entity-framework/migratii/#probleme-comune","title":"Probleme Comune","text":"<ol> <li> <p>\"The migration has already been applied\" <pre><code># Verifica\u021bi migra\u021biile aplicate\ndotnet ef migrations list\n\n# Reseta\u021bi la o migra\u021bie anterioar\u0103\ndotnet ef database update PreviousMigration\n</code></pre></p> </li> <li> <p>\"Cannot drop table because it is referenced by a FOREIGN KEY\" <pre><code>// Elimina\u021bi mai \u00eent\u00e2i foreign key\nmigrationBuilder.DropForeignKey(name: \"FK_Orders_Users_UserId\", table: \"Orders\");\n// Apoi elimina\u021bi tabelul\nmigrationBuilder.DropTable(name: \"Users\");\n</code></pre></p> </li> <li> <p>Conflicte de migra\u021bii \u00een echip\u0103 <pre><code># Rezolva\u021bi conflictele manual\n# Re-genera\u021bi migra\u021bia\ndotnet ef migrations remove\ndotnet ef migrations add ResolvedMigration\n</code></pre></p> </li> </ol>"},{"location":"fod/suport/entity-framework/migratii/#concluzie","title":"Concluzie","text":"<p>Migra\u021biile sunt un instrument esen\u021bial pentru gestionarea evolu\u021biei schemei bazei de date. Urm\u00e2nd best practices \u0219i \u00een\u021beleg\u00e2nd comenzile disponibile, pute\u021bi gestiona eficient schimb\u0103rile \u00een baza de date pe parcursul ciclului de via\u021b\u0103 al aplica\u021biei.</p>"},{"location":"fod/suport/entity-framework/modele/","title":"Modele Entity Framework","text":""},{"location":"fod/suport/entity-framework/modele/#prezentare-generala","title":"Prezentare General\u0103","text":"<p>Modelele Entity Framework \u00een FOD.Components urmeaz\u0103 o structur\u0103 standardizat\u0103 care asigur\u0103 consisten\u021b\u0103, auditabilitate \u0219i u\u0219urin\u021b\u0103 \u00een \u00eentre\u021binere. Aceast\u0103 pagin\u0103 descrie conven\u021biile \u0219i pattern-urile utilizate pentru definirea entit\u0103\u021bilor.</p>"},{"location":"fod/suport/entity-framework/modele/#entitatea-de-baza","title":"Entitatea de Baz\u0103","text":""},{"location":"fod/suport/entity-framework/modele/#baseentity","title":"BaseEntity","text":"<p>Toate entit\u0103\u021bile din sistem mo\u0219tenesc din <code>BaseEntity</code>:</p> <pre><code>public abstract class BaseEntity\n{\n    public int Id { get; set; }\n\n    // Audit fields\n    public DateTime CreatedAt { get; set; }\n    public string CreatedBy { get; set; }\n    public DateTime? UpdatedAt { get; set; }\n    public string UpdatedBy { get; set; }\n\n    // Soft delete\n    public bool IsDeleted { get; set; }\n    public DateTime? DeletedAt { get; set; }\n    public string DeletedBy { get; set; }\n\n    // Concurrency control\n    [Timestamp]\n    public byte[] RowVersion { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#tipuri-de-entitati","title":"Tipuri de Entit\u0103\u021bi","text":""},{"location":"fod/suport/entity-framework/modele/#1-entitati-de-domeniu","title":"1. Entit\u0103\u021bi de Domeniu","text":"<pre><code>public class FodRequest : BaseEntity\n{\n    // Primary data\n    public string RequestNumber { get; set; }\n    public RequestStatus Status { get; set; }\n    public DateTime SubmittedAt { get; set; }\n\n    // Foreign keys\n    public int ServiceId { get; set; }\n    public int UserId { get; set; }\n\n    // Navigation properties\n    public virtual FodService Service { get; set; }\n    public virtual UserProfile User { get; set; }\n    public virtual ICollection&lt;FodRequestFile&gt; Files { get; set; }\n\n    // Computed properties\n    [NotMapped]\n    public bool IsExpired =&gt; SubmittedAt.AddDays(30) &lt; DateTime.UtcNow;\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-entitati-de-relatie-many-to-many","title":"2. Entit\u0103\u021bi de Rela\u021bie (Many-to-Many)","text":"<pre><code>public class UserRole : BaseEntity\n{\n    public int UserId { get; set; }\n    public int RoleId { get; set; }\n    public DateTime AssignedAt { get; set; }\n    public DateTime? ExpiresAt { get; set; }\n\n    public virtual UserProfile User { get; set; }\n    public virtual Role Role { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#3-entitati-de-configurare","title":"3. Entit\u0103\u021bi de Configurare","text":"<pre><code>public class SystemConfiguration : BaseEntity\n{\n    [Required]\n    [MaxLength(100)]\n    public string Key { get; set; }\n\n    [Required]\n    public string Value { get; set; }\n\n    [MaxLength(500)]\n    public string Description { get; set; }\n\n    public ConfigurationScope Scope { get; set; }\n    public bool IsEncrypted { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#value-objects","title":"Value Objects","text":""},{"location":"fod/suport/entity-framework/modele/#1-embedded-objects","title":"1. Embedded Objects","text":"<pre><code>[Owned]\npublic class Address\n{\n    public string Street { get; set; }\n    public string City { get; set; }\n    public string PostalCode { get; set; }\n    public string Country { get; set; }\n\n    public string FullAddress =&gt; $\"{Street}, {City} {PostalCode}, {Country}\";\n}\n\npublic class UserProfile : BaseEntity\n{\n    public string Name { get; set; }\n    public Address HomeAddress { get; set; } // Owned type\n    public Address WorkAddress { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-complex-types","title":"2. Complex Types","text":"<pre><code>[ComplexType]\npublic class Money\n{\n    public decimal Amount { get; set; }\n    public string Currency { get; set; }\n\n    public static Money operator +(Money a, Money b)\n    {\n        if (a.Currency != b.Currency)\n            throw new InvalidOperationException(\"Cannot add different currencies\");\n\n        return new Money { Amount = a.Amount + b.Amount, Currency = a.Currency };\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#configurare-entitati","title":"Configurare Entit\u0103\u021bi","text":""},{"location":"fod/suport/entity-framework/modele/#1-fluent-api-configuration","title":"1. Fluent API Configuration","text":"<pre><code>public class FodRequestConfiguration : IEntityTypeConfiguration&lt;FodRequest&gt;\n{\n    public void Configure(EntityTypeBuilder&lt;FodRequest&gt; builder)\n    {\n        // Table mapping\n        builder.ToTable(\"FodRequests\", \"dbo\");\n\n        // Primary key\n        builder.HasKey(e =&gt; e.Id);\n\n        // Properties\n        builder.Property(e =&gt; e.RequestNumber)\n            .IsRequired()\n            .HasMaxLength(50)\n            .HasColumnType(\"varchar(50)\");\n\n        builder.Property(e =&gt; e.Status)\n            .HasConversion&lt;string&gt;()\n            .HasMaxLength(20);\n\n        // Indexes\n        builder.HasIndex(e =&gt; e.RequestNumber)\n            .IsUnique()\n            .HasDatabaseName(\"IX_FodRequests_RequestNumber\");\n\n        builder.HasIndex(e =&gt; new { e.ServiceId, e.Status })\n            .HasDatabaseName(\"IX_FodRequests_ServiceId_Status\");\n\n        // Relationships\n        builder.HasOne(e =&gt; e.Service)\n            .WithMany(s =&gt; s.Requests)\n            .HasForeignKey(e =&gt; e.ServiceId)\n            .OnDelete(DeleteBehavior.Restrict);\n\n        // Query filters\n        builder.HasQueryFilter(e =&gt; !e.IsDeleted);\n    }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-data-annotations","title":"2. Data Annotations","text":"<pre><code>[Table(\"Services\", Schema = \"fod\")]\npublic class FodService : BaseEntity\n{\n    [Required]\n    [StringLength(100)]\n    [Column(\"ServiceName\")]\n    public string Name { get; set; }\n\n    [StringLength(500)]\n    public string Description { get; set; }\n\n    [Required]\n    [Range(0, 99999.99)]\n    [Column(TypeName = \"decimal(7,2)\")]\n    public decimal BaseCost { get; set; }\n\n    [ConcurrencyCheck]\n    public int Version { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#enumeratii-si-tipuri","title":"Enumera\u021bii \u0219i Tipuri","text":""},{"location":"fod/suport/entity-framework/modele/#1-enumeratii-simple","title":"1. Enumera\u021bii Simple","text":"<pre><code>public enum RequestStatus\n{\n    [Display(Name = \"\u00cen a\u0219teptare\")]\n    Pending = 1,\n\n    [Display(Name = \"\u00cen procesare\")]\n    Processing = 2,\n\n    [Display(Name = \"Aprobat\")]\n    Approved = 3,\n\n    [Display(Name = \"Respins\")]\n    Rejected = 4,\n\n    [Display(Name = \"Finalizat\")]\n    Completed = 5,\n\n    [Display(Name = \"Anulat\")]\n    Cancelled = 6\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-enum-converters","title":"2. Enum Converters","text":"<pre><code>public class RequestStatusConverter : ValueConverter&lt;RequestStatus, string&gt;\n{\n    public RequestStatusConverter() \n        : base(\n            v =&gt; v.ToString(),\n            v =&gt; (RequestStatus)Enum.Parse(typeof(RequestStatus), v))\n    {\n    }\n}\n\n// \u00cen configurare\nbuilder.Property(e =&gt; e.Status)\n    .HasConversion(new RequestStatusConverter());\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#relatii","title":"Rela\u021bii","text":""},{"location":"fod/suport/entity-framework/modele/#1-one-to-many","title":"1. One-to-Many","text":"<pre><code>public class Department : BaseEntity\n{\n    public string Name { get; set; }\n\n    // One department has many employees\n    public virtual ICollection&lt;Employee&gt; Employees { get; set; }\n}\n\npublic class Employee : BaseEntity\n{\n    public string Name { get; set; }\n\n    // Foreign key\n    public int DepartmentId { get; set; }\n\n    // Many employees belong to one department\n    public virtual Department Department { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-many-to-many","title":"2. Many-to-Many","text":"<pre><code>public class Student : BaseEntity\n{\n    public string Name { get; set; }\n    public virtual ICollection&lt;StudentCourse&gt; StudentCourses { get; set; }\n}\n\npublic class Course : BaseEntity\n{\n    public string Title { get; set; }\n    public virtual ICollection&lt;StudentCourse&gt; StudentCourses { get; set; }\n}\n\npublic class StudentCourse\n{\n    public int StudentId { get; set; }\n    public int CourseId { get; set; }\n    public DateTime EnrolledDate { get; set; }\n    public decimal? Grade { get; set; }\n\n    public virtual Student Student { get; set; }\n    public virtual Course Course { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#3-one-to-one","title":"3. One-to-One","text":"<pre><code>public class User : BaseEntity\n{\n    public string Email { get; set; }\n    public virtual UserProfile Profile { get; set; }\n}\n\npublic class UserProfile : BaseEntity\n{\n    public int UserId { get; set; }\n    public string FullName { get; set; }\n    public DateTime? DateOfBirth { get; set; }\n\n    public virtual User User { get; set; }\n}\n\n// Configuration\nbuilder.HasOne(u =&gt; u.Profile)\n    .WithOne(p =&gt; p.User)\n    .HasForeignKey&lt;UserProfile&gt;(p =&gt; p.UserId);\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#inheritance-strategies","title":"Inheritance Strategies","text":""},{"location":"fod/suport/entity-framework/modele/#1-table-per-hierarchy-tph","title":"1. Table per Hierarchy (TPH)","text":"<pre><code>public abstract class Payment : BaseEntity\n{\n    public decimal Amount { get; set; }\n    public DateTime PaymentDate { get; set; }\n    public string Discriminator { get; set; }\n}\n\npublic class CreditCardPayment : Payment\n{\n    public string CardNumber { get; set; }\n    public string CardHolderName { get; set; }\n}\n\npublic class BankTransferPayment : Payment\n{\n    public string AccountNumber { get; set; }\n    public string BankName { get; set; }\n}\n\n// Configuration\nmodelBuilder.Entity&lt;Payment&gt;()\n    .HasDiscriminator&lt;string&gt;(\"Discriminator\")\n    .HasValue&lt;CreditCardPayment&gt;(\"CreditCard\")\n    .HasValue&lt;BankTransferPayment&gt;(\"BankTransfer\");\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-table-per-type-tpt","title":"2. Table per Type (TPT)","text":"<pre><code>[Table(\"Vehicles\")]\npublic abstract class Vehicle : BaseEntity\n{\n    public string Manufacturer { get; set; }\n    public string Model { get; set; }\n}\n\n[Table(\"Cars\")]\npublic class Car : Vehicle\n{\n    public int NumberOfDoors { get; set; }\n    public FuelType FuelType { get; set; }\n}\n\n[Table(\"Motorcycles\")]\npublic class Motorcycle : Vehicle\n{\n    public int EngineCC { get; set; }\n    public bool HasSidecar { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#validare","title":"Validare","text":""},{"location":"fod/suport/entity-framework/modele/#1-validation-attributes","title":"1. Validation Attributes","text":"<pre><code>public class ContactForm : BaseEntity\n{\n    [Required(ErrorMessage = \"Numele este obligatoriu\")]\n    [StringLength(100, MinimumLength = 2)]\n    public string Name { get; set; }\n\n    [Required]\n    [EmailAddress(ErrorMessage = \"Email invalid\")]\n    public string Email { get; set; }\n\n    [Phone(ErrorMessage = \"Num\u0103r de telefon invalid\")]\n    public string Phone { get; set; }\n\n    [Required]\n    [StringLength(1000, MinimumLength = 10)]\n    public string Message { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#2-custom-validation","title":"2. Custom Validation","text":"<pre><code>public class FutureDate : ValidationAttribute\n{\n    protected override ValidationResult IsValid(object value, ValidationContext validationContext)\n    {\n        if (value is DateTime date &amp;&amp; date &lt;= DateTime.Now)\n        {\n            return new ValidationResult(\"Data trebuie s\u0103 fie \u00een viitor\");\n        }\n\n        return ValidationResult.Success;\n    }\n}\n\npublic class Appointment : BaseEntity\n{\n    [FutureDate]\n    public DateTime ScheduledDate { get; set; }\n}\n</code></pre>"},{"location":"fod/suport/entity-framework/modele/#best-practices","title":"Best Practices","text":""},{"location":"fod/suport/entity-framework/modele/#1-naming-conventions","title":"1. Naming Conventions","text":"<ul> <li>Folosi\u021bi PascalCase pentru numele claselor \u0219i propriet\u0103\u021bilor</li> <li>Folosi\u021bi substantive la singular pentru entit\u0103\u021bi</li> <li>Folosi\u021bi substantive la plural pentru colec\u021bii</li> <li>Prefixa\u021bi cu \"I\" pentru interfe\u021be</li> </ul>"},{"location":"fod/suport/entity-framework/modele/#2-navigation-properties","title":"2. Navigation Properties","text":"<ul> <li>Marca\u021bi \u00eentotdeauna ca <code>virtual</code> pentru lazy loading</li> <li>Ini\u021bializa\u021bi colec\u021biile \u00een constructor</li> <li>Folosi\u021bi <code>ICollection&lt;T&gt;</code> pentru colec\u021bii</li> </ul>"},{"location":"fod/suport/entity-framework/modele/#3-performance","title":"3. Performance","text":"<ul> <li>Evita\u021bi propriet\u0103\u021bile calculate complexe</li> <li>Folosi\u021bi indexuri pentru c\u00e2mpurile frecvent interogate</li> <li>Considera\u021bi denormalizarea pentru query-uri complexe</li> </ul>"},{"location":"fod/suport/entity-framework/modele/#concluzie","title":"Concluzie","text":"<p>Modelele bine structurate sunt fundamentul unei aplica\u021bii robuste. Urm\u00e2nd aceste conven\u021bii \u0219i pattern-uri, ve\u021bi crea o baz\u0103 de cod consistent\u0103 \u0219i u\u0219or de \u00eentre\u021binut.</p>"},{"location":"fod/suport/pdf-generator/","title":"Generator PDF","text":"<p>Aceast\u0103 pagin\u0103 con\u021bine documenta\u021bia pentru generatorul PDF.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/pdf-generator/#prezentare-generala","title":"Prezentare general\u0103","text":"<p>Modulul PDF Generator permite generarea documentelor PDF din diverse surse.</p>"},{"location":"fod/suport/pdf-generator/#sectiuni","title":"Sec\u021biuni","text":"<ul> <li>Generare</li> <li>Templates</li> </ul>"},{"location":"fod/suport/pdf-generator/generare/","title":"Generare PDF","text":"<p>Aceast\u0103 pagin\u0103 descrie procesul de generare PDF.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/pdf-generator/generare/#optiuni-de-generare","title":"Op\u021biuni de generare","text":""},{"location":"fod/suport/pdf-generator/generare/#api","title":"API","text":""},{"location":"fod/suport/pdf-generator/generare/#exemple","title":"Exemple","text":""},{"location":"fod/suport/pdf-generator/templates/","title":"Template-uri PDF","text":"<p>Aceast\u0103 pagin\u0103 descrie crearea template-urilor pentru PDF.</p> <p>Not\u0103: Documenta\u021bia complet\u0103 va fi disponibil\u0103 \u00een cur\u00e2nd.</p>"},{"location":"fod/suport/pdf-generator/templates/#format-template","title":"Format template","text":""},{"location":"fod/suport/pdf-generator/templates/#variabile","title":"Variabile","text":""},{"location":"fod/suport/pdf-generator/templates/#stilizare","title":"Stilizare","text":""},{"location":"mservices/","title":"Produse M","text":"<p>Despre produsele M*</p>"},{"location":"mservices/mconnect_events/","title":"Introduction","text":"<p>Data exchange in any Government is a complex endeavor across various levels of effort, including legal, semantic, organizational and technical. In Moldova, the technical level of data exchange is facilitated by MConnect \u2013 a national data exchange platform. There are many well-known patterns to implement various data exchange scenarios, including classical request/response messaging, events distribution, large documents distribution and data streaming.</p> <p>As part of MConnect platform, MConnect Events is the component designed specifically for efficient production and consumption of events. This includes client authentication and authorization as producers and consumers, scalable production and consumption of events, event structure validation when produced, scalable and flexible storage of events awaiting consumption, immediate availability of events to consumers, confirmation of event consumption to ensure reliable delivery of events, as well as internal instruments for configuration, monitoring and troubleshooting.</p> <p> </p> <p>MConnect Events enables systems to exchange data about various events in real-time as well as in a disconnected way. Events are flowing from producers to MConnect Events then to consumers in their supported pace, whenever they are available. This lowers the coupling between producers and consumers, decreasing their availability and performance requirements.</p> <p>This document describes the technical interfaces exposed by MConnect Events for client information systems enabling them to produce and consume events. Its target audience is the development teams for those information systems.</p> <p>The document contains the relevant information required for a complete understanding of MConnect Events from the integration point of view. It contains integration-related technical details, security considerations, as well as describing the integration testing.</p> <p>Although the document is meant to be technology agnostic, it is also documenting the integration library built for .NET to simplify and speed-up integrations with .NET clients.</p>"},{"location":"mservices/mconnect_events/#scope-and-target-audience","title":"Scope and target audience","text":"<p>This document describes the technical interfaces exposed by MConnect Events for client information systems that are using it to produce and consume events. Its target audience is the development teams for those information systems.</p>"},{"location":"mservices/mconnect_events/#notations","title":"Notations","text":"<p>This document contains several notation styles; the following details the styles that have a degree of significance beyond the purpose of communicating information: Yellow Highlighted Text \u2013 Text that is highlighted in yellow irrespective of font attributes (font type, italics, bold, underlined, etc.) means that the text is waiting clarification or verification. Red Bold Text \u2013 Text that is red in color and bold, defines an important piece of information that must be read. Italic Bold Text \u2013 Text that is bold and italic detail actual information or scripts that need to be executed, created, and copied from or to. Strikethrough Text \u2013 Text which is outdated and should be ignored</p>"},{"location":"mservices/mconnect_events/#glossary-of-terms","title":"Glossary of terms","text":"Term Definition API Application Programming Interface CONNECT A standard HTTP request method GET A standard HTTP request method HTTP Hypertext Transfer Protocol IDNO Legal entity unique identifier IDNP Natural person unique identifier JSON JavaScript Object Notation, a format for storing and transporting data POST A standard HTTP request method REST Representational State Transfer, a software architectural style that defines a set of methods to build web APIs TLS Transport Layer Security URI Uniform Resource Identifier URN Uniform Resource Name WS WebSocket, a simultaneous two-way communication protocol working over HTTP WSS WebSocket Secure, extension of WS that uses encryption for communication based on TLS"},{"location":"mservices/mconnect_events/#general-system-capabilities","title":"General system capabilities","text":"<p>MConnect Events is a platform-level service, a component of MConnect, the National Interoperability Platform, that allows information systems to efficiently produce and consume events in near real-time.</p> <p>Our performance tests showed a steady throughput of 10K events/second involving several producers and consumers in parallel. You can produce and consume events from multiple instances of your app using the same client certificate. Additionally, a consumer can repeatedly consume the available events by specifying a different consumer group (instead of using the default one).</p> <p>MConnect Events authorizes producers and routes events according to each event type. It is possible to authorize multiple producers to produce events of the same event type and configure routing to enable multiple consumers to consume events of the same type. Producer authorization also includes validating each event structure using JSON schema defined for each event type.</p> <p>Producers can produce a single event or a batch of events. It is important to mention that if one event is wrong, e.g. having unauthorized event type for this producer or invalid structure according to the configured schema, the whole batch is rejected.</p> <p>In cases that require ordered consumption of events related to a particular real-life entity (such as a person, transaction, etc.), producers must specify a partition key according to CloudEvents partitioning extension.</p> <p>By default, MConnect Events stores produced events for up to 5 days (120 hours) enabling consumers to consume whenever they are available. To ensure high availability, events are stored in 3 replicas. These settings can be changed upon request when reasonable.</p> <p>To simplify consumer integration testing, the API allows consumers to produce test events for their own consumption.</p> <p>Consumers can report back events they are unable to consume (usually due to wrong structure) as dead events. They are stored in a special dead event storage for the consumer and might require further manual intervention.</p>"},{"location":"mservices/mconnect_events/#service-dependencies","title":"Service dependencies","text":"<p>MConnect Events is deployed in a highly available infrastructure and depends only on the availability of MPass API for client management. MPass API is also highly available, however, MConnect Events caches client settings for up to 30 minutes. This ensures high performance of connection opening except for the initial ones, thus decreasing this dependency.</p> <p>It is also important to note that, due to implementation technicalities, it is normal for consumers to start consuming events with a short delay (several seconds) after opening the consumer connection.</p>"},{"location":"mservices/mconnect_events/#protocols-and-standards","title":"Protocols and standards","text":"<p>MConnect Events exposes its APIs over HTTPS, supporting HTTP 1.1 and 2. The HTTPS endpoint uses TLS 1.2 and higher and requires authentication through client certificates (encoded in X.509 v3 format).</p> <p>MConnect Events clients use CloudEvents v1 to produce and consume events using JSON Event Format and HTTP Protocol Binding. Whenever required, producers can specify a partition key, as documented in CloudEvents partitioning extension, while consumers shall use WebSocket Protocol Binding for efficient consumption of events.</p> <p>The endpoints for producers and long-polling consumers are described in OpenAPI 3.0 format. However, for efficient consumers, the recommendation is to use the WebSocket endpoint, which is accessible via the standard HTTP 1.1 Protocol upgrade mechanism, or the standard HTTP 2 CONNECT method (see 8.3 in RFC 7540).</p> <p>When validating events during production against the configured schema the supported versions of JSON Schema are Draft 6, Draft 7, Draft 2019-09 and Draft 2020-12. The version is identified based on keywords used by the schema.</p>"},{"location":"mservices/mconnect_events/#limits","title":"Limits","text":"<p>According to CloudEvents standard, it is recommended that the published events be no larger than 64 KB. This not only ensures any intermediaries will forward the events but also makes the transmission of events efficient and allows broader distribution of events, while stressing the core meaning of events (i.e. messages that inform about something that happened and not a transport for any kind of data). CloudEvents producers SHOULD keep events compact by avoiding embedding large data items into event payloads and rather use the event payload to link to such data items.</p> <p>All HTTP requests sent to MConnect Events can have up to 1 MB in size. This means any HTTP message sent by the producer, an events batch or one single event, shall not be larger than 1 MB.</p> <p>By default, MConnect Events keeps unconsumed events up to 5 days (120 hours). This means that if a consumer is inactive for that time, it might miss events.</p> <p>By default, MConnect Events consumers in a group can be efficiently scaled in divisors of 12, e.g. 1, 2, 3, 4, 6 or 12 consumers.</p> <p>Should any of these limits not cover your practical scenarios, you can request their adjustments having a proper justification.</p>"},{"location":"mservices/mconnect_events/api_references/","title":"API Reference","text":""},{"location":"mservices/mconnect_events/api_references/#error-handling-rules","title":"Error handling rules","text":"<p>MConnect Events REST APIs can return the following status codes in case of errors:</p> HTTP Status Code Description 400 Bad Request Returned when something is wrong with your request. For example, the request does not include the client certificate or an intermediary, some header is missing, the format is not a valid JSON, etc.       For more details, review the content of the response. 401 Unauthorized Returned on any authorization error. Either the system is not registered as producer or consumer, has wrong authorization configuration, does not have the rights to publish events of the provided event type, or cannot use the indicated source, etc.For more details, review the content of the response. 404 Not Found  The request URL wrong or consumer instance is not found (expired or not on the provided bridge).       For more details, review the content of the response. 413 Content Too Large Returned when the entire HTTP request is larger than specified in Limits. 422 Unprocessable Entity Returned when the event payload is not valid against the configured event schema.       For more details, review the content of the response. 500 Internal Server Error Unexpected error. Contact the service owner and report the error. <p>Succes HTTP status codes</p> <p>On success, the returned status code is 200, 201, 202 or 204.</p>"},{"location":"mservices/mconnect_events/api_references/#producer-apis","title":"Producer APIs","text":"<p>Producers can produce events using one of the following APIs.</p> <p>Important! For production scenarios, is recommended to produce events in batches, using the last endpoint. See also Limits.</p>"},{"location":"mservices/mconnect_events/api_references/#produce-event-in-raw-form","title":"Produce event in raw form","text":"Endpoint POST /ce/produce/raw Description Produce a single event in raw form in the body of HTTP request.       Set the standard Content-Type header to one of the following:       <ul> <li>application/json \u2013 the payload is in JSON format (this is most probably the format you intend to use);</li> <li>application/octet-stream \u2013 the payload is binary (only for special cases);</li> <li>text/plain \u2013 the payload is plain text (only for special cases);</li> </ul> Request Parameters Location Parameter Type Description Header ce-specversion string* The version of the CloudEvents specification which the event uses. This enables the interpretation of the context. This MUST always be set to \u201d1.0\u201d. Header ce-source uri* Identifies the context in which an event happened. This MUST be set to the value (or one of the values) allowed in Producer configuration.       Producers MUST ensure that source + id is unique for each distinct event. Header ce-id string* Identifies the event.       Producers MUST ensure that source + id is unique for each distinct event. Header ce-type string* Contains a value describing the type of event related to the originating occurrence. This attribute is used for authorization, routing, observability, etc. Header ce-subject string* This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure. Optional. Header ce-time date-time Timestamp of when the occurrence happened. Cannot be set to a future time. Formatted according to RFC 3339. If the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer, however all producers for the same source MUST be consistent in this respect. In other words, either they all use the actual time of the occurrence, or they all use the same algorithm to determine the value used. Optional, defaults to current time. Header ce-partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. Response: 202 Accepted \u2013 returned when the event persisted successfully for all authorized consumers."},{"location":"mservices/mconnect_events/api_references/#produce-event-cloudevents-standard","title":"Produce event (CloudEvents standard)","text":"Endpoint POST /ce/produce/event Description Produce a single event according to CloudEvents standard, meaning the request body must be a valid JSON object. The standard HTTP Content-Type header must be set to application/cloudevents+json. Request Parameters Location Parameter Type Description Body specversion string* The version of the CloudEvents specification which the event uses. This enables the interpretation of the context. This must always be set to \u201d1.0\u201d. Body source uri* Identifies the context in which an event happened. This MUST be set to the value (or one of the values) allowed in Producer configuration.       Producers MUST ensure that source + id is unique for each distinct event. Body id string* Identifies the event.       Producers MUST ensure that source + id is unique for each distinct event. Body type string* Contains a value describing the type of event related to the originating occurrence. This attribute is used for authorization, routing, observability, etc. Body datacontenttype string Content type of data value. This attribute enables data to carry any type of content, whereby format and encoding might differ from that of the chosen event format. Optional, defaults to application/json.       Currently only JSON data is supported by MConnect Events for this endpoint. Body subject string This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure. Optional. Body time date-time Timestamp of when the occurrence happened. Cannot be set to a future time. Formatted according to RFC 3339. If the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer, however all producers for the same source MUST be consistent in this respect. In other words, either they all use the actual time of the occurrence, or they all use the same algorithm to determine the value used. Optional, defaults to current time. Body partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. Body data JSON* The payload of the event in JSON format. Response: 202 Accepted \u2013 returned when the event(s) persisted successfully for all authorized consumers."},{"location":"mservices/mconnect_events/api_references/#produce-a-batch-of-events-cloudevents-standard","title":"Produce a batch of events (CloudEvents standard)","text":"Endpoint POST /ce/produce/events Description Produce a batch of events according to CloudEvents standard, meaning the request body must be a valid JSON array of JSON objects. The standard HTTP Content-Type header must be set to application/cloudevents-batch+json.        Each element of the array has the structure described in the previous endpoint.       This is the recommended way to produce events if you implement the outbox pattern (which is also recommended), in which case you accumulate of list of events to be produced anyway.        MConnect Events persists either all events to one or more destination consumers or none, in a transactional manner. This means that it is safe for a Producer to retry producing the batch of events on errors."},{"location":"mservices/mconnect_events/api_references/#consumer-apis-using-websocket","title":"Consumer APIs using WebSocket","text":"<p>There are two protocols for event consumption. WebSocket is the recommended one for efficiency and performance reasons.</p> <p>The WebSocket endpoint is accessible via the standard HTTP 1.1 Protocol upgrade mechanism and the standard HTTP 2 CONNECT method.</p> <p>The WebSocket sub-protocol to be used is: cloudevents.json</p> <p>The established WebSocket connection is a simultaneous two-way communication channel. The protocol is quite simple.</p>"},{"location":"mservices/mconnect_events/api_references/#messages-sent-to-consumer","title":"Messages sent to Consumer","text":"<p>MConnect Events is streaming the events to be consumed to the client as separate messages in JSON format, looking like the following.</p> Message_1Message_2Message_N <pre><code>{\n  \"specversion\": \"1.0\",\n  \"source\": \"urn:source\",\n  \"id\": \"sample-id-1001\",\n  \"type\": \"Organization.Event.Occurred\",\n  \"time\": \"2025...\",\n  \"offset\": \"1\",\n  \"data\": { json-object-defined-as-current-type }\n}\n</code></pre> <pre><code>{\n  \"specversion\": \"1.0\",\n  \"source\": \"urn:source\",\n  \"id\": \"sample-id-1002\",\n  \"type\": \"Organization.Event.Occurred\",\n  \"time\": \"2025...\",\n  \"offset\": \"2\",\n  \"data\": { json-object-defined-as-current-type }\n}\n</code></pre> <pre><code>{\n  \"specversion\": \"1.0\",\n  \"source\": \"urn:source\",\n  \"id\": \"sample-id-N\",\n  \"type\": \"Organization.Event.Occurred\",\n  \"time\": \"2025...\",\n  \"offset\": \"N\",\n  \"data\": { json-object-defined-as-current-type }\n}\n</code></pre> <p>The meaning of the properties is the following:</p> Property Type Description specversion string* The version of the CloudEvents specification which the event uses, currently always returned as \u201d1.0\u201d. source uri* Identifies the context in which an event happened.       Producers MUST ensure that source + id is unique for each distinct event. id string* Identifies the event.       Producers MUST ensure that source + id is unique for each distinct event. type string* Contains a value describing the type of event related to the originating occurrence. subject string This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure. Optional. time date-time* Timestamp of when the event happened or when the event was produced. Formatted according to RFC 3339. partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. offset string* Event offset for current consumer instance. Used for explicit confirmations. data JSON* The payload of the event in JSON format."},{"location":"mservices/mconnect_events/api_references/#messages-sent-to-mconnect-events","title":"Messages sent to MConnect Events","text":"<p>The client streams back consumption confirmations or dead events.</p> consumption confirmationreport dead event <pre><code>confirm:&lt;&lt;offset&gt;&gt;\n</code></pre> <pre><code>{\n    \"specversion\": \"1.0\",\n    \"source\": \"urn:source\",\n    \"id\": \"sample-id-1002\",\n    \"type\": \"Organization.Event.Occurred\",\n    \"time\": \"2025...\",\n    \"offset\": \"2\",\n    \"data\": { json-object-defined-as-current-type }\n}\n</code></pre> <ul> <li>consumption confirmation - meaning \u201cconfirm:\u201d prefix followed by offset, where offset is string (an always increasing integer formatted as string) found from the incoming event. This results in all events up to the specified offset acknowledged as consumed.</li> <li>report dead event - meaning \u201cdead:\u201d prefix followed by the dead event JSON, which the consumer might modify if required for later special handling of dead events.</li> </ul> <p>Any other message prefix will result in MConnect Events closing the WebSocket connection.</p>"},{"location":"mservices/mconnect_events/api_references/#consumer-apis-using-long-polling","title":"Consumer APIs using long polling","text":"<p>There are two protocols for event consumption. WebSocket is the recommended one. However, if you use a framework that doesn\u2019t include a WebSocket client (which is highly doubtful) or if you just want to try event consumption using Swagger UI (or some local HTTP client tool), MConnect Events also implements the well-known long polling protocol.</p> <p>Long polling requires creating a consumer, polling for events to consume (including sending consumption confirmations) and deleting consumers before closing. Consumers that are not actively polling for events are deleted automatically after some expiration time.</p>"},{"location":"mservices/mconnect_events/api_references/#creates-a-stateful-consumer-instance","title":"Creates a stateful consumer instance","text":"Endpoint POST /ce/consumers Description  Creates a stateful consumer instance on one of the bridges that can be used to consume events in a long polling manner. It is normal for this endpoint to take some time (usually up to 30 seconds), as creating consumers requires some internal coordination. Request Parameters Location Parameter Type Description Query events boolean Specifies whether to consume standard events produced by producers. Optional, defaults to true. Query test boolean Specifies whether to consume test events produced by the calling consumer for testing purposes (see Tool APIs). Optional, defaults to true. Query dead boolean Specifies whether to consume dead events produced by the calling consumer. Optional, defaults to false. Query group string Specifies consumer group name. Set by systems that need to consume the events twice in two subcomponents. Do not set this parameter when consuming events in parallel from multiple instances of the same consumer, meaning you don\u2019t need to consume the same events multiple times. Optional, defaults to \"~default\". Response: 201 Created Location Parameter Type Description Header Location uri* An absolute URL that is the consumer instance base address for the created consumer instance.       Currently it has the following form: https://{mconnect-events-baseaddress}/{bridge}/ce/consumers/{group}/instances/{instance}       having the following path parameters:       bridge \u2013 the instance of the bridge that the consumer was created on;       group \u2013 the name of group for the created consumer;       instance \u2013 consumer instance identifier.        Note that the form might be changed in the future, so you MUST use it just as the base address for the other calls related to this instance."},{"location":"mservices/mconnect_events/api_references/#consume-the-next-event-raw","title":"Consume the next event (raw)","text":"Endpoint GET /{bridge}/ce/consumers/{group}/instances/{instance}/raw Description Consume the next event as raw, if any. Event payload is returned in the HTTP body. Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Query confirm boolean Specifies whether to confirm previously consumed events. Optional, defaults to false. Response: 200 OK Location Parameter Type Description Header Content-Type string* The type of the event payload returned in the body. Can be:        <ul> <li>application/json \u2013 the payload is in JSON format (most used format);</li> <li>application/octet-stream \u2013 the payload is binary (only for special cases);</li> <li>text/plain \u2013 the payload is plain text (only for special cases);</li> </ul> Header ce-specversion string* The version of the CloudEvents specification which the event uses. This enables the interpretation of the context. Always set to \u201c1.0\u201d. Header ce-source uri* Identifies the context in which an event happened.       Producers MUST ensure that source + id is unique for each distinct event. Header ce-id string* Identifies the event.        Producers MUST ensure that source + id is unique for each distinct event. Header ce-type  string* Contains a value describing the type of event related to the originating occurrence. Header ce-subject string This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure.  Optional. Header ce-time  datetime* Timestamp of when the event happened or when the event was produced. Formatted according to RFC 3339. Header ce-partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. Header ce-offset string* Event offset for current consumer instance. Used for explicit confirmations. Response: 204 No Content \u2013 returned when there are no events to consume. Returned after poll timeout, during which no producers produced events for the calling consumer."},{"location":"mservices/mconnect_events/api_references/#consume-the-next-event-cloudevents-standard","title":"Consume the next event (CloudEvents standard)","text":"Endpoint GET /{bridge}/ce/consumers/{group}/instances/{instance}/event Description Consume the next event using CloudEvents JSON format. Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Query confirm boolean Specifies whether to confirm previously consumed events. Optional, defaults to false. Response: 200 OK Location Parameter Type Description Header Content-Type string* The type of the HTTP response content: application/cloudevents+json Body specversion string* The version of the CloudEvents specification which the event uses, currently always returned as \u201d1.0\u201d. Body source uri* Identifies the context in which an event happened.       Producers MUST ensure that source + id is unique for each distinct event. Body id string* Identifies the event.       Producers MUST ensure that source + id is unique for each distinct event. Body type  string* Contains a value describing the type of event related to the originating occurrence. Body subject string This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure. Optional. Body time  datetime* Timestamp of when the event happened or when the event was produced. Formatted according to RFC 3339. Body partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. Body offset string* Event offset for current consumer instance. Used for explicit confirmations. Body data JSON* The payload of the event in JSON format. Response: 204 No Content \u2013 returned when there are no events to consume. Returned after poll timeout, during which no producers produced events for the calling consumer."},{"location":"mservices/mconnect_events/api_references/#consume-the-next-batch-cloudevents-standard","title":"Consume the next batch (CloudEvents standard)","text":"Endpoint GET /{bridge}/ce/consumers/{group}/instances/{instance}/events Description Consume the next batch of events using CloudEvents JSON format. This method collects a batch of events before returning. Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Query confirm boolean Specifies whether to confirm previously consumed events. Optional, defaults to false. Response: 200 OK Location Parameter Type Description Header Content-Type string* The type of the HTTP response content: application/cloudevents+json Body N/A JSON array Each element of the array has the structure described in the previous endpoint. Response: 204 No Content \u2013 returned when there are no events to consume. Returned after poll timeout, during which no producers produced events for the calling consumer."},{"location":"mservices/mconnect_events/api_references/#confirm-consumption","title":"Confirm consumption","text":"Endpoint POST /{bridge}/ce/consumers/{group}/instances/{instance}/confirm Description Confirm the successful consumption of all read events or up to the specified offset. Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Query offset string Specifies the offset of the last event up to which the consumption of events is confirmed. Optional. When not set, all events read by this consumer instance are confirmed as consumed. Response: 204 No Content \u2013 returned upon successful confirmation."},{"location":"mservices/mconnect_events/api_references/#produce-a-dead-event","title":"Produce a dead event","text":"Endpoint POST /{bridge}/ce/consumers/{group}/instances/{instance}/dead Description Produce a dead event for the calling consumer in raw format.       Set the standard Content-Type header to one of the following:        <ul> <li>application/json \u2013 the payload is in JSON format (this is most probably the format you intend to use);</li> <li>application/octet-stream \u2013 the payload is binary (only for special cases);</li> <li>text/plain \u2013 the payload is plain text (only for special cases);</li> </ul> Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Header ce-specversion string* The version of the CloudEvents specification which the event uses. This enables the interpretation of the context. Always set to \u201c1.0\u201d. Header ce-source uri* Identifies the context in which an event happened. Header ce-id string* Identifies the event. Header ce-type  string* Contains a value describing the type of event related to the originating occurrence. Header ce-subject string This describes the subject of the event in the context of the event producer (identified by source). A consumer will typically consume events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has an internal sub-structure.  Optional. Header ce-time  datetime Timestamp of when the event happened or when the event was produced. Formatted according to RFC 3339. Header ce-partitionkey string A partition key for the event, specified to ensure consumption ordering between multiple events for the same partitionkey. Optional. Response: 202 Accepted \u2013 returned when the dead event persisted successfully."},{"location":"mservices/mconnect_events/api_references/#delete-consumer-instance","title":"Delete consumer instance","text":"Endpoint DELETE /{bridge}/ce/consumers/{group}/instances/{instance} Description Delete (i.e. close) consumer instance. Shall be called before the consumer is shut down. Calling this explicitly ensures efficient resources usage and faster reconnection of consumer. Request Parameters Location Parameter Type Description Path bridge string* The instance of the bridge that the consumer was created on.       Part of consumer instance base address. Path group string* The name of the consumer group.       Part of consumer instance base address. Path instance string* Consumer instance identifier.       Part of consumer instance base address. Response: 204 No Content \u2013 returned upon successful deletion of consumer instance."},{"location":"mservices/mconnect_events/api_references/#tool-apis","title":"Tool APIs","text":"<p>Using API tool</p> <p>Tool APIs are intended for human users (meaning developers) for additional information and testing.</p> <p>Do not call them from your systems.</p>"},{"location":"mservices/mconnect_events/api_references/#get-calling-client-settings","title":"Get calling client settings","text":"Endpoint GET /ce/tools/my-settings Description Returns the settings configured for the calling client. Response: 200 OK Location Parameter Type Description Body N/A JSON* Settings configured for the calling client, according to the internal format that might be changed at any time without prior notice. This is useful for developers to review the configuration for reference and to spot any potential issues."},{"location":"mservices/mconnect_events/api_references/#produce-a-test-event","title":"Produce a test event","text":"Endpoint POST /ce/tools/consumer/test Description Enables Consumer developers to produce a test event. Note that, in the case of first call to this endpoint, it is normal for the consumer that is already connected using WebSocket to consume test events after some time (up to 30 minutes), as consumer settings are cached.        The structure of the request, response and behavior is similar produce raw event endpoint (see above: POST /ce/produce/raw)."},{"location":"mservices/mconnect_events/change_log/","title":"Change Log","text":""},{"location":"mservices/mconnect_events/change_log/#date-april-15-2025","title":"Date: April 15, 2025","text":"<p>Version: 1.0</p> <p>Initial version</p>"},{"location":"mservices/mconnect_events/framework/","title":"Integration libraries","text":""},{"location":"mservices/mconnect_events/framework/#net-integration-library","title":".NET Integration library","text":"<p>For .NET clients, e-Government Agency developed an integration library, named Age.Integrations.MConnect.Events, available as a NuGet package either from the internal artifact Feeds or upon request.</p>"},{"location":"mservices/mconnect_events/framework/#configuring-system-certificate","title":"Configuring system certificate","text":"<p>To configure a producer or consumer, the client must first ensure the system certificate is added (as used for all platform-level services integration). The following code does that:</p> program.cs <pre><code>builder\n.Services\n.AddSystemCertificate(builder.Configuration.GetSection(\"Certificate\"));\n</code></pre> <p>The above code expects the following configuration section (in appsetting.json or from other configuration sources):</p> appsettings.json <pre><code>\"Certificate\": {\n    \"Path\": \"path to pfx file or mounted Kubernetes secret as folder\",\n    \"Password\": \"password for pfx file\"\n}\n</code></pre>"},{"location":"mservices/mconnect_events/framework/#producing-events","title":"Producing events","text":"<p>Then the client can configure a producer:</p> program.cs <pre><code>builder\n.Services\n.AddCloudEventsProducer(builder.Configuration.GetSection(\"CloudEventsProducer\"));\n</code></pre> <p>with the following configuration section:</p> appsettings.json <pre><code>\"CloudEventsProducer\": {\n    \"BaseAddress\": \"https://mconnect-events.staging.egov.md:8443/ce/\"\n}\n</code></pre> <p>Here is the comprehensive list of configuration keys for a producer:</p> <ul> <li>BaseAddress : The base address for MConnect Events endpoint. Must be explicitly set.</li> <li>Timeout : Timeout for produce calls. Defaults to 100 seconds.</li> <li>JsonSerializerOptions : Serializer options to use when serializing CloudEvent data to JSON.</li> </ul> <p>The resulting service, ICloudEventsProducer, available from .NET Core dependency injection container, includes several overloaded methods named ProduceAsync that allow producing single instances of CloudEvent or a list of them as a batch.</p> <p>CloudEvent.Id shall be unique for all events and CloudEvent.Source shall be set as a valid URN set in producer configuration.</p> <p>Important</p> <pre><code>Note that to ensure ordered consumption of events related to particular entity, set the CloudEvent.PartitionKey to the same value, such as entity identifier with a prefix (e.g. \"idno:1010600034203\").\n</code></pre>"},{"location":"mservices/mconnect_events/framework/#consuming-events","title":"Consuming events","text":"<p>To configure a consumer, call:</p> program.cs <pre><code>builder\n.Services\n.AddCloudEventHandlers(builder.Configuration.GetSection(\"CloudEventsConsumer\"))\n</code></pre> <p>with the following configuration section:</p> appsettings.json <pre><code>\"CloudEventsConsumer\": {\n    \"BaseAddress\": \"wss://mconnect-events.staging.egov.md:8443/ce/\"\n}\n</code></pre> <p>Here is the comprehensive list of configuration keys for a consumer:</p> <ul> <li>BaseAddress : The base address for MConnect Events web-socket endpoint. Must be explicitly set.</li> <li>ConnectTimeout : Timeout for connection opening. Defaults to 30 seconds.</li> <li>ReceiveBufferSize : Buffer size to receive data in bytes. Defaults to 64 * 1024 bytes (64 KB).</li> <li>ConsumeEvents : Specifies whether standard events must be consumed. Defaults to true.</li> <li>ConsumeTest : Specifies whether test events must be consumed. Defaults to true.</li> <li>ConsumeDead : Specifies whether dead events must be consumed. Defaults to false.</li> <li>Group : The group this consumer belongs to. Defaults to null, meaning a default consumer group. Set this only when you want to consume the same events in a different consumer group.</li> </ul> <p>Then fluently add one or more handlers, using either AddSingletonHandler&lt;THandler, TData&gt; or AddTransientHandler&lt;THandler, TData&gt; methods, where THandler implements IHandleCloudEvents&lt;TData&gt; interface, and TData is a strongly typed event data. You can also control the deserialization by providing an instance of JsonSerializerOptions to AddXXXHandler methods.</p> <p>Alternatively, if you need custom logic for event handler identification and data deserialization, you can add a generic implementation of ICloudEventsConsumer by calling AddCloudEventsConsumer&lt;TConsumer&gt;. That handler will receive all events that the consumer can consume.</p> <p>In both cases, the implementations of IHandleCloudEvents.HandleAsync and ICloudEventsConsumer.ConsumeAsync shall call ConfirmAsync on the provided context. In cases where the received event cannot be consumed, the consumers can call DeadAsync on the provided context, to report the event as dead. Dead events require manual intervention of MConnect Event administrators or the consumer calling with ConsumeDead set to true in configuration.</p>"},{"location":"mservices/mconnect_events/integration_development/","title":"Integration development","text":""},{"location":"mservices/mconnect_events/integration_development/#get-started","title":"Get started","text":""},{"location":"mservices/mconnect_events/integration_development/#consumer-registration-and-network-access","title":"Consumer registration and network access","text":"<p>MSign authenticates the clients by client certificate serial number. MSign service consumers must be registered in MSign before being able to call the API.</p> <p>MSign API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring routes and/or a VPN between the consumer and MSign.</p> <p>To register your consumer and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and the certificate serial number in your request.</p> <p>Obtaining credentials</p> <p>MSign accepts client certificates generated by Certification Authority of the Center of Special Telecommunications (https://pki.cts.md), by requesting a certificate for authentication.</p>"},{"location":"mservices/mconnect_events/integration_development/#obtaining-technical-contract","title":"Obtaining technical contract","text":"<p>The WSDL contract can be obtained from the following URL (base addresses are listed in System environments): /MSign.svc?singleWsdl</p> <p>(ToDo: load a WSDL/sample from current site)Note that accessing the contract requires valid credentials. An offline copy of the WSDL can be found in .NET Sample.</p>"},{"location":"mservices/mconnect_events/integration_development/#system-environments","title":"System environments","text":"<p>There are 2 services environments available: a testing and a production environment.</p> Environment MSign service URL Testing https://msign.staging.egov.md:8443/MSign.svc Production https://msign.gov.md:8443/MSign.svc <p>Important</p> <p>It is mandatory to develop the integrations and perform tests with the testing environment</p>"},{"location":"mservices/mconnect_events/integration_development/#integration-testing","title":"Integration testing","text":"<p>Test cases</p> <p>Here are some basic test cases that could be added to the test suite that integrates with MSign.</p>"},{"location":"mservices/mconnect_events/integration_development/#case-1","title":"Case #1","text":"Test Case ID TC_FUNCT_01 Description Verify the successful integration of the e-Service and MSign Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select the first signing instrument and enter the data related to the selected instrument. Submit data. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail 3 Repeat previous step (Step2) for each available signing instrument. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#case-2","title":"Case #2","text":"Test Case ID TC_FUNCT_02 Description Verify failed signing by cancelling the signature process Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select a signing instrument that asks for a PIN or confirmation while signing (such as Mobile Signature) and cancel the signing MSign displays that signature failed with a meaningful reason. Pass / Fail 3 Review the MSign message and click OK to continue The browser re-displays the e-Services page that clearly shows that the signature failed.       Note that calling GetSignResponse for this request will return a response with SignStatus = Failure Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#case-3","title":"Case #3","text":"Test Case ID TC_FUNCT_03 Description Check sign request re-sending Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Go back to the e-Service page and click Sign button again. The MSign sign page is displayed to the user. Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#case-4","title":"Case #4","text":"Test Case ID TC_FUNCT_04 Description Check correct error handling Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Use some invalid data (such as invalid ExpectedSigner.ID, invalid MSISDN) and click the Sign button. The e-Service displays some error message and does not redirect to MSign. Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#case-5","title":"Case #5","text":"Test Case ID TC_FUNCT_05 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible successful signature verification result. Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#case-6","title":"Case #6","text":"Test Case ID TC_FUNCT_06 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Modify the signed data, document or the actual signature (if possible) directly in the database or in the resulting binary files. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible failed signature verification result. Pass / Fail"},{"location":"mservices/mconnect_events/integration_development/#integrations-review-and-audit","title":"Integrations review and audit","text":"<p>There are no special requirements related to integration review.</p>"},{"location":"mservices/mconnect_events/interaction_scenarios/","title":"Interaction scenarios","text":"<p>MConnect Events integrates two types of clients: event producers and event consumers. A client information system can be configured to be either a producer, a consumer, or both.</p> <p>As defined by CloudEvents standard, all events have a type. In MConnect Events context, types are named using the following convention: \u201cOrganization.System.Entity.Action\u201d (for example \u201cAGE.MPass.User.Authenticated\u201d). A Producer is authorized to produce and a Consumer to consume only certain types of events</p>"},{"location":"mservices/mconnect_events/interaction_scenarios/#produce-events","title":"Produce events","text":"<p>A client system that is authorized as Producer can only produce events of authorized types. Produced events are authorized, validated against the configured schema and persisted in one or more places for consumption. MConnect Events then responds with HTTP 200 OK when all of these succeed, thus ensuring reliable messaging.</p> <p>A Producer can produce events one by one or in batches. Note that there are some general limits applied to the size of each event and the entire message (see Limits). MConnect Events persists either all events to one or more destination consumers or none, in a transactional manner. This means that it is safe for a Producer to retry producing events on errors. Nonetheless, taking into account that it is possible for the error to not get back due to networking or other kind of issues, retries might result in duplicate events produced. To minimize duplication, it is important to assign a unique id attribute for each event as specified by CloudEvents standard and use it including on retry.</p> <p>Business processes based on event exchange typically require that no event must be skipped, due either to business or technical errors. Thus, to ensure at least once delivery, it is recommended that producers implement the outbox pattern in their informational systems. This will ensure events will be sent or not according to transactional changes in their databases.</p> <p>A Producer can produce events in parallel, from multiple instances. MConnect Events is a scalable system and can handle a significant number of events.</p> <p>For performance reasons, MConnect Events does not by default guarantee ordered consumption of events, meaning that events that are close in time might be seen by consumers in a different order they were produced by producers. If ordered consumption is required for some entity (for example a person or document), Producer must set partition key to entity identifier according to CloudEvents standard partitioning extension (for example for a person set partitionkey to idnp:{idnp}).</p>"},{"location":"mservices/mconnect_events/interaction_scenarios/#consume-events","title":"Consume events","text":"<p>A client system that is authorized as Consumer can only consume events of authorized types. Consumers are actively polling for their events using either HTTP long polling technique or by implementing the efficient and strongly recommended WebSocket protocol defined in this document. In both cases, MConnect Events returns pending events for consumption, each of them having an associated offset restarted when consumer connects.</p> <p>To ensure reliable delivery of events in at-least-once manner, the Consumer must confirm successful consumption of events. Each consumed event includes an offset that is restarted at the beginning of consumer session. The consumer confirms the consumption of each event or, for efficiency, a batch of events by including the offset of the last successfully consumed event in the confirmation.</p> <p>For events that cannot be consumed due to business reasons (required field missing, invalid data, etc.), the Consumer can modify and report the event to MConnect Events as dead. Dead events are stored in a special place for manual review or for another instance of Consumer that explicitly consumes dead events. It is important to note that events shall not be considered dead for technical errors, for example due to Consumer network, database or some other component not being available.</p> <p>Technical errors, non-delivered confirmations and other potential issues might result in the same events being consumed by the Consumer. Thus, it is very important that the Consumer consumes all events in an idempotent manner. This means that, depending on the implemented business logic, the Consumer must distinguish initial consumption of event from repeated one, processed partially or completely, then finalize the processing and confirm the consumption similarly in all cases.</p> <p>A Consumer can consume events in parallel, from multiple instances.</p> <p>For systems that have multiple subcomponents that need to consume the same events, set the consumer group parameter to the name of the subcomponent. Test and dead events will be seen and consumed by all consumer instances, irrespective of any indicated consumer group.</p>"},{"location":"mservices/mconnect_events/sample/","title":"Samples","text":""},{"location":"mservices/mconnect_events/sample/#sample-of-invalidated-vehicle-event","title":"Sample of invalidated vehicle Event","text":"<p>Here is a sample CloudEvent in application/cloudevents+json format:</p> Cloud event <pre><code>{\n    \"specversion\": \"1.0\",\n    \"source\": \"urn:asp\",\n    \"id\": \"23fa9243-fe2b-4bdc-8607-ab56d091622b\",\n    \"type\": \"ASP.RST.VP.Invalidated\",\n    \"time\": \"2025-03-01T23:09:03.2261311Z\",\n    \"data\": {\n        \"IDNP\": \"2134567890123\",\n        \"Number\": \"123456789\"\n    }\n}\n</code></pre> <p>The event above represents the fact that VP (Vehicle Registration Certificate) with Number \u201c123456789\u201d was invalidated and the owner of the vehicle has \u201c2134567890123\u201d as IDNP. The schema for the above event is the following:</p> Event schema <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"IDNP\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\d{13}$\"\n        },\n        \"Number\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"IDNP\",\n        \"Number\"\n    ],\n    \"additionalProperties\": false\n}\n</code></pre>"},{"location":"mservices/mconnect_events/sample/#sample-of-person-born-event","title":"Sample of person born Event","text":"<p>Here is another CloudEvent example that is considered as personal data processing:</p> Cloud event <pre><code>{\n    \"specversion\": \"1.0\",\n    \"source\": \"urn:asp\",\n    \"id\": \"3dfce534-cdc9-44d5-ba39-690f69706589\",\n    \"type\": \"MS.eCMND.Person.Born\",\n    \"time\": \"2025-03-02T09:30:02+02:00\",\n    \"data\": {\n        \"ChildIDNP\": \"2134567890123\",\n        \"MotherIDNP\": \"2134567890122\",\n        \"HospitalID\": 37,\n        \"CaseID\": 10327,\n        \"EventReason\": \"Sincronizare date na\u0219tere 10327\"\n    }\n}\n</code></pre> <p>The event above represents the fact of birth and includes EventReason that can be used as legal reason for personal data processing. In this case, MConnect Events is configured to extract the legal reason from EventReason field (using \u201c$.EventReason\u201d as JSON path).</p> Event schema <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ChildIDNP\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\d{13}$\"\n        },\n        \"MotherIDNP\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\d{13}$\"\n        },\n        \"HospitalID\": {\n            \"type\": \"integer\"\n        },\n        \"CaseID\": {\n            \"type\": \"integer\"\n        },\n        \"EventReason\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"ChildIDNP\",\n        \"MotherIDNP\",\n        \"HospitalID\",\n        \"CaseID\",\n        \"EventReason\"\n    ],\n    \"additionalProperties\": false\n}\n</code></pre>"},{"location":"mservices/mnotify/","title":"Introduction","text":""},{"location":"mservices/mnotify/#scope-and-target-audience","title":"Scope and target audience","text":"<p>TThis document describes the technical interfaces exposed by MNotify for Senders\u2019 information systems that will use MNotify for notification purposes. The target audience are the development teams. </p>"},{"location":"mservices/mnotify/#notations","title":"Notations","text":"<p>This document contains several notation styles; the following details the styles that have a degree of significance beyond the purpose of communicating information: Yellow Highlighted Text \u2013 Text that is highlighted in yellow irrespective of font attributes (font type, italics, bold, underlined, etc.) means that the text is waiting clarification or verification. Red Bold Text \u2013 Text that is red in color and bold, defines an important piece of information that must be read. Italic Bold Text \u2013 Text that is bold and italic detail actual information or scripts that need to be executed, created, and copied from or to. Strikethrough Text \u2013 Text which is outdated and should be ignored</p>"},{"location":"mservices/mnotify/#glossary-of-terms","title":"Glossary of terms","text":"Term Definition Recipient The user who will receive the message. IDNP RM citizen personal identity number, containing 13 figures. Notification Notification request received from a Sender Message Final message ready for transmission, including the identified channel, recipient and content. Subject Message subject Body Message content Shortbody Short form of a message content, for notifications other than email and MCabinet. Priority the notification transmission priority (low, medium, high) set by the Sender.             Note! Notifications with Low and Medium priority will be transmitted depending on the Recipient\u2019s preferences per channel. In case of a High priority notification the messages will be transmitted immediately, ignoring the Recipients\u2019 priorities."},{"location":"mservices/mnotify/#general-system-capabilities","title":"General system capabilities","text":"<p>MNotify is a governmental electronic notification service designed to send messages to recipients, through different communication channels, in order to inform about events related to public services, or other relevant notices.</p>"},{"location":"mservices/mnotify/#delivery-channels","title":"Delivery channels","text":"<p>Currently MNotify supports e-mail, web push notifications and MCabinet as a delivery channel.  IDNP property is required when specifying a notification identity.</p>"},{"location":"mservices/mnotify/#service-dependencies","title":"Service dependencies","text":"<p>[service dependencies that might influence on service contract, availability, performance, security, etc. ]"},{"location":"mservices/mnotify/#protocols-and-standards","title":"Protocols and standards","text":"<p>MNotify exposes its APIs over HTTPS, supporting HTTP 1.1 and 2. The HTTPS endpoint uses TLS 1.2 and higher and requires authentication through client certificates (encoded in X.509 v3 format).</p>"},{"location":"mservices/mnotify/change_log/","title":"Change Log","text":""},{"location":"mservices/mnotify/change_log/#data-15-march-2021","title":"Data: 15 March 2021","text":"<p>Version: 2.2</p> <p>Adjusted version (in POST/api/Notification method \"userId\" should be ignored).</p>"},{"location":"mservices/mnotify/change_log/#data-28-september-2020","title":"Data: 28 September 2020","text":"<p>Version: 2.1</p> <p>Final version, adjusted according to added features.</p>"},{"location":"mservices/mnotify/change_log/#data-20-may-2020","title":"Data: 20 May 2020","text":"<p>Version: 2.0</p> <p>Initial version.</p>"},{"location":"mservices/mnotify/integration_development/","title":"Integration development","text":""},{"location":"mservices/mnotify/integration_development/#get-started","title":"Get started","text":""},{"location":"mservices/mnotify/integration_development/#consumer-registration-and-network-access","title":"Consumer registration and network access","text":"<p>MSign authenticates the clients by client certificate serial number. MSign service consumers must be registered in MSign before being able to call the API.</p> <p>MSign API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring routes and/or a VPN between the consumer and MSign.</p> <p>To register your consumer and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and the certificate serial number in your request.</p> <p>Obtaining credentials</p> <p>MSign accepts client certificates generated by Certification Authority of the Center of Special Telecommunications (https://pki.cts.md), by requesting a certificate for authentication.</p>"},{"location":"mservices/mnotify/integration_development/#obtaining-technical-contract","title":"Obtaining technical contract","text":"<p>The WSDL contract can be obtained from the following URL (base addresses are listed in System environments): /MSign.svc?singleWsdl</p> <p>(ToDo: load a WSDL/sample from current site)Note that accessing the contract requires valid credentials. An offline copy of the WSDL can be found in .NET Sample.</p>"},{"location":"mservices/mnotify/integration_development/#system-environments","title":"System environments","text":"<p>There are 2 services environments available: a testing and a production environment.</p> Environment MSign service URL Testing https://msign.staging.egov.md:8443/MSign.svc Production https://msign.gov.md:8443/MSign.svc <p>Important</p> <p>It is mandatory to develop the integrations and perform tests with the testing environment</p>"},{"location":"mservices/mnotify/integration_development/#integration-testing","title":"Integration testing","text":"<p>Test cases</p> <p>Here are some basic test cases that could be added to the test suite that integrates with MSign.</p>"},{"location":"mservices/mnotify/integration_development/#case-1","title":"Case #1","text":"Test Case ID TC_FUNCT_01 Description Verify the successful integration of the e-Service and MSign Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select the first signing instrument and enter the data related to the selected instrument. Submit data. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail 3 Repeat previous step (Step2) for each available signing instrument. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail"},{"location":"mservices/mnotify/integration_development/#case-2","title":"Case #2","text":"Test Case ID TC_FUNCT_02 Description Verify failed signing by cancelling the signature process Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select a signing instrument that asks for a PIN or confirmation while signing (such as Mobile Signature) and cancel the signing MSign displays that signature failed with a meaningful reason. Pass / Fail 3 Review the MSign message and click OK to continue The browser re-displays the e-Services page that clearly shows that the signature failed.       Note that calling GetSignResponse for this request will return a response with SignStatus = Failure Pass / Fail"},{"location":"mservices/mnotify/integration_development/#case-3","title":"Case #3","text":"Test Case ID TC_FUNCT_03 Description Check sign request re-sending Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Go back to the e-Service page and click Sign button again. The MSign sign page is displayed to the user. Pass / Fail"},{"location":"mservices/mnotify/integration_development/#case-4","title":"Case #4","text":"Test Case ID TC_FUNCT_04 Description Check correct error handling Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Use some invalid data (such as invalid ExpectedSigner.ID, invalid MSISDN) and click the Sign button. The e-Service displays some error message and does not redirect to MSign. Pass / Fail"},{"location":"mservices/mnotify/integration_development/#case-5","title":"Case #5","text":"Test Case ID TC_FUNCT_05 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible successful signature verification result. Pass / Fail"},{"location":"mservices/mnotify/integration_development/#case-6","title":"Case #6","text":"Test Case ID TC_FUNCT_06 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Modify the signed data, document or the actual signature (if possible) directly in the database or in the resulting binary files. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible failed signature verification result. Pass / Fail"},{"location":"mservices/mnotify/integration_development/#integrations-review-and-audit","title":"Integrations review and audit","text":"<p>There are no special requirements related to integration review.</p>"},{"location":"mservices/mnotify/interaction_scenarios/","title":"Interaction scenarios","text":""},{"location":"mservices/mnotify/interaction_scenarios/#user-authentication","title":"User Authentication","text":""},{"location":"mservices/mnotify/interaction_scenarios/#server-authentication","title":"Server Authentication","text":""},{"location":"mservices/mnotify/interaction_scenarios/#mnotify-architecture","title":"MNotify Architecture","text":""},{"location":"mservices/mnotify/interaction_scenarios/#scheduler-worker","title":"Scheduler Worker","text":""},{"location":"mservices/mnotify/interaction_scenarios/#results-worker","title":"Results Worker","text":""},{"location":"mservices/mpass/","title":"Introduction","text":"<p>MPass is a reusable governmental shared platform-level service the main scope of which is to offer secure authentication using a variety of authentication methods and provide information for further authorization decisions by the integrating systems. MPass enables a secure government-wide single sign-on (SSO) as well as single logout (SLO) for residents of Republic of Moldova, so that they don\u2019t have to remember multiple credentials for different services and not requiring them to visit or register in some other way directly with the service provider.</p> <p>This document describes the technical interfaces exposed by MPass for information systems that will use MPass as authentication and authorization information provider. Its target audience is the development teams for those information systems.</p> <p>The document contains the relevant information required for a complete understanding of MPass from the integration point of view. It contains integration-related technical details, security considerations, as well as describing the process of testing integration security.</p> <p>This document is also accompanied by a .NET sample that exemplify the main interaction scenarios, i.e. performing SSO and SLO.</p>"},{"location":"mservices/mpass/#scope-and-target-audience","title":"Scope and target audience","text":"<p>This document describes the technical interfaces exposed by MPass for information systems that will use MPass as authentication and authorization information provider. Its target audience is the development teams for those information systems.</p> <p>The details related to various authentication methods, such as using authorized client certificates, mobile signature, username/password, etc. provided by MPass are out of scope of this document.</p>"},{"location":"mservices/mpass/#notations","title":"Notations","text":"<p>This document contains several notation styles; the following details the styles that have a degree of significance beyond the purpose of communicating information: Yellow Highlighted Text \u2013 Text that is highlighted in yellow irrespective of font attributes (font type, italics, bold, underlined, etc.) means that the text is waiting clarification or verification. Red Bold Text \u2013 Text that is red in color and bold, defines an important piece of information that must be read. Italic Bold Text \u2013 Text that is bold and italic detail actual information or scripts that need to be executed, created, and copied from or to. Strikethrough Text \u2013 Text which is outdated and should be ignored</p>"},{"location":"mservices/mpass/#glossary-of-terms","title":"Glossary of terms","text":"Term Definition GET A standard HTTP request method IDNP Personal identifier number (unique in Republic of Moldova) IDNO Organization identifier number (unique in Republic of Moldova) POST A standard HTTP request method SAML Secure Assertion Markup Language SLO Single logout SSO Single sign-on"},{"location":"mservices/mpass/#general-system-capabilities","title":"General system capabilities","text":"<p>MPass is a reusable governmental shared platform-level service the main scope of which is to offer secure authentication using a variety of authentication methods and provide information for further authorization decisions by the integrating systems. MPass enables a secure government-wide single sign-on (SSO) as well as single logout (SLO) for residents of Republic of Moldova, so that they don\u2019t have to remember multiple credentials for different services and not requiring them to visit or register in some other way directly with the service provider.</p> <p>MPass is used as intermediary between various information systems and various authentication methods. Authentication methods differ significantly from the integration point of view, exposing various APIs that might involve direct user interaction through the browser to enter some additional data and/or access user\u2019s cryptographic device or interact with cryptographic devices that are not directly connected to user\u2019s PC. MPass integrates with these identity and authentication providers, hides the differences and exposes a single unified and secure interface to information systems that require authentication functionality.</p> <p>Depending on requesting information system, MPass will provide various attributes about the authenticated user identity. These attributes might come from user certificate used for authentication, user\u2019s profile in MPass or external authentic systems. Using the provided identity attribute values, integrating systems can further perform authorization decisions inside their session established for the authenticated identity.</p> <p>For actual authentication, MPass exposes web pages that guide the user through authentication method, method specific data input, authentication progress and result pages.</p>"},{"location":"mservices/mpass/#service-dependencies","title":"Service dependencies","text":"<p>MPass depends on the digital identity providers, so its availability and performance is directly influenced by the availability and performance of the services delivered by the providers.</p>"},{"location":"mservices/mpass/#protocols-and-standards","title":"Protocols and standards","text":"<p>MPass is using SAML v2.0 standard protocol and format for authentications. The following table contains a comprehensive list of references to standard specifications.</p> SAML v2 Specification Abstract SAML Core This specification defines the syntax and semantics for XML-encoded assertions about authentication, attributes, and authorization, and for the protocols that convey this information.             Read the official documentation of SAML Core SAML Bindings This specification defines protocol bindings for the use of SAML assertions and request-response messages in communications protocols and frameworks.             Read the official documentation of SAML Bindings SAML Profiles This specification defines profiles for the use of SAML assertions and request-response messages in communications protocols and frameworks, as well as profiles for SAML attribute value syntax and naming conventions.             Read the official documentation of SAML Profiles SAML Authn Context This specification defines a syntax for the definition of authentication context declarations and an initial list of authentication context classes for use with SAML.             Read the official documentation of SAML Authn Context SAML Metadata This specification defines profiles for the dynamic exchange of SAML metadata among system entities regarding identifiers, binding support and endpoints, certificates and keys, and so forth.             Read the official documentation of SAML Metadata SAML Security Considerations This non-normative specification describes and analyzes the security and privacy properties of SAML.             Read the official documentation of SAML Security Considerations SAML 2.0 Errata This document lists approved errata to the SAML V2.0 OASIS Standard.             Read the official documentation of SAML Security Considerations"},{"location":"mservices/mpass/change_log/","title":"Change Log","text":""},{"location":"mservices/mpass/change_log/#date-july-16-2020","title":"Date: July 16, 2020","text":"<p>Version: 1.5</p> <p>Added AdministeredLegalEntity attribute. Updated service owner contacts. Changed staging environment address.</p>"},{"location":"mservices/mpass/change_log/#date-november-12-2018","title":"Date: November 12, 2018","text":"<p>Version: 1.4</p> <p>Added X-Frame-Options recommendation when processing LogoutRequest.</p>"},{"location":"mservices/mpass/change_log/#date-december-2-2016","title":"Date: December 2, 2016","text":"<p>Version: 1.3</p> <p>Removed OfficialAddress and CurrentAddress attributes as they are not structured and not authentic. Removed NotificationChannel attribute as it is not useable.</p>"},{"location":"mservices/mpass/change_log/#date-february-17-2016","title":"Date: February 17, 2016","text":"<p>Version: 1.2</p> <p>Changed IsCitizen attribute to IsResident, as IDNPs are applicable to residents</p>"},{"location":"mservices/mpass/change_log/#date-june-3-2015","title":"Date: June 3, 2015","text":"<p>Version: 1.1</p> <p>Documented support for SAML Metadata and HTTP Redirect binding</p>"},{"location":"mservices/mpass/change_log/#date-may-1-2015","title":"Date: May 1, 2015","text":"<p>Version: 1.0</p> <p>Final version ready for distribution</p>"},{"location":"mservices/mpass/integration_development/","title":"Integration development","text":"<p>This chapter describes the process of developing an integration.</p>"},{"location":"mservices/mpass/integration_development/#get-started","title":"Get started","text":""},{"location":"mservices/mpass/integration_development/#service-registration","title":"Service registration","text":"<p>Before being able to interact with MPass, a Service must be registered accordingly in MPass. To perform such a registration, please generate a self-signed or provide any existing certificate file (in .cer file format) to Service owner.</p> <p>For security reasons, Service test and production environments MUST use a different certificate and corresponding private keys MUST be kept as confidential as possible. MPass does not require access to Service private keys for integration</p>"},{"location":"mservices/mpass/integration_development/#network-access","title":"Network access","text":"<p>Because MPass interface is exposed to public, there is no need for special network configuration or access control list modifications. A developer can integrate with MPass using its local development machine and use a localhost address for AssertionConsumerServiceURL in AuthnRequest.</p> <p>Atention</p> <p>For security reasons, a localhost address is not accepted in MPass production environment.</p>"},{"location":"mservices/mpass/integration_development/#authentication-methods","title":"Authentication methods","text":"<p>MPass provides several authentication methods. All strong authentication methods require a strong authentication instrument, which means that the private key of the person that authenticates is generated and held on special devices. It is in the integrator responsibility to obtain such a secure device from available providers.</p> <p>Weak authentication methods (such as username/password) are discouraged and usually not enabled for any systems in production environment.</p>"},{"location":"mservices/mpass/integration_development/#system-environments","title":"System environments","text":"<p>There are 2 services environments available: a testing and a production environment.</p> Environment SSO URL SLO URL Testing https://mpass.staging.egov.md/login/saml https://mpass.staging.egov.md/logout/saml Production https://mpass.gov.md/login/saml https://mpass.gov.md/logout/saml <p>Integrations MUST be developed and tested within the testing environment only. To ensure high availability, no performance, security or any other kind of tests are allowed on production environment.</p>"},{"location":"mservices/mpass/integration_development/#saml-metadata","title":"SAML Metadata","text":"<p>MPass exposes SAML metadata, conformant with SAML Metadata specification at the following URL:</p> Environment Metadata Index SAML Metadata URL Testing https://mpass.staging.egov.md/meta https://mpass.staging.egov.md/meta/saml Production https://mpass.gov.md/meta https://mpass.gov.md/meta/saml <p>The index page also includes links to MPass certificate used to sign SAML messages as Identity Provider.</p>"},{"location":"mservices/mpass/integration_development/#returned-attributes","title":"Returned attributes","text":"<p>After a successful authentication and user consent (if required), MPass generates and returns a SAML Response with authenticated identity attributes. The list of the returned attributes is configurable as part of Service registration.</p> <p>The following table contains the list of standard attributes.</p> Attribute Name Type Description NameIdentifier string (128) Username or IDNP. This is a special attribute and it should be returned as NameID (i.e. SubjectAttribute) in SAML. IsResident Boolean Specifies whether the user is verified to be a resident of Republic of Moldova. FirstName string (64) User\u2019s first name or given name. LastName string (64) User\u2019s last name or surname. BirthDate string (10) User\u2019s birth date in \u201cyyyy-MM-dd\u201d format (e.g. \u201c1990-12-31\u201d). Gender integer User\u2019s gender. Allowed values:         <ul> 0 \u2013 Unspecified 1 \u2013 Male 2 \u2013 Female </ul> EmailAddress string (64) User\u2019s e-mail address. MobilePhone string (16) User\u2019s mobile phone number. HomePhone string (16) User\u2019s home phone number. Language string (2) User\u2019s preferred language. Allowed values: \u201cro\u201d, \u201cru\u201d, \u201cen\u201d. AdministeredLegalEntity string (512) The name and identifier of the companies (zero or more) the user is administering in the following format:         \u201cLegal Entity Name IDNO\u201d         Notice that the IDNO is after the last space of the name.        IDNO string (13) User\u2019s organization identifier. This attribute is only available if the authentication was performed using an instrument which includes this value in the certificate. CompanyName string (128) User\u2019s organization or company name. This attribute is only available if the authentication was performed using an instrument which includes this value in the certificate. <p>A Service can have custom attributes created (usually used for authorization purpose, such as Role, Permissions, etc.), assigned to identities and returned as part of the same SAML Response with values corresponding to the authenticated identity.</p> <p>Please identify the set of required attributes (including custom attribute names and values) to be returned by MPass during the design phase of the Service and specify them as part of Service registration.</p>"},{"location":"mservices/mpass/integration_development/#integration-functionality-testing","title":"Integration: functionality testing","text":"<p>Functionality test cases</p> <p>Here are some basic funtionality test cases that could be added to the test suite of the systems that integrates with MPass.</p>"},{"location":"mservices/mpass/integration_development/#case-1","title":"Case #1","text":"Test Case ID TC_FUNCT_01 Description Service initiated authentication Initial Conditions User not authenticated into the Service and MPass Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass, no errors shown Pass / Fail 2 Authenticate in MPass Browser redirected back to the Service as logged in Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-2","title":"Case #2","text":"Test Case ID TC_FUNCT_02 Description Single sign-on through MPass Initial Conditions User not authenticated in the Service         User authenticated directly in MPass Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back (with or without authentication consent) to the Service as logged in, no errors shown Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-3","title":"Case #3","text":"Test Case ID TC_FUNCT_03 Description Aborted authentication Initial Conditions User not authenticated into the Service and MPass Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass for authentication Pass / Fail 2 Cancel the authentication in MPass Browser redirected back to the Service without authentication and no errors are shown by the Service Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-4","title":"Case #4","text":"Test Case ID TC_FUNCT_04 Description Service initiated logout Initial Conditions User authenticated into Service via MPass Step Task Expected Result Actual Result 1 Access the \u201cLogout\u201d button/link of the Service Browser redirected to MPass and redirected back (with or without authentication consent) to the Service as logged out, no errors shown Pass / Fail 2 Access any Service protected resource Access to resource is denied and/or user is redirected to MPass for authentication Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-5","title":"Case #5","text":"Test Case ID TC_FUNCT_05 Description MPass initiated logout (i.e. single logout) Initial Conditions User authenticated into Service via MPass Step Task Expected Result Actual Result 1 Access the \u201cLogout\u201d link in MPass After performing single sign-out, MPass shows that the user is not authenticated Pass / Fail 2 Access any Service protected resource Access to resource is denied and/or user is redirected to MPass for authentication Pass / Fail"},{"location":"mservices/mpass/integration_development/#integration-security-testing","title":"Integration: security testing","text":"<p>Security test cases</p> <p>Here are some basic security test cases that could be added to the test suite of the systems that integrates with MPass.</p>"},{"location":"mservices/mpass/integration_development/#case-1_1","title":"Case #1","text":"Test Case ID TC_SEC_01 Description Check SAML Response signature validation Initial Conditions User not authenticated into Service, but authenticated in MPass       Only the following option is checked in SAML Advanced Options: \u201cDo not sign SAML Response\u201d Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response is not signed Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-2_1","title":"Case #2","text":"Test Case ID TC_SEC_02 Description Check SAML Response signature validation certificate Initial Conditions User not authenticated into Service, but authenticated in MPass       Only the following option is checked in SAML Advanced Options: \u201cUse compatible certificate for signing\u201d Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response is signed with invalid certificate Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-3_1","title":"Case #3","text":"Test Case ID TC_SEC_03 Description Check SAML Response is not expired Initial Conditions User not authenticated into Service, but authenticated in MPass       No option is checked in SAML Advanced Options       Service server clock changed to several hours in the future Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response is expired Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-4_1","title":"Case #4","text":"Test Case ID TC_SEC_04 Description Check SAML Response is not too new Initial Conditions User not authenticated into Service, but authenticated in MPass       Only the following option is checked in SAML Advanced Options: \u201cSAML Response IssueInstant is specified in local time, instead of UTC\u201d Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response is expired (2 or 3 hours in the future for Moldova time zone) Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-5_1","title":"Case #5","text":"Test Case ID TC_SEC_05 Description Check if SAML Response Destination is validated Initial Conditions User not authenticated into Service, but authenticated in MPass       Only the following option is checked in SAML Advanced Options: \u201cDo not specify Destination in SAML Response\u201d Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response/@Destination is not specified Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-6","title":"Case #6","text":"Test Case ID TC_SEC_06 Description Check if SAML Response InResponseTo is checked for Initial Conditions User not authenticated into Service, but authenticated in MPass       Only the following option is checked in SAML Advanced Options: \u201cDo not specify InResponseTo in SAML Response\u201d Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass and redirected back to the Service without successful authentication, as SAML Response/@InResponseTo is not specified Pass / Fail"},{"location":"mservices/mpass/integration_development/#case-7","title":"Case #7","text":"Test Case ID TC_SEC_07 Description Check if SAML Response InResponseTo is validated Initial Conditions User not authenticated into the Service and MPass       No option is checked in SAML Advanced Options Step Task Expected Result Actual Result 1 Access the \u201cLogin\u201d button/link of the Service Browser redirected to MPass for authentication Pass / Fail 2 Abort user\u2019s session in the Service (restart the server or delete it from session store) so that the generated AuthnRequest/@ID is lost User session aborted Pass / Fail 3 Authenticate in MPass Browser redirected back to the Service without successful authentication, as SAML Response/@InResponseTo is now invalid Pass / Fail"},{"location":"mservices/mpass/integration_development/#integration-review-and-audit","title":"Integration review and audit","text":"<p>The security of MPass integrating systems heavily depends on the security of the integration. Please review the provided Test cases which include security related tests to thoroughly test the security of the integration.</p>"},{"location":"mservices/mpass/interaction_scenarios/","title":"Interaction scenarios","text":""},{"location":"mservices/mpass/interaction_scenarios/#authentication-process","title":"Authentication Process","text":"<p>The most important integration scenario with MPass is user authentication.</p> <p>During this process, if the user is already authenticated, MPass session is not expired and authentication is not forced, user is not requested to proof its identity again. This is actually how single sign-on (SSO) is implemented.</p> <p> </p> <p>Here is the description of authentication process using MPass:</p> <ol> <li>The user accesses some protected service resource or explicitly chooses to authenticate in the service. The Browser sends this request to the Service on behalf of user.</li> <li>The Service generates an AuthnRequest (authentication request) and signs it using its private key. See AuthnRequest structure description for details.</li> <li>The signed AuthnRequest is returned to the Browser in a special redirection page.</li> <li>The Browser posts (using HTTP POST method) the request to MPass.</li> <li>MPass verifies incoming AuthnRequest and the properties of service registration.</li> <li>If user is not already authenticated or the authentication is forced, MPass interacts with sd SSOUserBrowserServiceMPass3. Redirect to MPass()10. Verify SAMLResponse()2. Generate and signAuthnRequest()9. POST Response()Send Signing request()11. Return protected page()8. Redirect to Service()4. POST AuthnRequest()7. Generate and signSAML Response()Authenticate, ask andauthorize User()6. Authenticate (if not already)1. Initiate Signin()5. Verify AuthnRequest() Page | 10 of 32 MPass Integration Guide the user for authentication, authorization and requests user\u2019s consent to provide its identity attributes if needed.</li> <li>MPass generates and signs a SAML Response with the result of authentication. Note that if AuthnRequest verification fails or user explicitly cancels or refuses the authentication, the SAML Response will be generated with an unsuccessful status. See Response structure description for details.</li> <li>The signed Response is returned to the Browser in a special redirection page.</li> <li>The Browser posts (using HTTP POST method) the request to Service.</li> <li>The Service verifies the Response and creates its own session/cookie or handles the Response is any other specific way. For details on the correct way of this verification process, please refer to Security considerations.</li> <li>The Service serves the protected resources to the now authenticated user until its local session expires or the user explicitly request logout (see below).</li> </ol>"},{"location":"mservices/mpass/interaction_scenarios/#logout-process","title":"Logout Process","text":"<p>Because users can login into many services during an MPass session, from security point of view SSO is not fully implemented without a proper SLO (Single logout). Integrating services MUST implement both.</p> <p> </p> <p>Here is the description of logout process using MPass:</p> <ol> <li>The user explicitly requests to logout. Its Browser submits this request to the Service.</li> <li>The Service terminates its local session of the user, i.e. user will have to authenticate again to further access any protected resources.</li> <li>The Service generates and signs a LogoutRequest and returns this request to the browser in a special redirection page.</li> <li>The Browser posts (using HTTP POST method) the request to MPass.</li> <li>If during user\u2019s MPass session, user has authenticated in other services, MPass generates and signs a LogoutRequest for each such service, returning them all to the Browser.</li> <li>The Browser posts these requests to respective services.</li> <li>Upon LogoutRequest receipt, each service validates the request, then terminates its local session of the user, i.e. user will have to authenticate again to further access service protected resources.</li> <li>Each service then generates and signs a LogoutResponse to confirm the logout result and returns this response to the Browser in a special redirection page. Note that for correct logout processing when using HTTP POST, services must return the following header in HTTP response: X Frame Option allow from https://mpass.gov.md</li> <li>The Browser sends all the resulted responses to MPass.</li> <li>MPass is informed on results after all participating services confirm the logout or after a timeout (to handle the case for services that cannot confirm the logout).</li> <li>MPass then terminates its local session of the user, i.e. user will have to authenticate again to access its MPass profile.</li> <li>MPass generates and signs a LogoutResponse and returns it to the Browser.</li> <li>The Browser posts (using HTTP POST method) the response to Service.</li> <li>Finally, after handling the resulting LogoutResponse, the Service is free to return to the user any page that fits the needs.</li> </ol>"},{"location":"mservices/mpass/saml_references/","title":"SAML Reference","text":""},{"location":"mservices/mpass/saml_references/#overview","title":"Overview","text":"<p>MPass currently supports only one standard way of integration for SSO and SLO: SAML 2.0 via HTTP POST binding. Although MPass also supports HTTP Redirect binding, its usage is not recommended.</p> <p>To completely understand how to integrate with MPass, please read [SAML Binding, 3.5].</p> <p>The above reference describes how to correctly generate, encode and submit requests, as well as how to handle errors and responses.</p> <p>MPass uses AuthnRequest/Response and LogoutRequest/LogoutResponse pairs to implement SSO and SLO.</p> <p>For a detailed description of security related aspects, please read [SAML Security Considerations, 6.4].</p>"},{"location":"mservices/mpass/saml_references/#saml-structures","title":"SAML Structures","text":"<p>This section describes all the involved SAML structures in details.</p>"},{"location":"mservices/mpass/saml_references/#authnrequest-structure","title":"AuthnRequest structure","text":"<p>An authentication request, referred to as AuthnRequest, is generated by Service and submitted to MPass via user\u2019s browser to direct him for authentication.</p> <p>Here is an example of AuthnRequest generated by .NET sample.</p> AuthnRequest <pre><code>&lt;saml2p:AuthnRequest ID=\"_92a43de2-b6ab-460c-abe5-8580f828bf76\" Version=\"2.0\" IssueInstant=\"2014-10-20T08:26:26.9933782Z\" Destination=\"https://mpass.staging.egov.md/login/saml\" AssertionConsumerServiceURL=\"http://localhost:50341/Account/Acs\"\nxmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\"\nxmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\"&gt;\n  &lt;saml2:Issuer&gt;http://sample.testmpass.gov.md&lt;/saml2:Issuer&gt;\n  &lt;Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n    &lt;!-- ... --&gt;\n  &lt;/Signature&gt;\n  &lt;saml2p:NameIDPolicy AllowCreate=\"true\" /&gt;\n&lt;/saml2p:AuthnRequest&gt;\n</code></pre> <p>The following table describes structure attributes.</p> Element or @Attribute Type Value Description @ID any unique string required Generated by Service. This value will be returned back by MPass in Response/@InResponseTo attribute and can be checked in order to stop replay attacks. @Version Constant 2.0 This value is required and must be set to \u201c2.0\u201d. @Destination URL required Must be set to MPass SSO URL. @AssertionConsumerServiceURL URL optional, default value: set in Service settings This URL is used by MPass to submit the SAML Response. @ProtocolBinding (not present in above example) URI optional, default: urn:oasis:names:tc:SAML: 2.0:bindings:HTTP-POST URI reference that identifies the SAML protocol binding to be used when returning the Response. Although MPass supports HTTP POST and Redirect binding, Redirect binding is not recommended. @ForceAuthn (not present in above example) bool optional, default: false When set to \u201ctrue\u201d, MPass will required the user to authenticate even if user already has a valid and authenticated MPass session. @IsPassive (not present in above example) bool optional, default: false When set to \u201ctrue\u201d, MPass will not interact with the user and submit the SAML Response with current user authentication status. Issuer string required Represents the issuer of this AuthnRequest, usually as an URL. Signature Xml required Contains the signature of this AuthnRequest, applied using the private key of the Issuer. NameIDPolicy Xml required MPass currently ignore this policy element, but all Services are required to include it (exactly as in example above, including AllowCreate attribute) for compatibility."},{"location":"mservices/mpass/saml_references/#response-structure","title":"Response structure","text":"<p>MPass is generating a successful (i.e. user authenticated) or failed (i.e. user failed or cancelled the authentication) SAML Response in response to AuthnRequest. The Response is submitted to the Service via user\u2019s browser in the same way as the request. Before handling the response, Service must validate it accordingly.</p> <p>Here is an example of successful SAML Response returned by MPass in response to the above AuthnRequest.</p> AuthnResponse <pre><code>&lt;samlp:Response ID=\"_7722d8dc-3401-4e16-b789-8c4db923ea86\" InResponseTo=\"_7b874d06-2b14-4dbe-b177-3a70140a5b66\" Version=\"2.0\" IssueInstant=\"2014-10-20T08:39:48.786Z\" Destination=\"http://localhost:50341/Account/Acs\" Consent=\"urn:oasis:names:tc:SAML:2.0:consent:prior\"\nxmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\nxmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"&gt;\n  &lt;saml:Issuer&gt;http://devmpass.gov.md&lt;/saml:Issuer&gt;\n  &lt;Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;        &lt;!-- ... --&gt;&lt;/Signature&gt;\n  &lt;samlp:Status&gt;\n      &lt;samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\" /&gt;\n  &lt;/samlp:Status&gt;\n  &lt;saml:Assertion Version=\"2.0\" ID=\"_b3ef6fcb-8db0-44dc-9a96-a3ca008ec55c\" IssueInstant=\"2014-10-20T08:39:48.786Z\"&gt;\n      &lt;saml:Issuer&gt;http://devmpass.gov.md&lt;/saml:Issuer&gt;\n      &lt;saml:Subject&gt;\n          &lt;saml:NameID&gt;admin&lt;/saml:NameID&gt;\n          &lt;saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\"&gt;\n              &lt;saml:SubjectConfirmationData NotOnOrAfter=\"2014-10-20T08:49:48.786Z\" Recipient=\"http://localhost:50341/Account/Acs\" InResponseTo=\"_7b874d06-2b14-4dbe-b177-3a70140a5b66\" /&gt;\n          &lt;/saml:SubjectConfirmation&gt;\n      &lt;/saml:Subject&gt;\n      &lt;saml:Conditions NotOnOrAfter=\"2014-10-20T08:49:48.786Z\"&gt;\n          &lt;saml:AudienceRestriction&gt;\n              &lt;saml:Audience&gt;http://sample.testmpass.gov.md&lt;/saml:Audience&gt;\n          &lt;/saml:AudienceRestriction&gt;\n      &lt;/saml:Conditions&gt;\n      &lt;saml:AuthnStatement AuthnInstant=\"2014-10-20T08:38:19.703Z\" SessionIndex=\"c5b3376a-a437-4b9c-addf-a3ca008e5883\" SessionNotOnOrAfter=\"2014-10-20T08:48:19.697Z\"&gt;\n          &lt;saml:SubjectLocality Address=\"127.0.0.1\" /&gt;\n          &lt;saml:AuthnContext&gt;\n              &lt;saml:AuthnContextClassRef&gt;urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport&lt;/saml:AuthnContextClassRef&gt;\n          &lt;/saml:AuthnContext&gt;\n      &lt;/saml:AuthnStatement&gt;\n      &lt;saml:AttributeStatement&gt;\n          &lt;saml:Attribute Name=\"FirstName\"&gt;\n              &lt;saml:AttributeValue&gt;Admin&lt;/saml:AttributeValue&gt;\n          &lt;/saml:Attribute&gt;\n          &lt;saml:Attribute Name=\"LastName\"&gt;\n              &lt;saml:AttributeValue&gt;Adminovich&lt;/saml:AttributeValue&gt;\n          &lt;/saml:Attribute&gt;\n      &lt;/saml:AttributeStatement&gt;\n  &lt;/saml:Assertion&gt;\n&lt;/samlp:Response&gt;\n</code></pre> <p>The following table describes structure attributes.</p> Element or @Attribute Type Value Description @ID any unique string required Generated by MPass, provided for traceability purposes. @InResponseTo string required This value is set to the incoming AuthnRequest/@ID. Service can use it for traceability or check it to stop authentications by 3rd parties even with a stolen Service private key. @Version constant 2.0 This value is required and must be set to \u201c2.0\u201d. @IssueInstant datetime required, value in UTC The instant of time when this Response was generated. To minimize the risk of replays, Service must not accept old responses. @Destination URL required The URL of the destination for this Response. Can be checked by Service to stop Responses aimed for a different Service or deployment environment. @Consent URI optional Additional information regarding user consent. Can be set to explicit (the consent was explicitly given during the authentication) or prior (the consent was persisted during previous authentication). Issuer string required Represents the issuer of this Response, which is obviously one of the MPass instances (dev, test or production environment). Signature xml required Contains the MPass signature of this Response, applied using MPass the private key. Service must verify this signature. Status xml required Contains Response status details. Status / StatusCode / @Value string required Specifies the top-level status of this Response. Possible values are Success (authentication succeeded), Requestor (failure on Service side), Responder (failure on MPass or user side) and VersionMismatch. See [SAML Core, 3.2.2.2]. Status / StatusCode / StatusCode / @Value string optional Second-level status code that specifies the reason of status. See [SAML Core, 3.2.2.2]. Status / StatusMessage string optional Additional human-readable message related to Response status. Assertion xml included in successful Response SAML Assertion that includes the details of the authentication, authentication conditions and authenticated identity. If required by Service, MPass can sign this similarly to the whole Response. Assertion / @ID any unique string required Specifies the ID of this Assertion. Assertion / @IssueInstant datetime required, value in UTC The instant of time when this Assertion was generated. Assertion / Issuer string required Represents the issuer of this Assertion, which is obviously one of the MPass instances (dev, test or production environment). Assertion / Subject xml required Contains details of authenticated identity (i.e. its subject) and authentication confirmation. Assertion / Subject / NameID string required Authenticated identity name identifier. This is usually the IDNP of the authenticated resident, but it can also be an unique username of MPass user. Assertion / Subject / SubjectConfirmation / SubjectConfirmationData / @Recipient URL required Specifies the expected recipient of this Assertion. Same as Response/@Destination. Required by SAML standard. Assertion / Subject / SubjectConfirmation / SubjectConfirmationData / @InResponseTo string required Same as Response/@InResponseTo. Required by SAML standard. Assertion / Conditions xml required Contains conditions under which this Assertion must be considered. Assertion / Conditions / @NotOnOrAfter datetime required, value in UTC Specifies the time until this Assertion can be considered as valid. Assertion / Conditions / AudienceRestriction / Audience string required, could be many Specifies the expected audience for this Assertion. Service must check for match with its AuthnRequest/Issuer. Note that an Assertion can have many audiences. Assertion / AuthnStatement xml required Contains authentication details. Assertion / AuthnStatement / @AuthnInstant datetime required, value in UTC Specifies the exact time instant of authentication. Assertion / AuthnStatement / @SessionIndex string required Specifies the ID of the MPass session under which the identity was authenticated. Must be used in LogoutRequest/SessionIndex to specify the exact session to log out from. Assertion / AuthnStatement / @SessionNotOnOrAfter datetime required, value in UTC Specifies the time until MPass session is valid. Assertion / AuthnStatement / SubjectLocality / @Address IP address optional Specifies the IP address of the client that performed the authentication as seen by MPass. Assertion / AuthnStatement / AuthnContext / AuthnContextClassRef string optional Specifies the instrument or method used for authentication. See [SAML Core, 2.7.2.2] and [SAML Authn Context, 3.4]. Assertion / AttributeStatement xml required Contains authoritative attribute values (i.e. claims) that represent the, are assigned or associated with authenticated identity. Assertion / AttributeStatement / Attribute / @Name string required The name of the provided attribute. Assertion / AttributeStatement / Attribute / AttributeValue string or xml optional, could be many Contains the value of the attribute. Note that some attributes can naturally have multiple values (e.g. identity Role in some Service)."},{"location":"mservices/mpass/saml_references/#response-structure_1","title":"Response structure","text":"<p>A LogoutRequest is generated either by a Service (as a result of user explicit request to logout) or MPass (in order to perform single logout, as a result of another service requesting user logout in the same authentication session or direct user logout in MPass UI).</p> <p>Here is an example of LogoutRequest generated by .NET sample.</p> LogoutRequest <pre><code>&lt;saml2p:LogoutRequest ID=\"_bdeed8e2-5c79-4d5b-8f93-2620f1219753\" Version=\"2.0\" IssueInstant=\"2014-10-20T08:51:44.8184811Z\" Destination=\"http://devmpass.gov.md/logout/saml\"\nxmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\"\nxmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\"&gt;\n  &lt;saml2:Issuer&gt;http://sample.testmpass.gov.md&lt;/saml2:Issuer&gt;\n  &lt;Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n    &lt;!-- ... --&gt;\n  &lt;/Signature&gt;\n  &lt;saml2:NameID&gt;admin&lt;/saml2:NameID&gt;\n  &lt;saml2p:SessionIndex&gt;ae94d066-67ba-4296-b149-a3ca0091b24e&lt;/saml2p:SessionIndex&gt;\n&lt;/saml2p:LogoutRequest&gt;\n</code></pre> <p>The following table describes structure attributes.</p> Element or @Attribute Type Value Description @ID any unique string required Generated by MPass/Service, provided for traceability purposes. @InResponseTo string required This value is set to the incoming LogoutRequest/@ID. The requesting party can use it for traceability or check it to stop authentications by 3rd parties even with a stolen party\u2019s private key. @Version constant 2.0 This value is required and must be set to \u201c2.0\u201d. Issuer string required Represents the issuer of this LogoutResponse, usually as an URL. Signature xml required Contains the signature of this LogoutRequest, applied using the private key of the Issuer. NameID string required Contains the username (usually IDNP) of the logged in user, as previously returned by MPass in Response/Assertion /Subject/NameID. SessionIndex string required Contains the ID of the session that was previously returned by MPass in Response/Assertion /AuthnStatement/@SessionIndex."},{"location":"mservices/mpass/saml_references/#logoutresponse-structure","title":"LogoutResponse structure","text":"<p>A LogoutResponse is returned as a response to a LogoutRequest, either by MPass (in response to a Service request) or a service (as a response for single logout request from MPass).</p> <p>Here is an example of successful LogoutResponse returned by MPass in response to the above LogoutRequest.</p> LogoutResponse <pre><code>&lt;samlp:LogoutResponse ID=\"_34650a27-f348-41cc-a2ef-e481d89a727c\" InResponseTo=\"_bdeed8e2-5c79-4d5b-8f93-2620f1219753\" Version=\"2.0\" IssueInstant=\"2014-10-20T08:52:13.207Z\" Destination=\"http://localhost:50341/Account/AfterLogout\"\nxmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\nxmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"&gt;\n  &lt;saml:Issuer&gt;http://devmpass.gov.md&lt;/saml:Issuer&gt;\n  &lt;Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n      &lt;!-- ... --&gt;\n  &lt;/Signature&gt;\n  &lt;samlp:Status&gt;\n      &lt;samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\" /&gt;\n  &lt;/samlp:Status&gt;\n&lt;/samlp:LogoutResponse&gt;\n</code></pre> <p>The following table describes structure attributes.</p> Element or @Attribute Type Value Description @ID any unique string required Generated by MPass or Service. This value will/must be returned back by MPass/Service in LogoutResponse/@InResponseTo attribute and can be checked in order to stop replay attacks. @Version constant 2.0 This value is required and must be set to \u201c2.0\u201d. @IssueInstant datetime required, value in UTC The instant of time when this LogoutResponse was generated. To minimize the risk of replays, requesting party must not accept old responses. @Destination URL required The URL of the destination for this LogoutResponse. Can be checked by requesting party to stop Responses aimed for a different party or deployment environment. Issuer xml required Contains the signature of this LogoutResponse, applied using the private key of the Issuer. Signature xml required Contains the signature of this LogoutResponse, applied using the private key of the Issuer. Status xml required Contains LogoutResponse status details. Status / StatusCode / @Value string required Specifies the top-level status of this LogoutResponse. Possible values are Success (logout succeeded), Requestor (failure on requesting side), Responder (failure on responder side) and VersionMismatch. See [SAML Core, 3.2.2.2]. Status / StatusCode / StatusCode / @Value string optional Second-level status code that specifies the reason of status. See [SAML Core, 3.2.2.2]. Status / StatusMessage string optional Additional human-readable message related to LogoutResponse status."},{"location":"mservices/mpass/security/","title":"Security considerations","text":"<p>Note</p> <p>The following security considerations must be taken into account while developing an integration with MPass.</p>"},{"location":"mservices/mpass/security/#authentication","title":"Authentication","text":"<p>MPass performs integrating systems authentication by verifying the signature of requests, which MUST be signed by using the private key of the requesting system.</p> <p>MPass uses X509 certificates for system registration and actual signature verification.</p> <p>Important. The description of the process of installing, registering or explicitly trusting the certificate and any certificate chain in the operating system or framework used by the integrating information systems has to be done accordingly, is specific to that environment and it\u2019s out of the scope of this document.</p> <p>Integrating systems MUST accept and handle only valid MPass messages (SAML Response, LogoutResponse, as well as SAML SLO LogoutRequest).</p> <p>The following checks MUST be performed for a correct and complete MPass message verification:</p> <ol> <li>Verify SAML message signature and/or SAML assertion signature.</li> <li> <p>Check whether the SAML message is not expired (using some absolute configurable timeout and taking into account some expected time differences between servers\u2019 clocks) of the following SAML attributes, depending on your needs:</p> <ol> <li>@IssueInstant \u2013 always verify;</li> <li>Response/Assertion/AuthnStatement/@AuthnInstant \u2013 verify when you need to see how long ago the user has authenticated;</li> <li>Response/Assertion/Conditions/@NotOnOrAfter \u2013 verify when SAML assertion is signed;</li> <li>Response/Assertion/AuthnStatement/@SessionNotOnOrAfter \u2013 verify in special cases.</li> </ol> </li> <li> <p>Check SAML message destination and/or audience:</p> <ol> <li>@Destination \u2013 always verify;</li> <li>Response/Assertion/Subject/SubjectConfirmation /SubjectConfirmationData/@Recipient \u2013 verify when SAML assertion is signed;</li> <li>Response/Assertion/Conditions/AudienceRestriction/Audience \u2013 always verify.</li> </ol> </li> <li> <p>Check SAML responses to see if they have been initiated by your Service:</p> <ol> <li>Response/@InResponseTo \u2013 always verify;</li> <li>Response/Assertion/Subject/SubjectConfirmation/SubjectConfirmationData/@InResponseTo \u2013 verify when SAML assertion is signed.</li> </ol> </li> <li> <p>Always check SAML response status code for Success in Response/Status/StatusCode/@Value attribute. The response MUST be handled as invalid whenever this code has a different value.</p> </li> </ol> <p>For more details and a comprehensive understanding of all security considerations, please refer to the following SAML standards document sections: [SAML Core, 3.2], [SAML Bindings, 3.5.5], [SAML Profiles, 4.1.4.3] and [SAML Security Considerations, 6.4].</p>"},{"location":"mservices/mpass/security/#authorization","title":"Authorization","text":"<p>MPass does not perform actual authorization of the integrating systems or users by itself. MPass is a convenient user management instrument and acts as what is commonly referred to as Policy Information Point (PIP) and Policy Retrieval Point (PRP).</p> <p>On user authentication MPass can return custom authorization attributes as configured in service registration. Actual authorization decision must be taken by integrating systems based on the set of returned attributes for the authenticated identity. This means that the systems act as actual Policy Decision Point (PDP) and Policy Enforcement Point (PEP), i.e. the actual decision, its correctness and enforcement is the responsibility of the integrating systems.</p>"},{"location":"mservices/mpass/security/#confidentiality","title":"Confidentiality","text":"<p>To maintain the confidentiality of the attributes related to authenticated identities, integrating systems MUST use some encryption mechanism. Considering that the integrating systems are web-based, this means that all interactions with user\u2019s browser during authentication and logout MUST be performed using HTTPS (TLS).</p> <p>Note that, although MPass can encrypt and sign SAML Assertions, this feature shall not be considered as enough for maintaining confidentiality.</p>"},{"location":"mservices/mpay/","title":"Introducere","text":""},{"location":"mservices/mpay/#domeniul-de-aplicare-si-publicul-vizat","title":"Domeniul de aplicare \u0219i publicul vizat","text":"<p>Acest document descrie interfe\u021bele tehnice utilizate pentru integrarea cu MPay. Publicul vizat sunt echipele de dezvoltare care implementeaz\u0103 sau \u00eentre\u021bin sistemele informa\u021bionale pentru  a fi integrate sau integrate cu MPay.</p>"},{"location":"mservices/mpay/#descrierea-generala-a-sistemului","title":"Descrierea general\u0103 a sistemului","text":"<p>MPay este un serviciu reutilizabil \u0219i partajat la nivel de platform\u0103, al c\u0103rui scop principal este  de a permite plata oric\u0103rui serviciu electronic cu orice instrument de plat\u0103 disponibil. Interfa\u021ba tehnic\u0103 utilizat\u0103 pentru integrarea prestatorului de serviciu, cu platforma MPay, simplific\u0103 semnificativ integr\u0103rile prin expunerea formatelor tehnice de date. Exist\u0103 multe avantaje non-tehnice activate de MPay, cum ar fi gestionarea mai u\u0219oar\u0103 a  contractelor \u0219i transparenta, \u00eens\u0103 nu intr\u0103 \u00een domeniul de aplicare al acestui document.</p>"},{"location":"mservices/mpay/#dependente","title":"Dependen\u021be","text":"<p>Disponibilitatea MPay depinde de disponibilitatea implement\u0103rii interfetei IServiceProvider,  adic\u0103 un pl\u0103titor nu va putea s\u0103 solicite o comand\u0103 sau o factur\u0103 pentru un anumit serviciu  electronic \u0219i s\u0103 pl\u0103teasc\u0103 pentru aceasta, dac\u0103 serviciul web al prestatorului de servicii  electronice nu este disponibil</p>"},{"location":"mservices/mpay/#protocoale-si-standarde","title":"Protocoale \u0219i standarde","text":"<p>MPay expune web serviciul interoperabil WS-I Basic Profile 1.1 prin HTTPS, care corespunde  basicHttpBinding \u00een WCF. MPay folose\u0219te erori SOAP pentru raportarea erorilor. MPay utilizeaz\u0103 semn\u0103tura XML WS-Security (X.509) (la nivel de mesaj) pentru a permite nonrepudierea.</p>"},{"location":"mservices/mpay/#notatii","title":"Nota\u021bii","text":"<p>Acest document con\u021bine mai multe stiluri de nota\u021bie; urm\u0103toarele detaliaz\u0103 stilurile care au un  grad de semnifica\u021bie dincolo de scopul comunic\u0103rii informa\u021biilor:</p> <p>Text marcat cu galben \u2013 Textul care este eviden\u021biat cu galben, indiferent de atributele fontului  (tipul fontului, cursive, aldine, subliniat etc.) \u00eenseamn\u0103 c\u0103 textul a\u0219teapt\u0103 clarificare sau  verificare.</p> <p>Red Bold Text \u2013 Textul aldin de culoare ro\u0219ie define\u0219te o informa\u021bie important\u0103 care trebuie  citit\u0103.</p> <p>Italic Bold Text \u2013 Textul aldin \u0219i cursiv detaliaz\u0103 informa\u021bii sau scripturi reale care trebuie  executate, create \u0219i copiate din sau c\u0103tre.</p> <p>Strikethrough Text \u2013 Text care este dep\u0103\u0219it \u0219i care trebuie ignorat</p>"},{"location":"mservices/mpay/integration_process/","title":"Parcursul integr\u0103rii","text":""},{"location":"mservices/mpay/integration_process/#obtinerea-credentialelor","title":"Ob\u021binerea creden\u021bialelor","text":"<p>MPay utilizeaz\u0103 certificate digitale de sistem generate de Serviciul Tehnologia Informa\u021biei \u0219i Securitate Cibernetic\u0103 (denumit\u0103 \u00een continuare STISC) - (Solicit\u0103 certificat de sistem ). Aceste certificate pot fi utilizate at\u00e2t pentru autentificarea SSL, c\u00e2t \u0219i pentru semnarea mesajelor SOAP. Pentru mediul de test, dezvoltatorii pot utiliza at\u00eet certificatele de test ob\u021binute de la echipa tehnic\u0103 MPay, c\u00eet \u0219i pe cele proprii cu condi\u021bia c\u0103 sunt de tip avansat calificat.</p>"},{"location":"mservices/mpay/integration_process/#inregistrarea-prestatorului-de-servicii","title":"\u00cenregistrarea prestatorului de servicii","text":"<p>Informa\u021biile de mai jos trebuie puse la dispozi\u021bia serviciului MPay pentru \u00eenregistrare</p> Informa\u021bii Descriere URL-ul prestatorului de servicii MPay trebuie s\u0103 poat\u0103 apela serviciul web care implementeaz\u0103 interfa\u021ba IServiceProvider. V\u0103 rug\u0103m s\u0103 pune\u021bi la dispozi\u021bie adresa URL prin care serviciul MPay va efectua apelurile. Certificatul serviciului Dup\u0103 cum este specificat mai sus, acest certificat trebuie utilizat pentru a semna mesajele SOAP al prestatorului de servicii, pentru a putea verifica semn\u0103turile. Acest certificat (certificatul cheii publice) trebuie s\u0103 fie \u00eenregistrat \u00een MPay. IP-ul prestatorului de servicii Pentru accesarea pagina web front-end MPay pe mediul de test, trebuie s\u0103 prezenta\u021bi IP-ul public (static) al sistemului informa\u021bional. <p>\u00cen cazul c\u0103 sistemul dvs. informational filtreaz\u0103 apelurile dup\u0103 IP, atunci trebuie s\u0103 solicita\u021bi adresa IP extern\u0103 a web-serviciului MPay \u0219i s\u0103 configura\u021bi IP-ul.</p>"},{"location":"mservices/mpay/integration_process/#contracte-tehnice","title":"Contracte tehnice","text":"<p>\u00cen cazul \u00een care dezvolta\u021bi implementarea interfe\u021bei IServiceProvider \u00een .NET, utiliza\u021bi libr\u0103ria MPay.PublicModel, din exemplul .NET. Pentru implementarea interfe\u021bei cu alte tehnologii, g\u0103si\u021bi fi\u0219ierul WSDL care descrie contractul tehnic ce urmeaz\u0103 s\u0103 fie implementat. \u00cen sursa de exemple se reg\u0103se\u0219te modelul MPay offline, pe calea: sample\\MPay.Sample.Offline, ce simuleaz\u0103 apelurile c\u0103tre web-serviciul dvs. (necesit\u0103 cuno\u0219tin\u021be .NET)</p>"},{"location":"mservices/mpay/security/","title":"M\u0103suri de securitate","text":""},{"location":"mservices/mpay/security/#masuri-de-securitate","title":"M\u0103suri de securitate","text":""},{"location":"mservices/mpay/security/#autentificare","title":"Autentificare","text":"<p>Interfa\u021ba IServiceProvider trebuie s\u0103 valideze semn\u0103tura mesajelor SOAP expediate de c\u0103tre MPay. Se recomand\u0103 ca dezvoltarea implement\u0103rii interfe\u021bei s\u0103 reutilizeze logica de validare existent\u0103 \u00een framework-urile de web-servicii, cum ar fi .NET WCF sau J2EE JAX-WS, prin configurarea corect\u0103 a end-point-urilor. Pentru informa\u021bii despre ob\u021binerea \u0219i \u00eenregistrare certificatului digital de sistem, vede\u021bi Ob\u021binerea creden\u021bialelor \u0219i \u00cenregistrarea prestatorului de servicii.</p>"},{"location":"mservices/mpay/security/#criptarea","title":"Criptarea","text":"<p>Comunicarea cu web serviciul MPay SOAP este criptat\u0103 folosind protocolul TLS standard (HTTPS). Certificatul client utilizat pentru a ini\u021bia transportul criptat este folosit \u0219i pentru autentificare.</p>"},{"location":"mservices/mpay/security/#depozitarea-mesajelor-soap","title":"Depozitarea mesajelor SOAP","text":"<p>Deoarece toate mesajele SOAP sunt semnate cu certificatul digital al sistemului MPay, se recomand\u0103 ca mesajele SOAP s\u0103 fie salvate \u00eentr-un depozit de jurnalizare sau direct \u00een procesele de business al codului surs\u0103 \u00eempreun\u0103 cu mesajul SOAP care include semn\u0103tura MPay. Aceste mesaje pot fi de folos \u00een orice probleme legate de autorizare sau solu\u021bionarea altor tipuri de neclarit\u0103\u021bi.</p>"},{"location":"mservices/mpay/workflow/","title":"Scenariul de inretac\u021biune","text":"<p>Deoarece MPay integreaz\u0103 mai mul\u021bi prestatori de servicii electronice cu plat\u0103 \u0219i diferi\u021bi  prestatori de servicii de plat\u0103, care ofer\u0103 o varietate de instrumente de plat\u0103, exist\u0103 multe  moduri \u00een care un pl\u0103titor poate interac\u021biona cu acesta.</p>"},{"location":"mservices/mpay/workflow/#comanda-si-plata-online","title":"Comanda \u0219i plata online","text":""},{"location":"mservices/mpay/workflow/#descrierea-scenariului","title":"Descrierea scenariului:","text":"<ol> <li>Pl\u0103titorul completeaz\u0103 \u0219i trimite o comand\u0103 pe pagina prestatorului de serviciu. Comanda este p\u0103strat\u0103 \u00een baza de date a prestatorului de serviciu;</li> <li>Pagina de confirmare a comenzii afi\u0219eaz\u0103 butonul \u201ePl\u0103ti\u021bi\u201d.</li> <li>Tastarea acestui buton, redirec\u021bioneaz\u0103 pl\u0103titorul c\u0103tre pagina MPay.</li> <li>Browserul transmite parametrii ServiceID, OrderKey \u0219i op\u021bional ReturnUrl pe pagina de plat\u0103 MPay (vedeti capitolul Efectuarea redirec\u021bion\u0103rii).</li> <li>P\u00e2n\u0103 la afi\u0219area paginii de plat\u0103, MPay invoc\u0103 opera\u021biunea GetOrderDetails din interfeta IServiceProvider implementat\u0103 de prestatorul de serviciu.</li> <li>Pe baza detaliilor comenzii returnate, MPay creeaz\u0103 sau actualizeaz\u0103 o factur\u0103 existent\u0103 \u0219i arat\u0103 detaliile pl\u0103titorului.</li> <li>Pl\u0103titorul selecteaz\u0103 o metod\u0103 de plat\u0103 (instrument). Pentru pl\u0103\u021bile cu cardul bancar, aceasta \u00eenseamn\u0103 publicarea detaliilor facturii c\u0103tre procesatorul de carduri corespunz\u0103tor (care este unul dintre prestatorii de servicii de plat\u0103).</li> <li>MPay redirec\u021bioneaz\u0103 browserul c\u0103tre pagina de plat\u0103 specific\u0103 instrumentului.</li> <li>Pl\u0103titorul completeaz\u0103 detaliile de plat\u0103 necesare (cum ar fi detaliile cardului) \u0219i trimite plata pentru autorizare.</li> <li>Prestatorul de servicii de plat\u0103 efectueaz\u0103 autoriza\u021bia de plat\u0103 corespunz\u0103toare.</li> <li>Prestatorul de servicii de plat\u0103 redirec\u021bioneaz\u0103 browserul c\u0103tre pagina cu rezultatele pl\u0103\u021bii MPay.</li> <li>\u00cenainte de a afi\u0219a rezultatele pl\u0103\u021bii, MPay genereaz\u0103 o confirmare de plat\u0103 de la prestatorul de servicii de plat\u0103.</li> <li>Dac\u0103 plata este efectuat\u0103 cu succes, MPay trimite o confirmare de plat\u0103 c\u0103tre prestatorul de serviciu, invoc\u00e2nd opera\u021biunea ConfirmOrderPayment a interfetei IServiceProvider implementat\u0103 de serviciul web \u0219i afi\u0219eaz\u0103 pl\u0103titorului rezultatele pl\u0103\u021bii. Asigura\u021biv\u0103 c\u0103 apelul ConfirmOrderPayment poate fi re\u00eencercat de mai multe ori, p\u00e2n\u0103 c\u00e2nd reu\u0219e\u0219te. Aceasta \u00eenseamn\u0103 c\u0103 toate implement\u0103rile trebuie s\u0103 fie idempotente, adic\u0103 apelurile multiple nu trebuie considerate pl\u0103\u021bi multiple.</li> <li>Op\u021bional, pl\u0103titorul poate desc\u0103rca \u0219i imprima nota de plat\u0103.</li> <li>Op\u021bional, dac\u0103 ReturnUrl a fost setat la pasul 4, pl\u0103titorul poate alege s\u0103 revin\u0103 la pagina prestatorului de serviciu. \u00cen acest caz, MPay redirec\u021bioneaz\u0103 browserul c\u0103tre adresa din ReturnUrl.</li> </ol>"},{"location":"mservices/mpay/workflow/#plateste-o-nota-de-plata-existenta","title":"Pl\u0103te\u0219te o not\u0103 de plat\u0103 existent\u0103","text":""},{"location":"mservices/mpay/workflow/#un-alt-scenariu-este-plata-pentru-o-comanda-existenta","title":"Un alt scenariu este plata pentru o comand\u0103 existent\u0103:","text":"<ol> <li>Pl\u0103titorul acceseaza MPay (https://testmpay.gov.md pentru testare sau https://mpay.gov.md pentru mediu de produc\u021bie). Pl\u0103titorul selecteaz\u0103 un serviciu pentru care are numarul comanzii de la prestatorul de serviciu.</li> <li>Pl\u0103titorul introduce num\u0103rul comenzii (de exemplu num\u0103rul comenzii/cererii, etc.)</li> <li>Scenariul continu\u0103 cu p.5 din Comanda si plata online, adic\u0103 comanda este c\u0103utat\u0103 prin invocarea opera\u021biunii GetOrderDetails a interfetei IServiceProvider.</li> </ol>"},{"location":"mservices/mpay/api_references/main/","title":"Referin\u021b\u0103 API","text":""},{"location":"mservices/mpay/api_references/main/#procesarea-platii-online","title":"Procesarea pl\u0103\u021bii online","text":"<p>\u00cen cazul pl\u0103\u021bii online (card not present, ecommerce), prestatorul de servicii trebuie s\u0103 redirec\u021bioneze browserul c\u0103tre pagina de plat\u0103 a MPay. WEB serviciul va comunica prin protocolul standard HTTP (HTTP / 1.1) \u0219i va acorda permisiunea de acces pentru IP-ul clientului (doar pe mediul test). Descrierea parametrilor implica\u021bi \u00een aceast\u0103 redirec\u021bionare.</p> Metoda POST URL          Test https://testmpay.gov.md/service/pay         Prod https://mpay.gov.md/service/pay Descriere Utilizatorul efectueaz\u0103 plata online direct (card (card not present - ecommerce), Apple Pay, Google Pay, Instant payment (MIA), internet banking, e-money)         sau s\u0103 acceseze instruc\u021biunile altor metode de plat\u0103. <p>Forma sau parametrii URL</p> Nume Tip Obligatoriu/Op\u021bional Descriere ServiceID string Obligatoriu Identificatorul serviciului \u00een MPay OrderKey string Obligatoriu          Indentificatorul comenzii la prestatorul de serviciu. Aceasta trebuie s\u0103 fie generat \u00een mod unic pentru         fiecare comand\u0103 (cum ar fi cheia primar\u0103 sau alt tip de num\u0103r de referin\u021b\u0103).        ReturnUrl URL Op\u021bional          Adresa URL pe care MPay va redirec\u021biona pl\u0103titorul dup\u0103 plata comenzii reu\u0219it\u0103. Aceast\u0103 pagin\u0103 va fi redirec\u021bionat\u0103         prin metoda GET HTTP/S. Asigura\u021bi-v\u0103 c\u0103 codifica\u021bi URL-ul pentru orice parametri pe care \u00eei utiliza\u021bi pentru a crea aceast\u0103 adres\u0103 URL."},{"location":"mservices/mpay/api_references/main/#reguli-de-tratare-a-erorilor","title":"Reguli de tratare a erorilor","text":"<p>Erorile rezultate la apelarea interfe\u021bei SOAP, MPay se a\u0219teapt\u0103 la tipul de erori SOAP faults cu fault code \u0219i fault reason care sunt descrise \u00een limba englez\u0103. Traducerea erorilor \u00een limba rom\u00e2n\u0103 este op\u021bional\u0103. Dac\u0103 nu exist\u0103 nici o eroare SOAP returnat\u0103 de la prestatorul de servicii, MPay consider\u0103 c\u0103 aplearea opera\u021biunii s-a finalizat cu succes, ceea ce \u00eenseamn\u0103 c\u0103 tranzac\u021bia este valid\u0103.</p> Fault Code Descriere InternalError Eroare intern\u0103 nea\u0219teptat\u0103 AuthenticationFailed Procesul de autentificare a consumatorului de web serviciu a e\u0219uat. Consulta\u021bi Autentificarea AuthorizationFailed Procesul de autorizare a consumatorului de web serviciu a e\u0219uat. Vezi Eroarea! Sursa de referin\u021b\u0103 nu a fost g\u0103sit\u0103 InvalidParameter Parametru de intrare este nevalid. Examina\u021bi textul Motivului (fault result) returnat \u0219i descrierea opera\u021biunii apelate UnknownService ServiceID-ul nu coincide cu cel al prestatorului de serviciu UnknownOrder Identificatorul comenzii la prestatorul de serviciu este necunoscut UnknownInvoice InvoiceID-ul este necunoscut UknownPayment PaymentID-ul este necunoscut InvoiceAlreadyPaid Nota de plat\u0103 MPay cu indentificatorul c\u0103utat de\u021bine unele \u00eencas\u0103ri \u0219i nu poate fi anulat\u0103 InvoiceExpired Nota de plat\u0103 MPay nu mai este valabil\u0103 \u0219i nu va fi achitat\u0103"},{"location":"mservices/mpay/api_references/main/#operatiunile-idempotente","title":"Opera\u021biunile idempotente","text":"<p>Toate apelurile si structurile definite \u00een IServiceProvider trebuie s\u0103 fie idempotente, adic\u0103 indiferent de num\u0103rul de apeluri cu acelea\u0219i parametri de intrare, rezultatul returnat \u0219i efectul de business al apel\u0103rii nu trebuie s\u0103 fie diferit.</p>"},{"location":"mservices/mpay/api_references/main/#operatiunia-getorderdetails","title":"Opera\u021biunia GetOrderDetails","text":"Semnatura GetOrderDetails(query: OrderDetailsQuery) :OrderDetails[] Descrierea Returneaz\u0103 detaliile comenzilor, potrivit parametrilor de intrare, din sistemul informa\u021bional al prestatorului de servicii Retur Un \u0219ir de obiecte, de tip OrderDetails, conform criteriilor de c\u0103utare Remarci Aceast\u0103 metod\u0103 poate fi apelat\u0103 de mai multe ori \u0219i \u00een unele cazuri prestatorul de serviciu poate returna un rezultat diferit, cum ar fi valoarea din TotalAmountDue sau OrderStatus, pentru acela\u0219i num\u0103r comand\u0103. Aceasta se poate \u00eent\u00e2mpla atunci c\u00e2nd o comand\u0103 este modificat\u0103 ulterior de c\u0103tre prestatorul de servicii. \u00cen acest caz MPay de\u021bine detaliile de plat\u0103 conform ultimei c\u0103ut\u0103ri a comenzii la prestatorul de servicii, ca urmare suma sau statutul r\u0103m\u00e2n neactualizat\u0103."},{"location":"mservices/mpay/api_references/main/#parametrii-de-intrare","title":"Parametrii de intrare","text":"Nume Tip Descriere query OrderDetailsQuery O structur\u0103 de date care con\u021bine criterii de interpelare a detaliilor comenzii"},{"location":"mservices/mpay/api_references/main/#erori","title":"Erori","text":"Cod Motiv InvalidParameter Un parametru de intrare este nevalid. V\u0103 rug\u0103m s\u0103 oferi\u021bi detaliile corespunz\u0103toare \u00een Falut reason. UnknownService ServiceID-ul nu coincide cu cel a web serviciului"},{"location":"mservices/mpay/api_references/main/#operatiunia-confirmorderpayment","title":"Opera\u021biunia ConfirmOrderPayment","text":"Semnatura ConfirmOrderPayment (confirmation:PaymentConfirmation) Descrierea Confirm\u0103 plata pentru comand\u0103 Retur Void Remarci \u00cen unele cazuri, aceast\u0103 metod\u0103 poate fi apelat\u0103 de mai multe ori pentru aceea\u0219i plat\u0103 (identificat\u0103 \u00een mod unic de proprietatea PaymentID). Asigura\u021biv\u0103 c\u0103 aceste apeluri nu vor produce dubl\u0103ri de plat\u0103 pentru o singur\u0103 comand\u0103."},{"location":"mservices/mpay/api_references/main/#parametrii-de-intrare_1","title":"Parametrii de intrare","text":"Nume Tip Descriere Confirmation PaymentConfirmation O structur\u0103 de date care descrie confirmarea pl\u0103\u021bii"},{"location":"mservices/mpay/api_references/main/#erori_1","title":"Erori","text":"Cod Motiv InvalidParameter Un parametru de intrare este nevalid. V\u0103 rug\u0103m s\u0103 oferi\u021bi detaliile corespunz\u0103toare \u00een Falut reason. UnknownService ServiceID-ul nu coincide cu cel a web serviciului UnknownOrder Identificatorul comenzii nu apar\u021bine web serviciului"},{"location":"mservices/mpay/api_references/main/#structuri-de-date","title":"Structuri de date","text":"<p>Important</p> <p>Ordinea \u00een care sunt descrise structurile de date mai jos este informativ\u0103. Ordinea elementelor din structurile XML, este alfabetic\u0103 a\u0219a cum este definit\u0103 \u00een WSDL. Pentru o implementare corect\u0103, se recomand\u0103 s\u0103 utiliza\u021bi un framework, conform limbajului de programare, pentru implementarea automat\u0103 a WSDL-lui.</p> <p>Important</p> <p>La utilizarea func\u021bionalului de pl\u0103\u021bi \u00een avans sau pl\u0103\u021bi par\u021biale propriet\u0103\u021bile AllowPartialPayment \u0219i AllowAdvancePayment din OrderLine permit urm\u0103toarele scenarii de procesare cu succes a pl\u0103\u021bii:</p> <p>-Scenariul 1: Detaliile comenzii de plat\u0103 con\u021bin un singur OrderLine \u0219i una din propriet\u0103\u021bi, conform modelului de business, AllowPartialPayment \u0219i AllowAdvancePayment trebuie s\u0103 fie setat \u00een TRUE at\u00e2t \u00een OrderDetails c\u00eet \u0219i \u00een OrderLine.</p> <p>-Scenariul 2: Detaliile comenzii de plat\u0103 con\u021bin mai multe OrderLine-uri. \u00cen acest caz una din propriet\u0103\u021bile, conform modelului de business, AllowPartialPayment \u0219i AllowAdvancePayment din OrderDetails trebuie setat \u00een TRUE, iar primul OrderLine va p\u0103stra aceste propriet\u0103\u021bi conform celor din OrderDetails. Celelalte OrderLine-uri implicit trebuie setate \u00een FALSE ambele propriet\u0103\u021bi (AllowPartialPayment, AllowAdvancePayment).</p>"},{"location":"mservices/mpay/api_references/main/#getorderdetails","title":"GetOrderDetails","text":"Structuri de date Tip Obligatoriu/Op\u021bional Descriere OrderDetailsQuery ServiceID string (36) Obligatoriu Identificatorul serviciului MPay OrderKey string (36) Obligatoriu Indentificatorul comenzii la prestatorul de serviciu. Language string (2) Op\u021bional, implicit: RO Limba \u00een care trebuie returnate valorile din structura de r\u0103spuns. Limbi disponibile: RO, RU \u0219i EN OrderDetails ServiceID string (36) Obligatoriu Identificatorul serviciului MPay OrderKey string (36) Obligatoriu Indentificatorul comenzii la prestatorul de serviciu. OrderKey string (36) Obligatoriu Indentificatorul comenzii la prestatorul de serviciu. Reason string (50) Obligatoriu Motivul gener\u0103rii cererii de plat\u0103. Disponibil implicit \u00een RO \u0219i op\u021bional RU \u0219i ENG       Aten\u021bie! Acest c\u00e2mp va reflecta valoarea sa pe bonurile de plat\u0103 eliberate de prestatorii de servicii de plat\u0103 (terminale de plat\u0103, ghi\u0219eele b\u0103ncilor, Po\u0219ta Moldovei) \u00een scopul identific\u0103rii motivului de baz\u0103 al pl\u0103\u021bii.       De ex. Taxa pentru vinieta Status OrderStatus Obligatoriu Indic\u0103 statutul comanzii \u0219i disponibilitatea pentru plat\u0103 IssuedAt DateTime Op\u021bional Data \u0219i ora \u00eenregistr\u0103rii comanzii \u00een sistemul informa\u021bional de back-office DueDate DateTime Op\u021bional Indic\u0103 data \u0219i ora p\u00e2n\u0103 c\u00e2nd comanda poate fi achitat\u0103. Dac\u0103 aceast\u0103 proprietate nu este setat\u0103, atunci comanda nu are un termen de expirare TotalAmountDue decimal Obligatoriu, op\u021bional \u00een cazuri specifice Indic\u0103 suma total\u0103 a comenzii. Dac\u0103 aceast\u0103 proprietate nu are valoare, atunci suma comenzii nu este cunoscut\u0103. Pentru procesarea comenzii cu suma necunoscut\u0103 trebuie ca una din urm\u0103toarele propriet\u0103\u021bi AllowPartialPayment sau AllowAdvancePayment, conform modelului de business, s\u0103 fie setat\u0103 ca TRUE. Astfel MPay va permite pl\u0103titorului s\u0103 introduc\u0103 suma spre plat\u0103. Currency CurrencyCode Obligatoriu Valuta \u00een care se va efectua plata comenzii. Disponibil doar \u00een valuta na\u021bional\u0103 (de ex. MDL) AllowPartialPayment boolean Op\u021bional, implicit: false Indic\u0103 disponibilitatea de a efectua pl\u0103\u021bi par\u021biale pentru comand\u0103 unde suma poate fi zero sau mai mare. La setarea cu valoarea TRUE pl\u0103titorul poate achita integral (dac\u0103 proprietatea TotalAmoutDue are valoare setat\u0103) sau par\u021bial (pl\u0103titorul poate edita suma afi\u0219at\u0103). Dac\u0103 pl\u0103titorul achit\u0103 o parte din sum\u0103, atunci la cautarea repetat\u0103 a comanzii, prestatorul de servicii returneaz\u0103 detaliile comenzii spre plat\u0103 cu suma restant\u0103 (diferen\u021ba dintre costul serviciului \u0219i sumei/lor achitat\u0103/e) AllowAdvancePayment boolean Op\u021bional, implicit: false Indic\u0103 disponibilitatea comenzii de a fi achitat\u0103 \u00een avans cu o sum\u0103 mai mare dec\u00e2t cea indicat\u0103 CustomerType CustomerType Obligatoriu Indic\u0103 statutul pl\u0103titorului (persoan\u0103 fizic\u0103 sau persoan\u0103 juridic\u0103) pentru care a fost creat\u0103 comanda. Poate fi setat\u0103 una din urm\u0103toarele valori: Person sau Organization CustomerID string (13) Obligatoriu Sistemul informa\u021bional la prestatorul de servicii va indica identificatorul beneficiarului fie persoan\u0103 fizic\u0103 sau juridic\u0103 (de ex. IDNP sau IDNO).       Dac\u0103 beneficiarul nu de\u021bine INDP/IDNO se va indica seria \u0219i num\u0103rul pa\u0219aportului sau identificatorul oraganiza\u021biei din str\u0103in\u0103tate.       Dac\u0103 sistemul infoma\u021bional nu are dreptul sau posibilitatea de a colecta datele beneficiatului, atunci c\u00e2mpul va r\u0103m\u00e2ne vid. \u00cen acest caz S.I. MPay va colecta datele \u00een momentul achit\u0103rii. CustomerName string (60) Obligatoriu Numele pl\u0103titorului sau denumiearea institu\u021biei Lines array of OrderLine Obligatoriu, cel pu\u021bin un obiect de tip OrderLine Con\u021bine informa\u021bii structurate pentru detaliile comenzii setate \u00een proprietatea Lines.       Fiecare obiect de tip OrderLine, membru a propriet\u0103\u021bii Lines, con\u021bine informa\u021bii detaliate despre serviciul solicitat. O comand\u0103 poate de\u021bine mai multe servicii descrise in OrderLine. ServiceID string (36) Obligatoriu Identificatorul serviciului MPay Properties array of OrderProperty Op\u021bional Obiecte de tip OrderProperty adaug\u0103 informa\u021bii suplimentare aferente comenzii.       De ex. Informa\u021bii adi\u021bionale ale pl\u0103titorului cum ar fi termenul devalabilitate al vinietei \u00een sistemul informa\u021bional la prestatorul de servicii (Administra\u021bia Na\u021bional\u0103 a Drumurilor) OrderLine LineID string (36) Obligatoriu Identificatorul unic a obiectului OrderLine Reason string (50) Obligatoriu Descrierea serviciului aferent obiectului OrderLine.       De ex. Taxa pentru vinieta pe termen de 1 lun\u0103 AmountDue decimal Op\u021bional Suma datorat\u0103 serviciului. Suma trebuie s\u0103 coincid\u0103 cu valoarea din TotalAmoutDue \u00een cazul \u00een care comanda con\u021bine un singur obiect de tip OrderLine. Dac\u0103 comanda con\u021bine mai multe servicii atunci valoarea total\u0103 a propriet\u0103\u021bii AmoutDue din fiecare OrderLine trebuie s\u0103 conicid\u0103 cu valoarea din TotalAmoutDue.        AllowPartialPayments boolean Op\u021bional, implicit: cum este \u00een OrderDetails cu condi\u021bia c\u0103 acest OrderLine este unicul Indic\u0103 disponibilitatea achit\u0103rii par\u021biale per serviciu (OrderLine) AllowAdvancePayments boolean Op\u021bional, implicit: cum este \u00een OrderDetails cu condi\u021bia c\u0103 acest OrderLine este unicul Indic\u0103 disponibilitatea achit\u0103rii \u00een avans per serviciu (OrderLine) DestinationAccount PaymentAccount Obligatoriu Indic\u0103 contul trezorerial sau bancar \u00een care se vor debita banii. \u00cen cazul \u00een care valorile lipsesc, tranzac\u021bia nu va fi decontat\u0103 (transferat\u0103) Properties array of OrderProperty Op\u021bional Obiecte de tip OrderProperty adaug\u0103 informa\u021bii suplimentare aferente serviciului (OrderLine).       De ex. atunci c\u00e2nd pl\u0103ti\u021bi vinieta, o proprietate relevant\u0103 ar putea fi perioada de valabilitate inclus\u0103 ca detalii suplimentare pentru plata serviciului OrderProperty Name string (36) Obligatoriu Denumirea propriet\u0103\u021bii. Poate con\u021bine doar litere, cifre \u0219i spa\u021bii DisplayName string (36) Obligatoriu, implicit: RO Denumirea propriet\u0103\u021bii afi\u0219at\u0103 utilizatorului, obligatoriu \u00een limba RO        Limbi disponibile: RO, RU \u0219i EN Value string (255) Obligatoriu Valoarea propriet\u0103\u021bii afi\u0219at\u0103 utilizatorului, implicit \u00een limba RO Limbi disponibile: RO, RU \u0219i EN Modifiable boolean Op\u021bional, implicit: false Op\u021biunea care indic\u0103 faptul c\u0103 proprietatea poate fi modificat\u0103 de c\u0103tre pl\u0103titor \u00een sistemul prestatorului de serviciu p\u00e2n\u0103 la efectuarea pl\u0103\u021bii.       De exemplu: Num\u0103rul de \u00eenregistrare a vehiculului Required boolean Op\u021bional, implicit: false Op\u021biunea care indic\u0103 dac\u0103 proprietatea trebuie s\u0103 fie completat\u0103 de c\u0103tre pl\u0103titor Type string (36) Op\u021bional, implicit: string Orice \u0219ir de caractere"},{"location":"mservices/mpay/api_references/main/#confirmorderpayment","title":"ConfirmOrderPayment","text":"Structuri de date Tip Obligatoriu/Op\u021bional Descriere PaymentConfirmation ServiceID string (36) Obligatoriu Identificatorul serviciului MPay OrderKey string (36) Obligatoriu Indentificatorul comenzii la prestatorul de serviciu. InvoiceID string (36) Op\u021bional Identificatorul notei de plat\u0103 MPay PaidAt DateTime Obligatoriu Data \u0219i ora confirm\u0103rii pl\u0103\u021bi TotalAmount decimal Obligatoriu Suma total\u0103 a tranzac\u021bie Lines array of PaymentConfirmationLine Obligatoriu, cel pu\u021bin un obiect de tip PaymentConfirmationLine Con\u021bine informa\u021bii structurate pentru detaliile comenzii setate \u00een proprietatea Lines. Fiecare obiect de tip PaymentConfirmationLine, membru a propriet\u0103\u021bii Lines, con\u021bine informa\u021bii detaliate despre serviciul solicitat. O comand\u0103 poate de\u021bine mai multe servicii descrise in PaymentConfirmationLin Properties array of PaymentProperty Op\u021bional Obiecte de tip PaymentProperty adaug\u0103 informa\u021bii suplimentare aferente serviciului. ServiceID string (36) Obligatoriu Identificatorul serviciului MPay PaymentConfirmationLine LineID string (36) Obligatoriu Identificatorul unic a obiectului PaymentConfirmationLine Amount decimal Obligatoriu Suma tranzac\u021biei pentru serviciu DestinationAccount PaymentAccount Obligatoriu Indic\u0103 contul trezorerial sau bancar \u00een care au fost debita\u021bi banii. Properties array of PaymentProperty Op\u021bional Obiecte de tip PaymentProperty adaug\u0103 informa\u021bii suplimentare aferente serviciului. PaymentProperty Name string (36) Obligatoriu Numele propriet\u0103\u021bii Value string (255) Op\u021bional Valoarea propriet\u0103\u021bii"},{"location":"mservices/mpay/api_references/main/#paymentaccount","title":"PaymentAccount","text":"Structuri de date Tip Obligatoriu/Op\u021bional Descriere PaymentAccount ConfigurationCode string (36) Op\u021bional Identificatorul unei configura\u021bii de cont predefinite BankCode string (20) Obligatoriu Codul b\u0103ncii destinatare (de ex. TREZMD2X) BankFiscalCode string (20) Obligatoriu Codul fiscal al prestatorului de servicii (IDNO) BankAccount string (24) Obligatoriu Num\u0103rul contului bancar sau trezorerial al prestatorului de servicii (IBAN) BeneficiaryName string (60) Obligatoriu Denumirea beneficiarului (de ex. Administra\u021bia Na\u021bional\u0103 a Drumurilor)"},{"location":"mservices/mpay/api_references/main/#enumeratii","title":"Enumera\u021bii","text":"Membru Descriere Statutul Comenzii (OrderStatus) Active Comanda este activ\u0103 \u0219i poate fi achitat\u0103 Poate fi achitat\u0103 PartiallyPaid Comanda a fost achitat\u0103 par\u021bial sau \u00een avans. Pot fi efectuate tranzac\u021bii adi\u021bionale Poate fi achitat\u0103 Paid Comanda este achitat\u0103 integral Achitat\u0103 Completed Comanda este finalizat\u0103, adic\u0103 serviciul este prestat Nu poate fi achitat\u0103 Expired Comanda a expirat \u0219i nu poate fi achitat\u0103 Nu poate fi achitat\u0103 Cancelled Comanda este anulat\u0103 \u0219i nu poate fi achitat\u0103 Nu poate fi achitat\u0103 Refunding Comanda este \u00een proces de rambursare Nu poate fi achitat\u0103 Refunded Comanda a fost rambursat\u0103 Nu poate fi achitat\u0103 CustomerType Person Consumatorul este persoan\u0103 fizic\u0103 Organization Consumatorul este persoan\u0103 juridic\u0103 CurrencyCode MPay utilizeaz\u0103 codul de valute ISO 4217. Urm\u0103toarea list\u0103 este doar un subset al codurilor active. MDL Leu Moldovenesc EUR Euro USD Dolar American"},{"location":"mservices/mpay/api_references/pos_terminal/","title":"POS Terminal","text":""},{"location":"mservices/mpay/api_references/pos_terminal/#plati-prin-terminalul-pos","title":"Pl\u0103\u021bi prin terminalul POS","text":"<p>\u00cen cazul pl\u0103\u021bilor cu terminalul POS, mai \u00eent\u00e2i trebuie configurat terminalul POS \u0219i apoi sistemul informa\u021bional al prestatorului de servicii urmeaz\u0103 s\u0103 redirec\u021bioneze/deschid\u0103 browserul c\u0103tre pagina web de plat\u0103 a terminalului POS. WEB serviciul va comunica prin protocolul standard HTTP (HTTP / 1.1) \u0219i va acorda permisiunea de acces pentru IP-ul clientului (doar pe mediul test). Pentru a configura terminalele POS, urma\u021bi descrierea de mai jos:</p> Ac\u021biune Configurare POS terminal URL          Test https://testmpay.gov.md/PosTerminal/Configure         Prod https://mpay.gov.md/PosTerminal/Configure Descriere Accesa\u021bi adresa URL \u0219i urma\u021bi pa\u0219ii din ghidul de configurare. <p>Forma sau parametrii care urmeaz\u0103 s\u0103 fie expedia\u021bi pentru configurare \u00een MPay</p> Nume Tip Obligatoriu/Op\u021bional Descriere OrganizationName string Obligatoriu Denumirea prestatorului de servicii. OrganizationIdno string Obligatoriu Codul fiscal al prestatorului de servicii. OrganizationService string Op\u021bional Departamentul (dac\u0103 exist\u0103) care va presta serviciile pentru pl\u0103\u021bile ce vor fi \u00eencasate prin terminalul POS. Counter string Op\u021bional Num\u0103rul ghi\u0219eului din organiza\u021bie (dac\u0103 exist\u0103) care va presta serviciile pentru pl\u0103\u021bile ce vor fi \u00eencasate prin terminalul POS. TerminalId string Obligatoriu Identificatorul terminalului. VendorName string Obligatoriu Denumirea B\u0103ncii ce elibereaz\u0103 terminalul POS IntendedIp string Obligatoriu Adresa IP a loca\u021biei unde se efectueaz\u0103 plata la POS terminal. Acest IP trebuie ad\u0103ugat \u00een whitelist MPay. <p>Not\u0103:</p> <p>Pentru a finaliza configurarea terminalelor POS, asigura\u021bi-v\u0103 c\u0103 instala\u021bi driverele, puse la dispozi\u021bie de Banc\u0103.</p> <p>Pentru a efectua redirec\u021bionarea pentru tranzac\u021biile cu terminalul POS, urma\u021bi descrierea parametrilor implica\u021bi \u00een aceast\u0103 redirec\u021bionare.</p> Metoda POST URL Test:         - Dup\u0103 ServiceId \u0219i OrderKey            https://testmpay.gov.md/PosTerminal/Pay/{ServiceId}/{OrderKey}                  - sau dup\u0103 MPay InvoiceId            https://testmpay.gov.md/PosTerminal/PayInvoice/{InvoiceId}          Prod:         - Dup\u0103 ServiceId \u0219i OrderKey            https://mpay.gov.md/PosTerminal/Pay/{ServiceId}/{OrderKey}                  - sau dup\u0103 MPay InvoiceId            https://mpay.gov.md/PosTerminal/PayInvoice/{InvoiceId}          Descriere \u00cendruma\u021bi operatorul s\u0103 efectueze plata prin terminale POS. <p>Forma sau parametrii URL</p> Nume Tip Obligatoriu/Op\u021bional Descriere ServiceID string Obligatoriu Identificatorul serviciului MPay. OrderKey string Obligatoriu          Indentificatorul comenzii la prestatorul de serviciu.         Aceasta trebuie s\u0103 fie generat \u00een mod unic pentru fiecare comand\u0103."},{"location":"mservices/mpay/api_references/rest_api/","title":"MPay Frontend API","text":"<p>Comunicarea cu resursa API-ul al MPay Frontend are loc prin protocolul standard HTTP (HTTP /1.1) arfitectura REST. Accesul c\u0103tre API necesit\u0103 configurarea IP-ului public \u00een whitelist. Contractul tehnic (Swagger) al resursei API se g\u0103se\u0219te la adresele https://testmpay.gov.md:8443/openapi/index.html mediul de test \u0219i https://testmpay.gov.md:8443/openapi/index.html pentru mediul de produc\u021bie.</p>"},{"location":"mservices/mpay/api_references/rest_api/#obtineti-numarul-notei-de-plata-mpay-invoiceid","title":"Ob\u021bine\u021bi num\u0103rul notei de plat\u0103 MPay (InvoiceID)","text":"<p>Pentru a genera num\u0103rul notei de plat\u0103 MPay (InvoiceID), sistemul dvs informa\u021bional efectueaz\u0103 un apel REST.  Vede\u021bi descrierea parametrilor \u00een acest apel.</p> Metoda GET URL          Test: https://testmpay.gov.md:8443/api/invoices?serviceID={serviceID}&amp;orderKey={orderKey}         Prod: https://mpay.gov.md:8443/api/invoices?serviceID={serviceID}&amp;orderKey={orderKey} Descriere Prestatorul de servicii poate genera num\u0103rul notei de plat\u0103 MPay (InvoiceID) pentru a fi utilizat \u00een procesul de business (de ex. pentru a-l imprima sau \u00eenregistra \u00een sistemul propriu). <p>Forma sau parametrii URL</p> Nume Tip Obligatoriu/Op\u021bional Descriere ServiceID string Obligatoriu Identificatorul serviciului \u00een MPay OrderKey string Obligatoriu          Indentificatorul comenzii la prestatorul de serviciu. Aceasta trebuie s\u0103 fie generat \u00een mod unic pentru         fiecare comand\u0103 (cum ar fi cheia primar\u0103 sau alt tip de num\u0103r de referin\u021b\u0103).        Parametrii de ie\u0219ire n/a Array Op\u021bional Lista de InvoiceID-uri MPay (numere note de plat\u0103)"},{"location":"mservices/mpay/api_references/rest_api/#obtineti-nota-de-plata-mpay-in-format-pdf","title":"Ob\u021bine\u021bi nota de plat\u0103 MPay \u00een format PDF","text":"<p>Pentru a genera nota de plat\u0103 MPay \u00een format PDF, sistemul dvs informa\u021bional efectueaz\u0103 un apel REST. Vede\u021bi descrierea parametrilor \u00een acest apel.</p> Metoda GET URL          Test: https://testmpay.gov.md:8443/api/Invoices/GetPdfInvoiceBytes?serviceID={serviceId}&amp;orderKey={ordekey}         Prod: https://mpay.gov.md:8443/api/Invoices/GetPdfInvoiceBytes?serviceID={serviceId}&amp;orderKey={ordekey} Descriere Prestatorul de servicii poate genera nota de plat\u0103 MPay \u00een format PDF pentru a fi utilizat \u00een procesul de business (de ex. pentru a fi imprim\u0103). <p>Forma sau parametrii URL</p> Nume Tip Obligatoriu/Op\u021bional Descriere ServiceID string Obligatoriu Identificatorul serviciului \u00een MPay OrderKey string Obligatoriu          Indentificatorul comenzii la prestatorul de serviciu. Aceasta trebuie s\u0103 fie generat \u00een mod unic pentru         fiecare comand\u0103 (cum ar fi cheia primar\u0103 sau alt tip de num\u0103r de referin\u021b\u0103).        Parametrii de ie\u0219ire n/a Http Response Message Obligatoriu Nota de plat\u0103 \u00een format PDF se ob\u021bine ca HttpResponseMessage cu urm\u0103toarele propriet\u0103\u021bi:             <ol> <li>Content \u2013 stocheaz\u0103 PDF-ul ca byte array (1 byte = 8 bit)</li> <li>Headers - stocheaz\u0103 informa\u021biile despre content</li> </ol>             Headers au urm\u0103toarele propriet\u0103\u021bi:             <ol> <li>ContentLength - stocheaz\u0103 cantitatea de bytes a PDF-ului</li> <li>ContentType - specific\u0103 tipul content, care este \"application/octet-stream\"</li> <li>ContentDisposition - stocheaz\u0103 informa\u021biile despre fi\u0219ierul PDF. Proprietatea \u201eFileName\u201d, din obiectul ContentDisposition, are o valoare egal\u0103 cu \u201eNot\u0103 de plat\u0103 {invoiceID}.pdf\u201d, unde \u201einvoiceID\u201d este egal cu num\u0103rul notei de plat\u0103 MPay care a fost c\u0103utat\u0103.</li> </ol>"},{"location":"mservices/mpower/","title":"Introducere","text":""},{"location":"mservices/mpower/#contextul-mpower","title":"Contextul MPower","text":"<p>MPower este un portal public destinat persoanelor fizice \u0219i juridice de drept public \u0219i privat prin care se pot acorda, revoca, renun\u021ba \u0219i verifica \u00eemputerniciri de reprezentare.</p> <p>MPower ofer\u0103 posibilitatea de a verifica dac\u0103 persoana abilitat\u0103 (reprezentant) este \u00eemputernicit\u0103 de a ac\u021biona \u00een numele altei persoane fizice sau juridice (reprezentat) pe care o reprezint\u0103.</p>"},{"location":"mservices/mpower/#constrangeri","title":"Constr\u00e2ngeri","text":"<p>Serviciul este dependent de identitatea digital\u0103 a sistemelor ter\u021be.</p>"},{"location":"mservices/mpower/#terminologie","title":"Terminologie","text":"Termen Defini\u021bie \u00cemputernicirea de reprezentare (IR) Este actul juridic unilateral al unei persoane fizice sau persoane juridice de drept public sau de drept privat (reprezentat), creat \u00een cadrul SIA \"Power\", prin care aceasta abiliteaz\u0103 o alt\u0103 persoan\u0103 (reprezentant) s\u0103 o reprezinte \u0219i s\u0103 ac\u021bioneze \u00een raport cu ter\u021bii, \u00een numele \u0219i pe seama sa. Tip \u00eemputernicire Reprezint\u0103 lista de tipuri de \u00eemputerniciri pentru care se pot acorda \u00eemputerniciri de reprezentare prin intermediul MPower. Reprezentat Persoana fizic\u0103 sau persoana juridic\u0103 de drept public sau de drept privat care utilizeaz\u0103 SIA \u201eMPower\u201d pentru acordarea, vizualizarea sau revocarea \u00eemputernicirii de reprezentare; Reprezentant Persoana fizic\u0103 care \u00een baza unei \u00eemputerniciri de reprezentare creat\u0103 prin intermediul SIA \u201eMPower\u201d este \u00eemputernicit\u0103 s\u0103 ac\u021bioneze \u00een numele reprezentatului; Cosemnatar Persoan\u0103 fizic\u0103, \u00een calitate de persoan\u0103 ter\u021b\u0103, care utilizeaz\u0103 SIA \u201eMPower\u201d la acordarea \u00eemputernicirilor de reprezentare emise de Reprezentat pe numele Reprezentantului. Exist\u0103 doar \u00een anumite tipuri de \u00eemputerniciri; Prestator de servicii Persoana juridic\u0103 de drept public sau de drept privat pentru care \u00een contextul serviciilor ce le presteaz\u0103 este necesar s\u0103 fie create tipuri de \u00eemputerniciri definite. MPower Portal Registrul \u00eemputernicirilor de reprezentare destinat publicului larg Mpower Admin Aplica\u021bia de administrare a MPower. Portal destinat administratorilor MPower Aplica\u021bie MPower IDNP Num\u0103rul unic de identificare ale persoanelor fizice (\u00een RM) IDNO Num\u0103rul unic de identificare al unit\u0103\u021bilor de drept (\u00een RM) \u0218ablon Define\u0219te textul care se va afi\u0219a utilizatorului la crearea \u00eemputernicirii de reprezentare \u00een baza tipului de \u00eemputernicire selectat"},{"location":"mservices/mpower/api_references/","title":"Referin\u021be API","text":""},{"location":"mservices/mpower/api_references/#gestionarea-erorilor","title":"Gestionarea erorilor","text":"<p>\u00cen aten\u021bia dvs.</p> <p>Componenta MPower Client API va returna erorile REST API cu codul \u0219i cauza erorii, descrierile se vor afi\u0219a \u00een englez\u0103.</p> Codul erorii Descriere AuthenticationFailed Service consumer authentication process failed. See Authentication InvalidParameter Some input parameter is invalid. Please review the returned Fault Reason text and called operation description. 200 Success 400 Bad request, Validation failed. Check validation rules compliance 401 Unauthorized Access. Check authorization requirements 403 Forbidden. The requested action is not allowed for the transmitted ID 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#descrierea-metodelor-api","title":"Descrierea metodelor API","text":""},{"location":"mservices/mpower/api_references/#verifica-valabilitatea-imputernicirii","title":"Verific\u0103 valabilitatea \u00eemputernicirii","text":"<p>\u00cen aten\u021bia dvs.</p> <p>Deoarece metoda poate fi apelat\u0103 de mai multe ori \u00een diferite zile/ore, r\u0103spunsul poate varia, c\u0103ci la un anumit moment al apel\u0103rii \u00eemputernicirea de reprezentare poate s\u0103 nu fie valabil\u0103 ca urmare a expir\u0103rii, revoc\u0103rii, renun\u021b\u0103rii, suspend\u0103rii, etc.</p> Semn\u0103tura apelului GET /api/Authorization/check/Code-True-One Descriere \u00cen baza codului \u00eemputernicirii de reprezentare se returneaz\u0103 o \u00eenscriere, care atest\u0103 dac\u0103 \u00eemputernicirea de reprezentare este valabil\u0103 sau anulat\u0103. Parametri de intrare/ie\u0219ire Denumire Tip Descriere Query \"authorizationCode\" Codul unic de identificare al \u00eemputernicirii de reprezentare din 16 cifre. Response \"data\": =True sau False Dac\u0103 valoare returnat\u0103 este True atunci \u00eemputernicirea de reprezentare este valabil\u0103, dac\u0103 valoarea returnat\u0103 este False atunci \u00eemputernicirea de reprezentare este nevalabil\u0103. Faults Code Reason 200 Success 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#extrage-datele-imputernicirii","title":"Extrage datele \u00eemputernicirii","text":"Semn\u0103tura apelului GET /api/Authorization/check/Code-Details-One Descriere \u00cen baza codului \u00eemputernicirii de reprezentare se returneaz\u0103 o \u00eenscriere, cu o structur\u0103 de date despre detaliile \u00eemputernicirii de reprezentare identificate. Parametri de intrare/ie\u0219ire Denumire Tip Descriere Query \"authorizationCode\" Codul unic de identificare al \u00eemputernicirii de reprezentare din 16 cifre. Response AuthorizationDetails O structur\u0103 de date care con\u021bine detaliile \u00eemputernicirii de reprezentare identificate. Faults Code Reason 200 Success 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#extrage-datele-imputernicirii-dupa-tip","title":"Extrage datele \u00eemputernicirii dup\u0103 tip","text":"Semn\u0103tura apelului GET /api/Authorization/check/TypeCode-Valid-One Descriere \u00cen baza codului tipului de \u00eemputernicire, Idn1 \u0219i Idn2 se returneaz\u0103 o \u00eenscriere, cu o structur\u0103 de date care atest\u0103 dac\u0103 \u00eemputernicirea de reprezentare este valabil\u0103 sau anulat\u0103. Parametri de intrare/ie\u0219ire Denumire Tip Descriere Query AuthorizationTypeCodeQuery O structur\u0103 de date care con\u021bine detaliile \u00eemputernicirii care sunt identificate \u00een baza Cod-ului tipului de \u00eemputernicire. Response AuthorizationValid O structur\u0103 de date aferente \u00eemputernicirii de reprezentare care atest\u0103 valabilitatea acesteia : True sau False. Faults Code Reason 200 Success 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#extrage-datele-imputernicirii-dupa-indx","title":"Extrage datele \u00eemputernicirii dup\u0103 INDx","text":"Semn\u0103tura apelului GET /api/Authorization/check/Idn-Details-List Descriere \u00cen baza de IDNP sau IDNO returneaz\u0103 lista \u00eemputernicirilor de reprezentare. Parametri de intrare/ie\u0219ire Denumire Tip Descriere Query AuthorizationListQuery Identificarea de baza pe IDNP sau IDNO \u0219i op\u021bional cu o structura suplimentar\u0103 de date aferente \u00eemputernicirii de reprezentare. Response AuthorizationDetails O structur\u0103 de date care con\u021bine detaliile \u00eemputernicirilor de reprezentare. Faults Code Reason 200 Success 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#descarca-fisierul-imputernicirii","title":"Descarc\u0103 fi\u0219ierul \u00eemputernicirii","text":"Semn\u0103tura apelului GET /api/Authorization/file Descriere \u00cen baza codului \u00eemputernicirii de reprezentare se returneaz\u0103 o \u00eenscriere, cu o structur\u0103 de date ce con\u021bine fi\u0219ierul de \u00eemputernicire. Parametri de intrare/ie\u0219ire Denumire Tip Descriere Query authorizationCode O structur\u0103 de date care con\u021bine detaliile \u00eemputernicirii care sunt identificate \u00een baza codului \u00eemputernicirii Response AuthorizationFile O structur\u0103 de date care con\u021bine detaliile \u00eemputernicirilor de reprezentare. Faults Code Reason 200 Success 404 Not found. Check sent request data 500 A server error occurred. Missing connection with DB from other reasons than: 400 / 401 / 501. Contact the Administrator. 501 A server error occurred. Contact the Administrator."},{"location":"mservices/mpower/api_references/#structuri-de-date-query","title":"Structuri de date (Query)","text":"Membru Tip Obligatoriu/Op\u021bional Descriere AuthorizationTypeCodeQuery AuthorizationTypeCode String Obligator Se completeaz\u0103 codul tipului de \u00eemputernicire (Codul atribuit din Fi\u0219a-formular aprobat\u0103, 10 caractere \u2013 \u201eAT-xxxxxxx\u201d). AuthorizingIdn String Obligator Se completeaz\u0103 IDNP sau INDO al reprezentatului.       Va con\u021bine exact 13 caractere, trebuie s\u0103 con\u021bin\u0103 numai numere. AuthorizedIdn String Obligator Se completeaz\u0103 IDNP sau INDO al reprezentantului.       Va con\u021bine exact 13 caractere, trebuie s\u0103 con\u021bin\u0103 numai numere AuthorizationListQuery IDNx String Obligator Se va returna lista de \u00eemputerniciri de reprezentare acordate \u0219i primite de c\u0103tre IDNP-ul sau IDNO-ul completare (unde persoana fizic\u0103 sau juridic\u0103 are calitatea de reprezentat \u0219i reprezentant).       Va con\u021bine exact 13 caractere, trebuie s\u0103 con\u021bin\u0103 numai numere.       Se va compara s\u0103 fie identic cu AuthorizingContextIdn \u0219i AuthorizedIdn. Status Integer Op\u021bional Va filtra lista de \u00eemputerniciri de reprezentare acordate \u0219i primite conform statutului indicat.       Va con\u021bine codul statutului conform enumera\u021biilor indicate \u00een sec\u021biunea Enumera\u021bii.       Se va compara s\u0103 fie identic cu Authorization Status. AuthorizationTypeCode String Op\u021bional Se completeaz\u0103 codul tipului de \u00eemputernicire (Codul atribuit din Fi\u0219a-formular aprobat\u0103, 10 caractere \u2013 \u201eAT-xxxxxxx\u201d). StartDate String Op\u021bional Se vor afi\u0219a \u00eemputernicirile de reprezentare care au intrat \u00een vigoare \u00eencep\u00e2nd cu data indicat\u0103.       Constr\u00e2ngeri: valoare acestui c\u00e2mp nu poate fi \u00een viitor fa\u021b\u0103 de valoarea completat\u0103 \u00een c\u00e2mpul EndDate.       Timpul este setat UTC.       Exemplu: \"2020-09-28T10:35:16.879Z\". Se va compara s\u0103 fie mai mare sau egal ca AuthorizationValidFrom date (AuthorizationValidFrom reprezint\u0103 data intr\u0103rii \u00een vigoare a \u00eemputernicirii de reprezentare) AuthEndDateorizationTypeCode String Op\u021bional Se vor afi\u0219a \u00eemputernicirile de reprezentare care au expirat p\u00e2n\u0103 la data indicat\u0103.       Constr\u00e2ngeri: valoare acestui c\u00e2mp nu poate fi \u00een trecut fa\u021b\u0103 de valoarea completat\u0103 \u00een c\u00e2mpul StartDate.       Timpul este setat UTC.       Exemplu: \"2020-09-28T10:35:16.879Z\". Se va compara s\u0103 fie mai mare sau egal ca Authorization Valid To date (AuthorizationValidTo reprezint\u0103 data expir\u0103rii \u00eemputernicirii de reprezentare). GrantedByIdn String Op\u021bional Acest parametru va afi\u0219a lista de \u00eemputerniciri care au fost acordate de c\u0103tre IDNP/IDNO completat.       Constr\u00e2ngeri: Valoarea acestui c\u00e2mp trebuie s\u0103 fie diferit\u0103 de valoare c\u00e2mpului GrantedToIdn. Trebuie s\u0103 con\u021bin\u0103 13 caractere, toate caractere trebuie s\u0103 fie cifre. Se va compara s\u0103 fie egal cu AuthorizingContextIdn. GrantedToIdn String Op\u021bional Se va afi\u0219a lista de \u00eemputerniciri de reprezentare care au fost primite de la IDNP/IDNO completat.       Constr\u00e2ngeri: Valoarea acestui c\u00e2mp trebuie s\u0103 fie diferit\u0103 de valoare c\u00e2mpului GrantedByIdn. Trebuie s\u0103 con\u021bin\u0103 13 caractere, toate caractere trebuie s\u0103 fie cifre. Se va compara s\u0103 fie egal AuthorizedIdn. ItemsPerPage Integer Op\u021bional parametru specific\u0103 pagina care se va afi\u0219a. Implicit se afi\u0219eaz\u0103 \u00eenregistr\u0103rile de pe prima pagin\u0103.       Constr\u00e2ngeri: la completarea unui num\u0103r negativ sau zero, sistemul va returna \u00eemputernicirile de reprezentare de pe prima pagina, iar la completarea unui num\u0103r mai mare dec\u00e2t pagini, se vor afi\u0219a zero \u00eemputerniciri pe pagin\u0103."},{"location":"mservices/mpower/api_references/#structuri-de-date-response","title":"Structuri de date (Response)","text":"Membru Tip Obligatoriu/Op\u021bional Descriere AuthorizationCodeValid AuthorizationCode String Obligator Codul unic de identificare al \u00eemputernicirii de reprezentare. IsValid String Obligator True dac\u0103 este valabil\u0103       False dac\u0103 nu este valabil\u0103 AuthorizationDetails AuthorizationCode String Obligator Codul unic de identificare al \u00eemputernicirii de reprezentare. AuthorizationTypeCode String Obligator Codul tipului \u00eemputernicirii de reprezentare (conform Formularului aprobat). AuthorizingPartyType Integer Obligator ID-ul tipului reprezentatului, a se vedea enumera\u021biile conform sec\u021biunii Enumera\u021bii AuthorizingIdn String Obligator IDNP sau INDO al reprezentatului. AuthorizedPartyType Integer Obligator ID-ul tipului reprezentantului, a se vedea enumera\u021biile conform sec\u021biunii Enumera\u021bii AuthorizedIdn String Obligator IDNP sau INDO al reprezentantului. From String Obligator Dac\u0103 isValid=True -&gt; Data de c\u00e2nd este valabil\u0103 \u00eemputernicire de reprezentare.       Dac\u0103 isValid=False -&gt; Data de c\u00e2nd este suspendat\u0103 sau nevalabil\u0103 \u00eemputernicire de reprezentare.       Timpul este setat UTC. To String Obligator Dac\u0103 isValid=True -&gt; Data p\u00e2n\u0103 c\u00e2nd este valabil\u0103 \u00eemputernicire de reprezentare       Dac\u0103 isValid=False -&gt; \"null\".       Timpul este setat UTC. IsValid String Obligator True dac\u0103 este valabil\u0103       False dac\u0103 nu este valabil\u0103 AuthorizingPartyName String Obligator Prenumele \u0219i numele reprezentatului AuthorizedPartyName String Obligator Prenumele \u0219i numele reprezentantului AuthorizationTypeName String Obligator Denumirea tipului de \u00eemputernicire ServiceProviderIdno String Obligator INDO-ul prestatorului de servicii ServiceProviderName String Obligator Denumirea prestatorului de servicii AuthorizationFile content byte[] Obligator Con\u021binutul fi\u0219ierului ce con\u021bine date despre \u00eemputernicirea c\u0103utat\u0103 content-type String Obligator Tipul fi\u0219ierului \u00eemputernicirii. Implicit: \"application/pdf\""},{"location":"mservices/mpower/api_references/#enumeratii","title":"Enumera\u021bii","text":"Atribute Descriere AuthorizationGrantedType 1 IR care este Acordata de IDNx 2 IR care este Primit\u0103 de IDNx 3 IR care este Cosemnat\u0103 de IDNx AuthorizationStaus Draft IR este creat, dar nu este valabil None PendingAcceptance IR este acordat, dar necesit\u0103 acceptan\u021ba reprezentantului pentru a deveni valabil None Pending IR este acordat, dar va fi valabil la o dat\u0103 \u00een viitor None Valid IR este valabil \u0219i poate fi utilizat \u00een scop de reprezentare isValid=True Canceled IR este expirat, revocat sau s-a renun\u021bat isValid=False Suspended IR este suspendat isValid=False AuthorizingPartyType 1 Persoan\u0103 fizic\u0103 2 Persoan\u0103 juridic\u0103 AuthorizedPartyType 1 Persoan\u0103 fizic\u0103 2 Persoan\u0103 juridic\u0103 Status 1 \u00cemputernicirea de reprezentare care a fost salvat\u0103 \u00een schi\u021b\u0103 (nu este acordat\u0103) Draft 2 \u00cemputernicirea de reprezentare care a fost acordat\u0103, dar necesit\u0103 acceptarea reprezentantului pentru a fi valabil\u0103 PendingAcceptance 3 \u00cemputernicirea de reprezentare care a fost acordat\u0103, dar data de intrare \u00een vigoare este \u00een viitor PendingValidity 4 \u00cemputernicirea de reprezentare care este valabil\u0103. Valid 5 \u00cemputernicirea de reprezentare care este suspendat\u0103. Suspended 6 \u00cemputernicirea de reprezentare care nu este valabil\u0103 ca urmare a expir\u0103rii, renun\u021b\u0103rii, revoc\u0103rii Canceled"},{"location":"mservices/mpower/api_references/#exemple-de-apelari-a-metodelor-api","title":"Exemple de apel\u0103ri a metodelor API","text":""},{"location":"mservices/mpower/api_references/#get-apiauthorizationcheckcode-true-one","title":"GET /api/Authorization/check/Code-True-One","text":"RequestResponse <pre><code>curl -X GET \"https://mpower.staging.egov.md:8443/clients-api/api/Authorization/check/Code-True-One?AuthorizationCode=0200905142878268\" -H \"accept: text/plain\"\n</code></pre> <pre><code>{\n  \"data\": true,\n  \"success\": true,\n  \"messages\": []\n}\n</code></pre>"},{"location":"mservices/mpower/api_references/#get-apiauthorizationcheckcode-details-one","title":"GET /api/Authorization/check/Code-Details-One","text":"RequestResponse <pre><code>curl -X GET \"https://mpower.staging.egov.md:8443/clients-api/api/Authorization/check/Code-Details-One?AuthorizationCode=0200935852951597\" -H \"accept: text/plain\"\n</code></pre> <pre><code>{\n  \"data\": {\n    \"authorizationCode\": \"0200935852951597\",\n    \"authorizationTypeCode\": \"AT-2100025\",\n    \"authorizingPartyType\": 2,\n    \"authorizingIdn\": \"1009600026622\",\n    \"authorizedPartyType\": 1,\n    \"authorizedIdn\": \"2001003328546\",\n    \"fromDate\": \"2020-09-22T14:16:06.0932925\",\n    \"toDate\": \"2021-03-22T21:59:59.999\",\n    \"isValid\": true,\n    \"authorizingPartyName\": \"Esempla SRL\",\n    \"authorizedPartyName\": \"L CHIRI\u0162A\",\n    \"authorizationTypeName\": \"Ridicare original document\",\n    \"serviceProviderIdno\": \"1009600026622\",\n    \"serviceProviderName\": \"Companie SRL\"\n  },\n  \"success\": true,\n  \"messages\": []\n}\n</code></pre>"},{"location":"mservices/mpower/api_references/#get-apiauthorizationchecktypecode-valid-one","title":"GET /api/Authorization/check/TypeCode-Valid-One","text":"RequestResponse <pre><code>curl -X GET \"https://mpower.staging.egov.md:8443/clients-api/api/Authorization/check/TypeCode-Valid-One?AuthorizationTypeCode=AT-2100025&amp;AuthorizingIdn=1009600026622&amp;AuthorizedIdn=2001003328546\" -H \"accept: text/plain\"\n</code></pre> <pre><code>{\n  \"data\": {\n    \"authorizationCode\": \"0200935852951597\",\n    \"isValid\": true\n  },\n  \"success\": true,\n  \"messages\": []\n}\n</code></pre>"},{"location":"mservices/mpower/api_references/#get-apiauthorizationcheckidn-details-list","title":"GET /api/Authorization/check/Idn-Details-List","text":"<p>!NOT PROVIDED INTO PREVIOUS DOCUMENTATION </p>"},{"location":"mservices/mpower/api_references/#get-apiauthorizationfile","title":"GET /api/Authorization/file","text":"RequestResponse <pre><code>curl -X GET \"https://mpower.dev.egov.md:8443/clients-api/api/Authorization/file ? ?AuthorizationCode=0200905142878268\" \" -H \"accept: text/plain\"\n</code></pre> <pre><code>{\n  \"data\": {\n    \"content\": \"JVBERi0xLjcKJeLjz9MKNyAwIG9iago8PC9GaWx0ZXI\u2026\",\n    \"content-type\": \"application/pdf\"\n  },\n  \"success\": true,\n  \"messages\": []\n}\n</code></pre>"},{"location":"mservices/mpower/change_log/","title":"Jurnalul modific\u0103rilor","text":""},{"location":"mservices/mpower/change_log/#data-28042023","title":"Data: 28.04.2023","text":"<p>Versiunea: 2.2</p> <p>Metoda noua API:</p> <ul> <li>\"file\"</li> </ul>"},{"location":"mservices/mpower/change_log/#data-01102021","title":"Data: 01.10.2021","text":"<p>Versiunea: 2.1</p> <p>Metoda noua API:</p> <ul> <li>\"Idn-Details-List\"</li> </ul>"},{"location":"mservices/mpower/change_log/#data-01072021","title":"Data: 01.07.2021","text":"<p>Versiunea: 2.0</p> <p>Versiunea ini\u021bial\u0103, cu 3 metode API:</p> <ul> <li>\"Code-True-One\",</li> <li>\"Code-Details-One\",</li> <li>\"TypeCode-Valid-One\"</li> </ul>"},{"location":"mservices/mpower/integration_development/","title":"Implementarea integr\u0103rilor","text":""},{"location":"mservices/mpower/integration_development/#pentru-inceput","title":"Pentru \u00eenceput","text":""},{"location":"mservices/mpower/integration_development/#inregistrarea-sistemului-si-accesare-serviciului","title":"\u00cenregistrarea sistemului \u0219i accesare serviciului","text":"<p>MPower autentific\u0103 sistemele ter\u021be prin num\u0103rul de serie al certificatului. Sistemele ter\u021be urmeaz\u0103 s\u0103 fie \u00eenregistrarea \u00een MPass \u00eenainte de a chema metodele API.</p> <p>Metodele API ale MPower sunt accesibile numai adreselor IP \u00eenregistrate.</p> <p>Pentru a solicita accesul, prin email: suport.mpower@egov.md se vor expedia informa\u021bii cu privire la: adresa IP sau VPN-ul asociat unei adrese IP private \u0219i num\u0103rul de serie al certificatului.</p>"},{"location":"mservices/mpower/integration_development/#obtinerea-datelor-de-acces","title":"Ob\u021binerea datelor de acces","text":"<p>Pentru a realiza integrarea cu serviciul este necesar s\u0103 de\u021bine\u021bi certificate generate de c\u0103tre Serviciul Tehnologia Informa\u021biei \u0219i Securitate Cibernetic\u0103. Pentru detalii privind ob\u021binerea/prelungirea certificatului cheii publice v\u0103 rug\u0103m s\u0103 accesa\u021bi https://stisc.gov.md/ro/semnatura-electronica.</p>"},{"location":"mservices/mpower/integration_development/#mediile-serviciului","title":"Mediile serviciului","text":"<p>Integrarea are loc prin Rest API. Metodele API pot fi accesate prin mediul de test \u0219i mediul de produc\u021bie:</p> Mediul URL-ul serviciului MPower Test https://mpower.staging.egov.md:8443/clients-api/swagger/index.html Produc\u021bie https://mpower.gov.md:8443/clients-api/swagger/index.html <p>Important</p> <p>Este obligator de a realiza integr\u0103rile \u0219i test\u0103rile aferente pe mediul de test.</p>"},{"location":"mservices/mpower/integration_development/#integration-testing","title":"Integration testing","text":"<p>Test cases</p> <p>Here are some basic test cases that could be added to the test suite that integrates with MSign.</p>"},{"location":"mservices/mpower/integration_development/#case-1","title":"Case #1","text":"Test Case ID TC_FUNCT_01 Description Verify the successful integration of the e-Service and MSign Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select the first signing instrument and enter the data related to the selected instrument. Submit data. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail 3 Repeat previous step (Step2) for each available signing instrument. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail"},{"location":"mservices/mpower/integration_development/#case-2","title":"Case #2","text":"Test Case ID TC_FUNCT_02 Description Verify failed signing by cancelling the signature process Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select a signing instrument that asks for a PIN or confirmation while signing (such as Mobile Signature) and cancel the signing MSign displays that signature failed with a meaningful reason. Pass / Fail 3 Review the MSign message and click OK to continue The browser re-displays the e-Services page that clearly shows that the signature failed.       Note that calling GetSignResponse for this request will return a response with SignStatus = Failure Pass / Fail"},{"location":"mservices/mpower/integration_development/#case-3","title":"Case #3","text":"Test Case ID TC_FUNCT_03 Description Check sign request re-sending Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Go back to the e-Service page and click Sign button again. The MSign sign page is displayed to the user. Pass / Fail"},{"location":"mservices/mpower/integration_development/#case-4","title":"Case #4","text":"Test Case ID TC_FUNCT_04 Description Check correct error handling Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Use some invalid data (such as invalid ExpectedSigner.ID, invalid MSISDN) and click the Sign button. The e-Service displays some error message and does not redirect to MSign. Pass / Fail"},{"location":"mservices/mpower/integration_development/#case-5","title":"Case #5","text":"Test Case ID TC_FUNCT_05 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible successful signature verification result. Pass / Fail"},{"location":"mservices/mpower/integration_development/#case-6","title":"Case #6","text":"Test Case ID TC_FUNCT_06 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Modify the signed data, document or the actual signature (if possible) directly in the database or in the resulting binary files. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible failed signature verification result. Pass / Fail"},{"location":"mservices/mpower/integration_development/#integrations-review-and-audit","title":"Integrations review and audit","text":"<p>There are no special requirements related to integration review.</p>"},{"location":"mservices/mpower/interaction_scenarios/","title":"Scenarii de interac\u021biune","text":""},{"location":"mservices/mpower/interaction_scenarios/#autentificare-utilizator","title":"Autentificare utilizator","text":""},{"location":"mservices/mpower/interaction_scenarios/#autentificare-sistem","title":"Autentificare sistem","text":""},{"location":"mservices/mpower/security/","title":"Securitate","text":""},{"location":"mservices/mpower/security/#authentication","title":"Authentication","text":"<p>Toate apel\u0103rile MPower Clients API se pot face de c\u0103tre sistemele autentificate. Autentificarea se realizeaz\u0103 prin intermediul certificatului de autentificare.</p> <p>Informa\u021bii privind ob\u021binerea \u0219i \u00eenregistrarea certificatului se pot vedea \u00een Cap. 7 Implementare integr\u0103rilor.</p>"},{"location":"mservices/mpower/security/#autorizarea-accesului","title":"Autorizarea accesului","text":"<p>Pentru accesarea componentei MPower Clients API este necesar utilizarea certificatului de autentificare a sistemului emis de STISC \u0219i \u00eenregistrat de AGE \u00een MPass.</p> <p>MPower Client API va apela https://mpower.staging.egov.md:8443/clients-api/api/authorization/check/ \u0219i va folosi pentru autentificare certificatul sistemului care se integreaz\u0103 cu MPower. \u00cen calitate de r\u0103spuns se va primi o list\u0103 a drepturilor atribuite \u00een conformitate cu certificatul sistemului \u0219i ca urmare accesul se va realiza \u00een baza drepturilor alocate.</p> <p>Exemple configur\u0103ri \u00een MPass:</p> Set\u0103ri JSON <pre><code>{\n    \"AllowedEndpoints\": [\n        \"/api/Authorization/check/Code-True-One\",\n        \"/api/Authorization/check/Code-Details-One\",\n        \"/api/Authorization/check/TypeCode-Valid-One\",\n        \"/api/Authorization/check/Idn-Details-List\",\n    ],\n    \"ViewAllAuthorizations\": false\n}\n</code></pre> <p>Not\u0103</p> <p>\"AllowedEndpoints\" - specific\u0103 lista de endpoint-uri la care sistemul ter\u021b are acces.  \"ViewAllAuthorizations\" - true/false : true \u2013 este asigurat accesul la toate IR sau false \u2013 accesul la IR exclusiv al prestatorului de serviciu.</p>"},{"location":"mservices/mpower/security/#criptarea","title":"Criptarea","text":"<p>Comunicarea cu componenta MPower REST API este criptat\u0103 utiliz\u00e2nd protocolul standard TLS (HTTPS).</p>"},{"location":"mservices/msign/","title":"Introduction","text":"<p>MSign is a reusable and shared platform-level service the main scope of which is to facilitate the use of digital signature and simplify integrations with various digital signature instruments. This document describes the technical interfaces exposed by MSign for information systems that will use MSign as digital signature provider and verification utility. Its target audience is the development teams for those information systems. The document contains all of the relevant information required for a complete understanding of MSign from the integration point of view. It contains integrations development details, security considerations and an API reference. This document is also accompanied by a .NET sample that exemplify the main interaction scenario, i.e. requesting digital signature for a batch of contents.</p>"},{"location":"mservices/msign/#scope-and-target-audience","title":"Scope and target audience","text":"<p>This document describes the technical interfaces exposed by MSign for information systems that will use MSign as digital signatures provider and verification utility. Its target audience is the development teams for those information systems. The details related to various digital signature instruments integrated with MSign are out of scope of this document.</p>"},{"location":"mservices/msign/#notations","title":"Notations","text":"<p>This document contains several notation styles; the following details the styles that have a degree of significance beyond the purpose of communicating information: Yellow Highlighted Text \u2013 Text that is highlighted in yellow irrespective of font attributes (font type, italics, bold, underlined, etc.) means that the text is waiting clarification or verification. Red Bold Text \u2013 Text that is red in color and bold, defines an important piece of information that must be read. Italic Bold Text \u2013 Text that is bold and italic detail actual information or scripts that need to be executed, created, and copied from or to. Strikethrough Text \u2013 Text which is outdated and should be ignored</p>"},{"location":"mservices/msign/#glossary-of-terms","title":"Glossary of terms","text":"Term Definition PAdES PDF Advanced Electronic Signatures PAdES-T PAdES with timestamp field SOAP Simple Object Access Protocol XAdES XML Advanced Electronic Signatures XAdES-T XAdES with timestamp field"},{"location":"mservices/msign/#general-system-capabilities","title":"General system capabilities","text":"<p>MSign is a reusable and shared platform-level service the main scope of which is to facilitate the use of digital signature and simplify integrations with various digital signature instruments. MSign is used as intermediary between various information systems and digital signature instrument providers. Digital signature providers differ significantly from the integration point of view, exposing various APIs that might involve direct user interaction through the browser to access user\u2019s cryptographic device or use of cryptographic devices that are not directly connected to user\u2019s PC. MSign integrates with these providers, hides the differences and exposes a single unified interface to information systems that require digital signature integration. For actual signing, MSign exposes web pages that guide the user through digital signature instrument selection, instrument specific data input, actual signing progress and signing process result pages. For digital signature verification, MSign exposes a verification web service which integrates with various certification authorities to perform the actual verification, including certificate revocation checks.</p>"},{"location":"mservices/msign/#service-dependencies","title":"Service dependencies","text":"<p>MSign depends on the digital signature providers, so its availability and performance is directly influenced by the availability and performance delivered by the providers.</p>"},{"location":"mservices/msign/#protocols-and-standards","title":"Protocols and standards","text":"<p>MSign exposes WS-I Basic Profile 1.1 interoperable service over HTTPS which corresponds to basicHttpBinding in WCF. MSign uses SOAP faults for error reporting.</p>"},{"location":"mservices/msign/api_references/","title":"Referin\u021be API","text":""},{"location":"mservices/msign/api_references/#reguli-de-tratare-a-erorilor","title":"Reguli de tratare a erorilor","text":"<p>Pentru erorile rezultate din apelurile interfe\u021bei SOAP, MSign returneaz\u0103 fault-uri SOAP cu coduri de eroare \u0219i motive ale fault-ului, descrise \u00een limba englez\u0103 simpl\u0103. Dac\u0103 nu este returnat un fault SOAP de c\u0103tre MSign, consumatorul serviciului ar trebui s\u0103 considere c\u0103 rezultatul opera\u021biei returnate, conform contractului de serviciu MSign, este valid \u0219i poate fi utilizat direct, f\u0103r\u0103 verific\u0103ri suplimentare ale erorilor.</p> <p>Re\u021bine c\u0103 un SignResponse con\u021bine SignStatus, care poate avea valorile Pending, Failure sau Expired, ceea ce \u00eenseamn\u0103 c\u0103 nu sunt returnate rezultatele semn\u0103rii.</p> Fault Code Descriere AuthenticationFailed Procesul de autentificare al consumatorului de servicii a e\u0219uat. Vezi Authentication AuthorizationFailed Procesul de autorizare al consumatorului de servicii a e\u0219uat. Vezi Authorization InvalidParameter Unul dintre parametrii de intrare este invalid. Te rug\u0103m s\u0103 consul\u021bi mesajul Fault Reason returnat \u0219i descrierea opera\u021biei apelate. RequestNotFound ID-ul de cerere furnizat la apelul GetSignResponse nu a fost g\u0103sit de MSign. Este posibil s\u0103 fie incorect sau expirat (de exemplu, eliminat din baza de date online). <p>Consumatorii care folosesc limbaje de programare ce suport\u0103 blocuri try\u2026catch, trebuie s\u0103 gestioneze corect erorile ap\u0103rute la invocarea serviciului prin prinderea excep\u021biilor de tip SOAP Fault specifice framework-ului utilizat.</p>"},{"location":"mservices/msign/api_references/#operatiuni-ale-serviciului","title":"Opera\u021biuni ale serviciului","text":""},{"location":"mservices/msign/api_references/#postsignrequest","title":"PostSignRequest","text":"Semn\u0103tura apelului PostSignRequest: PostSignRequest(request: SignRequest): string Descriere Trimite o cerere de semn\u0103tur\u0103 pentru a fi semnat\u0103 ulterior. Structura de r\u0103spuns Un \u0219ir de caractere care reprezint\u0103 ID-ul cererii, ce poate fi folosit ulterior cu GetSignResponse. <p>Parametri de intrare</p> Nume Tip Descriere request SignRequest O structur\u0103 ce reprezint\u0103 cererea de semnare. <p>E\u0219u\u0103ri</p> Code Reason AuthenticationFailed Certificat de autentificare invalid furnizat, consumator de servicii necunoscut: {certificate serial number} InvalidParameter Unul dintre parametrii de intrare este invalid. Te rug\u0103m s\u0103 consul\u021bi mesajul Fault Reason returnat \u0219i descrierea opera\u021biei apelate."},{"location":"mservices/msign/api_references/#getsignresponse","title":"GetSignResponse","text":"Semn\u0103tura apelului GetSignResponse(requestID: string, language: string): SignResponse Descriere Ob\u021bine starea \u0219i rezultatul cererii de semnare corespunz\u0103toare. Structura de r\u0103spuns O structur\u0103 care con\u021bine starea \u0219i rezultatele semn\u0103turii. <p>Parametri de intrare</p> Nume Tip Descriere requestID string ID-ul cererii SignRequest transmis\u0103 anterior folosind opera\u021bia PostSignRequest. language string Limba utilizat\u0103 pentru localizarea r\u0103spunsului. Valori permise: \u201ero\u201d, \u201eru\u201d, \u201een\u201d. Pentru compatibilitate cu versiunile anterioare, acest parametru este op\u021bional, valoarea implicit\u0103 fiind \u201ero\u201d. <p>E\u0219u\u0103ri</p> Code Reason AuthenticationFailed Certificat de autentificare invalid furnizat, sistem necunoscut sau ne\u00eenregistrat: {certificate serial number} AuthorizationFailed Aceast\u0103 cerere de semnare nu a fost ini\u021biat\u0103 de acest sistem InvalidParameter Unul dintre parametrii de intrare este invalid. Te rug\u0103m s\u0103 consul\u021bi mesajul Fault Reason returnat \u0219i descrierea opera\u021biei apelate RequestNotFound Nu a putut fi g\u0103sit\u0103 o astfel de cerere"},{"location":"mservices/msign/api_references/#verifysignatures","title":"VerifySignatures","text":"Semnatura apelului VerifySignatures(request: VerificationRequest): VerificationResponse Descriere Solicit\u0103 verificarea unei semn\u0103turi. Deoarece procesul de verificare poate dura mai mult dec\u00e2t se anticipeaz\u0103, se recomand\u0103 invocarea acestei opera\u021bii \u00een mod asincron, astfel \u00eenc\u00e2t aplica\u021bia care o apeleaz\u0103 s\u0103 nu par\u0103 blocat\u0103. Structura de r\u0103spuns O structur\u0103 care con\u021bine rezultatul \u0219i informa\u021biile despre verificarea semn\u0103turii. <p>Parametri de intrare</p> Nume Tip Descriere request VerificationRequest O structur\u0103 care reprezint\u0103 cererea de verificare. <p>E\u0219u\u0103ri</p> Code Reason AuthenticationFailed Certificat de autentificare invalid furnizat sau consumator de servicii necunoscut: {certificate serial number} InvalidParameter Unul dintre parametrii de intrare este invalid. Te rug\u0103m s\u0103 consul\u021bi mesajul Fault Reason returnat \u0219i descrierea opera\u021biei apelate. RequestNotFound Nu a putut fi g\u0103sit\u0103 o astfel de cerere"},{"location":"mservices/msign/api_references/#structuri-de-date","title":"Structuri de date","text":"<p>Important. Ordinea \u00een care membrii sunt descri\u0219i mai jos este doar \u00een scop explicativ. Ordinea elementelor \u00een structurile XML actuale, a\u0219a cum este definit\u0103 \u00een WSDL, este alfabetic\u0103. Pentru o implementare corect\u0103, se recomand\u0103 utilizarea unui instrument de conversie automat\u0103 din WSDL c\u0103tre limbajul sau mediul t\u0103u de programare.</p> Membru Tip Obligatoriu/Op\u021bional Descriere SignRequest ContentDescription string (512) Op\u021bional, iplicit: are valoare exact\u0103 ca \u00een ShortContentDescription Descrierea con\u021binutului care urmeaz\u0103 a fi semnat. Afi\u0219at\u0103 pe paginile web MSign. ShortContentDescription string (90) Obligatoriu Descrierea scurt\u0103 a con\u021binutului ce urmeaz\u0103 a fi semnat. Afi\u0219at\u0103 pe telefonul mobil dac\u0103 se folose\u0219te semn\u0103tura mobil\u0103. SignatureReason string (255) Op\u021bional Motivul semn\u0103turii, de ex. Rezolu\u021bie, Aprobat, Revizuit etc. Aplicabil \u00een prezent doar pentru PDF. ContentType ContentType enumeration Obligatoriu Tipul con\u021binutului care urmeaz\u0103 a fi semnat. Contents Array de elemente SignContent Obligatoriu, cel pu\u021bin un element Setul efectiv de con\u021binuturi care urmeaz\u0103 a fi semnate. ExpectedSigner ExpectedSigner Optional Dac\u0103 este furnizat, MSign va verifica dac\u0103 semnatarul efectiv corespunde informa\u021biilor furnizate. SignResponse Status SignStatus enumeration Obligatoriu Starea cererii de semn\u0103tur\u0103 Message string (100) Op\u021bional, este prezent doar \u00een cazul cererilor cu statut Failure sau Expired Mesaj de e\u0219ec pentru cererea de semn\u0103tur\u0103, localizat conform parametrului de limb\u0103. Results Array de elemente SignResult Op\u021bional, prezent pentru cererile cu statut Pending Rezultatele semn\u0103turilor pentru cererea de semn\u0103tur\u0103 solicitat\u0103. VerificationRequest SignedContentType ContentType enumeration Obligatoriu Tipul con\u021binutului care a fost semnat anterior. Language string (2) Op\u021bional, implicit: ro Limba utilizat\u0103 pentru localizarea r\u0103spunsului. Valori permise: \u201ero\u201d, \u201eru\u201d, \u201een\u201d. Contents Array de elememente VerificationContent Obligatoriu, cel pu\u021bin un element Setul efectiv de semn\u0103turi care trebuie verificate. VerificationResponse Results Array de elemente VerificationResult Obligatoriu Rezultatele verific\u0103rii pentru cererea de verificare. SignRequest CorrelationID string (36) Op\u021bional ID-ul de corelare pentru acest con\u021binut. Trebuie s\u0103 fie unic \u00een cadrul unei cereri de semn\u0103tur\u0103. MultipleSignatures Bool Op\u021bional, implicit: false Specific\u0103 dac\u0103 con\u021binutul poate avea mai multe semn\u0103turi (ex. poate fi co-semnat). Momentan aplicabil doar pentru PDF. Name string (256) Op\u021bional Numele fi\u0219ierului PDF; pentru Hash aceast\u0103 proprietate este redundant\u0103. Content Array de bi\u021bi Obligatoriu Con\u021binutul efectiv care urmeaz\u0103 a fi semnat. \u00cen prezent, poate fi un hash SHA1 de 20 de octe\u021bi sau un fi\u0219ier PDF. ExpectedSigner ID String Obligatoriu Num\u0103rul de identificare personal\u0103 al semnatarului a\u0219teptat.       Not\u0103: dac\u0103 nu este furnizat, utilizatorul va fi \u00eentrebat la semnarea PDF-ului cu semn\u0103tur\u0103 mobil\u0103. DelegatorType DelegatorType enumeration Op\u021bional, implicit: None Tipul delegatarului. DelegatorID String Obligatoriu \u00een cazul \u00een care DelegatorType este diferit dec\u00e2t None Identificatorul persoanei sau organiza\u021biei pe care semnatarul a\u0219teptat o reprezint\u0103 (prin delegare). DelegatedRoleID Int Op\u021bional, implicit: 0 Rolul semnatarului a\u0219teptat \u00een raport cu delegatarul. SignResult CorrelationID string (36) Op\u021bional, prezent dac\u0103 a fost trimis \u00een  din SignRequest ID-ul de corelare pentru con\u021binutul semnat, a\u0219a cum a fost furnizat ini\u021bial \u00een SignContent. Certificate Array de bi\u021bi Op\u021bional, present dac\u0103 semn\u0103tura a avut loc cu succes Certificatul semnatarului \u00een format X509 v3. Signature Array de bi\u021bi Op\u021bional, present dac\u0103 semn\u0103tura a avut loc cu succes Pentru con\u021binut de tip hash: semn\u0103tura digital\u0103 efectiv\u0103 \u00een format XAdES-T; pentru PDF: documentul PDF semnat. VerificationContent CorrelationID string (36) Op\u021bional ID-ul de corelare pentru acest con\u021binut. Trebuie s\u0103 fie unic \u00een cadrul unei cereri de verificare. Content Array de bi\u021bi Obligatoriu, doar pentru con\u021binutul Hash. Hash-ul care a fost semnat ini\u021bial. Acest parametru este necesar doar pentru verificarea semn\u0103turilor hash. Valoarea sa este necesar\u0103 pentru o verificare complet\u0103. Signature Array de bi\u021bi Obligatoriu Semn\u0103tura efectiv\u0103 care trebuie verificat\u0103. Trebuie s\u0103 fie un XAdES sau un PDF semnat. VerificationResult CorrelationID string (36) Op\u021bional, este prezent dac\u0103 a fost trimis \u00een VerificationContent ID-ul de corelare pentru con\u021binutul verificat, a\u0219a cum a fost furnizat ini\u021bial \u00een VerificationContent. SignaturesValid Bool Obligatoriu Returneaz\u0103 true dac\u0103 toate semn\u0103turile aplicate con\u021binutului sunt valide. Message string (100) Obligatoriu Mesajul rezultat al verific\u0103rii, localizat conform VerificationRequest.Language. Certificates Array de elemente VerificationCertificate Op\u021bional, present dac\u0103 a fost identificat cel pu\u021bin un certificat \u00een semn\u0103tur\u0103 Lista certificatelor (unul pentru fiecare hash semnat \u00een cazul XAdES) ale semnatarilor. Returnate \u00een scop de afi\u0219are. VerificationCertificate SignatureValid Bool Obligatoriu Returneaz\u0103 true dac\u0103 semn\u0103tura corespunz\u0103toare acestui certificat este valid\u0103. Subject string (250) Obligatoriu Detalii despre subiect din certificat. Returnate pentru afi\u0219are. Certificate Array de bi\u021bi Obligatoriu Certificatul semnatarului \u00een format X509 v3. SignedAt Datetime Op\u021bional Data \u0219i ora semn\u0103turii. Returnat\u0103 doar dac\u0103 a fost aplicat un timestamp valid."},{"location":"mservices/msign/api_references/#enumerations","title":"Enumerations","text":"Membru Descriere ContentType Hash Con\u021binutul care urmeaz\u0103 a fi semnat este un hash SHA1. Pdf Con\u021binutul care urmeaz\u0103 a fi semnat este un fi\u0219ier PDF. DelegatorType None Nu exist\u0103 un delegatar. Person Delegatarul este o persoan\u0103. Organization Delegatarul este o organiza\u021bie. SignStatus Pending Semnarea este \u00een a\u0219teptare. Success Semnarea s-a \u00eencheiat \u0219i semn\u0103tura este valid\u0103. Failure Semnarea a e\u0219uat. Cererea de semn\u0103tur\u0103 nu mai este valabil\u0103. Expired Cererea de semn\u0103tur\u0103 a expirat. Cererea de semn\u0103tur\u0103 nu mai este valabil\u0103."},{"location":"mservices/msign/api_references/#integrarea-web","title":"Integrarea Web","text":""},{"location":"mservices/msign/api_references/#apelul-de-semnare","title":"Apelul de semnare","text":"Metoda de apelare POST (recomandat) sau GET URL https://msign.gov.md/{requestID} Descriere Direc\u021bioneaz\u0103 utilizatorul pentru a efectua semnarea propriu-zis\u0103. Observ\u0103 c\u0103 requestID-ul este \u00eencorporat \u00een URL-ul metodei. <p>Form POST or URL parameters</p> Nume Tip Obligatoriu/Op\u021bional Descriere ReturnUrl string Obligatoriu URL-ul care va primi rezultatul semn\u0103rii tranzac\u021biei Instrument string Op\u021bional, nu este recomandat Instrumentul de semnare care va fi utilizat, adic\u0103 se omite pagina de selec\u021bie a instrumentului. Valori permise: \u201emobile\u201d, \u201emoldsign\u201d, \u201enationalid\u201d, \u201esecuresign\u201d, \u201etax\u201d.        Not\u0103: pentru ca instrumentul \u201emobile\u201d s\u0103 func\u021bioneze f\u0103r\u0103 selec\u021bie, trebuie s\u0103 furnizezi MSISDN \u0219i ExpectedSigner.ID al semnatarului a\u0219teptat. MSISDN string ce con\u021bine cifre Op\u021bional Num\u0103rul de telefon mobil al semnatarului a\u0219teptat, dac\u0103 este cunoscut RelayState string Op\u021bional \u0218ir op\u021bional care va fi returnat \u00eenapoi nemodificat dup\u0103 semnare lang string Op\u021bional Limba utilizat\u0103 de interfa\u021ba MSign. Valori permise: \u201ero\u201d, \u201eru\u201d, \u201een\u201d"},{"location":"mservices/msign/api_references/#apelul-de-callback-pentru-semnare","title":"Apelul de callback pentru semnare","text":"Method\u0103 POST URL Adresa ReturnUrl furnizat\u0103 \u00een cererea de semnare. Descriere Redirec\u021bioneaz\u0103 utilizatorul c\u0103tre sistemul informa\u021bional care a solicitat semn\u0103tura, inform\u00e2nd \u00een acela\u0219i timp sistemul c\u0103 procesarea SignRequest s-a \u00eencheiat. Acest URL este accesat doar dup\u0103 ce rezultatul semn\u0103rii este cunoscut (adic\u0103 SignStatus este fie Failure, fie Success). <p>Parametrii din Form</p> Nume Tip Obligatoriu/Op\u021bional Descriere RequestID string Obligatoriu ID-ul cererii SignRequest finalizate RelayState string Op\u021bional, nu este recomndat Valoarea RelayState nemodificat\u0103, a\u0219a cum a fost trimis\u0103 \u00een cerere"},{"location":"mservices/msign/api_references/#exemple-de-mesaje-soap","title":"Exemple de mesaje SOAP","text":"<p>Implementare manual\u0103</p> <p>Vom prezenta aici exemple de mesaje SOAP schimbate. Acestea pot fi utile pentru cei care integreaz\u0103 cu MSign, dar nu ofer\u0103 suport complet pentru generarea de proxy-uri de servicii pe baz\u0103 de WSDL.</p>"},{"location":"mservices/msign/api_references/#metoda-postsignrequest","title":"Metoda: PostSignRequest","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/PostSignRequest&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;PostSignRequest xmlns=\"https://msign.gov.md\"&gt;\n      &lt;request xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;ContentDescription&gt;Sample long description&lt;/ContentDescription&gt;\n        &lt;ContentType&gt;Hash&lt;/ContentType&gt;\n        &lt;Contents&gt;\n          &lt;SignContent&gt;\n            &lt;Content&gt;ZhKVycv51rL2QoQUUEqN7tMCBkE=&lt;/Content&gt;\n            &lt;CorrelationID&gt;3408cc344e474a529f3425176a75d08e&lt;/CorrelationID&gt;\n          &lt;/SignContent&gt;\n        &lt;/Contents&gt;\n        &lt;ShortContentDescription&gt;MSign Sample.&lt;/ShortContentDescription&gt;\n      &lt;/request&gt;\n    &lt;/PostSignRequest&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;PostSignRequestResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;PostSignRequestResult&gt;eec7709d372b41109e2ea3e200e99727&lt;/PostSignRequestResult&gt;\n    &lt;/PostSignRequestResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"},{"location":"mservices/msign/api_references/#metoda-getsignresponse","title":"Metoda: GetSignResponse","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/GetSignResponse&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;GetSignResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;requestID&gt;eec7709d372b41109e2ea3e200e99727&lt;/requestID&gt;\n      &lt;language&gt;en&lt;/language&gt; \n    &lt;/GetSignResponse&gt; \n  &lt;/s:Body&gt; \n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;GetSignResponseResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;GetSignResponseResult xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Results&gt;\n          &lt;SignResult&gt;\n            &lt;Certificate&gt;MIIG\u2026 &lt;/Certificate&gt;\n            &lt;CorrelationID&gt;3408cc344e474a529f3425176a75d08e&lt;/CorrelationID&gt;\n            &lt;Signature&gt;PD94\u2026 &lt;/Signature&gt;\n          &lt;/SignResult&gt;\n        &lt;/Results&gt;\n        &lt;Status&gt;Success&lt;/Status&gt;\n      &lt;/GetSignResponseResult&gt;\n    &lt;/GetSignResponseResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"},{"location":"mservices/msign/api_references/#metoda-verifysignatures","title":"Metoda: VerifySignatures","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/VerifySignatures&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;VerifySignatures xmlns=\"https://msign.gov.md\"&gt;\n      &lt;request xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Contents&gt;\n          &lt;VerificationContent&gt;\n            &lt;Content&gt;ZhKVycv51rL2QoQUUEqN7tMCBkE=&lt;/Content&gt;\n            &lt;CorrelationID&gt;bd73ed7eabc44ab290b18181a9e7fd2b&lt;/CorrelationID&gt;\n            &lt;Signature&gt;PD94\u2026 &lt;/Signature&gt;\n          &lt;/VerificationContent&gt;\n        &lt;/Contents&gt;\n        &lt;Language&gt;en&lt;/Language&gt;\n        &lt;SignedContentType&gt;Hash&lt;/SignedContentType&gt;\n      &lt;/request&gt;\n    &lt;/VerifySignatures&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;VerifySignaturesResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;VerifySignaturesResult xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Results&gt;\n          &lt;VerificationResult&gt;\n            &lt;Certificates&gt;\n              &lt;VerificationCertificate&gt;\n                &lt;Certificate&gt;MIIG\u2026 &lt;/Certificate&gt;\n                &lt;SignatureValid&gt;true&lt;/SignatureValid&gt;\n                &lt;Subject&gt;O=Centrul de Guvernare Electronic\u0103 (e-government) 1010600034203, OU=IT, C=MD, PostalCode=MD-2033, T=Functia, STREET=Pia\u021ba Marii Adun\u0103ri Na\u021bionale 1, Phone=022250234, S=Republica Moldova, L=Chi\u0219in\u0103u, SERIALNUMBER=IDNP, CN=Nume Prenume&lt;/Subject&gt;\n              &lt;/VerificationCertificate&gt;\n            &lt;/Certificates&gt;\n            &lt;CorrelationID&gt;bd73ed7eabc44ab290b18181a9e7fd2b&lt;/CorrelationID&gt;\n            &lt;Message&gt;The signature is valid&lt;/Message&gt;\n            &lt;SignaturesValid&gt;true&lt;/SignaturesValid&gt;\n          &lt;/VerificationResult&gt;\n        &lt;/Results&gt;\n      &lt;/VerifySignaturesResult&gt;\n    &lt;/VerifySignaturesResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"},{"location":"mservices/msign/change_log/","title":"Change Log","text":""},{"location":"mservices/msign/change_log/#date-september-15-2020","title":"Date: September 15, 2020","text":"<p>Version: 1.7</p> <p>Changed test platform address from testmsign.gov.md to msign.staging.egov.md</p>"},{"location":"mservices/msign/change_log/#date-april-11-2016","title":"Date: April 11, 2016","text":"<p>Version: 1.6</p> <p>ExpectedSigner.ID is now not required for PDF signing. If not provided, it will be entered by the user on each signature request, so providing it is highly recommended.</p>"},{"location":"mservices/msign/change_log/#date-march-9-2015","title":"Date: March 9, 2015","text":"<p>Version: 1.5</p> <p>Added Expired SignStatus. Added optional Language property to VerificationRequest and changed Message property in VerificationResult from VerificationMessage to a simple string. Added optional language parameter to GetSignResponse and added Message property to SignResponse.</p>"},{"location":"mservices/msign/change_log/#date-november-13-2014","title":"Date: November 13, 2014","text":"<p>Version: 1.4</p> <p>Added Instrument and lang parameters to forms integration. Added sample SOAP messages</p>"},{"location":"mservices/msign/change_log/#date-august-7-2014","title":"Date: August 7, 2014","text":"<p>Version: 1.3</p> <p>Added SignRequest.SignatureReason field</p>"},{"location":"mservices/msign/change_log/#date-july-16-2014","title":"Date: July 16, 2014","text":"<p>Version: 1.2</p> <p>Fixed some typos and added some clarifications</p>"},{"location":"mservices/msign/change_log/#date-april-22-2014","title":"Date: April 22, 2014","text":"<p>Version: 1.1</p> <p>Added SignedAt member to VerificationCertificate structure</p>"},{"location":"mservices/msign/change_log/#date-march-19-2014","title":"Date: March 19, 2014","text":"<p>Version: 1.0</p> <p>Completed Glossary of terms</p>"},{"location":"mservices/msign/change_log/#date-january-30-2014","title":"Date: January 30, 2014","text":"<p>Version: 0.4</p> <p>Added signature verification operation, test cases and structures</p>"},{"location":"mservices/msign/change_log/#date-november-8-2013","title":"Date: November 8, 2013","text":"<p>Version: 0.3</p> <p>SignResponse.Results is now also returned for Failed requests</p>"},{"location":"mservices/msign/change_log/#date-october-15-2013","title":"Date: October 15, 2013","text":"<p>Version: 0.2</p> <p>Added Pdf as ContentType and MultipleSignatures field</p>"},{"location":"mservices/msign/change_log/#date-may-27-2013","title":"Date: May 27, 2013","text":"<p>Version: 0.1</p> <p>Initial version</p>"},{"location":"mservices/msign/integration_development/","title":"Integration development","text":""},{"location":"mservices/msign/integration_development/#get-started","title":"Get started","text":""},{"location":"mservices/msign/integration_development/#consumer-registration-and-network-access","title":"Consumer registration and network access","text":"<p>MSign authenticates the clients by client certificate serial number. MSign service consumers must be registered in MSign before being able to call the API.</p> <p>MSign API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring routes and/or a VPN between the consumer and MSign.</p> <p>To register your consumer and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and the certificate serial number in your request.</p> <p>Obtaining credentials</p> <p>MSign accepts client certificates generated by Certification Authority of the Center of Special Telecommunications (https://pki.cts.md), by requesting a certificate for authentication.</p>"},{"location":"mservices/msign/integration_development/#obtaining-technical-contract","title":"Obtaining technical contract","text":"<p>The WSDL contract can be obtained from the following URL (base addresses are listed in System environments): /MSign.svc?singleWsdl</p> <p>(ToDo: load a WSDL/sample from current site)Note that accessing the contract requires valid credentials. An offline copy of the WSDL can be found in .NET Sample.</p>"},{"location":"mservices/msign/integration_development/#system-environments","title":"System environments","text":"<p>There are 2 services environments available: a testing and a production environment.</p> Environment MSign service URL Testing https://msign.staging.egov.md:8443/MSign.svc Production https://msign.gov.md:8443/MSign.svc <p>Important</p> <p>It is mandatory to develop the integrations and perform tests with the testing environment</p>"},{"location":"mservices/msign/integration_development/#integration-testing","title":"Integration testing","text":"<p>Test cases</p> <p>Here are some basic test cases that could be added to the test suite that integrates with MSign.</p>"},{"location":"mservices/msign/integration_development/#case-1","title":"Case #1","text":"Test Case ID TC_FUNCT_01 Description Verify the successful integration of the e-Service and MSign Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select the first signing instrument and enter the data related to the selected instrument. Submit data. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail 3 Repeat previous step (Step2) for each available signing instrument. The browser re-displays the e-Services page, requested signatures being successfully provided. Pass / Fail"},{"location":"mservices/msign/integration_development/#case-2","title":"Case #2","text":"Test Case ID TC_FUNCT_02 Description Verify failed signing by cancelling the signature process Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Select a signing instrument that asks for a PIN or confirmation while signing (such as Mobile Signature) and cancel the signing MSign displays that signature failed with a meaningful reason. Pass / Fail 3 Review the MSign message and click OK to continue The browser re-displays the e-Services page that clearly shows that the signature failed.       Note that calling GetSignResponse for this request will return a response with SignStatus = Failure Pass / Fail"},{"location":"mservices/msign/integration_development/#case-3","title":"Case #3","text":"Test Case ID TC_FUNCT_03 Description Check sign request re-sending Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Click the Sign button. The MSign sign page is displayed to the user. Pass / Fail 2 Go back to the e-Service page and click Sign button again. The MSign sign page is displayed to the user. Pass / Fail"},{"location":"mservices/msign/integration_development/#case-4","title":"Case #4","text":"Test Case ID TC_FUNCT_04 Description Check correct error handling Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Open the e-Service under test in a browser window. Go through the e-Service web pages, enter the data or upload the document to be signed and navigate to the page with Sign button, in order to perform the signing. Step Task Expected Result Actual Result 1 Use some invalid data (such as invalid ExpectedSigner.ID, invalid MSISDN) and click the Sign button. The e-Service displays some error message and does not redirect to MSign. Pass / Fail"},{"location":"mservices/msign/integration_development/#case-5","title":"Case #5","text":"Test Case ID TC_FUNCT_05 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible successful signature verification result. Pass / Fail"},{"location":"mservices/msign/integration_development/#case-6","title":"Case #6","text":"Test Case ID TC_FUNCT_06 Description Check valid signature verification functionality Applicable for List of browsers as specified in requirements Requirements REQ_FUNCT_XX Initial Conditions Sign some data or document in the integrated e-Service (i.e. follow TC_FUNCT_01) and navigate to the page with Verify button, in order to perform the verification. Modify the signed data, document or the actual signature (if possible) directly in the database or in the resulting binary files. Step Task Expected Result Actual Result 1 Click on Verify button. The e-Service displays a clearly visible failed signature verification result. Pass / Fail"},{"location":"mservices/msign/integration_development/#integrations-review-and-audit","title":"Integrations review and audit","text":"<p>There are no special requirements related to integration review.</p>"},{"location":"mservices/msign/interaction_scenarios/","title":"Interaction scenarios","text":""},{"location":"mservices/msign/interaction_scenarios/#signing-process","title":"Signing process","text":"<p>The most important integration scenario with MSign is requesting to sign a batch (or a single) digital content and getting the signature(s) back after user interaction.</p> <p>Remark. Sending a batch of digital content usually requires the user to enter the PIN for each signed content or, in the case of Mobile Signature, even to receive/send multiple SMS messages. Sending multiple contents for signing is practical only in cases when you know your users might have access to bulk messaging instruments, such as when using cryptographic tokens that cache the PIN for multiple use.</p> <p> </p> <p>Here is a short description of signing process using MSign:</p> <ol> <li>After completing a form, uploading a document to be signed (the Content), or selecting a batch of Contents, the User clicks a Sign button in its Browser.</li> <li>The e-Service prepares the Contents to be signed and/or computes a hash of each Content.</li> <li>The e-Service calls MSign API (PostSignRequest operation) with a SignRequest that represents a request to sign a batch of Contents.</li> <li>MSign validates and saves the SignRequest for later signing and returns a generated RequestID.</li> <li>E-Service instructs the Browser to show the MSign Sign Page for the provided sign request, providing a ReturnUrl. See Web forms integration for more details.</li> <li>The Browser fetches the Sign Page and shows it to User.</li> <li>The User interacts with the Sign Page to select a signing instrument and enter any data related to the selected instrument to perform the actual signing of the batch.</li> <li>MSign saves the resulting signatures for later retrieval.</li> <li>MSign instructs the browser to show the ReturnUrl, providing the RequestID. See Web forms integration for more details.</li> <li>When the Browser request the page indicated by ReturnUrl, the e-Service requests the actual SignResponse from MSign API (GetSignResponse operation). That response contains the signatures for all Contents provided in the SignRequest batch.</li> </ol>"},{"location":"mservices/msign/interaction_scenarios/#verification-process","title":"Verification process","text":"<p>MSign also exposes digital signature verification API. The verification process does not expose any user interface for integrated information systems.</p> <p>To verify a batch of signatures (or a single signature), call VerifySignatures and provide the signature to be checked.</p> <p>In the case of a XAdES signature (which results after signing a hash), please provide the original hash in the Content parameter and the signature (i.e. XAdES) in the Signature parameter. In the successful verification case, the result will contain a single certificate, i.e. the certificate of the signer.</p> <p>To verify PDF file signatures (PAdES), just pass the signed document in the Signature parameter. In the successful verification case, the result will contain the certificates for all individual signers.</p> <p>The result also contains a human readable message translated in multiple languages that the integrated systems shall display to the users.</p> <p>Due to the fact that the process of verification might take more time than expected, it is advised to invoke this verification operation asynchronously so that the invoking system does not appear as blocked to the users.</p>"},{"location":"mservices/msign/security/","title":"Security considerations","text":""},{"location":"mservices/msign/security/#authentication","title":"Authentication","text":"<p>All calls to MSign operations are authenticated by MSign. The authentication is performed by using the client certificate used for HTTPS transport.</p> <p>For information regarding obtaining a client certificate and registration, see Obtaining credentials and Consumer registration and network access.</p> <p>Important. The description of the process of installing, registering or explicitly trusting the obtained client certificate in the operating system or framework used by the integrating e-Service has to be done accordingly, is specific to that environment and it\u2019s out of the scope of this document.</p>"},{"location":"mservices/msign/security/#authorization","title":"Authorization","text":"<p>After successful authentication, all registered service consumers are authorized to invoke all of the exposed operations.</p> <p>In the case of requesting a SignResponse that was originally placed by another service consumer, MSign will return a fault with AuthorizationFailed fault code.</p>"},{"location":"mservices/msign/security/#encryption","title":"Encryption","text":"<p>All communication with MSign SOAP service is encrypted by using standard TLS protocol (HTTPS). The client certificate used to initiate the encrypted transport is also used for Authentication.</p>"},{"location":"en/","title":"Agen\u021bia de Guvernare Electronic\u0103","text":"<p>To be translated</p>"},{"location":"en/architecture/","title":"Architecture principles","text":"<p>Translate to En</p>"},{"location":"en/architecture/rest/","title":"Standardul REST","text":"<p>Translate to en</p>"},{"location":"en/architecture/soap/","title":"Soap standard","text":"<p>Translate to en</p>"},{"location":"en/architecture/devops/","title":"DevOps","text":"<p>Translate to En</p>"},{"location":"en/architecture/devops/helm/","title":"Helm","text":"<p>Translate to En</p>"},{"location":"en/mservices/","title":"MSuite","text":"<p>Despre produsele M*</p>"},{"location":"en/mservices/mconnect_events/integration_development/#client-credentials-and-network-access","title":"Client credentials and network access","text":"<p>Before being able to interact with MConnect Events, a client must be registered accordingly by the Service owner. To perform such a registration, please provide your system certificate. If you don\u2019t have one, you can request a system certificate for authentication from Information Technology and Cyber Security Service or E-Government Agency.</p> <p>For security reasons, the client MUST use a different certificate for integration with staging and production environments, and corresponding private keys MUST be kept as confidential as possible. MConnect Events does not require access to client private keys for integration.</p> <p>MConnect Events API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring routes and/or a VPN between the client and MConnect Events.</p> <p>To register a client and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and public key certificate.</p>"},{"location":"en/mservices/mconnect_events/integration_development/#personal-data-processing","title":"Personal data processing","text":"<p>MConnect Events logs details related to the consumption of events that include personal data. This requires the following details:</p> <ul> <li>Legal entity identifier (IDNO) \u2013 taken from consumer system registration.</li> <li>Legal basis for personal data processing \u2013 taken from consumer configuration (per source or event type) or extracted from each payload using configured JSON path.</li> <li>Legal reason for personal data processing \u2013 taken from consumer configuration (per source or event type) or extracted from event payload using configured JSON path.</li> <li>Personal data subject \u2013 extracted from event payload using configured JSON path</li> </ul> <p>As events are produced and then consumed without a consumer user\u2019s explicit request, the personal data processor is considered the consumer\u2019s system.</p>"},{"location":"en/mservices/mconnect_events/integration_development/#integration-checklists","title":"Integration checklists","text":"<p>Integrations MUST be developed and tested within the staging environment only. To ensure high availability, no performance, security or any other kind of tests are allowed on production environment.</p>"},{"location":"en/mservices/mconnect_events/integration_development/#the-following-is-a-general-checklist-for-any-client","title":"The following is a general checklist for any client:","text":"<ol> <li>Base address and client certificate are configurable.</li> <li>Client certificate private key is secure and differs between staging and production environments.</li> <li>Any intermediary certificate is sent with the client certificate during handshake.</li> <li>The IP address that is visible to MConnect Events is stable. The address can be a public Internet address or private one from government network.</li> <li>Internal procedure is set up to remind system administrators about certificate expiration in advance.</li> </ol>"},{"location":"en/mservices/mconnect_events/integration_development/#the-following-is-a-checklist-for-producers","title":"The following is a checklist for producers:","text":"<ol> <li>Producers implement an outbox pattern to ensure no events are skipped from being produced.</li> <li>Events have a correct URI set in CloudEvent source attribute.</li> <li>Events have unique identifiers set in CloudEvent id attribute per source.</li> <li>All producer instances from the same source have a consistent value set in CloudEvent time attribute.</li> <li>For events that require ordered consumption, the producer sets the partitionkey attribute corresponding to event payload. Partition keys should not be constant as this limits the scalability.</li> <li>Events that include personal data include enough information for logging personal data synchronization.</li> <li>Each event is not larger than 64 KB.</li> <li>Event batches are not larger than 1 MB.</li> </ol>"},{"location":"en/mservices/mconnect_events/integration_development/#the-following-is-a-checklist-for-consumers","title":"The following is a checklist for consumers:","text":"<ol> <li>Events consumption is properly confirmed, either individually or periodically.</li> <li>Events are consumed in an idempotent manner, i.e. processing already processed events do not result in double processing or do not create some additional business effect.</li> <li>Dead events are properly reported back to MConnect Events.</li> <li>Events shall not be considered dead for technical errors, for example due to Consumer network, database or some other component being temporarily inaccessible or in a wrong configuration. Events having a wrong structure are a good example of dead events.</li> <li>Consumers use WebSocket protocol.</li> <li>Consumers that use long polling for integration use the returned consumer instance base address without any interpretation.</li> <li>Consumers that use long polling for integration explicitly delete the instance when shutting down.</li> <li>Consumers reconnect when the WebSocket connection is lost or create another long-polling instance when the previous one expires.</li> <li>Consumer instances are scaled in divisors of 12.</li> <li>Consumers are monitored to run permanently or periodically to not miss events.</li> </ol>"},{"location":"en/mservices/mnotify/integration_development/#system-registration-and-network-access","title":"System registration  and network access","text":"<p>MNotify authenticates the client systems by client certificate serial number. MNotify clients must be registered in MNotify before being able to call the API.</p> <p>MNotify API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring a VPN and/or configuring routes between the consumer and MNotify.</p> <p>To register your consumer and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and the certificate in your request.</p> <p>Obtaining credentials</p> <p>MSign accepts client certificates generated by Certification Authority of the Center of Special Telecommunications (https://pki.cts.md), by requesting a certificate for authentication.</p>"},{"location":"en/mservices/mnotify/integration_development/#obtaining-technical-contract","title":"Obtaining technical contract","text":"<p>The technical contract can be obtained from the following URLs into the table. Before you can open them, confirm that the system certificate has been installed in your browser. On starting the browser you will be asked to provide a certificate; please select the system certificate. </p> Environment MSign service URL Testing https://mnotify.staging.egov.md:8443/api/swagger/index.html Production https://mnotify.gov.md:8443/api/swagger/index.html"},{"location":"en/mservices/mnotify/integration_development/#send-notification","title":"Send Notification","text":"Environment MSign service URL Testing https://mnotify.staging.egov.md:8443/api/swagger/index.html Production https://mnotify.gov.md:8443/api/swagger/index.html"},{"location":"en/mservices/mpay/","title":"Introduction","text":"<p>MPay ...</p>"},{"location":"en/mservices/mpower/integration_development/","title":"Integration development","text":""},{"location":"en/mservices/mpower/integration_development/#get-started","title":"Get started","text":""},{"location":"en/mservices/mpower/integration_development/#consumer-registration-and-network-access","title":"Consumer registration and network access","text":"<p>MSign authenticates the clients by client certificate serial number. MSign service consumers must be registered in MSign before being able to call the API.</p> <p>MSign API is accessible only to a registered set of IP addresses and, for security sensitive information systems, this means configuring routes and/or a VPN between the consumer and MSign.</p> <p>To register your consumer and get network access, please write a request by e-mail to the Service owner, providing your public IP address or the VPN assigned private IP address and the certificate serial number in your request.</p> <p>Obtaining credentials</p> <p>MSign accepts client certificates generated by Certification Authority of the Center of Special Telecommunications (https://pki.cts.md), by requesting a certificate for authentication.</p>"},{"location":"en/mservices/mpower/integration_development/#obtaining-technical-contract","title":"Obtaining technical contract","text":"<p>The WSDL contract can be obtained from the following URL (base addresses are listed in System environments): /MSign.svc?singleWsdl</p> <p>(ToDo: load a WSDL/sample from current site)Note that accessing the contract requires valid credentials. An offline copy of the WSDL can be found in .NET Sample.</p>"},{"location":"en/mservices/mpower/integration_development/#system-environments","title":"System environments","text":"<p>There are 2 services environments available: a testing and a production environment.</p> Environment MSign service URL Testing https://msign.staging.egov.md:8443/MSign.svc Production https://msign.gov.md:8443/MSign.svc <p>Important</p> <p>It is mandatory to develop the integrations and perform tests with the testing environment</p>"},{"location":"en/mservices/msign/api_references/","title":"API Reference","text":""},{"location":"en/mservices/msign/api_references/#error-handling-rules","title":"Error handling rules","text":"<p>For errors resulted for SOAP interface invocations, MSign returns SOAP faults with fault codes and fault reasons describing the fault in plain English. If there is no SOAP fault returned by MSign, the service consumer should expect that the returned operation result, according to MSign service contract, is valid and can be used directly without additional error checking.</p> <p>Note that a SignResponse contains SignStatus, which can have Pending, Failure or Expired values, meaning there is are no signing Results returned.</p> Fault Code Description AuthenticationFailed Service consumer authentication process failed. See Authentication AuthorizationFailed Service consumer authorization process failed. See Authorization InvalidParameter Some input parameter is invalid. Please review the returned Fault Reason text and called operation description. RequestNotFound The provided requestID when calling GetSignResponse was not found by MSign. It might be incorrect or expired (i.e. removed from online DB). <p>The consumers using programming languages that support try\u2026 catch blocks, catching framework specific SOAP Fault exceptions is the correct way to handle service invocation errors.</p>"},{"location":"en/mservices/msign/api_references/#service-operations","title":"Service operations","text":""},{"location":"en/mservices/msign/api_references/#postsignrequest","title":"PostSignRequest","text":"Signature PostSignRequest(request: SignRequest): string Description Post a signature request for later signing. Returns A string representing the request ID that can be later used with GetSignResponse. <p>Input parameters</p> Name Type Description request SignRequest A structure representing the signature request. <p>Faults</p> Code Reason AuthenticationFailed Invalid authentication certificate provided, Unknown service consumer: {certificate serial number} InvalidParameter Some input parameter is invalid. Please review the returned Fault Reason text and called operation description."},{"location":"en/mservices/msign/api_references/#getsignresponse","title":"GetSignResponse","text":"Signature GetSignResponse(requestID: string, language: string): SignResponse Description Get the status and result of the related signature request. Returns A structure that contains the status and signature results. <p>Input parameters</p> Name Type Description requestID string The ID of SignRequest posted earlier using PostSignRequest operation. language string The language to be used for response localization. Allowed values: \u201cro\u201d, \u201cru\u201d, \u201cen\u201d. For backward compatibility, this parameter is optional and the default value is \u201cro\u201d. <p>Faults</p> Code Reason AuthenticationFailed Invalid authentication certificate provided, Unknown or unregistered system: {certificate serial number} AuthorizationFailed This signature request was not initiated by this system InvalidParameter Some input parameter is invalid. Please review the returned Fault Reason text and called operation description RequestNotFound Cannot find such request"},{"location":"en/mservices/msign/api_references/#verifysignatures","title":"VerifySignatures","text":"Signature VerifySignatures(request: VerificationRequest): VerificationResponse Description Request signature verification. Due to the fact that the process of verification might take more time than expected, it is advised to invoke this operation asynchronously so that the invoking application does not appear as blocked. Returns A structure that contains the result and signature verification. <p>Input parameters</p> Name Type Description request VerificationRequest A structure representing the verification request. <p>Faults</p> Code Reason AuthenticationFailed Invalid authentication certificate provided or Unknown service consumer: {certificate serial number} InvalidParameter Some input parameter is invalid. Please review the returned Fault Reason text and called operation description. RequestNotFound Cannot find such request"},{"location":"en/mservices/msign/api_references/#structures","title":"Structures","text":"<p>Important. The order in which the members are described below is for description purposes only. The order of the elements in the actual XML structures, as defined in WSDL, is alphabetical. To get a correct implementation, it is recommended to use an automatic conversion tool from WSDL to your programming language or environment.</p> Member Type Required/Optional Description SignRequest ContentDescription string (512) Optional, default: same as ShortContentDescription The description of the content to be signed. Displayed by MSing web pages. ShortContentDescription string (90) Required The short description of the content to be signed. Displayed by mobile phone if Mobile Signature is used. SignatureReason string (255) Optional The reason for signature, e.g. Resolution, Approved, Reviewed, etc. Currently applicable to PDF only. ContentType ContentType enumeration Required The type of the content to be signed. Contents Array of SignContent Required, at least one element The actual batch of contents to be signed. ExpectedSigner ExpectedSigner Optional If provided, MSign will verify the actual signer to match the provided information. SignResponse Status SignStatus enumeration Required Signature request status Message string (100) Optional, returned for requests that have Failure or Expired status Signature request failure message, localized according to language parameter. Results Array of SignResult Available when Status is not Pending Signature results for the requested signature request. VerificationRequest SignedContentType ContentType enumeration Required The type of the content that was previously signed. Language string (2) Optional, default: ro The language to be used for response localization. Allowed values: \u201cro\u201d, \u201cru\u201d, \u201cen\u201d Contents Array of VerificationContent Required, at least one element The actual batch of signatures to be verified. VerificationResponse Results Array of VerificationResult Required Verification results for the verification request. SignRequest CorrelationID string (36) Optional The correlation ID for this content. Must be unique within a signature request. MultipleSignatures Bool Optional, default: false Specifies if the content could have multiple signatures (i.e. it can be co-signed). Currently, this setting applies only to PDF. Name string (256) Optional Name of the PDF file, for Hash this property is redundant. Content Array of byte Required The actual content to be signed. Currently this can be 20-bytes SHA1 hash or a PDF file. ExpectedSigner ID String Required Personal identifier number of the expected signer.       Note that if not provided, user will be asked to enter it when signing PDF using mobile signature. DelegatorType DelegatorType enumeration Optional, default: None The type of the delegator. DelegatorID String Required when DelegatorType is not None The identifier of the person or organization that the expected signer can represent (is delegated by). DelegatedRoleID Int Optional, default: 0 The role of the expected signer in relationship with the delegator. SignResult CorrelationID string (36) Returned as in SignContent The correlation ID for the signed content, as originally given in SignContent. Certificate Array of byte Optional, present if signature succeeded Certificate of the signer in X509 v3 format. Signature Array of byte Optional, present if signature succeeded For hash content type this is the actual digital signature in XAdES-T format, for PDF content type - the signed PDF document. VerificationContent CorrelationID string (36) Optional The correlation ID for this content. Must be unique within a verification request. Content Array of byte Required only for Hash content. The hash that was originally signed. Note that this parameter is required only for checking hash signatures. Its value is required for complete signature verification. Signature Array of byte Required The actual signature to be verified. This must be a XAdES or signed PDF. VerificationResult CorrelationID string (36) Returned as in VerificationContent The correlation ID for the verification content, as originally given in VerificationContent. SignaturesValid Bool Required Returned as true if all signatures applied to the content are valid. Message string (100) Required Verification result message, localized according to VerificationRequest.Language. Certificates Array of VerificationCertificate Optional, present if any certificates where identified in the signature The list of certificates (one for signed hash in XAdES case) of the signers. Returned for display purposes. VerificationCertificate SignatureValid Bool Required Returned as true if the signature corresponding to this certificate is valid. Subject string (250) Required Subject details from certificate. Returned as convenience for display purposes. Certificate Array of byte Required Certificate of the signer in X509 v3 format. SignedAt Datetime Optional Date and time of the signature. Returned only if a valid timestamp was applied."},{"location":"en/mservices/msign/api_references/#enumerations","title":"Enumerations","text":"Member Description ContentType Hash The content to be signed is a SHA1 hash. Pdf The content to be signed is a PDF file. DelegatorType None There is no delegator. Person The delegator is a person. Organization The delegator is an organization. SignStatus Pending The signing is pending. Success The signing is finished and the signature is valid. Failure The signing failed. The signature request is now invalid. Expired The signature request is expired. The signature request is now invalid."},{"location":"en/mservices/msign/api_references/#web-forms-integration","title":"Web forms integration","text":""},{"location":"en/mservices/msign/api_references/#signing-request","title":"Signing request","text":"Method POST (recommended) or GET URL https://msign.gov.md/{requestID} Description Direct user to perform the actual signing. Notice that the requestID is embedded in the method URL <p>Form or URL parameters</p> Name Type Required/Optional Description ReturnUrl string Required The URL that will receive the result of transaction signing Instrument string Optional and not recommended The signing instrument to be used, i.e. skipping signing instrument selection page. Allowed values: \u201cmobile\u201d, \u201cmoldsign\u201d, \u201cnationalid\u201d, \u201csecuresign\u201d, \u201ctax\u201d.        Note that for \u201cmobile\u201d instrument to work without instrument selection, you have to provide MSISDN and ExpectedSigner.ID of the expected signer. MSISDN string containing digits Optional The mobile phone number of the expected signer, if known RelayState string Optional Optional string that will be returned back unmodified after signing lang string Optional Language to be used by MSign user interface. Allowed values: \u201cro\u201d, \u201cru\u201d, \u201cen\u201d"},{"location":"en/mservices/msign/api_references/#signing-callback","title":"Signing callback","text":"Method POST URL The provided ReturnUrl in the signing request Description Redirects user to the information system that requested the signature, while informing the system about finished SignRequest processing. This Url is open only after the result of the signing is known (i.e. SignStatus is either Failure or Success). <p>Form parameters</p> Name Type Required/Optional Description RequestID string Required The ID of the finished SignRequest RelayState string Optional and not recommended The unmodified value of RelayState, as sent in request"},{"location":"en/mservices/msign/api_references/#soap-message-samples","title":"SOAP message samples","text":"<p>Manual implementation</p> <p>We will present here samples of exchanged SOAP messages. This might be useful for those that integrate with MSign but do not fully support WSDL-based service proxy generation.</p>"},{"location":"en/mservices/msign/api_references/#method-postsignrequest","title":"Method: PostSignRequest","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/PostSignRequest&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;PostSignRequest xmlns=\"https://msign.gov.md\"&gt;\n      &lt;request xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;ContentDescription&gt;Sample long description&lt;/ContentDescription&gt;\n        &lt;ContentType&gt;Hash&lt;/ContentType&gt;\n        &lt;Contents&gt;\n          &lt;SignContent&gt;\n            &lt;Content&gt;ZhKVycv51rL2QoQUUEqN7tMCBkE=&lt;/Content&gt;\n            &lt;CorrelationID&gt;3408cc344e474a529f3425176a75d08e&lt;/CorrelationID&gt;\n          &lt;/SignContent&gt;\n        &lt;/Contents&gt;\n        &lt;ShortContentDescription&gt;MSign Sample.&lt;/ShortContentDescription&gt;\n      &lt;/request&gt;\n    &lt;/PostSignRequest&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;PostSignRequestResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;PostSignRequestResult&gt;eec7709d372b41109e2ea3e200e99727&lt;/PostSignRequestResult&gt;\n    &lt;/PostSignRequestResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"},{"location":"en/mservices/msign/api_references/#method-getsignresponse","title":"Method: GetSignResponse","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/GetSignResponse&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;GetSignResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;requestID&gt;eec7709d372b41109e2ea3e200e99727&lt;/requestID&gt;\n      &lt;language&gt;en&lt;/language&gt; \n    &lt;/GetSignResponse&gt; \n  &lt;/s:Body&gt; \n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;GetSignResponseResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;GetSignResponseResult xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Results&gt;\n          &lt;SignResult&gt;\n            &lt;Certificate&gt;MIIG\u2026 &lt;/Certificate&gt;\n            &lt;CorrelationID&gt;3408cc344e474a529f3425176a75d08e&lt;/CorrelationID&gt;\n            &lt;Signature&gt;PD94\u2026 &lt;/Signature&gt;\n          &lt;/SignResult&gt;\n        &lt;/Results&gt;\n        &lt;Status&gt;Success&lt;/Status&gt;\n      &lt;/GetSignResponseResult&gt;\n    &lt;/GetSignResponseResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"},{"location":"en/mservices/msign/api_references/#method-verifysignatures","title":"Method: VerifySignatures","text":"request.xmlresponse.xml <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Header&gt;\n    &lt;Action s:mustUnderstand=\"1\" xmlns=\"http://schemas.microsoft.com/ws/2005/05/addressing/none\"&gt;https://msign.gov.md/IMSign/VerifySignatures&lt;/Action&gt;\n  &lt;/s:Header&gt;\n  &lt;s:Body&gt;\n    &lt;VerifySignatures xmlns=\"https://msign.gov.md\"&gt;\n      &lt;request xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Contents&gt;\n          &lt;VerificationContent&gt;\n            &lt;Content&gt;ZhKVycv51rL2QoQUUEqN7tMCBkE=&lt;/Content&gt;\n            &lt;CorrelationID&gt;bd73ed7eabc44ab290b18181a9e7fd2b&lt;/CorrelationID&gt;\n            &lt;Signature&gt;PD94\u2026 &lt;/Signature&gt;\n          &lt;/VerificationContent&gt;\n        &lt;/Contents&gt;\n        &lt;Language&gt;en&lt;/Language&gt;\n        &lt;SignedContentType&gt;Hash&lt;/SignedContentType&gt;\n      &lt;/request&gt;\n    &lt;/VerifySignatures&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre> <pre><code>&lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\n  &lt;s:Body&gt;\n    &lt;VerifySignaturesResponse xmlns=\"https://msign.gov.md\"&gt;\n      &lt;VerifySignaturesResult xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n        &lt;Results&gt;\n          &lt;VerificationResult&gt;\n            &lt;Certificates&gt;\n              &lt;VerificationCertificate&gt;\n                &lt;Certificate&gt;MIIG\u2026 &lt;/Certificate&gt;\n                &lt;SignatureValid&gt;true&lt;/SignatureValid&gt;\n                &lt;Subject&gt;O=Centrul de Guvernare Electronic\u0103 (e-government) 1010600034203, OU=IT, C=MD, PostalCode=MD-2033, T=Functia, STREET=Pia\u021ba Marii Adun\u0103ri Na\u021bionale 1, Phone=022250234, S=Republica Moldova, L=Chi\u0219in\u0103u, SERIALNUMBER=IDNP, CN=Nume Prenume&lt;/Subject&gt;\n              &lt;/VerificationCertificate&gt;\n            &lt;/Certificates&gt;\n            &lt;CorrelationID&gt;bd73ed7eabc44ab290b18181a9e7fd2b&lt;/CorrelationID&gt;\n            &lt;Message&gt;The signature is valid&lt;/Message&gt;\n            &lt;SignaturesValid&gt;true&lt;/SignaturesValid&gt;\n          &lt;/VerificationResult&gt;\n        &lt;/Results&gt;\n      &lt;/VerifySignaturesResult&gt;\n    &lt;/VerifySignaturesResponse&gt;\n  &lt;/s:Body&gt;\n&lt;/s:Envelope&gt;\n</code></pre>"}]}